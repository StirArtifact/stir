static	O
int	O
dbpair_user_nset	int
=	O
0	int
;	O
static	O
int	O
dbpair_group_nset	int
=	O
0	int
;	O
static	O
char	O
*	O
g_pwent_msg	array(*(char))
[	O
]	O
=	O
{	O
"user"	*(char)
,	O
"group"	*(char)
}	O
;	O
typedef	O
struct	O
{	O
long	O
int	O
idM	char
;	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
;	O
int	O
in_sysM	int
;	O
}	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
;	O
static	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
userCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
CACHE_LEN	int
]	O
=	O
{	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
}	O
;	O
static	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
groupCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
CACHE_LEN	int
]	O
=	O
{	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
-	O
1	int
}	O
}	O
;	O
static	O
size_t	long
split_long_name	(*(char),long)->(long)
(	O
const	O
char	O
*	O
name	*(char)
,	O
size_t	long
length	short
)	O
{	O
size_t	long
i	int
;	O
if	O
(	O
length	short
>	O
PREFIX_FIELD_SIZE	int
)	O
length	short
=	O
PREFIX_FIELD_SIZE	int
+	O
1	int
;	O
for	O
(	O
i	int
=	O
length	short
-	O
1	int
;	O
i	int
>	O
0	int
;	O
i	int
--	O
)	O
if	O
(	O
ISSLASH	O
(	O
name	*(char)
[	O
i	int
]	O
)	O
)	O
break	O
;	O
return	O
i	int
;	O
}	O
static	O
void	O
error_msg_control	(*(char),int,*(char))->(void)
(	O
char	O
*	O
name	*(char)
,	O
int	O
id	*(char)
,	O
char	O
*	O
dbname	*(char)
)	O
{	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
NULL	O
;	O
static	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
store	*(struct(*(char),*(char),int,int,int,char,int))
=	O
NULL	O
;	O
if	O
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
80	int
)	O
;	O
if	O
(	O
store	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
store	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
80	int
)	O
;	O
if	O
(	O
name	*(char)
)	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
"%s: %s name [%s] not found in system db\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
dbname	*(char)
,	O
name	*(char)
)	O
;	O
}	O
else	O
{	O
strob_sprintf	(*(struct(*(char),*(char),int,int,int,char,int)),int,*(char))->(int)
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
,	O
0	int
,	O
"%s: %s id [%d] not found in system db\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
dbname	*(char)
,	O
(	O
int	O
)	O
(	O
id	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
strstr	(*(char),*(char))->(*(char))
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
store	*(struct(*(char),*(char),int,int,int,char,int))
)	O
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
)	O
{	O
;	O
}	O
else	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
store	*(struct(*(char),*(char),int,int,int,char,int))
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
tmp	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
;	O
}	O
}	O
static	O
int	O
null_block	(*(long),int)->(int)
(	O
long	O
*	O
block	*(long)
,	O
int	O
size	long
)	O
{	O
register	O
long	O
*	O
p	*(char)
=	O
block	*(long)
;	O
register	O
int	O
i	int
=	O
size	long
/	O
sizeof	O
(	O
long	O
)	O
;	O
while	O
(	O
i	int
--	O
)	O
if	O
(	O
*	O
p	*(char)
++	O
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
void	O
dbcache_set	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int,int)->(void)
(	O
int	O
*	O
dbpair_plen	*(int)
,	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
char	O
*	O
name	*(char)
,	O
int	O
id	*(char)
,	O
int	O
in_sys	int
)	O
{	O
int	O
cell	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
*	O
dbpair_plen	*(int)
>=	O
CACHE_LEN	int
)	O
{	O
*	O
dbpair_plen	*(int)
=	O
1	int
;	O
cell	int
=	O
0	int
;	O
}	O
else	O
{	O
cell	int
=	O
*	O
dbpair_plen	*(int)
;	O
(	O
*	O
dbpair_plen	*(int)
)	O
++	O
;	O
}	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
cell	int
]	O
.	O
idM	char
=	O
id	*(char)
;	O
if	O
(	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
cell	int
]	O
.	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
{	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
cell	int
]	O
.	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
}	O
E_DEBUG3	O
(	O
"strcpy cell=[%d] id=[%d]"	*(char)
,	O
cell	int
,	O
(	O
int	O
)	O
id	*(char)
)	O
;	O
E_DEBUG3	O
(	O
"strcpy cell=[%d] name=[%s]"	*(char)
,	O
cell	int
,	O
name	*(char)
)	O
;	O
E_DEBUG3	O
(	O
"strcpy cell=[%d] in_sys=[%d]"	*(char)
,	O
cell	int
,	O
in_sys	int
)	O
;	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
cell	int
]	O
.	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
name	*(char)
)	O
;	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
[	O
cell	int
]	O
.	O
in_sysM	int
=	O
in_sys	int
;	O
}	O
static	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
dbcache_lookup	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int)->(*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))
(	O
int	O
*	O
dbpair_len	*(int)
,	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
char	O
*	O
name	*(char)
,	O
int	O
id	*(char)
)	O
{	O
int	O
i	int
;	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
*	O
dbpair_len	*(int)
;	O
i	int
++	O
)	O
{	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
=	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
+	O
i	int
;	O
if	O
(	O
name	*(char)
)	O
{	O
if	O
(	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
==	O
NULL	O
)	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
=	O
strob_open	(long)->(*(struct(*(char),*(char),int,int,int,char,int)))
(	O
32	int
)	O
;	O
if	O
(	O
strob_strcmp	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(int)
(	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
name	*(char)
)	O
==	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"found by name: %s in cache"	*(char)
,	O
name	*(char)
)	O
;	O
return	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
;	O
}	O
}	O
if	O
(	O
id	*(char)
>=	O
0	int
&&	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
idM	char
==	O
id	*(char)
)	O
{	O
E_DEBUG2	O
(	O
"found by id: %d in cache"	*(char)
,	O
(	O
int	O
)	O
id	*(char)
)	O
;	O
return	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
;	O
}	O
}	O
return	O
NULL	O
;	O
}	O
static	O
char	O
*	O
return_name_by_cache	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),int,*(int))->(*(char))
(	O
int	O
*	O
dbpair_len	*(int)
,	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
int	O
id	*(char)
,	O
int	O
*	O
is_in_sysdb	*(int)
)	O
{	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
;	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
=	O
dbcache_lookup	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int)->(*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
NULL	O
,	O
id	*(char)
)	O
;	O
if	O
(	O
!	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
return	O
NULL	O
;	O
*	O
is_in_sysdb	*(int)
=	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
in_sysM	int
;	O
return	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
snameM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
static	O
int	O
return_id_by_cache	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),*(int))->(int)
(	O
int	O
*	O
dbpair_len	*(int)
,	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
char	O
*	O
name	*(char)
,	O
int	O
*	O
is_in_sysdb	*(int)
)	O
{	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
;	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
=	O
dbcache_lookup	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int)->(*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
name	*(char)
,	O
-	O
1	int
)	O
;	O
if	O
(	O
!	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
return	O
-	O
1	int
;	O
*	O
is_in_sysdb	*(int)
=	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
in_sysM	int
;	O
return	O
pair	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
->	O
idM	char
;	O
}	O
static	O
char	O
*	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
long	O
uid	int
,	O
char	O
*	O
tarbuf	*(char)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
uid	int
)	O
;	O
if	O
(	O
!	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
tarbuf	*(char)
)	O
memset	(*(void),int,long)->(*(void))
(	O
tarbuf	*(char)
,	O
'\0'	O
,	O
SNAME_LEN	int
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
}	O
if	O
(	O
tarbuf	*(char)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tarbuf	*(char)
,	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
,	O
SNAME_LEN	int
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
)	O
;	O
return	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
;	O
}	O
static	O
int	O
l_cache_tar_getuidbyname	(*(char),*(long))->(int)
(	O
char	O
*	O
user	*(char)
,	O
long	O
*	O
puid	*(int)
)	O
{	O
int	O
ret	int
;	O
uid_t	int
id	*(char)
;	O
ret	int
=	O
taru_get_uid_by_name	(*(char),*(int))->(int)
(	O
user	*(char)
,	O
&	O
id	*(char)
)	O
;	O
*	O
puid	*(int)
=	O
(	O
long	O
)	O
id	*(char)
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
l_getuidbyname	(*(char),*(long))->(int)
(	O
char	O
*	O
user	*(char)
,	O
long	O
*	O
puid	*(int)
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwnam	(*(char))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
user	*(char)
)	O
;	O
if	O
(	O
!	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
return	O
-	O
1	int
;	O
}	O
*	O
puid	*(int)
=	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
;	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
long	O
gid	int
,	O
char	O
*	O
tarbuf	*(char)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getgrgid	(int)->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
gid	int
)	O
;	O
if	O
(	O
!	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
if	O
(	O
tarbuf	*(char)
)	O
memset	(*(void),int,long)->(*(void))
(	O
tarbuf	*(char)
,	O
'\0'	O
,	O
SNAME_LEN	int
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
""	*(char)
)	O
;	O
return	O
(	O
char	O
*	O
)	O
NULL	O
;	O
}	O
if	O
(	O
tarbuf	*(char)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tarbuf	*(char)
,	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
gr_name	*(char)
,	O
SNAME_LEN	int
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
gr_name	*(char)
)	O
;	O
return	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
gr_name	*(char)
;	O
}	O
static	O
int	O
l_cache_tar_getgidbyname	(*(char),*(long))->(int)
(	O
char	O
*	O
user	*(char)
,	O
long	O
*	O
pgid	*(long)
)	O
{	O
int	O
ret	int
;	O
gid_t	int
id	*(char)
;	O
ret	int
=	O
taru_get_gid_by_name	(*(char),*(int))->(int)
(	O
user	*(char)
,	O
&	O
id	*(char)
)	O
;	O
*	O
pgid	*(long)
=	O
(	O
long	O
)	O
id	*(char)
;	O
return	O
ret	int
;	O
}	O
static	O
int	O
l_getgidbyname	(*(char),*(long))->(int)
(	O
char	O
*	O
group	struct(*(char),*(char),int,*(*(char)))
,	O
long	O
*	O
pgid	*(long)
)	O
{	O
struct	O
group	struct(*(char),*(char),int,*(*(char)))
*	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getgrnam	(*(char))->(*(struct(*(char),*(char),int,*(*(char)))))
(	O
group	struct(*(char),*(char),int,*(*(char)))
)	O
;	O
if	O
(	O
!	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
{	O
return	O
-	O
1	int
;	O
}	O
*	O
pgid	*(long)
=	O
pwent	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
gr_gid	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
int	O
idx	int
,	O
long	O
id	*(char)
,	O
char	O
*	O
userkey	*(char)
,	O
char	O
*	O
tarbuf	*(char)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
long	O
*	O
ppid	*(long)
,	O
int	O
(	O
*	O
v_get_id	*((*(char),*(long))->(int))
)	O
(	O
char	O
*	O
,	O
long	O
*	O
)	O
,	O
char	O
*	O
(	O
*	O
v_get_name	*((long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char)))
)	O
(	O
long	O
,	O
char	O
*	O
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
,	O
int	O
*	O
dbpair_len	*(int)
,	O
SYSDBPAIR	struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int)
*	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
{	O
char	O
*	O
cname	*(char)
;	O
int	O
is_in_sysdb	*(int)
=	O
0	int
;	O
int	O
n	long
;	O
int	O
retval	int
=	O
0	int
;	O
if	O
(	O
userkey	*(char)
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
userkey	*(char)
)	O
==	O
0	int
)	O
return	O
-	O
1	int
;	O
n	long
=	O
return_id_by_cache	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),*(int))->(int)
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
userkey	*(char)
,	O
&	O
is_in_sysdb	*(int)
)	O
;	O
if	O
(	O
n	long
>=	O
0	int
)	O
{	O
*	O
ppid	*(long)
=	O
n	long
;	O
return	O
is_in_sysdb	*(int)
;	O
}	O
n	long
=	O
(	O
*	O
(	O
v_get_id	*((*(char),*(long))->(int))
)	O
)	O
(	O
userkey	*(char)
,	O
ppid	*(long)
)	O
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
dbcache_set	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int,int)->(void)
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
userkey	*(char)
,	O
*	O
ppid	*(long)
,	O
0	int
)	O
;	O
}	O
else	O
{	O
*	O
ppid	*(long)
=	O
AHS_UID_NOBODY	O
;	O
error_msg_control	(*(char),int,*(char))->(void)
(	O
userkey	*(char)
,	O
-	O
1	int
,	O
g_pwent_msg	array(*(char))
[	O
idx	int
]	O
)	O
;	O
dbcache_set	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int,int)->(void)
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
userkey	*(char)
,	O
*	O
ppid	*(long)
,	O
-	O
1	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
n	long
;	O
}	O
else	O
{	O
cname	*(char)
=	O
return_name_by_cache	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),int,*(int))->(*(char))
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
id	*(char)
,	O
&	O
is_in_sysdb	*(int)
)	O
;	O
if	O
(	O
cname	*(char)
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
cname	*(char)
)	O
>	O
TARU_SYSDBNAME_LEN	int
-	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: user name too long for ustar headers: %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
cname	*(char)
)	O
;	O
}	O
retval	int
=	O
is_in_sysdb	*(int)
;	O
}	O
else	O
{	O
cname	*(char)
=	O
(	O
*	O
(	O
v_get_name	*((long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char)))
)	O
)	O
(	O
id	*(char)
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
cname	*(char)
)	O
{	O
dbcache_set	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int,int)->(void)
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
cname	*(char)
,	O
id	*(char)
,	O
0	int
)	O
;	O
retval	int
=	O
0	int
;	O
}	O
else	O
{	O
cname	*(char)
=	O
AHS_USERNAME_NOBODY	*(char)
;	O
dbcache_set	(*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)),*(char),int,int)->(void)
(	O
dbpair_len	*(int)
,	O
cache	*(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
,	O
AHS_USERNAME_NOBODY	*(char)
,	O
id	*(char)
,	O
-	O
1	int
)	O
;	O
error_msg_control	(*(char),int,*(char))->(void)
(	O
(	O
char	O
*	O
)	O
NULL	O
,	O
id	*(char)
,	O
g_pwent_msg	array(*(char))
[	O
idx	int
]	O
)	O
;	O
retval	int
=	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
cname	*(char)
&&	O
tarbuf	*(char)
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tarbuf	*(char)
,	O
cname	*(char)
,	O
TARU_SYSDBNAME_LEN	int
-	O
1	int
)	O
;	O
tarbuf	*(char)
[	O
TARU_SYSDBNAME_LEN	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
cname	*(char)
&&	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
cname	*(char)
)	O
;	O
}	O
return	O
retval	int
;	O
}	O
}	O
void	O
taru_set_filehdr_sysdb_nameid_by_policy	(*(char),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,int)->(void)
(	O
char	O
*	O
vselect	*(char)
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
int	O
termch	int
,	O
int	O
tar_iflags_numeric_uids	int
)	O
{	O
unsigned	O
long	O
psid	long
;	O
unsigned	O
long	O
c_id	long
;	O
unsigned	O
char	O
c_c	char
;	O
gid_t	int
pgid	*(long)
;	O
uid_t	int
puid	*(int)
;	O
int	O
G	int
;	O
char	O
*	O
sysusername	*(char)
;	O
if	O
(	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
"G"	*(char)
,	O
vselect	*(char)
,	O
1	int
)	O
==	O
0	int
)	O
{	O
G	int
=	O
1	int
;	O
c_id	long
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
;	O
c_c	char
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
;	O
sysusername	*(char)
=	O
ahsStaticGetTarGroupname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
}	O
else	O
{	O
G	int
=	O
0	int
;	O
c_id	long
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
;	O
c_c	char
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
;	O
sysusername	*(char)
=	O
ahsStaticGetTarUsername	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
}	O
if	O
(	O
(	O
sysusername	*(char)
==	O
NULL	O
||	O
strlen	(*(char))->(long)
(	O
sysusername	*(char)
)	O
==	O
0	int
)	O
&&	O
c_c	char
!=	O
TARU_C_BY_UNONE	int
)	O
{	O
E_DEBUG	O
(	O
"sysusername nil"	*(char)
)	O
;	O
if	O
(	O
G	int
)	O
{	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
NULL	O
,	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_groupname	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
NULL	O
,	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_username	*(char)
)	O
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
c_c	char
==	O
TARU_C_BY_USYS	int
||	O
c_c	char
==	O
TARU_C_BY_UNAME	int
)	O
{	O
E_DEBUG2	O
(	O
"finding id for sysusername = %s"	*(char)
,	O
sysusername	*(char)
)	O
;	O
if	O
(	O
G	int
)	O
{	O
if	O
(	O
taru_get_gid_by_name	(*(char),*(int))->(int)
(	O
sysusername	*(char)
,	O
&	O
pgid	*(long)
)	O
)	O
{	O
pgid	*(long)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"user name [%s] not found setting uid to %d"	*(char)
,	O
sysusername	*(char)
,	O
(	O
int	O
)	O
pgid	*(long)
)	O
;	O
}	O
psid	long
=	O
(	O
unsigned	O
long	O
)	O
pgid	*(long)
;	O
}	O
else	O
{	O
if	O
(	O
taru_get_uid_by_name	(*(char),*(int))->(int)
(	O
sysusername	*(char)
,	O
&	O
puid	*(int)
)	O
)	O
{	O
puid	*(int)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"user name [%s] not found setting uid to %d"	*(char)
,	O
sysusername	*(char)
,	O
(	O
int	O
)	O
puid	*(int)
)	O
;	O
}	O
psid	long
=	O
(	O
unsigned	O
long	O
)	O
puid	*(int)
;	O
}	O
}	O
else	O
if	O
(	O
c_c	char
==	O
TARU_C_BY_UID	int
)	O
{	O
psid	long
=	O
c_id	long
;	O
E_DEBUG2	O
(	O
"finding user for uid  %d"	*(char)
,	O
(	O
int	O
)	O
psid	long
)	O
;	O
if	O
(	O
tar_iflags_numeric_uids	int
==	O
0	int
)	O
{	O
if	O
(	O
G	int
)	O
{	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
NULL	O
,	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_groupname	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
NULL	O
,	O
(	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_username	*(char)
)	O
)	O
;	O
}	O
}	O
else	O
{	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"Using user and uid with no lookups"	*(char)
)	O
;	O
psid	long
=	O
c_id	long
;	O
}	O
if	O
(	O
G	int
)	O
{	O
}	O
else	O
{	O
}	O
}	O
}	O
void	O
taru_set_sysdb_nameid_by_policy	(*(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))),*(char),*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,int)->(void)
(	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
tar_hdr	*(void)
,	O
char	O
*	O
vselect	*(char)
,	O
char	O
*	O
sysusername	*(char)
,	O
char	O
*	O
tarbuf	*(char)
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
int	O
termch	int
,	O
int	O
tar_iflags_numeric_uids	int
)	O
{	O
char	O
*	O
tar_hdr_dest	*(char)
;	O
char	O
*	O
tar_hdr_id	*(char)
;	O
unsigned	O
long	O
psid	long
;	O
unsigned	O
long	O
c_id	long
;	O
unsigned	O
char	O
c_c	char
;	O
gid_t	int
pgid	*(long)
;	O
uid_t	int
puid	*(int)
;	O
int	O
G	int
;	O
tar_hdr_id	*(char)
=	O
NULL	O
;	O
tar_hdr_dest	*(char)
=	O
NULL	O
;	O
if	O
(	O
strncasecmp	(*(char),*(char),long)->(int)
(	O
"G"	*(char)
,	O
vselect	*(char)
,	O
1	int
)	O
==	O
0	int
)	O
{	O
G	int
=	O
1	int
;	O
if	O
(	O
tar_hdr	*(void)
)	O
tar_hdr_dest	*(char)
=	O
tar_hdr	*(void)
->	O
gname	array(char)
;	O
if	O
(	O
tar_hdr	*(void)
)	O
tar_hdr_id	*(char)
=	O
tar_hdr	*(void)
->	O
gid	int
;	O
c_id	long
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
;	O
c_c	char
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
;	O
}	O
else	O
{	O
G	int
=	O
0	int
;	O
if	O
(	O
tar_hdr	*(void)
)	O
tar_hdr_dest	*(char)
=	O
tar_hdr	*(void)
->	O
uname	array(char)
;	O
if	O
(	O
tar_hdr	*(void)
)	O
tar_hdr_id	*(char)
=	O
tar_hdr	*(void)
->	O
uid	int
;	O
c_id	long
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
;	O
c_c	char
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
;	O
}	O
if	O
(	O
(	O
sysusername	*(char)
==	O
NULL	O
||	O
strlen	(*(char))->(long)
(	O
sysusername	*(char)
)	O
==	O
0	int
)	O
&&	O
c_c	char
!=	O
TARU_C_BY_UNONE	int
)	O
{	O
E_DEBUG	O
(	O
"sysusername nil"	*(char)
)	O
;	O
if	O
(	O
G	int
)	O
{	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
tarbuf	*(char)
,	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
else	O
{	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
c_id	long
,	O
tarbuf	*(char)
,	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
if	O
(	O
tar_hdr	*(void)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr_dest	*(char)
,	O
tarbuf	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
c_c	char
==	O
TARU_C_BY_USYS	int
||	O
c_c	char
==	O
TARU_C_BY_UNAME	int
)	O
{	O
E_DEBUG2	O
(	O
"finding id for sysusername = %s"	*(char)
,	O
sysusername	*(char)
)	O
;	O
if	O
(	O
G	int
)	O
{	O
if	O
(	O
taru_get_gid_by_name	(*(char),*(int))->(int)
(	O
sysusername	*(char)
,	O
&	O
pgid	*(long)
)	O
)	O
{	O
pgid	*(long)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"user name [%s] not found setting uid to %d"	*(char)
,	O
sysusername	*(char)
,	O
(	O
int	O
)	O
pgid	*(long)
)	O
;	O
}	O
psid	long
=	O
(	O
unsigned	O
long	O
)	O
pgid	*(long)
;	O
}	O
else	O
{	O
if	O
(	O
taru_get_uid_by_name	(*(char),*(int))->(int)
(	O
sysusername	*(char)
,	O
&	O
puid	*(int)
)	O
)	O
{	O
puid	*(int)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"user name [%s] not found setting uid to %d"	*(char)
,	O
sysusername	*(char)
,	O
(	O
int	O
)	O
puid	*(int)
)	O
;	O
}	O
psid	long
=	O
(	O
unsigned	O
long	O
)	O
puid	*(int)
;	O
}	O
if	O
(	O
tar_hdr	*(void)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr_dest	*(char)
,	O
sysusername	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
if	O
(	O
c_c	char
==	O
TARU_C_BY_UID	int
)	O
{	O
psid	long
=	O
c_id	long
;	O
E_DEBUG2	O
(	O
"finding user for uid  %d"	*(char)
,	O
(	O
int	O
)	O
psid	long
)	O
;	O
if	O
(	O
tar_iflags_numeric_uids	int
==	O
0	int
)	O
{	O
if	O
(	O
G	int
)	O
{	O
taru_get_tar_group_by_gid	(int,*(char))->(int)
(	O
psid	long
,	O
tarbuf	*(char)
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
taru_get_pax_group_by_gid	(int,*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
psid	long
,	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
else	O
{	O
taru_get_tar_user_by_uid	(int,*(char))->(int)
(	O
psid	long
,	O
tarbuf	*(char)
)	O
;	O
if	O
(	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
taru_get_pax_user_by_uid	(int,*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
psid	long
,	O
paxbuf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
}	O
if	O
(	O
tar_hdr	*(void)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr_dest	*(char)
,	O
tarbuf	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
tar_hdr	*(void)
)	O
memset	(*(void),int,long)->(*(void))
(	O
tar_hdr_dest	*(char)
,	O
'\0'	O
,	O
SNAME_LEN	int
)	O
;	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"Using user and uid with no lookups"	*(char)
)	O
;	O
psid	long
=	O
c_id	long
;	O
if	O
(	O
tar_hdr	*(void)
)	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr_dest	*(char)
,	O
sysusername	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
if	O
(	O
G	int
)	O
{	O
if	O
(	O
tar_hdr	*(void)
)	O
GID_TO_CHARS	O
(	O
psid	long
,	O
tar_hdr_id	*(char)
,	O
termch	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
tar_hdr	*(void)
)	O
UID_TO_CHARS	O
(	O
psid	long
,	O
tar_hdr_id	*(char)
,	O
termch	int
)	O
;	O
}	O
}	O
}	O
void	O
taru_mode_to_chars	(int,*(char),long,int)->(void)
(	O
mode_t	int
v	int
,	O
char	O
*	O
p	*(char)
,	O
size_t	long
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
int	O
termch	int
)	O
{	O
mode_to_chars	(int,*(char),long,int,int)->(void)
(	O
v	int
,	O
p	*(char)
,	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
POSIX_FORMAT	int
,	O
termch	int
)	O
;	O
}	O
int	O
taru_get_uid_by_name	(*(char),*(int))->(int)
(	O
char	O
*	O
username	*(char)
,	O
uid_t	int
*	O
puid	*(int)
)	O
{	O
long	O
pid	int
;	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
0	int
,	O
0	int
,	O
username	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
&	O
pid	int
,	O
l_getuidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_user_nset	int
,	O
userCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
*	O
puid	*(int)
=	O
(	O
uid_t	int
)	O
(	O
pid	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_get_pax_user_by_uid	(int,*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
uid_t	int
uid	int
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
0	int
,	O
uid	int
,	O
NULL	O
,	O
NULL	O
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
l_getuidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_user_nset	int
,	O
userCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_get_tar_user_by_uid	(int,*(char))->(int)
(	O
uid_t	int
uid	int
,	O
char	O
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
0	int
,	O
uid	int
,	O
NULL	O
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
NULL	O
,	O
l_getuidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_user_nset	int
,	O
userCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_get_gid_by_name	(*(char),*(int))->(int)
(	O
char	O
*	O
groupname	*(char)
,	O
gid_t	int
*	O
guid	*(int)
)	O
{	O
int	O
ret	int
;	O
long	O
pid	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
1	int
,	O
0	int
,	O
groupname	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
&	O
pid	int
,	O
l_getgidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_group_nset	int
,	O
groupCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
*	O
guid	*(int)
=	O
(	O
gid_t	int
)	O
(	O
pid	int
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_get_pax_group_by_gid	(int,*(struct(*(char),*(char),int,int,int,char,int)))->(int)
(	O
gid_t	int
gid	int
,	O
STROB	struct(*(char),*(char),int,int,int,char,int)
*	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
)	O
{	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
1	int
,	O
gid	int
,	O
NULL	O
,	O
NULL	O
,	O
buf	*(struct(*(char),*(char),int,int,int,char,int))
,	O
NULL	O
,	O
l_getgidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_group_nset	int
,	O
groupCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_get_tar_group_by_gid	(int,*(char))->(int)
(	O
gid_t	int
gid	int
,	O
char	O
*	O
tarbuf	*(char)
)	O
{	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ret	int
=	O
get_pwent	(int,long,*(char),*(char),*(struct(*(char),*(char),int,int,int,char,int)),*(long),*((*(char),*(long))->(int)),*((long,*(char),*(struct(*`,*`,int,int,int,char,int)))->(*(char))),*(int),*(struct(long,*(struct(*`,*`,int,int,int,char,int)),int)))->(int)
(	O
1	int
,	O
gid	int
,	O
NULL	O
,	O
tarbuf	*(char)
,	O
NULL	O
,	O
NULL	O
,	O
l_getgidbyname	(*(char),*(long))->(int)
,	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
,	O
&	O
dbpair_group_nset	int
,	O
groupCacheM	array(struct(long,*(struct(*(char),*(char),int,int,int,char,int)),int))
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
taru_split_name_ustar	(*(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))),*(char),int)->(int)
(	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
tar_hdr	*(void)
,	O
char	O
*	O
name	*(char)
,	O
int	O
tar_iflags	int
)	O
{	O
size_t	long
length	short
=	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
;	O
size_t	long
i	int
;	O
char	O
*	O
uh	*(char)
=	O
(	O
char	O
*	O
)	O
tar_hdr	*(void)
;	O
memset	(*(void),int,long)->(*(void))
(	O
uh	*(char)
+	O
THB_BO_name	int
,	O
'\0'	O
,	O
NAME_FIELD_SIZE	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
uh	*(char)
+	O
THB_BO_prefix	int
,	O
'\0'	O
,	O
PREFIX_FIELD_SIZE	int
)	O
;	O
if	O
(	O
length	short
>	O
PREFIX_FIELD_SIZE	int
+	O
NAME_FIELD_SIZE	int
+	O
1	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: name too long (max): %s\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
name	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
i	int
=	O
split_long_name	(*(char),long)->(long)
(	O
name	*(char)
,	O
length	short
)	O
;	O
if	O
(	O
length	short
-	O
i	int
-	O
1	int
>	O
NAME_FIELD_SIZE	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: name too long (cannot be split): (i=%d) [%s]\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
int	O
)	O
i	int
,	O
name	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
i	int
==	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
uh	*(char)
+	O
THB_BO_name	int
)	O
,	O
name	*(char)
+	O
i	int
+	O
1	int
,	O
length	short
-	O
i	int
-	O
1	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
uh	*(char)
+	O
THB_BO_prefix	int
)	O
,	O
name	*(char)
,	O
i	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
taru_set_filetype_from_tartype	(char,*(int),*(char))->(int)
(	O
char	O
ch	int
,	O
mode_t	int
*	O
mode	int
,	O
char	O
*	O
filename	*(char)
)	O
{	O
(	O
*	O
mode	int
)	O
&=	O
(	O
~	O
(	O
S_IFMT	O
)	O
)	O
;	O
switch	O
(	O
ch	int
)	O
{	O
case	O
REGTYPE	char
:	O
case	O
CONTTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFREG	int
;	O
break	O
;	O
case	O
DIRTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFDIR	int
;	O
break	O
;	O
case	O
CHRTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFCHR	int
;	O
break	O
;	O
case	O
BLKTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFBLK	int
;	O
break	O
;	O
case	O
FIFOTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFIFO	int
;	O
break	O
;	O
case	O
SYMTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFLNK	int
;	O
break	O
;	O
case	O
LNKTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFREG	int
;	O
break	O
;	O
case	O
AREGTYPE	char
:	O
if	O
(	O
filename	*(char)
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"taru_set_filetype_from_tartype():"	*(char)
" warning: AREGTYPE: filename not given, assuming REGTYPE.\n"	*(char)
)	O
;	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFREG	int
;	O
}	O
else	O
{	O
if	O
(	O
filename	*(char)
[	O
strlen	(*(char))->(long)
(	O
filename	*(char)
)	O
-	O
1	int
]	O
==	O
'/'	O
)	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFDIR	int
;	O
else	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFREG	int
;	O
}	O
break	O
;	O
case	O
NOTDUMPEDTYPE	char
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFSOCK	int
;	O
break	O
;	O
default	O
:	O
(	O
*	O
mode	int
)	O
|=	O
CP_IFREG	int
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: warning:  typeflag [%c] not supported, ignoring file\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
ch	int
)	O
;	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
tarui_get_filetypes	(int,*(int),*(char))->(void)
(	O
mode_t	int
mode	int
,	O
int	O
*	O
cpio_mode	*(int)
,	O
char	O
*	O
tarflag	*(char)
)	O
{	O
if	O
(	O
S_ISREG	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
REGTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFREG	int
;	O
}	O
else	O
if	O
(	O
S_ISDOOR	int
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
NOTDUMPEDTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFSOCK	int
;	O
}	O
else	O
if	O
(	O
S_ISDIR	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
DIRTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFDIR	int
;	O
}	O
else	O
if	O
(	O
S_ISBLK	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
BLKTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFBLK	int
;	O
}	O
else	O
if	O
(	O
S_ISCHR	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
CHRTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFCHR	int
;	O
}	O
else	O
if	O
(	O
S_ISFIFO	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
FIFOTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFIFO	int
;	O
}	O
else	O
if	O
(	O
S_ISLNK	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
SYMTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFLNK	int
;	O
}	O
else	O
if	O
(	O
S_ISSOCK	O
(	O
mode	int
)	O
)	O
{	O
*	O
tarflag	*(char)
=	O
NOTDUMPEDTYPE	char
;	O
*	O
cpio_mode	*(int)
=	O
CP_IFSOCK	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: unrecognized type in mode: %d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
(	O
int	O
)	O
mode	int
)	O
;	O
*	O
tarflag	*(char)
=	O
(	O
char	O
)	O
(	O
-	O
1	int
)	O
;	O
*	O
cpio_mode	*(int)
=	O
-	O
1	int
;	O
}	O
}	O
int	O
taru_get_tar_filetype	(int)->(int)
(	O
mode_t	int
mode	int
)	O
{	O
char	O
c	int
;	O
int	O
cm	int
;	O
tarui_get_filetypes	(int,*(int),*(char))->(void)
(	O
mode	int
,	O
&	O
cm	int
,	O
&	O
c	int
)	O
;	O
return	O
(	O
int	O
)	O
c	int
;	O
}	O
int	O
taru_get_cpio_filetype	(int)->(int)
(	O
mode_t	int
mode	int
)	O
{	O
char	O
c	int
;	O
int	O
cm	int
;	O
tarui_get_filetypes	(int,*(int),*(char))->(void)
(	O
mode	int
,	O
&	O
cm	int
,	O
&	O
c	int
)	O
;	O
return	O
cm	int
;	O
}	O
static	O
int	O
i_taru_read_in_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(int),int,int,int)->(int)
(	O
TARU	struct(char,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(int,*(char),long)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
taru	*(void)
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
int	O
in_des	int
,	O
char	O
*	O
fsource_buffer	*(char)
,	O
int	O
*	O
eoa	*(int)
,	O
int	O
tarheaderflags	int
,	O
int	O
fsource_buffer_len	int
,	O
int	O
fp_retval	int
)	O
{	O
mode_t	int
modet	int
;	O
int	O
retval	int
=	O
0	int
;	O
unsigned	O
char	O
*	O
ext_data_buffer	*(char)
;	O
int	O
ext_data_buffer_len	int
;	O
long	O
bytes_skipped	long
=	O
0	int
;	O
int	O
warned	int
=	O
FALSE	int
;	O
union	O
tar_record	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
;	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
tar_hdr	*(void)
;	O
char	O
*	O
aregfilename	*(char)
;	O
char	O
*	O
tmpname	*(char)
;	O
char	O
*	O
read_buffer	*(char)
;	O
int	O
do_record_header	int
=	O
0	int
;	O
int	O
tar_iflags_retain_header_id	int
=	O
0	int
;	O
int	O
buffer_offset	int
;	O
int	O
xhd_errorcode	int
;	O
int	O
eoaret	int
;	O
int	O
tmpret	int
;	O
int	O
tmpret_ustar	int
;	O
int	O
tmpret_extdata	int
;	O
int	O
read_so_far	int
=	O
0	int
;	O
long	O
uidp	long
;	O
long	O
gidp	long
;	O
E_DEBUG	O
(	O
"BEGIN"	*(char)
)	O
;	O
buffer_offset	int
=	O
0	int
;	O
if	O
(	O
taru	*(void)
)	O
{	O
tar_iflags_retain_header_id	int
=	O
(	O
tarheaderflags	int
&	O
TARU_TAR_RETAIN_HEADER_IDS	O
)	O
;	O
}	O
if	O
(	O
eoa	*(int)
)	O
{	O
*	O
eoa	*(int)
=	O
0	int
;	O
}	O
ext_data_buffer	*(char)
=	O
NULL	O
;	O
if	O
(	O
taru	*(void)
)	O
{	O
do_record_header	int
=	O
taru	*(void)
->	O
do_record_headerM	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
strob_set_length	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
taru	*(void)
->	O
read_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
taru	*(void)
->	O
read_buffer_posM	int
+	O
TARRECORDSIZE	int
)	O
;	O
read_buffer	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
read_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
fsource_buffer	*(char)
==	O
NULL	O
)	O
{	O
tmpret_ustar	int
=	O
taru_tape_buffered_read	(int,*(void),long)->(long)
(	O
in_des	int
,	O
(	O
void	O
*	O
)	O
(	O
read_buffer	*(char)
)	O
,	O
TARRECORDSIZE	int
)	O
;	O
if	O
(	O
tmpret_ustar	int
>	O
0	int
&&	O
tmpret_ustar	int
!=	O
TARRECORDSIZE	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: otar.c: short read in read_in_tar_header2 return=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
tmpret_ustar	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
if	O
(	O
tmpret_ustar	int
==	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
tmpret_ustar	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: otar.c: read error from read_in_tar_header2 return=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
tmpret_ustar	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
{	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
read_buffer	*(char)
)	O
,	O
fsource_buffer	*(char)
+	O
taru	*(void)
->	O
read_buffer_posM	int
,	O
TARRECORDSIZE	int
)	O
;	O
fsource_buffer_len	int
-=	O
TARRECORDSIZE	int
;	O
tmpret_ustar	int
=	O
TARRECORDSIZE	int
;	O
}	O
taru	*(void)
->	O
read_buffer_posM	int
+=	O
TARRECORDSIZE	int
;	O
strob_set_length	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
taru	*(void)
->	O
read_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
taru	*(void)
->	O
read_buffer_posM	int
+	O
TARRECORDSIZE	int
)	O
;	O
read_buffer	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
read_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
do_record_header	int
)	O
{	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
taru	*(void)
->	O
header_lengthM	int
+	O
512	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
taru	*(void)
->	O
header_lengthM	int
)	O
,	O
(	O
void	O
*	O
)	O
(	O
read_buffer	*(char)
)	O
,	O
512	int
)	O
;	O
taru	*(void)
->	O
header_lengthM	int
+=	O
512	int
;	O
}	O
retval	int
+=	O
512	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
null_block	(*(long),int)->(int)
(	O
(	O
long	O
*	O
)	O
read_buffer	*(char)
,	O
TARRECORDSIZE	int
)	O
)	O
{	O
ahsStaticSetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
CPIO_INBAND_EOA_FILENAME	*(char)
)	O
;	O
if	O
(	O
fsource_buffer	*(char)
==	O
NULL	O
)	O
{	O
eoaret	int
=	O
taru_tape_buffered_read	(int,*(void),long)->(long)
(	O
in_des	int
,	O
(	O
void	O
*	O
)	O
read_buffer	*(char)
,	O
TARRECORDSIZE	int
)	O
;	O
}	O
else	O
{	O
eoaret	int
=	O
TARRECORDSIZE	int
;	O
memset	(*(void),int,long)->(*(void))
(	O
read_buffer	*(char)
,	O
'\0'	O
,	O
TARRECORDSIZE	int
)	O
;	O
}	O
if	O
(	O
eoaret	int
!=	O
TARRECORDSIZE	int
||	O
null_block	(*(long),int)->(int)
(	O
(	O
long	O
*	O
)	O
read_buffer	*(char)
,	O
TARRECORDSIZE	int
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: possible corrupt archive, non-null block found after one null block\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
retval	int
=	O
-	O
1	int
;	O
}	O
else	O
{	O
retval	int
=	O
1024	int
;	O
}	O
taru	*(void)
->	O
read_buffer_posM	int
+=	O
TARRECORDSIZE	int
;	O
if	O
(	O
eoa	*(int)
)	O
*	O
eoa	*(int)
=	O
retval	int
;	O
return	O
retval	int
;	O
}	O
tar_hdr	*(void)
=	O
(	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
)	O
(	O
read_buffer	*(char)
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
GNUTYPE_LONGNAME	char
||	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
GNUTYPE_LONGLINK	char
||	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
XHDTYPE	char
||	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
XGLTYPE	char
)	O
{	O
E_DEBUG2	O
(	O
"GOT Extened Header data type:[%c]"	*(char)
,	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
;	O
taru_otoumax	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
size	long
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
)	O
;	O
if	O
(	O
fsource_buffer	*(char)
)	O
{	O
E_DEBUG	O
(	O
"in fsource_buffer"	*(char)
)	O
;	O
if	O
(	O
(	O
unsigned	O
long	O
)	O
fsource_buffer_len	int
<	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
)	O
{	O
E_DEBUG3	O
(	O
"fsource_buffer_len < file_hdr->c_filesize: %d < %d"	*(char)
,	O
(	O
int	O
)	O
fsource_buffer_len	int
,	O
(	O
int	O
)	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
)	O
;	O
tmpret_extdata	int
=	O
-	O
1	int
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"reading pax data blocks"	*(char)
)	O
;	O
tmpret_extdata	int
=	O
taru_read_pax_data_blocks	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),int,*(char),int,*((int,*(void),long)->(long)))->(int)
(	O
taru	*(void)
,	O
-	O
1	int
,	O
fsource_buffer	*(char)
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
,	O
taru_tape_buffered_read	(int,*(void),long)->(long)
)	O
;	O
}	O
if	O
(	O
tmpret_extdata	int
>	O
0	int
)	O
{	O
fsource_buffer_len	int
-=	O
tmpret_extdata	int
;	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"fsource_buffer is NULL"	*(char)
)	O
;	O
tmpret_extdata	int
=	O
taru_read_pax_data_blocks	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),int,*(char),int,*((int,*(void),long)->(long)))->(int)
(	O
taru	*(void)
,	O
in_des	int
,	O
NULL	O
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
,	O
taru_tape_buffered_read	(int,*(void),long)->(long)
)	O
;	O
}	O
if	O
(	O
tmpret_extdata	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal error reading extended header data blocks\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
24	int
)	O
;	O
}	O
ext_data_buffer	*(char)
=	O
(	O
unsigned	O
char	O
*	O
)	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
read_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
taru	*(void)
->	O
read_buffer_posM	int
-	O
tmpret_extdata	int
;	O
ext_data_buffer_len	int
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
;	O
switch	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
{	O
case	O
GNUTYPE_LONGNAME	char
:	O
ahsStaticSetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
(	O
char	O
*	O
)	O
ext_data_buffer	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"Setting LongName Data: [%s]"	*(char)
,	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_PATH	O
;	O
break	O
;	O
case	O
GNUTYPE_LONGLINK	char
:	O
ahsStaticSetPaxLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
(	O
char	O
*	O
)	O
ext_data_buffer	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"Setting LongLink Data: [%s]"	*(char)
,	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
|=	O
TARU_EHUM_LINKPATH	O
;	O
break	O
;	O
case	O
XGLTYPE	char
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"type XGLTYPE (Pax Global Header) not supported\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
26	int
)	O
;	O
break	O
;	O
case	O
XHDTYPE	char
:	O
tmpret	int
=	O
taru_read_all_ext_header_records	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char),int,*(int))->(int)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
(	O
char	O
*	O
)	O
ext_data_buffer	*(char)
,	O
ext_data_buffer_len	int
,	O
&	O
xhd_errorcode	int
)	O
;	O
if	O
(	O
tmpret	int
<	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: error reading Pax extended header, errorcode=%d\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
xhd_errorcode	int
)	O
;	O
return	O
-	O
11	int
;	O
}	O
break	O
;	O
default	O
:	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal internal error\n"	*(char)
)	O
;	O
exit	(int)->(void)
(	O
26	int
)	O
;	O
break	O
;	O
}	O
E_DEBUG	O
(	O
"Calling i_taru_read_in_tar_header2"	*(char)
)	O
;	O
read_so_far	int
=	O
tmpret_ustar	int
+	O
tmpret_extdata	int
;	O
retval	int
=	O
i_taru_read_in_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(int),int,int,int)->(int)
(	O
taru	*(void)
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
in_des	int
,	O
fsource_buffer	*(char)
?	O
fsource_buffer	*(char)
+	O
read_so_far	int
:	O
(	O
char	O
*	O
)	O
NULL	O
,	O
eoa	*(int)
,	O
tarheaderflags	int
,	O
fsource_buffer_len	int
,	O
fp_retval	int
+	O
read_so_far	int
)	O
;	O
return	O
retval	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
while	O
(	O
1	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
chksum	array(char)
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_chksum	long
)	O
;	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_chksum	long
!=	O
taru_tar_checksum	(*(void))->(long)
(	O
tar_hdr	*(void)
)	O
)	O
{	O
if	O
(	O
!	O
fsource_buffer	*(char)
)	O
{	O
if	O
(	O
!	O
warned	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: invalid header: checksum error\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
warned	int
=	O
TRUE	int
;	O
}	O
if	O
(	O
tarheaderflags	int
&	O
TARU_TAR_FRAGILE_FORMAT	O
)	O
return	O
-	O
2	int
;	O
bcopy	(*(void),*(void),long)->(void)
(	O
(	O
(	O
char	O
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
)	O
+	O
1	int
,	O
(	O
char	O
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
,	O
TARRECORDSIZE	int
-	O
1	int
)	O
;	O
taru_tape_buffered_read	(int,*(void),long)->(long)
(	O
in_des	int
,	O
(	O
void	O
*	O
)	O
(	O
(	O
(	O
char	O
*	O
)	O
(	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
)	O
)	O
+	O
(	O
TARRECORDSIZE	int
-	O
1	int
)	O
)	O
,	O
1	int
)	O
;	O
++	O
bytes_skipped	long
;	O
continue	O
;	O
}	O
else	O
{	O
return	O
-	O
3	int
;	O
}	O
}	O
if	O
(	O
(	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
)	O
&	O
TARU_EHUM_PATH	O
)	O
==	O
0	int
)	O
{	O
tmpname	*(char)
=	O
taru_dup_tar_name	(*(void))->(*(char))
(	O
(	O
void	O
*	O
)	O
tar_hdr	*(void)
)	O
;	O
ahsStaticSetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tmpname	*(char)
)	O
;	O
}	O
else	O
{	O
;	O
tmpname	*(char)
=	O
NULL	O
;	O
E_DEBUG	O
(	O
"Path set by extended headers"	*(char)
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_namesize	short
=	O
strlen	(*(char))->(long)
(	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
+	O
1	int
;	O
if	O
(	O
(	O
char	O
)	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
==	O
LNKTYPE	char
)	O
{	O
E_DEBUG	O
(	O
"setting file_hdr->c_nlink = 2"	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_nlink	short
=	O
2	int
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"setting file_hdr->c_nlink = 1"	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_nlink	short
=	O
1	int
;	O
}	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
mode	int
,	O
&	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
)	O
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
&	O
07777	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ahsStaticSetTarUsername	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
uname	array(char)
)	O
;	O
if	O
(	O
tar_iflags_retain_header_id	int
==	O
0	int
&&	O
l_cache_tar_getuidbyname	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
&	O
uidp	long
)	O
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
=	O
uidp	long
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
uid	int
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
)	O
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
taru_set_filetype_from_tartype	(char,*(int),*(char))->(int)
(	O
(	O
char	O
)	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
,	O
(	O
modet	int
=	O
(	O
mode_t	int
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
)	O
,	O
&	O
modet	int
)	O
,	O
tmpname	*(char)
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
switch	O
(	O
(	O
int	O
)	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
)	O
{	O
case	O
LNKTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_is_tar_lnktype	char
=	O
1	int
;	O
break	O
;	O
default	O
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_is_tar_lnktype	char
=	O
0	int
;	O
}	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
ahsStaticSetTarGroupname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
gname	array(char)
)	O
;	O
if	O
(	O
tar_iflags_retain_header_id	int
==	O
0	int
&&	O
l_cache_tar_getgidbyname	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
&	O
gidp	long
)	O
==	O
0	int
)	O
{	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
=	O
gidp	long
;	O
}	O
else	O
{	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
gid	int
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
)	O
;	O
}	O
taru_otoumax	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
size	long
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
)	O
;	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
mtime	long
,	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mtime	long
)	O
;	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
devmajor	array(char)
,	O
(	O
unsigned	O
long	O
*	O
)	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_rdev_maj	long
)	O
;	O
taru_otoul	(*(char),*(long))->(int)
(	O
tar_hdr	*(void)
->	O
devminor	array(char)
,	O
(	O
unsigned	O
long	O
*	O
)	O
&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_rdev_min	long
)	O
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
switch	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
)	O
{	O
case	O
REGTYPE	char
:	O
case	O
CONTTYPE	char
:	O
default	O
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFREG	int
;	O
break	O
;	O
case	O
DIRTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFDIR	int
;	O
break	O
;	O
case	O
CHRTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFCHR	int
;	O
ahsStaticSetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
=	O
0	int
;	O
break	O
;	O
case	O
BLKTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFBLK	int
;	O
ahsStaticSetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
=	O
0	int
;	O
break	O
;	O
case	O
FIFOTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFIFO	int
;	O
ahsStaticSetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
=	O
0	int
;	O
break	O
;	O
case	O
SYMTYPE	char
:	O
E_DEBUG	O
(	O
"at SYMLINK"	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFLNK	int
;	O
if	O
(	O
(	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
)	O
&	O
TARU_EHUM_LINKPATH	O
)	O
==	O
0	int
)	O
{	O
E_DEBUG2	O
(	O
"linkname=[%s]"	*(char)
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
ahsStaticSetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"ahs linkname=[%s]"	*(char)
,	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
}	O
else	O
{	O
;	O
E_DEBUG	O
(	O
"Path set by extended headers"	*(char)
)	O
;	O
}	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
=	O
0	int
;	O
break	O
;	O
case	O
LNKTYPE	char
:	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFREG	int
;	O
ahsStaticSetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
tar_hdr	*(void)
->	O
linkname	*(char)
)	O
;	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
=	O
0	int
;	O
break	O
;	O
case	O
AREGTYPE	char
:	O
aregfilename	*(char)
=	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
if	O
(	O
aregfilename	*(char)
[	O
strlen	(*(char))->(long)
(	O
aregfilename	*(char)
)	O
-	O
1	int
]	O
==	O
'/'	O
)	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFDIR	int
;	O
else	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
|=	O
CP_IFREG	int
;	O
break	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
bytes_skipped	long
>	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: warning: skipped %ld bytes of junk\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
bytes_skipped	long
)	O
;	O
if	O
(	O
tarheaderflags	int
&	O
TARU_TAR_FRAGILE_FORMAT	O
)	O
return	O
-	O
4	int
;	O
}	O
return	O
retval	int
+	O
fp_retval	int
;	O
}	O
int	O
taru_read_in_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(int),int,int)->(int)
(	O
TARU	struct(char,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(int,*(char),long)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
taru	*(void)
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
int	O
in_des	int
,	O
char	O
*	O
fsource_buffer	*(char)
,	O
int	O
*	O
eoa	*(int)
,	O
int	O
tarheaderflags	int
,	O
int	O
fsource_buffer_len	int
)	O
{	O
EXATT	struct(array(char),int,array(char),array(char),*(void),*(void),int)
*	O
p	*(char)
;	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
extlist	*(struct(*(*(char)),int,int,long,int))
;	O
int	O
index	(*(char),int)->(*(char))
;	O
int	O
ret	int
;	O
E_DEBUG	O
(	O
""	*(char)
)	O
;	O
if	O
(	O
taru	*(void)
)	O
taru	*(void)
->	O
read_buffer_posM	int
=	O
0	int
;	O
if	O
(	O
taru	*(void)
&&	O
taru	*(void)
->	O
do_record_headerM	int
)	O
{	O
taru	*(void)
->	O
header_lengthM	int
=	O
0	int
;	O
}	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
=	O
0	int
;	O
taru_exattlist_init	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
ahsStaticSetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
""	*(char)
)	O
;	O
ahsStaticSetPaxLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(char))->(void)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
""	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"fsource_buffer=%p"	*(char)
,	O
fsource_buffer	*(char)
)	O
;	O
E_DEBUG2	O
(	O
"fsource_buffer_len=%d"	*(char)
,	O
fsource_buffer_len	int
)	O
;	O
ret	int
=	O
i_taru_read_in_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(int),int,int,int)->(int)
(	O
taru	*(void)
,	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
in_des	int
,	O
fsource_buffer	*(char)
,	O
eoa	*(int)
,	O
tarheaderflags	int
,	O
fsource_buffer_len	int
,	O
0	int
)	O
;	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extHeader_usage_maskM	int
)	O
{	O
extlist	*(struct(*(*(char)),int,int,long,int))
=	O
(	O
CPLOB	struct(*(*(char)),int,int,long,int)
*	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extattlistM	*(void)
)	O
;	O
if	O
(	O
extlist	*(struct(*(*(char)),int,int,long,int))
)	O
{	O
index	(*(char),int)->(*(char))
=	O
0	int
;	O
while	O
(	O
(	O
p	*(char)
=	O
(	O
EXATT	struct(array(char),int,array(char),array(char),*(void),*(void),int)
*	O
)	O
cplob_val	(*(struct(*(*(char)),int,int,long,int)),int)->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
extattlistM	*(void)
,	O
index	(*(char),int)->(*(char))
)	O
)	O
)	O
{	O
taru_exatt_override_ustar	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),*(struct(array(char),int,array(char),array(char),*(void),*(void),int)))->(int)
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
p	*(char)
)	O
;	O
index	(*(char),int)->(*(char))
++	O
;	O
}	O
}	O
}	O
return	O
ret	int
;	O
}	O
int	O
taru_write_out_tar_header2	(*(struct(char,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),int,int,int,*(struct(*`,*`,int,int,int,char,int)),*(struct(*`,*`,int,int,int,char,int)),int,*(struct(*`,*`,int,int,int,char,int)),*(struct(int,*`,long)),*(struct(*`,*`,int,int,int,char,int)))),*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)),int,*(char),*(char),*(char),int)->(int)
(	O
TARU	struct(char,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),int,int,int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(*(char),*(char),int,int,int,char,int)),int,*(struct(*(char),*(char),int,int,int,char,int)),*(struct(int,*(char),long)),*(struct(*(char),*(char),int,int,int,char,int)))
*	O
taru	*(void)
,	O
struct	O
new_cpio_header	struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)
*	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
,	O
int	O
out_des	int
,	O
char	O
*	O
header_buffer	*(char)
,	O
char	O
*	O
username	*(char)
,	O
char	O
*	O
groupname	*(char)
,	O
int	O
tar_iflags	int
)	O
{	O
int	O
ret	int
;	O
union	O
tar_record	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
;	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
tar_hdr	*(void)
=	O
(	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
;	O
char	O
*	O
u_name_buffer	*(char)
;	O
char	O
*	O
u_ent_buffer	*(char)
;	O
unsigned	O
long	O
sum	long
;	O
int	O
termch	int
;	O
char	O
*	O
tmpp	*(char)
;	O
int	O
tar_iflags_like_star	int
;	O
int	O
tar_iflags_like_pax	int
;	O
int	O
tar_iflags_numeric_uids	int
;	O
int	O
tar_iflags_like_oldgnu	int
;	O
int	O
tar_iflags_like_oldgnuposix	int
;	O
int	O
tar_iflags_like_gnu	int
;	O
int	O
do_record_header	int
=	O
0	int
;	O
if	O
(	O
!	O
taru	*(void)
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"fatal internal error: taru is NULL, this needs to be fixed\n"	*(char)
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
*	O
(	O
(	O
char	O
*	O
)	O
(	O
taru	*(void)
)	O
)	O
!=	O
'A'	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: fatal error: taru is uninitialized, this needs to be fixed\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
E_DEBUG3	O
(	O
"ENTERING fd=%d, name=[%s]"	*(char)
,	O
out_des	int
,	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
E_DEBUG3	O
(	O
"username=[%s] groupname=[%s]"	*(char)
,	O
username	*(char)
,	O
groupname	*(char)
)	O
;	O
E_DEBUG3	O
(	O
"file_hdr: uid=[%d] gid=[%d]"	*(char)
,	O
(	O
int	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
)	O
,	O
(	O
int	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
)	O
)	O
;	O
bzero	(*(void),long)->(void)
(	O
(	O
char	O
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
,	O
TARRECORDSIZE	int
)	O
;	O
tar_iflags_like_star	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_BE_LIKE_STAR	O
)	O
;	O
tar_iflags_like_pax	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_BE_LIKE_PAX	O
)	O
;	O
tar_iflags_numeric_uids	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_NUMERIC_UIDS	O
)	O
;	O
tar_iflags_like_gnu	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_GNU_GNUTAR	O
)	O
;	O
tar_iflags_like_oldgnu	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_GNU_OLDGNUTAR	O
)	O
;	O
tar_iflags_like_oldgnuposix	int
=	O
(	O
tar_iflags	int
&	O
TARU_TAR_GNU_OLDGNUPOSIX	O
)	O
;	O
E_DEBUG2	O
(	O
"tar_iflags_numeric_uids is %d"	*(char)
,	O
tar_iflags_numeric_uids	int
)	O
;	O
do_record_header	int
=	O
taru	*(void)
->	O
do_record_headerM	int
;	O
if	O
(	O
tar_iflags_like_star	int
)	O
{	O
termch	int
=	O
'\040'	O
;	O
}	O
else	O
{	O
termch	int
=	O
0	int
;	O
}	O
strob_strcpy	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
;	O
if	O
(	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
==	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: internal error: taru->u_name_bufferM zero length\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
switch	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
&	O
CP_IFMT	int
)	O
{	O
case	O
CP_IFDIR	int
:	O
if	O
(	O
*	O
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
+	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
-	O
1	int
)	O
!=	O
'/'	O
)	O
{	O
if	O
(	O
(	O
strob_strlen	(*(struct(*(char),*(char),int,int,int,char,int)))->(long)
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
>=	O
TARNAMESIZE	int
-	O
1	int
)	O
&&	O
(	O
tar_iflags_like_oldgnu	int
||	O
tar_iflags_like_oldgnuposix	int
)	O
)	O
{	O
;	O
}	O
else	O
{	O
strob_strcat	(*(struct(*(char),*(char),int,int,int,char,int)),*(char))->(*(char))
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
"/"	*(char)
)	O
;	O
}	O
}	O
break	O
;	O
}	O
u_name_buffer	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
u_name_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
u_ent_buffer	*(char)
=	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
u_ent_bufferM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
;	O
if	O
(	O
taru_set_new_name	(*(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))),int,*(char),int)->(int)
(	O
tar_hdr	*(void)
,	O
-	O
1	int
,	O
u_name_buffer	*(char)
,	O
taru	*(void)
->	O
taru_tarheaderflagsM	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: %s not dumped\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
u_name_buffer	*(char)
)	O
;	O
return	O
-	O
13	int
;	O
}	O
if	O
(	O
tar_iflags_like_oldgnu	int
)	O
{	O
MODE_TO_OLDGNU_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
,	O
tar_hdr	*(void)
->	O
mode	int
,	O
termch	int
)	O
;	O
}	O
else	O
{	O
MODE_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
,	O
tar_hdr	*(void)
->	O
mode	int
,	O
termch	int
)	O
;	O
}	O
UID_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
,	O
tar_hdr	*(void)
->	O
uid	int
,	O
termch	int
)	O
;	O
GID_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
,	O
tar_hdr	*(void)
->	O
gid	int
,	O
termch	int
)	O
;	O
OFF_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_filesize	long
,	O
tar_hdr	*(void)
->	O
size	long
,	O
termch	int
)	O
;	O
TIME_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mtime	long
,	O
tar_hdr	*(void)
->	O
mtime	long
,	O
termch	int
)	O
;	O
*	O
(	O
tar_hdr	*(void)
->	O
version	array(char)
)	O
=	O
'0'	O
;	O
*	O
(	O
tar_hdr	*(void)
->	O
version	array(char)
+	O
1	int
)	O
=	O
'0'	O
;	O
switch	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
&	O
CP_IFMT	int
)	O
{	O
case	O
CP_IFREG	int
:	O
tmpp	*(char)
=	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
if	O
(	O
tmpp	*(char)
&&	O
strlen	(*(char))->(long)
(	O
tmpp	*(char)
)	O
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmpp	*(char)
)	O
>	O
TARLINKNAMESIZE	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s, link name [%s] too long for tar (returning -4).\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
tmpp	*(char)
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	*(char)
)	O
;	O
return	O
-	O
4	int
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
linkname	*(char)
,	O
tmpp	*(char)
,	O
TARLINKNAMESIZE	int
)	O
;	O
SIZE_TO_CHARS	O
(	O
0	int
,	O
tar_hdr	*(void)
->	O
size	long
,	O
termch	int
)	O
;	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
LNKTYPE	char
;	O
}	O
else	O
{	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
REGTYPE	char
;	O
}	O
break	O
;	O
case	O
CP_IFDIR	int
:	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
DIRTYPE	char
;	O
break	O
;	O
case	O
CP_IFCHR	int
:	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
CHRTYPE	char
;	O
break	O
;	O
case	O
CP_IFBLK	int
:	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
BLKTYPE	char
;	O
break	O
;	O
case	O
CP_IFSOCK	int
:	O
case	O
CP_IFIFO	int
:	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
FIFOTYPE	char
;	O
break	O
;	O
case	O
CP_IFLNK	int
:	O
tmpp	*(char)
=	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
;	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
,	O
GNU_LONG_LINK	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmpp	*(char)
)	O
>	O
510	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: link name [%s] too long this implementation at this time.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
tmpp	*(char)
)	O
;	O
return	O
-	O
5	int
;	O
}	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
GNUTYPE_LONGLINK	char
;	O
SIZE_TO_CHARS	O
(	O
strlen	(*(char))->(long)
(	O
tmpp	*(char)
)	O
,	O
tar_hdr	*(void)
->	O
size	long
,	O
termch	int
)	O
;	O
}	O
else	O
{	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
SYMTYPE	char
;	O
if	O
(	O
strlen	(*(char))->(long)
(	O
tmpp	*(char)
)	O
>	O
TARLINKNAMESIZE	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s: link name [%s] too long for tar.\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
,	O
tmpp	*(char)
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	*(char)
)	O
;	O
return	O
-	O
5	int
;	O
}	O
SIZE_TO_CHARS	O
(	O
0	int
,	O
tar_hdr	*(void)
->	O
size	long
,	O
termch	int
)	O
;	O
}	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
linkname	*(char)
,	O
tmpp	*(char)
,	O
TARLINKNAMESIZE	int
)	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
==	O
0	int
&&	O
strcmp	(*(char),*(char))->(int)
(	O
ahsStaticGetTarFilename	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
,	O
GNU_LONG_LINK	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
ahsStaticGetTarLinkname	(*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
)	O
)	O
==	O
0	int
)	O
{	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
GNUTYPE_LONGNAME	char
;	O
}	O
else	O
{	O
tar_hdr	*(void)
->	O
typeflag	char
=	O
GNUTYPE_LONGLINK	char
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"bad CP_?? filetype in taru_write_out_tar_header2: mode = %d\n"	*(char)
,	O
(	O
int	O
)	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_mode	short
)	O
)	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
tar_iflags_like_gnu	int
==	O
0	int
&&	O
tar_iflags_like_oldgnu	int
==	O
0	int
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
magic	array(char)
,	O
TMAGIC	*(char)
,	O
TMAGLEN	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
magic	array(char)
+	O
TMAGLEN	int
,	O
TVERSION	*(char)
,	O
TVERSLEN	int
)	O
;	O
}	O
else	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
magic	array(char)
,	O
"ustar "	*(char)
,	O
6	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
magic	array(char)
+	O
6	int
,	O
" "	*(char)
,	O
2	int
)	O
;	O
}	O
if	O
(	O
(	O
username	*(char)
==	O
NULL	O
||	O
strlen	(*(char))->(long)
(	O
username	*(char)
)	O
==	O
0	int
)	O
&&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
!=	O
TARU_C_BY_UNONE	int
)	O
{	O
E_DEBUG	O
(	O
"username nil"	*(char)
)	O
;	O
l_tar_sysdata_getuser	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
,	O
u_ent_buffer	*(char)
,	O
NULL	O
)	O
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
u_ent_buffer	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
uid_t	int
puid	*(int)
;	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
==	O
TARU_C_BY_USYS	int
||	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
==	O
TARU_C_BY_UNAME	int
)	O
{	O
E_DEBUG2	O
(	O
"finding uid for username = %s"	*(char)
,	O
username	*(char)
)	O
;	O
if	O
(	O
taru_get_uid_by_name	(*(char),*(int))->(int)
(	O
username	*(char)
,	O
&	O
puid	*(int)
)	O
)	O
{	O
puid	*(int)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"user name [%s] not found setting uid to %d"	*(char)
,	O
username	*(char)
,	O
(	O
int	O
)	O
puid	*(int)
)	O
;	O
}	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
username	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cu	char
==	O
TARU_C_BY_UID	int
)	O
{	O
puid	*(int)
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
;	O
E_DEBUG2	O
(	O
"finding user for uid  %d"	*(char)
,	O
(	O
int	O
)	O
puid	*(int)
)	O
;	O
if	O
(	O
tar_iflags_numeric_uids	int
==	O
0	int
)	O
{	O
taru_get_tar_user_by_uid	(int,*(char))->(int)
(	O
puid	*(int)
,	O
u_ent_buffer	*(char)
)	O
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
u_ent_buffer	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
""	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"Using user and uid with no lookups"	*(char)
)	O
;	O
puid	*(int)
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_uid	short
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
username	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
UID_TO_CHARS	O
(	O
puid	*(int)
,	O
tar_hdr	*(void)
->	O
uid	int
,	O
termch	int
)	O
;	O
}	O
if	O
(	O
(	O
groupname	*(char)
==	O
NULL	O
||	O
strlen	(*(char))->(long)
(	O
groupname	*(char)
)	O
==	O
0	int
)	O
&&	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
!=	O
TARU_C_BY_GNONE	int
)	O
{	O
E_DEBUG	O
(	O
"groupname nil"	*(char)
)	O
;	O
l_tar_sysdata_getgroup	(long,*(char),*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
,	O
u_ent_buffer	*(char)
,	O
NULL	O
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
u_ent_buffer	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
gid_t	int
pgid	*(long)
;	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
==	O
TARU_C_BY_GSYS	int
||	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
==	O
TARU_C_BY_GNAME	int
)	O
{	O
E_DEBUG2	O
(	O
"finding gid for groupname=%s"	*(char)
,	O
groupname	*(char)
)	O
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
groupname	*(char)
,	O
SNAME_LEN	int
)	O
;	O
if	O
(	O
taru_get_gid_by_name	(*(char),*(int))->(int)
(	O
groupname	*(char)
,	O
&	O
pgid	*(long)
)	O
)	O
{	O
pgid	*(long)
=	O
NOBODY_ID	O
;	O
E_DEBUG3	O
(	O
"group name [%s] not found setting uid to %d"	*(char)
,	O
groupname	*(char)
,	O
(	O
int	O
)	O
pgid	*(long)
)	O
;	O
}	O
}	O
else	O
if	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_cg	char
==	O
TARU_C_BY_GID	int
)	O
{	O
pgid	*(long)
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
;	O
E_DEBUG2	O
(	O
"finding gname for gid  %d"	*(char)
,	O
(	O
int	O
)	O
pgid	*(long)
)	O
;	O
if	O
(	O
tar_iflags_numeric_uids	int
==	O
0	int
)	O
{	O
taru_get_tar_group_by_gid	(int,*(char))->(int)
(	O
pgid	*(long)
,	O
u_ent_buffer	*(char)
)	O
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
u_ent_buffer	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
else	O
{	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
""	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
"Using user and gid with no lookups"	*(char)
)	O
;	O
pgid	*(long)
=	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_gid	short
;	O
swlib_strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
groupname	*(char)
,	O
SNAME_LEN	int
)	O
;	O
}	O
GID_TO_CHARS	O
(	O
pgid	*(long)
,	O
tar_hdr	*(void)
->	O
gid	int
,	O
termch	int
)	O
;	O
}	O
if	O
(	O
tar_iflags_numeric_uids	int
)	O
{	O
memset	(*(void),int,long)->(*(void))
(	O
(	O
void	O
*	O
)	O
tar_hdr	*(void)
->	O
uname	array(char)
,	O
'\0'	O
,	O
SNAME_LEN	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
(	O
void	O
*	O
)	O
tar_hdr	*(void)
->	O
gname	array(char)
,	O
'\0'	O
,	O
SNAME_LEN	int
)	O
;	O
}	O
if	O
(	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
CHRTYPE	char
||	O
tar_hdr	*(void)
->	O
typeflag	char
==	O
BLKTYPE	char
)	O
{	O
MAJOR_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_rdev_maj	long
,	O
tar_hdr	*(void)
->	O
devmajor	array(char)
,	O
termch	int
)	O
;	O
MINOR_TO_CHARS	O
(	O
file_hdr	*(struct(short,long,long,long,long,long,long,long,long,long,long,long,long,long,*(char),*(char),*(char),*(char),char,char,char,char,int,int,*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short)),*(void),long,long,long,long))
->	O
c_rdev_min	long
,	O
tar_hdr	*(void)
->	O
devminor	array(char)
,	O
termch	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
tar_iflags_like_pax	int
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devmajor	array(char)
,	O
"0000000"	*(char)
,	O
8	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devminor	array(char)
,	O
"0000000"	*(char)
,	O
8	int
)	O
;	O
}	O
else	O
if	O
(	O
tar_iflags_like_star	int
)	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devmajor	array(char)
,	O
"0000000 "	*(char)
,	O
8	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devminor	array(char)
,	O
"0000000 "	*(char)
,	O
8	int
)	O
;	O
}	O
else	O
if	O
(	O
tar_iflags_like_gnu	int
||	O
tar_iflags_like_oldgnu	int
||	O
tar_iflags_like_oldgnuposix	int
)	O
{	O
;	O
}	O
else	O
{	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devmajor	array(char)
,	O
"0000000"	*(char)
,	O
8	int
)	O
;	O
strncpy	(*(char),*(char),long)->(*(char))
(	O
tar_hdr	*(void)
->	O
devminor	array(char)
,	O
"0000000"	*(char)
,	O
8	int
)	O
;	O
}	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tar_hdr	*(void)
->	O
chksum	array(char)
,	O
CHKBLANKS	*(char)
,	O
sizeof	O
(	O
tar_hdr	*(void)
->	O
chksum	array(char)
)	O
)	O
;	O
sum	long
=	O
taru_tar_checksum	(*(void))->(long)
(	O
tar_hdr	*(void)
)	O
;	O
if	O
(	O
tar_iflags_like_pax	int
||	O
tar_iflags_like_star	int
)	O
{	O
uintmax_to_chars	(long,*(char),long,int,int)->(void)
(	O
sum	long
,	O
tar_hdr	*(void)
->	O
chksum	array(char)
,	O
8	int
,	O
POSIX_FORMAT	int
,	O
termch	int
)	O
;	O
}	O
else	O
{	O
uintmax_to_chars	(long,*(char),long,int,int)->(void)
(	O
sum	long
,	O
tar_hdr	*(void)
->	O
chksum	array(char)
,	O
7	int
,	O
POSIX_FORMAT	int
,	O
termch	int
)	O
;	O
}	O
if	O
(	O
header_buffer	*(char)
)	O
{	O
if	O
(	O
do_record_header	int
)	O
{	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
TARRECORDSIZE	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
,	O
(	O
void	O
*	O
)	O
(	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
)	O
,	O
TARRECORDSIZE	int
)	O
;	O
taru	*(void)
->	O
header_lengthM	int
=	O
TARRECORDSIZE	int
;	O
}	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
header_buffer	*(char)
,	O
(	O
void	O
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
,	O
512	int
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	*(char)
)	O
;	O
return	O
512	int
;	O
}	O
else	O
{	O
if	O
(	O
do_record_header	int
)	O
{	O
strob_set_memlength	(*(struct(*(char),*(char),int,int,int,char,int)),int)->(void)
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
,	O
TARRECORDSIZE	int
)	O
;	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
(	O
void	O
*	O
)	O
(	O
strob_str	(*(struct(*(char),*(char),int,int,int,char,int)))->(*(char))
(	O
taru	*(void)
->	O
headerM	*(struct(*(char),*(char),int,int,int,char,int))
)	O
)	O
,	O
(	O
void	O
*	O
)	O
(	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
)	O
,	O
TARRECORDSIZE	int
)	O
;	O
taru	*(void)
->	O
header_lengthM	int
=	O
TARRECORDSIZE	int
;	O
}	O
ret	int
=	O
taru_safewrite	(int,*(void),long)->(int)
(	O
out_des	int
,	O
(	O
void	O
*	O
)	O
&	O
tar_rec	union(struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char)),array(char))
,	O
TARRECORDSIZE	int
)	O
;	O
E_DEBUG	O
(	O
"LEAVING"	*(char)
)	O
;	O
return	O
ret	int
;	O
}	O
}	O
long	O
taru_from_oct	(int,*(char))->(long)
(	O
int	O
digs	*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short))
,	O
char	O
*	O
where	*(char)
)	O
{	O
long	O
value	int
;	O
while	O
(	O
ISSPACE	O
(	O
*	O
where	*(char)
)	O
)	O
{	O
where	*(char)
++	O
;	O
if	O
(	O
--	O
digs	*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short))
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
}	O
value	int
=	O
0	int
;	O
while	O
(	O
digs	*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short))
>	O
0	int
&&	O
ISODIGIT	O
(	O
*	O
where	*(char)
)	O
)	O
{	O
value	int
=	O
(	O
value	int
<<	O
3	int
)	O
|	O
(	O
*	O
where	*(char)
++	O
-	O
'0'	O
)	O
;	O
--	O
digs	*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short))
;	O
}	O
if	O
(	O
digs	*(struct(int,array(char),short,array(char),short,array(char),short,array(char),short))
>	O
0	int
&&	O
*	O
where	*(char)
&&	O
!	O
ISSPACE	O
(	O
*	O
where	*(char)
)	O
)	O
return	O
-	O
1	int
;	O
return	O
value	int
;	O
}	O
void	O
taru_to_oct	(long,int,*(char))->(void)
(	O
register	O
long	O
value	int
,	O
register	O
int	O
digits	int
,	O
register	O
char	O
*	O
where	*(char)
)	O
{	O
--	O
digits	int
;	O
where	*(char)
[	O
--	O
digits	int
]	O
=	O
' '	O
;	O
do	O
{	O
where	*(char)
[	O
--	O
digits	int
]	O
=	O
'0'	O
+	O
(	O
char	O
)	O
(	O
value	int
&	O
7	int
)	O
;	O
value	int
>>=	O
3	int
;	O
}	O
while	O
(	O
digits	int
>	O
0	int
&&	O
value	int
!=	O
0	int
)	O
;	O
while	O
(	O
digits	int
>	O
0	int
)	O
where	*(char)
[	O
--	O
digits	int
]	O
=	O
' '	O
;	O
}	O
int	O
taru_datoul	(*(char),*(long))->(int)
(	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
unsigned	O
long	O
*	O
n	long
)	O
{	O
unsigned	O
long	O
oldval	long
=	O
0	int
;	O
unsigned	O
long	O
val	array(int)
=	O
0	int
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
>=	O
'0'	O
&&	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
<=	O
'9'	O
&&	O
val	array(int)
>=	O
oldval	long
)	O
{	O
oldval	long
=	O
val	array(int)
;	O
val	array(int)
=	O
10	int
*	O
val	array(int)
+	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
-	O
'0'	O
;	O
}	O
if	O
(	O
oldval	long
&&	O
(	O
(	O
val	array(int)
/	O
oldval	long
)	O
<	O
10	int
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s, taru_datoul : conversion overflow\n"	*(char)
,	O
swlib_utilname_get	()->(*(char))
(	O
)	O
)	O
;	O
return	O
2	int
;	O
}	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
*	O
n	long
=	O
val	array(int)
;	O
return	O
(	O
!	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'\0'	O
)	O
)	O
;	O
}	O
int	O
taru_otoul	(*(char),*(long))->(int)
(	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
unsigned	O
long	O
*	O
n	long
)	O
{	O
unsigned	O
long	O
val	array(int)
=	O
0	int
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
>=	O
'0'	O
&&	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
<=	O
'7'	O
)	O
val	array(int)
=	O
8	int
*	O
val	array(int)
+	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
-	O
'0'	O
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
*	O
n	long
=	O
val	array(int)
;	O
return	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'\0'	O
;	O
}	O
int	O
taru_otoumax	(*(char),*(long))->(int)
(	O
char	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
,	O
uintmax_t	long
*	O
n	long
)	O
{	O
uintmax_t	long
val	array(int)
=	O
0	int
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
>=	O
'0'	O
&&	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
<=	O
'7'	O
)	O
val	array(int)
=	O
8	int
*	O
val	array(int)
+	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
++	O
-	O
'0'	O
;	O
while	O
(	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
' '	O
)	O
++	O
s	*(struct(*(char),*(char),int,int,int,char,int))
;	O
*	O
n	long
=	O
val	array(int)
;	O
return	O
*	O
s	*(struct(*(char),*(char),int,int,int,char,int))
==	O
'\0'	O
;	O
}	O
int	O
taru_tarheader_check	(*(char))->(int)
(	O
char	O
*	O
buffer	array(char)
)	O
{	O
unsigned	O
long	O
sumis	long
,	O
sum	long
;	O
if	O
(	O
strncmp	(*(char),*(char),long)->(int)
(	O
buffer	array(char)
+	O
257	int
,	O
TMAGIC	*(char)
,	O
5	int
)	O
)	O
{	O
return	O
1	int
;	O
}	O
sumis	long
=	O
(	O
unsigned	O
long	O
)	O
taru_from_oct	(int,*(char))->(long)
(	O
8	int
,	O
buffer	array(char)
+	O
148	int
)	O
;	O
sum	long
=	O
taru_tar_checksum	(*(void))->(long)
(	O
(	O
void	O
*	O
)	O
buffer	array(char)
)	O
;	O
if	O
(	O
sum	long
!=	O
sumis	long
)	O
{	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
unsigned	O
long	O
taru_tar_checksum	(*(void))->(long)
(	O
void	O
*	O
hdr	*(void)
)	O
{	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
tar_hdr	*(void)
=	O
(	O
struct	O
tar_header	struct(array(char),array(char),array(char),array(char),array(char),array(char),array(char),char,array(char),array(char),array(char),array(char),array(char),array(char),array(char),array(char))
*	O
)	O
(	O
hdr	*(void)
)	O
;	O
unsigned	O
long	O
sum	long
=	O
0	int
;	O
char	O
*	O
p	*(char)
=	O
(	O
char	O
*	O
)	O
tar_hdr	*(void)
;	O
char	O
*	O
q	*(char)
=	O
p	*(char)
+	O
TARRECORDSIZE	int
;	O
int	O
i	int
;	O
while	O
(	O
p	*(char)
<	O
tar_hdr	*(void)
->	O
chksum	array(char)
)	O
sum	long
+=	O
*	O
p	*(char)
++	O
&	O
0xff	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
8	int
;	O
++	O
i	int
)	O
{	O
sum	long
+=	O
' '	O
;	O
++	O
p	*(char)
;	O
}	O
while	O
(	O
p	*(char)
<	O
q	*(char)
)	O
sum	long
+=	O
*	O
p	*(char)
++	O
&	O
0xff	int
;	O
return	O
sum	long
;	O
}	O
int	O
taru_tape_skip_padding	(int,long,enum(int,int,int,int,int,int,int,int,int,int))->(int)
(	O
int	O
in_file_des	int
,	O
uintmax_t	long
offset	long
,	O
enum	O
archive_format	enum(int,int,int,int,int,int,int,int,int,int)
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
)	O
{	O
int	O
pad	int
;	O
if	O
(	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_crcascii	int
||	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_newascii	int
)	O
pad	int
=	O
(	O
4	int
-	O
(	O
offset	long
%	O
4	int
)	O
)	O
%	O
4	int
;	O
else	O
if	O
(	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_binary	int
||	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_hpbinary	int
)	O
pad	int
=	O
(	O
2	int
-	O
(	O
offset	long
%	O
2	int
)	O
)	O
%	O
2	int
;	O
else	O
if	O
(	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_tar	int
||	O
archive_format_in	enum(int,int,int,int,int,int,int,int,int,int)
==	O
arf_ustar	int
)	O
pad	int
=	O
(	O
512	int
-	O
(	O
offset	long
%	O
512	int
)	O
)	O
%	O
512	int
;	O
else	O
pad	int
=	O
0	int
;	O
if	O
(	O
pad	int
!=	O
0	int
)	O
{	O
if	O
(	O
in_file_des	int
<	O
0	int
)	O
{	O
return	O
pad	int
;	O
}	O
else	O
{	O
return	O
taru_read_amount	(int,long)->(long)
(	O
in_file_des	int
,	O
pad	int
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
