enum	O
{	O
HEXLEN	int
=	O
2	int
,	O
NDUMP	int
=	O
16	int
,	O
EXTRAOFF	int
=	O
(	O
(	O
NDUMP	int
/	O
2	int
)	O
-	O
1	int
)	O
,	O
LITOFF	int
=	O
(	O
(	O
HEXLEN	int
+	O
1	int
)	O
*	O
NDUMP	int
+	O
2	int
)	O
,	O
DUMPBUFSIZE	int
=	O
(	O
LITOFF	int
+	O
NDUMP	int
+	O
2	int
)	O
}	O
;	O
static	O
int	O
rtrim	(*(char),int)->(int)
(	O
char	O
*	O
str	*(char)
,	O
int	O
n	int
)	O
{	O
while	O
(	O
n	int
>	O
0	int
&&	O
str	*(char)
[	O
n	int
-	O
1	int
]	O
==	O
' '	O
)	O
n	int
--	O
;	O
str	*(char)
[	O
n	int
]	O
=	O
'\n'	O
;	O
return	O
n	int
;	O
}	O
int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
char	O
vbuf	array(char)
[	O
DUMPBUFSIZE	int
]	O
;	O
char	O
*	O
p	*(char)
,	O
*	O
q	*(char)
;	O
int	O
i	int
;	O
int	O
c	int
;	O
int	O
n	int
;	O
unsigned	O
long	O
off	long
=	O
0	int
;	O
static	O
char	O
xchar	array(char)
[	O
]	O
=	O
"0123456789ABCDEF"	*(char)
;	O
REWIND	O
;	O
while	O
(	O
(	O
c	int
=	O
getchar	()->(int)
(	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
if	O
(	O
i	int
==	O
NDUMP	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%08lX: "	*(char)
,	O
off	long
)	O
;	O
n	int
=	O
rtrim	(*(char),int)->(int)
(	O
vbuf	array(char)
,	O
q	*(char)
-	O
vbuf	array(char)
)	O
;	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
vbuf	array(char)
,	O
1	int
,	O
n	int
+	O
1	int
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
off	long
+=	O
i	int
;	O
REWIND	O
;	O
}	O
*	O
p	*(char)
++	O
=	O
xchar	array(char)
[	O
c	int
>>	O
4	int
]	O
;	O
*	O
p	*(char)
++	O
=	O
xchar	array(char)
[	O
c	int
&	O
0xf	int
]	O
;	O
*	O
p	*(char)
++	O
=	O
' '	O
;	O
*	O
q	*(char)
++	O
=	O
mu_isprint	O
(	O
c	int
)	O
?	O
c	int
:	O
'.'	O
;	O
if	O
(	O
i	int
==	O
EXTRAOFF	int
)	O
{	O
*	O
p	*(char)
++	O
=	O
' '	O
;	O
*	O
q	*(char)
++	O
=	O
' '	O
;	O
}	O
i	int
++	O
;	O
}	O
if	O
(	O
i	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%08lX: "	*(char)
,	O
off	long
)	O
;	O
n	int
=	O
rtrim	(*(char),int)->(int)
(	O
vbuf	array(char)
,	O
q	*(char)
-	O
vbuf	array(char)
)	O
;	O
fwrite	(*(void),long,long,*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(long)
(	O
vbuf	array(char)
,	O
1	int
,	O
n	int
+	O
1	int
,	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
}	O
return	O
0	int
;	O
}	O
