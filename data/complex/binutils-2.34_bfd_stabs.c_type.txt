struct	O
stab_link_includes_totals	O
{	O
struct	O
stab_link_includes_totals	O
*	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
bfd_vma	long
sum_chars	O
;	O
bfd_vma	long
num_chars	O
;	O
const	O
char	O
*	O
symb	O
;	O
}	O
;	O
struct	O
stab_link_includes_entry	O
{	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
root	O
;	O
struct	O
stab_link_includes_totals	O
*	O
totals	O
;	O
}	O
;	O
struct	O
stab_excl_list	O
{	O
struct	O
stab_excl_list	O
*	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
;	O
bfd_size_type	long
offset	long
;	O
bfd_vma	long
val	array(int)
;	O
int	O
type	enum(int,int,int,int)
;	O
}	O
;	O
struct	O
stab_section_info	O
{	O
struct	O
stab_excl_list	O
*	O
excls	O
;	O
bfd_size_type	long
*	O
cumulative_skips	O
;	O
bfd_size_type	long
stridxs	O
[	O
1	int
]	O
;	O
}	O
;	O
static	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
stab_link_includes_newfunc	O
(	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
entry	O
,	O
struct	O
bfd_hash_table	struct(*(*(struct(*(struct(*`,*`,long)),*(char),long))),*((*(struct(*(struct`),*(char),long)),*(struct(*(*`),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),*(char))->(*(struct(*(struct`),*(char),long)))),*(void),int,int,int,int)
*	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
const	O
char	O
*	O
string	*(char)
)	O
{	O
struct	O
stab_link_includes_entry	O
*	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
struct	O
stab_link_includes_entry	O
*	O
)	O
entry	O
;	O
if	O
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
==	O
NULL	O
)	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
struct	O
stab_link_includes_entry	O
*	O
)	O
bfd_hash_allocate	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),int)->(*(void))
(	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
sizeof	O
(	O
struct	O
stab_link_includes_entry	O
)	O
)	O
;	O
if	O
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
==	O
NULL	O
)	O
return	O
NULL	O
;	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
=	O
(	O
(	O
struct	O
stab_link_includes_entry	O
*	O
)	O
bfd_hash_newfunc	(*(struct(*(struct(*`,*`,long)),*(char),long)),*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),*(char))->(*(struct(*(struct(*`,*`,long)),*(char),long)))
(	O
(	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
)	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
,	O
table	*(*(struct(*(struct(*`,*`,long)),*(char),long)))
,	O
string	*(char)
)	O
)	O
;	O
if	O
(	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
)	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
->	O
totals	O
=	O
NULL	O
;	O
return	O
(	O
struct	O
bfd_hash_entry	struct(*(struct(*(struct(*(struct`),*(char),long)),*(char),long)),*(char),long)
*	O
)	O
ret	*(struct(long,char,*(char),char,char,short,*(char)))
;	O
}	O
bfd_boolean	int
_bfd_link_section_stabs	O
(	O
bfd	struct
*	O
abfd	*(struct)
,	O
struct	O
stab_info	struct(*(struct),struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int),*(struct))
*	O
sinfo	O
,	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
stabsec	O
,	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
stabstrsec	O
,	O
void	O
*	O
*	O
psecinfo	O
,	O
bfd_size_type	long
*	O
pstring_offset	O
)	O
{	O
bfd_boolean	int
first	O
;	O
bfd_size_type	long
count	int
,	O
amt	O
;	O
struct	O
stab_section_info	O
*	O
secinfo	O
;	O
bfd_byte	char
*	O
stabbuf	O
=	O
NULL	O
;	O
bfd_byte	char
*	O
stabstrbuf	O
=	O
NULL	O
;	O
bfd_byte	char
*	O
sym	*(struct)
,	O
*	O
symend	O
;	O
bfd_size_type	long
stroff	O
,	O
next_stroff	O
,	O
skip	O
;	O
bfd_size_type	long
*	O
pstridx	O
;	O
if	O
(	O
stabsec	O
->	O
size	long
==	O
0	int
||	O
stabstrsec	O
->	O
size	long
==	O
0	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
stabsec	O
->	O
size	long
%	O
STABSIZE	O
!=	O
0	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
(	O
stabstrsec	O
->	O
flags	int
&	O
SEC_RELOC	O
)	O
!=	O
0	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
||	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
stabstrsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
return	O
TRUE	int
;	O
first	O
=	O
FALSE	O
;	O
if	O
(	O
sinfo	O
->	O
stabstr	*(struct)
==	O
NULL	O
)	O
{	O
flagword	int
flags	int
;	O
first	O
=	O
TRUE	int
;	O
sinfo	O
->	O
strings	*(struct)
=	O
_bfd_stringtab_init	O
(	O
)	O
;	O
if	O
(	O
sinfo	O
->	O
strings	*(struct)
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
(	O
void	O
)	O
_bfd_stringtab_add	O
(	O
sinfo	O
->	O
strings	*(struct)
,	O
""	*(char)
,	O
TRUE	int
,	O
TRUE	int
)	O
;	O
if	O
(	O
!	O
bfd_hash_table_init	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),int)->(int)
(	O
&	O
sinfo	O
->	O
includes	struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int)
,	O
stab_link_includes_newfunc	O
,	O
sizeof	O
(	O
struct	O
stab_link_includes_entry	O
)	O
)	O
)	O
goto	O
error_return	O
;	O
flags	int
=	O
(	O
SEC_HAS_CONTENTS	O
|	O
SEC_READONLY	O
|	O
SEC_DEBUGGING	O
|	O
SEC_LINKER_CREATED	O
)	O
;	O
sinfo	O
->	O
stabstr	*(struct)
=	O
bfd_make_section_anyway_with_flags	(*(struct),*(char),int)->(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))
(	O
abfd	*(struct)
,	O
".stabstr"	*(char)
,	O
flags	int
)	O
;	O
if	O
(	O
sinfo	O
->	O
stabstr	*(struct)
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
}	O
count	int
=	O
stabsec	O
->	O
size	long
/	O
STABSIZE	O
;	O
amt	O
=	O
sizeof	O
(	O
struct	O
stab_section_info	O
)	O
;	O
amt	O
+=	O
(	O
count	int
-	O
1	int
)	O
*	O
sizeof	O
(	O
bfd_size_type	long
)	O
;	O
*	O
psecinfo	O
=	O
bfd_alloc	(*(struct),long)->(*(void))
(	O
abfd	*(struct)
,	O
amt	O
)	O
;	O
if	O
(	O
*	O
psecinfo	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
secinfo	O
=	O
(	O
struct	O
stab_section_info	O
*	O
)	O
*	O
psecinfo	O
;	O
secinfo	O
->	O
excls	O
=	O
NULL	O
;	O
stabsec	O
->	O
rawsize	long
=	O
stabsec	O
->	O
size	long
;	O
secinfo	O
->	O
cumulative_skips	O
=	O
NULL	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
secinfo	O
->	O
stridxs	O
,	O
0	int
,	O
(	O
size_t	long
)	O
count	int
*	O
sizeof	O
(	O
bfd_size_type	long
)	O
)	O
;	O
if	O
(	O
!	O
bfd_malloc_and_get_section	(*(struct),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(*(char)))->(int)
(	O
abfd	*(struct)
,	O
stabsec	O
,	O
&	O
stabbuf	O
)	O
||	O
!	O
bfd_malloc_and_get_section	(*(struct),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(*(char)))->(int)
(	O
abfd	*(struct)
,	O
stabstrsec	O
,	O
&	O
stabstrbuf	O
)	O
)	O
goto	O
error_return	O
;	O
stroff	O
=	O
0	int
;	O
next_stroff	O
=	O
pstring_offset	O
?	O
*	O
pstring_offset	O
:	O
0	int
;	O
skip	O
=	O
0	int
;	O
symend	O
=	O
stabbuf	O
+	O
stabsec	O
->	O
size	long
;	O
for	O
(	O
sym	*(struct)
=	O
stabbuf	O
,	O
pstridx	O
=	O
secinfo	O
->	O
stridxs	O
;	O
sym	*(struct)
<	O
symend	O
;	O
sym	*(struct)
+=	O
STABSIZE	O
,	O
++	O
pstridx	O
)	O
{	O
bfd_size_type	long
symstroff	O
;	O
int	O
type	enum(int,int,int,int)
;	O
const	O
char	O
*	O
string	*(char)
;	O
if	O
(	O
*	O
pstridx	O
!=	O
0	int
)	O
continue	O
;	O
type	enum(int,int,int,int)
=	O
sym	*(struct)
[	O
TYPEOFF	O
]	O
;	O
if	O
(	O
type	enum(int,int,int,int)
==	O
0	int
)	O
{	O
stroff	O
=	O
next_stroff	O
;	O
next_stroff	O
+=	O
bfd_get_32	O
(	O
abfd	*(struct)
,	O
sym	*(struct)
+	O
8	int
)	O
;	O
if	O
(	O
pstring_offset	O
)	O
*	O
pstring_offset	O
=	O
next_stroff	O
;	O
if	O
(	O
!	O
first	O
)	O
{	O
*	O
pstridx	O
=	O
(	O
bfd_size_type	long
)	O
-	O
1	int
;	O
++	O
skip	O
;	O
continue	O
;	O
}	O
first	O
=	O
FALSE	O
;	O
}	O
symstroff	O
=	O
stroff	O
+	O
bfd_get_32	O
(	O
abfd	*(struct)
,	O
sym	*(struct)
+	O
STRDXOFF	O
)	O
;	O
if	O
(	O
symstroff	O
>=	O
stabstrsec	O
->	O
size	long
)	O
{	O
_bfd_error_handler	(*(char))->(void)
(	O
_	O
(	O
"%pB(%pA+%#lx): stabs entry has invalid string index"	*(char)
)	O
,	O
abfd	*(struct)
,	O
stabsec	O
,	O
(	O
long	O
)	O
(	O
sym	*(struct)
-	O
stabbuf	O
)	O
)	O
;	O
bfd_set_error	(enum(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int))->(void)
(	O
bfd_error_bad_value	int
)	O
;	O
goto	O
error_return	O
;	O
}	O
string	*(char)
=	O
(	O
char	O
*	O
)	O
stabstrbuf	O
+	O
symstroff	O
;	O
*	O
pstridx	O
=	O
_bfd_stringtab_add	O
(	O
sinfo	O
->	O
strings	*(struct)
,	O
string	*(char)
,	O
TRUE	int
,	O
TRUE	int
)	O
;	O
if	O
(	O
type	enum(int,int,int,int)
==	O
(	O
int	O
)	O
N_BINCL	O
)	O
{	O
bfd_vma	long
sum_chars	O
;	O
bfd_vma	long
num_chars	O
;	O
bfd_vma	long
buf_len	O
=	O
0	int
;	O
char	O
*	O
symb	O
;	O
char	O
*	O
symb_rover	O
;	O
int	O
nest	O
;	O
bfd_byte	char
*	O
incl_sym	O
;	O
struct	O
stab_link_includes_entry	O
*	O
incl_entry	O
;	O
struct	O
stab_link_includes_totals	O
*	O
t	O
;	O
struct	O
stab_excl_list	O
*	O
ne	O
;	O
symb	O
=	O
symb_rover	O
=	O
NULL	O
;	O
sum_chars	O
=	O
num_chars	O
=	O
0	int
;	O
nest	O
=	O
0	int
;	O
for	O
(	O
incl_sym	O
=	O
sym	*(struct)
+	O
STABSIZE	O
;	O
incl_sym	O
<	O
symend	O
;	O
incl_sym	O
+=	O
STABSIZE	O
)	O
{	O
int	O
incl_type	O
;	O
incl_type	O
=	O
incl_sym	O
[	O
TYPEOFF	O
]	O
;	O
if	O
(	O
incl_type	O
==	O
0	int
)	O
break	O
;	O
else	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_EXCL	O
)	O
continue	O
;	O
else	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_EINCL	O
)	O
{	O
if	O
(	O
nest	O
==	O
0	int
)	O
break	O
;	O
--	O
nest	O
;	O
}	O
else	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_BINCL	O
)	O
++	O
nest	O
;	O
else	O
if	O
(	O
nest	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
str	O
;	O
str	O
=	O
(	O
(	O
char	O
*	O
)	O
stabstrbuf	O
+	O
stroff	O
+	O
bfd_get_32	O
(	O
abfd	*(struct)
,	O
incl_sym	O
+	O
STRDXOFF	O
)	O
)	O
;	O
for	O
(	O
;	O
*	O
str	O
!=	O
'\0'	O
;	O
str	O
++	O
)	O
{	O
if	O
(	O
num_chars	O
>=	O
buf_len	O
)	O
{	O
buf_len	O
+=	O
32	int
*	O
1024	int
;	O
symb	O
=	O
(	O
char	O
*	O
)	O
bfd_realloc_or_free	O
(	O
symb	O
,	O
buf_len	O
)	O
;	O
if	O
(	O
symb	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
symb_rover	O
=	O
symb	O
+	O
num_chars	O
;	O
}	O
*	O
symb_rover	O
++	O
=	O
*	O
str	O
;	O
sum_chars	O
+=	O
*	O
str	O
;	O
num_chars	O
++	O
;	O
if	O
(	O
*	O
str	O
==	O
'('	O
)	O
{	O
++	O
str	O
;	O
while	O
(	O
ISDIGIT	O
(	O
*	O
str	O
)	O
)	O
++	O
str	O
;	O
--	O
str	O
;	O
}	O
}	O
}	O
}	O
BFD_ASSERT	O
(	O
num_chars	O
==	O
(	O
bfd_vma	long
)	O
(	O
symb_rover	O
-	O
symb	O
)	O
)	O
;	O
incl_entry	O
=	O
(	O
struct	O
stab_link_includes_entry	O
*	O
)	O
bfd_hash_lookup	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),*(char),int,int)->(*(struct(*(struct(*`,*`,long)),*(char),long)))
(	O
&	O
sinfo	O
->	O
includes	struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int)
,	O
string	*(char)
,	O
TRUE	int
,	O
TRUE	int
)	O
;	O
if	O
(	O
incl_entry	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
for	O
(	O
t	O
=	O
incl_entry	O
->	O
totals	O
;	O
t	O
!=	O
NULL	O
;	O
t	O
=	O
t	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
if	O
(	O
t	O
->	O
sum_chars	O
==	O
sum_chars	O
&&	O
t	O
->	O
num_chars	O
==	O
num_chars	O
&&	O
memcmp	(*(void),*(void),long)->(int)
(	O
t	O
->	O
symb	O
,	O
symb	O
,	O
num_chars	O
)	O
==	O
0	int
)	O
break	O
;	O
amt	O
=	O
sizeof	O
*	O
ne	O
;	O
ne	O
=	O
(	O
struct	O
stab_excl_list	O
*	O
)	O
bfd_alloc	(*(struct),long)->(*(void))
(	O
abfd	*(struct)
,	O
amt	O
)	O
;	O
if	O
(	O
ne	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
ne	O
->	O
offset	long
=	O
sym	*(struct)
-	O
stabbuf	O
;	O
ne	O
->	O
val	array(int)
=	O
sum_chars	O
;	O
ne	O
->	O
type	enum(int,int,int,int)
=	O
(	O
int	O
)	O
N_BINCL	O
;	O
ne	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
=	O
secinfo	O
->	O
excls	O
;	O
secinfo	O
->	O
excls	O
=	O
ne	O
;	O
if	O
(	O
t	O
==	O
NULL	O
)	O
{	O
t	O
=	O
(	O
struct	O
stab_link_includes_totals	O
*	O
)	O
bfd_hash_allocate	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)),int)->(*(void))
(	O
&	O
sinfo	O
->	O
includes	struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int)
,	O
sizeof	O
*	O
t	O
)	O
;	O
if	O
(	O
t	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
t	O
->	O
sum_chars	O
=	O
sum_chars	O
;	O
t	O
->	O
num_chars	O
=	O
num_chars	O
;	O
t	O
->	O
symb	O
=	O
symb	O
=	O
(	O
char	O
*	O
)	O
bfd_realloc_or_free	O
(	O
symb	O
,	O
num_chars	O
)	O
;	O
t	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
=	O
incl_entry	O
->	O
totals	O
;	O
incl_entry	O
->	O
totals	O
=	O
t	O
;	O
}	O
else	O
{	O
bfd_size_type	long
*	O
incl_pstridx	O
;	O
ne	O
->	O
type	enum(int,int,int,int)
=	O
(	O
int	O
)	O
N_EXCL	O
;	O
free	(*(void))->(void)
(	O
symb	O
)	O
;	O
nest	O
=	O
0	int
;	O
for	O
(	O
incl_sym	O
=	O
sym	*(struct)
+	O
STABSIZE	O
,	O
incl_pstridx	O
=	O
pstridx	O
+	O
1	int
;	O
incl_sym	O
<	O
symend	O
;	O
incl_sym	O
+=	O
STABSIZE	O
,	O
++	O
incl_pstridx	O
)	O
{	O
int	O
incl_type	O
;	O
incl_type	O
=	O
incl_sym	O
[	O
TYPEOFF	O
]	O
;	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_EINCL	O
)	O
{	O
if	O
(	O
nest	O
==	O
0	int
)	O
{	O
*	O
incl_pstridx	O
=	O
(	O
bfd_size_type	long
)	O
-	O
1	int
;	O
++	O
skip	O
;	O
break	O
;	O
}	O
--	O
nest	O
;	O
}	O
else	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_BINCL	O
)	O
++	O
nest	O
;	O
else	O
if	O
(	O
incl_type	O
==	O
(	O
int	O
)	O
N_EXCL	O
)	O
continue	O
;	O
else	O
if	O
(	O
nest	O
==	O
0	int
)	O
{	O
*	O
incl_pstridx	O
=	O
(	O
bfd_size_type	long
)	O
-	O
1	int
;	O
++	O
skip	O
;	O
}	O
}	O
}	O
}	O
}	O
free	(*(void))->(void)
(	O
stabbuf	O
)	O
;	O
stabbuf	O
=	O
NULL	O
;	O
free	(*(void))->(void)
(	O
stabstrbuf	O
)	O
;	O
stabstrbuf	O
=	O
NULL	O
;	O
stabsec	O
->	O
size	long
=	O
(	O
count	int
-	O
skip	O
)	O
*	O
STABSIZE	O
;	O
if	O
(	O
stabsec	O
->	O
size	long
==	O
0	int
)	O
stabsec	O
->	O
flags	int
|=	O
SEC_EXCLUDE	O
|	O
SEC_KEEP	O
;	O
stabstrsec	O
->	O
flags	int
|=	O
SEC_EXCLUDE	O
|	O
SEC_KEEP	O
;	O
sinfo	O
->	O
stabstr	*(struct)
->	O
size	long
=	O
_bfd_stringtab_size	O
(	O
sinfo	O
->	O
strings	*(struct)
)	O
;	O
if	O
(	O
skip	O
!=	O
0	int
)	O
{	O
bfd_size_type	long
i	*(struct)
,	O
offset	long
;	O
bfd_size_type	long
*	O
pskips	O
;	O
amt	O
=	O
count	int
*	O
sizeof	O
(	O
bfd_size_type	long
)	O
;	O
secinfo	O
->	O
cumulative_skips	O
=	O
(	O
bfd_size_type	long
*	O
)	O
bfd_alloc	(*(struct),long)->(*(void))
(	O
abfd	*(struct)
,	O
amt	O
)	O
;	O
if	O
(	O
secinfo	O
->	O
cumulative_skips	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
pskips	O
=	O
secinfo	O
->	O
cumulative_skips	O
;	O
pstridx	O
=	O
secinfo	O
->	O
stridxs	O
;	O
offset	long
=	O
0	int
;	O
for	O
(	O
i	*(struct)
=	O
0	int
;	O
i	*(struct)
<	O
count	int
;	O
i	*(struct)
++	O
,	O
pskips	O
++	O
,	O
pstridx	O
++	O
)	O
{	O
*	O
pskips	O
=	O
offset	long
;	O
if	O
(	O
*	O
pstridx	O
==	O
(	O
bfd_size_type	long
)	O
-	O
1	int
)	O
offset	long
+=	O
STABSIZE	O
;	O
}	O
BFD_ASSERT	O
(	O
offset	long
!=	O
0	int
)	O
;	O
}	O
return	O
TRUE	int
;	O
error_return	O
:	O
if	O
(	O
stabbuf	O
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
stabbuf	O
)	O
;	O
if	O
(	O
stabstrbuf	O
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
stabstrbuf	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
bfd_boolean	int
_bfd_discard_section_stabs	O
(	O
bfd	struct
*	O
abfd	*(struct)
,	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
stabsec	O
,	O
void	O
*	O
psecinfo	O
,	O
bfd_boolean	int
(	O
*	O
reloc_symbol_deleted_p	O
)	O
(	O
bfd_vma	long
,	O
void	O
*	O
)	O
,	O
void	O
*	O
cookie	O
)	O
{	O
bfd_size_type	long
count	int
,	O
amt	O
;	O
struct	O
stab_section_info	O
*	O
secinfo	O
;	O
bfd_byte	char
*	O
stabbuf	O
=	O
NULL	O
;	O
bfd_byte	char
*	O
sym	*(struct)
,	O
*	O
symend	O
;	O
bfd_size_type	long
skip	O
;	O
bfd_size_type	long
*	O
pstridx	O
;	O
int	O
deleting	O
;	O
if	O
(	O
stabsec	O
->	O
size	long
==	O
0	int
)	O
return	O
FALSE	O
;	O
if	O
(	O
stabsec	O
->	O
size	long
%	O
STABSIZE	O
!=	O
0	int
)	O
return	O
FALSE	O
;	O
if	O
(	O
(	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
!=	O
NULL	O
&&	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
psecinfo	O
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
count	int
=	O
stabsec	O
->	O
rawsize	long
/	O
STABSIZE	O
;	O
secinfo	O
=	O
(	O
struct	O
stab_section_info	O
*	O
)	O
psecinfo	O
;	O
if	O
(	O
!	O
bfd_malloc_and_get_section	(*(struct),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(*(char)))->(int)
(	O
abfd	*(struct)
,	O
stabsec	O
,	O
&	O
stabbuf	O
)	O
)	O
goto	O
error_return	O
;	O
skip	O
=	O
0	int
;	O
deleting	O
=	O
-	O
1	int
;	O
symend	O
=	O
stabbuf	O
+	O
stabsec	O
->	O
rawsize	long
;	O
for	O
(	O
sym	*(struct)
=	O
stabbuf	O
,	O
pstridx	O
=	O
secinfo	O
->	O
stridxs	O
;	O
sym	*(struct)
<	O
symend	O
;	O
sym	*(struct)
+=	O
STABSIZE	O
,	O
++	O
pstridx	O
)	O
{	O
int	O
type	enum(int,int,int,int)
;	O
if	O
(	O
*	O
pstridx	O
==	O
(	O
bfd_size_type	long
)	O
-	O
1	int
)	O
continue	O
;	O
type	enum(int,int,int,int)
=	O
sym	*(struct)
[	O
TYPEOFF	O
]	O
;	O
if	O
(	O
type	enum(int,int,int,int)
==	O
(	O
int	O
)	O
N_FUN	O
)	O
{	O
int	O
strx	O
=	O
bfd_get_32	O
(	O
abfd	*(struct)
,	O
sym	*(struct)
+	O
STRDXOFF	O
)	O
;	O
if	O
(	O
strx	O
==	O
0	int
)	O
{	O
if	O
(	O
deleting	O
)	O
{	O
skip	O
++	O
;	O
*	O
pstridx	O
=	O
-	O
1	int
;	O
}	O
deleting	O
=	O
-	O
1	int
;	O
continue	O
;	O
}	O
deleting	O
=	O
0	int
;	O
if	O
(	O
(	O
*	O
reloc_symbol_deleted_p	O
)	O
(	O
sym	*(struct)
+	O
VALOFF	O
-	O
stabbuf	O
,	O
cookie	O
)	O
)	O
deleting	O
=	O
1	int
;	O
}	O
if	O
(	O
deleting	O
==	O
1	int
)	O
{	O
*	O
pstridx	O
=	O
-	O
1	int
;	O
skip	O
++	O
;	O
}	O
else	O
if	O
(	O
deleting	O
==	O
-	O
1	int
)	O
{	O
if	O
(	O
type	enum(int,int,int,int)
==	O
(	O
int	O
)	O
N_STSYM	O
||	O
type	enum(int,int,int,int)
==	O
(	O
int	O
)	O
N_LCSYM	O
)	O
if	O
(	O
(	O
*	O
reloc_symbol_deleted_p	O
)	O
(	O
sym	*(struct)
+	O
VALOFF	O
-	O
stabbuf	O
,	O
cookie	O
)	O
)	O
{	O
*	O
pstridx	O
=	O
-	O
1	int
;	O
skip	O
++	O
;	O
}	O
}	O
}	O
free	(*(void))->(void)
(	O
stabbuf	O
)	O
;	O
stabbuf	O
=	O
NULL	O
;	O
stabsec	O
->	O
size	long
-=	O
skip	O
*	O
STABSIZE	O
;	O
if	O
(	O
stabsec	O
->	O
size	long
==	O
0	int
)	O
stabsec	O
->	O
flags	int
|=	O
SEC_EXCLUDE	O
|	O
SEC_KEEP	O
;	O
if	O
(	O
skip	O
!=	O
0	int
)	O
{	O
bfd_size_type	long
i	*(struct)
,	O
offset	long
;	O
bfd_size_type	long
*	O
pskips	O
;	O
if	O
(	O
secinfo	O
->	O
cumulative_skips	O
==	O
NULL	O
)	O
{	O
amt	O
=	O
count	int
*	O
sizeof	O
(	O
bfd_size_type	long
)	O
;	O
secinfo	O
->	O
cumulative_skips	O
=	O
(	O
bfd_size_type	long
*	O
)	O
bfd_alloc	(*(struct),long)->(*(void))
(	O
abfd	*(struct)
,	O
amt	O
)	O
;	O
if	O
(	O
secinfo	O
->	O
cumulative_skips	O
==	O
NULL	O
)	O
goto	O
error_return	O
;	O
}	O
pskips	O
=	O
secinfo	O
->	O
cumulative_skips	O
;	O
pstridx	O
=	O
secinfo	O
->	O
stridxs	O
;	O
offset	long
=	O
0	int
;	O
for	O
(	O
i	*(struct)
=	O
0	int
;	O
i	*(struct)
<	O
count	int
;	O
i	*(struct)
++	O
,	O
pskips	O
++	O
,	O
pstridx	O
++	O
)	O
{	O
*	O
pskips	O
=	O
offset	long
;	O
if	O
(	O
*	O
pstridx	O
==	O
(	O
bfd_size_type	long
)	O
-	O
1	int
)	O
offset	long
+=	O
STABSIZE	O
;	O
}	O
BFD_ASSERT	O
(	O
offset	long
!=	O
0	int
)	O
;	O
}	O
return	O
skip	O
>	O
0	int
;	O
error_return	O
:	O
if	O
(	O
stabbuf	O
!=	O
NULL	O
)	O
free	(*(void))->(void)
(	O
stabbuf	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
bfd_boolean	int
_bfd_write_section_stabs	O
(	O
bfd	struct
*	O
output_bfd	*(struct)
,	O
struct	O
stab_info	struct(*(struct),struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int),*(struct))
*	O
sinfo	O
,	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
stabsec	O
,	O
void	O
*	O
*	O
psecinfo	O
,	O
bfd_byte	char
*	O
contents	*(char)
)	O
{	O
struct	O
stab_section_info	O
*	O
secinfo	O
;	O
struct	O
stab_excl_list	O
*	O
e	O
;	O
bfd_byte	char
*	O
sym	*(struct)
,	O
*	O
tosym	O
,	O
*	O
symend	O
;	O
bfd_size_type	long
*	O
pstridx	O
;	O
secinfo	O
=	O
(	O
struct	O
stab_section_info	O
*	O
)	O
*	O
psecinfo	O
;	O
if	O
(	O
secinfo	O
==	O
NULL	O
)	O
return	O
bfd_set_section_contents	(*(struct),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(void),long,long)->(int)
(	O
output_bfd	*(struct)
,	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
contents	*(char)
,	O
stabsec	O
->	O
output_offset	long
,	O
stabsec	O
->	O
size	long
)	O
;	O
for	O
(	O
e	O
=	O
secinfo	O
->	O
excls	O
;	O
e	O
!=	O
NULL	O
;	O
e	O
=	O
e	O
->	O
next	*(struct(*(struct(*(struct`),*(char),long)),*(char),long))
)	O
{	O
bfd_byte	char
*	O
excl_sym	O
;	O
BFD_ASSERT	O
(	O
e	O
->	O
offset	long
<	O
stabsec	O
->	O
rawsize	long
)	O
;	O
excl_sym	O
=	O
contents	*(char)
+	O
e	O
->	O
offset	long
;	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
e	O
->	O
val	array(int)
,	O
excl_sym	O
+	O
VALOFF	O
)	O
;	O
excl_sym	O
[	O
TYPEOFF	O
]	O
=	O
e	O
->	O
type	enum(int,int,int,int)
;	O
}	O
tosym	O
=	O
contents	*(char)
;	O
symend	O
=	O
contents	*(char)
+	O
stabsec	O
->	O
rawsize	long
;	O
for	O
(	O
sym	*(struct)
=	O
contents	*(char)
,	O
pstridx	O
=	O
secinfo	O
->	O
stridxs	O
;	O
sym	*(struct)
<	O
symend	O
;	O
sym	*(struct)
+=	O
STABSIZE	O
,	O
++	O
pstridx	O
)	O
{	O
if	O
(	O
*	O
pstridx	O
!=	O
(	O
bfd_size_type	long
)	O
-	O
1	int
)	O
{	O
if	O
(	O
tosym	O
!=	O
sym	*(struct)
)	O
memcpy	(*(void),*(void),long)->(*(void))
(	O
tosym	O
,	O
sym	*(struct)
,	O
STABSIZE	O
)	O
;	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
*	O
pstridx	O
,	O
tosym	O
+	O
STRDXOFF	O
)	O
;	O
if	O
(	O
sym	*(struct)
[	O
TYPEOFF	O
]	O
==	O
0	int
)	O
{	O
BFD_ASSERT	O
(	O
sym	*(struct)
==	O
contents	*(char)
)	O
;	O
bfd_put_32	O
(	O
output_bfd	*(struct)
,	O
_bfd_stringtab_size	O
(	O
sinfo	O
->	O
strings	*(struct)
)	O
,	O
tosym	O
+	O
VALOFF	O
)	O
;	O
bfd_put_16	O
(	O
output_bfd	*(struct)
,	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
size	long
/	O
STABSIZE	O
-	O
1	int
,	O
tosym	O
+	O
DESCOFF	O
)	O
;	O
}	O
tosym	O
+=	O
STABSIZE	O
;	O
}	O
}	O
BFD_ASSERT	O
(	O
(	O
bfd_size_type	long
)	O
(	O
tosym	O
-	O
contents	*(char)
)	O
==	O
stabsec	O
->	O
size	long
)	O
;	O
return	O
bfd_set_section_contents	(*(struct),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(void),long,long)->(int)
(	O
output_bfd	*(struct)
,	O
stabsec	O
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
,	O
contents	*(char)
,	O
(	O
file_ptr	long
)	O
stabsec	O
->	O
output_offset	long
,	O
stabsec	O
->	O
size	long
)	O
;	O
}	O
bfd_boolean	int
_bfd_write_stab_strings	O
(	O
bfd	struct
*	O
output_bfd	*(struct)
,	O
struct	O
stab_info	struct(*(struct),struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int),*(struct))
*	O
sinfo	O
)	O
{	O
if	O
(	O
bfd_is_abs_section	(*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct(long,int)),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))))->(int)
(	O
sinfo	O
->	O
stabstr	*(struct)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
)	O
)	O
return	O
TRUE	int
;	O
BFD_ASSERT	O
(	O
(	O
sinfo	O
->	O
stabstr	*(struct)
->	O
output_offset	long
+	O
_bfd_stringtab_size	O
(	O
sinfo	O
->	O
strings	*(struct)
)	O
)	O
<=	O
sinfo	O
->	O
stabstr	*(struct)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
size	long
)	O
;	O
if	O
(	O
bfd_seek	(*(struct),long,int)->(int)
(	O
output_bfd	*(struct)
,	O
(	O
file_ptr	long
)	O
(	O
sinfo	O
->	O
stabstr	*(struct)
->	O
output_section	*(struct(*(char),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*`,long))),int,int,*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`))),union(*(struct),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)))))
->	O
filepos	long
+	O
sinfo	O
->	O
stabstr	*(struct)
->	O
output_offset	long
)	O
,	O
SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
_bfd_stringtab_emit	O
(	O
output_bfd	*(struct)
,	O
sinfo	O
->	O
strings	*(struct)
)	O
)	O
return	O
FALSE	O
;	O
_bfd_stringtab_free	O
(	O
sinfo	O
->	O
strings	*(struct)
)	O
;	O
bfd_hash_table_free	(*(struct(*(*(struct`)),*((*`,*`,*`)->(*`)),*(void),int,int,int,int)))->(void)
(	O
&	O
sinfo	O
->	O
includes	struct(*(*(struct(*(struct`),*(char),long))),*((*(struct(*`,*`,long)),*(struct(*`,*`,*`,int,int,int,int)),*(char))->(*(struct(*`,*`,long)))),*(void),int,int,int,int)
)	O
;	O
return	O
TRUE	int
;	O
}	O
bfd_vma	long
_bfd_stab_section_offset	O
(	O
asection	struct(*(char),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),int,*(struct),*(*(struct)),int,long,long,long,*(void),*(char),*(struct(int,union(*(struct`),long))),int,int,*(struct(*(char),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct),int,long,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),int,*(struct),*(*(struct`)),int,long,long,long,*(void),*(char),*(struct(int,union`)),int,int,*(struct(*`,int,int,*`,*`,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*`,int,long,*`,int,*`,*`,int,long,long,long,*`,*`,*`,int,int,*`,long,int,*`,*`,*`,*`,*`,union`,union`)),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct`)),union(*(struct`),*(struct`)),union(*(struct`),*(struct`)))),long,int,*(void),*(struct),*(struct),*(struct),*(*(struct)),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))),union(*(struct),*(struct(*(char),int,int,*(struct`),*(struct`),int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,*(struct`),int,long,*(struct`),int,*(struct`),*(*`),int,long,long,long,*(void),*(char),*(struct`),int,int,*(struct`),long,int,*(void),*(struct`),*(struct`),*(struct`),*(*`),union(*`,*`),union(*`,*`)))))
*	O
stabsec	O
,	O
void	O
*	O
psecinfo	O
,	O
bfd_vma	long
offset	long
)	O
{	O
struct	O
stab_section_info	O
*	O
secinfo	O
;	O
secinfo	O
=	O
(	O
struct	O
stab_section_info	O
*	O
)	O
psecinfo	O
;	O
if	O
(	O
secinfo	O
==	O
NULL	O
)	O
return	O
offset	long
;	O
if	O
(	O
offset	long
>=	O
stabsec	O
->	O
rawsize	long
)	O
return	O
offset	long
-	O
stabsec	O
->	O
rawsize	long
+	O
stabsec	O
->	O
size	long
;	O
if	O
(	O
secinfo	O
->	O
cumulative_skips	O
)	O
{	O
bfd_vma	long
i	*(struct)
;	O
i	*(struct)
=	O
offset	long
/	O
STABSIZE	O
;	O
if	O
(	O
secinfo	O
->	O
stridxs	O
[	O
i	*(struct)
]	O
==	O
(	O
bfd_size_type	long
)	O
-	O
1	int
)	O
return	O
(	O
bfd_vma	long
)	O
-	O
1	int
;	O
return	O
offset	long
-	O
secinfo	O
->	O
cumulative_skips	O
[	O
i	*(struct)
]	O
;	O
}	O
return	O
offset	long
;	O
}	O
