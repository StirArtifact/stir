enum	O
{	O
False	int
,	O
True	int
}	O
;	O
static	O
void	O
yyerror	()->(void)
(	O
)	O
;	O
static	O
ShogiMove	enum(int,int,int,int,int,int,int,int,int,int,int,int)
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
;	O
static	O
int	O
from_x	int
,	O
from_y	int
,	O
to_x	int
,	O
to_y	int
;	O
static	O
char	O
piece	char
;	O
char	O
currentMoveString	array(char)
[	O
MSG_SIZ	int
]	O
;	O
static	O
char	O
token	array(char)
[	O
20	int
]	O
;	O
FILE	struct
*	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
extern	O
FILE	struct
*	O
gameFileFP	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
*	O
toFirstProgFP	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
extern	O
int	O
currentMove	int
;	O
extern	O
char	O
moveList	array(array(char))
[	O
MAX_MOVES	int
]	O
[	O
MOVE_LEN	int
]	O
;	O
extern	O
void	O
SendToProgram	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
char	O
*	O
message	*(char)
,	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
extern	O
void	O
MakeMove	(*(enum(int,int,int,int,int,int,int,int,int,int,int,int)),int,int,int,int)->(void)
(	O
ShogiMove	enum(int,int,int,int,int,int,int,int,int,int,int,int)
*	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
,	O
int	O
from_x	int
,	O
int	O
from_y	int
,	O
int	O
to_x	int
,	O
int	O
to_y	int
)	O
;	O
int	O
lines	int
=	O
1	int
,	O
cols	int
=	O
1	int
;	O
enum	O
yytokentype	enum(int,int,int,int,int,int,int,int,int,int)
{	O
PROMOTE	int
=	O
258	int
,	O
DROPS	int
=	O
259	int
,	O
PIECE	int
=	O
260	int
,	O
SQUARE	int
=	O
261	int
,	O
NUMBER	int
=	O
262	int
,	O
COMMENT	int
=	O
263	int
,	O
COLON	int
=	O
264	int
,	O
BLACK_WINS	int
=	O
265	int
,	O
WHITE_WINS	int
=	O
266	int
,	O
DRAW	int
=	O
267	int
}	O
;	O
typedef	O
union	O
YYSTYPE	union
YYSTYPE	union
;	O
union	O
YYSTYPE	union
{	O
int	O
val	int
;	O
char	O
*	O
string	*(char)
;	O
}	O
;	O
extern	O
YYSTYPE	union
yylval	union(int,*(char))
;	O
int	O
yyparse	()->(int)
(	O
void	O
)	O
;	O
typedef	O
unsigned	O
char	O
yytype_uint8	char
;	O
typedef	O
signed	O
char	O
yytype_int8	char
;	O
typedef	O
unsigned	O
short	O
int	O
yytype_uint16	short
;	O
typedef	O
short	O
int	O
yytype_int16	short
;	O
union	O
yyalloc	union(short,union(int,*(char)))
{	O
yytype_int16	short
yyss_alloc	short
;	O
YYSTYPE	union
yyvs_alloc	union(int,*(char))
;	O
}	O
;	O
static	O
const	O
yytype_uint8	char
yytranslate	array(char)
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypact	array(char)
[	O
]	O
=	O
{	O
-	O
6	int
,	O
2	int
,	O
-	O
4	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
1	int
,	O
3	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
0	int
,	O
7	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
5	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
8	int
,	O
5	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
9	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
10	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yydefact	array(char)
[	O
]	O
=	O
{	O
3	int
,	O
0	int
,	O
7	int
,	O
1	int
,	O
4	int
,	O
5	int
,	O
11	int
,	O
7	int
,	O
12	int
,	O
8	int
,	O
6	int
,	O
0	int
,	O
14	int
,	O
13	int
,	O
15	int
,	O
9	int
,	O
0	int
,	O
20	int
,	O
16	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
10	int
,	O
0	int
,	O
0	int
,	O
21	int
,	O
17	int
,	O
0	int
,	O
18	int
,	O
22	int
,	O
27	int
,	O
23	int
,	O
28	int
,	O
19	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypgoto	array(char)
[	O
]	O
=	O
{	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
11	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
,	O
-	O
6	int
}	O
;	O
static	O
const	O
yytype_int8	char
yydefgoto	array(char)
[	O
]	O
=	O
{	O
-	O
1	int
,	O
1	int
,	O
2	int
,	O
7	int
,	O
5	int
,	O
6	int
,	O
12	int
,	O
16	int
,	O
9	int
,	O
11	int
,	O
15	int
,	O
22	int
,	O
24	int
,	O
28	int
,	O
30	int
,	O
23	int
,	O
27	int
,	O
31	int
,	O
33	int
}	O
;	O
static	O
const	O
yytype_int8	char
yytable	array(char)
[	O
]	O
=	O
{	O
17	int
,	O
18	int
,	O
3	int
,	O
-	O
2	int
,	O
4	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
8	int
,	O
13	int
,	O
14	int
,	O
26	int
,	O
25	int
,	O
32	int
,	O
0	int
,	O
29	int
,	O
0	int
,	O
0	int
,	O
10	int
}	O
;	O
static	O
const	O
yytype_int8	char
yycheck	array(char)
[	O
]	O
=	O
{	O
5	int
,	O
6	int
,	O
0	int
,	O
0	int
,	O
8	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
7	int
,	O
9	int
,	O
3	int
,	O
6	int
,	O
4	int
,	O
3	int
,	O
-	O
1	int
,	O
6	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
7	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yystos	array(char)
[	O
]	O
=	O
{	O
0	int
,	O
14	int
,	O
15	int
,	O
0	int
,	O
8	int
,	O
17	int
,	O
18	int
,	O
16	int
,	O
7	int
,	O
21	int
,	O
17	int
,	O
22	int
,	O
19	int
,	O
9	int
,	O
3	int
,	O
23	int
,	O
20	int
,	O
5	int
,	O
6	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
24	int
,	O
28	int
,	O
25	int
,	O
4	int
,	O
6	int
,	O
29	int
,	O
26	int
,	O
6	int
,	O
27	int
,	O
30	int
,	O
3	int
,	O
31	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr1	array(char)
[	O
]	O
=	O
{	O
0	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
15	int
,	O
16	int
,	O
16	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
17	int
,	O
21	int
,	O
22	int
,	O
21	int
,	O
23	int
,	O
23	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
24	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
31	int
,	O
31	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr2	array(char)
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
3	int
,	O
0	int
,	O
2	int
,	O
0	int
,	O
2	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
6	int
,	O
0	int
,	O
0	int
,	O
3	int
,	O
0	int
,	O
1	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
6	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
6	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
0	int
,	O
1	int
}	O
;	O
static	O
void	O
yydestruct	(*(char),int,*(union(int,*(char))))->(void)
(	O
const	O
char	O
*	O
yymsg	*(char)
,	O
int	O
yytype	int
,	O
YYSTYPE	union
*	O
yyvaluep	*(union(int,*(char)))
)	O
{	O
YYUSE	O
(	O
yyvaluep	*(union(int,*(char)))
)	O
;	O
if	O
(	O
!	O
yymsg	*(char)
)	O
yymsg	*(char)
=	O
"Deleting"	*(char)
;	O
YY_SYMBOL_PRINT	O
(	O
yymsg	*(char)
,	O
yytype	int
,	O
yyvaluep	*(union(int,*(char)))
,	O
yylocationp	O
)	O
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
YYUSE	O
(	O
yytype	int
)	O
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
}	O
int	O
yychar	int
;	O
YYSTYPE	union
yylval	union(int,*(char))
;	O
int	O
yynerrs	int
;	O
int	O
yyparse	()->(int)
(	O
void	O
)	O
{	O
int	O
yystate	int
;	O
int	O
yyerrstatus	int
;	O
yytype_int16	short
yyssa	array(short)
[	O
YYINITDEPTH	int
]	O
;	O
yytype_int16	short
*	O
yyss	*(short)
;	O
yytype_int16	short
*	O
yyssp	*(short)
;	O
YYSTYPE	union
yyvsa	array(union(int,*(char)))
[	O
YYINITDEPTH	int
]	O
;	O
YYSTYPE	union
*	O
yyvs	*(union(int,*(char)))
;	O
YYSTYPE	union
*	O
yyvsp	*(union(int,*(char)))
;	O
YYSIZE_T	O
yystacksize	long
;	O
int	O
yyn	int
;	O
int	O
yyresult	int
;	O
int	O
yytoken	int
=	O
0	int
;	O
YYSTYPE	union
yyval	union(int,*(char))
;	O
int	O
yylen	int
=	O
0	int
;	O
yyssp	*(short)
=	O
yyss	*(short)
=	O
yyssa	array(short)
;	O
yyvsp	*(union(int,*(char)))
=	O
yyvs	*(union(int,*(char)))
=	O
yyvsa	array(union(int,*(char)))
;	O
yystacksize	long
=	O
YYINITDEPTH	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Starting parse\n"	*(char)
)	O
)	O
;	O
yystate	int
=	O
0	int
;	O
yyerrstatus	int
=	O
0	int
;	O
yynerrs	int
=	O
0	int
;	O
yychar	int
=	O
YYEMPTY	O
;	O
goto	O
yysetstate	O
;	O
yynewstate	O
:	O
yyssp	*(short)
++	O
;	O
yysetstate	O
:	O
*	O
yyssp	*(short)
=	O
yystate	int
;	O
if	O
(	O
yyss	*(short)
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	*(short)
)	O
{	O
YYSIZE_T	O
yysize	long
=	O
yyssp	*(short)
-	O
yyss	*(short)
+	O
1	int
;	O
if	O
(	O
YYMAXDEPTH	int
<=	O
yystacksize	long
)	O
goto	O
yyexhaustedlab	O
;	O
yystacksize	long
*=	O
2	int
;	O
if	O
(	O
YYMAXDEPTH	int
<	O
yystacksize	long
)	O
yystacksize	long
=	O
YYMAXDEPTH	int
;	O
{	O
yytype_int16	short
*	O
yyss1	*(short)
=	O
yyss	*(short)
;	O
union	O
yyalloc	union(short,union(int,*(char)))
*	O
yyptr	*(union(short,union(int,*(char))))
=	O
(	O
union	O
yyalloc	union(short,union(int,*(char)))
*	O
)	O
YYSTACK_ALLOC	O
(	O
YYSTACK_BYTES	O
(	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
!	O
yyptr	*(union(short,union(int,*(char))))
)	O
goto	O
yyexhaustedlab	O
;	O
YYSTACK_RELOCATE	O
(	O
yyss_alloc	short
,	O
yyss	*(short)
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyvs_alloc	union(int,*(char))
,	O
yyvs	*(union(int,*(char)))
)	O
;	O
if	O
(	O
yyss1	*(short)
!=	O
yyssa	array(short)
)	O
YYSTACK_FREE	O
(	O
yyss1	*(short)
)	O
;	O
}	O
yyssp	*(short)
=	O
yyss	*(short)
+	O
yysize	long
-	O
1	int
;	O
yyvsp	*(union(int,*(char)))
=	O
yyvs	*(union(int,*(char)))
+	O
yysize	long
-	O
1	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Stack size increased to %lu\n"	*(char)
,	O
(	O
unsigned	O
long	O
int	O
)	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
yyss	*(short)
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	*(short)
)	O
YYABORT	O
;	O
}	O
YYDPRINTF	O
(	O
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Entering state %d\n"	*(char)
,	O
yystate	int
)	O
)	O
;	O
if	O
(	O
yystate	int
==	O
YYFINAL	int
)	O
YYACCEPT	O
;	O
goto	O
yybackup	O
;	O
yybackup	O
:	O
yyn	int
=	O
yypact	array(char)
[	O
yystate	int
]	O
;	O
if	O
(	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
goto	O
yydefault	O
;	O
if	O
(	O
yychar	int
==	O
YYEMPTY	O
)	O
{	O
YYDPRINTF	O
(	O
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Reading a token: "	*(char)
)	O
)	O
;	O
yychar	int
=	O
yylex	()->(int)
(	O
)	O
;	O
}	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
yychar	int
=	O
yytoken	int
=	O
YYEOF	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"Now at end of input.\n"	*(char)
)	O
)	O
;	O
}	O
else	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Next token is"	*(char)
,	O
yytoken	int
,	O
&	O
yylval	union(int,*(char))
,	O
&	O
yylloc	O
)	O
;	O
}	O
yyn	int
+=	O
yytoken	int
;	O
if	O
(	O
yyn	int
<	O
0	int
||	O
YYLAST	int
<	O
yyn	int
||	O
yycheck	array(char)
[	O
yyn	int
]	O
!=	O
yytoken	int
)	O
goto	O
yydefault	O
;	O
yyn	int
=	O
yytable	array(char)
[	O
yyn	int
]	O
;	O
if	O
(	O
yyn	int
<=	O
0	int
)	O
{	O
if	O
(	O
yytable_value_is_error	int
(	O
yyn	int
)	O
)	O
goto	O
yyerrlab	O
;	O
yyn	int
=	O
-	O
yyn	int
;	O
goto	O
yyreduce	O
;	O
}	O
if	O
(	O
yyerrstatus	int
)	O
yyerrstatus	int
--	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	*(char)
,	O
yytoken	int
,	O
&	O
yylval	union(int,*(char))
,	O
&	O
yylloc	O
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
yystate	int
=	O
yyn	int
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	*(union(int,*(char)))
=	O
yylval	union(int,*(char))
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
goto	O
yynewstate	O
;	O
yydefault	O
:	O
yyn	int
=	O
yydefact	array(char)
[	O
yystate	int
]	O
;	O
if	O
(	O
yyn	int
==	O
0	int
)	O
goto	O
yyerrlab	O
;	O
goto	O
yyreduce	O
;	O
yyreduce	O
:	O
yylen	int
=	O
yyr2	array(char)
[	O
yyn	int
]	O
;	O
yyval	union(int,*(char))
=	O
yyvsp	*(union(int,*(char)))
[	O
1	int
-	O
yylen	int
]	O
;	O
YY_REDUCE_PRINT	O
(	O
yyn	int
)	O
;	O
switch	O
(	O
yyn	int
)	O
{	O
case	O
4	int
:	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
7	int
:	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"number"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
8	int
:	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"promoted"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
9	int
:	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"move"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
12	int
:	O
{	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"colon"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
16	int
:	O
{	O
from_x	int
=	O
'9'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
0	int
]	O
;	O
from_y	int
=	O
'i'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
1	int
]	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"square"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
17	int
:	O
{	O
to_x	int
=	O
'9'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
0	int
]	O
;	O
to_y	int
=	O
'i'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
1	int
]	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
18	int
:	O
{	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
NormalMove	int
;	O
}	O
break	O
;	O
case	O
19	int
:	O
{	O
SendToProgram	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
currentMoveString	array(char)
,	O
toFirstProgFP	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
moveList	array(array(char))
[	O
currentMove	int
]	O
,	O
currentMoveString	array(char)
)	O
;	O
MakeMove	(*(enum(int,int,int,int,int,int,int,int,int,int,int,int)),int,int,int,int)->(void)
(	O
&	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
,	O
from_x	int
,	O
from_y	int
,	O
to_x	int
,	O
to_y	int
)	O
;	O
}	O
break	O
;	O
case	O
20	int
:	O
{	O
piece	char
=	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
0	int
]	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"'*'"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
21	int
:	O
{	O
strcat	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
"*"	*(char)
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
token	array(char)
,	O
"square"	*(char)
)	O
;	O
}	O
break	O
;	O
case	O
22	int
:	O
{	O
to_x	int
=	O
'9'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
0	int
]	O
;	O
to_y	int
=	O
'i'	O
-	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
[	O
1	int
]	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
(	O
yyvsp	*(union(int,*(char)))
[	O
0	int
]	O
.	O
string	*(char)
)	O
)	O
;	O
}	O
break	O
;	O
case	O
23	int
:	O
{	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
(	O
BlackOnMove	O
(	O
currentMove	int
)	O
?	O
BlackDrop	int
:	O
WhiteDrop	int
)	O
;	O
switch	O
(	O
piece	char
)	O
{	O
case	O
'P'	O
:	O
from_x	int
=	O
81	int
;	O
break	O
;	O
case	O
'L'	O
:	O
from_x	int
=	O
82	int
;	O
break	O
;	O
case	O
'N'	O
:	O
from_x	int
=	O
83	int
;	O
break	O
;	O
case	O
'S'	O
:	O
from_x	int
=	O
84	int
;	O
break	O
;	O
case	O
'G'	O
:	O
from_x	int
=	O
85	int
;	O
break	O
;	O
case	O
'B'	O
:	O
from_x	int
=	O
86	int
;	O
break	O
;	O
case	O
'R'	O
:	O
from_x	int
=	O
87	int
;	O
break	O
;	O
case	O
'K'	O
:	O
from_x	int
=	O
88	int
;	O
break	O
;	O
default	O
:	O
from_x	int
=	O
-	O
1	int
;	O
}	O
;	O
from_y	int
=	O
from_x	int
;	O
SendToProgram	(*(char),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(void)
(	O
currentMoveString	array(char)
,	O
toFirstProgFP	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
moveList	array(array(char))
[	O
currentMove	int
]	O
,	O
currentMoveString	array(char)
)	O
;	O
MakeMove	(*(enum(int,int,int,int,int,int,int,int,int,int,int,int)),int,int,int,int)->(void)
(	O
&	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
,	O
from_x	int
,	O
from_y	int
,	O
to_x	int
,	O
to_y	int
)	O
;	O
}	O
break	O
;	O
case	O
24	int
:	O
{	O
loaded_game_finished	int
=	O
1	int
;	O
DisplayMessage	()->(int)
(	O
"Black wins"	*(char)
,	O
False	int
)	O
;	O
}	O
break	O
;	O
case	O
25	int
:	O
{	O
loaded_game_finished	int
=	O
1	int
;	O
DisplayMessage	()->(int)
(	O
"White wins"	*(char)
,	O
False	int
)	O
;	O
}	O
break	O
;	O
case	O
26	int
:	O
{	O
loaded_game_finished	int
=	O
1	int
;	O
DisplayMessage	()->(int)
(	O
"Draw"	*(char)
,	O
False	int
)	O
;	O
}	O
break	O
;	O
case	O
28	int
:	O
{	O
move_type	enum(int,int,int,int,int,int,int,int,int,int,int,int)
=	O
(	O
BlackOnMove	O
(	O
currentMove	int
)	O
?	O
BlackPromotion	int
:	O
WhitePromotion	int
)	O
;	O
strcat	(*(char),*(char))->(*(char))
(	O
currentMoveString	array(char)
,	O
"+"	*(char)
)	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
YY_SYMBOL_PRINT	O
(	O
"-> $$ ="	*(char)
,	O
yyr1	array(char)
[	O
yyn	int
]	O
,	O
&	O
yyval	union(int,*(char))
,	O
&	O
yyloc	O
)	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	*(short)
,	O
yyssp	*(short)
)	O
;	O
*	O
++	O
yyvsp	*(union(int,*(char)))
=	O
yyval	union(int,*(char))
;	O
yyn	int
=	O
yyr1	array(char)
[	O
yyn	int
]	O
;	O
yystate	int
=	O
yypgoto	array(char)
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
+	O
*	O
yyssp	*(short)
;	O
if	O
(	O
0	int
<=	O
yystate	int
&&	O
yystate	int
<=	O
YYLAST	int
&&	O
yycheck	array(char)
[	O
yystate	int
]	O
==	O
*	O
yyssp	*(short)
)	O
yystate	int
=	O
yytable	array(char)
[	O
yystate	int
]	O
;	O
else	O
yystate	int
=	O
yydefgoto	array(char)
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
;	O
goto	O
yynewstate	O
;	O
yyerrlab	O
:	O
yytoken	int
=	O
yychar	int
==	O
YYEMPTY	O
?	O
YYEMPTY	O
:	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
if	O
(	O
!	O
yyerrstatus	int
)	O
{	O
++	O
yynerrs	int
;	O
yyerror	()->(void)
(	O
YY_	O
(	O
"syntax error"	*(char)
)	O
)	O
;	O
}	O
if	O
(	O
yyerrstatus	int
==	O
3	int
)	O
{	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
if	O
(	O
yychar	int
==	O
YYEOF	int
)	O
YYABORT	O
;	O
}	O
else	O
{	O
yydestruct	(*(char),int,*(union(int,*(char))))->(void)
(	O
"Error: discarding"	*(char)
,	O
yytoken	int
,	O
&	O
yylval	union(int,*(char))
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
}	O
}	O
goto	O
yyerrlab1	O
;	O
yyerrorlab	O
:	O
if	O
(	O
0	int
)	O
goto	O
yyerrorlab	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	*(short)
,	O
yyssp	*(short)
)	O
;	O
yystate	int
=	O
*	O
yyssp	*(short)
;	O
goto	O
yyerrlab1	O
;	O
yyerrlab1	O
:	O
yyerrstatus	int
=	O
3	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
yyn	int
=	O
yypact	array(char)
[	O
yystate	int
]	O
;	O
if	O
(	O
!	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
{	O
yyn	int
+=	O
YYTERROR	int
;	O
if	O
(	O
0	int
<=	O
yyn	int
&&	O
yyn	int
<=	O
YYLAST	int
&&	O
yycheck	array(char)
[	O
yyn	int
]	O
==	O
YYTERROR	int
)	O
{	O
yyn	int
=	O
yytable	array(char)
[	O
yyn	int
]	O
;	O
if	O
(	O
0	int
<	O
yyn	int
)	O
break	O
;	O
}	O
}	O
if	O
(	O
yyssp	*(short)
==	O
yyss	*(short)
)	O
YYABORT	O
;	O
yydestruct	(*(char),int,*(union(int,*(char))))->(void)
(	O
"Error: popping"	*(char)
,	O
yystos	array(char)
[	O
yystate	int
]	O
,	O
yyvsp	*(union(int,*(char)))
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
yystate	int
=	O
*	O
yyssp	*(short)
;	O
YY_STACK_PRINT	O
(	O
yyss	*(short)
,	O
yyssp	*(short)
)	O
;	O
}	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	*(union(int,*(char)))
=	O
yylval	union(int,*(char))
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	*(char)
,	O
yystos	array(char)
[	O
yyn	int
]	O
,	O
yyvsp	*(union(int,*(char)))
,	O
yylsp	O
)	O
;	O
yystate	int
=	O
yyn	int
;	O
goto	O
yynewstate	O
;	O
yyacceptlab	O
:	O
yyresult	int
=	O
0	int
;	O
goto	O
yyreturn	O
;	O
yyabortlab	O
:	O
yyresult	int
=	O
1	int
;	O
goto	O
yyreturn	O
;	O
yyexhaustedlab	O
:	O
yyerror	()->(void)
(	O
YY_	O
(	O
"memory exhausted"	*(char)
)	O
)	O
;	O
yyresult	int
=	O
2	int
;	O
yyreturn	O
:	O
if	O
(	O
yychar	int
!=	O
YYEMPTY	O
)	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
yydestruct	(*(char),int,*(union(int,*(char))))->(void)
(	O
"Cleanup: discarding lookahead"	*(char)
,	O
yytoken	int
,	O
&	O
yylval	union(int,*(char))
)	O
;	O
}	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
YY_STACK_PRINT	O
(	O
yyss	*(short)
,	O
yyssp	*(short)
)	O
;	O
while	O
(	O
yyssp	*(short)
!=	O
yyss	*(short)
)	O
{	O
yydestruct	(*(char),int,*(union(int,*(char))))->(void)
(	O
"Cleanup: popping"	*(char)
,	O
yystos	array(char)
[	O
*	O
yyssp	*(short)
]	O
,	O
yyvsp	*(union(int,*(char)))
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
yyss	*(short)
!=	O
yyssa	array(short)
)	O
YYSTACK_FREE	O
(	O
yyss	*(short)
)	O
;	O
return	O
yyresult	int
;	O
}	O
static	O
void	O
yyerror	()->(void)
(	O
char	O
*	O
errmsg	*(char)
)	O
{	O
if	O
(	O
strlen	(*(char))->(long)
(	O
token	array(char)
)	O
>	O
0	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"parse error line %d column %d : %s expected\n"	*(char)
,	O
lines	int
,	O
cols	int
,	O
token	array(char)
)	O
;	O
token	array(char)
[	O
0	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"parse error line %d column %d : %s\n"	*(char)
,	O
lines	int
,	O
cols	int
,	O
errmsg	*(char)
)	O
;	O
}	O
exit	(int)->(void)
(	O
-	O
1	int
)	O
;	O
}	O
extern	O
FILE	struct
*	O
yyin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
void	O
parseGameFile	()->(void)
(	O
)	O
{	O
yyin	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
gameFileFP	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
outfile	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
=	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
;	O
yyparse	()->(int)
(	O
)	O
;	O
}	O
