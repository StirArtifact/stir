void	O
*	O
xmalloc	(long)->(*(void))
(	O
size	long
)	O
size_t	long
size	long
;	O
{	O
void	O
*	O
ptr	*(void)
;	O
ptr	*(void)
=	O
malloc	(long)->(*(void))
(	O
size	long
)	O
;	O
if	O
(	O
ptr	*(void)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"xmalloc(): couldn't allocate %d bytes\n"	*(char)
)	O
,	O
size	long
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
return	O
ptr	*(void)
;	O
}	O
void	O
*	O
xcalloc	(long,long)->(*(void))
(	O
num	long
,	O
size	long
)	O
size_t	long
num	long
;	O
size_t	long
size	long
;	O
{	O
void	O
*	O
ptr	*(void)
;	O
ptr	*(void)
=	O
calloc	(long,long)->(*(void))
(	O
num	long
,	O
size	long
)	O
;	O
if	O
(	O
ptr	*(void)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"xcalloc(): couldn't allocate %d bytes\n"	*(char)
)	O
,	O
size	long
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
return	O
ptr	*(void)
;	O
}	O
void	O
*	O
xrealloc	(*(void),long)->(*(void))
(	O
ptr	*(void)
,	O
size	long
)	O
void	O
*	O
ptr	*(void)
;	O
size_t	long
size	long
;	O
{	O
void	O
*	O
nptr	*(void)
;	O
if	O
(	O
ptr	*(void)
==	O
NULL	O
)	O
return	O
xmalloc	(long)->(*(void))
(	O
size	long
)	O
;	O
nptr	*(void)
=	O
realloc	(*(void),long)->(*(void))
(	O
ptr	*(void)
,	O
size	long
)	O
;	O
if	O
(	O
nptr	*(void)
==	O
NULL	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
_	O
(	O
"xrealloc(): couldn't reallocate %d bytes\n"	*(char)
)	O
,	O
size	long
)	O
;	O
exit	(int)->(void)
(	O
1	int
)	O
;	O
}	O
return	O
nptr	*(void)
;	O
}	O
void	O
xfree	(*(void))->(void)
(	O
ptr	*(void)
)	O
void	O
*	O
ptr	*(void)
;	O
{	O
if	O
(	O
ptr	*(void)
==	O
NULL	O
)	O
return	O
;	O
free	(*(void))->(void)
(	O
ptr	*(void)
)	O
;	O
}	O
char	O
*	O
xstrdup	(*(char))->(*(char))
(	O
str	*(char)
)	O
char	O
*	O
str	*(char)
;	O
{	O
char	O
*	O
tmp	*(char)
;	O
tmp	*(char)
=	O
xmalloc	(long)->(*(void))
(	O
strlen	(*(char))->(long)
(	O
str	*(char)
)	O
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
tmp	*(char)
,	O
str	*(char)
)	O
;	O
return	O
tmp	*(char)
;	O
}	O
