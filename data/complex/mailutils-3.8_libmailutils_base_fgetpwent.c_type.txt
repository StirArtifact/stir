int	O
mu_fgetpwent_r	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))))->(int)
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
char	O
*	O
*	O
bufp	*(*(char))
,	O
size_t	long
*	O
bufs	*(long)
,	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
*	O
result	*(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
)	O
{	O
char	O
*	O
buffer	*(char)
=	O
*	O
bufp	*(*(char))
;	O
size_t	long
buflen	long
=	O
*	O
bufs	*(long)
;	O
char	O
*	O
nb	*(char)
;	O
size_t	long
ns	long
;	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
size_t	long
pos	long
=	O
SPWDSIZ	O
;	O
int	O
c	int
;	O
size_t	long
off	array(long)
[	O
6	int
]	O
;	O
int	O
i	int
=	O
0	int
;	O
if	O
(	O
!	O
buffer	*(char)
)	O
buflen	long
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
fgetc	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
)	O
!=	O
EOF	O
)	O
{	O
if	O
(	O
pos	long
>=	O
buflen	long
)	O
{	O
if	O
(	O
buflen	long
==	O
0	int
)	O
ns	long
=	O
SPWDSIZ	O
+	O
128	int
;	O
else	O
{	O
ns	long
=	O
ns	long
*	O
2	int
;	O
if	O
(	O
ns	long
<	O
buflen	long
)	O
return	O
ENOMEM	int
;	O
}	O
nb	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
ns	long
)	O
;	O
if	O
(	O
!	O
nb	*(char)
)	O
return	O
ENOMEM	int
;	O
buffer	*(char)
=	O
nb	*(char)
;	O
buflen	long
=	O
ns	long
;	O
}	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
{	O
buffer	*(char)
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
if	O
(	O
i	int
!=	O
sizeof	O
(	O
off	array(long)
)	O
/	O
sizeof	O
(	O
off	array(long)
[	O
0	int
]	O
)	O
)	O
{	O
pos	long
=	O
SPWDSIZ	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
c	int
==	O
':'	O
)	O
{	O
buffer	*(char)
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
if	O
(	O
i	int
<	O
sizeof	O
(	O
off	array(long)
)	O
/	O
sizeof	O
(	O
off	array(long)
[	O
0	int
]	O
)	O
)	O
off	array(long)
[	O
i	int
++	O
]	O
=	O
pos	long
;	O
}	O
else	O
buffer	*(char)
[	O
pos	long
++	O
]	O
=	O
c	int
;	O
}	O
if	O
(	O
pos	long
==	O
SPWDSIZ	O
)	O
return	O
ENOENT	int
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
{	O
if	O
(	O
i	int
!=	O
sizeof	O
(	O
off	array(long)
)	O
/	O
sizeof	O
(	O
off	array(long)
[	O
0	int
]	O
)	O
)	O
return	O
ENOENT	int
;	O
if	O
(	O
pos	long
==	O
buflen	long
)	O
{	O
nb	*(char)
=	O
realloc	(*(void),long)->(*(void))
(	O
buffer	*(char)
,	O
buflen	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
nb	*(char)
)	O
return	O
ENOMEM	int
;	O
buffer	*(char)
=	O
nb	*(char)
;	O
buflen	long
=	O
ns	long
;	O
}	O
buffer	*(char)
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
}	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
(	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
)	O
buffer	*(char)
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
=	O
buffer	*(char)
+	O
SPWDSIZ	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_passwd	*(char)
=	O
buffer	*(char)
+	O
off	array(long)
[	O
0	int
]	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_uid	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
buffer	*(char)
+	O
off	array(long)
[	O
1	int
]	O
,	O
NULL	O
,	O
10	int
)	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_gid	int
=	O
strtoul	(*(char),*(*(char)),int)->(long)
(	O
buffer	*(char)
+	O
off	array(long)
[	O
2	int
]	O
,	O
NULL	O
,	O
10	int
)	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_gecos	*(char)
=	O
buffer	*(char)
+	O
off	array(long)
[	O
3	int
]	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_dir	*(char)
=	O
buffer	*(char)
+	O
off	array(long)
[	O
4	int
]	O
;	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_shell	*(char)
=	O
buffer	*(char)
+	O
off	array(long)
[	O
5	int
]	O
;	O
*	O
bufp	*(*(char))
=	O
buffer	*(char)
;	O
*	O
bufs	*(long)
=	O
buflen	long
;	O
*	O
result	*(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
=	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
return	O
0	int
;	O
}	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
mu_fgetpwent	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))))->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
FILE	struct
*	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
)	O
{	O
static	O
char	O
*	O
buffer	*(char)
;	O
static	O
size_t	long
bufsize	long
;	O
static	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
int	O
rc	int
=	O
mu_fgetpwent_r	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(*(char)),*(long),*(*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))))->(int)
(	O
fp	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
&	O
buffer	*(char)
,	O
&	O
bufsize	long
,	O
&	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
errno	O
=	O
rc	int
;	O
return	O
NULL	O
;	O
}	O
return	O
pwbuf	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
}	O
