VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
VAllocColor	(*(char))->(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
(	O
char	O
*	O
name	*(char)
)	O
{	O
return	O
VAllocDepthCueuedColor	(*(char),int)->(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
(	O
name	*(char)
,	O
0	int
)	O
;	O
}	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
VAllocDepthCueuedColor	(*(char),int)->(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
(	O
char	O
*	O
name	*(char)
,	O
int	O
flag	int
)	O
{	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
_VDefaultWorkContext	*(struct(int,*(struct(*(char),short,short,*(struct`))),int,int,int,*(struct(*(char),short,short,*(struct`))),double,*(double)))
->	O
VColorList	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
,	O
*	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
0	int
,	O
*	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
;	O
while	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
!=	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
)	O
0	int
)	O
{	O
if	O
(	O
strcmp	(*(char),*(char))->(int)
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
color_name	*(char)
,	O
name	*(char)
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
flag	int
&&	O
(	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
flags	short
&	O
ColorEnableDepthCueing	int
)	O
)	O
||	O
(	O
flag	int
==	O
0	int
&&	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
flags	short
==	O
0	int
)	O
)	O
{	O
return	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
}	O
}	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
;	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
=	O
p	*(struct(short,short,short,struct(double,double,double),*(struct(double,double,double)),*(struct(*(char),short,short,*(struct`))),*(struct(*(char),short,short,*(struct`))),double))
->	O
next	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
;	O
}	O
if	O
(	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
==	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
)	O
0	int
)	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
=	O
&	O
_VDefaultWorkContext	*(struct(int,*(struct(*(char),short,short,*(struct`))),int,int,int,*(struct(*(char),short,short,*(struct`))),double,*(double)))
->	O
VColorList	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
;	O
else	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
=	O
&	O
(	O
prev	*(struct(short,long,*(struct(short,long,*(struct`),*(struct`))),*(struct(short,long,*(struct`),*(struct`)))))
->	O
next	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
)	O
;	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
=	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
*	O
)	O
Vmalloc	(int)->(*(char))
(	O
sizeof	O
(	O
VColor	struct(*(char),short,short,*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
)	O
)	O
;	O
(	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
)	O
->	O
color_name	*(char)
=	O
strdup	(*(char))->(*(char))
(	O
name	*(char)
)	O
;	O
(	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
)	O
->	O
cIndex	short
=	O
0	int
;	O
(	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
)	O
->	O
flags	short
=	O
flag	int
?	O
ColorEnableDepthCueing	int
:	O
0	int
;	O
(	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
)	O
->	O
next	*(struct(*(char),short,short,*(struct(*(char),short,short,*(struct`)))))
=	O
0	int
;	O
return	O
*	O
q	*(*(struct(*(char),short,short,*(struct(*`,short,short,*`)))))
;	O
}	O
