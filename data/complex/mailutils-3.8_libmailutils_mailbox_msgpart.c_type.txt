int	O
mu_message_get_part	(*(struct),long,*(*(struct)))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
size_t	long
part	long
,	O
mu_message_t	*(struct)
*	O
pmsg	*(*(struct))
)	O
{	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
||	O
pmsg	*(*(struct))
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*(struct)
->	O
_get_part	*((*(struct),long,*(*(struct)))->(int))
)	O
return	O
msg	*(struct)
->	O
_get_part	*((*(struct),long,*(*(struct)))->(int))
(	O
msg	*(struct)
,	O
part	long
,	O
pmsg	*(*(struct))
)	O
;	O
if	O
(	O
msg	*(struct)
->	O
mime	*(struct)
==	O
NULL	O
)	O
{	O
int	O
status	int
=	O
mu_mime_create	(*(*(struct)),*(struct),int)->(int)
(	O
&	O
msg	*(struct)
->	O
mime	*(struct)
,	O
msg	*(struct)
,	O
0	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
return	O
status	int
;	O
}	O
return	O
mu_mime_get_part	(*(struct),long,*(*(struct)))->(int)
(	O
msg	*(struct)
->	O
mime	*(struct)
,	O
part	long
,	O
pmsg	*(*(struct))
)	O
;	O
}	O
int	O
mu_message_set_get_part	(*(struct),*((*(struct),long,*(*(struct`)))->(int)),*(void))->(int)
(	O
mu_message_t	*(struct)
msg	*(struct)
,	O
int	O
(	O
*	O
_get_part	*((*(struct),long,*(*(struct)))->(int))
)	O
(	O
mu_message_t	*(struct)
,	O
size_t	long
,	O
mu_message_t	*(struct)
*	O
)	O
,	O
void	O
*	O
owner	*(void)
)	O
{	O
if	O
(	O
msg	*(struct)
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
msg	*(struct)
->	O
owner	*(void)
!=	O
owner	*(void)
)	O
return	O
EACCES	int
;	O
msg	*(struct)
->	O
_get_part	*((*(struct),long,*(*(struct)))->(int))
=	O
_get_part	*((*(struct),long,*(*(struct)))->(int))
;	O
return	O
0	int
;	O
}	O
