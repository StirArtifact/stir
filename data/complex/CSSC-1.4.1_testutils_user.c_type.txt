const	O
char	O
usage_str	array(char)
[	O
]	O
=	O
"usage: \"user name\" or \"user group\"\n"	*(char)
;	O
static	O
int	O
duplicate_group	(int,*(int),int)->(int)
(	O
gid_t	int
g	int
,	O
const	O
gid_t	int
*	O
vec	*(int)
,	O
int	O
len	int
)	O
{	O
while	O
(	O
len	int
--	O
)	O
{	O
if	O
(	O
*	O
vec	*(int)
==	O
g	int
)	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
gid_t	int
*	O
get_group_list	(*(int))->(*(int))
(	O
int	O
*	O
ngroups	*(int)
)	O
{	O
int	O
len	int
;	O
gid_t	int
*	O
grouplist	*(int)
;	O
len	int
=	O
getgroups	(int,array(int))->(int)
(	O
0	int
,	O
NULL	O
)	O
;	O
if	O
(	O
len	int
<	O
0	int
)	O
{	O
perror	(*(char))->(void)
(	O
"getgroups"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
else	O
{	O
grouplist	*(int)
=	O
malloc	(long)->(*(void))
(	O
(	O
1	int
+	O
len	int
)	O
*	O
sizeof	O
(	O
*	O
grouplist	*(int)
)	O
)	O
;	O
if	O
(	O
grouplist	*(int)
)	O
{	O
gid_t	int
egid	int
=	O
getegid	()->(int)
(	O
)	O
;	O
if	O
(	O
getgroups	(int,array(int))->(int)
(	O
len	int
,	O
&	O
grouplist	*(int)
[	O
1	int
]	O
)	O
)	O
{	O
if	O
(	O
duplicate_group	(int,*(int),int)->(int)
(	O
egid	int
,	O
grouplist	*(int)
+	O
1	int
,	O
len	int
)	O
)	O
{	O
*	O
ngroups	*(int)
=	O
len	int
;	O
return	O
&	O
grouplist	*(int)
[	O
1	int
]	O
;	O
}	O
else	O
{	O
grouplist	*(int)
[	O
0	int
]	O
=	O
egid	int
;	O
*	O
ngroups	*(int)
=	O
len	int
+	O
1	int
;	O
return	O
&	O
grouplist	*(int)
[	O
0	int
]	O
;	O
}	O
}	O
else	O
{	O
perror	(*(char))->(void)
(	O
"getgroups"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
else	O
{	O
perror	(*(char))->(void)
(	O
"malloc"	*(char)
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
}	O
static	O
void	O
do_groups	()->(void)
(	O
)	O
{	O
int	O
ngroups	*(int)
;	O
const	O
gid_t	int
*	O
list	*(int)
=	O
get_group_list	(*(int))->(*(int))
(	O
&	O
ngroups	*(int)
)	O
;	O
if	O
(	O
list	*(int)
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ngroups	*(int)
;	O
++	O
i	int
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%ld\n"	*(char)
,	O
(	O
long	O
)	O
list	*(int)
[	O
i	int
]	O
)	O
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%ld\n"	*(char)
,	O
(	O
long	O
)	O
getegid	()->(int)
(	O
)	O
)	O
;	O
}	O
}	O
static	O
int	O
compare_groups	(*(void),*(void))->(int)
(	O
const	O
void	O
*	O
pv1	*(void)
,	O
const	O
void	O
*	O
pv2	*(void)
)	O
{	O
const	O
gid_t	int
*	O
p1	*(int)
=	O
(	O
const	O
gid_t	int
*	O
)	O
pv1	*(void)
;	O
const	O
gid_t	int
*	O
p2	*(int)
=	O
(	O
const	O
gid_t	int
*	O
)	O
pv2	*(void)
;	O
if	O
(	O
*	O
p1	*(int)
<	O
*	O
p2	*(int)
)	O
return	O
-	O
1	int
;	O
else	O
if	O
(	O
*	O
p1	*(int)
>	O
*	O
p2	*(int)
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
static	O
gid_t	int
foreign_group	()->(int)
(	O
void	O
)	O
{	O
int	O
ngroups	*(int)
,	O
i	int
;	O
gid_t	int
*	O
list	*(int)
=	O
get_group_list	(*(int))->(*(int))
(	O
&	O
ngroups	*(int)
)	O
;	O
qsort	(*(void),long,long,*((*(void),*(void))->(int)))->(void)
(	O
list	*(int)
,	O
ngroups	*(int)
,	O
sizeof	O
(	O
*	O
list	*(int)
)	O
,	O
compare_groups	(*(void),*(void))->(int)
)	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
ngroups	*(int)
;	O
++	O
i	int
)	O
{	O
const	O
gid_t	int
nextval	int
=	O
1	int
+	O
list	*(int)
[	O
i	int
-	O
1	int
]	O
;	O
if	O
(	O
nextval	int
<	O
list	*(int)
[	O
i	int
]	O
)	O
{	O
return	O
nextval	int
;	O
}	O
}	O
if	O
(	O
ngroups	*(int)
)	O
{	O
if	O
(	O
list	*(int)
[	O
0	int
]	O
>	O
0	int
)	O
return	O
0	int
;	O
else	O
return	O
1	int
+	O
list	*(int)
[	O
ngroups	*(int)
-	O
1	int
]	O
;	O
}	O
else	O
{	O
gid_t	int
last_resort	int
=	O
getegid	()->(int)
(	O
)	O
;	O
if	O
(	O
last_resort	int
>	O
0	int
)	O
return	O
0	int
;	O
else	O
return	O
1	int
+	O
last_resort	int
;	O
}	O
}	O
int	O
main	(int,array(*(char)))->(int)
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array(*(char))
[	O
]	O
)	O
{	O
if	O
(	O
2	int
==	O
argc	int
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"name"	*(char)
)	O
)	O
{	O
struct	O
passwd	struct(*(char),*(char),int,int,*(char),*(char),*(char))
*	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
;	O
const	O
char	O
*	O
pn	*(char)
=	O
"unknown"	*(char)
;	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
=	O
getpwuid	(int)->(*(struct(*(char),*(char),int,int,*(char),*(char),*(char))))
(	O
getuid	()->(int)
(	O
)	O
)	O
;	O
if	O
(	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
)	O
pn	*(char)
=	O
p	*(struct(*(char),*(char),int,int,*(char),*(char),*(char)))
->	O
pw_name	*(char)
;	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s\n"	*(char)
,	O
pn	*(char)
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"groups"	*(char)
)	O
)	O
{	O
do_groups	()->(void)
(	O
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"foreigngroup"	*(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%ld\n"	*(char)
,	O
(	O
long	O
)	O
foreign_group	()->(int)
(	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
0	int
==	O
strcmp	(*(char),*(char))->(int)
(	O
argv	array(*(char))
[	O
1	int
]	O
,	O
"group"	*(char)
)	O
)	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stdout	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%ld\n"	*(char)
,	O
(	O
long	O
)	O
getgid	()->(int)
(	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
usage_str	array(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
else	O
{	O
fprintf	(*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,*`,int,int,long,short,char,array(char),*`,long,*`,*`,*`,*`,long,int,array(char))),*(void),long,int,array(char))),*(char))->(int)
(	O
stderr	*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),int,int,long,short,char,array(char),*(void),long,*(struct),*(struct),*(struct(int,*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(char),*(struct`),*(struct`),int,int,long,short,char,array(char),*(void),long,*(struct`),*(struct`),*(struct`),*(void),long,int,array(char))),*(void),long,int,array(char)))
,	O
"%s"	*(char)
,	O
usage_str	array(char)
)	O
;	O
return	O
1	int
;	O
}	O
}	O
