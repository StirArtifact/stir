struct	O
timer_slot	struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))
{	O
char	O
*	O
name	*(char)
;	O
double	O
real	double
;	O
double	O
self_user	double
;	O
double	O
self_system	double
;	O
double	O
children_user	double
;	O
double	O
children_system	double
;	O
struct	O
timeval	struct(long,long)
real_mark	struct(long,long)
;	O
struct	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
self_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
;	O
struct	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
children_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
;	O
}	O
;	O
static	O
Hash_table	struct
*	O
timer_table	*(struct)
;	O
static	O
size_t	long
hash_string_ci	(*(char),long)->(long)
(	O
const	O
char	O
*	O
string	*(*(char))
,	O
size_t	long
n_buckets	long
)	O
{	O
size_t	long
value	*(char)
=	O
0	int
;	O
unsigned	O
char	O
ch	char
;	O
for	O
(	O
;	O
(	O
ch	char
=	O
*	O
string	*(*(char))
)	O
;	O
string	*(*(char))
++	O
)	O
value	*(char)
=	O
(	O
value	*(char)
*	O
31	int
+	O
tolower	(int)->(int)
(	O
ch	char
)	O
)	O
%	O
n_buckets	long
;	O
return	O
value	*(char)
;	O
}	O
static	O
size_t	long
timer_hasher	(*(void),long)->(long)
(	O
void	O
const	O
*	O
data	*(void)
,	O
size_t	long
n_buckets	long
)	O
{	O
const	O
struct	O
timer_slot	struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))
*	O
t	*(struct)
=	O
data	*(void)
;	O
return	O
hash_string_ci	(*(char),long)->(long)
(	O
t	*(struct)
->	O
name	*(char)
,	O
n_buckets	long
)	O
;	O
}	O
static	O
bool	bool
timer_compare	(*(void),*(void))->(bool)
(	O
void	O
const	O
*	O
data1	*(void)
,	O
void	O
const	O
*	O
data2	*(void)
)	O
{	O
const	O
struct	O
timer_slot	struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))
*	O
t1	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
=	O
data1	*(void)
;	O
const	O
struct	O
timer_slot	struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))
*	O
t2	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
=	O
data2	*(void)
;	O
return	O
strcasecmp	(*(char),*(char))->(int)
(	O
t1	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
->	O
name	*(char)
,	O
t2	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
->	O
name	*(char)
)	O
==	O
0	int
;	O
}	O
static	O
xdico_timer_t	*(struct)
timer_alloc	(*(char))->(*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
xdico_timer_t	*(struct)
t	*(struct)
=	O
xmalloc	(long)->(*(void))
(	O
sizeof	O
(	O
*	O
t	*(struct)
)	O
+	O
strlen	(*(char))->(long)
(	O
name	*(char)
)	O
+	O
1	int
)	O
;	O
memset	(*(void),int,long)->(*(void))
(	O
t	*(struct)
,	O
0	int
,	O
sizeof	O
(	O
*	O
t	*(struct)
)	O
)	O
;	O
t	*(struct)
->	O
name	*(char)
=	O
(	O
char	O
*	O
)	O
(	O
t	*(struct)
+	O
1	int
)	O
;	O
strcpy	(*(char),*(char))->(*(char))
(	O
t	*(struct)
->	O
name	*(char)
,	O
name	*(char)
)	O
;	O
return	O
t	*(struct)
;	O
}	O
xdico_timer_t	*(struct)
timer_get	(*(char))->(*(struct))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
xdico_timer_t	*(struct)
tp	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
,	O
ret	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
;	O
tp	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
=	O
timer_alloc	(*(char))->(*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))))
(	O
name	*(char)
)	O
;	O
if	O
(	O
!	O
(	O
(	O
timer_table	*(struct)
||	O
(	O
timer_table	*(struct)
=	O
hash_initialize	(long,*(struct(float,float,float,float,bool)),*((*(void),long)->(long)),*((*(void),*(void))->(bool)),*((*(void))->(void)))->(*(struct))
(	O
0	int
,	O
0	int
,	O
timer_hasher	(*(void),long)->(long)
,	O
timer_compare	(*(void),*(void))->(bool)
,	O
0	int
)	O
)	O
)	O
&&	O
(	O
ret	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
=	O
hash_insert	(*(struct),*(void))->(*(void))
(	O
timer_table	*(struct)
,	O
tp	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
)	O
)	O
)	O
)	O
xalloc_die	()->(void)
(	O
)	O
;	O
if	O
(	O
ret	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
!=	O
tp	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
)	O
free	(*(void))->(void)
(	O
tp	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
)	O
;	O
return	O
ret	*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))
;	O
}	O
xdico_timer_t	*(struct)
timer_start	(*(char))->(*(struct))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
xdico_timer_t	*(struct)
t	*(struct)
=	O
timer_get	(*(char))->(*(struct))
(	O
name	*(char)
)	O
;	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
t	*(struct)
->	O
real_mark	struct(long,long)
,	O
NULL	O
)	O
;	O
getrusage	(enum(int,int,int),*(struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))->(int)
(	O
RUSAGE_SELF	int
,	O
&	O
t	*(struct)
->	O
self_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
)	O
;	O
getrusage	(enum(int,int,int),*(struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))->(int)
(	O
RUSAGE_CHILDREN	int
,	O
&	O
t	*(struct)
->	O
children_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
)	O
;	O
return	O
t	*(struct)
;	O
}	O
static	O
void	O
_timer_compute	(*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))))->(void)
(	O
xdico_timer_t	*(struct)
t	*(struct)
)	O
{	O
struct	O
timeval	struct(long,long)
real	double
;	O
struct	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
;	O
gettimeofday	(*(struct(long,long)),*(void))->(int)
(	O
&	O
real	double
,	O
NULL	O
)	O
;	O
t	*(struct)
->	O
real	double
=	O
DIFFTIME	O
(	O
real	double
,	O
t	*(struct)
->	O
real_mark	struct(long,long)
)	O
;	O
getrusage	(enum(int,int,int),*(struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))->(int)
(	O
RUSAGE_SELF	int
,	O
&	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
)	O
;	O
t	*(struct)
->	O
self_user	double
=	O
DIFFTIME	O
(	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_utime	struct(long,long)
,	O
t	*(struct)
->	O
self_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_utime	struct(long,long)
)	O
;	O
t	*(struct)
->	O
self_system	double
=	O
DIFFTIME	O
(	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_stime	struct(long,long)
,	O
t	*(struct)
->	O
self_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_stime	struct(long,long)
)	O
;	O
getrusage	(enum(int,int,int),*(struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))))->(int)
(	O
RUSAGE_CHILDREN	int
,	O
&	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
)	O
;	O
t	*(struct)
->	O
children_user	double
=	O
DIFFTIME	O
(	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_utime	struct(long,long)
,	O
t	*(struct)
->	O
children_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_utime	struct(long,long)
)	O
;	O
t	*(struct)
->	O
children_system	double
=	O
DIFFTIME	O
(	O
rusage	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_stime	struct(long,long)
,	O
t	*(struct)
->	O
children_mark	struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long))
.	O
ru_stime	struct(long,long)
)	O
;	O
}	O
xdico_timer_t	*(struct)
timer_stop	(*(char))->(*(struct))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
xdico_timer_t	*(struct)
t	*(struct)
=	O
timer_get	(*(char))->(*(struct))
(	O
name	*(char)
)	O
;	O
_timer_compute	(*(struct(*(char),double,double,double,double,double,struct(long,long),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)),struct(struct(long,long),struct(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long),union(long,long)))))->(void)
(	O
t	*(struct)
)	O
;	O
return	O
t	*(struct)
;	O
}	O
xdico_timer_t	*(struct)
timer_reset	(*(char))->(*(struct))
(	O
const	O
char	O
*	O
name	*(char)
)	O
{	O
xdico_timer_t	*(struct)
t	*(struct)
=	O
timer_get	(*(char))->(*(struct))
(	O
name	*(char)
)	O
;	O
t	*(struct)
->	O
real	double
=	O
0.0	int
;	O
t	*(struct)
->	O
self_user	double
=	O
0.0	int
;	O
t	*(struct)
->	O
self_system	double
=	O
0.0	int
;	O
t	*(struct)
->	O
children_user	double
=	O
0.0	int
;	O
t	*(struct)
->	O
children_system	double
=	O
0.0	int
;	O
return	O
t	*(struct)
;	O
}	O
double	O
timer_get_real	(*(struct))->(double)
(	O
xdico_timer_t	*(struct)
t	*(struct)
)	O
{	O
return	O
t	*(struct)
->	O
real	double
;	O
}	O
double	O
timer_get_user	(*(struct))->(double)
(	O
xdico_timer_t	*(struct)
t	*(struct)
)	O
{	O
return	O
t	*(struct)
->	O
self_user	double
+	O
t	*(struct)
->	O
children_user	double
;	O
}	O
double	O
timer_get_system	(*(struct))->(double)
(	O
xdico_timer_t	*(struct)
t	*(struct)
)	O
{	O
return	O
t	*(struct)
->	O
self_system	double
+	O
t	*(struct)
->	O
children_system	double
;	O
}	O
void	O
timer_format_time	(*(struct),double)->(void)
(	O
dico_stream_t	*(struct)
stream	*(struct)
,	O
double	O
t	*(struct)
)	O
{	O
static	O
char	O
buf	*(void)
[	O
128	int
]	O
;	O
if	O
(	O
t	*(struct)
<	O
600	int
)	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
"%0.3f"	*(char)
,	O
t	*(struct)
)	O
;	O
else	O
{	O
long	O
int	O
s	*(char)
,	O
m	long
,	O
h	long
,	O
d	long
;	O
s	*(char)
=	O
(	O
long	O
int	O
)	O
t	*(struct)
;	O
d	long
=	O
s	*(char)
/	O
(	O
3600	int
*	O
24	int
)	O
;	O
s	*(char)
-=	O
d	long
*	O
3600	int
*	O
24	int
;	O
h	long
=	O
s	*(char)
/	O
3600	int
;	O
s	*(char)
-=	O
h	long
*	O
3600	int
;	O
m	long
=	O
s	*(char)
/	O
60	int
;	O
s	*(char)
-=	O
m	long
*	O
60	int
;	O
if	O
(	O
d	long
)	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
"%ld+%02ld:%02ld:%02ld"	*(char)
,	O
d	long
,	O
h	long
,	O
m	long
,	O
s	*(char)
)	O
;	O
else	O
if	O
(	O
h	long
)	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
"%02ld:%02ld:%02ld"	*(char)
,	O
h	long
,	O
m	long
,	O
s	*(char)
)	O
;	O
else	O
snprintf	(*(char),long,*(char))->(int)
(	O
buf	*(void)
,	O
sizeof	O
(	O
buf	*(void)
)	O
,	O
"%02ld:%02ld"	*(char)
,	O
m	long
,	O
s	*(char)
)	O
;	O
}	O
dico_stream_write	(*(struct),*(void),long)->(int)
(	O
stream	*(struct)
,	O
buf	*(void)
,	O
strlen	(*(char))->(long)
(	O
buf	*(void)
)	O
)	O
;	O
}	O
