int	O
main	(int,*(*(char)))->(int)
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	*(*(char))
)	O
{	O
mu_record_t	*(struct)
rec	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
;	O
mu_url_t	*(struct)
url	*(struct)
;	O
mu_set_program_name	(*(char))->(void)
(	O
argv	*(*(char))
[	O
0	int
]	O
)	O
;	O
mu_stdstream_setup	(int)->(void)
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
mu_registrar_record	(*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))))->(int)
(	O
mu_dotmail_record	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
)	O
;	O
MU_ASSERT	O
(	O
mu_registrar_lookup_scheme	(*(char),*(*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int))))))->(int)
(	O
"dotmail"	*(char)
,	O
&	O
rec	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
)	O
)	O
;	O
while	O
(	O
--	O
argc	long
)	O
{	O
char	O
*	O
name	*(char)
=	O
*	O
++	O
argv	*(*(char))
;	O
int	O
n	*(long)
;	O
MU_ASSERT	O
(	O
mu_url_create_hint	(*(*(struct)),*(char),int,*(struct))->(int)
(	O
&	O
url	*(struct)
,	O
name	*(char)
,	O
MU_URL_PARSE_SLASH	int
|	O
MU_URL_PARSE_LOCAL	int
,	O
NULL	O
)	O
)	O
;	O
n	*(long)
=	O
mu_record_is_scheme	(*(struct(int,*(char),int,int,int,*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*((*`)->(int)),*(void),*((*`,*`,int)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`)->(int)),*((*`,*`,int)->(int)))),*(struct),int)->(int)
(	O
rec	*(struct(int,*(char),int,int,int,*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*((*(struct`))->(int)),*(void),*((*(struct`),*(struct`),int)->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(*`))->(int)),*((*(struct`),*(char),int)->(int))))
,	O
url	*(struct)
,	O
MU_FOLDER_ATTRIBUTE_FILE	int
)	O
;	O
mu_printf	(*(char))->(int)
(	O
"%s: %d\n"	*(char)
,	O
name	*(char)
,	O
n	*(long)
)	O
;	O
mu_url_destroy	(*(*(struct)))->(void)
(	O
&	O
url	*(struct)
)	O
;	O
}	O
return	O
0	int
;	O
}	O
