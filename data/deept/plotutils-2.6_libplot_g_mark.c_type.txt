int	O
_API_fmarker	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
x	double
,	O
double	O
y	double
,	O
int	O
type	enum
,	O
double	O
size	double
)	O
{	O
bool	enum
drawn	enum
;	O
char	O
label_buf	array
[	O
2	int
]	O
;	O
double	O
x_dev	double
,	O
y_dev	double
,	O
delta_x_dev	double
,	O
delta_y_dev	double
;	O
double	O
delta_x_user	double
=	O
0.0	int
,	O
delta_y_user	double
=	O
0.0	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"fmarker: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
=	O
x	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
=	O
y	double
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pen_type	int
==	O
0	int
)	O
return	O
0	int
;	O
drawn	enum
=	O
_plotter	pointer
->	O
paint_marker	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
type	enum
,	O
size	double
)	O
;	O
if	O
(	O
drawn	enum
)	O
return	O
0	int
;	O
if	O
(	O
type	enum
<	O
0	int
)	O
return	O
0	int
;	O
type	enum
%=	O
256	int
;	O
_API_savestate	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
!=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
x_dev	double
=	O
XD	O
(	O
x	double
,	O
y	double
)	O
;	O
y_dev	double
=	O
YD	O
(	O
x	double
,	O
y	double
)	O
;	O
delta_x_dev	double
=	O
IROUND	O
(	O
x_dev	double
)	O
-	O
x_dev	double
;	O
delta_y_dev	double
=	O
IROUND	O
(	O
y_dev	double
)	O
-	O
y_dev	double
;	O
delta_x_user	double
=	O
XUV	O
(	O
delta_x_dev	double
,	O
delta_y_dev	double
)	O
;	O
delta_y_user	double
=	O
YUV	O
(	O
delta_x_dev	double
,	O
delta_y_dev	double
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
+=	O
delta_x_user	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
+=	O
delta_y_user	double
;	O
}	O
if	O
(	O
type	enum
>	O
31	int
)	O
{	O
_API_pentype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_ffontsize	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
)	O
;	O
_API_textangle	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
label_buf	array
[	O
0	int
]	O
=	O
(	O
char	O
)	O
type	enum
;	O
label_buf	array
[	O
1	int
]	O
=	O
'\0'	O
;	O
_API_alabel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
'c'	O
,	O
'c'	O
,	O
label_buf	array
)	O
;	O
}	O
else	O
{	O
_API_pentype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_linemod	O
(	O
R___	O
(	O
_plotter	pointer
)	O
"solid"	pointer
)	O
;	O
_API_capmod	O
(	O
R___	O
(	O
_plotter	pointer
)	O
"butt"	pointer
)	O
;	O
_API_joinmod	O
(	O
R___	O
(	O
_plotter	pointer
)	O
"miter"	pointer
)	O
;	O
_API_flinewidth	O
(	O
R___	O
(	O
_plotter	pointer
)	O
LINE_SCALE	O
*	O
size	double
)	O
;	O
_API_fillcolor	O
(	O
R___	O
(	O
_plotter	pointer
)	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
red	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
green	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
blue	int
)	O
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
==	O
(	O
int	O
)	O
DISP_DEVICE_COORS_INTEGER_LIBXMI	int
)	O
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
quantized_device_line_width	int
==	O
1	int
)	O
_API_flinewidth	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
)	O
;	O
size	double
*=	O
(	O
0.5	int
*	O
MAXIMUM_MARKER_DIMENSION	O
)	O
;	O
switch	O
(	O
type	enum
)	O
{	O
case	O
(	O
int	O
)	O
M_NONE	int
:	O
default	O
:	O
break	O
;	O
case	O
(	O
int	O
)	O
M_DOT	int
:	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
display_model_type	int
==	O
(	O
int	O
)	O
DISP_MODEL_PHYSICAL	int
||	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
==	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.0	int
,	O
RELATIVE_DOT_SIZE	int
*	O
size	double
)	O
;	O
}	O
else	O
_API_fpointrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_PLUS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_ASTERISK	int
:	O
{	O
double	O
vert	double
=	O
0.5	int
*	O
size	double
;	O
double	O
hori	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
hori	double
,	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
hori	double
,	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
hori	double
,	O
-	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
hori	double
,	O
vert	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
hori	double
,	O
vert	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
hori	double
,	O
-	O
vert	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_CROSS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
2	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_STAR	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_STARBURST	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_PLUS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_CROSS	int
:	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
2	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
size	double
,	O
2	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
2	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
,	O
size	double
,	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_INVERTED_TRIANGLE	int
:	O
{	O
double	O
halfwidth	double
=	O
0.5	int
*	O
M_SQRT3	int
*	O
size	double
;	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
2	int
*	O
halfwidth	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
halfwidth	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
}	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_CIRCLE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_FANCY_SQUARE	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
1.5	int
*	O
size	double
,	O
1.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1.5	int
*	O
size	double
,	O
-	O
1.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_HALF_FILLED_FANCY_DIAMOND	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
NOMINAL_HALF	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_OCTAGON	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
M_FILLED_OCTAGON	int
:	O
_API_filltype	O
(	O
R___	O
(	O
_plotter	pointer
)	O
1	int
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
-	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
0.0	int
,	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
0.5	int
*	O
size	double
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
size	double
,	O
0.0	int
)	O
;	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
-	O
0.5	int
*	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
size	double
,	O
-	O
0.5	int
*	O
size	double
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
!=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_REAL	int
)	O
{	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
-=	O
delta_x_user	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
-=	O
delta_y_user	double
;	O
}	O
_API_restorestate	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
bool	enum
_pl_g_paint_marker	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
type	enum
,	O
double	O
size	double
)	O
{	O
return	O
false	int
;	O
}	O
