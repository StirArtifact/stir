msgdomain_list_ty	struct
*	O
msgdomain_list_english	function
(	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
)	O
{	O
size_t	long
j	long
,	O
k	long
;	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
mdlp	pointer
->	O
nitems	long
;	O
k	long
++	O
)	O
{	O
message_list_ty	struct
*	O
mlp	pointer
=	O
mdlp	pointer
->	O
item	pointer
[	O
k	long
]	O
->	O
messages	pointer
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
mlp	pointer
->	O
nitems	long
;	O
j	long
++	O
)	O
{	O
message_ty	struct
*	O
mp	pointer
=	O
mlp	pointer
->	O
item	pointer
[	O
j	long
]	O
;	O
if	O
(	O
mp	pointer
->	O
msgid_plural	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
mp	pointer
->	O
msgstr_len	long
==	O
1	int
&&	O
mp	pointer
->	O
msgstr	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
{	O
mp	pointer
->	O
msgstr	pointer
=	O
mp	pointer
->	O
msgid	pointer
;	O
mp	pointer
->	O
msgstr_len	long
=	O
strlen	function
(	O
mp	pointer
->	O
msgid	pointer
)	O
+	O
1	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
mp	pointer
->	O
msgstr_len	long
==	O
2	int
&&	O
mp	pointer
->	O
msgstr	pointer
[	O
0	int
]	O
==	O
'\0'	O
&&	O
mp	pointer
->	O
msgstr	pointer
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
size_t	long
len0	long
=	O
strlen	function
(	O
mp	pointer
->	O
msgid	pointer
)	O
+	O
1	int
;	O
size_t	long
len1	long
=	O
strlen	function
(	O
mp	pointer
->	O
msgid_plural	pointer
)	O
+	O
1	int
;	O
char	O
*	O
cp	pointer
=	O
XNMALLOC	O
(	O
len0	long
+	O
len1	long
,	O
char	O
)	O
;	O
memcpy	function
(	O
cp	pointer
,	O
mp	pointer
->	O
msgid	pointer
,	O
len0	long
)	O
;	O
memcpy	function
(	O
cp	pointer
+	O
len0	long
,	O
mp	pointer
->	O
msgid_plural	pointer
,	O
len1	long
)	O
;	O
mp	pointer
->	O
msgstr	pointer
=	O
cp	pointer
;	O
mp	pointer
->	O
msgstr_len	long
=	O
len0	long
+	O
len1	long
;	O
}	O
}	O
}	O
}	O
return	O
mdlp	pointer
;	O
}	O
