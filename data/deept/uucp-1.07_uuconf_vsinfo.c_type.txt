const	O
char	O
_uuconf_vsinfo_rcsid	array
[	O
]	O
=	O
"$Id: vsinfo.c,v 1.17 2002/03/05 19:10:43 ian Rel $"	pointer
;	O
int	O
_uuconf_iv2_system_internal	function
(	O
qglobal	pointer
,	O
zsystem	pointer
,	O
qsys	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
const	O
char	O
*	O
zsystem	pointer
;	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
{	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
char	O
*	O
*	O
pzsplit	pointer
;	O
size_t	long
csplit	pointer
;	O
char	O
*	O
*	O
pzcomma	pointer
;	O
size_t	long
ccomma	long
;	O
FILE	struct
*	O
e	pointer
;	O
int	O
cchars	int
;	O
pointer	pointer
pblock	pointer
;	O
int	O
iret	int
;	O
e	pointer
=	O
fopen	function
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2systems	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
FNO_SUCH_FILE	O
(	O
)	O
)	O
return	O
UUCONF_NOT_FOUND	O
;	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
qglobal	pointer
->	O
zfilename	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2systems	pointer
;	O
return	O
(	O
UUCONF_FOPEN_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_ERROR_FILENAME	O
)	O
;	O
}	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
pzsplit	pointer
=	O
NULL	O
;	O
csplit	pointer
=	O
0	int
;	O
pzcomma	pointer
=	O
NULL	O
;	O
ccomma	long
=	O
0	int
;	O
pblock	pointer
=	O
NULL	O
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
while	O
(	O
(	O
cchars	int
=	O
_uuconf_getline	function
(	O
qglobal	pointer
,	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
)	O
>	O
0	int
)	O
{	O
int	O
ctoks	int
,	O
ctimes	int
,	O
i	int
;	O
struct	O
uuconf_system	struct
*	O
qset	pointer
;	O
char	O
*	O
z	pointer
,	O
*	O
zretry	pointer
;	O
int	O
cretry	int
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	pointer
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	pointer
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
zline	pointer
[	O
strcspn	function
(	O
zline	pointer
,	O
"#"	pointer
)	O
]	O
=	O
'\0'	O
;	O
ctoks	int
=	O
_uuconf_istrsplit	function
(	O
zline	pointer
,	O
'\0'	O
,	O
&	O
pzsplit	pointer
,	O
&	O
csplit	pointer
)	O
;	O
if	O
(	O
ctoks	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
ctoks	int
<	O
1	int
||	O
strcmp	function
(	O
zsystem	pointer
,	O
pzsplit	pointer
[	O
0	int
]	O
)	O
!=	O
0	int
)	O
continue	O
;	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
pblock	pointer
=	O
uuconf_malloc_block	function
(	O
)	O
;	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
_uuconf_uclear_system	function
(	O
qsys	pointer
)	O
;	O
qsys	pointer
->	O
uuconf_palloc	pointer
=	O
pblock	pointer
;	O
qset	pointer
=	O
qsys	pointer
;	O
}	O
else	O
{	O
struct	O
uuconf_system	struct
*	O
*	O
pq	pointer
;	O
qset	pointer
=	O
(	O
(	O
struct	O
uuconf_system	struct
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
sizeof	O
(	O
struct	O
uuconf_system	struct
)	O
)	O
)	O
;	O
if	O
(	O
qset	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
_uuconf_uclear_system	function
(	O
qset	pointer
)	O
;	O
for	O
(	O
pq	pointer
=	O
&	O
qsys	pointer
->	O
uuconf_qalternate	pointer
;	O
*	O
pq	pointer
!=	O
NULL	O
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qalternate	pointer
)	O
;	O
*	O
pq	pointer
=	O
qset	pointer
;	O
}	O
if	O
(	O
uuconf_add_block	function
(	O
pblock	pointer
,	O
zline	pointer
)	O
!=	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
qset	pointer
->	O
uuconf_zname	pointer
=	O
pzsplit	pointer
[	O
0	int
]	O
;	O
qset	pointer
->	O
uuconf_fcall	int
=	O
TRUE	O
;	O
qset	pointer
->	O
uuconf_fcalled	int
=	O
TRUE	O
;	O
if	O
(	O
ctoks	int
<	O
2	int
)	O
continue	O
;	O
zretry	pointer
=	O
strchr	function
(	O
pzsplit	pointer
[	O
1	int
]	O
,	O
';'	O
)	O
;	O
if	O
(	O
zretry	pointer
==	O
NULL	O
)	O
cretry	int
=	O
55	int
;	O
else	O
{	O
*	O
zretry	pointer
=	O
'\0'	O
;	O
cretry	int
=	O
(	O
int	O
)	O
strtol	function
(	O
zretry	pointer
+	O
1	int
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
}	O
ctimes	int
=	O
_uuconf_istrsplit	function
(	O
pzsplit	pointer
[	O
1	int
]	O
,	O
','	O
,	O
&	O
pzcomma	pointer
,	O
&	O
ccomma	long
)	O
;	O
if	O
(	O
ctimes	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ctimes	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
zslash	pointer
;	O
char	O
bgrade	char
;	O
z	pointer
=	O
pzcomma	pointer
[	O
i	int
]	O
;	O
zslash	pointer
=	O
strchr	function
(	O
z	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
zslash	pointer
==	O
NULL	O
)	O
bgrade	char
=	O
UUCONF_GRADE_LOW	O
;	O
else	O
{	O
*	O
zslash	pointer
=	O
'\0'	O
;	O
bgrade	char
=	O
zslash	pointer
[	O
1	int
]	O
;	O
if	O
(	O
!	O
UUCONF_GRADE_LEGAL	O
(	O
bgrade	char
)	O
)	O
bgrade	char
=	O
UUCONF_GRADE_LOW	O
;	O
}	O
iret	int
=	O
_uuconf_itime_parse	function
(	O
qglobal	pointer
,	O
z	pointer
,	O
(	O
long	O
)	O
bgrade	char
,	O
cretry	int
,	O
_uuconf_itime_grade_cmp	function
,	O
&	O
qset	pointer
->	O
uuconf_qtimegrade	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
==	O
UUCONF_SYNTAX_ERROR	O
)	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
if	O
(	O
bgrade	char
!=	O
UUCONF_GRADE_LOW	O
)	O
qset	pointer
->	O
uuconf_qcalltimegrade	pointer
=	O
qset	pointer
->	O
uuconf_qtimegrade	pointer
;	O
}	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
if	O
(	O
ctoks	int
<	O
3	int
)	O
continue	O
;	O
qset	pointer
->	O
uuconf_zport	pointer
=	O
pzsplit	pointer
[	O
2	int
]	O
;	O
z	pointer
=	O
strchr	function
(	O
pzsplit	pointer
[	O
2	int
]	O
,	O
','	O
)	O
;	O
if	O
(	O
z	pointer
!=	O
NULL	O
)	O
{	O
qset	pointer
->	O
uuconf_zprotocols	pointer
=	O
z	pointer
+	O
1	int
;	O
*	O
z	pointer
=	O
'\0'	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
qset	pointer
->	O
uuconf_zport	pointer
,	O
"TCP"	pointer
)	O
==	O
0	int
)	O
{	O
qset	pointer
->	O
uuconf_zport	pointer
=	O
NULL	O
;	O
qset	pointer
->	O
uuconf_qport	pointer
=	O
(	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
sizeof	O
(	O
struct	O
uuconf_port	struct
)	O
)	O
)	O
;	O
if	O
(	O
qset	pointer
->	O
uuconf_qport	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
_uuconf_uclear_port	function
(	O
qset	pointer
->	O
uuconf_qport	pointer
)	O
;	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
"TCP"	pointer
;	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_ttype	enum
=	O
UUCONF_PORTTYPE_TCP	int
;	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
|	O
UUCONF_RELIABLE_SPECIFIED	O
)	O
;	O
if	O
(	O
ctoks	int
<	O
4	int
)	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_zport	pointer
=	O
(	O
char	O
*	O
)	O
"uucp"	pointer
;	O
else	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_zport	pointer
=	O
pzsplit	pointer
[	O
3	int
]	O
;	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_iversion	int
=	O
0	int
;	O
qset	pointer
->	O
uuconf_qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_pzdialer	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
ctoks	int
<	O
4	int
)	O
continue	O
;	O
qset	pointer
->	O
uuconf_ibaud	long
=	O
strtol	function
(	O
pzsplit	pointer
[	O
3	int
]	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
if	O
(	O
ctoks	int
<	O
5	int
)	O
continue	O
;	O
qset	pointer
->	O
uuconf_zphone	pointer
=	O
pzsplit	pointer
[	O
4	int
]	O
;	O
if	O
(	O
ctoks	int
<	O
6	int
)	O
continue	O
;	O
pzsplit	pointer
[	O
4	int
]	O
=	O
(	O
char	O
*	O
)	O
"chat"	pointer
;	O
iret	int
=	O
_uuconf_ichat_cmd	function
(	O
qglobal	pointer
,	O
ctoks	int
-	O
4	int
,	O
pzsplit	pointer
+	O
4	int
,	O
&	O
qset	pointer
->	O
uuconf_schat	struct
,	O
pblock	pointer
)	O
;	O
iret	int
&=	O
~	O
UUCONF_CMDTABRET_KEEP	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
pzcomma	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzcomma	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzsplit	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzsplit	pointer
)	O
;	O
qglobal	pointer
->	O
zfilename	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2systems	pointer
;	O
return	O
iret	int
|	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
if	O
(	O
pblock	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzsplit	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzsplit	pointer
)	O
;	O
return	O
UUCONF_NOT_FOUND	O
;	O
}	O
{	O
e	pointer
=	O
fopen	function
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2userfile	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
!=	O
NULL	O
)	O
{	O
char	O
*	O
*	O
pzlocal	pointer
,	O
*	O
*	O
pzremote	pointer
;	O
boolean	int
fdefault_callback	int
;	O
char	O
*	O
zdefault_login	pointer
;	O
struct	O
uuconf_system	struct
*	O
q	pointer
;	O
pzlocal	pointer
=	O
NULL	O
;	O
pzremote	pointer
=	O
NULL	O
;	O
fdefault_callback	int
=	O
FALSE	O
;	O
zdefault_login	pointer
=	O
NULL	O
;	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
while	O
(	O
(	O
cchars	int
=	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
)	O
>	O
0	int
)	O
{	O
int	O
ctoks	int
;	O
char	O
*	O
zcomma	pointer
;	O
boolean	int
fcallback	int
;	O
char	O
*	O
*	O
pzlist	pointer
,	O
*	O
*	O
pznew	pointer
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
--	O
cchars	int
;	O
if	O
(	O
zline	pointer
[	O
cchars	int
]	O
==	O
'\n'	O
)	O
zline	pointer
[	O
cchars	int
]	O
=	O
'\0'	O
;	O
zline	pointer
[	O
strcspn	function
(	O
zline	pointer
,	O
"#"	pointer
)	O
]	O
=	O
'\0'	O
;	O
ctoks	int
=	O
_uuconf_istrsplit	function
(	O
zline	pointer
,	O
'\0'	O
,	O
&	O
pzsplit	pointer
,	O
&	O
csplit	pointer
)	O
;	O
if	O
(	O
ctoks	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
if	O
(	O
ctoks	int
==	O
0	int
)	O
continue	O
;	O
zcomma	pointer
=	O
strchr	function
(	O
pzsplit	pointer
[	O
0	int
]	O
,	O
','	O
)	O
;	O
if	O
(	O
zcomma	pointer
==	O
NULL	O
)	O
continue	O
;	O
*	O
zcomma	pointer
++	O
=	O
'\0'	O
;	O
fcallback	int
=	O
FALSE	O
;	O
pzlist	pointer
=	O
pzsplit	pointer
+	O
1	int
;	O
--	O
ctoks	int
;	O
if	O
(	O
ctoks	int
>	O
0	int
&&	O
pzsplit	pointer
[	O
1	int
]	O
[	O
0	int
]	O
==	O
'c'	O
&&	O
pzsplit	pointer
[	O
1	int
]	O
[	O
1	int
]	O
==	O
'\0'	O
)	O
{	O
fcallback	int
=	O
TRUE	O
;	O
pzlist	pointer
=	O
pzsplit	pointer
+	O
2	int
;	O
--	O
ctoks	int
;	O
}	O
if	O
(	O
(	O
pzsplit	pointer
[	O
0	int
]	O
[	O
0	int
]	O
!=	O
'\0'	O
||	O
pzlocal	pointer
!=	O
NULL	O
)	O
&&	O
(	O
zcomma	pointer
[	O
0	int
]	O
!=	O
'\0'	O
||	O
pzremote	pointer
!=	O
NULL	O
)	O
&&	O
strcmp	function
(	O
zcomma	pointer
,	O
zsystem	pointer
)	O
!=	O
0	int
)	O
continue	O
;	O
pznew	pointer
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
(	O
ctoks	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
pznew	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
pznew	pointer
,	O
(	O
pointer	pointer
)	O
pzlist	pointer
,	O
ctoks	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pznew	pointer
[	O
ctoks	int
]	O
=	O
NULL	O
;	O
if	O
(	O
uuconf_add_block	function
(	O
pblock	pointer
,	O
zline	pointer
)	O
!=	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
break	O
;	O
}	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
if	O
(	O
pzsplit	pointer
[	O
0	int
]	O
[	O
0	int
]	O
==	O
'\0'	O
)	O
{	O
pzlocal	pointer
=	O
pznew	pointer
;	O
fdefault_callback	int
=	O
fcallback	int
;	O
}	O
else	O
if	O
(	O
zcomma	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
{	O
pzremote	pointer
=	O
pznew	pointer
;	O
zdefault_login	pointer
=	O
pzsplit	pointer
[	O
0	int
]	O
;	O
}	O
else	O
{	O
for	O
(	O
q	pointer
=	O
qsys	pointer
;	O
q	pointer
!=	O
NULL	O
;	O
q	pointer
=	O
q	pointer
->	O
uuconf_qalternate	pointer
)	O
{	O
q	pointer
->	O
uuconf_zcalled_login	pointer
=	O
pzsplit	pointer
[	O
0	int
]	O
;	O
q	pointer
->	O
uuconf_fcallback	int
=	O
fcallback	int
;	O
q	pointer
->	O
uuconf_pzlocal_send	pointer
=	O
pznew	pointer
;	O
q	pointer
->	O
uuconf_pzlocal_receive	pointer
=	O
pznew	pointer
;	O
q	pointer
->	O
uuconf_pzremote_send	pointer
=	O
pznew	pointer
;	O
q	pointer
->	O
uuconf_pzremote_receive	pointer
=	O
pznew	pointer
;	O
}	O
break	O
;	O
}	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzsplit	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzsplit	pointer
)	O
;	O
qglobal	pointer
->	O
zfilename	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2userfile	pointer
;	O
return	O
iret	int
|	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
if	O
(	O
qsys	pointer
->	O
uuconf_pzlocal_send	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
&&	O
pzlocal	pointer
!=	O
NULL	O
)	O
{	O
for	O
(	O
q	pointer
=	O
qsys	pointer
;	O
q	pointer
!=	O
NULL	O
;	O
q	pointer
=	O
q	pointer
->	O
uuconf_qalternate	pointer
)	O
{	O
q	pointer
->	O
uuconf_fcallback	int
=	O
fdefault_callback	int
;	O
q	pointer
->	O
uuconf_pzlocal_send	pointer
=	O
pzlocal	pointer
;	O
q	pointer
->	O
uuconf_pzlocal_receive	pointer
=	O
pzlocal	pointer
;	O
}	O
}	O
if	O
(	O
qsys	pointer
->	O
uuconf_pzremote_send	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
&&	O
pzremote	pointer
!=	O
NULL	O
)	O
{	O
for	O
(	O
q	pointer
=	O
qsys	pointer
;	O
q	pointer
!=	O
NULL	O
;	O
q	pointer
=	O
q	pointer
->	O
uuconf_qalternate	pointer
)	O
{	O
q	pointer
->	O
uuconf_zcalled_login	pointer
=	O
zdefault_login	pointer
;	O
q	pointer
->	O
uuconf_pzremote_send	pointer
=	O
pzremote	pointer
;	O
q	pointer
->	O
uuconf_pzremote_receive	pointer
=	O
pzremote	pointer
;	O
}	O
}	O
}	O
}	O
{	O
e	pointer
=	O
fopen	function
(	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2cmds	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
!=	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ilineno	int
=	O
0	int
;	O
if	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
>	O
0	int
)	O
{	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
zline	pointer
[	O
strcspn	function
(	O
zline	pointer
,	O
"#\n"	pointer
)	O
]	O
=	O
'\0'	O
;	O
while	O
(	O
*	O
zline	pointer
==	O
'\0'	O
)	O
{	O
if	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
<=	O
0	int
)	O
{	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
{	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
zline	pointer
=	O
NULL	O
;	O
}	O
}	O
else	O
{	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
zline	pointer
[	O
strcspn	function
(	O
zline	pointer
,	O
"#\n"	pointer
)	O
]	O
=	O
'\0'	O
;	O
}	O
}	O
if	O
(	O
zline	pointer
!=	O
NULL	O
&&	O
strncmp	function
(	O
zline	pointer
,	O
"PATH="	pointer
,	O
sizeof	O
"PATH="	pointer
-	O
1	int
)	O
==	O
0	int
)	O
{	O
int	O
ctoks	int
;	O
char	O
*	O
*	O
pznew	pointer
;	O
zline	pointer
+=	O
sizeof	O
"PATH="	pointer
-	O
1	int
;	O
ctoks	int
=	O
_uuconf_istrsplit	function
(	O
zline	pointer
,	O
':'	O
,	O
&	O
pzsplit	pointer
,	O
&	O
csplit	pointer
)	O
;	O
if	O
(	O
ctoks	int
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
pznew	pointer
=	O
NULL	O
;	O
if	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
pznew	pointer
=	O
(	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
(	O
ctoks	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
)	O
;	O
if	O
(	O
pznew	pointer
==	O
NULL	O
)	O
iret	int
=	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
if	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
pznew	pointer
,	O
(	O
pointer	pointer
)	O
pzsplit	pointer
,	O
ctoks	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pznew	pointer
[	O
ctoks	int
]	O
=	O
NULL	O
;	O
qsys	pointer
->	O
uuconf_pzpath	pointer
=	O
pznew	pointer
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
}	O
if	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
<	O
0	int
)	O
{	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
{	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
zline	pointer
=	O
NULL	O
;	O
}	O
}	O
else	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
}	O
}	O
if	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
&&	O
zline	pointer
!=	O
NULL	O
)	O
{	O
while	O
(	O
TRUE	O
)	O
{	O
zline	pointer
[	O
strcspn	function
(	O
zline	pointer
,	O
"#,\n"	pointer
)	O
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
zline	pointer
!=	O
'\0'	O
)	O
{	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
zline	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qsys	pointer
->	O
uuconf_pzcmds	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
break	O
;	O
}	O
if	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
<	O
0	int
)	O
break	O
;	O
++	O
qglobal	pointer
->	O
ilineno	int
;	O
}	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
qglobal	pointer
->	O
zfilename	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zv2cmds	pointer
;	O
iret	int
|=	O
UUCONF_ERROR_FILENAME	O
|	O
UUCONF_ERROR_LINENO	O
;	O
}	O
}	O
}	O
if	O
(	O
zline	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
pzsplit	pointer
!=	O
NULL	O
)	O
free	function
(	O
(	O
pointer	pointer
)	O
pzsplit	pointer
)	O
;	O
return	O
iret	int
;	O
}	O
