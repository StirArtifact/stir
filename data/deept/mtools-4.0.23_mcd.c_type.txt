static	O
int	O
mcd_callback	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
UNUSEDP	O
)	O
{	O
FILE	struct
*	O
fp	pointer
;	O
if	O
(	O
!	O
(	O
fp	pointer
=	O
open_mcwd	function
(	O
"w"	pointer
)	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"mcd: Can't open mcwd .file for writing\n"	pointer
)	O
;	O
return	O
ERROR_ONE	int
;	O
}	O
fprintPwd	function
(	O
fp	pointer
,	O
entry	int
,	O
0	int
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"\n"	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
return	O
GOT_ONE	int
|	O
STOP_NOW	int
;	O
}	O
void	O
mcd	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
NORETURN	O
;	O
void	O
mcd	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
{	O
struct	O
MainParam_t	struct
mp	pointer
;	O
if	O
(	O
argc	int
>	O
2	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Mtools version %s, dated %s\n"	pointer
,	O
mversion	pointer
,	O
mdate	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s: [-V] msdosdirectory\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
init_mp	function
(	O
&	O
mp	pointer
)	O
;	O
mp	pointer
.	O
lookupflags	int
=	O
ACCEPT_DIR	int
|	O
NO_DOTS	int
;	O
mp	pointer
.	O
dirCallback	pointer
=	O
mcd_callback	function
;	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
printf	function
(	O
"%s\n"	pointer
,	O
mp	pointer
.	O
mcwd	array
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
else	O
exit	function
(	O
main_loop	function
(	O
&	O
mp	pointer
,	O
argv	pointer
+	O
1	int
,	O
1	int
)	O
)	O
;	O
}	O
