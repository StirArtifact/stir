int	O
mu_imap_connect	function
(	O
mu_imap_t	pointer
imap	pointer
)	O
{	O
int	O
status	int
;	O
size_t	long
wc	long
;	O
char	O
*	O
*	O
wv	pointer
;	O
char	O
*	O
bufptr	pointer
;	O
size_t	long
bufsize	long
;	O
if	O
(	O
imap	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
imap	pointer
->	O
io	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
_mu_imap_clrerrstr	function
(	O
imap	pointer
)	O
;	O
switch	O
(	O
imap	pointer
->	O
client_state	enum
)	O
{	O
default	O
:	O
case	O
MU_IMAP_CLIENT_READY	int
:	O
if	O
(	O
imap	pointer
->	O
session_state	enum
!=	O
MU_IMAP_SESSION_INIT	int
)	O
{	O
status	int
=	O
mu_imap_disconnect	function
(	O
imap	pointer
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
struct	O
timeval	struct
tval	struct
;	O
tval	struct
.	O
tv_sec	long
=	O
2	int
;	O
tval	struct
.	O
tv_usec	long
=	O
0	int
;	O
select	function
(	O
0	int
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
&	O
tval	struct
)	O
;	O
}	O
}	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_CONNECT_RX	int
;	O
case	O
MU_IMAP_CLIENT_CONNECT_RX	int
:	O
if	O
(	O
!	O
mu_stream_is_open	function
(	O
imap	pointer
->	O
io	pointer
->	O
_imap_stream	pointer
)	O
)	O
{	O
status	int
=	O
mu_stream_open	function
(	O
imap	pointer
->	O
io	pointer
->	O
_imap_stream	pointer
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
MU_IMAP_FCLR	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	int
)	O
;	O
}	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_GREETINGS	int
;	O
case	O
MU_IMAP_CLIENT_GREETINGS	int
:	O
status	int
=	O
mu_imapio_getline	function
(	O
imap	pointer
->	O
io	pointer
)	O
;	O
MU_IMAP_CHECK_EAGAIN	O
(	O
imap	pointer
,	O
status	int
)	O
;	O
mu_imapio_get_words	function
(	O
imap	pointer
->	O
io	pointer
,	O
&	O
wc	long
,	O
&	O
wv	pointer
)	O
;	O
if	O
(	O
wc	long
<	O
2	int
||	O
strcmp	function
(	O
wv	pointer
[	O
0	int
]	O
,	O
"*"	pointer
)	O
)	O
{	O
mu_imapio_getbuf	function
(	O
imap	pointer
->	O
io	pointer
,	O
&	O
bufptr	pointer
,	O
&	O
bufsize	long
)	O
;	O
mu_error	function
(	O
"mu_imap_connect: invalid server response: %s"	pointer
,	O
bufptr	pointer
)	O
;	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
return	O
MU_ERR_BADREPLY	O
;	O
}	O
else	O
{	O
mu_list_t	pointer
list	pointer
;	O
status	int
=	O
_mu_imap_untagged_response_to_list	function
(	O
imap	pointer
,	O
&	O
list	pointer
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
_mu_imap_process_untagged_response	function
(	O
imap	pointer
,	O
list	pointer
,	O
NULL	O
,	O
NULL	O
)	O
;	O
mu_list_destroy	function
(	O
&	O
list	pointer
)	O
;	O
switch	O
(	O
imap	pointer
->	O
client_state	enum
)	O
{	O
case	O
MU_IMAP_CLIENT_READY	int
:	O
status	int
=	O
0	int
;	O
break	O
;	O
case	O
MU_IMAP_CLIENT_CLOSING	int
:	O
status	int
=	O
EACCES	int
;	O
break	O
;	O
default	O
:	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
}	O
}	O
break	O
;	O
}	O
return	O
status	int
;	O
}	O
