double	O
_API_ffontname	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
const	O
char	O
*	O
s	pointer
)	O
{	O
char	O
*	O
font_name	pointer
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"ffontname: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
s	pointer
==	O
NULL	O
)	O
||	O
(	O
*	O
s	pointer
==	O
'\0'	O
)	O
||	O
!	O
strcmp	function
(	O
s	pointer
,	O
"(null)"	pointer
)	O
)	O
switch	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
default_font_type	int
)	O
{	O
case	O
PL_F_HERSHEY	int
:	O
default	O
:	O
s	pointer
=	O
PL_DEFAULT_HERSHEY_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_POSTSCRIPT	int
:	O
s	pointer
=	O
PL_DEFAULT_POSTSCRIPT_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_PCL	int
:	O
s	pointer
=	O
PL_DEFAULT_PCL_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_STICK	int
:	O
s	pointer
=	O
PL_DEFAULT_STICK_FONT	pointer
;	O
break	O
;	O
}	O
free	function
(	O
(	O
char	O
*	O
)	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_name	pointer
)	O
;	O
font_name	pointer
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
s	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
font_name	pointer
,	O
s	pointer
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_name	pointer
=	O
font_name	pointer
;	O
_pl_g_set_font	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
_plotter	pointer
->	O
drawstate	pointer
->	O
true_font_size	double
;	O
}	O
double	O
_API_ffontsize	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
size	double
)	O
{	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"ffontsize: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
size	double
<	O
0.0	int
)	O
{	O
size	double
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
default_font_size	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_size_is_default	enum
=	O
true	int
;	O
}	O
else	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_size_is_default	enum
=	O
false	int
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_size	double
=	O
size	double
;	O
_pl_g_set_font	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
fontsize_invoked	enum
=	O
true	int
;	O
return	O
_plotter	pointer
->	O
drawstate	pointer
->	O
true_font_size	double
;	O
}	O
double	O
_API_ftextangle	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
angle	double
)	O
{	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"ftextangle: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
_plotter	pointer
->	O
drawstate	pointer
->	O
text_rotation	double
=	O
angle	double
;	O
_pl_g_set_font	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
_plotter	pointer
->	O
drawstate	pointer
->	O
true_font_size	double
;	O
}	O
void	O
*	O
_pl_get_hershey_font_info	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
(	O
void	O
*	O
)	O
_pl_g_hershey_font_info	array
;	O
}	O
void	O
*	O
_pl_get_ps_font_info	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
(	O
void	O
*	O
)	O
_pl_g_ps_font_info	array
;	O
}	O
void	O
*	O
_pl_get_pcl_font_info	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
(	O
void	O
*	O
)	O
_pl_g_pcl_font_info	array
;	O
}	O
void	O
*	O
_pl_get_stick_font_info	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
(	O
void	O
*	O
)	O
_pl_g_stick_font_info	array
;	O
}	O
