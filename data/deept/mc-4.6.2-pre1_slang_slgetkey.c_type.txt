unsigned	O
int	O
SLang_Input_Buffer_Len	int
=	O
0	int
;	O
unsigned	O
char	O
SLang_Input_Buffer	array
[	O
SL_MAX_INPUT_BUFFER_LEN	int
]	O
;	O
int	O
SLang_Abort_Char	int
=	O
7	int
;	O
int	O
SLang_Ignore_User_Abort	int
=	O
0	int
;	O
unsigned	O
int	O
SLang_getkey	function
(	O
void	O
)	O
{	O
unsigned	O
int	O
imax	int
;	O
unsigned	O
int	O
ch	int
;	O
if	O
(	O
SLang_Input_Buffer_Len	int
)	O
{	O
ch	int
=	O
(	O
unsigned	O
int	O
)	O
*	O
SLang_Input_Buffer	array
;	O
SLang_Input_Buffer_Len	int
--	O
;	O
imax	int
=	O
SLang_Input_Buffer_Len	int
;	O
SLMEMCPY	O
(	O
(	O
char	O
*	O
)	O
SLang_Input_Buffer	array
,	O
(	O
char	O
*	O
)	O
(	O
SLang_Input_Buffer	array
+	O
1	int
)	O
,	O
imax	int
)	O
;	O
}	O
else	O
if	O
(	O
SLANG_GETKEY_ERROR	int
==	O
(	O
ch	int
=	O
_pSLsys_getkey	function
(	O
)	O
)	O
)	O
return	O
ch	int
;	O
return	O
(	O
ch	int
)	O
;	O
}	O
int	O
SLang_ungetkey_string	function
(	O
unsigned	O
char	O
*	O
s	pointer
,	O
unsigned	O
int	O
n	int
)	O
{	O
register	O
unsigned	O
char	O
*	O
bmax	pointer
,	O
*	O
b	pointer
,	O
*	O
b1	pointer
;	O
if	O
(	O
SLang_Input_Buffer_Len	int
+	O
n	int
+	O
3	int
>	O
SL_MAX_INPUT_BUFFER_LEN	int
)	O
return	O
-	O
1	int
;	O
b	pointer
=	O
SLang_Input_Buffer	array
;	O
bmax	pointer
=	O
(	O
b	pointer
-	O
1	int
)	O
+	O
SLang_Input_Buffer_Len	int
;	O
b1	pointer
=	O
bmax	pointer
+	O
n	int
;	O
while	O
(	O
bmax	pointer
>=	O
b	pointer
)	O
*	O
b1	pointer
--	O
=	O
*	O
bmax	pointer
--	O
;	O
bmax	pointer
=	O
b	pointer
+	O
n	int
;	O
while	O
(	O
b	pointer
<	O
bmax	pointer
)	O
*	O
b	pointer
++	O
=	O
*	O
s	pointer
++	O
;	O
SLang_Input_Buffer_Len	int
+=	O
n	int
;	O
return	O
0	int
;	O
}	O
int	O
SLang_buffer_keystring	function
(	O
unsigned	O
char	O
*	O
s	pointer
,	O
unsigned	O
int	O
n	int
)	O
{	O
if	O
(	O
n	int
+	O
SLang_Input_Buffer_Len	int
+	O
3	int
>	O
SL_MAX_INPUT_BUFFER_LEN	int
)	O
return	O
-	O
1	int
;	O
SLMEMCPY	O
(	O
(	O
char	O
*	O
)	O
SLang_Input_Buffer	array
+	O
SLang_Input_Buffer_Len	int
,	O
(	O
char	O
*	O
)	O
s	pointer
,	O
n	int
)	O
;	O
SLang_Input_Buffer_Len	int
+=	O
n	int
;	O
return	O
0	int
;	O
}	O
int	O
SLang_ungetkey	function
(	O
unsigned	O
char	O
ch	int
)	O
{	O
return	O
SLang_ungetkey_string	function
(	O
&	O
ch	int
,	O
1	int
)	O
;	O
}	O
int	O
SLang_input_pending	function
(	O
int	O
tsecs	int
)	O
{	O
int	O
n	int
;	O
unsigned	O
char	O
c	int
;	O
if	O
(	O
SLang_Input_Buffer_Len	int
)	O
return	O
(	O
int	O
)	O
SLang_Input_Buffer_Len	int
;	O
n	int
=	O
_pSLsys_input_pending	function
(	O
tsecs	int
)	O
;	O
if	O
(	O
n	int
<=	O
0	int
)	O
return	O
0	int
;	O
c	int
=	O
(	O
unsigned	O
char	O
)	O
SLang_getkey	function
(	O
)	O
;	O
SLang_ungetkey_string	function
(	O
&	O
c	int
,	O
1	int
)	O
;	O
return	O
n	int
;	O
}	O
void	O
SLang_flush_input	function
(	O
void	O
)	O
{	O
int	O
quit	int
=	O
SLKeyBoard_Quit	int
;	O
SLang_Input_Buffer_Len	int
=	O
0	int
;	O
SLKeyBoard_Quit	int
=	O
0	int
;	O
while	O
(	O
_pSLsys_input_pending	function
(	O
0	int
)	O
>	O
0	int
)	O
{	O
(	O
void	O
)	O
_pSLsys_getkey	function
(	O
)	O
;	O
SLang_Input_Buffer_Len	int
=	O
0	int
;	O
}	O
SLKeyBoard_Quit	int
=	O
quit	int
;	O
}	O
