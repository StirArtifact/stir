gsl_interp2d	struct
*	O
gsl_interp2d_alloc	function
(	O
const	O
gsl_interp2d_type	struct
*	O
T	pointer
,	O
const	O
size_t	long
xsize	long
,	O
const	O
size_t	long
ysize	long
)	O
{	O
gsl_interp2d	struct
*	O
interp	pointer
;	O
if	O
(	O
xsize	long
<	O
T	pointer
->	O
min_size	int
||	O
ysize	long
<	O
T	pointer
->	O
min_size	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"insufficient number of points for interpolation type"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
interp	pointer
=	O
(	O
gsl_interp2d	struct
*	O
)	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
gsl_interp2d	struct
)	O
)	O
;	O
if	O
(	O
interp	pointer
==	O
NULL	O
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for gsl_interp2d struct"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
interp	pointer
->	O
type	pointer
=	O
T	pointer
;	O
interp	pointer
->	O
xsize	long
=	O
xsize	long
;	O
interp	pointer
->	O
ysize	long
=	O
ysize	long
;	O
if	O
(	O
interp	pointer
->	O
type	pointer
->	O
alloc	pointer
==	O
NULL	O
)	O
{	O
interp	pointer
->	O
state	pointer
=	O
NULL	O
;	O
return	O
interp	pointer
;	O
}	O
interp	pointer
->	O
state	pointer
=	O
interp	pointer
->	O
type	pointer
->	O
alloc	pointer
(	O
xsize	long
,	O
ysize	long
)	O
;	O
if	O
(	O
interp	pointer
->	O
state	pointer
==	O
NULL	O
)	O
{	O
free	function
(	O
interp	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for gsl_interp2d state"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
return	O
interp	pointer
;	O
}	O
void	O
gsl_interp2d_free	function
(	O
gsl_interp2d	struct
*	O
interp	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
interp	pointer
)	O
;	O
if	O
(	O
interp	pointer
->	O
type	pointer
->	O
free	function
)	O
interp	pointer
->	O
type	pointer
->	O
free	function
(	O
interp	pointer
->	O
state	pointer
)	O
;	O
free	function
(	O
interp	pointer
)	O
;	O
}	O
int	O
gsl_interp2d_init	function
(	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
size_t	long
xsize	long
,	O
const	O
size_t	long
ysize	long
)	O
{	O
size_t	long
i	long
;	O
if	O
(	O
xsize	long
!=	O
interp	pointer
->	O
xsize	long
||	O
ysize	long
!=	O
interp	pointer
->	O
ysize	long
)	O
{	O
GSL_ERROR	O
(	O
"data must match size of interpolation object"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
xsize	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
xarr	array
[	O
i	long
-	O
1	int
]	O
>=	O
xarr	array
[	O
i	long
]	O
)	O
{	O
GSL_ERROR	O
(	O
"x values must be strictly increasing"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
}	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
ysize	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
yarr	array
[	O
i	long
-	O
1	int
]	O
>=	O
yarr	array
[	O
i	long
]	O
)	O
{	O
GSL_ERROR	O
(	O
"y values must be strictly increasing"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
}	O
interp	pointer
->	O
xmin	double
=	O
xarr	array
[	O
0	int
]	O
;	O
interp	pointer
->	O
xmax	double
=	O
xarr	array
[	O
xsize	long
-	O
1	int
]	O
;	O
interp	pointer
->	O
ymin	double
=	O
yarr	array
[	O
0	int
]	O
;	O
interp	pointer
->	O
ymax	double
=	O
yarr	array
[	O
ysize	long
-	O
1	int
]	O
;	O
{	O
int	O
status	int
=	O
interp	pointer
->	O
type	pointer
->	O
init	pointer
(	O
interp	pointer
->	O
state	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
xsize	long
,	O
ysize	long
)	O
;	O
return	O
status	int
;	O
}	O
}	O
static	O
int	O
interp2d_eval	function
(	O
int	O
(	O
*	O
evaluator	pointer
)	O
(	O
const	O
void	O
*	O
,	O
const	O
double	O
xa	array
[	O
]	O
,	O
const	O
double	O
ya	array
[	O
]	O
,	O
const	O
double	O
za	array
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
,	O
gsl_interp_accel	struct
*	O
,	O
double	O
*	O
z	double
)	O
,	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
result	pointer
)	O
{	O
if	O
(	O
x	double
<	O
interp	pointer
->	O
xmin	double
||	O
x	double
>	O
interp	pointer
->	O
xmax	double
)	O
{	O
GSL_ERROR	O
(	O
"interpolation x value out of range"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
else	O
if	O
(	O
y	double
<	O
interp	pointer
->	O
ymin	double
||	O
y	double
>	O
interp	pointer
->	O
ymax	double
)	O
{	O
GSL_ERROR	O
(	O
"interpolation y value out of range"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
return	O
evaluator	pointer
(	O
interp	pointer
->	O
state	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
interp	pointer
->	O
xsize	long
,	O
interp	pointer
->	O
ysize	long
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
result	pointer
)	O
;	O
}	O
static	O
int	O
interp2d_eval_extrap	function
(	O
int	O
(	O
*	O
evaluator	pointer
)	O
(	O
const	O
void	O
*	O
,	O
const	O
double	O
xa	array
[	O
]	O
,	O
const	O
double	O
ya	array
[	O
]	O
,	O
const	O
double	O
za	array
[	O
]	O
,	O
size_t	long
xsize	long
,	O
size_t	long
ysize	long
,	O
double	O
x	double
,	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
,	O
gsl_interp_accel	struct
*	O
,	O
double	O
*	O
z	double
)	O
,	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
result	pointer
)	O
{	O
return	O
evaluator	pointer
(	O
interp	pointer
->	O
state	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
interp	pointer
->	O
xsize	long
,	O
interp	pointer
->	O
ysize	long
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
result	pointer
)	O
;	O
}	O
double	O
gsl_interp2d_eval	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
double	O
gsl_interp2d_eval_extrap	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
interp2d_eval_extrap	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
int	O
gsl_interp2d_eval_e_extrap	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval_extrap	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
int	O
gsl_interp2d_eval_extrap_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval_extrap	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
double	O
gsl_interp2d_eval_deriv_x	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_deriv_x_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_deriv_x_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval_deriv_x	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
double	O
gsl_interp2d_eval_deriv_y	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_deriv_y_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_deriv_y_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval_deriv_y	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
double	O
gsl_interp2d_eval_deriv_xx	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_deriv_xx_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_deriv_xx_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval_deriv_xx	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
double	O
gsl_interp2d_eval_deriv_yy	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_deriv_yy_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_deriv_yy_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval_deriv_yy	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
double	O
gsl_interp2d_eval_deriv_xy	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
)	O
{	O
double	O
z	double
;	O
int	O
status	int
=	O
gsl_interp2d_eval_deriv_xy_e	function
(	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
&	O
z	double
)	O
;	O
DISCARD_STATUS	O
(	O
status	int
)	O
return	O
z	double
;	O
}	O
int	O
gsl_interp2d_eval_deriv_xy_e	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
xarr	array
[	O
]	O
,	O
const	O
double	O
yarr	array
[	O
]	O
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_interp_accel	struct
*	O
xa	array
,	O
gsl_interp_accel	struct
*	O
ya	array
,	O
double	O
*	O
z	double
)	O
{	O
return	O
interp2d_eval	function
(	O
interp	pointer
->	O
type	pointer
->	O
eval_deriv_xy	pointer
,	O
interp	pointer
,	O
xarr	array
,	O
yarr	array
,	O
zarr	array
,	O
x	double
,	O
y	double
,	O
xa	array
,	O
ya	array
,	O
z	double
)	O
;	O
}	O
size_t	long
gsl_interp2d_type_min_size	function
(	O
const	O
gsl_interp2d_type	struct
*	O
T	pointer
)	O
{	O
return	O
T	pointer
->	O
min_size	int
;	O
}	O
size_t	long
gsl_interp2d_min_size	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
)	O
{	O
return	O
interp	pointer
->	O
type	pointer
->	O
min_size	int
;	O
}	O
const	O
char	O
*	O
gsl_interp2d_name	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
)	O
{	O
return	O
interp	pointer
->	O
type	pointer
->	O
name	pointer
;	O
}	O
size_t	long
gsl_interp2d_idx	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
size_t	long
i	long
,	O
const	O
size_t	long
j	long
)	O
{	O
if	O
(	O
i	long
>=	O
interp	pointer
->	O
xsize	long
)	O
{	O
GSL_ERROR_VAL	O
(	O
"x index out of range"	pointer
,	O
GSL_ERANGE	int
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
j	long
>=	O
interp	pointer
->	O
ysize	long
)	O
{	O
GSL_ERROR_VAL	O
(	O
"y index out of range"	pointer
,	O
GSL_ERANGE	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
return	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
interp	pointer
)	O
;	O
}	O
}	O
int	O
gsl_interp2d_set	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
double	O
zarr	array
[	O
]	O
,	O
const	O
size_t	long
i	long
,	O
const	O
size_t	long
j	long
,	O
const	O
double	O
z	double
)	O
{	O
if	O
(	O
i	long
>=	O
interp	pointer
->	O
xsize	long
)	O
{	O
GSL_ERROR	O
(	O
"x index out of range"	pointer
,	O
GSL_ERANGE	int
)	O
;	O
}	O
else	O
if	O
(	O
j	long
>=	O
interp	pointer
->	O
ysize	long
)	O
{	O
GSL_ERROR	O
(	O
"y index out of range"	pointer
,	O
GSL_ERANGE	int
)	O
;	O
}	O
else	O
{	O
zarr	array
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
interp	pointer
)	O
]	O
=	O
z	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
double	O
gsl_interp2d_get	function
(	O
const	O
gsl_interp2d	struct
*	O
interp	pointer
,	O
const	O
double	O
zarr	array
[	O
]	O
,	O
const	O
size_t	long
i	long
,	O
const	O
size_t	long
j	long
)	O
{	O
if	O
(	O
i	long
>=	O
interp	pointer
->	O
xsize	long
)	O
{	O
GSL_ERROR_VAL	O
(	O
"x index out of range"	pointer
,	O
GSL_ERANGE	int
,	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
j	long
>=	O
interp	pointer
->	O
ysize	long
)	O
{	O
GSL_ERROR_VAL	O
(	O
"y index out of range"	pointer
,	O
GSL_ERANGE	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
return	O
zarr	array
[	O
IDX2D	O
(	O
i	long
,	O
j	long
,	O
interp	pointer
)	O
]	O
;	O
}	O
}	O
