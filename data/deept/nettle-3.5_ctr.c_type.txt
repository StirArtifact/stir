static	O
size_t	long
ctr_fill	function
(	O
size_t	long
block_size	long
,	O
uint8_t	char
*	O
ctr	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
buffer	pointer
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
+	O
block_size	long
<=	O
length	long
;	O
i	long
+=	O
block_size	long
)	O
{	O
memcpy	function
(	O
buffer	pointer
+	O
i	long
,	O
ctr	pointer
,	O
block_size	long
)	O
;	O
INCREMENT	O
(	O
block_size	long
,	O
ctr	pointer
)	O
;	O
}	O
return	O
i	long
;	O
}	O
static	O
nettle_fill16_func	function
ctr_fill16	function
;	O
static	O
void	O
ctr_fill16	function
(	O
uint8_t	char
*	O
ctr	pointer
,	O
size_t	long
blocks	long
,	O
union	O
nettle_block16	union
*	O
buffer	pointer
)	O
{	O
uint64_t	long
hi	long
,	O
lo	long
;	O
size_t	long
i	long
;	O
hi	long
=	O
LE_READ_UINT64	O
(	O
ctr	pointer
)	O
;	O
lo	long
=	O
READ_UINT64	O
(	O
ctr	pointer
+	O
8	int
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
blocks	long
;	O
i	long
++	O
)	O
{	O
buffer	pointer
[	O
i	long
]	O
.	O
u64	array
[	O
0	int
]	O
=	O
hi	long
;	O
buffer	pointer
[	O
i	long
]	O
.	O
u64	array
[	O
1	int
]	O
=	O
__builtin_bswap64	O
(	O
lo	long
)	O
;	O
if	O
(	O
!	O
++	O
lo	long
)	O
hi	long
=	O
__builtin_bswap64	O
(	O
__builtin_bswap64	O
(	O
hi	long
)	O
+	O
1	int
)	O
;	O
}	O
LE_WRITE_UINT64	O
(	O
ctr	pointer
,	O
hi	long
)	O
;	O
WRITE_UINT64	O
(	O
ctr	pointer
+	O
8	int
,	O
lo	long
)	O
;	O
}	O
void	O
ctr_crypt	O
(	O
const	O
void	O
*	O
ctx	pointer
,	O
nettle_cipher_func	function
*	O
f	pointer
,	O
size_t	long
block_size	long
,	O
uint8_t	char
*	O
ctr	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	pointer
,	O
const	O
uint8_t	char
*	O
src	pointer
)	O
{	O
if	O
(	O
block_size	long
==	O
16	int
)	O
{	O
_ctr_crypt16	O
(	O
ctx	pointer
,	O
f	pointer
,	O
ctr_fill16	function
,	O
ctr	pointer
,	O
length	long
,	O
dst	pointer
,	O
src	pointer
)	O
;	O
return	O
;	O
}	O
if	O
(	O
src	pointer
!=	O
dst	pointer
)	O
{	O
size_t	long
filled	long
=	O
ctr_fill	function
(	O
block_size	long
,	O
ctr	pointer
,	O
length	long
,	O
dst	pointer
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
filled	long
,	O
dst	pointer
,	O
dst	pointer
)	O
;	O
memxor	O
(	O
dst	pointer
,	O
src	pointer
,	O
filled	long
)	O
;	O
if	O
(	O
filled	long
<	O
length	long
)	O
{	O
TMP_DECL	O
(	O
block	array
,	O
uint8_t	char
,	O
NETTLE_MAX_CIPHER_BLOCK_SIZE	O
)	O
;	O
TMP_ALLOC	O
(	O
block	array
,	O
block_size	long
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
block_size	long
,	O
block	array
,	O
ctr	pointer
)	O
;	O
INCREMENT	O
(	O
block_size	long
,	O
ctr	pointer
)	O
;	O
memxor3	O
(	O
dst	pointer
+	O
filled	long
,	O
src	pointer
+	O
filled	long
,	O
block	array
,	O
length	long
-	O
filled	long
)	O
;	O
}	O
}	O
else	O
{	O
TMP_DECL	O
(	O
buffer	pointer
,	O
uint8_t	char
,	O
CTR_BUFFER_LIMIT	int
)	O
;	O
size_t	long
buffer_size	long
;	O
if	O
(	O
length	long
<	O
block_size	long
)	O
buffer_size	long
=	O
block_size	long
;	O
else	O
if	O
(	O
length	long
<=	O
CTR_BUFFER_LIMIT	int
)	O
buffer_size	long
=	O
length	long
;	O
else	O
buffer_size	long
=	O
CTR_BUFFER_LIMIT	int
;	O
TMP_ALLOC	O
(	O
buffer	pointer
,	O
buffer_size	long
)	O
;	O
while	O
(	O
length	long
>=	O
block_size	long
)	O
{	O
size_t	long
filled	long
=	O
ctr_fill	function
(	O
block_size	long
,	O
ctr	pointer
,	O
MIN	O
(	O
buffer_size	long
,	O
length	long
)	O
,	O
buffer	pointer
)	O
;	O
assert	O
(	O
filled	long
>	O
0	int
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
filled	long
,	O
buffer	pointer
,	O
buffer	pointer
)	O
;	O
memxor	O
(	O
dst	pointer
,	O
buffer	pointer
,	O
filled	long
)	O
;	O
length	long
-=	O
filled	long
;	O
dst	pointer
+=	O
filled	long
;	O
}	O
if	O
(	O
length	long
>	O
0	int
)	O
{	O
f	pointer
(	O
ctx	pointer
,	O
block_size	long
,	O
buffer	pointer
,	O
ctr	pointer
)	O
;	O
INCREMENT	O
(	O
block_size	long
,	O
ctr	pointer
)	O
;	O
memxor	O
(	O
dst	pointer
,	O
buffer	pointer
,	O
length	long
)	O
;	O
}	O
}	O
}	O
