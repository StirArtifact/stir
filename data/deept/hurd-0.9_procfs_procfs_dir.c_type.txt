struct	O
procfs_dir_node	struct
{	O
const	O
struct	O
procfs_dir_ops	O
*	O
ops	pointer
;	O
void	O
*	O
hook	pointer
;	O
}	O
;	O
static	O
int	O
entry_exists	function
(	O
struct	O
procfs_dir_node	struct
*	O
dir	pointer
,	O
const	O
struct	O
procfs_dir_entry	O
*	O
ent	pointer
)	O
{	O
if	O
(	O
ent	pointer
->	O
ops	pointer
.	O
exists	O
)	O
return	O
ent	pointer
->	O
ops	pointer
.	O
exists	O
(	O
dir	pointer
->	O
hook	pointer
,	O
ent	pointer
->	O
hook	pointer
)	O
;	O
if	O
(	O
dir	pointer
->	O
ops	pointer
->	O
entry_ops	O
.	O
exists	O
)	O
return	O
dir	pointer
->	O
ops	pointer
->	O
entry_ops	O
.	O
exists	O
(	O
dir	pointer
->	O
hook	pointer
,	O
ent	pointer
->	O
hook	pointer
)	O
;	O
return	O
1	int
;	O
}	O
static	O
error_t	function
procfs_dir_get_contents	function
(	O
void	O
*	O
hook	pointer
,	O
char	O
*	O
*	O
contents	pointer
,	O
ssize_t	long
*	O
contents_len	pointer
)	O
{	O
static	O
const	O
char	O
dot_dotdot	array
[	O
]	O
=	O
".\0.."	pointer
;	O
struct	O
procfs_dir_node	struct
*	O
dir	pointer
=	O
hook	pointer
;	O
const	O
struct	O
procfs_dir_entry	O
*	O
ent	pointer
;	O
int	O
pos	int
;	O
pos	int
=	O
sizeof	O
dot_dotdot	array
;	O
for	O
(	O
ent	pointer
=	O
dir	pointer
->	O
ops	pointer
->	O
entries	O
;	O
ent	pointer
->	O
name	pointer
;	O
ent	pointer
++	O
)	O
pos	int
+=	O
strlen	function
(	O
ent	pointer
->	O
name	pointer
)	O
+	O
1	int
;	O
*	O
contents	pointer
=	O
malloc	function
(	O
pos	int
)	O
;	O
if	O
(	O
!	O
*	O
contents	pointer
)	O
return	O
ENOMEM	O
;	O
memcpy	function
(	O
*	O
contents	pointer
,	O
dot_dotdot	array
,	O
sizeof	O
dot_dotdot	array
)	O
;	O
pos	int
=	O
sizeof	O
dot_dotdot	array
;	O
for	O
(	O
ent	pointer
=	O
dir	pointer
->	O
ops	pointer
->	O
entries	O
;	O
ent	pointer
->	O
name	pointer
;	O
ent	pointer
++	O
)	O
{	O
if	O
(	O
!	O
entry_exists	function
(	O
dir	pointer
,	O
ent	pointer
)	O
)	O
continue	O
;	O
strcpy	function
(	O
*	O
contents	pointer
+	O
pos	int
,	O
ent	pointer
->	O
name	pointer
)	O
;	O
pos	int
+=	O
strlen	function
(	O
ent	pointer
->	O
name	pointer
)	O
+	O
1	int
;	O
}	O
*	O
contents_len	pointer
=	O
pos	int
;	O
return	O
0	int
;	O
}	O
static	O
error_t	function
procfs_dir_lookup	function
(	O
void	O
*	O
hook	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
struct	O
node	O
*	O
*	O
np	pointer
)	O
{	O
struct	O
procfs_dir_node	struct
*	O
dir	pointer
=	O
hook	pointer
;	O
const	O
struct	O
procfs_dir_entry	O
*	O
ent	pointer
;	O
for	O
(	O
ent	pointer
=	O
dir	pointer
->	O
ops	pointer
->	O
entries	O
;	O
ent	pointer
->	O
name	pointer
&&	O
strcmp	function
(	O
name	pointer
,	O
ent	pointer
->	O
name	pointer
)	O
;	O
ent	pointer
++	O
)	O
;	O
if	O
(	O
!	O
ent	pointer
->	O
name	pointer
)	O
return	O
ENOENT	O
;	O
if	O
(	O
ent	pointer
->	O
ops	pointer
.	O
make_node	O
)	O
*	O
np	pointer
=	O
ent	pointer
->	O
ops	pointer
.	O
make_node	O
(	O
dir	pointer
->	O
hook	pointer
,	O
ent	pointer
->	O
hook	pointer
)	O
;	O
else	O
if	O
(	O
dir	pointer
->	O
ops	pointer
->	O
entry_ops	O
.	O
make_node	O
)	O
*	O
np	pointer
=	O
dir	pointer
->	O
ops	pointer
->	O
entry_ops	O
.	O
make_node	O
(	O
dir	pointer
->	O
hook	pointer
,	O
ent	pointer
->	O
hook	pointer
)	O
;	O
else	O
return	O
EGRATUITOUS	O
;	O
if	O
(	O
!	O
*	O
np	pointer
)	O
return	O
ENOMEM	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
procfs_dir_cleanup	function
(	O
void	O
*	O
hook	pointer
)	O
{	O
struct	O
procfs_dir_node	struct
*	O
dir	pointer
=	O
hook	pointer
;	O
if	O
(	O
dir	pointer
->	O
ops	pointer
->	O
cleanup	pointer
)	O
dir	pointer
->	O
ops	pointer
->	O
cleanup	pointer
(	O
dir	pointer
->	O
hook	pointer
)	O
;	O
free	function
(	O
dir	pointer
)	O
;	O
}	O
struct	O
node	O
*	O
procfs_dir_make_node	function
(	O
const	O
struct	O
procfs_dir_ops	O
*	O
dir_ops	pointer
,	O
void	O
*	O
dir_hook	pointer
)	O
{	O
static	O
const	O
struct	O
procfs_node_ops	struct
ops	pointer
=	O
{	O
.	O
get_contents	pointer
=	O
procfs_dir_get_contents	function
,	O
.	O
lookup	pointer
=	O
procfs_dir_lookup	function
,	O
.	O
cleanup_contents	pointer
=	O
procfs_cleanup_contents_with_free	function
,	O
.	O
cleanup	pointer
=	O
procfs_dir_cleanup	function
,	O
}	O
;	O
struct	O
procfs_dir_node	struct
*	O
dir	pointer
;	O
dir	pointer
=	O
malloc	function
(	O
sizeof	O
*	O
dir	pointer
)	O
;	O
if	O
(	O
!	O
dir	pointer
)	O
{	O
if	O
(	O
dir_ops	pointer
->	O
cleanup	pointer
)	O
dir_ops	pointer
->	O
cleanup	pointer
(	O
dir_hook	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
dir	pointer
->	O
ops	pointer
=	O
dir_ops	pointer
;	O
dir	pointer
->	O
hook	pointer
=	O
dir_hook	pointer
;	O
return	O
procfs_make_node	function
(	O
&	O
ops	pointer
,	O
dir	pointer
)	O
;	O
}	O
