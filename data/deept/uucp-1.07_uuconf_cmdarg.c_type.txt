const	O
char	O
_uuconf_cmdarg_rcsid	array
[	O
]	O
=	O
"$Id: cmdarg.c,v 1.7 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
extern	O
int	O
strcmp	function
(	O
)	O
,	O
strcasecmp	function
(	O
)	O
;	O
int	O
uuconf_cmd_args	function
(	O
pglobal	pointer
,	O
cargs	int
,	O
pzargs	pointer
,	O
qtab	pointer
,	O
pinfo	pointer
,	O
pfiunknown	pointer
,	O
iflags	int
,	O
pblock	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
cargs	int
;	O
char	O
*	O
*	O
pzargs	pointer
;	O
const	O
struct	O
uuconf_cmdtab	struct
*	O
qtab	pointer
;	O
pointer	pointer
pinfo	pointer
;	O
int	O
(	O
*	O
pfiunknown	pointer
)	O
P	O
(	O
(	O
pointer	pointer
,	O
int	O
,	O
char	O
*	O
*	O
,	O
pointer	pointer
,	O
pointer	pointer
)	O
)	O
;	O
int	O
iflags	int
;	O
pointer	pointer
pblock	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
int	O
bfirstu	int
,	O
bfirstl	int
;	O
int	O
(	O
*	O
pficmp	pointer
)	O
P	O
(	O
(	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
)	O
)	O
;	O
register	O
const	O
struct	O
uuconf_cmdtab	struct
*	O
q	pointer
;	O
int	O
itype	int
;	O
int	O
callowed	int
;	O
bfirstu	int
=	O
bfirstl	int
=	O
pzargs	pointer
[	O
0	int
]	O
[	O
0	int
]	O
;	O
if	O
(	O
(	O
iflags	int
&	O
UUCONF_CMDTABFLAG_CASE	O
)	O
!=	O
0	int
)	O
pficmp	pointer
=	O
strcmp	function
;	O
else	O
{	O
if	O
(	O
islower	function
(	O
bfirstu	int
)	O
)	O
bfirstu	int
=	O
toupper	function
(	O
bfirstu	int
)	O
;	O
if	O
(	O
isupper	function
(	O
bfirstl	int
)	O
)	O
bfirstl	int
=	O
tolower	function
(	O
bfirstl	int
)	O
;	O
pficmp	pointer
=	O
strcasecmp	function
;	O
}	O
itype	int
=	O
0	int
;	O
for	O
(	O
q	pointer
=	O
qtab	pointer
;	O
q	pointer
->	O
uuconf_zcmd	pointer
!=	O
NULL	O
;	O
q	pointer
++	O
)	O
{	O
int	O
bfirst	int
;	O
bfirst	int
=	O
q	pointer
->	O
uuconf_zcmd	pointer
[	O
0	int
]	O
;	O
if	O
(	O
bfirst	int
!=	O
bfirstu	int
&&	O
bfirst	int
!=	O
bfirstl	int
)	O
continue	O
;	O
itype	int
=	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
q	pointer
->	O
uuconf_itype	int
)	O
;	O
if	O
(	O
itype	int
!=	O
UUCONF_CMDTABTYPE_PREFIX	O
)	O
{	O
if	O
(	O
(	O
*	O
pficmp	pointer
)	O
(	O
q	pointer
->	O
uuconf_zcmd	pointer
,	O
pzargs	pointer
[	O
0	int
]	O
)	O
==	O
0	int
)	O
break	O
;	O
}	O
else	O
{	O
size_t	long
clen	long
;	O
clen	long
=	O
strlen	function
(	O
q	pointer
->	O
uuconf_zcmd	pointer
)	O
;	O
if	O
(	O
(	O
iflags	int
&	O
UUCONF_CMDTABFLAG_CASE	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
strncmp	function
(	O
q	pointer
->	O
uuconf_zcmd	pointer
,	O
pzargs	pointer
[	O
0	int
]	O
,	O
clen	long
)	O
==	O
0	int
)	O
break	O
;	O
}	O
else	O
{	O
if	O
(	O
strncasecmp	function
(	O
q	pointer
->	O
uuconf_zcmd	pointer
,	O
pzargs	pointer
[	O
0	int
]	O
,	O
clen	long
)	O
==	O
0	int
)	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_zcmd	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
pfiunknown	pointer
==	O
NULL	O
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
return	O
(	O
*	O
pfiunknown	pointer
)	O
(	O
pglobal	pointer
,	O
cargs	int
,	O
pzargs	pointer
,	O
(	O
pointer	pointer
)	O
NULL	O
,	O
pinfo	pointer
)	O
;	O
}	O
callowed	int
=	O
UUCONF_CARGS_CMDTABTYPE	O
(	O
q	pointer
->	O
uuconf_itype	int
)	O
;	O
if	O
(	O
callowed	int
!=	O
0	int
&&	O
callowed	int
!=	O
cargs	int
)	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
switch	O
(	O
itype	int
)	O
{	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_STRING	O
)	O
:	O
if	O
(	O
cargs	int
==	O
1	int
)	O
*	O
(	O
char	O
*	O
*	O
)	O
q	pointer
->	O
uuconf_pvar	pointer
=	O
(	O
char	O
*	O
)	O
""	pointer
;	O
else	O
if	O
(	O
cargs	int
==	O
2	int
)	O
*	O
(	O
char	O
*	O
*	O
)	O
q	pointer
->	O
uuconf_pvar	pointer
=	O
pzargs	pointer
[	O
1	int
]	O
;	O
else	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
return	O
UUCONF_CMDTABRET_KEEP	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_INT	O
)	O
:	O
return	O
_uuconf_iint	function
(	O
qglobal	pointer
,	O
pzargs	pointer
[	O
1	int
]	O
,	O
q	pointer
->	O
uuconf_pvar	pointer
,	O
TRUE	O
)	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_LONG	O
)	O
:	O
return	O
_uuconf_iint	function
(	O
qglobal	pointer
,	O
pzargs	pointer
[	O
1	int
]	O
,	O
q	pointer
->	O
uuconf_pvar	pointer
,	O
FALSE	O
)	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_BOOLEAN	O
)	O
:	O
return	O
_uuconf_iboolean	function
(	O
qglobal	pointer
,	O
pzargs	pointer
[	O
1	int
]	O
,	O
(	O
int	O
*	O
)	O
q	pointer
->	O
uuconf_pvar	pointer
)	O
;	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_FULLSTRING	O
)	O
:	O
if	O
(	O
cargs	int
==	O
1	int
)	O
{	O
char	O
*	O
*	O
*	O
ppz	pointer
=	O
(	O
char	O
*	O
*	O
*	O
)	O
q	pointer
->	O
uuconf_pvar	pointer
;	O
int	O
iret	int
;	O
*	O
ppz	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
NULL	O
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
else	O
{	O
char	O
*	O
*	O
*	O
ppz	pointer
=	O
(	O
char	O
*	O
*	O
*	O
)	O
q	pointer
->	O
uuconf_pvar	pointer
;	O
int	O
i	int
;	O
*	O
ppz	pointer
=	O
NULL	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
cargs	int
;	O
i	int
++	O
)	O
{	O
int	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
pzargs	pointer
[	O
i	int
]	O
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
*	O
ppz	pointer
=	O
NULL	O
;	O
return	O
iret	int
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
}	O
return	O
UUCONF_CMDTABRET_KEEP	O
;	O
}	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_FN	O
)	O
:	O
case	O
UUCONF_TTYPE_CMDTABTYPE	O
(	O
UUCONF_CMDTABTYPE_PREFIX	O
)	O
:	O
return	O
(	O
*	O
q	pointer
->	O
uuconf_pifn	pointer
)	O
(	O
pglobal	pointer
,	O
cargs	int
,	O
pzargs	pointer
,	O
q	pointer
->	O
uuconf_pvar	pointer
,	O
pinfo	pointer
)	O
;	O
default	O
:	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
}	O
