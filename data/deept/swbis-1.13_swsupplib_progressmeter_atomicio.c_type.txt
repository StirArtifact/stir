ssize_t	long
timed_atomic_read5	function
(	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
n	long
)	O
{	O
return	O
timed_atomicio	function
(	O
read	pointer
,	O
fd	int
,	O
buf	pointer
,	O
n	long
,	O
(	O
int	O
)	O
5	int
)	O
;	O
}	O
ssize_t	long
timed_atomicio	function
(	O
ssize_t	long
(	O
*	O
f	pointer
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
,	O
int	O
fd	int
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
n	long
,	O
int	O
timeout	int
)	O
{	O
const	O
int	O
pipe_buf_size	int
=	O
512	int
;	O
int	O
flags	int
;	O
int	O
ret	int
;	O
int	O
readret	int
;	O
char	O
*	O
s	pointer
;	O
ssize_t	long
res	long
;	O
ssize_t	long
pos	long
;	O
size_t	long
rq	long
;	O
time_t	long
tm0	long
;	O
time_t	long
tm	struct
;	O
flags	int
=	O
fcntl	function
(	O
fd	int
,	O
F_GETFL	int
,	O
O_NONBLOCK	int
)	O
;	O
ret	int
=	O
fcntl	function
(	O
fd	int
,	O
F_SETFL	int
,	O
O_NONBLOCK	int
)	O
;	O
if	O
(	O
flags	int
<	O
0	int
||	O
ret	int
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: non-blocking I/O request ignored, fcntl() status=%d: %s\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
flags	int
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
return	O
atomicio	function
(	O
f	pointer
,	O
fd	int
,	O
buf	pointer
,	O
n	long
)	O
;	O
}	O
tm0	long
=	O
time	struct
(	O
NULL	O
)	O
;	O
tm	struct
=	O
tm0	long
;	O
s	pointer
=	O
buf	pointer
;	O
pos	long
=	O
0	int
;	O
while	O
(	O
(	O
int	O
)	O
(	O
tm	struct
-	O
tm0	long
)	O
<	O
timeout	int
&&	O
n	long
>	O
(	O
size_t	long
)	O
pos	long
)	O
{	O
tm	struct
=	O
time	struct
(	O
NULL	O
)	O
;	O
rq	long
=	O
(	O
size_t	long
)	O
(	O
n	long
-	O
pos	long
)	O
;	O
if	O
(	O
(	O
int	O
)	O
rq	long
>	O
pipe_buf_size	int
)	O
{	O
rq	long
=	O
pipe_buf_size	int
;	O
}	O
res	long
=	O
safeio	function
(	O
f	pointer
,	O
fd	int
,	O
s	pointer
+	O
pos	long
,	O
rq	long
)	O
;	O
switch	O
(	O
res	long
)	O
{	O
case	O
-	O
1	int
:	O
if	O
(	O
errno	O
==	O
EAGAIN	int
)	O
{	O
continue	O
;	O
}	O
return	O
-	O
1	int
;	O
case	O
0	int
:	O
return	O
0	int
;	O
default	O
:	O
if	O
(	O
res	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
pos	long
+=	O
res	long
;	O
}	O
}	O
fcntl	function
(	O
fd	int
,	O
F_SETFL	int
,	O
flags	int
)	O
;	O
if	O
(	O
(	O
int	O
)	O
(	O
tm	struct
-	O
tm0	long
)	O
>=	O
timeout	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %d second I/O time limit exceeded: %d bytes transferred, %d expected\n"	pointer
,	O
swlib_utilname_get	function
(	O
)	O
,	O
(	O
int	O
)	O
timeout	int
,	O
(	O
int	O
)	O
pos	long
,	O
(	O
int	O
)	O
n	long
)	O
;	O
}	O
return	O
(	O
pos	long
)	O
;	O
}	O
ssize_t	long
atomicio	function
(	O
ssize_t	long
(	O
*	O
f	pointer
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
,	O
int	O
fd	int
,	O
void	O
*	O
_s	pointer
,	O
size_t	long
n	long
)	O
{	O
const	O
int	O
pipe_buf_size	int
=	O
512	int
;	O
char	O
*	O
s	pointer
;	O
ssize_t	long
res	long
;	O
ssize_t	long
pos	long
;	O
size_t	long
rq	long
;	O
s	pointer
=	O
_s	pointer
;	O
pos	long
=	O
0	int
;	O
while	O
(	O
n	long
>	O
(	O
size_t	long
)	O
pos	long
)	O
{	O
rq	long
=	O
(	O
size_t	long
)	O
(	O
n	long
-	O
pos	long
)	O
;	O
if	O
(	O
(	O
int	O
)	O
rq	long
>	O
pipe_buf_size	int
)	O
{	O
rq	long
=	O
pipe_buf_size	int
;	O
}	O
res	long
=	O
safeio	function
(	O
f	pointer
,	O
fd	int
,	O
s	pointer
+	O
pos	long
,	O
rq	long
)	O
;	O
switch	O
(	O
res	long
)	O
{	O
case	O
-	O
1	int
:	O
return	O
-	O
1	int
;	O
case	O
0	int
:	O
return	O
0	int
;	O
default	O
:	O
if	O
(	O
res	long
<	O
0	int
)	O
return	O
-	O
1	int
;	O
pos	long
+=	O
res	long
;	O
}	O
}	O
return	O
(	O
pos	long
)	O
;	O
}	O
ssize_t	long
safeio	function
(	O
f	pointer
,	O
fd	int
,	O
_s	pointer
,	O
n	long
)	O
ssize_t	long
(	O
*	O
f	pointer
)	O
(	O
int	O
,	O
void	O
*	O
,	O
size_t	long
)	O
;	O
int	O
fd	int
;	O
void	O
*	O
_s	pointer
;	O
size_t	long
n	long
;	O
{	O
const	O
int	O
pipe_buf_size	int
=	O
512	int
;	O
char	O
*	O
s	pointer
=	O
_s	pointer
;	O
ssize_t	long
res	long
,	O
pos	long
=	O
0	int
;	O
while	O
(	O
pos	long
==	O
0	int
)	O
{	O
res	long
=	O
(	O
f	pointer
)	O
(	O
fd	int
,	O
s	pointer
,	O
n	long
)	O
;	O
switch	O
(	O
res	long
)	O
{	O
case	O
-	O
1	int
:	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
{	O
continue	O
;	O
}	O
case	O
0	int
:	O
return	O
(	O
res	long
)	O
;	O
default	O
:	O
pos	long
+=	O
res	long
;	O
}	O
}	O
return	O
(	O
pos	long
)	O
;	O
}	O
