mp_limb_t	long
mpn_dcpi1_div_q	O
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
dn	long
,	O
gmp_pi1_t	struct
*	O
dinv	pointer
)	O
{	O
mp_ptr	pointer
tp	pointer
,	O
wp	pointer
;	O
mp_limb_t	long
qh	long
;	O
mp_size_t	long
qn	long
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
ASSERT	O
(	O
dn	long
>=	O
6	int
)	O
;	O
ASSERT	O
(	O
nn	long
-	O
dn	long
>=	O
3	int
)	O
;	O
ASSERT	O
(	O
dp	pointer
[	O
dn	long
-	O
1	int
]	O
&	O
GMP_NUMB_HIGHBIT	O
)	O
;	O
tp	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
nn	long
+	O
1	int
)	O
;	O
MPN_COPY	O
(	O
tp	pointer
+	O
1	int
,	O
np	pointer
,	O
nn	long
)	O
;	O
tp	pointer
[	O
0	int
]	O
=	O
0	int
;	O
qn	long
=	O
nn	long
-	O
dn	long
;	O
wp	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
qn	long
+	O
1	int
)	O
;	O
qh	long
=	O
mpn_dcpi1_divappr_q	O
(	O
wp	pointer
,	O
tp	pointer
,	O
nn	long
+	O
1	int
,	O
dp	pointer
,	O
dn	long
,	O
dinv	pointer
)	O
;	O
if	O
(	O
wp	pointer
[	O
0	int
]	O
==	O
0	int
)	O
{	O
mp_limb_t	long
cy	long
;	O
if	O
(	O
qn	long
>	O
dn	long
)	O
mpn_mul	O
(	O
tp	pointer
,	O
wp	pointer
+	O
1	int
,	O
qn	long
,	O
dp	pointer
,	O
dn	long
)	O
;	O
else	O
mpn_mul	O
(	O
tp	pointer
,	O
dp	pointer
,	O
dn	long
,	O
wp	pointer
+	O
1	int
,	O
qn	long
)	O
;	O
cy	long
=	O
(	O
qh	long
!=	O
0	int
)	O
?	O
mpn_add_n	O
(	O
tp	pointer
+	O
qn	long
,	O
tp	pointer
+	O
qn	long
,	O
dp	pointer
,	O
dn	long
)	O
:	O
0	int
;	O
if	O
(	O
cy	long
||	O
mpn_cmp	O
(	O
tp	pointer
,	O
np	pointer
,	O
nn	long
)	O
>	O
0	int
)	O
qh	long
-=	O
mpn_sub_1	O
(	O
qp	pointer
,	O
wp	pointer
+	O
1	int
,	O
qn	long
,	O
1	int
)	O
;	O
else	O
MPN_COPY	O
(	O
qp	pointer
,	O
wp	pointer
+	O
1	int
,	O
qn	long
)	O
;	O
}	O
else	O
MPN_COPY	O
(	O
qp	pointer
,	O
wp	pointer
+	O
1	int
,	O
qn	long
)	O
;	O
TMP_FREE	O
;	O
return	O
qh	long
;	O
}	O
