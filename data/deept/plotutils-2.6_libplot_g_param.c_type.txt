const	O
PlotterParams	struct
_default_plotter_params	struct
=	O
{	O
_setplparam	function
}	O
;	O
int	O
_setplparam	function
(	O
R___	O
(	O
PlotterParams	struct
*	O
_plotter_params	pointer
)	O
const	O
char	O
*	O
parameter	pointer
,	O
void	O
*	O
value	pointer
)	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
NUM_PLOTTER_PARAMETERS	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
_known_params	array
[	O
j	int
]	O
.	O
parameter	pointer
,	O
parameter	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
_known_params	array
[	O
j	int
]	O
.	O
is_string	enum
)	O
{	O
if	O
(	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
)	O
free	function
(	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
)	O
;	O
if	O
(	O
value	pointer
!=	O
NULL	O
)	O
{	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
(	O
char	O
*	O
)	O
value	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
,	O
(	O
char	O
*	O
)	O
value	pointer
)	O
;	O
}	O
else	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
=	O
NULL	O
;	O
}	O
else	O
_plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
=	O
value	pointer
;	O
return	O
0	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
void	O
_pl_g_copy_params_to_plotter	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
const	O
PlotterParams	struct
*	O
plotter_params	pointer
)	O
{	O
int	O
j	int
;	O
char	O
*	O
envs	pointer
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
NUM_PLOTTER_PARAMETERS	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
!	O
_known_params	array
[	O
j	int
]	O
.	O
is_string	enum
)	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
=	O
plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
;	O
else	O
{	O
if	O
(	O
plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
)	O
{	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
(	O
char	O
*	O
)	O
plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
,	O
(	O
char	O
*	O
)	O
plotter_params	pointer
->	O
plparams	array
[	O
j	int
]	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
envs	pointer
=	O
getenv	function
(	O
_known_params	array
[	O
j	int
]	O
.	O
parameter	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
envs	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
,	O
envs	pointer
)	O
;	O
}	O
else	O
if	O
(	O
_known_params	array
[	O
j	int
]	O
.	O
default_value	pointer
)	O
{	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
(	O
char	O
*	O
)	O
_known_params	array
[	O
j	int
]	O
.	O
default_value	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
,	O
(	O
char	O
*	O
)	O
_known_params	array
[	O
j	int
]	O
.	O
default_value	pointer
)	O
;	O
}	O
else	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
=	O
NULL	O
;	O
}	O
}	O
}	O
void	O
*	O
_get_plot_param	function
(	O
const	O
plPlotterData	struct
*	O
data	pointer
,	O
const	O
char	O
*	O
parameter_name	pointer
)	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
NUM_PLOTTER_PARAMETERS	int
;	O
j	int
++	O
)	O
if	O
(	O
strcmp	function
(	O
_known_params	array
[	O
j	int
]	O
.	O
parameter	pointer
,	O
parameter_name	pointer
)	O
==	O
0	int
)	O
return	O
data	pointer
->	O
params	array
[	O
j	int
]	O
;	O
return	O
(	O
void	O
*	O
)	O
NULL	O
;	O
}	O
void	O
_pl_g_free_params_in_plotter	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
NUM_PLOTTER_PARAMETERS	int
;	O
j	int
++	O
)	O
if	O
(	O
_known_params	array
[	O
j	int
]	O
.	O
is_string	enum
&&	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
!=	O
NULL	O
)	O
free	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
params	array
[	O
j	int
]	O
)	O
;	O
}	O
void	O
*	O
_get_default_plot_param	function
(	O
const	O
char	O
*	O
parameter_name	pointer
)	O
{	O
int	O
j	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
NUM_PLOTTER_PARAMETERS	int
;	O
j	int
++	O
)	O
if	O
(	O
strcmp	function
(	O
_known_params	array
[	O
j	int
]	O
.	O
parameter	pointer
,	O
parameter_name	pointer
)	O
==	O
0	int
)	O
return	O
_known_params	array
[	O
j	int
]	O
.	O
default_value	pointer
;	O
return	O
(	O
void	O
*	O
)	O
NULL	O
;	O
}	O
