bfd	struct
*	O
stdoutput	pointer
;	O
void	O
output_file_create	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
if	O
(	O
name	pointer
[	O
0	int
]	O
==	O
'-'	O
&&	O
name	pointer
[	O
1	int
]	O
==	O
'\0'	O
)	O
as_fatal	function
(	O
_	O
(	O
"can't open a bfd on stdout %s"	pointer
)	O
,	O
name	pointer
)	O
;	O
else	O
if	O
(	O
!	O
(	O
stdoutput	pointer
=	O
bfd_openw	function
(	O
name	pointer
,	O
TARGET_FORMAT	O
)	O
)	O
)	O
{	O
bfd_error_type	enum
err	pointer
=	O
bfd_get_error	function
(	O
)	O
;	O
if	O
(	O
err	pointer
==	O
bfd_error_invalid_target	int
)	O
as_fatal	function
(	O
_	O
(	O
"selected target format '%s' unknown"	pointer
)	O
,	O
TARGET_FORMAT	O
)	O
;	O
else	O
as_fatal	function
(	O
_	O
(	O
"can't create %s: %s"	pointer
)	O
,	O
name	pointer
,	O
bfd_errmsg	function
(	O
err	pointer
)	O
)	O
;	O
}	O
bfd_set_format	function
(	O
stdoutput	pointer
,	O
bfd_object	int
)	O
;	O
bfd_set_arch_mach	O
(	O
stdoutput	pointer
,	O
TARGET_ARCH	O
,	O
TARGET_MACH	O
)	O
;	O
if	O
(	O
flag_traditional_format	int
)	O
stdoutput	pointer
->	O
flags	int
|=	O
BFD_TRADITIONAL_FORMAT	int
;	O
}	O
void	O
output_file_close	function
(	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
bfd_boolean	int
res	int
;	O
if	O
(	O
stdoutput	pointer
==	O
NULL	O
)	O
return	O
;	O
if	O
(	O
had_errors	function
(	O
)	O
)	O
res	int
=	O
bfd_cache_close_all	function
(	O
)	O
;	O
else	O
res	int
=	O
bfd_close	function
(	O
stdoutput	pointer
)	O
;	O
stdoutput	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
res	int
)	O
as_fatal	function
(	O
_	O
(	O
"can't close %s: %s"	pointer
)	O
,	O
filename	pointer
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
}	O
