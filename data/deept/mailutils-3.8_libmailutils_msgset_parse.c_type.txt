struct	O
parse_msgnum_env	struct
{	O
const	O
char	O
*	O
s	pointer
;	O
size_t	long
minval	long
;	O
size_t	long
maxval	long
;	O
mu_msgset_t	pointer
msgset	pointer
;	O
int	O
mode	int
;	O
}	O
;	O
static	O
int	O
get_msgnum	function
(	O
struct	O
parse_msgnum_env	struct
*	O
env	pointer
,	O
size_t	long
*	O
pn	pointer
)	O
{	O
size_t	long
msgnum	long
;	O
char	O
*	O
p	pointer
;	O
errno	O
=	O
0	int
;	O
msgnum	long
=	O
strtoul	function
(	O
env	pointer
->	O
s	pointer
,	O
&	O
p	pointer
,	O
10	int
)	O
;	O
if	O
(	O
msgnum	long
==	O
ULONG_MAX	O
&&	O
errno	O
==	O
ERANGE	int
)	O
return	O
MU_ERR_PARSE	O
;	O
env	pointer
->	O
s	pointer
=	O
p	pointer
;	O
if	O
(	O
env	pointer
->	O
msgset	pointer
->	O
mbox	pointer
&&	O
env	pointer
->	O
maxval	long
&&	O
msgnum	long
>	O
env	pointer
->	O
maxval	long
)	O
msgnum	long
=	O
env	pointer
->	O
maxval	long
;	O
*	O
pn	pointer
=	O
msgnum	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
parse_msgrange	function
(	O
struct	O
parse_msgnum_env	struct
*	O
env	pointer
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_msgrange	struct
msgrange	struct
;	O
if	O
(	O
*	O
env	pointer
->	O
s	pointer
==	O
'*'	O
)	O
{	O
msgrange	struct
.	O
msg_beg	long
=	O
env	pointer
->	O
maxval	long
;	O
env	pointer
->	O
s	pointer
++	O
;	O
}	O
else	O
if	O
(	O
(	O
rc	int
=	O
get_msgnum	function
(	O
env	pointer
,	O
&	O
msgrange	struct
.	O
msg_beg	long
)	O
)	O
)	O
return	O
rc	int
;	O
if	O
(	O
*	O
env	pointer
->	O
s	pointer
==	O
':'	O
)	O
{	O
if	O
(	O
*	O
++	O
env	pointer
->	O
s	pointer
==	O
'*'	O
)	O
{	O
msgrange	struct
.	O
msg_end	long
=	O
env	pointer
->	O
maxval	long
;	O
++	O
env	pointer
->	O
s	pointer
;	O
}	O
else	O
if	O
(	O
*	O
env	pointer
->	O
s	pointer
==	O
0	int
)	O
return	O
MU_ERR_PARSE	O
;	O
else	O
if	O
(	O
(	O
rc	int
=	O
get_msgnum	function
(	O
env	pointer
,	O
&	O
msgrange	struct
.	O
msg_end	long
)	O
)	O
)	O
return	O
rc	int
;	O
}	O
else	O
msgrange	struct
.	O
msg_end	long
=	O
msgrange	struct
.	O
msg_beg	long
;	O
if	O
(	O
msgrange	struct
.	O
msg_end	long
&&	O
msgrange	struct
.	O
msg_end	long
<	O
msgrange	struct
.	O
msg_beg	long
)	O
{	O
size_t	long
tmp	long
=	O
msgrange	struct
.	O
msg_end	long
;	O
msgrange	struct
.	O
msg_end	long
=	O
msgrange	struct
.	O
msg_beg	long
;	O
msgrange	struct
.	O
msg_beg	long
=	O
tmp	long
;	O
}	O
if	O
(	O
env	pointer
->	O
mode	int
==	O
MU_MSGSET_EMPTY	O
)	O
return	O
0	int
;	O
return	O
mu_msgset_add_range	function
(	O
env	pointer
->	O
msgset	pointer
,	O
msgrange	struct
.	O
msg_beg	long
,	O
msgrange	struct
.	O
msg_end	long
,	O
env	pointer
->	O
mode	int
)	O
;	O
}	O
int	O
mu_msgset_parse_imap	function
(	O
mu_msgset_t	pointer
mset	pointer
,	O
int	O
mode	int
,	O
const	O
char	O
*	O
s	pointer
,	O
char	O
*	O
*	O
end	long
)	O
{	O
int	O
rc	int
;	O
struct	O
parse_msgnum_env	struct
env	pointer
;	O
if	O
(	O
!	O
s	pointer
||	O
!	O
mset	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
end	long
)	O
*	O
end	long
=	O
(	O
char	O
*	O
)	O
s	pointer
;	O
if	O
(	O
!	O
*	O
s	pointer
)	O
return	O
MU_ERR_PARSE	O
;	O
memset	function
(	O
&	O
env	pointer
,	O
0	int
,	O
sizeof	O
(	O
env	pointer
)	O
)	O
;	O
env	pointer
.	O
s	pointer
=	O
s	pointer
;	O
env	pointer
.	O
msgset	pointer
=	O
mset	pointer
;	O
env	pointer
.	O
minval	long
=	O
1	int
;	O
env	pointer
.	O
mode	int
=	O
mode	int
;	O
if	O
(	O
mset	pointer
->	O
mbox	pointer
)	O
{	O
size_t	long
lastmsgno	long
;	O
rc	int
=	O
mu_mailbox_messages_count	function
(	O
mset	pointer
->	O
mbox	pointer
,	O
&	O
lastmsgno	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
lastmsgno	long
==	O
0	int
)	O
{	O
env	pointer
.	O
mode	int
=	O
MU_MSGSET_EMPTY	O
;	O
}	O
else	O
if	O
(	O
mode	int
==	O
MU_MSGSET_UID	int
)	O
{	O
rc	int
=	O
mu_mailbox_translate	function
(	O
mset	pointer
->	O
mbox	pointer
,	O
MU_MAILBOX_MSGNO_TO_UID	int
,	O
lastmsgno	long
,	O
&	O
env	pointer
.	O
maxval	long
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_mailbox_translate	function
(	O
mset	pointer
->	O
mbox	pointer
,	O
MU_MAILBOX_MSGNO_TO_UID	int
,	O
1	int
,	O
&	O
env	pointer
.	O
minval	long
)	O
;	O
}	O
else	O
env	pointer
.	O
maxval	long
=	O
lastmsgno	long
;	O
}	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
while	O
(	O
(	O
rc	int
=	O
parse_msgrange	function
(	O
&	O
env	pointer
)	O
)	O
==	O
0	int
&&	O
*	O
env	pointer
.	O
s	pointer
)	O
{	O
if	O
(	O
*	O
env	pointer
.	O
s	pointer
!=	O
','	O
||	O
*	O
++	O
env	pointer
.	O
s	pointer
==	O
0	int
)	O
{	O
rc	int
=	O
MU_ERR_PARSE	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
end	long
)	O
*	O
end	long
=	O
(	O
char	O
*	O
)	O
env	pointer
.	O
s	pointer
;	O
return	O
rc	int
;	O
}	O
