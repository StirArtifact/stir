const	O
char	O
*	O
dico_invocation_name	pointer
;	O
const	O
char	O
*	O
dico_program_name	pointer
;	O
void	O
dico_set_program_name	function
(	O
char	O
*	O
name	pointer
)	O
{	O
const	O
char	O
*	O
progname	pointer
;	O
dico_invocation_name	pointer
=	O
name	pointer
;	O
if	O
(	O
!	O
name	pointer
)	O
progname	pointer
=	O
name	pointer
;	O
else	O
{	O
progname	pointer
=	O
strrchr	function
(	O
name	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
progname	pointer
)	O
progname	pointer
++	O
;	O
else	O
progname	pointer
=	O
name	pointer
;	O
if	O
(	O
strlen	function
(	O
progname	pointer
)	O
>	O
3	int
&&	O
memcmp	function
(	O
progname	pointer
,	O
"lt-"	pointer
,	O
3	int
)	O
==	O
0	int
)	O
progname	pointer
+=	O
3	int
;	O
}	O
dico_program_name	pointer
=	O
progname	pointer
;	O
}	O
static	O
char	O
*	O
prefix	array
[	O
]	O
=	O
{	O
"Debug"	pointer
,	O
"Info"	pointer
,	O
"Notice"	pointer
,	O
"Warning"	pointer
,	O
"Error"	pointer
,	O
"CRIT"	pointer
,	O
"ALERT"	pointer
,	O
"EMERG"	pointer
,	O
}	O
;	O
int	O
dico_str_to_diag_level	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
int	O
i	int
;	O
if	O
(	O
str	pointer
[	O
1	int
]	O
==	O
0	int
&&	O
isdigit	function
(	O
*	O
str	pointer
)	O
)	O
return	O
*	O
str	pointer
-	O
'0'	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
sizeof	O
(	O
prefix	array
)	O
/	O
sizeof	O
(	O
prefix	array
[	O
0	int
]	O
)	O
;	O
i	int
++	O
)	O
if	O
(	O
strcasecmp	function
(	O
prefix	array
[	O
i	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
i	int
;	O
return	O
-	O
1	int
;	O
}	O
void	O
_dico_stderr_log_printer	function
(	O
int	O
lvl	int
,	O
int	O
exitcode	int
,	O
int	O
errcode	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %s: "	pointer
,	O
dico_program_name	pointer
,	O
prefix	array
[	O
lvl	int
&	O
L_MASK	int
]	O
)	O
;	O
vfprintf	function
(	O
stderr	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
if	O
(	O
errcode	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
": %s"	pointer
,	O
strerror	function
(	O
errcode	int
)	O
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
static	O
dico_log_printer_t	pointer
_log_printer	pointer
=	O
_dico_stderr_log_printer	function
;	O
void	O
dico_set_log_printer	function
(	O
dico_log_printer_t	pointer
prt	pointer
)	O
{	O
_log_printer	pointer
=	O
prt	pointer
;	O
}	O
void	O
dico_vlog	function
(	O
int	O
lvl	int
,	O
int	O
errcode	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
_log_printer	pointer
(	O
lvl	int
,	O
0	int
,	O
errcode	int
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
}	O
void	O
dico_log	function
(	O
int	O
lvl	int
,	O
int	O
errcode	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
_log_printer	pointer
(	O
lvl	int
,	O
0	int
,	O
errcode	int
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
}	O
void	O
dico_die	function
(	O
int	O
exitcode	int
,	O
int	O
lvl	int
,	O
int	O
errcode	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
_log_printer	pointer
(	O
lvl	int
,	O
exitcode	int
,	O
errcode	int
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
exit	function
(	O
exitcode	int
)	O
;	O
}	O
