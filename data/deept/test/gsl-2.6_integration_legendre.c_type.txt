static	O
int	O
legendre_check	function
(	O
const	O
size_t	long
n	long
,	O
const	O
gsl_integration_fixed_params	struct
*	O
params	pointer
)	O
{	O
(	O
void	O
)	O
n	int
;	O
if	O
(	O
fabs	function
(	O
params	pointer
->	O
b	pointer
-	O
params	pointer
->	O
a	double
)	O
<=	O
GSL_DBL_EPSILON	int
)	O
{	O
GSL_ERROR	O
(	O
"|b - a| too small"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
else	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
}	O
static	O
int	O
legendre_init	function
(	O
const	O
size_t	long
n	long
,	O
double	O
*	O
diag	pointer
,	O
double	O
*	O
subdiag	pointer
,	O
gsl_integration_fixed_params	struct
*	O
params	pointer
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
n	long
;	O
i	long
++	O
)	O
{	O
diag	pointer
[	O
i	long
-	O
1	int
]	O
=	O
0.0	int
;	O
subdiag	pointer
[	O
i	long
-	O
1	int
]	O
=	O
(	O
double	O
)	O
i	long
/	O
sqrt	function
(	O
4.0	int
*	O
i	int
*	O
i	long
-	O
1.0	int
)	O
;	O
}	O
params	pointer
->	O
zemu	int
=	O
2.0	int
;	O
params	pointer
->	O
shft	double
=	O
0.5	int
*	O
(	O
params	pointer
->	O
b	pointer
+	O
params	pointer
->	O
a	double
)	O
;	O
params	pointer
->	O
slp	pointer
=	O
0.5	int
*	O
(	O
params	pointer
->	O
b	pointer
-	O
params	pointer
->	O
a	double
)	O
;	O
params	pointer
->	O
al	long
=	O
0.0	int
;	O
params	pointer
->	O
be	struct
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_integration_fixed_type	struct
legendre_type	struct
=	O
{	O
legendre_check	pointer
,	O
legendre_init	int
}	O
;	O
const	O
gsl_integration_fixed_type	struct
*	O
gsl_integration_fixed_legendre	pointer
=	O
&	O
legendre_type	struct
;	O