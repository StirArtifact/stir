XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_abort_empty_line	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_abort_empty_line	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"self, current, ..."	pointer
)	O
;	O
{	O
HV	struct
*	O
self	pointer
;	O
HV	struct
*	O
current	pointer
;	O
SV	struct
*	O
additional_text	pointer
=	O
0	int
;	O
int	O
RETVAL	int
;	O
dXSTARG	O
;	O
STMT_START	O
{	O
SV	struct
*	O
const	O
xsub_tmp_sv	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SvGETMAGIC	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
if	O
(	O
SvROK	O
(	O
xsub_tmp_sv	pointer
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
)	O
==	O
SVt_PVHV	int
)	O
{	O
self	pointer
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
}	O
else	O
{	O
Perl_croak_nocontext	function
(	O
"%s: %s is not a HASH reference"	pointer
,	O
"Texinfo::MiscXSXS::abort_empty_line"	pointer
,	O
"self"	pointer
)	O
;	O
}	O
}	O
STMT_END	O
;	O
STMT_START	O
{	O
SV	struct
*	O
const	O
xsub_tmp_sv	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
SvGETMAGIC	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
if	O
(	O
SvROK	O
(	O
xsub_tmp_sv	pointer
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
)	O
==	O
SVt_PVHV	int
)	O
{	O
current	pointer
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
}	O
else	O
{	O
Perl_croak_nocontext	function
(	O
"%s: %s is not a HASH reference"	pointer
,	O
"Texinfo::MiscXSXS::abort_empty_line"	pointer
,	O
"current"	pointer
)	O
;	O
}	O
}	O
STMT_END	O
;	O
items	int
-=	O
2	int
;	O
if	O
(	O
items	int
>	O
0	int
&&	O
SvOK	O
(	O
ST	O
(	O
2	int
)	O
)	O
)	O
{	O
additional_text	pointer
=	O
ST	O
(	O
2	int
)	O
;	O
}	O
RETVAL	int
=	O
xs_abort_empty_line	function
(	O
self	pointer
,	O
current	pointer
,	O
additional_text	pointer
)	O
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	int
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_merge_text	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_merge_text	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
3	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"self, current, text_in"	pointer
)	O
;	O
{	O
HV	struct
*	O
self	pointer
;	O
HV	struct
*	O
current	pointer
;	O
SV	struct
*	O
text_in	pointer
=	O
ST	O
(	O
2	int
)	O
;	O
HV	struct
*	O
RETVAL	int
;	O
STMT_START	O
{	O
SV	struct
*	O
const	O
xsub_tmp_sv	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SvGETMAGIC	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
if	O
(	O
SvROK	O
(	O
xsub_tmp_sv	pointer
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
)	O
==	O
SVt_PVHV	int
)	O
{	O
self	pointer
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
}	O
else	O
{	O
Perl_croak_nocontext	function
(	O
"%s: %s is not a HASH reference"	pointer
,	O
"Texinfo::MiscXSXS::merge_text"	pointer
,	O
"self"	pointer
)	O
;	O
}	O
}	O
STMT_END	O
;	O
STMT_START	O
{	O
SV	struct
*	O
const	O
xsub_tmp_sv	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
SvGETMAGIC	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
if	O
(	O
SvROK	O
(	O
xsub_tmp_sv	pointer
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
)	O
==	O
SVt_PVHV	int
)	O
{	O
current	pointer
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
xsub_tmp_sv	pointer
)	O
;	O
}	O
else	O
{	O
Perl_croak_nocontext	function
(	O
"%s: %s is not a HASH reference"	pointer
,	O
"Texinfo::MiscXSXS::merge_text"	pointer
,	O
"current"	pointer
)	O
;	O
}	O
}	O
STMT_END	O
;	O
RETVAL	int
=	O
xs_merge_text	function
(	O
self	pointer
,	O
current	pointer
,	O
text_in	pointer
)	O
;	O
{	O
SV	struct
*	O
RETVALSV	pointer
;	O
RETVALSV	pointer
=	O
newRV	O
(	O
(	O
SV	struct
*	O
)	O
RETVAL	int
)	O
;	O
RETVALSV	pointer
=	O
sv_2mortal	O
(	O
RETVALSV	pointer
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVALSV	pointer
;	O
}	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_process_text	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_process_text	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"text_in"	pointer
)	O
;	O
{	O
SV	struct
*	O
text_in	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
text	pointer
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
RETVAL	int
;	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	pointer
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	pointer
)	O
;	O
text	pointer
=	O
SvPV_nolen	O
(	O
text_in	pointer
)	O
;	O
retval	pointer
=	O
xs_process_text	function
(	O
text	pointer
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_unicode_text	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_unicode_text	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"text_in, ..."	pointer
)	O
;	O
{	O
SV	struct
*	O
text_in	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
int	O
in_code	int
=	O
0	int
;	O
char	O
*	O
text	pointer
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
RETVAL	int
;	O
items	int
--	O
;	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
if	O
(	O
SvOK	O
(	O
ST	O
(	O
1	int
)	O
)	O
)	O
in_code	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
}	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	pointer
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	pointer
)	O
;	O
text	pointer
=	O
SvPV_nolen	O
(	O
text_in	pointer
)	O
;	O
retval	pointer
=	O
xs_unicode_text	function
(	O
text	pointer
,	O
in_code	int
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_parse_texi_regex	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__MiscXSXS_parse_texi_regex	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"text"	pointer
)	O
;	O
PERL_UNUSED_VAR	O
(	O
ax	int
)	O
;	O
SP	O
-=	O
items	int
;	O
{	O
SV	struct
*	O
text	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
at_command	pointer
;	O
char	O
*	O
open_brace	pointer
;	O
char	O
*	O
asterisk	pointer
;	O
char	O
*	O
single_letter_command	pointer
;	O
char	O
*	O
separator_match	pointer
;	O
char	O
*	O
new_text	pointer
;	O
xs_parse_texi_regex	function
(	O
text	pointer
,	O
&	O
at_command	pointer
,	O
&	O
open_brace	pointer
,	O
&	O
asterisk	pointer
,	O
&	O
single_letter_command	pointer
,	O
&	O
separator_match	pointer
,	O
&	O
new_text	pointer
)	O
;	O
EXTEND	O
(	O
SP	O
,	O
6	int
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
0	int
)	O
,	O
at_command	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
0	int
)	O
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
1	int
)	O
,	O
open_brace	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
2	int
)	O
,	O
asterisk	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
2	int
)	O
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
3	int
)	O
,	O
single_letter_command	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
3	int
)	O
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
4	int
)	O
,	O
separator_match	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
4	int
)	O
)	O
;	O
PUSHs	O
(	O
sv_newmortal	O
(	O
)	O
)	O
;	O
sv_setpv	O
(	O
(	O
SV	struct
*	O
)	O
ST	O
(	O
5	int
)	O
,	O
new_text	pointer
)	O
;	O
SvUTF8_on	O
(	O
ST	O
(	O
5	int
)	O
)	O
;	O
PUTBACK	O
;	O
return	O
;	O
}	O
}	O
XS_EXTERNAL	O
(	O
boot_Texinfo__MiscXSXS	function
)	O
;	O
XS_EXTERNAL	O
(	O
boot_Texinfo__MiscXSXS	function
)	O
{	O
dVAR	O
;	O
dXSBOOTARGSXSAPIVERCHK	O
;	O
const	O
char	O
*	O
file	pointer
=	O
__FILE__	O
;	O
PERL_UNUSED_VAR	O
(	O
file	pointer
)	O
;	O
PERL_UNUSED_VAR	O
(	O
cv	struct
)	O
;	O
PERL_UNUSED_VAR	O
(	O
items	int
)	O
;	O
newXS_deffile	O
(	O
"Texinfo::MiscXSXS::abort_empty_line"	pointer
,	O
XS_Texinfo__MiscXSXS_abort_empty_line	function
)	O
;	O
newXS_deffile	O
(	O
"Texinfo::MiscXSXS::merge_text"	pointer
,	O
XS_Texinfo__MiscXSXS_merge_text	function
)	O
;	O
newXS_deffile	O
(	O
"Texinfo::MiscXSXS::process_text"	pointer
,	O
XS_Texinfo__MiscXSXS_process_text	function
)	O
;	O
newXS_deffile	O
(	O
"Texinfo::MiscXSXS::unicode_text"	pointer
,	O
XS_Texinfo__MiscXSXS_unicode_text	function
)	O
;	O
newXS_deffile	O
(	O
"Texinfo::MiscXSXS::parse_texi_regex"	pointer
,	O
XS_Texinfo__MiscXSXS_parse_texi_regex	function
)	O
;	O
Perl_xs_boot_epilog	function
(	O
aTHX_	O
ax	int
)	O
;	O
}	O
