const	O
char	O
send_rcsid	array
[	O
]	O
=	O
"$Id: send.c,v 1.57 2002/03/05 19:10:41 ian Rel $"	pointer
;	O
struct	O
ssendinfo	struct
{	O
char	O
*	O
zmail	pointer
;	O
char	O
*	O
zfile	pointer
;	O
long	O
cbytes	long
;	O
boolean	int
flocal	int
;	O
boolean	int
fspool	int
;	O
boolean	int
fsent	int
;	O
boolean	int
fnever	int
;	O
char	O
*	O
zexec	pointer
;	O
char	O
*	O
zconfirm	pointer
;	O
}	O
;	O
static	O
void	O
usfree_send	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_send_fail	function
P	O
(	O
(	O
struct	O
scmd	struct
*	O
qcmd	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zwhy	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_send_request	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_send_await_reply	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
flocal_send_cancelled	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_send_open_file	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fremote_rec_fail	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
enum	O
tfailure	enum
twhy	enum
,	O
int	O
iremote	int
)	O
)	O
;	O
static	O
boolean	int
fremote_rec_fail_send	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fremote_rec_reply	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fsend_file_end	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fsend_await_confirm	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
fsend_exec_file_init	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
void	O
usadd_exec_line	function
P	O
(	O
(	O
char	O
*	O
*	O
pz	pointer
,	O
size_t	long
*	O
pcalc	pointer
,	O
size_t	long
*	O
pclen	pointer
,	O
int	O
bcmd	char
,	O
const	O
char	O
*	O
z1	pointer
,	O
const	O
char	O
*	O
z2	pointer
,	O
boolean	int
fquote	int
)	O
)	O
;	O
static	O
boolean	int
fsend_exec_file	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
void	O
usfree_send	function
(	O
qtrans	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
if	O
(	O
qinfo	pointer
!=	O
NULL	O
)	O
{	O
ubuffree	function
(	O
qinfo	pointer
->	O
zmail	pointer
)	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
zexec	pointer
)	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
zconfirm	pointer
)	O
;	O
xfree	function
(	O
qtrans	pointer
->	O
pinfo	pointer
)	O
;	O
}	O
utransfree	function
(	O
qtrans	pointer
)	O
;	O
}	O
boolean	int
flocal_send_file_init	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
{	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
boolean	int
fspool	int
;	O
char	O
*	O
zfile	pointer
;	O
long	O
cbytes	long
;	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
qsys	pointer
=	O
qdaemon	pointer
->	O
qsys	pointer
;	O
if	O
(	O
qdaemon	pointer
->	O
fcaller	int
?	O
!	O
qsys	pointer
->	O
uuconf_fcall_transfer	int
:	O
!	O
qsys	pointer
->	O
uuconf_fcalled_transfer	int
)	O
{	O
if	O
(	O
!	O
qsys	pointer
->	O
uuconf_fcall_transfer	int
&&	O
!	O
qsys	pointer
->	O
uuconf_fcalled_transfer	int
)	O
return	O
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
"not permitted to transfer files"	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'C'	O
)	O
==	O
NULL	O
&&	O
!	O
fspool_file	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
)	O
{	O
fspool	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fin_directory_list	function
(	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qsys	pointer
->	O
uuconf_pzlocal_send	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
qcmd	pointer
->	O
zuser	pointer
)	O
)	O
return	O
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
"not permitted to send"	pointer
)	O
;	O
zfile	pointer
=	O
zbufcpy	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
}	O
else	O
{	O
fspool	int
=	O
TRUE	O
;	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
cbytes	long
=	O
csysdep_size	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
<	O
0	int
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
!=	O
-	O
1	int
)	O
return	O
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
"can not get size"	pointer
)	O
;	O
if	O
(	O
!	O
fspool	int
)	O
return	O
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
"does not exist"	pointer
)	O
;	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
clocal_size	long
!=	O
-	O
1	int
&&	O
qdaemon	pointer
->	O
clocal_size	long
<	O
cbytes	long
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
qdaemon	pointer
->	O
cmax_ever	long
==	O
-	O
2	int
)	O
{	O
long	O
c1	long
,	O
c2	long
;	O
c1	long
=	O
cmax_size_ever	function
(	O
qsys	pointer
->	O
uuconf_qcall_local_size	pointer
)	O
;	O
c2	long
=	O
cmax_size_ever	function
(	O
qsys	pointer
->	O
uuconf_qcalled_local_size	pointer
)	O
;	O
if	O
(	O
c1	long
>	O
c2	long
)	O
qdaemon	pointer
->	O
cmax_ever	long
=	O
c1	long
;	O
else	O
qdaemon	pointer
->	O
cmax_ever	long
=	O
c2	long
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
cmax_ever	long
!=	O
-	O
1	int
&&	O
qdaemon	pointer
->	O
cmax_ever	long
<	O
qcmd	pointer
->	O
cbytes	long
)	O
return	O
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
"too large to send"	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
ssendinfo	struct
)	O
)	O
;	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'm'	O
)	O
==	O
NULL	O
)	O
qinfo	pointer
->	O
zmail	pointer
=	O
NULL	O
;	O
else	O
qinfo	pointer
->	O
zmail	pointer
=	O
zbufcpy	function
(	O
qcmd	pointer
->	O
zuser	pointer
)	O
;	O
qinfo	pointer
->	O
zfile	pointer
=	O
zfile	pointer
;	O
qinfo	pointer
->	O
cbytes	long
=	O
cbytes	long
;	O
qinfo	pointer
->	O
flocal	int
=	O
strchr	function
(	O
qcmd	pointer
->	O
zuser	pointer
,	O
'!'	O
)	O
==	O
NULL	O
;	O
qinfo	pointer
->	O
fspool	int
=	O
fspool	int
;	O
qinfo	pointer
->	O
fsent	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
zexec	pointer
=	O
NULL	O
;	O
qinfo	pointer
->	O
zconfirm	pointer
=	O
NULL	O
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
qcmd	pointer
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
flocal_send_request	function
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
qinfo	pointer
;	O
return	O
fqueue_local	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
flocal_send_fail	function
(	O
qcmd	pointer
,	O
qdaemon	pointer
,	O
zwhy	pointer
)	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
zwhy	pointer
;	O
{	O
if	O
(	O
zwhy	pointer
!=	O
NULL	O
)	O
{	O
const	O
char	O
*	O
zfrom	pointer
;	O
char	O
*	O
zfree	pointer
;	O
const	O
char	O
*	O
ztemp	pointer
;	O
if	O
(	O
qcmd	pointer
->	O
bcmd	char
!=	O
'E'	O
)	O
{	O
zfrom	pointer
=	O
qcmd	pointer
->	O
zfrom	pointer
;	O
zfree	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
zfree	pointer
=	O
zbufalc	function
(	O
strlen	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
+	O
sizeof	O
" (execution of \"\")"	pointer
+	O
strlen	function
(	O
qcmd	pointer
->	O
zcmd	pointer
)	O
)	O
;	O
sprintf	function
(	O
zfree	pointer
,	O
"%s (execution of \"%s\")"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zcmd	pointer
)	O
;	O
zfrom	pointer
=	O
zfree	pointer
;	O
}	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
zfrom	pointer
,	O
zwhy	pointer
)	O
;	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zuser	pointer
,	O
'!'	O
)	O
==	O
NULL	O
)	O
ztemp	pointer
=	O
zsysdep_save_temp_file	function
(	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
else	O
ztemp	pointer
=	O
NULL	O
;	O
(	O
void	O
)	O
fmail_transfer	function
(	O
FALSE	O
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zwhy	pointer
,	O
zfrom	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
ztemp	pointer
)	O
;	O
ubuffree	function
(	O
zfree	pointer
)	O
;	O
}	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
flocal_send_request	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
boolean	int
fquote	int
;	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
struct	O
scmd	struct
squoted	struct
;	O
const	O
char	O
*	O
znotify	pointer
;	O
char	O
absize	array
[	O
20	int
]	O
;	O
char	O
*	O
zsend	pointer
;	O
boolean	int
fret	int
;	O
if	O
(	O
qdaemon	pointer
->	O
cmax_receive	long
!=	O
-	O
1	int
&&	O
qdaemon	pointer
->	O
cmax_receive	long
<	O
qinfo	pointer
->	O
cbytes	long
)	O
{	O
fret	int
=	O
flocal_send_fail	function
(	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
,	O
"too large for receiver"	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
if	O
(	O
!	O
fsysdep_file_exists	function
(	O
qinfo	pointer
->	O
zfile	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
qtrans	pointer
->	O
fcmd	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
flocal_send_open_file	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
flocal_send_await_reply	function
;	O
if	O
(	O
qdaemon	pointer
->	O
cchans	int
>	O
1	int
)	O
fret	int
=	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
else	O
fret	int
=	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
if	O
(	O
!	O
fret	int
)	O
return	O
FALSE	O
;	O
fquote	int
=	O
fcmd_needs_quotes	function
(	O
&	O
qtrans	pointer
->	O
s	struct
)	O
;	O
if	O
(	O
!	O
fquote	int
)	O
qcmd	pointer
=	O
&	O
qtrans	pointer
->	O
s	struct
;	O
else	O
{	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_QUOTES	O
)	O
==	O
0	int
)	O
{	O
fret	int
=	O
flocal_send_fail	function
(	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
,	O
"remote system does not support required quoting"	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
uquote_cmd	function
(	O
&	O
qtrans	pointer
->	O
s	struct
,	O
&	O
squoted	struct
)	O
;	O
qcmd	pointer
=	O
&	O
squoted	struct
;	O
}	O
znotify	pointer
=	O
qcmd	pointer
->	O
znotify	pointer
;	O
if	O
(	O
znotify	pointer
==	O
NULL	O
)	O
znotify	pointer
=	O
""	pointer
;	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_SIZES	O
)	O
!=	O
0	int
||	O
(	O
qcmd	pointer
->	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
!=	O
0	int
)	O
)	O
{	O
if	O
(	O
*	O
znotify	pointer
==	O
'\0'	O
)	O
znotify	pointer
=	O
"\"\""	pointer
;	O
}	O
else	O
{	O
if	O
(	O
strcmp	function
(	O
znotify	pointer
,	O
"\"\""	pointer
)	O
==	O
0	int
)	O
znotify	pointer
=	O
""	pointer
;	O
}	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_SIZES	O
)	O
==	O
0	int
&&	O
(	O
qcmd	pointer
->	O
bcmd	char
!=	O
'E'	O
||	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
==	O
0	int
)	O
)	O
absize	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
else	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_V103	O
)	O
==	O
0	int
)	O
sprintf	function
(	O
absize	array
,	O
"0x%lx"	pointer
,	O
(	O
unsigned	O
long	O
)	O
qinfo	pointer
->	O
cbytes	long
)	O
;	O
else	O
sprintf	function
(	O
absize	array
,	O
"%ld"	pointer
,	O
qinfo	pointer
->	O
cbytes	long
)	O
;	O
zsend	pointer
=	O
zbufalc	function
(	O
strlen	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zto	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zuser	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zoptions	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
ztemp	pointer
)	O
+	O
strlen	function
(	O
znotify	pointer
)	O
+	O
strlen	function
(	O
absize	array
)	O
+	O
(	O
qcmd	pointer
->	O
zcmd	pointer
!=	O
NULL	O
?	O
strlen	function
(	O
qcmd	pointer
->	O
zcmd	pointer
)	O
:	O
0	int
)	O
+	O
50	int
)	O
;	O
if	O
(	O
qcmd	pointer
->	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
!=	O
0	int
)	O
{	O
sprintf	function
(	O
zsend	pointer
,	O
"E %s %s %s -%s %s 0%o %s %s %s"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
qcmd	pointer
->	O
zoptions	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
qcmd	pointer
->	O
imode	int
,	O
znotify	pointer
,	O
absize	array
,	O
qcmd	pointer
->	O
zcmd	pointer
)	O
;	O
}	O
else	O
{	O
const	O
char	O
*	O
zoptions	pointer
,	O
*	O
zdummy	pointer
;	O
if	O
(	O
qcmd	pointer
->	O
bcmd	char
!=	O
'E'	O
)	O
zoptions	pointer
=	O
qcmd	pointer
->	O
zoptions	pointer
;	O
else	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'C'	O
)	O
!=	O
NULL	O
)	O
{	O
zoptions	pointer
=	O
""	pointer
;	O
}	O
else	O
zoptions	pointer
=	O
"c"	pointer
;	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_SVR4	O
)	O
!=	O
0	int
)	O
zdummy	pointer
=	O
" dummy "	pointer
;	O
else	O
zdummy	pointer
=	O
" "	pointer
;	O
sprintf	function
(	O
zsend	pointer
,	O
"S %s %s %s -%s %s 0%o %s%s%s"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
zoptions	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
qcmd	pointer
->	O
imode	int
,	O
znotify	pointer
,	O
zdummy	pointer
,	O
absize	array
)	O
;	O
}	O
fret	int
=	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
zsend	pointer
,	O
qtrans	pointer
->	O
ilocal	int
,	O
qtrans	pointer
->	O
iremote	int
)	O
;	O
ubuffree	function
(	O
zsend	pointer
)	O
;	O
if	O
(	O
fquote	int
)	O
ufree_quoted_cmd	function
(	O
&	O
squoted	struct
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
flocal_send_await_reply	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
bcmd	char
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
!=	O
0	int
)	O
bcmd	char
=	O
'E'	O
;	O
else	O
bcmd	char
=	O
'S'	O
;	O
if	O
(	O
zdata	pointer
[	O
0	int
]	O
!=	O
bcmd	char
||	O
(	O
zdata	pointer
[	O
1	int
]	O
!=	O
'Y'	O
&&	O
zdata	pointer
[	O
1	int
]	O
!=	O
'N'	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: Bad response to %c request: \"%s\""	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
bcmd	char
,	O
zdata	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
zdata	pointer
[	O
1	int
]	O
==	O
'N'	O
)	O
{	O
const	O
char	O
*	O
zerr	pointer
;	O
boolean	int
fnever	int
;	O
fnever	int
=	O
TRUE	O
;	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'2'	O
)	O
zerr	pointer
=	O
"permission denied by remote"	pointer
;	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'4'	O
)	O
{	O
zerr	pointer
=	O
"remote cannot create work files"	pointer
;	O
fnever	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'6'	O
)	O
{	O
zerr	pointer
=	O
"too large for remote now"	pointer
;	O
fnever	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'7'	O
)	O
{	O
zerr	pointer
=	O
"too large for remote"	pointer
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'8'	O
)	O
{	O
zerr	pointer
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'9'	O
)	O
{	O
zerr	pointer
=	O
"too many channels for remote"	pointer
;	O
fnever	int
=	O
FALSE	O
;	O
if	O
(	O
qdaemon	pointer
->	O
cchans	int
>	O
2	int
)	O
--	O
qdaemon	pointer
->	O
cchans	int
;	O
}	O
else	O
zerr	pointer
=	O
"unknown reason"	pointer
;	O
if	O
(	O
!	O
fnever	int
||	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
==	O
0	int
&&	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
)	O
{	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s (execution of \"%s\"): %s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
,	O
zerr	pointer
)	O
;	O
else	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zerr	pointer
)	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
flocal_send_fail	function
(	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
,	O
zerr	pointer
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
cchans	int
==	O
1	int
||	O
qinfo	pointer
->	O
fsent	int
)	O
{	O
if	O
(	O
fnever	int
&&	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
==	O
0	int
&&	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
return	O
fsend_exec_file_init	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
else	O
{	O
if	O
(	O
qtrans	pointer
->	O
fsendfile	int
&&	O
!	O
ffileseekend	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"seek to end: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
qtrans	pointer
->	O
psendfn	pointer
=	O
flocal_send_cancelled	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
NULL	O
;	O
qinfo	pointer
->	O
fnever	int
=	O
fnever	int
;	O
return	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
}	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
!=	O
'\0'	O
)	O
{	O
long	O
cskip	long
;	O
cskip	long
=	O
strtol	function
(	O
(	O
char	O
*	O
)	O
(	O
zdata	pointer
+	O
2	int
)	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
cskip	long
>	O
0	int
&&	O
qtrans	pointer
->	O
ipos	long
<	O
cskip	long
)	O
{	O
if	O
(	O
qtrans	pointer
->	O
fsendfile	int
&&	O
!	O
qinfo	pointer
->	O
fsent	int
)	O
{	O
if	O
(	O
!	O
ffileseek	O
(	O
qtrans	pointer
->	O
e	pointer
,	O
cskip	long
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"seek: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qtrans	pointer
->	O
ipos	long
=	O
cskip	long
;	O
}	O
}	O
qtrans	pointer
->	O
fcmd	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
fsend_await_confirm	function
;	O
if	O
(	O
qinfo	pointer
->	O
fsent	int
)	O
return	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
else	O
if	O
(	O
qdaemon	pointer
->	O
cchans	int
<=	O
1	int
)	O
return	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
else	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
flocal_send_open_file	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
const	O
char	O
*	O
zuser	pointer
;	O
if	O
(	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
{	O
zuser	pointer
=	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
;	O
if	O
(	O
strchr	function
(	O
zuser	pointer
,	O
'!'	O
)	O
!=	O
NULL	O
)	O
zuser	pointer
=	O
NULL	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
esysdep_open_send	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
,	O
!	O
qinfo	pointer
->	O
fspool	int
,	O
zuser	pointer
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fmail_transfer	function
(	O
FALSE	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
"cannot open file"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
(	O
qinfo	pointer
->	O
flocal	int
?	O
zsysdep_save_temp_file	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
:	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
;	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
qtrans	pointer
->	O
ipos	long
>	O
0	int
)	O
{	O
if	O
(	O
qinfo	pointer
->	O
zexec	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
qtrans	pointer
->	O
ipos	long
>	O
qtrans	pointer
->	O
cbytes	long
)	O
qtrans	pointer
->	O
ipos	long
=	O
qtrans	pointer
->	O
cbytes	long
;	O
}	O
else	O
{	O
if	O
(	O
!	O
ffileseek	O
(	O
qtrans	pointer
->	O
e	pointer
,	O
qtrans	pointer
->	O
ipos	long
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"seek: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
if	O
(	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
{	O
const	O
char	O
*	O
zsend	pointer
;	O
char	O
*	O
zalc	pointer
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
!=	O
'E'	O
)	O
{	O
zsend	pointer
=	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
;	O
zalc	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
zalc	pointer
=	O
zbufalc	function
(	O
strlen	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
)	O
+	O
sizeof	O
" ()"	pointer
+	O
strlen	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
)	O
;	O
sprintf	function
(	O
zalc	pointer
,	O
"%s (%s)"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
;	O
zsend	pointer
=	O
zalc	pointer
;	O
}	O
qtrans	pointer
->	O
zlog	pointer
=	O
zbufalc	function
(	O
sizeof	O
"Sending ( bytes resume at )"	pointer
+	O
strlen	function
(	O
zsend	pointer
)	O
+	O
50	int
)	O
;	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
"Sending %s (%ld bytes"	pointer
,	O
zsend	pointer
,	O
qinfo	pointer
->	O
cbytes	long
)	O
;	O
if	O
(	O
qtrans	pointer
->	O
ipos	long
>	O
0	int
)	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
+	O
strlen	function
(	O
qtrans	pointer
->	O
zlog	pointer
)	O
,	O
" resume at %ld"	pointer
,	O
qtrans	pointer
->	O
ipos	long
)	O
;	O
strcat	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
")"	pointer
)	O
;	O
ubuffree	function
(	O
zalc	pointer
)	O
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
qinfo	pointer
->	O
cbytes	long
-	O
qtrans	pointer
->	O
ipos	long
,	O
&	O
fhandled	int
)	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fhandled	int
)	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
qinfo	pointer
->	O
zexec	pointer
!=	O
NULL	O
)	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fsend_exec_file	function
;	O
else	O
{	O
qtrans	pointer
->	O
fsendfile	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fsend_file_end	function
;	O
}	O
return	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
flocal_send_cancelled	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
if	O
(	O
qinfo	pointer
->	O
fnever	int
&&	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
==	O
0	int
&&	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
return	O
fsend_exec_file_init	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
;	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fremote_rec_file_init	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
int	O
iremote	int
;	O
{	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
char	O
*	O
zfile	pointer
;	O
boolean	int
fbadname	int
;	O
long	O
cbytes	long
;	O
unsigned	O
int	O
imode	int
;	O
openfile_t	pointer
e	pointer
;	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
qsys	pointer
=	O
qdaemon	pointer
->	O
qsys	pointer
;	O
if	O
(	O
!	O
qsys	pointer
->	O
uuconf_fsend_request	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to send files to remote"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
fspool_file	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to send"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
zfile	pointer
=	O
zsysdep_local_file	function
(	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
&	O
fbadname	int
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
&&	O
fbadname	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: bad local file name"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
zfile	pointer
!=	O
NULL	O
)	O
{	O
char	O
*	O
zbased	pointer
;	O
zbased	pointer
=	O
zsysdep_add_base	function
(	O
zfile	pointer
,	O
qcmd	pointer
->	O
zto	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
zfile	pointer
=	O
zbased	pointer
;	O
}	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
if	O
(	O
!	O
fin_directory_list	function
(	O
zfile	pointer
,	O
qsys	pointer
->	O
uuconf_pzremote_send	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to send"	pointer
,	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
cbytes	long
=	O
csysdep_size	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
!=	O
-	O
1	int
&&	O
(	O
(	O
qcmd	pointer
->	O
cbytes	long
!=	O
-	O
1	int
&&	O
qcmd	pointer
->	O
cbytes	long
<	O
cbytes	long
)	O
||	O
(	O
qdaemon	pointer
->	O
cremote_size	long
!=	O
-	O
1	int
&&	O
qdaemon	pointer
->	O
cremote_size	long
<	O
cbytes	long
)	O
||	O
(	O
qdaemon	pointer
->	O
cmax_receive	long
!=	O
-	O
1	int
&&	O
qdaemon	pointer
->	O
cmax_receive	long
<	O
cbytes	long
)	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: too large to send"	pointer
,	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_SIZE	int
,	O
iremote	int
)	O
;	O
}	O
imode	int
=	O
ixsysdep_file_mode	function
(	O
zfile	pointer
)	O
;	O
e	pointer
=	O
esysdep_open_send	function
(	O
qsys	pointer
,	O
zfile	pointer
,	O
TRUE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
e	pointer
)	O
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
FAILURE_OPEN	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
qcmd	pointer
->	O
ipos	long
>	O
0	int
)	O
{	O
if	O
(	O
!	O
ffileseek	O
(	O
e	pointer
,	O
qcmd	pointer
->	O
ipos	long
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"seek: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
ssendinfo	struct
)	O
)	O
;	O
qinfo	pointer
->	O
zmail	pointer
=	O
NULL	O
;	O
qinfo	pointer
->	O
zfile	pointer
=	O
zfile	pointer
;	O
qinfo	pointer
->	O
cbytes	long
=	O
cbytes	long
;	O
qinfo	pointer
->	O
flocal	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
fspool	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
fsent	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
zexec	pointer
=	O
NULL	O
;	O
qinfo	pointer
->	O
zconfirm	pointer
=	O
NULL	O
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
qcmd	pointer
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fremote_rec_reply	function
;	O
qtrans	pointer
->	O
iremote	int
=	O
iremote	int
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
qinfo	pointer
;	O
qtrans	pointer
->	O
e	pointer
=	O
e	pointer
;	O
qtrans	pointer
->	O
ipos	long
=	O
qcmd	pointer
->	O
ipos	long
;	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
=	O
imode	int
;	O
return	O
fqueue_remote	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
fremote_rec_reply	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
absend	array
[	O
50	int
]	O
;	O
qtrans	pointer
->	O
fsendfile	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fsend_file_end	function
;	O
qtrans	pointer
->	O
fcmd	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
fsend_await_confirm	function
;	O
if	O
(	O
!	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
)	O
return	O
FALSE	O
;	O
qtrans	pointer
->	O
zlog	pointer
=	O
zbufalc	function
(	O
sizeof	O
"Sending ( bytes) "	pointer
+	O
strlen	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
+	O
25	int
)	O
;	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
"Sending %s (%ld bytes)"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qinfo	pointer
->	O
cbytes	long
)	O
;	O
if	O
(	O
qdaemon	pointer
->	O
frequest_hangup	int
)	O
DEBUG_MESSAGE0	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fremote_rec_reply: Requesting remote to transfer control"	pointer
)	O
;	O
sprintf	function
(	O
absend	array
,	O
"RY 0%o%s 0x%lx%s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
,	O
qdaemon	pointer
->	O
frequest_hangup	int
?	O
"M"	pointer
:	O
""	pointer
,	O
(	O
unsigned	O
long	O
)	O
qinfo	pointer
->	O
cbytes	long
,	O
qdaemon	pointer
->	O
frequest_hangup	int
?	O
"M"	pointer
:	O
""	pointer
)	O
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
absend	array
,	O
qtrans	pointer
->	O
ilocal	int
,	O
qtrans	pointer
->	O
iremote	int
)	O
)	O
{	O
(	O
void	O
)	O
ffileclose	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
qinfo	pointer
->	O
cbytes	long
,	O
&	O
fhandled	int
)	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fremote_rec_fail	function
(	O
qdaemon	pointer
,	O
twhy	enum
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
enum	O
tfailure	enum
twhy	enum
;	O
int	O
iremote	int
;	O
{	O
enum	O
tfailure	enum
*	O
ptinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
ptinfo	pointer
=	O
(	O
enum	O
tfailure	enum
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
enum	O
tfailure	enum
)	O
)	O
;	O
*	O
ptinfo	pointer
=	O
twhy	enum
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
(	O
struct	O
scmd	struct
*	O
)	O
NULL	O
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fremote_rec_fail_send	function
;	O
qtrans	pointer
->	O
iremote	int
=	O
iremote	int
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
ptinfo	pointer
;	O
return	O
fqueue_remote	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
fremote_rec_fail_send	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
enum	O
tfailure	enum
*	O
ptinfo	pointer
=	O
(	O
enum	O
tfailure	enum
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
const	O
char	O
*	O
z	pointer
;	O
int	O
ilocal	int
,	O
iremote	int
;	O
switch	O
(	O
*	O
ptinfo	pointer
)	O
{	O
case	O
FAILURE_PERM	int
:	O
case	O
FAILURE_OPEN	int
:	O
z	pointer
=	O
"RN2"	pointer
;	O
break	O
;	O
case	O
FAILURE_SIZE	int
:	O
z	pointer
=	O
"RN6"	pointer
;	O
break	O
;	O
default	O
:	O
z	pointer
=	O
"RN"	pointer
;	O
break	O
;	O
}	O
ilocal	int
=	O
qtrans	pointer
->	O
ilocal	int
;	O
iremote	int
=	O
qtrans	pointer
->	O
iremote	int
;	O
xfree	function
(	O
qtrans	pointer
->	O
pinfo	pointer
)	O
;	O
utransfree	function
(	O
qtrans	pointer
)	O
;	O
return	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
z	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
;	O
}	O
static	O
boolean	int
fsend_file_end	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
FALSE	O
,	O
TRUE	O
,	O
(	O
long	O
)	O
-	O
1	int
,	O
&	O
fhandled	int
)	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fhandled	int
)	O
return	O
TRUE	O
;	O
}	O
qinfo	pointer
->	O
fsent	int
=	O
TRUE	O
;	O
if	O
(	O
qinfo	pointer
->	O
zconfirm	pointer
!=	O
NULL	O
)	O
return	O
fsend_await_confirm	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
qinfo	pointer
->	O
zconfirm	pointer
,	O
strlen	function
(	O
qinfo	pointer
->	O
zconfirm	pointer
)	O
+	O
1	int
)	O
;	O
return	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
fsend_await_confirm	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
boolean	int
fnever	int
;	O
const	O
char	O
*	O
zerr	pointer
;	O
if	O
(	O
!	O
qinfo	pointer
->	O
fsent	int
)	O
{	O
qinfo	pointer
->	O
zconfirm	pointer
=	O
zbufcpy	function
(	O
zdata	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
{	O
(	O
void	O
)	O
ffileclose	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
}	O
fnever	int
=	O
FALSE	O
;	O
if	O
(	O
zdata	pointer
[	O
0	int
]	O
!=	O
'C'	O
||	O
(	O
zdata	pointer
[	O
1	int
]	O
!=	O
'Y'	O
&&	O
zdata	pointer
[	O
1	int
]	O
!=	O
'N'	O
)	O
)	O
{	O
zerr	pointer
=	O
"bad confirmation from remote"	pointer
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s \"%s\""	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zerr	pointer
,	O
zdata	pointer
)	O
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
1	int
]	O
==	O
'N'	O
)	O
{	O
fnever	int
=	O
TRUE	O
;	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'5'	O
)	O
{	O
zerr	pointer
=	O
"file could not be stored in final location"	pointer
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zerr	pointer
)	O
;	O
}	O
else	O
{	O
zerr	pointer
=	O
"file send failed for unknown reason"	pointer
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s \"%s\""	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zerr	pointer
,	O
zdata	pointer
)	O
;	O
}	O
}	O
else	O
{	O
zerr	pointer
=	O
NULL	O
;	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'M'	O
&&	O
qdaemon	pointer
->	O
fmaster	int
)	O
{	O
DEBUG_MESSAGE0	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fsend_await_confirm: Remote has requested transfer of control"	pointer
)	O
;	O
qdaemon	pointer
->	O
fhangup_requested	int
=	O
TRUE	O
;	O
}	O
}	O
ustats	function
(	O
zerr	pointer
==	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
TRUE	O
,	O
qtrans	pointer
->	O
cbytes	long
,	O
qtrans	pointer
->	O
isecs	long
,	O
qtrans	pointer
->	O
imicros	long
,	O
qdaemon	pointer
->	O
fcaller	int
)	O
;	O
qdaemon	pointer
->	O
csent	long
+=	O
qtrans	pointer
->	O
cbytes	long
;	O
if	O
(	O
zerr	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_EXEC	O
)	O
==	O
0	int
&&	O
qinfo	pointer
->	O
zexec	pointer
==	O
NULL	O
)	O
return	O
fsend_exec_file_init	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
;	O
if	O
(	O
qinfo	pointer
->	O
zmail	pointer
!=	O
NULL	O
&&	O
*	O
qinfo	pointer
->	O
zmail	pointer
!=	O
'\0'	O
)	O
(	O
void	O
)	O
fmail_transfer	function
(	O
TRUE	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qinfo	pointer
->	O
zmail	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
!=	O
NULL	O
)	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
}	O
else	O
{	O
if	O
(	O
fnever	int
&&	O
qinfo	pointer
->	O
flocal	int
)	O
{	O
(	O
void	O
)	O
fmail_transfer	function
(	O
FALSE	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qinfo	pointer
->	O
zmail	pointer
,	O
zerr	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
zsysdep_save_temp_file	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
)	O
;	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
}	O
}	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fsend_exec_file_init	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
*	O
zxqtfile	pointer
;	O
char	O
abtname	array
[	O
CFILE_NAME_LEN	O
]	O
;	O
char	O
abxname	array
[	O
CFILE_NAME_LEN	O
]	O
;	O
char	O
*	O
z	pointer
;	O
size_t	long
calc	long
,	O
clen	long
;	O
boolean	int
fquote	int
;	O
z	pointer
=	O
NULL	O
;	O
calc	long
=	O
0	int
;	O
clen	long
=	O
0	int
;	O
fquote	int
=	O
fcmd_needs_quotes	function
(	O
&	O
qtrans	pointer
->	O
s	struct
)	O
;	O
if	O
(	O
fquote	int
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'Q'	O
,	O
""	pointer
,	O
""	pointer
,	O
TRUE	O
)	O
;	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'U'	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qdaemon	pointer
->	O
zlocalname	pointer
,	O
fquote	int
)	O
;	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'F'	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'I'	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'N'	O
)	O
!=	O
NULL	O
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'N'	O
,	O
""	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'Z'	O
)	O
!=	O
NULL	O
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'Z'	O
,	O
""	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'R'	O
)	O
!=	O
NULL	O
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'R'	O
,	O
qtrans	pointer
->	O
s	struct
.	O
znotify	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'e'	O
)	O
!=	O
NULL	O
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'e'	O
,	O
""	pointer
,	O
""	pointer
,	O
fquote	int
)	O
;	O
if	O
(	O
!	O
fquote	int
)	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'C'	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
,	O
""	pointer
,	O
FALSE	O
)	O
;	O
else	O
{	O
char	O
*	O
zquoted	pointer
;	O
zquoted	pointer
=	O
zquote_cmd_string	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
,	O
TRUE	O
)	O
;	O
usadd_exec_line	function
(	O
&	O
z	pointer
,	O
&	O
calc	long
,	O
&	O
clen	long
,	O
'C'	O
,	O
zquoted	pointer
,	O
""	pointer
,	O
FALSE	O
)	O
;	O
ubuffree	function
(	O
zquoted	pointer
)	O
;	O
}	O
qinfo	pointer
->	O
zexec	pointer
=	O
z	pointer
;	O
qinfo	pointer
->	O
cbytes	long
=	O
clen	long
;	O
zxqtfile	pointer
=	O
zsysdep_data_file_name	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
qdaemon	pointer
->	O
zlocalname	pointer
,	O
BDEFAULT_UUX_GRADE	O
,	O
TRUE	O
,	O
abtname	array
,	O
(	O
char	O
*	O
)	O
NULL	O
,	O
abxname	array
)	O
;	O
if	O
(	O
zxqtfile	pointer
==	O
NULL	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	function
(	O
zxqtfile	pointer
)	O
;	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
;	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
=	O
zbufcpy	function
(	O
abtname	array
)	O
;	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
=	O
zbufcpy	function
(	O
abxname	array
)	O
;	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
)	O
;	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
=	O
zbufcpy	function
(	O
"C"	pointer
)	O
;	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
)	O
;	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
=	O
zbufcpy	function
(	O
abtname	array
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
flocal_send_request	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
NULL	O
;	O
qtrans	pointer
->	O
ipos	long
=	O
0	int
;	O
qtrans	pointer
->	O
cbytes	long
=	O
0	int
;	O
qtrans	pointer
->	O
isecs	long
=	O
0	int
;	O
qtrans	pointer
->	O
imicros	long
=	O
0	int
;	O
qinfo	pointer
->	O
fsent	int
=	O
FALSE	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
zconfirm	pointer
)	O
;	O
qinfo	pointer
->	O
zconfirm	pointer
=	O
NULL	O
;	O
return	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
void	O
usadd_exec_line	function
(	O
pz	pointer
,	O
pcalc	pointer
,	O
pclen	pointer
,	O
bcmd	char
,	O
z1	pointer
,	O
z2	pointer
,	O
fquote	int
)	O
char	O
*	O
*	O
pz	pointer
;	O
size_t	long
*	O
pcalc	pointer
;	O
size_t	long
*	O
pclen	pointer
;	O
int	O
bcmd	char
;	O
const	O
char	O
*	O
z1	pointer
;	O
const	O
char	O
*	O
z2	pointer
;	O
boolean	int
fquote	int
;	O
{	O
char	O
*	O
z1q	pointer
;	O
char	O
*	O
z2q	pointer
;	O
size_t	long
c1	long
,	O
c2	long
;	O
char	O
*	O
znew	pointer
;	O
z1q	pointer
=	O
NULL	O
;	O
z2q	pointer
=	O
NULL	O
;	O
if	O
(	O
fquote	int
)	O
{	O
if	O
(	O
*	O
z1	pointer
!=	O
'\0'	O
)	O
{	O
z1q	pointer
=	O
zquote_cmd_string	function
(	O
z1	pointer
,	O
FALSE	O
)	O
;	O
z1	pointer
=	O
z1q	pointer
;	O
}	O
if	O
(	O
*	O
z2	pointer
!=	O
'\0'	O
)	O
{	O
z2q	pointer
=	O
zquote_cmd_string	function
(	O
z2	pointer
,	O
FALSE	O
)	O
;	O
z2	pointer
=	O
z2q	pointer
;	O
}	O
}	O
c1	long
=	O
strlen	function
(	O
z1	pointer
)	O
;	O
c2	long
=	O
strlen	function
(	O
z2	pointer
)	O
;	O
if	O
(	O
*	O
pclen	pointer
+	O
c1	long
+	O
c2	long
+	O
4	int
>=	O
*	O
pcalc	pointer
)	O
{	O
*	O
pcalc	pointer
+=	O
c1	long
+	O
c2	long
+	O
100	int
;	O
znew	pointer
=	O
zbufalc	function
(	O
*	O
pcalc	pointer
)	O
;	O
if	O
(	O
*	O
pclen	pointer
>	O
0	int
)	O
{	O
memcpy	function
(	O
znew	pointer
,	O
*	O
pz	pointer
,	O
*	O
pclen	pointer
)	O
;	O
ubuffree	function
(	O
*	O
pz	pointer
)	O
;	O
}	O
*	O
pz	pointer
=	O
znew	pointer
;	O
}	O
znew	pointer
=	O
*	O
pz	pointer
+	O
*	O
pclen	pointer
;	O
*	O
znew	pointer
++	O
=	O
bcmd	char
;	O
if	O
(	O
*	O
z1	pointer
!=	O
'\0'	O
)	O
{	O
*	O
znew	pointer
++	O
=	O
' '	O
;	O
memcpy	function
(	O
znew	pointer
,	O
z1	pointer
,	O
c1	long
)	O
;	O
znew	pointer
+=	O
c1	long
;	O
if	O
(	O
*	O
z2	pointer
!=	O
'\0'	O
)	O
{	O
*	O
znew	pointer
++	O
=	O
' '	O
;	O
memcpy	function
(	O
znew	pointer
,	O
z2	pointer
,	O
c2	long
)	O
;	O
znew	pointer
+=	O
c2	long
;	O
}	O
}	O
if	O
(	O
fquote	int
)	O
{	O
ubuffree	function
(	O
z1q	pointer
)	O
;	O
ubuffree	function
(	O
z2q	pointer
)	O
;	O
}	O
*	O
znew	pointer
++	O
=	O
'\n'	O
;	O
*	O
pclen	pointer
=	O
znew	pointer
-	O
*	O
pz	pointer
;	O
}	O
static	O
boolean	int
fsend_exec_file	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
ssendinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
ssendinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
;	O
size_t	long
csend	long
;	O
zdata	pointer
=	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pzgetspace	pointer
)	O
(	O
qdaemon	pointer
,	O
&	O
cdata	long
)	O
;	O
if	O
(	O
zdata	pointer
==	O
NULL	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
csend	long
=	O
qinfo	pointer
->	O
cbytes	long
-	O
qtrans	pointer
->	O
ipos	long
;	O
if	O
(	O
csend	long
>	O
cdata	long
)	O
csend	long
=	O
cdata	long
;	O
memcpy	function
(	O
zdata	pointer
,	O
qinfo	pointer
->	O
zexec	pointer
+	O
qtrans	pointer
->	O
ipos	long
,	O
csend	long
)	O
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsenddata	pointer
)	O
(	O
qdaemon	pointer
,	O
zdata	pointer
,	O
csend	long
,	O
qtrans	pointer
->	O
ilocal	int
,	O
qtrans	pointer
->	O
iremote	int
,	O
qtrans	pointer
->	O
ipos	long
)	O
)	O
{	O
usfree_send	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
qtrans	pointer
->	O
cbytes	long
+=	O
csend	long
;	O
qtrans	pointer
->	O
ipos	long
+=	O
csend	long
;	O
if	O
(	O
csend	long
==	O
0	int
)	O
return	O
fsend_file_end	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
