const	O
char	O
prott_rcsid	array
[	O
]	O
=	O
"$Id: prott.c,v 1.32 2002/03/05 19:10:41 ian Rel $"	int
;	O
static	O
char	O
*	O
zTbuf	pointer
;	O
static	O
boolean	int
fTfile	int
;	O
static	O
int	O
cTtimeout	int
=	O
120	int
;	O
struct	O
uuconf_cmdtab	struct
asTproto_params	pointer
[	O
]	O
=	O
{	O
{	O
"timeout"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	pointer
)	O
&	O
cTtimeout	pointer
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
boolean	int
ftprocess_data	O
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
boolean	int
*	O
pfexit	pointer
,	O
size_t	long
*	O
pcneed	pointer
)	O
)	O
;	O
boolean	int
ftstart	O
(	O
qdaemon	pointer
,	O
pzlog	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
*	O
pzlog	pointer
;	O
{	O
*	O
pzlog	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_set	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
PARITYSETTING_NONE	int
,	O
STRIPSETTING_EIGHTBITS	int
,	O
XONXOFF_OFF	pointer
)	O
)	O
return	O
FALSE	O
;	O
zTbuf	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
CTBUFSIZE	pointer
+	O
CTFRAMELEN	int
)	O
;	O
zTbuf	array
[	O
0	int
]	O
=	O
0	int
;	O
zTbuf	array
[	O
1	int
]	O
=	O
0	int
;	O
fTfile	int
=	O
FALSE	O
;	O
usysdep_sleep	function
(	O
2	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
ftshutdown	O
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zTbuf	pointer
)	O
;	O
zTbuf	pointer
=	O
NULL	O
;	O
cTtimeout	int
=	O
120	int
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
ftsendcmd	O
(	O
qdaemon	pointer
,	O
z	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
z	pointer
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
{	O
size_t	long
clen	long
,	O
csend	long
;	O
char	O
*	O
zalc	pointer
;	O
boolean	int
fret	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	pointer
,	O
"ftsendcmd: Sending command \"%s\""	int
,	O
z	pointer
)	O
;	O
clen	long
=	O
strlen	function
(	O
z	pointer
)	O
;	O
csend	long
=	O
(	O
(	O
clen	long
/	O
CTPACKSIZE	pointer
)	O
+	O
1	int
)	O
*	O
CTPACKSIZE	pointer
;	O
zalc	pointer
=	O
zbufalc	function
(	O
csend	long
)	O
;	O
memcpy	function
(	O
zalc	pointer
,	O
z	pointer
,	O
clen	long
)	O
;	O
if	O
(	O
csend	long
>	O
clen	long
)	O
bzero	function
(	O
zalc	pointer
+	O
clen	long
,	O
csend	long
-	O
clen	long
)	O
;	O
fret	int
=	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zalc	pointer
,	O
csend	long
,	O
TRUE	O
)	O
;	O
ubuffree	function
(	O
zalc	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
char	O
*	O
ztgetspace	function
(	O
qdaemon	pointer
,	O
pclen	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	long
*	O
pclen	pointer
;	O
{	O
*	O
pclen	pointer
=	O
CTBUFSIZE	pointer
;	O
return	O
zTbuf	pointer
+	O
CTFRAMELEN	int
;	O
}	O
boolean	int
ftsenddata	O
(	O
qdaemon	pointer
,	O
zdata	int
,	O
cdata	int
,	O
ilocal	int
,	O
iremote	pointer
,	O
ipos	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
long	O
ipos	long
ATTRIBUTE_UNUSED	O
;	O
{	O
zdata	pointer
[	O
-	O
2	int
]	O
=	O
(	O
char	O
)	O
(	O
(	O
cdata	int
>>	O
8	int
)	O
&	O
0xff	int
)	O
;	O
zdata	pointer
[	O
-	O
1	int
]	O
=	O
(	O
char	O
)	O
(	O
cdata	int
&	O
0xff	int
)	O
;	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zdata	int
-	O
CTFRAMELEN	int
,	O
cdata	int
+	O
CTFRAMELEN	int
,	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
ftprocess_data	O
(	O
qdaemon	pointer
,	O
pfexit	pointer
,	O
pcneed	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
boolean	int
*	O
pfexit	pointer
;	O
size_t	long
*	O
pcneed	pointer
;	O
{	O
int	O
cinbuf	int
,	O
cfirst	pointer
,	O
clen	long
;	O
*	O
pfexit	pointer
=	O
FALSE	O
;	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
!	O
fTfile	pointer
)	O
{	O
while	O
(	O
cinbuf	int
>=	O
CTPACKSIZE	int
)	O
{	O
cfirst	pointer
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	int
>	O
CTPACKSIZE	int
)	O
cfirst	int
=	O
CTPACKSIZE	pointer
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	pointer
,	O
"ftprocess_data: Got %d command bytes"	int
,	O
cfirst	int
)	O
;	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
cfirst	int
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
CTPACKSIZE	int
-	O
cfirst	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	int
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
CTPACKSIZE	int
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
cinbuf	int
-=	O
CTPACKSIZE	int
;	O
}	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
CTPACKSIZE	pointer
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
while	O
(	O
cinbuf	int
>=	O
CTFRAMELEN	int
)	O
{	O
clen	long
=	O
(	O
(	O
(	O
(	O
(	O
(	O
(	O
abPrecbuf	array
[	O
iPrecstart	int
]	O
&	O
0xff	int
)	O
<<	O
8	int
)	O
+	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
]	O
&	O
0xff	int
)	O
)	O
<<	O
8	int
)	O
+	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
2	int
)	O
%	O
CRECBUFLEN	O
]	O
&	O
0xff	int
)	O
)	O
<<	O
8	int
)	O
+	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
3	int
)	O
%	O
CRECBUFLEN	O
]	O
&	O
0xff	int
)	O
)	O
;	O
if	O
(	O
cinbuf	int
<	O
clen	long
+	O
CTFRAMELEN	int
)	O
{	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
clen	long
+	O
CTFRAMELEN	int
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
CTFRAMELEN	int
)	O
%	O
CRECBUFLEN	O
;	O
cfirst	int
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	int
>	O
clen	long
)	O
cfirst	int
=	O
clen	long
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	pointer
,	O
"ftprocess_data: Got %d data bytes"	int
,	O
clen	long
)	O
;	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
cfirst	int
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
(	O
clen	long
-	O
cfirst	int
)	O
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	int
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
clen	long
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
cinbuf	int
-=	O
clen	long
+	O
CTFRAMELEN	int
;	O
}	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
CTFRAMELEN	pointer
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
ftwait	O
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
while	O
(	O
TRUE	O
)	O
{	O
boolean	int
fexit	int
;	O
size_t	long
cneed	long
,	O
crec	long
;	O
if	O
(	O
!	O
ftprocess_data	function
(	O
qdaemon	pointer
,	O
&	O
fexit	int
,	O
&	O
cneed	pointer
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fexit	pointer
)	O
return	O
TRUE	O
;	O
if	O
(	O
!	O
freceive_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
cneed	long
,	O
&	O
crec	long
,	O
cTtimeout	int
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
crec	long
==	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Timed out waiting for data"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
boolean	int
ftfile	O
(	O
qdaemon	pointer
,	O
qtrans	int
,	O
fstart	int
,	O
fsend	int
,	O
cbytes	pointer
,	O
pfhandled	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
ATTRIBUTE_UNUSED	O
;	O
boolean	int
fstart	int
;	O
boolean	int
fsend	int
;	O
long	O
cbytes	long
ATTRIBUTE_UNUSED	O
;	O
boolean	int
*	O
pfhandled	pointer
;	O
{	O
*	O
pfhandled	pointer
=	O
FALSE	O
;	O
if	O
(	O
!	O
fsend	pointer
)	O
fTfile	int
=	O
fstart	pointer
;	O
return	O
TRUE	O
;	O
}	O