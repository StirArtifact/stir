static	O
bool	bool
is_colored	bool
(	O
enum	O
indicator_no	enum
type	enum
)	O
;	O
static	O
void	O
restore_default_color	function
(	O
void	O
)	O
;	O
COLOR_EXT_TYPE	struct
*	O
_rl_color_ext_list	pointer
=	O
0	int
;	O
void	O
_rl_put_indicator	function
(	O
const	O
struct	O
bin_str	struct
*	O
ind	pointer
)	O
{	O
fwrite	function
(	O
ind	pointer
->	O
string	pointer
,	O
ind	pointer
->	O
len	long
,	O
1	int
,	O
rl_outstream	int
)	O
;	O
}	O
static	O
bool	bool
is_colored	bool
(	O
enum	O
indicator_no	enum
colored_filetype	int
)	O
{	O
size_t	long
len	long
=	O
_rl_color_indicator	array
[	O
colored_filetype	int
]	O
.	O
len	long
;	O
char	O
const	O
*	O
s	pointer
=	O
_rl_color_indicator	array
[	O
colored_filetype	int
]	O
.	O
string	pointer
;	O
return	O
!	O
(	O
len	long
==	O
0	int
||	O
(	O
len	long
==	O
1	int
&&	O
strncmp	function
(	O
s	pointer
,	O
"0"	pointer
,	O
1	int
)	O
==	O
0	int
)	O
||	O
(	O
len	long
==	O
2	int
&&	O
strncmp	function
(	O
s	pointer
,	O
"00"	int
,	O
2	int
)	O
==	O
0	int
)	O
)	O
;	O
}	O
static	O
void	O
restore_default_color	function
(	O
void	O
)	O
{	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_LEFT	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RIGHT	int
]	O
)	O
;	O
}	O
void	O
_rl_set_normal_color	function
(	O
void	O
)	O
{	O
if	O
(	O
is_colored	function
(	O
C_NORM	pointer
)	O
)	O
{	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_LEFT	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_NORM	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RIGHT	int
]	O
)	O
;	O
}	O
}	O
bool	bool
_rl_print_prefix_color	function
(	O
void	O
)	O
{	O
struct	O
bin_str	struct
*	O
s	pointer
;	O
s	pointer
=	O
&	O
_rl_color_indicator	pointer
[	O
C_PREFIX	int
]	O
;	O
if	O
(	O
s	pointer
->	O
string	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
is_colored	function
(	O
C_NORM	pointer
)	O
)	O
restore_default_color	function
(	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_LEFT	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
s	pointer
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RIGHT	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
else	O
return	O
1	int
;	O
}	O
bool	bool
_rl_print_color_indicator	function
(	O
const	O
char	O
*	O
f	pointer
)	O
{	O
enum	O
indicator_no	enum
colored_filetype	int
;	O
COLOR_EXT_TYPE	int
*	O
ext	pointer
;	O
size_t	long
len	long
;	O
const	O
char	O
*	O
name	pointer
;	O
char	O
*	O
filename	pointer
;	O
struct	O
stat	struct
astat	struct
,	O
linkstat	int
;	O
mode_t	int
mode	O
;	O
int	O
linkok	int
;	O
int	O
stat_ok	int
;	O
name	pointer
=	O
f	pointer
;	O
filename	pointer
=	O
0	int
;	O
if	O
(	O
rl_filename_stat_hook	pointer
)	O
{	O
filename	pointer
=	O
savestring	O
(	O
f	pointer
)	O
;	O
(	O
*	O
rl_filename_stat_hook	pointer
)	O
(	O
&	O
filename	pointer
)	O
;	O
name	pointer
=	O
filename	pointer
;	O
}	O
stat_ok	pointer
=	O
lstat	function
(	O
name	pointer
,	O
&	O
astat	struct
)	O
;	O
if	O
(	O
stat_ok	int
==	O
0	int
)	O
{	O
mode	enum
=	O
astat	struct
.	O
st_mode	int
;	O
if	O
(	O
S_ISLNK	O
(	O
mode	O
)	O
)	O
{	O
linkok	int
=	O
stat	struct
(	O
name	pointer
,	O
&	O
linkstat	pointer
)	O
==	O
0	int
;	O
if	O
(	O
linkok	pointer
&&	O
strncmp	function
(	O
_rl_color_indicator	pointer
[	O
C_LINK	int
]	O
.	O
string	pointer
,	O
"target"	int
,	O
6	int
)	O
==	O
0	int
)	O
mode	enum
=	O
linkstat	struct
.	O
st_mode	int
;	O
}	O
else	O
linkok	int
=	O
1	int
;	O
}	O
else	O
linkok	int
=	O
-	O
1	int
;	O
if	O
(	O
linkok	pointer
==	O
-	O
1	int
&&	O
_rl_color_indicator	array
[	O
C_MISSING	int
]	O
.	O
string	pointer
!=	O
NULL	O
)	O
colored_filetype	pointer
=	O
C_MISSING	int
;	O
else	O
if	O
(	O
linkok	int
==	O
0	int
&&	O
S_ISLNK	O
(	O
mode	O
)	O
&&	O
_rl_color_indicator	array
[	O
C_ORPHAN	int
]	O
.	O
string	pointer
!=	O
NULL	O
)	O
colored_filetype	pointer
=	O
C_ORPHAN	int
;	O
else	O
if	O
(	O
stat_ok	int
!=	O
0	int
)	O
{	O
static	O
enum	O
indicator_no	double
filetype_indicator	array
[	O
]	O
=	O
FILETYPE_INDICATORS	int
;	O
colored_filetype	int
=	O
filetype_indicator	array
[	O
normal	int
]	O
;	O
}	O
else	O
{	O
if	O
(	O
S_ISREG	O
(	O
mode	O
)	O
)	O
{	O
colored_filetype	pointer
=	O
C_FILE	int
;	O
if	O
(	O
(	O
mode	O
&	O
S_ISUID	O
)	O
!=	O
0	int
&&	O
is_colored	function
(	O
C_SETUID	pointer
)	O
)	O
colored_filetype	int
=	O
C_SETUID	int
;	O
else	O
if	O
(	O
(	O
mode	O
&	O
S_ISGID	O
)	O
!=	O
0	int
&&	O
is_colored	function
(	O
C_SETGID	pointer
)	O
)	O
colored_filetype	int
=	O
C_SETGID	int
;	O
else	O
if	O
(	O
is_colored	function
(	O
C_CAP	pointer
)	O
&&	O
0	int
)	O
colored_filetype	int
=	O
C_CAP	int
;	O
else	O
if	O
(	O
(	O
mode	O
&	O
S_IXUGO	int
)	O
!=	O
0	int
&&	O
is_colored	function
(	O
C_EXEC	pointer
)	O
)	O
colored_filetype	int
=	O
C_EXEC	int
;	O
else	O
if	O
(	O
(	O
1	int
<	O
astat	struct
.	O
st_nlink	long
)	O
&&	O
is_colored	function
(	O
C_MULTIHARDLINK	pointer
)	O
)	O
colored_filetype	int
=	O
C_MULTIHARDLINK	int
;	O
}	O
else	O
if	O
(	O
S_ISDIR	O
(	O
mode	O
)	O
)	O
{	O
colored_filetype	int
=	O
C_DIR	int
;	O
if	O
(	O
(	O
mode	O
&	O
S_ISVTX	O
)	O
&&	O
(	O
mode	O
&	O
S_IWOTH	O
)	O
&&	O
is_colored	function
(	O
C_STICKY_OTHER_WRITABLE	pointer
)	O
)	O
colored_filetype	int
=	O
C_STICKY_OTHER_WRITABLE	int
;	O
else	O
if	O
(	O
(	O
mode	O
&	O
S_IWOTH	O
)	O
!=	O
0	int
&&	O
is_colored	function
(	O
C_OTHER_WRITABLE	pointer
)	O
)	O
colored_filetype	int
=	O
C_OTHER_WRITABLE	int
;	O
else	O
if	O
(	O
(	O
mode	O
&	O
S_ISVTX	O
)	O
!=	O
0	int
&&	O
is_colored	function
(	O
C_STICKY	pointer
)	O
)	O
colored_filetype	int
=	O
C_STICKY	int
;	O
}	O
else	O
if	O
(	O
S_ISLNK	O
(	O
mode	O
)	O
)	O
colored_filetype	int
=	O
C_LINK	int
;	O
else	O
if	O
(	O
S_ISFIFO	O
(	O
mode	O
)	O
)	O
colored_filetype	int
=	O
C_FIFO	int
;	O
else	O
if	O
(	O
S_ISSOCK	O
(	O
mode	O
)	O
)	O
colored_filetype	int
=	O
C_SOCK	int
;	O
else	O
if	O
(	O
S_ISBLK	O
(	O
mode	O
)	O
)	O
colored_filetype	int
=	O
C_BLK	int
;	O
else	O
if	O
(	O
S_ISCHR	O
(	O
mode	O
)	O
)	O
colored_filetype	int
=	O
C_CHR	int
;	O
else	O
{	O
colored_filetype	pointer
=	O
C_ORPHAN	int
;	O
}	O
}	O
ext	struct
=	O
NULL	O
;	O
if	O
(	O
colored_filetype	int
==	O
C_FILE	int
)	O
{	O
len	int
=	O
strlen	function
(	O
name	pointer
)	O
;	O
name	pointer
+=	O
len	long
;	O
for	O
(	O
ext	struct
=	O
_rl_color_ext_list	int
;	O
ext	struct
!=	O
NULL	O
;	O
ext	struct
=	O
ext	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
ext	struct
->	O
ext	struct
.	O
len	long
<=	O
len	int
&&	O
strncmp	function
(	O
name	pointer
-	O
ext	pointer
->	O
ext	struct
.	O
len	long
,	O
ext	pointer
->	O
ext	struct
.	O
string	pointer
,	O
ext	pointer
->	O
ext	struct
.	O
len	long
)	O
==	O
0	int
)	O
break	O
;	O
}	O
}	O
free	function
(	O
filename	pointer
)	O
;	O
{	O
const	O
struct	O
bin_str	struct
*	O
const	O
s	pointer
=	O
ext	O
?	O
&	O
(	O
ext	struct
->	O
seq	double
)	O
:	O
&	O
_rl_color_indicator	pointer
[	O
colored_filetype	int
]	O
;	O
if	O
(	O
s	pointer
->	O
string	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
is_colored	function
(	O
C_NORM	pointer
)	O
)	O
restore_default_color	function
(	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_LEFT	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
s	pointer
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RIGHT	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
else	O
return	O
1	int
;	O
}	O
}	O
void	O
_rl_prep_non_filename_text	function
(	O
void	O
)	O
{	O
if	O
(	O
_rl_color_indicator	array
[	O
C_END	int
]	O
.	O
string	pointer
!=	O
NULL	O
)	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_END	int
]	O
)	O
;	O
else	O
{	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_LEFT	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RESET	int
]	O
)	O
;	O
_rl_put_indicator	function
(	O
&	O
_rl_color_indicator	pointer
[	O
C_RIGHT	int
]	O
)	O
;	O
}	O
}	O