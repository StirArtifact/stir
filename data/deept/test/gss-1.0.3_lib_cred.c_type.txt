OM_uint32	struct
gss_acquire_cred	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_name_t	pointer
desired_name	pointer
,	O
OM_uint32	int
time_req	int
,	O
const	O
gss_OID_set	pointer
desired_mechs	pointer
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
gss_cred_id_t	pointer
*	O
output_cred_handle	pointer
,	O
gss_OID_set	pointer
*	O
actual_mechs	pointer
,	O
OM_uint32	int
*	O
time_rec	pointer
)	O
{	O
_gss_mech_api_t	pointer
mech	pointer
=	O
NULL	O
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
!	O
output_cred_handle	pointer
)	O
return	O
GSS_S_NO_CRED	O
|	O
GSS_S_CALL_INACCESSIBLE_WRITE	O
;	O
if	O
(	O
desired_mechs	pointer
!=	O
GSS_C_NO_OID_SET	O
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
mech	pointer
==	O
NULL	O
&&	O
i	long
<	O
desired_mechs	pointer
->	O
count	long
;	O
i	long
++	O
)	O
mech	pointer
=	O
_gss_find_mech	function
(	O
(	O
&	O
desired_mechs	pointer
->	O
elements	pointer
)	O
[	O
i	long
]	O
)	O
;	O
}	O
else	O
mech	pointer
=	O
_gss_find_mech	function
(	O
GSS_C_NO_OID	O
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
*	O
output_cred_handle	pointer
=	O
calloc	function
(	O
sizeof	O
(	O
*	O
*	O
output_cred_handle	pointer
)	O
,	O
1	int
)	O
;	O
if	O
(	O
!	O
*	O
output_cred_handle	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
(	O
*	O
output_cred_handle	pointer
)	O
->	O
mech	pointer
=	O
mech	pointer
->	O
mech	pointer
;	O
maj_stat	int
=	O
mech	pointer
->	O
acquire_cred	function
(	O
minor_status	pointer
,	O
desired_name	pointer
,	O
time_req	int
,	O
desired_mechs	pointer
,	O
cred_usage	int
,	O
output_cred_handle	pointer
,	O
actual_mechs	pointer
,	O
time_rec	pointer
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
{	O
free	function
(	O
*	O
output_cred_handle	pointer
)	O
;	O
*	O
output_cred_handle	pointer
=	O
GSS_C_NO_CREDENTIAL	O
;	O
return	O
maj_stat	int
;	O
}	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
OM_uint32	int
gss_add_cred	O
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
input_cred_handle	pointer
,	O
const	O
gss_name_t	pointer
desired_name	pointer
,	O
const	O
gss_OID	pointer
desired_mech	pointer
,	O
gss_cred_usage_t	int
cred_usage	int
,	O
OM_uint32	int
initiator_time_req	int
,	O
OM_uint32	int
acceptor_time_req	int
,	O
gss_cred_id_t	pointer
*	O
output_cred_handle	pointer
,	O
gss_OID_set	pointer
*	O
actual_mechs	pointer
,	O
OM_uint32	int
*	O
initiator_time_rec	pointer
,	O
OM_uint32	int
*	O
acceptor_time_rec	pointer
)	O
{	O
return	O
GSS_S_UNAVAILABLE	O
;	O
}	O
OM_uint32	int
gss_inquire_cred	O
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
cred_handle	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
,	O
OM_uint32	int
*	O
lifetime	pointer
,	O
gss_cred_usage_t	int
*	O
cred_usage	pointer
,	O
gss_OID_set	pointer
*	O
mechanisms	pointer
)	O
{	O
gss_cred_id_t	pointer
credh	pointer
=	O
cred_handle	pointer
;	O
_gss_mech_api_t	pointer
mech	pointer
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
maj_stat	int
=	O
gss_acquire_cred	function
(	O
minor_status	pointer
,	O
GSS_C_NO_NAME	O
,	O
GSS_C_INDEFINITE	int
,	O
GSS_C_NO_OID_SET	O
,	O
GSS_C_INITIATE	pointer
,	O
&	O
credh	pointer
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
mech	pointer
=	O
_gss_find_mech	function
(	O
credh	pointer
->	O
mech	pointer
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
maj_stat	int
=	O
mech	pointer
->	O
inquire_cred	function
(	O
minor_status	pointer
,	O
credh	pointer
,	O
name	pointer
,	O
lifetime	pointer
,	O
cred_usage	int
,	O
mechanisms	pointer
)	O
;	O
if	O
(	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
gss_release_cred	function
(	O
NULL	O
,	O
&	O
credh	struct
)	O
;	O
return	O
maj_stat	int
;	O
}	O
OM_uint32	int
gss_inquire_cred_by_mech	O
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
const	O
gss_cred_id_t	pointer
cred_handle	pointer
,	O
const	O
gss_OID	pointer
mech_type	pointer
,	O
gss_name_t	pointer
*	O
name	pointer
,	O
OM_uint32	int
*	O
initiator_lifetime	pointer
,	O
OM_uint32	int
*	O
acceptor_lifetime	pointer
,	O
gss_cred_usage_t	int
*	O
cred_usage	int
)	O
{	O
_gss_mech_api_t	pointer
mech	pointer
;	O
gss_cred_id_t	pointer
credh	pointer
=	O
cred_handle	pointer
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
mech_type	pointer
==	O
GSS_C_NO_OID	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
mech	pointer
=	O
_gss_find_mech	function
(	O
mech_type	pointer
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_BAD_MECH	O
;	O
}	O
if	O
(	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
maj_stat	int
=	O
gss_acquire_cred	function
(	O
minor_status	pointer
,	O
GSS_C_NO_NAME	O
,	O
GSS_C_INDEFINITE	int
,	O
GSS_C_NO_OID_SET	O
,	O
GSS_C_INITIATE	pointer
,	O
&	O
credh	pointer
,	O
NULL	O
,	O
NULL	O
)	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
}	O
maj_stat	int
=	O
mech	pointer
->	O
inquire_cred_by_mech	function
(	O
minor_status	pointer
,	O
credh	pointer
,	O
mech_type	pointer
,	O
name	pointer
,	O
initiator_lifetime	pointer
,	O
acceptor_lifetime	pointer
,	O
cred_usage	int
)	O
;	O
if	O
(	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
gss_release_cred	function
(	O
NULL	O
,	O
&	O
credh	struct
)	O
;	O
return	O
maj_stat	int
;	O
}	O
OM_uint32	int
gss_release_cred	O
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
gss_cred_id_t	pointer
*	O
cred_handle	pointer
)	O
{	O
_gss_mech_api_t	pointer
mech	pointer
;	O
OM_uint32	int
maj_stat	int
;	O
if	O
(	O
!	O
cred_handle	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_NO_CRED	O
|	O
GSS_S_CALL_INACCESSIBLE_READ	O
;	O
}	O
if	O
(	O
*	O
cred_handle	pointer
==	O
GSS_C_NO_CREDENTIAL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
mech	pointer
=	O
_gss_find_mech	function
(	O
(	O
*	O
cred_handle	pointer
)	O
->	O
mech	pointer
)	O
;	O
if	O
(	O
mech	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
return	O
GSS_S_DEFECTIVE_CREDENTIAL	O
;	O
}	O
maj_stat	int
=	O
mech	pointer
->	O
release_cred	function
(	O
minor_status	pointer
,	O
cred_handle	pointer
)	O
;	O
free	function
(	O
*	O
cred_handle	pointer
)	O
;	O
*	O
cred_handle	pointer
=	O
GSS_C_NO_CREDENTIAL	O
;	O
if	O
(	O
GSS_ERROR	O
(	O
maj_stat	int
)	O
)	O
return	O
maj_stat	int
;	O
return	O
GSS_S_COMPLETE	int
;	O
}	O