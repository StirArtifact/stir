int	O
swlib_rpmvercmp	function
(	O
const	O
char	O
*	O
a	pointer
,	O
const	O
char	O
*	O
b	pointer
)	O
{	O
char	O
oldch1	int
,	O
oldch2	int
;	O
char	O
*	O
str1	pointer
,	O
*	O
str2	pointer
;	O
char	O
*	O
one	int
,	O
*	O
two	pointer
;	O
int	O
rc	int
;	O
int	O
isnum	int
;	O
if	O
(	O
!	O
strcmp	function
(	O
a	pointer
,	O
b	pointer
)	O
)	O
return	O
0	int
;	O
str1	pointer
=	O
alloca	function
(	O
strlen	function
(	O
a	pointer
)	O
+	O
1	int
)	O
;	O
str2	pointer
=	O
alloca	function
(	O
strlen	function
(	O
b	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
str1	pointer
,	O
a	double
)	O
;	O
strcpy	function
(	O
str2	pointer
,	O
b	pointer
)	O
;	O
one	int
=	O
str1	pointer
;	O
two	int
=	O
str2	pointer
;	O
while	O
(	O
*	O
one	int
&&	O
*	O
two	pointer
)	O
{	O
while	O
(	O
*	O
one	pointer
&&	O
!	O
xisalnum	function
(	O
*	O
one	pointer
)	O
)	O
one	int
++	O
;	O
while	O
(	O
*	O
two	pointer
&&	O
!	O
xisalnum	function
(	O
*	O
two	pointer
)	O
)	O
two	int
++	O
;	O
str1	pointer
=	O
one	int
;	O
str2	pointer
=	O
two	int
;	O
if	O
(	O
xisdigit	function
(	O
*	O
str1	pointer
)	O
)	O
{	O
while	O
(	O
*	O
str1	pointer
&&	O
xisdigit	function
(	O
*	O
str1	pointer
)	O
)	O
str1	pointer
++	O
;	O
while	O
(	O
*	O
str2	pointer
&&	O
xisdigit	function
(	O
*	O
str2	pointer
)	O
)	O
str2	pointer
++	O
;	O
isnum	int
=	O
1	int
;	O
}	O
else	O
{	O
while	O
(	O
*	O
str1	pointer
&&	O
xisalpha	function
(	O
*	O
str1	pointer
)	O
)	O
str1	pointer
++	O
;	O
while	O
(	O
*	O
str2	pointer
&&	O
xisalpha	function
(	O
*	O
str2	pointer
)	O
)	O
str2	pointer
++	O
;	O
isnum	int
=	O
0	int
;	O
}	O
oldch1	int
=	O
*	O
str1	pointer
;	O
*	O
str1	pointer
=	O
'\0'	O
;	O
oldch2	int
=	O
*	O
str2	pointer
;	O
*	O
str2	pointer
=	O
'\0'	O
;	O
if	O
(	O
one	int
==	O
str1	pointer
)	O
return	O
-	O
1	int
;	O
if	O
(	O
two	int
==	O
str2	pointer
)	O
return	O
(	O
isnum	int
?	O
1	int
:	O
-	O
1	int
)	O
;	O
if	O
(	O
isnum	pointer
)	O
{	O
while	O
(	O
*	O
one	pointer
==	O
'0'	O
)	O
one	int
++	O
;	O
while	O
(	O
*	O
two	pointer
==	O
'0'	O
)	O
two	int
++	O
;	O
if	O
(	O
strlen	function
(	O
one	int
)	O
>	O
strlen	function
(	O
two	pointer
)	O
)	O
return	O
1	int
;	O
if	O
(	O
strlen	function
(	O
two	pointer
)	O
>	O
strlen	function
(	O
one	int
)	O
)	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
strcmp	function
(	O
one	int
,	O
two	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
str1	pointer
=	O
oldch1	int
;	O
one	int
=	O
str1	struct
;	O
*	O
str2	pointer
=	O
oldch2	int
;	O
two	int
=	O
str2	pointer
;	O
}	O
if	O
(	O
(	O
!	O
*	O
one	pointer
)	O
&&	O
(	O
!	O
*	O
two	pointer
)	O
)	O
return	O
0	int
;	O
if	O
(	O
!	O
*	O
one	pointer
)	O
return	O
-	O
1	int
;	O
else	O
return	O
1	int
;	O
}	O