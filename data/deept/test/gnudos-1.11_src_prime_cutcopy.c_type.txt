int	O
checkCutOrCopyDir	function
(	O
int	O
i	int
)	O
{	O
if	O
(	O
numCutDirs	int
==	O
0	int
&&	O
numCopyDirs	int
==	O
0	int
)	O
return	O
0	int
;	O
int	O
j	int
;	O
char	O
str	pointer
[	O
dirs	pointer
[	O
i	int
]	O
->	O
namelen	long
+	O
cwdlen	int
+	O
2	int
]	O
;	O
strcpy	function
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
dirs	pointer
[	O
i	int
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCutDirs	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
cutDirs	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
1	int
;	O
}	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
numCopyDirs	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
copyDirs	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
2	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
checkCutOrCopyFile	function
(	O
int	O
i	int
)	O
{	O
if	O
(	O
numCutFiles	int
==	O
0	int
&&	O
numCopyFiles	int
==	O
0	int
)	O
return	O
0	int
;	O
int	O
j	int
;	O
char	O
str	pointer
[	O
files	array
[	O
i	int
]	O
->	O
namelen	long
+	O
cwdlen	int
+	O
2	int
]	O
;	O
strcpy	function
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
files	array
[	O
i	long
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	int
<	O
numCutFiles	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
cutFiles	pointer
[	O
j	long
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
1	int
;	O
}	O
for	O
(	O
j	long
=	O
0	int
;	O
j	int
<	O
numCopyFiles	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
copyFiles	pointer
[	O
j	int
]	O
,	O
str	pointer
)	O
==	O
0	int
)	O
return	O
2	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
__removeCutCopyItem	function
(	O
struct	O
dirstruct	struct
*	O
*	O
fileDirItems	pointer
,	O
int	O
fileDirIndex	int
,	O
char	O
*	O
*	O
cutCopyItems	pointer
,	O
int	O
*	O
cutCopyItemCount	pointer
)	O
{	O
if	O
(	O
*	O
cutCopyItemCount	pointer
==	O
0	int
)	O
return	O
;	O
int	O
j	int
,	O
k	int
;	O
char	O
*	O
str	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
namelen	long
+	O
cwdlen	int
+	O
2	int
)	O
;	O
if	O
(	O
!	O
str	pointer
)	O
{	O
msgBoxH	function
(	O
"Insufficient memory"	pointer
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	function
(	O
str	pointer
,	O
cwd	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
"/"	pointer
)	O
;	O
strcat	function
(	O
str	pointer
,	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
name	pointer
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	int
<	O
*	O
cutCopyItemCount	pointer
;	O
j	long
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
str	pointer
,	O
cutCopyItems	array
[	O
j	long
]	O
)	O
==	O
0	int
)	O
{	O
free	function
(	O
cutCopyItems	pointer
[	O
j	long
]	O
)	O
;	O
for	O
(	O
k	int
=	O
j	long
;	O
k	int
<	O
(	O
*	O
cutCopyItemCount	pointer
)	O
-	O
1	int
;	O
k	int
++	O
)	O
{	O
cutCopyItems	array
[	O
k	int
]	O
=	O
cutCopyItems	array
[	O
k	long
+	O
1	int
]	O
;	O
}	O
(	O
*	O
cutCopyItemCount	pointer
)	O
--	O
;	O
cutCopyItems	pointer
[	O
k	int
]	O
=	O
NULL	O
;	O
break	O
;	O
}	O
}	O
free	function
(	O
str	pointer
)	O
;	O
}	O
void	O
removeCutFile	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	function
(	O
files	array
,	O
i	int
,	O
cutFiles	int
,	O
&	O
numCutFiles	struct
)	O
;	O
}	O
void	O
removeCopyFile	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	function
(	O
files	array
,	O
i	int
,	O
copyFiles	int
,	O
&	O
numCopyFiles	struct
)	O
;	O
}	O
void	O
removeCutDir	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	function
(	O
dirs	pointer
,	O
i	int
,	O
cutDirs	int
,	O
&	O
numCutDirs	struct
)	O
;	O
}	O
void	O
removeCopyDir	function
(	O
int	O
i	int
)	O
{	O
__removeCutCopyItem	function
(	O
dirs	pointer
,	O
i	int
,	O
copyDirs	int
,	O
&	O
numCopyDirs	struct
)	O
;	O
}	O
void	O
__saveCutCopyItem	function
(	O
struct	O
dirstruct	struct
*	O
*	O
fileDirItems	pointer
,	O
int	O
fileDirIndex	int
,	O
char	O
*	O
*	O
cutCopyItems	pointer
,	O
int	O
*	O
cutCopyItemCount	pointer
)	O
{	O
int	O
k	int
=	O
*	O
cutCopyItemCount	pointer
;	O
if	O
(	O
k	int
>=	O
MAX_CUT_COPY	int
)	O
{	O
msgBoxH	function
(	O
"Unable to perform operation.\nClipboard is full."	pointer
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
if	O
(	O
cutCopyItems	array
[	O
k	int
]	O
)	O
free	function
(	O
cutCopyItems	pointer
[	O
k	int
]	O
)	O
;	O
char	O
*	O
s	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
namelen	long
+	O
cwdlen	int
+	O
2	int
)	O
;	O
if	O
(	O
!	O
s	pointer
)	O
{	O
msgBoxH	function
(	O
"Insufficient memory"	pointer
,	O
OK	int
,	O
ERROR	int
)	O
;	O
return	O
;	O
}	O
strcpy	function
(	O
s	pointer
,	O
cwd	pointer
)	O
;	O
strcat	function
(	O
s	pointer
,	O
"/"	pointer
)	O
;	O
strcat	function
(	O
s	pointer
,	O
fileDirItems	pointer
[	O
fileDirIndex	int
]	O
->	O
name	pointer
)	O
;	O
cutCopyItems	array
[	O
k	int
]	O
=	O
s	pointer
;	O
(	O
*	O
cutCopyItemCount	pointer
)	O
++	O
;	O
}	O
void	O
saveCutFile	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	function
(	O
files	array
,	O
i	int
,	O
cutFiles	int
,	O
&	O
numCutFiles	struct
)	O
;	O
}	O
void	O
saveCopyFile	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	function
(	O
files	array
,	O
i	int
,	O
copyFiles	int
,	O
&	O
numCopyFiles	struct
)	O
;	O
}	O
void	O
saveCutDir	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	function
(	O
dirs	pointer
,	O
i	int
,	O
cutDirs	int
,	O
&	O
numCutDirs	struct
)	O
;	O
}	O
void	O
saveCopyDir	function
(	O
int	O
i	int
)	O
{	O
__saveCutCopyItem	function
(	O
dirs	pointer
,	O
i	int
,	O
copyDirs	int
,	O
&	O
numCopyDirs	struct
)	O
;	O
}	O