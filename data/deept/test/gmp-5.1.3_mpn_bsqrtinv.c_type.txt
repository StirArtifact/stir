int	O
mpn_bsqrtinv	function
(	O
mp_ptr	pointer
rp	pointer
,	O
mp_srcptr	pointer
yp	pointer
,	O
mp_bitcnt_t	long
bnb	long
,	O
mp_ptr	pointer
tp	pointer
)	O
{	O
mp_ptr	pointer
tp2	pointer
,	O
tp3	pointer
;	O
mp_limb_t	long
k	long
;	O
mp_size_t	long
bn	long
,	O
order	long
[	O
GMP_LIMB_BITS	int
+	O
1	int
]	O
;	O
int	O
i	long
,	O
d	long
;	O
ASSERT	O
(	O
bnb	int
>	O
0	int
)	O
;	O
bn	long
=	O
1	int
+	O
bnb	int
/	O
GMP_LIMB_BITS	int
;	O
tp2	pointer
=	O
tp	pointer
+	O
bn	long
;	O
tp3	pointer
=	O
tp	pointer
+	O
2	int
*	O
bn	long
;	O
k	long
=	O
3	int
;	O
rp	pointer
[	O
0	int
]	O
=	O
1	int
;	O
if	O
(	O
bnb	int
==	O
1	int
)	O
{	O
if	O
(	O
(	O
yp	pointer
[	O
0	int
]	O
&	O
3	int
)	O
!=	O
1	int
)	O
return	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
(	O
yp	pointer
[	O
0	int
]	O
&	O
7	int
)	O
!=	O
1	int
)	O
return	O
0	int
;	O
d	long
=	O
0	int
;	O
for	O
(	O
;	O
bnb	int
!=	O
2	int
;	O
bnb	int
=	O
(	O
bnb	int
+	O
2	int
)	O
>>	O
1	int
)	O
order	pointer
[	O
d	long
++	O
]	O
=	O
bnb	int
;	O
for	O
(	O
i	long
=	O
d	long
-	O
1	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
{	O
bnb	int
=	O
order	pointer
[	O
i	long
]	O
;	O
bn	long
=	O
1	int
+	O
bnb	int
/	O
GMP_LIMB_BITS	int
;	O
mpn_mul_1	O
(	O
tp	pointer
,	O
rp	pointer
,	O
bn	long
,	O
k	long
)	O
;	O
mpn_powlo	O
(	O
tp2	pointer
,	O
rp	pointer
,	O
&	O
k	int
,	O
1	int
,	O
bn	long
,	O
tp3	pointer
)	O
;	O
mpn_mullo_n	O
(	O
rp	pointer
,	O
yp	pointer
,	O
tp2	pointer
,	O
bn	long
)	O
;	O
mpn_rsh1sub_n	O
(	O
rp	pointer
,	O
tp	pointer
,	O
rp	pointer
,	O
bn	long
)	O
;	O
}	O
}	O
return	O
1	int
;	O
}	O