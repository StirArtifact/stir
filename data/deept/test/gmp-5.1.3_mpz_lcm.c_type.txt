void	O
mpz_lcm	function
(	O
mpz_ptr	pointer
r	pointer
,	O
mpz_srcptr	pointer
u	pointer
,	O
mpz_srcptr	pointer
v	pointer
)	O
{	O
mpz_t	array
g	pointer
;	O
mp_size_t	long
usize	pointer
,	O
vsize	long
;	O
TMP_DECL	O
;	O
usize	pointer
=	O
SIZ	O
(	O
u	pointer
)	O
;	O
vsize	long
=	O
SIZ	O
(	O
v	pointer
)	O
;	O
if	O
(	O
usize	pointer
==	O
0	int
||	O
vsize	long
==	O
0	int
)	O
{	O
SIZ	O
(	O
r	pointer
)	O
=	O
0	int
;	O
return	O
;	O
}	O
usize	pointer
=	O
ABS	O
(	O
usize	pointer
)	O
;	O
vsize	long
=	O
ABS	O
(	O
vsize	long
)	O
;	O
if	O
(	O
vsize	long
==	O
1	int
||	O
usize	pointer
==	O
1	int
)	O
{	O
mp_limb_t	long
vl	long
,	O
gl	int
,	O
c	int
;	O
mp_srcptr	pointer
up	pointer
;	O
mp_ptr	pointer
rp	pointer
;	O
if	O
(	O
usize	pointer
==	O
1	int
)	O
{	O
usize	pointer
=	O
vsize	long
;	O
MPZ_SRCPTR_SWAP	O
(	O
u	pointer
,	O
v	long
)	O
;	O
}	O
MPZ_REALLOC	O
(	O
r	pointer
,	O
usize	pointer
+	O
1	int
)	O
;	O
up	pointer
=	O
PTR	O
(	O
u	pointer
)	O
;	O
vl	pointer
=	O
PTR	O
(	O
v	pointer
)	O
[	O
0	int
]	O
;	O
gl	pointer
=	O
mpn_gcd_1	O
(	O
up	pointer
,	O
usize	pointer
,	O
vl	long
)	O
;	O
vl	long
/=	O
gl	int
;	O
rp	pointer
=	O
PTR	O
(	O
r	pointer
)	O
;	O
c	int
=	O
mpn_mul_1	O
(	O
rp	pointer
,	O
up	pointer
,	O
usize	pointer
,	O
vl	long
)	O
;	O
rp	pointer
[	O
usize	pointer
]	O
=	O
c	int
;	O
usize	pointer
+=	O
(	O
c	int
!=	O
0	int
)	O
;	O
SIZ	O
(	O
r	pointer
)	O
=	O
usize	pointer
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
MPZ_TMP_INIT	O
(	O
g	pointer
,	O
usize	pointer
)	O
;	O
mpz_gcd	O
(	O
g	pointer
,	O
u	pointer
,	O
v	long
)	O
;	O
mpz_divexact	O
(	O
g	pointer
,	O
u	pointer
,	O
g	pointer
)	O
;	O
mpz_mul	O
(	O
r	int
,	O
g	pointer
,	O
v	long
)	O
;	O
SIZ	O
(	O
r	pointer
)	O
=	O
ABS	O
(	O
SIZ	O
(	O
r	pointer
)	O
)	O
;	O
TMP_FREE	O
;	O
}	O