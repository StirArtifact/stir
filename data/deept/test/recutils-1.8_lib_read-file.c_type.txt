char	O
*	O
fread_file	function
(	O
FILE	struct
*	O
stream	pointer
,	O
size_t	long
*	O
length	int
)	O
{	O
char	O
*	O
buf	pointer
=	O
NULL	O
;	O
size_t	long
alloc	long
=	O
BUFSIZ	int
;	O
{	O
struct	O
stat	struct
st	struct
;	O
if	O
(	O
fstat	function
(	O
fileno	function
(	O
stream	pointer
)	O
,	O
&	O
st	struct
)	O
>=	O
0	int
&&	O
S_ISREG	O
(	O
st	struct
.	O
st_mode	int
)	O
)	O
{	O
off_t	long
pos	long
=	O
ftello	function
(	O
stream	pointer
)	O
;	O
if	O
(	O
pos	long
>=	O
0	int
&&	O
pos	long
<	O
st	struct
.	O
st_size	long
)	O
{	O
off_t	long
alloc_off	long
=	O
st	struct
.	O
st_size	long
-	O
pos	long
;	O
if	O
(	O
SIZE_MAX	O
-	O
1	int
<	O
alloc_off	long
)	O
{	O
errno	O
=	O
ENOMEM	int
;	O
return	O
NULL	O
;	O
}	O
alloc	long
=	O
alloc_off	long
+	O
1	int
;	O
}	O
}	O
}	O
if	O
(	O
!	O
(	O
buf	pointer
=	O
malloc	function
(	O
alloc	pointer
)	O
)	O
)	O
return	O
NULL	O
;	O
{	O
size_t	long
size	long
=	O
0	int
;	O
int	O
save_errno	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
size_t	long
requested	long
=	O
alloc	long
-	O
size	long
;	O
size_t	long
count	long
=	O
fread	function
(	O
buf	pointer
+	O
size	long
,	O
1	int
,	O
requested	long
,	O
stream	pointer
)	O
;	O
size	long
+=	O
count	long
;	O
if	O
(	O
count	long
!=	O
requested	long
)	O
{	O
save_errno	int
=	O
errno	O
;	O
if	O
(	O
ferror	function
(	O
stream	pointer
)	O
)	O
break	O
;	O
if	O
(	O
size	long
<	O
alloc	long
-	O
1	int
)	O
{	O
char	O
*	O
smaller_buf	pointer
=	O
realloc	function
(	O
buf	pointer
,	O
size	long
+	O
1	int
)	O
;	O
if	O
(	O
smaller_buf	pointer
!=	O
NULL	O
)	O
buf	pointer
=	O
smaller_buf	pointer
;	O
}	O
buf	pointer
[	O
size	long
]	O
=	O
'\0'	O
;	O
*	O
length	pointer
=	O
size	long
;	O
return	O
buf	pointer
;	O
}	O
{	O
char	O
*	O
new_buf	pointer
;	O
if	O
(	O
alloc	long
==	O
SIZE_MAX	O
)	O
{	O
save_errno	int
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
if	O
(	O
alloc	long
<	O
SIZE_MAX	O
-	O
alloc	long
/	O
2	int
)	O
alloc	long
=	O
alloc	long
+	O
alloc	long
/	O
2	int
;	O
else	O
alloc	long
=	O
SIZE_MAX	O
;	O
if	O
(	O
!	O
(	O
new_buf	pointer
=	O
realloc	function
(	O
buf	pointer
,	O
alloc	long
)	O
)	O
)	O
{	O
save_errno	int
=	O
errno	O
;	O
break	O
;	O
}	O
buf	pointer
=	O
new_buf	pointer
;	O
}	O
}	O
free	function
(	O
buf	pointer
)	O
;	O
errno	O
=	O
save_errno	int
;	O
return	O
NULL	O
;	O
}	O
}	O
static	O
char	O
*	O
internal_read_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
*	O
length	long
,	O
const	O
char	O
*	O
mode	O
)	O
{	O
FILE	struct
*	O
stream	pointer
=	O
fopen	function
(	O
filename	pointer
,	O
mode	O
)	O
;	O
char	O
*	O
out	pointer
;	O
int	O
save_errno	int
;	O
if	O
(	O
!	O
stream	pointer
)	O
return	O
NULL	O
;	O
out	pointer
=	O
fread_file	function
(	O
stream	pointer
,	O
length	long
)	O
;	O
save_errno	int
=	O
errno	O
;	O
if	O
(	O
fclose	function
(	O
stream	pointer
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
out	pointer
)	O
{	O
save_errno	int
=	O
errno	O
;	O
free	function
(	O
out	pointer
)	O
;	O
}	O
errno	O
=	O
save_errno	int
;	O
return	O
NULL	O
;	O
}	O
return	O
out	struct
;	O
}	O
char	O
*	O
read_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
*	O
length	long
)	O
{	O
return	O
internal_read_file	function
(	O
filename	pointer
,	O
length	long
,	O
"r"	pointer
)	O
;	O
}	O
char	O
*	O
read_binary_file	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
size_t	long
*	O
length	long
)	O
{	O
return	O
internal_read_file	function
(	O
filename	pointer
,	O
length	long
,	O
"rb"	pointer
)	O
;	O
}	O