static	O
mp_limb_t	long
id_to_n	long
(	O
mp_limb_t	long
id	long
)	O
{	O
return	O
id	int
*	O
3	int
+	O
1	int
+	O
(	O
id	int
&	O
1	int
)	O
;	O
}	O
static	O
mp_limb_t	long
n_to_bit	O
(	O
mp_limb_t	long
n	long
)	O
{	O
return	O
(	O
(	O
n	long
-	O
5	int
)	O
|	O
1	int
)	O
/	O
3U	int
;	O
}	O
void	O
mpz_primorial_ui	function
(	O
mpz_ptr	pointer
x	pointer
,	O
unsigned	O
long	O
n	long
)	O
{	O
static	O
const	O
mp_limb_t	long
table	pointer
[	O
]	O
=	O
{	O
1	int
,	O
1	int
,	O
2	int
,	O
6	int
,	O
6	int
}	O
;	O
ASSERT	O
(	O
n	long
<=	O
GMP_NUMB_MAX	O
)	O
;	O
if	O
(	O
n	long
<	O
numberof	O
(	O
table	pointer
)	O
)	O
{	O
PTR	O
(	O
x	pointer
)	O
[	O
0	int
]	O
=	O
table	pointer
[	O
n	long
]	O
;	O
SIZ	O
(	O
x	double
)	O
=	O
1	int
;	O
}	O
else	O
{	O
mp_limb_t	long
*	O
sieve	pointer
,	O
*	O
factors	pointer
;	O
mp_size_t	long
size	long
;	O
mp_limb_t	long
prod	long
;	O
mp_limb_t	long
j	long
;	O
TMP_DECL	O
;	O
size	long
=	O
1	int
+	O
n	long
/	O
GMP_NUMB_BITS	O
+	O
n	long
/	O
(	O
2	int
*	O
GMP_NUMB_BITS	O
)	O
;	O
ASSERT	O
(	O
size	long
>=	O
primesieve_size	function
(	O
n	long
)	O
)	O
;	O
sieve	pointer
=	O
MPZ_REALLOC	O
(	O
x	pointer
,	O
size	long
)	O
;	O
size	long
=	O
(	O
gmp_primesieve	function
(	O
sieve	pointer
,	O
n	long
)	O
+	O
1	int
)	O
/	O
log_n_max	function
(	O
n	long
)	O
+	O
1	int
;	O
TMP_MARK	O
;	O
factors	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
size	long
)	O
;	O
j	long
=	O
0	int
;	O
prod	long
=	O
table	pointer
[	O
numberof	O
(	O
table	pointer
)	O
-	O
1	int
]	O
;	O
{	O
mp_limb_t	long
prime	long
,	O
max_prod	long
;	O
max_prod	long
=	O
GMP_NUMB_MAX	O
/	O
n	long
;	O
LOOP_ON_SIEVE_BEGIN	function
(	O
prime	long
,	O
n_to_bit	function
(	O
numberof	O
(	O
table	pointer
)	O
)	O
,	O
n_to_bit	function
(	O
n	long
)	O
,	O
0	int
,	O
sieve	int
)	O
;	O
FACTOR_LIST_STORE	O
(	O
prime	long
,	O
prod	long
,	O
max_prod	long
,	O
factors	pointer
,	O
j	long
)	O
;	O
LOOP_ON_SIEVE_END	int
;	O
}	O
if	O
(	O
j	long
!=	O
0	int
)	O
{	O
factors	pointer
[	O
j	long
++	O
]	O
=	O
prod	long
;	O
mpz_prodlimbs	O
(	O
x	double
,	O
factors	pointer
,	O
j	long
)	O
;	O
}	O
else	O
{	O
PTR	O
(	O
x	pointer
)	O
[	O
0	int
]	O
=	O
prod	long
;	O
SIZ	O
(	O
x	double
)	O
=	O
1	int
;	O
}	O
TMP_FREE	O
;	O
}	O
}	O