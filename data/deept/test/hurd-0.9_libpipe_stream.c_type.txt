static	O
inline	O
int	O
page_aligned	function
(	O
vm_offset_t	O
num	int
)	O
{	O
return	O
trunc_page	function
(	O
num	int
)	O
==	O
num	int
;	O
}	O
static	O
error_t	O
stream_write	function
(	O
struct	O
pq	struct
*	O
pq	pointer
,	O
void	O
*	O
source	pointer
,	O
char	O
*	O
data	pointer
,	O
size_t	long
data_len	long
,	O
size_t	long
*	O
amount	pointer
)	O
{	O
struct	O
packet	struct
*	O
packet	pointer
=	O
pq_tail	function
(	O
pq	pointer
,	O
PACKET_TYPE_DATA	int
,	O
source	pointer
)	O
;	O
if	O
(	O
packet_readable	function
(	O
packet	pointer
)	O
>	O
0	int
&&	O
data_len	int
>	O
PACKET_SIZE_LARGE	int
&&	O
(	O
!	O
page_aligned	function
(	O
data	pointer
-	O
packet	pointer
->	O
buf_end	pointer
)	O
||	O
!	O
packet_ensure_efficiently	function
(	O
packet	pointer
,	O
data_len	int
)	O
)	O
)	O
packet	struct
=	O
pq_queue	function
(	O
pq	pointer
,	O
PACKET_TYPE_DATA	int
,	O
source	pointer
)	O
;	O
if	O
(	O
!	O
packet	struct
)	O
return	O
ENOBUFS	int
;	O
else	O
return	O
packet_write	function
(	O
packet	pointer
,	O
data	pointer
,	O
data_len	int
,	O
amount	pointer
)	O
;	O
}	O
static	O
error_t	O
stream_read	function
(	O
struct	O
packet	struct
*	O
packet	pointer
,	O
int	O
*	O
dequeue	pointer
,	O
unsigned	O
*	O
flags	int
,	O
char	O
*	O
*	O
data	pointer
,	O
size_t	long
*	O
data_len	pointer
,	O
size_t	long
amount	long
)	O
{	O
error_t	O
err	int
;	O
if	O
(	O
flags	int
&&	O
*	O
flags	int
&	O
MSG_PEEK	int
)	O
{	O
err	long
=	O
packet_peek	function
(	O
packet	pointer
,	O
data	pointer
,	O
data_len	int
,	O
amount	pointer
)	O
;	O
*	O
dequeue	pointer
=	O
0	int
;	O
}	O
else	O
{	O
err	int
=	O
packet_read	function
(	O
packet	pointer
,	O
data	pointer
,	O
data_len	int
,	O
amount	pointer
)	O
;	O
*	O
dequeue	pointer
=	O
(	O
packet_readable	function
(	O
packet	pointer
)	O
==	O
0	int
)	O
;	O
}	O
return	O
err	int
;	O
}	O
struct	O
pipe_class	struct
_stream_pipe_class	struct
=	O
{	O
SOCK_STREAM	int
,	O
0	int
,	O
stream_read	int
,	O
stream_write	int
}	O
;	O
struct	O
pipe_class	struct
*	O
stream_pipe_class	pointer
=	O
&	O
_stream_pipe_class	struct
;	O