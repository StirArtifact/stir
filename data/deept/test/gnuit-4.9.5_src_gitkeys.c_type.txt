speed_t	struct
ospeed	struct
;	O
static	O
struct	O
termios	struct
old_term	struct
;	O
static	O
struct	O
termios	struct
new_term	struct
;	O
char	O
*	O
copyright	pointer
=	O
"%s %s - Display key sequence utility\nGIT is free software; you can redistribute it and/or modify it under the\nterms of the GNU General Public License as published by the Free Software\nFoundation; either version 2, or (at your option) any later version.\nCopyright (C) 1993-1998 Free Software Foundation, Inc.\nWritten by Tudor Hulubei and Andrei Pitis, students at PUB, Romania\n\nPress SPACE when done.\n\n"	int
;	O
extern	O
RETSIGTYPE	O
do_exit	O
PROTO	O
(	O
(	O
int	O
)	O
)	O
;	O
void	O
tty_init	function
(	O
)	O
{	O
{	O
tcgetattr	function
(	O
TTY_OUTPUT	pointer
,	O
&	O
old_term	struct
)	O
;	O
new_term	int
=	O
old_term	int
;	O
new_term	struct
.	O
c_iflag	int
&=	O
~	O
(	O
IXON	int
|	O
ICRNL	int
|	O
IGNCR	int
|	O
INLCR	int
|	O
IGNBRK	int
|	O
BRKINT	int
)	O
;	O
new_term	struct
.	O
c_oflag	int
&=	O
~	O
OPOST	int
;	O
new_term	struct
.	O
c_lflag	int
|=	O
ISIG	int
|	O
NOFLSH	int
;	O
new_term	struct
.	O
c_lflag	int
&=	O
~	O
(	O
ICANON	int
|	O
ECHO	int
)	O
;	O
new_term	struct
.	O
c_cc	array
[	O
VINTR	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VQUIT	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VSTART	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VSTOP	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VMIN	int
]	O
=	O
1	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VTIME	int
]	O
=	O
0	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VERASE	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VKILL	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VEOL	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VEOL2	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VSUSP	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VREPRINT	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VDISCARD	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VWERASE	int
]	O
=	O
CDISABLE	int
;	O
new_term	struct
.	O
c_cc	array
[	O
VLNEXT	int
]	O
=	O
CDISABLE	int
;	O
tcsetattr	function
(	O
TTY_OUTPUT	pointer
,	O
TCSADRAIN	int
,	O
&	O
new_term	struct
)	O
;	O
ospeed	int
=	O
cfgetospeed	function
(	O
&	O
new_term	struct
)	O
;	O
ioctl	function
(	O
TTY_OUTPUT	pointer
,	O
TCXONC	int
,	O
1	int
)	O
;	O
tcflow	function
(	O
TTY_OUTPUT	pointer
,	O
TCOON	int
)	O
;	O
}	O
}	O
void	O
tty_end	function
(	O
)	O
{	O
tcsetattr	function
(	O
TTY_OUTPUT	pointer
,	O
TCSADRAIN	int
,	O
&	O
old_term	struct
)	O
;	O
}	O
RETSIGTYPE	O
do_exit	function
(	O
signum	pointer
)	O
int	O
signum	pointer
;	O
{	O
signal	function
(	O
signum	pointer
,	O
do_exit	pointer
)	O
;	O
tty_end	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
int	O
main	function
(	O
)	O
{	O
char	O
c	int
;	O
printf	function
(	O
copyright	pointer
,	O
PRODUCT	pointer
,	O
VERSION	struct
)	O
;	O
signal	function
(	O
SIGTERM	int
,	O
do_exit	int
)	O
;	O
tty_init	function
(	O
)	O
;	O
signal	function
(	O
SIGTSTP	int
,	O
SIG_IGN	O
)	O
;	O
signal	function
(	O
SIGCONT	int
,	O
SIG_IGN	O
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
read	function
(	O
0	int
,	O
&	O
c	int
,	O
1	int
)	O
;	O
if	O
(	O
c	int
==	O
' '	O
)	O
break	O
;	O
printf	function
(	O
"%x "	pointer
,	O
(	O
unsigned	O
char	O
)	O
c	int
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
tty_end	function
(	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O