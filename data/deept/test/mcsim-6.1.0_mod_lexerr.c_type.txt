void	O
ReportError	function
(	O
PINPUTBUF	pointer
pibIn	pointer
,	O
WORD	int
wCode	int
,	O
PSTR	pointer
szMsg	pointer
,	O
PSTR	pointer
szAltMsg	pointer
)	O
{	O
char	O
cNull	char
=	O
'\0'	O
;	O
BOOL	int
bFatal	int
=	O
wCode	int
&	O
RE_FATAL	int
;	O
BOOL	int
bWarning	int
=	O
wCode	int
&	O
RE_WARNING	int
;	O
wCode	int
&=	O
~	O
(	O
RE_FATAL	int
|	O
RE_WARNING	int
)	O
;	O
if	O
(	O
!	O
szMsg	pointer
)	O
szMsg	pointer
=	O
&	O
cNull	int
;	O
if	O
(	O
wCode	int
)	O
{	O
if	O
(	O
bWarning	int
)	O
printf	function
(	O
"*** Warning: "	pointer
)	O
;	O
else	O
{	O
printf	function
(	O
"*** Error: "	pointer
)	O
;	O
bFatal	int
|=	O
(	O
pibIn	pointer
&&	O
(	O
pibIn	pointer
->	O
cErrors	int
++	O
>	O
MAX_ERRORS	int
)	O
)	O
;	O
}	O
}	O
if	O
(	O
pibIn	pointer
)	O
{	O
if	O
(	O
pibIn	pointer
->	O
pfileIn	pointer
||	O
pibIn	pointer
->	O
iLNPrev	int
)	O
{	O
printf	function
(	O
"line %d: "	pointer
,	O
pibIn	pointer
->	O
iLineNum	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
wCode	int
!=	O
RE_FILENOTFOUND	int
)	O
{	O
PSTRLEX	array
szTmp	array
;	O
szTmp	array
[	O
MAX_LEX	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
printf	function
(	O
"'%s'...\n  "	pointer
,	O
strncpy	function
(	O
szTmp	array
,	O
pibIn	pointer
->	O
pbufOrg	pointer
,	O
MAX_LEX	int
-	O
1	int
)	O
)	O
;	O
}	O
}	O
}	O
switch	O
(	O
wCode	int
)	O
{	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
printf	function
(	O
"Unknown error code %x: %s"	pointer
,	O
wCode	int
,	O
szMsg	pointer
)	O
;	O
case	O
RE_INIT	int
:	O
printf	function
(	O
"Initialization error."	pointer
)	O
;	O
break	O
;	O
case	O
RE_FILENOTFOUND	int
:	O
printf	function
(	O
"File not found \"%s\"."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_CANNOTOPEN	int
:	O
printf	function
(	O
"Cannot open file \"%s\"."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_UNEXPECTED	int
:	O
printf	function
(	O
"Unexpected character '%c' in input file."	pointer
,	O
*	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_UNEXPESCAPE	int
:	O
printf	function
(	O
"Unexpected escape sequence '%s' in input file."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_UNEXPNUMBER	int
:	O
printf	function
(	O
"Unexpected number %s in input file."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_EXPECTED	int
:	O
printf	function
(	O
"Expected '%c' before '%c'."	pointer
,	O
szMsg	pointer
[	O
1	int
]	O
,	O
szMsg	pointer
[	O
0	int
]	O
)	O
;	O
break	O
;	O
case	O
RE_LEXEXPECTED	int
:	O
printf	function
(	O
"Expected <%s>"	pointer
,	O
szMsg	pointer
)	O
;	O
if	O
(	O
szAltMsg	pointer
)	O
printf	function
(	O
" before '%s'"	pointer
,	O
szAltMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_BADCONTEXT	int
:	O
printf	function
(	O
"'%s' used in invalid context."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_DUPDECL	int
:	O
printf	function
(	O
"Duplicate declaration of model variable '%s'."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_DUPSECT	int
:	O
printf	function
(	O
"Only one '%s' section is allowed."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_OUTOFMEM	int
:	O
printf	function
(	O
"Out of memory in %s() !"	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_REDEF	int
:	O
printf	function
(	O
"'%s' redefined."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_EQNTOOLONG	int
:	O
printf	function
(	O
"Equation is too long.  Possibly missing terminator."	pointer
)	O
;	O
break	O
;	O
case	O
RE_BADSTATE	int
:	O
printf	function
(	O
"Invalid state identifier '%s'."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_UNDEFINED	int
:	O
printf	function
(	O
"Undefined identifier '%s'."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_NOINPDEF	int
:	O
printf	function
(	O
"Input '%s' is not initialized."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_NODYNEQN	int
:	O
printf	function
(	O
"State variable '%s' has no dynamics."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_NOOUTPUTEQN	int
:	O
printf	function
(	O
"Output variable '%s' is not computed anywhere."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_TOOMANYVARS	int
:	O
printf	function
(	O
"Too many %s declarations. Limit is %d."	pointer
,	O
szMsg	pointer
,	O
*	O
(	O
PINT	pointer
)	O
szAltMsg	pointer
)	O
;	O
break	O
;	O
case	O
RE_POSITIVE	int
:	O
printf	function
(	O
"Positive number expected."	pointer
)	O
;	O
break	O
;	O
case	O
RE_NAMETOOLONG	int
:	O
printf	function
(	O
"Name %s exceed %d characters."	pointer
,	O
szMsg	pointer
,	O
MAX_NAME	pointer
)	O
;	O
break	O
;	O
case	O
RE_UNBALPAR	int
:	O
printf	function
(	O
"Unbalanced () or equation too long at this line or above."	pointer
)	O
;	O
break	O
;	O
case	O
RE_NOEND	int
:	O
printf	function
(	O
"End keyword is missing in file %s."	pointer
,	O
szMsg	pointer
)	O
;	O
break	O
;	O
}	O
printf	function
(	O
"\n"	pointer
)	O
;	O
if	O
(	O
szAltMsg	pointer
&&	O
wCode	int
!=	O
RE_LEXEXPECTED	int
)	O
printf	function
(	O
"%s\n"	pointer
,	O
szAltMsg	pointer
)	O
;	O
if	O
(	O
bFatal	int
)	O
{	O
printf	function
(	O
"One or more fatal errors: Exiting...\n\n"	pointer
)	O
;	O
exit	function
(	O
wCode	int
)	O
;	O
}	O
}	O