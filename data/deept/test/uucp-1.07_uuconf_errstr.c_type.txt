const	O
char	O
_uuconf_errstr_rcsid	array
[	O
]	O
=	O
"$Id: errstr.c,v 1.6 2002/03/05 19:10:42 ian Rel $"	int
;	O
static	O
char	O
*	O
zeprint_num	pointer
P	O
(	O
(	O
char	O
*	O
zbuf	pointer
,	O
size_t	long
cbuf	pointer
,	O
int	O
ival	int
)	O
)	O
;	O
int	O
uuconf_error_string	function
(	O
pglobal	pointer
,	O
ierr	int
,	O
zbuf	pointer
,	O
cbuf	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
ierr	int
;	O
char	O
*	O
zbuf	pointer
;	O
size_t	long
cbuf	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
const	O
char	O
*	O
zfile	pointer
;	O
size_t	long
cfile	long
;	O
const	O
char	O
*	O
zlineno	pointer
;	O
char	O
ablineno	array
[	O
100	int
]	O
;	O
size_t	long
clineno	long
;	O
const	O
char	O
*	O
zmsg	pointer
;	O
char	O
abmsg	array
[	O
100	int
]	O
;	O
size_t	long
cmsg	long
;	O
const	O
char	O
*	O
zerrno	pointer
;	O
size_t	long
cerrno	long
;	O
size_t	long
cret	long
;	O
size_t	long
ccopy	long
;	O
if	O
(	O
(	O
ierr	int
&	O
UUCONF_ERROR_FILENAME	O
)	O
==	O
0	int
||	O
qglobal	pointer
==	O
NULL	O
||	O
qglobal	pointer
->	O
zfilename	pointer
==	O
NULL	O
)	O
{	O
zfile	pointer
=	O
""	pointer
;	O
cfile	long
=	O
0	int
;	O
}	O
else	O
{	O
zfile	pointer
=	O
qglobal	pointer
->	O
zfilename	pointer
;	O
cfile	pointer
=	O
strlen	function
(	O
zfile	pointer
)	O
+	O
1	int
;	O
}	O
if	O
(	O
cfile	long
==	O
0	int
||	O
(	O
ierr	int
&	O
UUCONF_ERROR_LINENO	O
)	O
==	O
0	int
||	O
qglobal	pointer
==	O
NULL	O
||	O
qglobal	pointer
->	O
ilineno	int
<=	O
0	int
)	O
{	O
zlineno	pointer
=	O
""	pointer
;	O
clineno	pointer
=	O
0	int
;	O
}	O
else	O
{	O
zlineno	pointer
=	O
zeprint_num	function
(	O
ablineno	pointer
,	O
sizeof	O
ablineno	pointer
,	O
qglobal	pointer
->	O
ilineno	int
)	O
;	O
clineno	pointer
=	O
strlen	function
(	O
zlineno	pointer
)	O
+	O
1	int
;	O
}	O
switch	O
(	O
UUCONF_ERROR_VALUE	O
(	O
ierr	pointer
)	O
)	O
{	O
case	O
UUCONF_SUCCESS	O
:	O
zmsg	int
=	O
"no error"	int
;	O
break	O
;	O
case	O
UUCONF_NOT_FOUND	O
:	O
zmsg	pointer
=	O
"not found"	pointer
;	O
break	O
;	O
case	O
UUCONF_FOPEN_FAILED	O
:	O
zmsg	pointer
=	O
"fopen"	int
;	O
break	O
;	O
case	O
UUCONF_FSEEK_FAILED	int
:	O
zmsg	int
=	O
"fseek"	int
;	O
break	O
;	O
case	O
UUCONF_MALLOC_FAILED	O
:	O
zmsg	int
=	O
"malloc"	int
;	O
break	O
;	O
case	O
UUCONF_SYNTAX_ERROR	O
:	O
zmsg	pointer
=	O
"syntax error"	int
;	O
break	O
;	O
default	O
:	O
zmsg	pointer
=	O
zeprint_num	function
(	O
abmsg	pointer
,	O
sizeof	O
abmsg	pointer
,	O
UUCONF_ERROR_VALUE	O
(	O
ierr	pointer
)	O
)	O
;	O
zmsg	int
-=	O
sizeof	O
"error "	int
-	O
1	int
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zmsg	pointer
,	O
(	O
pointer	pointer
)	O
"error "	pointer
,	O
sizeof	O
"error "	int
-	O
1	int
)	O
;	O
break	O
;	O
}	O
cmsg	pointer
=	O
strlen	function
(	O
zmsg	pointer
)	O
;	O
if	O
(	O
cfile	long
>	O
0	int
)	O
++	O
cmsg	int
;	O
if	O
(	O
(	O
ierr	int
&	O
UUCONF_ERROR_ERRNO	O
)	O
==	O
0	int
||	O
qglobal	pointer
==	O
NULL	O
)	O
{	O
zerrno	pointer
=	O
""	pointer
;	O
cerrno	pointer
=	O
0	int
;	O
}	O
else	O
{	O
zerrno	pointer
=	O
strerror	function
(	O
qglobal	pointer
->	O
ierrno	int
)	O
;	O
cerrno	pointer
=	O
strlen	function
(	O
zerrno	pointer
)	O
+	O
2	int
;	O
}	O
cret	int
=	O
cfile	long
+	O
clineno	int
+	O
cmsg	int
+	O
cerrno	int
+	O
1	int
;	O
if	O
(	O
cbuf	struct
==	O
0	int
)	O
return	O
cret	int
;	O
--	O
cbuf	struct
;	O
if	O
(	O
cfile	long
>	O
0	int
)	O
{	O
ccopy	pointer
=	O
cfile	long
-	O
1	int
;	O
if	O
(	O
ccopy	int
>	O
cbuf	struct
)	O
ccopy	pointer
=	O
cbuf	struct
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zbuf	pointer
,	O
(	O
pointer	pointer
)	O
zfile	pointer
,	O
ccopy	pointer
)	O
;	O
zbuf	pointer
+=	O
ccopy	int
;	O
cbuf	struct
-=	O
ccopy	int
;	O
if	O
(	O
cbuf	struct
>	O
0	int
)	O
{	O
*	O
zbuf	pointer
++	O
=	O
':'	O
;	O
--	O
cbuf	struct
;	O
}	O
}	O
if	O
(	O
clineno	int
>	O
0	int
)	O
{	O
ccopy	pointer
=	O
clineno	int
-	O
1	int
;	O
if	O
(	O
ccopy	int
>	O
cbuf	struct
)	O
ccopy	pointer
=	O
cbuf	struct
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zbuf	pointer
,	O
(	O
pointer	pointer
)	O
zlineno	pointer
,	O
ccopy	pointer
)	O
;	O
zbuf	pointer
+=	O
ccopy	int
;	O
cbuf	struct
-=	O
ccopy	int
;	O
if	O
(	O
cbuf	struct
>	O
0	int
)	O
{	O
*	O
zbuf	pointer
++	O
=	O
':'	O
;	O
--	O
cbuf	struct
;	O
}	O
}	O
if	O
(	O
cbuf	struct
>	O
0	int
&&	O
cfile	int
>	O
0	int
)	O
{	O
*	O
zbuf	pointer
++	O
=	O
' '	O
;	O
--	O
cbuf	struct
;	O
--	O
cmsg	int
;	O
}	O
ccopy	int
=	O
cmsg	int
;	O
if	O
(	O
ccopy	int
>	O
cbuf	struct
)	O
ccopy	pointer
=	O
cbuf	struct
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zbuf	pointer
,	O
(	O
pointer	pointer
)	O
zmsg	pointer
,	O
ccopy	pointer
)	O
;	O
zbuf	pointer
+=	O
ccopy	int
;	O
cbuf	struct
-=	O
ccopy	int
;	O
if	O
(	O
cerrno	int
>	O
0	int
)	O
{	O
if	O
(	O
cbuf	struct
>	O
0	int
)	O
{	O
*	O
zbuf	pointer
++	O
=	O
':'	O
;	O
--	O
cbuf	struct
;	O
}	O
if	O
(	O
cbuf	struct
>	O
0	int
)	O
{	O
*	O
zbuf	pointer
++	O
=	O
' '	O
;	O
--	O
cbuf	struct
;	O
}	O
ccopy	int
=	O
cerrno	int
-	O
2	int
;	O
if	O
(	O
ccopy	int
>	O
cbuf	struct
)	O
ccopy	pointer
=	O
cbuf	struct
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zbuf	pointer
,	O
(	O
pointer	pointer
)	O
zerrno	pointer
,	O
ccopy	int
)	O
;	O
zbuf	pointer
+=	O
ccopy	int
;	O
cbuf	struct
-=	O
ccopy	int
;	O
}	O
*	O
zbuf	pointer
=	O
'\0'	O
;	O
return	O
cret	int
;	O
}	O
static	O
char	O
*	O
zeprint_num	function
(	O
ab	array
,	O
c	int
,	O
i	int
)	O
char	O
*	O
ab	array
;	O
size_t	long
c	long
;	O
register	O
int	O
i	long
;	O
{	O
register	O
char	O
*	O
z	pointer
;	O
z	double
=	O
ab	array
+	O
c	int
;	O
*	O
--	O
z	pointer
=	O
'\0'	O
;	O
do	O
{	O
*	O
--	O
z	pointer
=	O
i	long
%	O
10	int
+	O
'0'	O
;	O
i	long
/=	O
10	int
;	O
}	O
while	O
(	O
i	long
!=	O
0	int
)	O
;	O
return	O
z	pointer
;	O
}	O