double	O
gsl_histogram_pdf_sample	function
(	O
const	O
gsl_histogram_pdf	struct
*	O
p	pointer
,	O
double	O
r	double
)	O
{	O
size_t	long
i	long
;	O
int	O
status	int
;	O
if	O
(	O
r	int
==	O
1.0	int
)	O
{	O
r	int
=	O
0.0	int
;	O
}	O
status	int
=	O
find	function
(	O
p	pointer
->	O
n	long
,	O
p	pointer
->	O
sum	pointer
,	O
r	int
,	O
&	O
i	int
)	O
;	O
if	O
(	O
status	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"cannot find r in cumulative pdf"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
else	O
{	O
double	O
delta	struct
=	O
(	O
r	int
-	O
p	pointer
->	O
sum	array
[	O
i	long
]	O
)	O
/	O
(	O
p	pointer
->	O
sum	array
[	O
i	long
+	O
1	int
]	O
-	O
p	pointer
->	O
sum	array
[	O
i	int
]	O
)	O
;	O
double	O
x	double
=	O
p	pointer
->	O
range	pointer
[	O
i	int
]	O
+	O
delta	int
*	O
(	O
p	pointer
->	O
range	pointer
[	O
i	int
+	O
1	int
]	O
-	O
p	pointer
->	O
range	pointer
[	O
i	int
]	O
)	O
;	O
return	O
x	double
;	O
}	O
}	O
gsl_histogram_pdf	struct
*	O
gsl_histogram_pdf_alloc	function
(	O
const	O
size_t	long
n	long
)	O
{	O
gsl_histogram_pdf	struct
*	O
p	pointer
;	O
if	O
(	O
n	long
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"histogram pdf length n must be positive integer"	pointer
,	O
GSL_EDOM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
=	O
(	O
gsl_histogram_pdf	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_histogram_pdf	pointer
)	O
)	O
;	O
if	O
(	O
p	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram pdf struct"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
range	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
n	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
p	pointer
->	O
range	pointer
==	O
0	int
)	O
{	O
free	function
(	O
p	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram pdf ranges"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
sum	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
(	O
n	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
if	O
(	O
p	pointer
->	O
sum	long
==	O
0	int
)	O
{	O
free	function
(	O
p	pointer
->	O
range	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
GSL_ERROR_VAL	O
(	O
"failed to allocate space for histogram pdf sums"	pointer
,	O
GSL_ENOMEM	int
,	O
0	int
)	O
;	O
}	O
p	pointer
->	O
n	long
=	O
n	int
;	O
return	O
p	pointer
;	O
}	O
int	O
gsl_histogram_pdf_init	function
(	O
gsl_histogram_pdf	struct
*	O
p	pointer
,	O
const	O
gsl_histogram	struct
*	O
h	pointer
)	O
{	O
size_t	long
i	long
;	O
size_t	long
n	long
=	O
p	pointer
->	O
n	long
;	O
if	O
(	O
n	long
!=	O
h	pointer
->	O
n	long
)	O
{	O
GSL_ERROR	O
(	O
"histogram length must match pdf length"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	long
]	O
<	O
0	int
)	O
{	O
GSL_ERROR	O
(	O
"histogram bins must be non-negative to compute"	pointer
"a probability distribution"	pointer
,	O
GSL_EDOM	int
)	O
;	O
}	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	long
+	O
1	int
;	O
i	long
++	O
)	O
{	O
p	pointer
->	O
range	pointer
[	O
i	long
]	O
=	O
h	pointer
->	O
range	pointer
[	O
i	long
]	O
;	O
}	O
{	O
double	O
mean	double
=	O
0	int
,	O
sum	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	int
<	O
n	long
;	O
i	long
++	O
)	O
{	O
mean	double
+=	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	long
]	O
-	O
mean	double
)	O
/	O
(	O
(	O
double	O
)	O
(	O
i	long
+	O
1	int
)	O
)	O
;	O
}	O
p	pointer
->	O
sum	array
[	O
0	int
]	O
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	long
;	O
i	int
++	O
)	O
{	O
sum	long
+=	O
(	O
h	pointer
->	O
bin	pointer
[	O
i	int
]	O
/	O
mean	double
)	O
/	O
n	long
;	O
p	pointer
->	O
sum	array
[	O
i	long
+	O
1	int
]	O
=	O
sum	pointer
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
void	O
gsl_histogram_pdf_free	function
(	O
gsl_histogram_pdf	struct
*	O
p	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
p	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
range	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
sum	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
}	O