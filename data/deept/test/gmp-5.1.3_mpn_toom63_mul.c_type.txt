static	O
int	O
abs_sub_n	function
(	O
mp_ptr	pointer
rp	pointer
,	O
mp_srcptr	pointer
ap	pointer
,	O
mp_srcptr	pointer
bp	pointer
,	O
mp_size_t	long
n	long
)	O
{	O
mp_limb_t	long
x	long
,	O
y	int
;	O
while	O
(	O
--	O
n	long
>=	O
0	int
)	O
{	O
x	double
=	O
ap	pointer
[	O
n	long
]	O
;	O
y	int
=	O
bp	pointer
[	O
n	long
]	O
;	O
if	O
(	O
x	double
!=	O
y	int
)	O
{	O
n	long
++	O
;	O
if	O
(	O
x	double
>	O
y	int
)	O
{	O
mpn_sub_n	O
(	O
rp	pointer
,	O
ap	pointer
,	O
bp	pointer
,	O
n	long
)	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
mpn_sub_n	O
(	O
rp	pointer
,	O
bp	pointer
,	O
ap	pointer
,	O
n	long
)	O
;	O
return	O
~	O
0	int
;	O
}	O
}	O
rp	pointer
[	O
n	long
]	O
=	O
0	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
abs_sub_add_n	function
(	O
mp_ptr	pointer
rm	pointer
,	O
mp_ptr	pointer
rp	pointer
,	O
mp_srcptr	pointer
rs	struct
,	O
mp_size_t	long
n	long
)	O
{	O
int	O
result	int
;	O
result	pointer
=	O
abs_sub_n	function
(	O
rm	int
,	O
rp	pointer
,	O
rs	struct
,	O
n	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
rp	pointer
,	O
rp	pointer
,	O
rs	struct
,	O
n	long
)	O
)	O
;	O
return	O
result	pointer
;	O
}	O
void	O
mpn_toom63_mul	function
(	O
mp_ptr	pointer
pp	pointer
,	O
mp_srcptr	pointer
ap	pointer
,	O
mp_size_t	long
an	long
,	O
mp_srcptr	pointer
bp	pointer
,	O
mp_size_t	long
bn	long
,	O
mp_ptr	pointer
scratch	pointer
)	O
{	O
mp_size_t	long
n	long
,	O
s	long
,	O
t	long
;	O
mp_limb_t	long
cy	long
;	O
int	O
sign	int
;	O
ASSERT	O
(	O
an	long
>=	O
bn	long
)	O
;	O
n	long
=	O
1	int
+	O
(	O
an	long
>=	O
2	int
*	O
bn	long
?	O
(	O
an	long
-	O
1	int
)	O
/	O
(	O
size_t	long
)	O
6	int
:	O
(	O
bn	long
-	O
1	int
)	O
/	O
(	O
size_t	long
)	O
3	int
)	O
;	O
s	pointer
=	O
an	long
-	O
5	int
*	O
n	long
;	O
t	pointer
=	O
bn	long
-	O
2	int
*	O
n	long
;	O
ASSERT	O
(	O
0	int
<	O
s	long
&&	O
s	pointer
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
0	int
<	O
t	long
&&	O
t	long
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
s	pointer
+	O
t	long
>=	O
n	long
)	O
;	O
ASSERT	O
(	O
s	pointer
+	O
t	long
>	O
4	int
)	O
;	O
ASSERT	O
(	O
n	long
>	O
2	int
)	O
;	O
sign	int
=	O
mpn_toom_eval_pm2exp	O
(	O
v2	pointer
,	O
v0	O
,	O
5	int
,	O
ap	pointer
,	O
n	long
,	O
s	long
,	O
2	int
,	O
pp	pointer
)	O
;	O
pp	pointer
[	O
n	long
]	O
=	O
mpn_lshift	O
(	O
pp	pointer
,	O
b1	struct
,	O
n	long
,	O
2	int
)	O
;	O
v3	array
[	O
t	int
]	O
=	O
mpn_lshift	O
(	O
v3	array
,	O
b2	double
,	O
t	long
,	O
4	int
)	O
;	O
if	O
(	O
n	long
==	O
t	pointer
)	O
v3	array
[	O
n	long
]	O
+=	O
mpn_add_n	O
(	O
v3	array
,	O
v3	bool
,	O
b0	struct
,	O
n	long
)	O
;	O
else	O
v3	array
[	O
n	long
]	O
=	O
mpn_add	O
(	O
v3	array
,	O
b0	struct
,	O
n	long
,	O
v3	enum
,	O
t	long
+	O
1	int
)	O
;	O
sign	int
^=	O
abs_sub_add_n	function
(	O
v1	pointer
,	O
v3	array
,	O
pp	pointer
,	O
n	long
+	O
1	int
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
pp	pointer
,	O
v0	O
,	O
v1	pointer
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
r3	pointer
,	O
v2	double
,	O
v3	array
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
mpn_toom_couple_handling	O
(	O
r3	pointer
,	O
2	int
*	O
n	int
+	O
1	int
,	O
pp	pointer
,	O
sign	int
,	O
n	int
,	O
2	int
,	O
4	int
)	O
;	O
sign	int
=	O
mpn_toom_eval_pm1	O
(	O
v2	pointer
,	O
v0	O
,	O
5	int
,	O
ap	pointer
,	O
n	long
,	O
s	pointer
,	O
pp	pointer
)	O
;	O
cy	long
=	O
mpn_add	O
(	O
ws	pointer
,	O
b0	struct
,	O
n	long
,	O
b2	O
,	O
t	long
)	O
;	O
v3	array
[	O
n	long
]	O
=	O
cy	long
+	O
mpn_add_n	O
(	O
v3	array
,	O
ws	pointer
,	O
b1	struct
,	O
n	long
)	O
;	O
if	O
(	O
cy	long
==	O
0	int
&&	O
mpn_cmp	O
(	O
ws	pointer
,	O
b1	struct
,	O
n	long
)	O
<	O
0	int
)	O
{	O
mpn_sub_n	O
(	O
v1	pointer
,	O
b1	struct
,	O
ws	pointer
,	O
n	long
)	O
;	O
v1	array
[	O
n	long
]	O
=	O
0	int
;	O
sign	int
=	O
~	O
sign	int
;	O
}	O
else	O
{	O
cy	long
-=	O
mpn_sub_n	O
(	O
v1	pointer
,	O
ws	pointer
,	O
b1	struct
,	O
n	long
)	O
;	O
v1	array
[	O
n	long
]	O
=	O
cy	long
;	O
}	O
TOOM_63_MUL_N_REC	function
(	O
pp	pointer
,	O
v0	O
,	O
v1	pointer
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
r7	pointer
,	O
v2	pointer
,	O
v3	array
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
mpn_toom_couple_handling	O
(	O
r7	pointer
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	pointer
,	O
sign	int
,	O
n	long
,	O
0	int
,	O
0	int
)	O
;	O
sign	int
=	O
mpn_toom_eval_pm2	O
(	O
v2	pointer
,	O
v0	O
,	O
5	int
,	O
ap	pointer
,	O
n	long
,	O
s	pointer
,	O
pp	pointer
)	O
;	O
pp	pointer
[	O
n	long
]	O
=	O
mpn_lshift	O
(	O
pp	pointer
,	O
b1	struct
,	O
n	long
,	O
1	int
)	O
;	O
v3	array
[	O
t	int
]	O
=	O
mpn_lshift	O
(	O
v3	array
,	O
b2	double
,	O
t	long
,	O
2	int
)	O
;	O
if	O
(	O
n	long
==	O
t	pointer
)	O
v3	array
[	O
n	long
]	O
+=	O
mpn_add_n	O
(	O
v3	array
,	O
v3	bool
,	O
b0	struct
,	O
n	long
)	O
;	O
else	O
v3	array
[	O
n	long
]	O
=	O
mpn_add	O
(	O
v3	array
,	O
b0	struct
,	O
n	long
,	O
v3	enum
,	O
t	long
+	O
1	int
)	O
;	O
sign	int
^=	O
abs_sub_add_n	function
(	O
v1	pointer
,	O
v3	array
,	O
pp	pointer
,	O
n	long
+	O
1	int
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
pp	pointer
,	O
v0	O
,	O
v1	pointer
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
r5	pointer
,	O
v2	double
,	O
v3	array
,	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
;	O
mpn_toom_couple_handling	O
(	O
r5	pointer
,	O
2	int
*	O
n	int
+	O
1	int
,	O
pp	pointer
,	O
sign	int
,	O
n	int
,	O
1	int
,	O
2	int
)	O
;	O
TOOM_63_MUL_N_REC	function
(	O
pp	pointer
,	O
ap	pointer
,	O
bp	pointer
,	O
n	int
,	O
ws	pointer
)	O
;	O
if	O
(	O
s	pointer
>	O
t	pointer
)	O
{	O
TOOM_63_MUL_REC	function
(	O
r1	pointer
,	O
a5	int
,	O
s	pointer
,	O
b2	int
,	O
t	pointer
,	O
ws	pointer
)	O
;	O
}	O
else	O
{	O
TOOM_63_MUL_REC	function
(	O
r1	double
,	O
b2	double
,	O
t	pointer
,	O
a5	int
,	O
s	pointer
,	O
ws	pointer
)	O
;	O
}	O
;	O
mpn_toom_interpolate_8pts	O
(	O
pp	pointer
,	O
n	int
,	O
r3	pointer
,	O
r7	pointer
,	O
s	pointer
+	O
t	long
,	O
ws	pointer
)	O
;	O
}	O