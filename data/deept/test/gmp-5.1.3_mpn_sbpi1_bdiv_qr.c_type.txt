mp_limb_t	long
mpn_sbpi1_bdiv_qr	function
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
dn	long
,	O
mp_limb_t	long
dinv	long
)	O
{	O
mp_size_t	long
qn	long
;	O
mp_size_t	long
i	long
;	O
mp_limb_t	long
rh	long
;	O
mp_limb_t	long
ql	long
;	O
ASSERT	O
(	O
dn	long
>	O
0	int
)	O
;	O
ASSERT	O
(	O
nn	long
>	O
dn	long
)	O
;	O
ASSERT	O
(	O
(	O
dp	pointer
[	O
0	int
]	O
&	O
1	int
)	O
!=	O
0	int
)	O
;	O
qn	long
=	O
nn	long
-	O
dn	long
;	O
rh	long
=	O
0	int
;	O
ql	long
=	O
1	int
;	O
while	O
(	O
qn	long
>	O
dn	long
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
dn	long
;	O
i	long
++	O
)	O
{	O
mp_limb_t	long
q	long
;	O
q	double
=	O
dinv	long
*	O
np	pointer
[	O
i	long
]	O
;	O
np	pointer
[	O
i	long
]	O
=	O
mpn_addmul_1	O
(	O
np	pointer
+	O
i	long
,	O
dp	pointer
,	O
dn	long
,	O
q	pointer
)	O
;	O
qp	pointer
[	O
i	long
]	O
=	O
~	O
q	pointer
;	O
}	O
rh	long
+=	O
mpn_add	O
(	O
np	pointer
+	O
dn	long
,	O
np	pointer
+	O
dn	long
,	O
qn	long
,	O
np	pointer
,	O
dn	long
)	O
;	O
ql	long
=	O
mpn_add_1	O
(	O
qp	pointer
,	O
qp	pointer
,	O
dn	long
,	O
ql	long
)	O
;	O
qp	pointer
+=	O
dn	long
;	O
qn	long
-=	O
dn	long
;	O
np	pointer
+=	O
dn	long
;	O
nn	long
-=	O
dn	long
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
qn	long
;	O
i	long
++	O
)	O
{	O
mp_limb_t	long
q	long
;	O
q	double
=	O
dinv	long
*	O
np	pointer
[	O
i	long
]	O
;	O
np	pointer
[	O
i	long
]	O
=	O
mpn_addmul_1	O
(	O
np	pointer
+	O
i	long
,	O
dp	pointer
,	O
dn	long
,	O
q	pointer
)	O
;	O
qp	pointer
[	O
i	long
]	O
=	O
~	O
q	pointer
;	O
}	O
rh	long
+=	O
mpn_add_n	O
(	O
np	pointer
+	O
dn	long
,	O
np	pointer
+	O
dn	long
,	O
np	pointer
,	O
qn	long
)	O
;	O
ql	long
=	O
mpn_add_1	O
(	O
qp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
ql	long
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
ql	long
>	O
0	int
)	O
)	O
{	O
ASSERT	O
(	O
rh	long
==	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
{	O
mp_limb_t	long
cy	long
;	O
cy	long
=	O
mpn_sub_n	O
(	O
np	pointer
+	O
qn	long
,	O
np	pointer
+	O
qn	long
,	O
dp	pointer
,	O
dn	long
)	O
;	O
ASSERT	O
(	O
cy	long
>=	O
rh	long
)	O
;	O
return	O
cy	long
-	O
rh	long
;	O
}	O
}	O