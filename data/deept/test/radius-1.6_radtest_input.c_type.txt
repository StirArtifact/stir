typedef	O
struct	O
yy_buffer_state	struct
*	O
YY_BUFFER_STATE	pointer
;	O
extern	O
int	O
yyleng	int
;	O
extern	O
FILE	struct
*	O
yyin	pointer
,	O
*	O
yyout	pointer
;	O
typedef	O
unsigned	O
int	O
yy_size_t	int
;	O
struct	O
yy_buffer_state	struct
{	O
FILE	struct
*	O
yy_input_file	pointer
;	O
char	O
*	O
yy_ch_buf	pointer
;	O
char	O
*	O
yy_buf_pos	pointer
;	O
yy_size_t	int
yy_buf_size	int
;	O
int	O
yy_n_chars	int
;	O
int	O
yy_is_our_buffer	int
;	O
int	O
yy_is_interactive	int
;	O
int	O
yy_at_bol	int
;	O
int	O
yy_fill_buffer	int
;	O
int	O
yy_buffer_status	int
;	O
}	O
;	O
static	O
YY_BUFFER_STATE	pointer
yy_current_buffer	pointer
=	O
0	int
;	O
static	O
char	O
yy_hold_char	char
;	O
static	O
int	O
yy_n_chars	int
;	O
int	O
yyleng	int
;	O
static	O
char	O
*	O
yy_c_buf_p	pointer
=	O
(	O
char	O
*	O
)	O
0	int
;	O
static	O
int	O
yy_init	int
=	O
1	int
;	O
static	O
int	O
yy_start	int
=	O
0	int
;	O
static	O
int	O
yy_did_buffer_switch_on_eof	int
;	O
void	O
yyrestart	function
YY_PROTO	O
(	O
(	O
FILE	struct
*	O
input_file	pointer
)	O
)	O
;	O
void	O
yy_switch_to_buffer	function
YY_PROTO	O
(	O
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
)	O
;	O
void	O
yy_load_buffer_state	function
YY_PROTO	O
(	O
(	O
void	O
)	O
)	O
;	O
YY_BUFFER_STATE	pointer
yy_create_buffer	function
YY_PROTO	O
(	O
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
)	O
;	O
void	O
yy_delete_buffer	function
YY_PROTO	O
(	O
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
)	O
;	O
void	O
yy_init_buffer	function
YY_PROTO	O
(	O
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
)	O
;	O
void	O
yy_flush_buffer	function
YY_PROTO	O
(	O
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_buffer	function
YY_PROTO	O
(	O
(	O
char	O
*	O
base	pointer
,	O
yy_size_t	int
size	int
)	O
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_string	function
YY_PROTO	O
(	O
(	O
yyconst	O
char	O
*	O
yy_str	pointer
)	O
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_bytes	function
YY_PROTO	O
(	O
(	O
yyconst	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
)	O
)	O
;	O
static	O
void	O
*	O
yy_flex_alloc	function
YY_PROTO	O
(	O
(	O
yy_size_t	int
)	O
)	O
;	O
static	O
void	O
*	O
yy_flex_realloc	function
YY_PROTO	O
(	O
(	O
void	O
*	O
,	O
yy_size_t	int
)	O
)	O
;	O
static	O
void	O
yy_flex_free	function
YY_PROTO	O
(	O
(	O
void	O
*	O
)	O
)	O
;	O
typedef	O
unsigned	O
char	O
YY_CHAR	char
;	O
FILE	struct
*	O
yyin	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
,	O
*	O
yyout	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
typedef	O
int	O
yy_state_type	int
;	O
extern	O
char	O
*	O
yytext	pointer
;	O
static	O
yy_state_type	int
yy_get_previous_state	function
YY_PROTO	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
YY_PROTO	O
(	O
(	O
yy_state_type	int
current_state	int
)	O
)	O
;	O
static	O
int	O
yy_get_next_buffer	function
YY_PROTO	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
yy_fatal_error	function
YY_PROTO	O
(	O
(	O
yyconst	O
char	O
msg	array
[	O
]	O
)	O
)	O
;	O
static	O
yyconst	O
short	O
int	O
yy_accept	array
[	O
196	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
66	int
,	O
64	int
,	O
53	int
,	O
55	int
,	O
63	int
,	O
64	int
,	O
2	int
,	O
64	int
,	O
64	int
,	O
52	int
,	O
56	int
,	O
60	int
,	O
57	int
,	O
59	int
,	O
28	int
,	O
64	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
65	int
,	O
47	int
,	O
48	int
,	O
65	int
,	O
65	int
,	O
50	int
,	O
53	int
,	O
58	int
,	O
0	int
,	O
40	int
,	O
39	int
,	O
0	int
,	O
2	int
,	O
1	int
,	O
35	int
,	O
36	int
,	O
30	int
,	O
0	int
,	O
0	int
,	O
3	int
,	O
0	int
,	O
52	int
,	O
0	int
,	O
62	int
,	O
61	int
,	O
28	int
,	O
54	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
15	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
12	int
,	O
25	int
,	O
28	int
,	O
19	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
0	int
,	O
47	int
,	O
48	int
,	O
0	int
,	O
46	int
,	O
44	int
,	O
46	int
,	O
0	int
,	O
50	int
,	O
41	int
,	O
41	int
,	O
41	int
,	O
29	int
,	O
30	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
52	int
,	O
0	int
,	O
0	int
,	O
28	int
,	O
20	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
11	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
18	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
44	int
,	O
45	int
,	O
42	int
,	O
43	int
,	O
0	int
,	O
37	int
,	O
0	int
,	O
0	int
,	O
32	int
,	O
0	int
,	O
0	int
,	O
52	int
,	O
0	int
,	O
49	int
,	O
0	int
,	O
5	int
,	O
4	int
,	O
28	int
,	O
28	int
,	O
24	int
,	O
28	int
,	O
13	int
,	O
9	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
7	int
,	O
0	int
,	O
28	int
,	O
28	int
,	O
44	int
,	O
45	int
,	O
42	int
,	O
43	int
,	O
0	int
,	O
0	int
,	O
31	int
,	O
0	int
,	O
0	int
,	O
10	int
,	O
16	int
,	O
28	int
,	O
28	int
,	O
28	int
,	O
21	int
,	O
6	int
,	O
28	int
,	O
0	int
,	O
0	int
,	O
27	int
,	O
22	int
,	O
14	int
,	O
0	int
,	O
38	int
,	O
0	int
,	O
34	int
,	O
0	int
,	O
0	int
,	O
28	int
,	O
8	int
,	O
23	int
,	O
26	int
,	O
33	int
,	O
51	int
,	O
0	int
,	O
28	int
,	O
51	int
,	O
17	int
,	O
51	int
,	O
0	int
}	O
;	O
static	O
yyconst	O
int	O
yy_ec	array
[	O
256	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
1	int
,	O
8	int
,	O
9	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
10	int
,	O
11	int
,	O
1	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
13	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
17	int
,	O
18	int
,	O
8	int
,	O
1	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
21	int
,	O
20	int
,	O
20	int
,	O
1	int
,	O
22	int
,	O
1	int
,	O
1	int
,	O
20	int
,	O
1	int
,	O
23	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
31	int
,	O
20	int
,	O
32	int
,	O
33	int
,	O
20	int
,	O
34	int
,	O
35	int
,	O
36	int
,	O
20	int
,	O
37	int
,	O
38	int
,	O
39	int
,	O
40	int
,	O
20	int
,	O
41	int
,	O
42	int
,	O
20	int
,	O
20	int
,	O
43	int
,	O
1	int
,	O
44	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
}	O
;	O
static	O
yyconst	O
int	O
yy_meta	array
[	O
45	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
6	int
,	O
7	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
8	int
,	O
9	int
,	O
9	int
,	O
1	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
3	int
,	O
7	int
}	O
;	O
static	O
yyconst	O
short	O
int	O
yy_base	array
[	O
220	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
42	int
,	O
43	int
,	O
440	int
,	O
439	int
,	O
441	int
,	O
444	int
,	O
438	int
,	O
444	int
,	O
422	int
,	O
46	int
,	O
435	int
,	O
44	int
,	O
428	int
,	O
41	int
,	O
444	int
,	O
42	int
,	O
444	int
,	O
419	int
,	O
0	int
,	O
432	int
,	O
35	int
,	O
34	int
,	O
32	int
,	O
399	int
,	O
39	int
,	O
406	int
,	O
42	int
,	O
397	int
,	O
394	int
,	O
393	int
,	O
402	int
,	O
36	int
,	O
398	int
,	O
74	int
,	O
75	int
,	O
444	int
,	O
62	int
,	O
424	int
,	O
444	int
,	O
424	int
,	O
444	int
,	O
79	int
,	O
83	int
,	O
444	int
,	O
73	int
,	O
422	int
,	O
444	int
,	O
444	int
,	O
77	int
,	O
414	int
,	O
79	int
,	O
414	int
,	O
444	int
,	O
86	int
,	O
95	int
,	O
412	int
,	O
444	int
,	O
444	int
,	O
0	int
,	O
444	int
,	O
396	int
,	O
394	int
,	O
380	int
,	O
389	int
,	O
390	int
,	O
378	int
,	O
381	int
,	O
0	int
,	O
376	int
,	O
387	int
,	O
64	int
,	O
373	int
,	O
0	int
,	O
375	int
,	O
371	int
,	O
0	int
,	O
371	int
,	O
354	int
,	O
75	int
,	O
341	int
,	O
338	int
,	O
107	int
,	O
108	int
,	O
444	int
,	O
81	int
,	O
444	int
,	O
339	int
,	O
0	int
,	O
345	int
,	O
444	int
,	O
444	int
,	O
332	int
,	O
0	int
,	O
333	int
,	O
332	int
,	O
104	int
,	O
89	int
,	O
108	int
,	O
113	int
,	O
328	int
,	O
148	int
,	O
295	int
,	O
0	int
,	O
293	int
,	O
274	int
,	O
269	int
,	O
250	int
,	O
236	int
,	O
247	int
,	O
0	int
,	O
195	int
,	O
206	int
,	O
197	int
,	O
191	int
,	O
0	int
,	O
196	int
,	O
189	int
,	O
202	int
,	O
225	int
,	O
198	int
,	O
192	int
,	O
212	int
,	O
0	int
,	O
211	int
,	O
0	int
,	O
124	int
,	O
444	int
,	O
114	int
,	O
129	int
,	O
212	int
,	O
123	int
,	O
148	int
,	O
132	int
,	O
218	int
,	O
444	int
,	O
192	int
,	O
0	int
,	O
0	int
,	O
186	int
,	O
187	int
,	O
0	int
,	O
187	int
,	O
0	int
,	O
0	int
,	O
192	int
,	O
180	int
,	O
176	int
,	O
174	int
,	O
175	int
,	O
0	int
,	O
165	int
,	O
172	int
,	O
178	int
,	O
444	int
,	O
444	int
,	O
444	int
,	O
444	int
,	O
160	int
,	O
159	int
,	O
444	int
,	O
160	int
,	O
191	int
,	O
0	int
,	O
0	int
,	O
156	int
,	O
150	int
,	O
149	int
,	O
0	int
,	O
0	int
,	O
153	int
,	O
183	int
,	O
172	int
,	O
444	int
,	O
0	int
,	O
0	int
,	O
125	int
,	O
103	int
,	O
96	int
,	O
132	int
,	O
165	int
,	O
168	int
,	O
91	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
83	int
,	O
170	int
,	O
111	int
,	O
35	int
,	O
172	int
,	O
0	int
,	O
444	int
,	O
444	int
,	O
236	int
,	O
245	int
,	O
254	int
,	O
263	int
,	O
270	int
,	O
279	int
,	O
285	int
,	O
294	int
,	O
303	int
,	O
312	int
,	O
321	int
,	O
327	int
,	O
331	int
,	O
337	int
,	O
341	int
,	O
344	int
,	O
349	int
,	O
358	int
,	O
362	int
,	O
365	int
,	O
373	int
,	O
382	int
,	O
391	int
,	O
400	int
}	O
;	O
static	O
yyconst	O
short	O
int	O
yy_def	array
[	O
220	int
]	O
=	O
{	O
0	int
,	O
195	int
,	O
1	int
,	O
196	int
,	O
196	int
,	O
197	int
,	O
197	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
198	int
,	O
199	int
,	O
200	int
,	O
201	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
202	int
,	O
195	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
203	int
,	O
203	int
,	O
195	int
,	O
204	int
,	O
205	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
198	int
,	O
198	int
,	O
195	int
,	O
206	int
,	O
199	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
207	int
,	O
208	int
,	O
201	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
209	int
,	O
195	int
,	O
195	int
,	O
202	int
,	O
195	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
203	int
,	O
203	int
,	O
195	int
,	O
204	int
,	O
195	int
,	O
195	int
,	O
210	int
,	O
205	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
211	int
,	O
207	int
,	O
207	int
,	O
195	int
,	O
212	int
,	O
195	int
,	O
195	int
,	O
209	int
,	O
213	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
195	int
,	O
214	int
,	O
195	int
,	O
215	int
,	O
195	int
,	O
195	int
,	O
212	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
216	int
,	O
195	int
,	O
213	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
217	int
,	O
202	int
,	O
202	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
218	int
,	O
219	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
217	int
,	O
217	int
,	O
195	int
,	O
202	int
,	O
202	int
,	O
218	int
,	O
218	int
,	O
219	int
,	O
219	int
,	O
195	int
,	O
195	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
219	int
,	O
195	int
,	O
195	int
,	O
202	int
,	O
195	int
,	O
202	int
,	O
195	int
,	O
0	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
}	O
;	O
static	O
yyconst	O
short	O
int	O
yy_nxt	array
[	O
489	int
]	O
=	O
{	O
0	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
13	int
,	O
14	int
,	O
8	int
,	O
15	int
,	O
8	int
,	O
8	int
,	O
16	int
,	O
16	int
,	O
8	int
,	O
17	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
21	int
,	O
21	int
,	O
22	int
,	O
23	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
21	int
,	O
28	int
,	O
21	int
,	O
29	int
,	O
21	int
,	O
21	int
,	O
30	int
,	O
31	int
,	O
32	int
,	O
33	int
,	O
34	int
,	O
21	int
,	O
21	int
,	O
35	int
,	O
21	int
,	O
8	int
,	O
8	int
,	O
37	int
,	O
37	int
,	O
38	int
,	O
38	int
,	O
45	int
,	O
50	int
,	O
46	int
,	O
56	int
,	O
57	int
,	O
57	int
,	O
68	int
,	O
51	int
,	O
51	int
,	O
58	int
,	O
59	int
,	O
63	int
,	O
66	int
,	O
193	int
,	O
81	int
,	O
39	int
,	O
39	int
,	O
82	int
,	O
69	int
,	O
47	int
,	O
64	int
,	O
75	int
,	O
67	int
,	O
71	int
,	O
72	int
,	O
89	int
,	O
65	int
,	O
76	int
,	O
85	int
,	O
85	int
,	O
86	int
,	O
86	int
,	O
73	int
,	O
45	int
,	O
90	int
,	O
46	int
,	O
94	int
,	O
45	int
,	O
53	int
,	O
46	int
,	O
51	int
,	O
51	int
,	O
98	int
,	O
98	int
,	O
89	int
,	O
95	int
,	O
113	int
,	O
87	int
,	O
87	int
,	O
100	int
,	O
100	int
,	O
114	int
,	O
47	int
,	O
90	int
,	O
131	int
,	O
90	int
,	O
47	int
,	O
56	int
,	O
101	int
,	O
101	int
,	O
120	int
,	O
85	int
,	O
85	int
,	O
86	int
,	O
86	int
,	O
121	int
,	O
95	int
,	O
98	int
,	O
98	int
,	O
128	int
,	O
133	int
,	O
134	int
,	O
134	int
,	O
182	int
,	O
90	int
,	O
56	int
,	O
135	int
,	O
135	int
,	O
181	int
,	O
131	int
,	O
87	int
,	O
87	int
,	O
191	int
,	O
160	int
,	O
132	int
,	O
160	int
,	O
163	int
,	O
163	int
,	O
161	int
,	O
160	int
,	O
161	int
,	O
181	int
,	O
160	int
,	O
188	int
,	O
161	int
,	O
135	int
,	O
135	int
,	O
161	int
,	O
179	int
,	O
129	int
,	O
136	int
,	O
136	int
,	O
137	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
132	int
,	O
133	int
,	O
164	int
,	O
164	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
174	int
,	O
175	int
,	O
179	int
,	O
136	int
,	O
182	int
,	O
183	int
,	O
183	int
,	O
174	int
,	O
175	int
,	O
181	int
,	O
189	int
,	O
189	int
,	O
182	int
,	O
190	int
,	O
190	int
,	O
192	int
,	O
192	int
,	O
194	int
,	O
194	int
,	O
175	int
,	O
187	int
,	O
186	int
,	O
185	int
,	O
184	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
137	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
133	int
,	O
181	int
,	O
179	int
,	O
177	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
176	int
,	O
172	int
,	O
171	int
,	O
136	int
,	O
170	int
,	O
169	int
,	O
168	int
,	O
167	int
,	O
166	int
,	O
165	int
,	O
137	int
,	O
162	int
,	O
158	int
,	O
156	int
,	O
155	int
,	O
154	int
,	O
153	int
,	O
152	int
,	O
151	int
,	O
150	int
,	O
149	int
,	O
148	int
,	O
147	int
,	O
146	int
,	O
136	int
,	O
136	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
36	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
40	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
48	int
,	O
52	int
,	O
145	int
,	O
144	int
,	O
52	int
,	O
143	int
,	O
52	int
,	O
52	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
61	int
,	O
61	int
,	O
61	int
,	O
142	int
,	O
61	int
,	O
61	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
84	int
,	O
88	int
,	O
141	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
88	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
91	int
,	O
93	int
,	O
140	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
139	int
,	O
97	int
,	O
97	int
,	O
99	int
,	O
195	int
,	O
99	int
,	O
99	int
,	O
103	int
,	O
96	int
,	O
96	int
,	O
126	int
,	O
103	int
,	O
103	int
,	O
125	int
,	O
92	int
,	O
125	int
,	O
127	int
,	O
124	int
,	O
127	int
,	O
130	int
,	O
130	int
,	O
130	int
,	O
130	int
,	O
130	int
,	O
130	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
157	int
,	O
123	int
,	O
157	int
,	O
159	int
,	O
122	int
,	O
159	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
136	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
173	int
,	O
178	int
,	O
119	int
,	O
178	int
,	O
178	int
,	O
178	int
,	O
178	int
,	O
178	int
,	O
178	int
,	O
178	int
,	O
180	int
,	O
118	int
,	O
180	int
,	O
180	int
,	O
180	int
,	O
180	int
,	O
180	int
,	O
180	int
,	O
180	int
,	O
117	int
,	O
116	int
,	O
115	int
,	O
112	int
,	O
111	int
,	O
110	int
,	O
109	int
,	O
108	int
,	O
107	int
,	O
106	int
,	O
105	int
,	O
104	int
,	O
102	int
,	O
55	int
,	O
96	int
,	O
49	int
,	O
42	int
,	O
92	int
,	O
83	int
,	O
80	int
,	O
79	int
,	O
78	int
,	O
77	int
,	O
74	int
,	O
70	int
,	O
62	int
,	O
60	int
,	O
55	int
,	O
49	int
,	O
43	int
,	O
42	int
,	O
195	int
,	O
41	int
,	O
41	int
,	O
7	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
}	O
;	O
static	O
yyconst	O
short	O
int	O
yy_chk	array
[	O
489	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
4	int
,	O
3	int
,	O
4	int
,	O
12	int
,	O
14	int
,	O
12	int
,	O
16	int
,	O
16	int
,	O
16	int
,	O
25	int
,	O
14	int
,	O
14	int
,	O
18	int
,	O
18	int
,	O
23	int
,	O
24	int
,	O
191	int
,	O
34	int
,	O
3	int
,	O
4	int
,	O
34	int
,	O
25	int
,	O
12	int
,	O
23	int
,	O
29	int
,	O
24	int
,	O
27	int
,	O
27	int
,	O
39	int
,	O
23	int
,	O
29	int
,	O
36	int
,	O
37	int
,	O
36	int
,	O
37	int
,	O
27	int
,	O
44	int
,	O
39	int
,	O
44	int
,	O
47	int
,	O
45	int
,	O
14	int
,	O
45	int
,	O
51	int
,	O
51	int
,	O
53	int
,	O
53	int
,	O
87	int
,	O
47	int
,	O
73	int
,	O
36	int
,	O
37	int
,	O
56	int
,	O
56	int
,	O
73	int
,	O
44	int
,	O
87	int
,	O
99	int
,	O
39	int
,	O
45	int
,	O
57	int
,	O
57	int
,	O
57	int
,	O
81	int
,	O
84	int
,	O
85	int
,	O
84	int
,	O
85	int
,	O
81	int
,	O
47	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
100	int
,	O
100	int
,	O
100	int
,	O
190	int
,	O
87	int
,	O
101	int
,	O
101	int
,	O
101	int
,	O
188	int
,	O
130	int
,	O
84	int
,	O
85	int
,	O
184	int
,	O
128	int
,	O
99	int
,	O
128	int
,	O
133	int
,	O
133	int
,	O
131	int
,	O
128	int
,	O
131	int
,	O
180	int
,	O
128	int
,	O
181	int
,	O
131	int
,	O
135	int
,	O
135	int
,	O
131	int
,	O
179	int
,	O
98	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
130	int
,	O
134	int
,	O
134	int
,	O
134	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
103	int
,	O
153	int
,	O
153	int
,	O
178	int
,	O
103	int
,	O
163	int
,	O
163	int
,	O
163	int
,	O
174	int
,	O
174	int
,	O
181	int
,	O
182	int
,	O
182	int
,	O
183	int
,	O
183	int
,	O
183	int
,	O
189	int
,	O
189	int
,	O
192	int
,	O
192	int
,	O
173	int
,	O
172	int
,	O
169	int
,	O
168	int
,	O
167	int
,	O
103	int
,	O
103	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
164	int
,	O
161	int
,	O
160	int
,	O
155	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
138	int
,	O
154	int
,	O
151	int
,	O
150	int
,	O
138	int
,	O
149	int
,	O
148	int
,	O
147	int
,	O
144	int
,	O
142	int
,	O
141	int
,	O
136	int
,	O
132	int
,	O
126	int
,	O
124	int
,	O
123	int
,	O
122	int
,	O
121	int
,	O
120	int
,	O
119	int
,	O
118	int
,	O
116	int
,	O
115	int
,	O
114	int
,	O
113	int
,	O
138	int
,	O
138	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
196	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
197	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
198	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
199	int
,	O
200	int
,	O
111	int
,	O
110	int
,	O
200	int
,	O
109	int
,	O
200	int
,	O
200	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
201	int
,	O
202	int
,	O
202	int
,	O
202	int
,	O
108	int
,	O
202	int
,	O
202	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
203	int
,	O
204	int
,	O
107	int
,	O
204	int
,	O
204	int
,	O
204	int
,	O
204	int
,	O
204	int
,	O
204	int
,	O
204	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
205	int
,	O
206	int
,	O
106	int
,	O
206	int
,	O
206	int
,	O
206	int
,	O
206	int
,	O
206	int
,	O
206	int
,	O
206	int
,	O
207	int
,	O
207	int
,	O
207	int
,	O
104	int
,	O
207	int
,	O
207	int
,	O
208	int
,	O
102	int
,	O
208	int
,	O
208	int
,	O
209	int
,	O
97	int
,	O
96	int
,	O
94	int
,	O
209	int
,	O
209	int
,	O
210	int
,	O
91	int
,	O
210	int
,	O
211	int
,	O
89	int
,	O
211	int
,	O
212	int
,	O
212	int
,	O
212	int
,	O
212	int
,	O
212	int
,	O
212	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
213	int
,	O
214	int
,	O
83	int
,	O
214	int
,	O
215	int
,	O
82	int
,	O
215	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
216	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
217	int
,	O
218	int
,	O
80	int
,	O
218	int
,	O
218	int
,	O
218	int
,	O
218	int
,	O
218	int
,	O
218	int
,	O
218	int
,	O
219	int
,	O
79	int
,	O
219	int
,	O
219	int
,	O
219	int
,	O
219	int
,	O
219	int
,	O
219	int
,	O
219	int
,	O
77	int
,	O
76	int
,	O
74	int
,	O
72	int
,	O
71	int
,	O
69	int
,	O
68	int
,	O
67	int
,	O
66	int
,	O
65	int
,	O
64	int
,	O
63	int
,	O
58	int
,	O
54	int
,	O
52	int
,	O
48	int
,	O
42	int
,	O
40	int
,	O
35	int
,	O
33	int
,	O
32	int
,	O
31	int
,	O
30	int
,	O
28	int
,	O
26	int
,	O
22	int
,	O
20	int
,	O
15	int
,	O
13	int
,	O
11	int
,	O
9	int
,	O
7	int
,	O
6	int
,	O
5	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
,	O
195	int
}	O
;	O
static	O
yy_state_type	int
yy_last_accepting_state	int
;	O
static	O
char	O
*	O
yy_last_accepting_cpos	pointer
;	O
char	O
*	O
yytext	pointer
;	O
int	O
interactive	int
;	O
char	O
prompt_str	array
[	O
]	O
=	O
"radtest> "	pointer
;	O
grad_locus_t	struct
source_locus	struct
;	O
static	O
struct	O
obstack	struct
string_stk	struct
;	O
size_t	long
string_start_line	long
;	O
static	O
char	O
*	O
heredoc_delimiter	pointer
;	O
static	O
int	O
strip_tabs	int
;	O
static	O
char	O
*	O
input_line	pointer
;	O
static	O
size_t	long
input_length	long
;	O
static	O
size_t	long
input_pos	long
;	O
static	O
int	O
fill_input_buffer	function
(	O
char	O
*	O
buf	pointer
,	O
int	O
bufsize	long
)	O
{	O
if	O
(	O
interactive	int
)	O
{	O
int	O
rest	int
;	O
if	O
(	O
!	O
input_line	pointer
||	O
input_pos	long
==	O
input_length	long
)	O
{	O
if	O
(	O
disable_readline	int
)	O
{	O
static	O
size_t	long
input_size	long
;	O
printf	function
(	O
"%s"	pointer
,	O
prompt_str	array
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
if	O
(	O
getline	function
(	O
&	O
input_line	pointer
,	O
&	O
input_size	long
,	O
yyin	pointer
)	O
<	O
0	int
)	O
{	O
free	function
(	O
input_line	pointer
)	O
;	O
input_line	pointer
=	O
NULL	O
;	O
input_length	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
input_length	long
=	O
strlen	function
(	O
input_line	pointer
)	O
;	O
input_pos	long
=	O
0	int
;	O
}	O
else	O
{	O
free	function
(	O
input_line	pointer
)	O
;	O
input_line	pointer
=	O
grad_readline	function
(	O
prompt_str	array
)	O
;	O
if	O
(	O
!	O
input_line	pointer
)	O
return	O
0	int
;	O
grad_add_history	function
(	O
input_line	pointer
)	O
;	O
input_length	long
=	O
strlen	function
(	O
input_line	pointer
)	O
;	O
input_line	pointer
=	O
realloc	function
(	O
input_line	pointer
,	O
input_length	long
+	O
2	int
)	O
;	O
if	O
(	O
!	O
input_line	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"low core: aborting"	pointer
)	O
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
input_line	pointer
[	O
input_length	long
++	O
]	O
=	O
'\n'	O
;	O
input_line	pointer
[	O
input_length	long
]	O
=	O
0	int
;	O
input_pos	long
=	O
0	int
;	O
}	O
}	O
rest	int
=	O
input_length	long
-	O
input_pos	long
;	O
if	O
(	O
bufsize	long
>	O
rest	int
)	O
bufsize	long
=	O
rest	int
;	O
memcpy	function
(	O
buf	pointer
,	O
input_line	pointer
+	O
input_pos	long
,	O
bufsize	long
)	O
;	O
input_pos	long
+=	O
bufsize	long
;	O
return	O
bufsize	long
;	O
}	O
else	O
{	O
return	O
fread	function
(	O
buf	pointer
,	O
1	int
,	O
bufsize	long
,	O
yyin	pointer
)	O
;	O
}	O
}	O
static	O
size_t	long
string_len	long
;	O
static	O
int	O
binary_string	int
;	O
static	O
void	O
begin_str	function
(	O
)	O
;	O
static	O
void	O
add_str	function
(	O
char	O
*	O
str	pointer
,	O
int	O
len	int
)	O
;	O
static	O
void	O
add_chr	function
(	O
int	O
c	pointer
)	O
;	O
static	O
char	O
*	O
end_str	function
(	O
)	O
;	O
static	O
void	O
add_num	function
(	O
int	O
skip	int
,	O
int	O
base	pointer
,	O
char	O
*	O
text	pointer
,	O
int	O
leng	int
)	O
;	O
static	O
int	O
backspace	function
(	O
int	O
c	pointer
)	O
;	O
static	O
int	O
isemptystr	function
(	O
char	O
*	O
text	pointer
)	O
;	O
static	O
char	O
*	O
heredoc_strip_tabs	function
(	O
char	O
*	O
text	pointer
)	O
;	O
static	O
void	O
heredoc_begin	function
(	O
)	O
;	O
extern	O
int	O
yywrap	function
YY_PROTO	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
yyunput	function
YY_PROTO	O
(	O
(	O
int	O
c	pointer
,	O
char	O
*	O
buf_ptr	pointer
)	O
)	O
;	O
static	O
int	O
input	struct
YY_PROTO	O
(	O
(	O
void	O
)	O
)	O
;	O
YY_DECL	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
=	O
NULL	O
,	O
*	O
yy_bp	pointer
=	O
NULL	O
;	O
register	O
int	O
yy_act	int
;	O
if	O
(	O
yy_init	int
)	O
{	O
yy_init	int
=	O
0	int
;	O
if	O
(	O
!	O
yy_start	int
)	O
yy_start	int
=	O
1	int
;	O
if	O
(	O
!	O
yyin	pointer
)	O
yyin	pointer
=	O
stdin	pointer
;	O
if	O
(	O
!	O
yyout	pointer
)	O
yyout	pointer
=	O
stdout	pointer
;	O
if	O
(	O
!	O
yy_current_buffer	pointer
)	O
yy_current_buffer	pointer
=	O
yy_create_buffer	function
(	O
yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
*	O
yy_cp	pointer
=	O
yy_hold_char	char
;	O
yy_bp	pointer
=	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
yy_start	int
;	O
yy_match	O
:	O
do	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
yy_last_accepting_state	int
=	O
yy_current_state	int
;	O
yy_last_accepting_cpos	pointer
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
196	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
++	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_base	array
[	O
yy_current_state	int
]	O
!=	O
444	int
)	O
;	O
yy_find_action	O
:	O
yy_act	int
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_act	int
==	O
0	int
)	O
{	O
yy_cp	pointer
=	O
yy_last_accepting_cpos	pointer
;	O
yy_current_state	int
=	O
yy_last_accepting_state	int
;	O
yy_act	int
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
}	O
YY_DO_BEFORE_ACTION	O
;	O
do_action	O
:	O
switch	O
(	O
yy_act	int
)	O
{	O
case	O
0	int
:	O
*	O
yy_cp	pointer
=	O
yy_hold_char	char
;	O
yy_cp	pointer
=	O
yy_last_accepting_cpos	pointer
;	O
yy_current_state	int
=	O
yy_last_accepting_state	int
;	O
goto	O
yy_find_action	O
;	O
case	O
1	int
:	O
YY_RULE_SETUP	O
{	O
source_locus	struct
.	O
line	long
++	O
;	O
return	O
EOL	int
;	O
}	O
YY_BREAK	O
case	O
2	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
3	int
:	O
YY_RULE_SETUP	O
{	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
2	int
)	O
;	O
yylval	union
.	O
string	pointer
=	O
end_str	function
(	O
)	O
;	O
return	O
NAME	int
;	O
}	O
YY_BREAK	O
case	O
4	int
:	O
YY_RULE_SETUP	O
return	O
AUTH	int
;	O
YY_BREAK	O
case	O
5	int
:	O
YY_RULE_SETUP	O
return	O
ACCT	int
;	O
YY_BREAK	O
case	O
6	int
:	O
YY_RULE_SETUP	O
return	O
PRINT	int
;	O
YY_BREAK	O
case	O
7	int
:	O
YY_RULE_SETUP	O
return	O
SEND	int
;	O
YY_BREAK	O
case	O
8	int
:	O
YY_RULE_SETUP	O
return	O
EXPECT	int
;	O
YY_BREAK	O
case	O
9	int
:	O
YY_RULE_SETUP	O
return	O
EXIT	int
;	O
YY_BREAK	O
case	O
10	int
:	O
YY_RULE_SETUP	O
return	O
T_BEGIN	int
;	O
YY_BREAK	O
case	O
11	int
:	O
YY_RULE_SETUP	O
return	O
T_END	int
;	O
YY_BREAK	O
case	O
12	int
:	O
YY_RULE_SETUP	O
return	O
IF	int
;	O
YY_BREAK	O
case	O
13	int
:	O
YY_RULE_SETUP	O
{	O
switch	O
(	O
peek_ctx	function
(	O
)	O
)	O
{	O
case	O
ctx_if	int
:	O
return	O
ELSE	int
;	O
case	O
ctx_iferr	int
:	O
pop_ctx	function
(	O
)	O
;	O
break	O
;	O
default	O
:	O
parse_error	function
(	O
_	O
(	O
"Misplaced 'else'"	pointer
)	O
)	O
;	O
}	O
}	O
YY_BREAK	O
case	O
14	int
:	O
YY_RULE_SETUP	O
{	O
if	O
(	O
peek_ctx	function
(	O
)	O
==	O
ctx_doerr	int
)	O
pop_ctx	function
(	O
)	O
;	O
else	O
return	O
WHILE	int
;	O
}	O
YY_BREAK	O
case	O
15	int
:	O
YY_RULE_SETUP	O
return	O
DO	int
;	O
YY_BREAK	O
case	O
16	int
:	O
YY_RULE_SETUP	O
return	O
BREAK	int
;	O
YY_BREAK	O
case	O
17	int
:	O
YY_RULE_SETUP	O
return	O
CONTINUE	int
;	O
YY_BREAK	O
case	O
18	int
:	O
YY_RULE_SETUP	O
return	O
NOT	int
;	O
YY_BREAK	O
case	O
19	int
:	O
YY_RULE_SETUP	O
return	O
OR	int
;	O
YY_BREAK	O
case	O
20	int
:	O
YY_RULE_SETUP	O
return	O
AND	int
;	O
YY_BREAK	O
case	O
21	int
:	O
YY_RULE_SETUP	O
return	O
INPUT	int
;	O
YY_BREAK	O
case	O
22	int
:	O
YY_RULE_SETUP	O
return	O
SHIFT	int
;	O
YY_BREAK	O
case	O
23	int
:	O
YY_RULE_SETUP	O
return	O
GETOPT	int
;	O
YY_BREAK	O
case	O
24	int
:	O
YY_RULE_SETUP	O
return	O
CASE	int
;	O
YY_BREAK	O
case	O
25	int
:	O
YY_RULE_SETUP	O
return	O
IN	int
;	O
YY_BREAK	O
case	O
26	int
:	O
YY_RULE_SETUP	O
return	O
T_RETURN	int
;	O
YY_BREAK	O
case	O
27	int
:	O
YY_RULE_SETUP	O
{	O
int	O
i	int
,	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
char	O
*	O
p	pointer
;	O
grad_argcv_get	function
(	O
yytext	pointer
,	O
""	pointer
,	O
NULL	O
,	O
&	O
argc	int
,	O
&	O
argv	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
add_str	function
(	O
argv	pointer
[	O
i	int
]	O
,	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
+	O
1	int
)	O
;	O
add_chr	function
(	O
0	int
)	O
;	O
for	O
(	O
p	pointer
=	O
end_str	function
(	O
)	O
;	O
*	O
p	pointer
;	O
p	pointer
+=	O
strlen	function
(	O
p	pointer
)	O
+	O
1	int
)	O
obstack_ptr_grow	O
(	O
&	O
string_stk	struct
,	O
p	pointer
)	O
;	O
p	pointer
=	O
NULL	O
;	O
obstack_ptr_grow	O
(	O
&	O
string_stk	struct
,	O
p	pointer
)	O
;	O
yylval	union
.	O
set	struct
.	O
argc	int
=	O
argc	int
;	O
yylval	union
.	O
set	struct
.	O
argv	pointer
=	O
obstack_finish	O
(	O
&	O
string_stk	struct
)	O
;	O
grad_argcv_free	function
(	O
argc	int
,	O
argv	pointer
)	O
;	O
if	O
(	O
yytext	pointer
[	O
yyleng	int
-	O
2	int
]	O
==	O
'\\'	O
)	O
yyless	O
(	O
yyleng	int
-	O
2	int
)	O
;	O
else	O
yyless	O
(	O
yyleng	int
-	O
1	int
)	O
;	O
return	O
SET	int
;	O
}	O
YY_BREAK	O
case	O
28	int
:	O
YY_RULE_SETUP	O
{	O
int	O
n	long
=	O
grad_request_name_to_code	function
(	O
yytext	pointer
)	O
;	O
if	O
(	O
n	long
!=	O
0	int
)	O
{	O
yylval	union
.	O
number	long
=	O
n	long
;	O
return	O
NUMBER	int
;	O
}	O
add_str	function
(	O
yytext	pointer
,	O
yyleng	int
)	O
;	O
yylval	union
.	O
string	pointer
=	O
end_str	function
(	O
)	O
;	O
return	O
NAME	int
;	O
}	O
YY_BREAK	O
case	O
29	int
:	O
YY_RULE_SETUP	O
{	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
2	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
NULL	O
;	O
yyless	O
(	O
yyleng	int
-	O
1	int
)	O
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
30	int
:	O
YY_RULE_SETUP	O
{	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
1	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
NULL	O
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
31	int
:	O
YY_RULE_SETUP	O
{	O
add_str	function
(	O
yytext	pointer
+	O
2	int
,	O
yyleng	int
-	O
4	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
NULL	O
;	O
yyless	O
(	O
yyleng	int
-	O
1	int
)	O
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
32	int
:	O
YY_RULE_SETUP	O
{	O
add_str	function
(	O
yytext	pointer
+	O
2	int
,	O
yyleng	int
-	O
3	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
NULL	O
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
33	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
;	O
add_str	function
(	O
yytext	pointer
+	O
2	int
,	O
yyleng	int
-	O
4	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
p	pointer
=	O
strchr	function
(	O
yylval	union
.	O
deref	struct
.	O
name	pointer
,	O
':'	O
)	O
;	O
*	O
p	pointer
++	O
=	O
0	int
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
p	pointer
;	O
yyless	O
(	O
yyleng	int
-	O
1	int
)	O
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
34	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
;	O
add_str	function
(	O
yytext	pointer
+	O
2	int
,	O
yyleng	int
-	O
3	int
)	O
;	O
yylval	union
.	O
deref	struct
.	O
name	pointer
=	O
end_str	function
(	O
)	O
;	O
p	pointer
=	O
strchr	function
(	O
yylval	union
.	O
deref	struct
.	O
name	pointer
,	O
':'	O
)	O
;	O
*	O
p	pointer
++	O
=	O
0	int
;	O
yylval	union
.	O
deref	struct
.	O
repl	pointer
=	O
p	pointer
;	O
return	O
IDENT	int
;	O
}	O
YY_BREAK	O
case	O
35	int
:	O
YY_RULE_SETUP	O
return	O
ARGCOUNT	int
;	O
YY_BREAK	O
case	O
36	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
parm	struct
.	O
number	long
=	O
strtoul	function
(	O
yytext	pointer
+	O
1	int
,	O
NULL	O
,	O
0	int
)	O
;	O
yylval	union
.	O
parm	struct
.	O
repl	pointer
=	O
NULL	O
;	O
return	O
PARM	int
;	O
}	O
YY_BREAK	O
case	O
37	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
parm	struct
.	O
number	long
=	O
strtoul	function
(	O
yytext	pointer
+	O
2	int
,	O
NULL	O
,	O
0	int
)	O
;	O
yylval	union
.	O
parm	struct
.	O
repl	pointer
=	O
NULL	O
;	O
return	O
PARM	int
;	O
}	O
YY_BREAK	O
case	O
38	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
;	O
yylval	union
.	O
parm	struct
.	O
number	long
=	O
strtoul	function
(	O
yytext	pointer
+	O
2	int
,	O
&	O
p	pointer
,	O
0	int
)	O
;	O
p	pointer
++	O
;	O
add_str	function
(	O
p	pointer
,	O
strlen	function
(	O
p	pointer
)	O
-	O
1	int
)	O
;	O
yylval	union
.	O
parm	struct
.	O
repl	pointer
=	O
end_str	function
(	O
)	O
;	O
return	O
PARM	int
;	O
}	O
YY_BREAK	O
case	O
39	int
:	O
YY_RULE_SETUP	O
{	O
begin_str	function
(	O
)	O
;	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
2	int
)	O
;	O
yylval	union
.	O
string	pointer
=	O
end_str	function
(	O
)	O
;	O
return	O
QUOTE	int
;	O
}	O
YY_BREAK	O
case	O
40	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
STRING	int
)	O
;	O
begin_str	function
(	O
)	O
;	O
string_start_line	long
=	O
source_locus	struct
.	O
line	long
++	O
;	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
1	int
)	O
;	O
}	O
YY_BREAK	O
case	O
41	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
STRING	int
)	O
;	O
begin_str	function
(	O
)	O
;	O
string_start_line	long
=	O
source_locus	struct
.	O
line	long
;	O
if	O
(	O
yytext	pointer
[	O
yyleng	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
source_locus	struct
.	O
line	long
++	O
;	O
add_str	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
3	int
)	O
;	O
add_chr	function
(	O
backspace	function
(	O
yytext	pointer
[	O
yyleng	int
-	O
1	int
]	O
)	O
)	O
;	O
}	O
YY_BREAK	O
case	O
42	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
STRING	int
)	O
;	O
begin_str	function
(	O
)	O
;	O
add_num	function
(	O
0	int
,	O
8	int
,	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
1	int
)	O
;	O
}	O
YY_BREAK	O
case	O
43	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
STRING	int
)	O
;	O
begin_str	function
(	O
)	O
;	O
add_num	function
(	O
1	int
,	O
16	int
,	O
yytext	pointer
+	O
1	int
,	O
yyleng	int
-	O
1	int
)	O
;	O
}	O
YY_BREAK	O
case	O
44	int
:	O
YY_RULE_SETUP	O
{	O
add_num	function
(	O
0	int
,	O
8	int
,	O
yytext	pointer
,	O
yyleng	int
)	O
;	O
}	O
YY_BREAK	O
case	O
45	int
:	O
YY_RULE_SETUP	O
{	O
add_num	function
(	O
1	int
,	O
16	int
,	O
yytext	pointer
,	O
yyleng	int
)	O
;	O
}	O
YY_BREAK	O
case	O
46	int
:	O
YY_RULE_SETUP	O
{	O
if	O
(	O
yytext	pointer
[	O
yyleng	int
-	O
1	int
]	O
==	O
'\n'	O
)	O
source_locus	struct
.	O
line	long
++	O
;	O
add_str	function
(	O
yytext	pointer
,	O
yyleng	int
-	O
2	int
)	O
;	O
add_chr	function
(	O
backspace	function
(	O
yytext	pointer
[	O
yyleng	int
-	O
1	int
]	O
)	O
)	O
;	O
}	O
YY_BREAK	O
case	O
47	int
:	O
YY_RULE_SETUP	O
{	O
source_locus	struct
.	O
line	long
++	O
;	O
add_str	function
(	O
yytext	pointer
,	O
yyleng	int
)	O
;	O
add_chr	function
(	O
backspace	function
(	O
yytext	pointer
[	O
yyleng	int
-	O
1	int
]	O
)	O
)	O
;	O
}	O
YY_BREAK	O
case	O
48	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
add_str	function
(	O
yytext	pointer
,	O
yyleng	int
-	O
1	int
)	O
;	O
if	O
(	O
binary_string	int
)	O
{	O
yylval	union
.	O
bstring	struct
.	O
ptr	pointer
=	O
end_str	function
(	O
)	O
;	O
yylval	union
.	O
bstring	struct
.	O
length	short
=	O
string_len	long
;	O
return	O
BSTRING	int
;	O
}	O
else	O
{	O
yylval	union
.	O
string	pointer
=	O
end_str	function
(	O
)	O
;	O
return	O
QUOTE	int
;	O
}	O
}	O
YY_BREAK	O
case	O
49	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
HEREDOC	int
)	O
;	O
begin_str	function
(	O
)	O
;	O
string_start_line	long
=	O
source_locus	struct
.	O
line	long
++	O
;	O
heredoc_begin	function
(	O
)	O
;	O
}	O
YY_BREAK	O
case	O
50	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
=	O
heredoc_strip_tabs	function
(	O
yytext	pointer
)	O
;	O
if	O
(	O
strncmp	function
(	O
p	pointer
,	O
heredoc_delimiter	pointer
,	O
strlen	function
(	O
heredoc_delimiter	pointer
)	O
)	O
==	O
0	int
&&	O
isemptystr	function
(	O
p	pointer
+	O
strlen	function
(	O
heredoc_delimiter	pointer
)	O
)	O
)	O
{	O
grad_free	function
(	O
heredoc_delimiter	pointer
)	O
;	O
heredoc_delimiter	pointer
=	O
NULL	O
;	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
yylval	union
.	O
string	pointer
=	O
end_str	function
(	O
)	O
;	O
yyless	O
(	O
yyleng	int
-	O
1	int
)	O
;	O
return	O
QUOTE	int
;	O
}	O
add_str	function
(	O
p	pointer
,	O
strlen	function
(	O
p	pointer
)	O
)	O
;	O
source_locus	struct
.	O
line	long
++	O
;	O
}	O
YY_BREAK	O
case	O
51	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
ipaddr	int
=	O
grad_ip_strtoip	function
(	O
yytext	pointer
)	O
;	O
return	O
IPADDRESS	int
;	O
}	O
YY_BREAK	O
case	O
52	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
number	long
=	O
strtol	function
(	O
yytext	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
return	O
NUMBER	int
;	O
}	O
YY_BREAK	O
case	O
53	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
54	int
:	O
YY_RULE_SETUP	O
source_locus	struct
.	O
line	long
++	O
;	O
YY_BREAK	O
case	O
55	int
:	O
YY_RULE_SETUP	O
{	O
source_locus	struct
.	O
line	long
++	O
;	O
return	O
EOL	int
;	O
}	O
YY_BREAK	O
case	O
56	int
:	O
YY_RULE_SETUP	O
return	O
EOL	int
;	O
YY_BREAK	O
case	O
57	int
:	O
YY_RULE_SETUP	O
return	O
EQ	int
;	O
YY_BREAK	O
case	O
58	int
:	O
YY_RULE_SETUP	O
return	O
NE	int
;	O
YY_BREAK	O
case	O
59	int
:	O
YY_RULE_SETUP	O
return	O
GT	int
;	O
YY_BREAK	O
case	O
60	int
:	O
YY_RULE_SETUP	O
return	O
LT	int
;	O
YY_BREAK	O
case	O
61	int
:	O
YY_RULE_SETUP	O
return	O
GE	int
;	O
YY_BREAK	O
case	O
62	int
:	O
YY_RULE_SETUP	O
return	O
LE	int
;	O
YY_BREAK	O
case	O
63	int
:	O
YY_RULE_SETUP	O
return	O
NOT	int
;	O
YY_BREAK	O
case	O
64	int
:	O
YY_RULE_SETUP	O
return	O
yytext	pointer
[	O
0	int
]	O
;	O
YY_BREAK	O
case	O
65	int
:	O
YY_RULE_SETUP	O
ECHO	O
;	O
YY_BREAK	O
case	O
YY_STATE_EOF	O
(	O
INITIAL	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
STRING	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
HEREDOC	int
)	O
:	O
yyterminate	O
(	O
)	O
;	O
case	O
YY_END_OF_BUFFER	int
:	O
{	O
int	O
yy_amount_of_matched_text	int
=	O
(	O
int	O
)	O
(	O
yy_cp	pointer
-	O
yytext_ptr	O
)	O
-	O
1	int
;	O
*	O
yy_cp	pointer
=	O
yy_hold_char	char
;	O
YY_RESTORE_YY_MORE_OFFSET	O
if	O
(	O
yy_current_buffer	pointer
->	O
yy_buffer_status	int
==	O
YY_BUFFER_NEW	int
)	O
{	O
yy_n_chars	int
=	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
;	O
yy_current_buffer	pointer
->	O
yy_input_file	pointer
=	O
yyin	pointer
;	O
yy_current_buffer	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NORMAL	int
;	O
}	O
if	O
(	O
yy_c_buf_p	pointer
<=	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
]	O
)	O
{	O
yy_state_type	int
yy_next_state	int
;	O
yy_c_buf_p	pointer
=	O
yytext_ptr	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_next_state	int
=	O
yy_try_NUL_trans	function
(	O
yy_current_state	int
)	O
;	O
yy_bp	pointer
=	O
yytext_ptr	O
+	O
YY_MORE_ADJ	int
;	O
if	O
(	O
yy_next_state	int
)	O
{	O
yy_cp	pointer
=	O
++	O
yy_c_buf_p	pointer
;	O
yy_current_state	int
=	O
yy_next_state	int
;	O
goto	O
yy_match	O
;	O
}	O
else	O
{	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
goto	O
yy_find_action	O
;	O
}	O
}	O
else	O
switch	O
(	O
yy_get_next_buffer	function
(	O
)	O
)	O
{	O
case	O
EOB_ACT_END_OF_FILE	int
:	O
{	O
yy_did_buffer_switch_on_eof	int
=	O
0	int
;	O
if	O
(	O
yywrap	function
(	O
)	O
)	O
{	O
yy_c_buf_p	pointer
=	O
yytext_ptr	O
+	O
YY_MORE_ADJ	int
;	O
yy_act	int
=	O
YY_STATE_EOF	O
(	O
YY_START	O
)	O
;	O
goto	O
do_action	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
yy_did_buffer_switch_on_eof	int
)	O
YY_NEW_FILE	O
;	O
}	O
break	O
;	O
}	O
case	O
EOB_ACT_CONTINUE_SCAN	int
:	O
yy_c_buf_p	pointer
=	O
yytext_ptr	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
yy_bp	pointer
=	O
yytext_ptr	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_match	O
;	O
case	O
EOB_ACT_LAST_MATCH	int
:	O
yy_c_buf_p	pointer
=	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
]	O
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
yy_bp	pointer
=	O
yytext_ptr	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_find_action	O
;	O
}	O
break	O
;	O
}	O
default	O
:	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--no action found"	pointer
)	O
;	O
}	O
}	O
}	O
static	O
int	O
yy_get_next_buffer	function
(	O
)	O
{	O
register	O
char	O
*	O
dest	pointer
=	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
;	O
register	O
char	O
*	O
source	pointer
=	O
yytext_ptr	O
;	O
register	O
int	O
number_to_move	int
,	O
i	int
;	O
int	O
ret_val	int
;	O
if	O
(	O
yy_c_buf_p	pointer
>	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
+	O
1	int
]	O
)	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--end of buffer missed"	pointer
)	O
;	O
if	O
(	O
yy_current_buffer	pointer
->	O
yy_fill_buffer	int
==	O
0	int
)	O
{	O
if	O
(	O
yy_c_buf_p	pointer
-	O
yytext_ptr	O
-	O
YY_MORE_ADJ	int
==	O
1	int
)	O
{	O
return	O
EOB_ACT_END_OF_FILE	int
;	O
}	O
else	O
{	O
return	O
EOB_ACT_LAST_MATCH	int
;	O
}	O
}	O
number_to_move	int
=	O
(	O
int	O
)	O
(	O
yy_c_buf_p	pointer
-	O
yytext_ptr	O
)	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
number_to_move	int
;	O
++	O
i	int
)	O
*	O
(	O
dest	pointer
++	O
)	O
=	O
*	O
(	O
source	pointer
++	O
)	O
;	O
if	O
(	O
yy_current_buffer	pointer
->	O
yy_buffer_status	int
==	O
YY_BUFFER_EOF_PENDING	int
)	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
=	O
yy_n_chars	int
=	O
0	int
;	O
else	O
{	O
int	O
num_to_read	int
=	O
yy_current_buffer	pointer
->	O
yy_buf_size	int
-	O
number_to_move	int
-	O
1	int
;	O
while	O
(	O
num_to_read	int
<=	O
0	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
=	O
yy_current_buffer	pointer
;	O
int	O
yy_c_buf_p_offset	int
=	O
(	O
int	O
)	O
(	O
yy_c_buf_p	pointer
-	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
;	O
if	O
(	O
b	pointer
->	O
yy_is_our_buffer	int
)	O
{	O
int	O
new_size	int
=	O
b	pointer
->	O
yy_buf_size	int
*	O
2	int
;	O
if	O
(	O
new_size	int
<=	O
0	int
)	O
b	pointer
->	O
yy_buf_size	int
+=	O
b	pointer
->	O
yy_buf_size	int
/	O
8	int
;	O
else	O
b	pointer
->	O
yy_buf_size	int
*=	O
2	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
yy_flex_realloc	function
(	O
(	O
void	O
*	O
)	O
b	pointer
->	O
yy_ch_buf	pointer
,	O
b	pointer
->	O
yy_buf_size	int
+	O
2	int
)	O
;	O
}	O
else	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
0	int
;	O
if	O
(	O
!	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"fatal error - scanner input buffer overflow"	pointer
)	O
;	O
yy_c_buf_p	pointer
=	O
&	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
yy_c_buf_p_offset	int
]	O
;	O
num_to_read	int
=	O
yy_current_buffer	pointer
->	O
yy_buf_size	int
-	O
number_to_move	int
-	O
1	int
;	O
}	O
if	O
(	O
num_to_read	int
>	O
YY_READ_BUF_SIZE	int
)	O
num_to_read	int
=	O
YY_READ_BUF_SIZE	int
;	O
YY_INPUT	O
(	O
(	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
number_to_move	int
]	O
)	O
,	O
yy_n_chars	int
,	O
num_to_read	int
)	O
;	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
=	O
yy_n_chars	int
;	O
}	O
if	O
(	O
yy_n_chars	int
==	O
0	int
)	O
{	O
if	O
(	O
number_to_move	int
==	O
YY_MORE_ADJ	int
)	O
{	O
ret_val	int
=	O
EOB_ACT_END_OF_FILE	int
;	O
yyrestart	function
(	O
yyin	pointer
)	O
;	O
}	O
else	O
{	O
ret_val	int
=	O
EOB_ACT_LAST_MATCH	int
;	O
yy_current_buffer	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_EOF_PENDING	int
;	O
}	O
}	O
else	O
ret_val	int
=	O
EOB_ACT_CONTINUE_SCAN	int
;	O
yy_n_chars	int
+=	O
number_to_move	int
;	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
yytext_ptr	O
=	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
return	O
ret_val	int
;	O
}	O
static	O
yy_state_type	int
yy_get_previous_state	function
(	O
)	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
yy_start	int
;	O
for	O
(	O
yy_cp	pointer
=	O
yytext_ptr	O
+	O
YY_MORE_ADJ	int
;	O
yy_cp	pointer
<	O
yy_c_buf_p	pointer
;	O
++	O
yy_cp	pointer
)	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
(	O
*	O
yy_cp	pointer
?	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
:	O
1	int
)	O
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
yy_last_accepting_state	int
=	O
yy_current_state	int
;	O
yy_last_accepting_cpos	pointer
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
196	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
return	O
yy_current_state	int
;	O
}	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
(	O
yy_state_type	int
yy_current_state	int
)	O
{	O
register	O
int	O
yy_is_jam	int
;	O
register	O
char	O
*	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
register	O
YY_CHAR	char
yy_c	char
=	O
1	int
;	O
if	O
(	O
yy_accept	array
[	O
yy_current_state	int
]	O
)	O
{	O
yy_last_accepting_state	int
=	O
yy_current_state	int
;	O
yy_last_accepting_cpos	pointer
=	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
196	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
yy_is_jam	int
=	O
(	O
yy_current_state	int
==	O
195	int
)	O
;	O
return	O
yy_is_jam	int
?	O
0	int
:	O
yy_current_state	int
;	O
}	O
static	O
void	O
yyunput	function
(	O
int	O
c	pointer
,	O
register	O
char	O
*	O
yy_bp	pointer
)	O
{	O
register	O
char	O
*	O
yy_cp	pointer
=	O
yy_c_buf_p	pointer
;	O
*	O
yy_cp	pointer
=	O
yy_hold_char	char
;	O
if	O
(	O
yy_cp	pointer
<	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
+	O
2	int
)	O
{	O
register	O
int	O
number_to_move	int
=	O
yy_n_chars	int
+	O
2	int
;	O
register	O
char	O
*	O
dest	pointer
=	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_current_buffer	pointer
->	O
yy_buf_size	int
+	O
2	int
]	O
;	O
register	O
char	O
*	O
source	pointer
=	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
number_to_move	int
]	O
;	O
while	O
(	O
source	pointer
>	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
)	O
*	O
--	O
dest	pointer
=	O
*	O
--	O
source	pointer
;	O
yy_cp	pointer
+=	O
(	O
int	O
)	O
(	O
dest	pointer
-	O
source	pointer
)	O
;	O
yy_bp	pointer
+=	O
(	O
int	O
)	O
(	O
dest	pointer
-	O
source	pointer
)	O
;	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
=	O
yy_n_chars	int
=	O
yy_current_buffer	pointer
->	O
yy_buf_size	int
;	O
if	O
(	O
yy_cp	pointer
<	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
+	O
2	int
)	O
YY_FATAL_ERROR	O
(	O
"flex scanner push-back overflow"	pointer
)	O
;	O
}	O
*	O
--	O
yy_cp	pointer
=	O
(	O
char	O
)	O
c	pointer
;	O
yytext_ptr	O
=	O
yy_bp	pointer
;	O
yy_hold_char	char
=	O
*	O
yy_cp	pointer
;	O
yy_c_buf_p	pointer
=	O
yy_cp	pointer
;	O
}	O
static	O
int	O
input	struct
(	O
)	O
{	O
int	O
c	pointer
;	O
*	O
yy_c_buf_p	pointer
=	O
yy_hold_char	char
;	O
if	O
(	O
*	O
yy_c_buf_p	pointer
==	O
YY_END_OF_BUFFER_CHAR	int
)	O
{	O
if	O
(	O
yy_c_buf_p	pointer
<	O
&	O
yy_current_buffer	pointer
->	O
yy_ch_buf	pointer
[	O
yy_n_chars	int
]	O
)	O
*	O
yy_c_buf_p	pointer
=	O
'\0'	O
;	O
else	O
{	O
int	O
offset	int
=	O
yy_c_buf_p	pointer
-	O
yytext_ptr	O
;	O
++	O
yy_c_buf_p	pointer
;	O
switch	O
(	O
yy_get_next_buffer	function
(	O
)	O
)	O
{	O
case	O
EOB_ACT_LAST_MATCH	int
:	O
yyrestart	function
(	O
yyin	pointer
)	O
;	O
case	O
EOB_ACT_END_OF_FILE	int
:	O
{	O
if	O
(	O
yywrap	function
(	O
)	O
)	O
return	O
EOF	O
;	O
if	O
(	O
!	O
yy_did_buffer_switch_on_eof	int
)	O
YY_NEW_FILE	O
;	O
return	O
input	struct
(	O
)	O
;	O
}	O
case	O
EOB_ACT_CONTINUE_SCAN	int
:	O
yy_c_buf_p	pointer
=	O
yytext_ptr	O
+	O
offset	int
;	O
break	O
;	O
}	O
}	O
}	O
c	pointer
=	O
*	O
(	O
unsigned	O
char	O
*	O
)	O
yy_c_buf_p	pointer
;	O
*	O
yy_c_buf_p	pointer
=	O
'\0'	O
;	O
yy_hold_char	char
=	O
*	O
++	O
yy_c_buf_p	pointer
;	O
return	O
c	pointer
;	O
}	O
void	O
yyrestart	function
(	O
FILE	struct
*	O
input_file	pointer
)	O
{	O
if	O
(	O
!	O
yy_current_buffer	pointer
)	O
yy_current_buffer	pointer
=	O
yy_create_buffer	function
(	O
yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
yy_init_buffer	function
(	O
yy_current_buffer	pointer
,	O
input_file	pointer
)	O
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
void	O
yy_switch_to_buffer	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
{	O
if	O
(	O
yy_current_buffer	pointer
==	O
new_buffer	pointer
)	O
return	O
;	O
if	O
(	O
yy_current_buffer	pointer
)	O
{	O
*	O
yy_c_buf_p	pointer
=	O
yy_hold_char	char
;	O
yy_current_buffer	pointer
->	O
yy_buf_pos	pointer
=	O
yy_c_buf_p	pointer
;	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
=	O
yy_n_chars	int
;	O
}	O
yy_current_buffer	pointer
=	O
new_buffer	pointer
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
yy_did_buffer_switch_on_eof	int
=	O
1	int
;	O
}	O
void	O
yy_load_buffer_state	function
(	O
void	O
)	O
{	O
yy_n_chars	int
=	O
yy_current_buffer	pointer
->	O
yy_n_chars	int
;	O
yytext_ptr	O
=	O
yy_c_buf_p	pointer
=	O
yy_current_buffer	pointer
->	O
yy_buf_pos	pointer
;	O
yyin	pointer
=	O
yy_current_buffer	pointer
->	O
yy_input_file	pointer
;	O
yy_hold_char	char
=	O
*	O
yy_c_buf_p	pointer
;	O
}	O
YY_BUFFER_STATE	pointer
yy_create_buffer	function
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
yy_flex_alloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	int
=	O
size	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
yy_flex_alloc	function
(	O
b	pointer
->	O
yy_buf_size	int
+	O
2	int
)	O
;	O
if	O
(	O
!	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
yy_init_buffer	function
(	O
b	pointer
,	O
file	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
void	O
yy_delete_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
if	O
(	O
b	pointer
==	O
yy_current_buffer	pointer
)	O
yy_current_buffer	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
0	int
;	O
if	O
(	O
b	pointer
->	O
yy_is_our_buffer	int
)	O
yy_flex_free	function
(	O
(	O
void	O
*	O
)	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
;	O
yy_flex_free	function
(	O
(	O
void	O
*	O
)	O
b	pointer
)	O
;	O
}	O
void	O
yy_init_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
{	O
yy_flush_buffer	function
(	O
b	pointer
)	O
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
file	pointer
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
1	int
;	O
b	pointer
->	O
yy_is_interactive	int
=	O
file	pointer
?	O
(	O
isatty	function
(	O
fileno	function
(	O
file	pointer
)	O
)	O
>	O
0	int
)	O
:	O
0	int
;	O
}	O
void	O
yy_flush_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
b	pointer
->	O
yy_n_chars	int
=	O
0	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
&	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
if	O
(	O
b	pointer
==	O
yy_current_buffer	pointer
)	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_buffer	function
(	O
char	O
*	O
base	pointer
,	O
yy_size_t	int
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
if	O
(	O
size	int
<	O
2	int
||	O
base	pointer
[	O
size	int
-	O
2	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
||	O
base	pointer
[	O
size	int
-	O
1	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
)	O
return	O
0	int
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
yy_flex_alloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_scan_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	int
=	O
size	int
-	O
2	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
base	pointer
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
0	int
;	O
b	pointer
->	O
yy_n_chars	int
=	O
b	pointer
->	O
yy_buf_size	int
;	O
b	pointer
->	O
yy_is_interactive	int
=	O
0	int
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
yy_switch_to_buffer	function
(	O
b	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_string	function
(	O
yyconst	O
char	O
*	O
yy_str	pointer
)	O
{	O
int	O
len	int
;	O
for	O
(	O
len	int
=	O
0	int
;	O
yy_str	pointer
[	O
len	int
]	O
;	O
++	O
len	int
)	O
;	O
return	O
yy_scan_bytes	function
(	O
yy_str	pointer
,	O
len	int
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_bytes	function
(	O
yyconst	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
char	O
*	O
buf	pointer
;	O
yy_size_t	int
n	long
;	O
int	O
i	int
;	O
n	long
=	O
len	int
+	O
2	int
;	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
yy_flex_alloc	function
(	O
n	long
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_scan_bytes()"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
++	O
i	int
)	O
buf	pointer
[	O
i	int
]	O
=	O
bytes	pointer
[	O
i	int
]	O
;	O
buf	pointer
[	O
len	int
]	O
=	O
buf	pointer
[	O
len	int
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
=	O
yy_scan_buffer	function
(	O
buf	pointer
,	O
n	long
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"bad buffer in yy_scan_bytes()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
return	O
b	pointer
;	O
}	O
static	O
void	O
yy_fatal_error	function
(	O
yyconst	O
char	O
msg	array
[	O
]	O
)	O
{	O
(	O
void	O
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s\n"	pointer
,	O
msg	array
)	O
;	O
exit	function
(	O
YY_EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
*	O
yy_flex_alloc	function
(	O
yy_size_t	int
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
malloc	function
(	O
size	int
)	O
;	O
}	O
static	O
void	O
*	O
yy_flex_realloc	function
(	O
void	O
*	O
ptr	pointer
,	O
yy_size_t	int
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
realloc	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
,	O
size	int
)	O
;	O
}	O
static	O
void	O
yy_flex_free	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
int	O
yywrap	function
(	O
)	O
{	O
if	O
(	O
YYSTATE	O
==	O
STRING	int
)	O
parse_error	function
(	O
_	O
(	O
"Unexpected end of file in string started on line %lu"	pointer
)	O
,	O
string_start_line	long
)	O
;	O
else	O
if	O
(	O
YYSTATE	O
==	O
HEREDOC	int
)	O
parse_error	function
(	O
_	O
(	O
"Unexpected end of file in multiline string started on line %lu"	pointer
)	O
,	O
string_start_line	long
)	O
;	O
grad_write_history_file	function
(	O
)	O
;	O
return	O
1	int
;	O
}	O
int	O
open_input	function
(	O
char	O
*	O
name	pointer
)	O
{	O
FILE	struct
*	O
fp	pointer
;	O
obstack_init	O
(	O
&	O
string_stk	struct
)	O
;	O
if	O
(	O
name	pointer
&&	O
strcmp	function
(	O
name	pointer
,	O
"-"	pointer
)	O
)	O
{	O
source_locus	struct
.	O
file	pointer
=	O
name	pointer
;	O
fp	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
grad_log	function
(	O
GRAD_LOG_ERR	int
|	O
GRAD_LOG_PERROR	int
,	O
_	O
(	O
"can't open input file `%s'"	pointer
)	O
,	O
name	pointer
)	O
;	O
return	O
1	int
;	O
}	O
}	O
else	O
{	O
source_locus	struct
.	O
file	pointer
=	O
"<teletype>"	pointer
;	O
fp	pointer
=	O
stdin	pointer
;	O
}	O
interactive	int
=	O
isatty	function
(	O
fileno	function
(	O
fp	pointer
)	O
)	O
;	O
grad_readline_init	function
(	O
"radtest"	pointer
,	O
interactive	int
,	O
radtest_command_completion	function
)	O
;	O
if	O
(	O
interactive	int
)	O
grad_readline_set_input	function
(	O
fp	pointer
)	O
;	O
grad_read_history_file	function
(	O
)	O
;	O
source_locus	struct
.	O
line	long
=	O
1	int
;	O
yyrestart	function
(	O
fp	pointer
)	O
;	O
return	O
0	int
;	O
}	O
void	O
close_input	function
(	O
)	O
{	O
yy_delete_buffer	function
(	O
yy_current_buffer	pointer
)	O
;	O
fclose	function
(	O
yyin	pointer
)	O
;	O
yyin	pointer
=	O
NULL	O
;	O
obstack_free	function
(	O
&	O
string_stk	struct
,	O
NULL	O
)	O
;	O
}	O
void	O
add_num	function
(	O
int	O
skip	int
,	O
int	O
base	pointer
,	O
char	O
*	O
text	pointer
,	O
int	O
leng	int
)	O
{	O
int	O
n	long
;	O
n	long
=	O
1	int
;	O
while	O
(	O
leng	int
-	O
n	long
>	O
0	int
&&	O
text	pointer
[	O
leng	int
-	O
n	long
]	O
!=	O
'\\'	O
)	O
n	long
++	O
;	O
add_str	function
(	O
text	pointer
,	O
leng	int
-	O
n	long
)	O
;	O
n	long
-=	O
skip	int
;	O
add_chr	function
(	O
strtol	function
(	O
&	O
text	pointer
[	O
leng	int
-	O
n	long
+	O
1	int
]	O
,	O
NULL	O
,	O
base	pointer
)	O
)	O
;	O
}	O
void	O
begin_str	function
(	O
)	O
{	O
string_len	long
=	O
0	int
;	O
binary_string	int
=	O
0	int
;	O
}	O
void	O
add_str	function
(	O
char	O
*	O
str	pointer
,	O
int	O
len	int
)	O
{	O
obstack_grow	O
(	O
&	O
string_stk	struct
,	O
str	pointer
,	O
len	int
)	O
;	O
string_len	long
+=	O
len	int
;	O
}	O
void	O
add_chr	function
(	O
int	O
c	pointer
)	O
{	O
obstack_1grow	O
(	O
&	O
string_stk	struct
,	O
c	pointer
)	O
;	O
string_len	long
++	O
;	O
if	O
(	O
c	pointer
==	O
0	int
)	O
binary_string	int
++	O
;	O
}	O
char	O
*	O
end_str	function
(	O
)	O
{	O
obstack_1grow	O
(	O
&	O
string_stk	struct
,	O
0	int
)	O
;	O
return	O
obstack_finish	O
(	O
&	O
string_stk	struct
)	O
;	O
}	O
int	O
backspace	function
(	O
int	O
c	pointer
)	O
{	O
switch	O
(	O
c	pointer
)	O
{	O
case	O
'\\'	O
:	O
return	O
'\\'	O
;	O
case	O
'a'	O
:	O
return	O
'\a'	O
;	O
case	O
'b'	O
:	O
return	O
'\b'	O
;	O
case	O
'f'	O
:	O
return	O
'\f'	O
;	O
case	O
'n'	O
:	O
return	O
'\n'	O
;	O
case	O
'r'	O
:	O
return	O
'\r'	O
;	O
case	O
't'	O
:	O
return	O
'\t'	O
;	O
case	O
'e'	O
:	O
return	O
'\033'	O
;	O
}	O
return	O
c	pointer
;	O
}	O
void	O
radtest_start_string	function
(	O
char	O
*	O
str	pointer
)	O
{	O
add_str	function
(	O
str	pointer
,	O
strlen	function
(	O
str	pointer
)	O
)	O
;	O
}	O
void	O
radtest_add_string	function
(	O
char	O
*	O
str	pointer
)	O
{	O
add_str	function
(	O
str	pointer
,	O
strlen	function
(	O
str	pointer
)	O
)	O
;	O
}	O
char	O
*	O
radtest_end_string	function
(	O
)	O
{	O
return	O
end_str	function
(	O
)	O
;	O
}	O
void	O
radtest_free_strings	function
(	O
)	O
{	O
obstack_free	function
(	O
&	O
string_stk	struct
,	O
NULL	O
)	O
;	O
obstack_init	O
(	O
&	O
string_stk	struct
)	O
;	O
}	O
void	O
radtest_fix_strings	function
(	O
)	O
{	O
obstack_init	O
(	O
&	O
string_stk	struct
)	O
;	O
}	O
static	O
int	O
isemptystr	function
(	O
char	O
*	O
text	pointer
)	O
{	O
for	O
(	O
;	O
*	O
text	pointer
&&	O
isspace	function
(	O
*	O
text	pointer
)	O
;	O
text	pointer
++	O
)	O
;	O
return	O
*	O
text	pointer
==	O
0	int
;	O
}	O
static	O
char	O
*	O
heredoc_strip_tabs	function
(	O
char	O
*	O
text	pointer
)	O
{	O
if	O
(	O
strip_tabs	int
)	O
for	O
(	O
;	O
*	O
text	pointer
==	O
'\t'	O
;	O
text	pointer
++	O
)	O
;	O
return	O
text	pointer
;	O
}	O
static	O
void	O
heredoc_begin	function
(	O
)	O
{	O
char	O
*	O
p	pointer
=	O
yytext	pointer
+	O
2	int
;	O
if	O
(	O
*	O
p	pointer
==	O
'-'	O
)	O
{	O
strip_tabs	int
=	O
1	int
;	O
p	pointer
++	O
;	O
}	O
else	O
strip_tabs	int
=	O
0	int
;	O
if	O
(	O
!	O
isspace	function
(	O
*	O
p	pointer
)	O
)	O
{	O
char	O
*	O
endp	pointer
;	O
int	O
len	int
;	O
for	O
(	O
endp	pointer
=	O
p	pointer
;	O
*	O
endp	pointer
;	O
endp	pointer
++	O
)	O
if	O
(	O
isspace	function
(	O
*	O
endp	pointer
)	O
)	O
break	O
;	O
len	int
=	O
endp	pointer
-	O
p	pointer
;	O
heredoc_delimiter	pointer
=	O
grad_emalloc	function
(	O
len	int
+	O
1	int
)	O
;	O
memcpy	function
(	O
heredoc_delimiter	pointer
,	O
p	pointer
,	O
len	int
)	O
;	O
heredoc_delimiter	pointer
[	O
len	int
]	O
=	O
0	int
;	O
}	O
else	O
{	O
heredoc_delimiter	pointer
=	O
grad_estrdup	function
(	O
"."	pointer
)	O
;	O
}	O
}	O
