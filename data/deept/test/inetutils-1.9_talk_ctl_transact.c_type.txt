int	O
ctl_transact	function
(	O
struct	O
in_addr	struct
target	pointer
,	O
CTL_MSG	struct
msg	struct
,	O
int	O
type	int
,	O
CTL_RESPONSE	struct
*	O
rp	pointer
)	O
{	O
int	O
nready	int
,	O
cc	int
;	O
fd_set	struct
read_mask	struct
,	O
ctl_mask	int
;	O
struct	O
timeval	struct
wait	struct
;	O
msg	struct
.	O
type	int
=	O
type	int
;	O
daemon_addr	struct
.	O
sin_addr	struct
=	O
target	pointer
;	O
daemon_addr	struct
.	O
sin_port	bool
=	O
daemon_port	int
;	O
FD_ZERO	O
(	O
&	O
ctl_mask	struct
)	O
;	O
FD_SET	O
(	O
ctl_sockt	int
,	O
&	O
ctl_mask	struct
)	O
;	O
do	O
{	O
wait	struct
.	O
tv_sec	long
=	O
CTL_WAIT	int
;	O
wait	struct
.	O
tv_usec	long
=	O
0	int
;	O
do	O
{	O
cc	int
=	O
sendto	function
(	O
ctl_sockt	int
,	O
(	O
char	O
*	O
)	O
&	O
msg	struct
,	O
sizeof	O
(	O
msg	pointer
)	O
,	O
0	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
daemon_addr	struct
,	O
sizeof	O
(	O
daemon_addr	struct
)	O
)	O
;	O
if	O
(	O
cc	int
!=	O
sizeof	O
(	O
msg	struct
)	O
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
p_error	function
(	O
"Error on write to talk daemon"	pointer
)	O
;	O
}	O
read_mask	int
=	O
ctl_mask	int
;	O
nready	pointer
=	O
select	function
(	O
32	int
,	O
&	O
read_mask	int
,	O
0	int
,	O
0	int
,	O
&	O
wait	struct
)	O
;	O
if	O
(	O
nready	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
p_error	function
(	O
"Error waiting for daemon response"	pointer
)	O
;	O
}	O
}	O
while	O
(	O
nready	int
==	O
0	int
)	O
;	O
do	O
{	O
cc	pointer
=	O
recv	function
(	O
ctl_sockt	int
,	O
(	O
char	O
*	O
)	O
rp	pointer
,	O
sizeof	O
(	O
*	O
rp	pointer
)	O
,	O
0	int
)	O
;	O
if	O
(	O
cc	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
p_error	function
(	O
"Error on read from talk daemon"	pointer
)	O
;	O
}	O
read_mask	int
=	O
ctl_mask	pointer
;	O
timerclear	O
(	O
&	O
wait	struct
)	O
;	O
nready	pointer
=	O
select	function
(	O
32	int
,	O
&	O
read_mask	int
,	O
0	int
,	O
0	int
,	O
&	O
wait	struct
)	O
;	O
}	O
while	O
(	O
nready	int
>	O
0	int
&&	O
(	O
rp	pointer
->	O
vers	int
!=	O
TALK_VERSION	int
||	O
rp	pointer
->	O
type	int
!=	O
type	int
)	O
)	O
;	O
}	O
while	O
(	O
rp	pointer
->	O
vers	int
!=	O
TALK_VERSION	int
||	O
rp	pointer
->	O
type	int
!=	O
type	int
)	O
;	O
rp	pointer
->	O
id_num	int
=	O
ntohl	function
(	O
rp	pointer
->	O
id_num	int
)	O
;	O
rp	pointer
->	O
addr	struct
.	O
sa_family	enum
=	O
ntohs	function
(	O
rp	pointer
->	O
addr	struct
.	O
sa_family	enum
)	O
;	O
return	O
0	int
;	O
}	O