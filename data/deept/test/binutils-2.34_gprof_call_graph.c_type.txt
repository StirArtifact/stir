void	O
cg_tally	function
(	O
bfd_vma	long
from_pc	long
,	O
bfd_vma	long
self_pc	long
,	O
unsigned	O
long	O
count	long
)	O
{	O
Sym	struct
*	O
parent	pointer
;	O
Sym	struct
*	O
child	struct
;	O
parent	pointer
=	O
sym_lookup	function
(	O
&	O
symtab	pointer
,	O
from_pc	pointer
)	O
;	O
child	int
=	O
sym_lookup	function
(	O
&	O
symtab	pointer
,	O
self_pc	pointer
)	O
;	O
if	O
(	O
child	int
==	O
NULL	O
||	O
parent	pointer
==	O
NULL	O
)	O
return	O
;	O
while	O
(	O
child	int
>=	O
symtab	struct
.	O
base	int
&&	O
!	O
child	int
->	O
is_func	int
)	O
--	O
child	int
;	O
if	O
(	O
child	int
<	O
symtab	pointer
.	O
base	int
)	O
return	O
;	O
if	O
(	O
sym_id_arc_is_present	function
(	O
&	O
syms	pointer
[	O
INCL_ARCS	int
]	O
,	O
parent	pointer
,	O
child	int
)	O
||	O
(	O
syms	array
[	O
INCL_ARCS	int
]	O
.	O
len	long
==	O
0	int
&&	O
!	O
sym_id_arc_is_present	function
(	O
&	O
syms	pointer
[	O
EXCL_ARCS	int
]	O
,	O
parent	pointer
,	O
child	int
)	O
)	O
)	O
{	O
child	int
->	O
ncalls	int
+=	O
count	long
;	O
DBG	O
(	O
TALLYDEBUG	pointer
,	O
printf	function
(	O
_	O
(	O
"[cg_tally] arc from %s to %s traversed %lu times\n"	pointer
)	O
,	O
parent	pointer
->	O
name	pointer
,	O
child	int
->	O
name	pointer
,	O
count	long
)	O
)	O
;	O
arc_add	function
(	O
parent	pointer
,	O
child	int
,	O
count	long
)	O
;	O
}	O
}	O
void	O
cg_read_rec	function
(	O
FILE	struct
*	O
ifp	pointer
,	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
bfd_vma	long
from_pc	long
,	O
self_pc	int
;	O
unsigned	O
int	O
count	long
;	O
if	O
(	O
gmon_io_read_vma	function
(	O
ifp	pointer
,	O
&	O
from_pc	struct
)	O
||	O
gmon_io_read_vma	function
(	O
ifp	pointer
,	O
&	O
self_pc	struct
)	O
||	O
gmon_io_read_32	function
(	O
ifp	pointer
,	O
&	O
count	long
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"%s: %s: unexpected end of file\n"	pointer
)	O
,	O
whoami	pointer
,	O
filename	pointer
)	O
;	O
done	O
(	O
1	int
)	O
;	O
}	O
DBG	O
(	O
SAMPLEDEBUG	pointer
,	O
printf	function
(	O
"[cg_read_rec] frompc 0x%lx selfpc 0x%lx count %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
from_pc	long
,	O
(	O
unsigned	O
long	O
)	O
self_pc	int
,	O
(	O
unsigned	O
long	O
)	O
count	long
)	O
)	O
;	O
cg_tally	function
(	O
from_pc	pointer
,	O
self_pc	pointer
,	O
count	long
)	O
;	O
}	O
void	O
cg_write_arcs	function
(	O
FILE	struct
*	O
ofp	pointer
,	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
Arc	struct
*	O
arc	struct
;	O
Sym	struct
*	O
sym	pointer
;	O
for	O
(	O
sym	pointer
=	O
symtab	pointer
.	O
base	int
;	O
sym	int
<	O
symtab	struct
.	O
limit	long
;	O
sym	pointer
++	O
)	O
{	O
for	O
(	O
arc	struct
=	O
sym	pointer
->	O
cg	struct
.	O
children	struct
;	O
arc	struct
;	O
arc	struct
=	O
arc	struct
->	O
next_child	pointer
)	O
{	O
if	O
(	O
gmon_io_write_8	function
(	O
ofp	pointer
,	O
GMON_TAG_CG_ARC	pointer
)	O
||	O
gmon_io_write_vma	function
(	O
ofp	pointer
,	O
arc	struct
->	O
parent	pointer
->	O
addr	struct
)	O
||	O
gmon_io_write_vma	function
(	O
ofp	pointer
,	O
arc	struct
->	O
child	int
->	O
addr	struct
)	O
||	O
gmon_io_write_32	function
(	O
ofp	pointer
,	O
arc	struct
->	O
count	long
)	O
)	O
{	O
perror	function
(	O
filename	pointer
)	O
;	O
done	O
(	O
1	int
)	O
;	O
}	O
DBG	O
(	O
SAMPLEDEBUG	pointer
,	O
printf	function
(	O
"[cg_write_arcs] frompc 0x%lx selfpc 0x%lx count %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
arc	struct
->	O
parent	pointer
->	O
addr	pointer
,	O
(	O
unsigned	O
long	O
)	O
arc	struct
->	O
child	int
->	O
addr	pointer
,	O
arc	struct
->	O
count	long
)	O
)	O
;	O
}	O
}	O
}	O