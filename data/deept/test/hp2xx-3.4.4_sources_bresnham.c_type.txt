static	O
struct	O
{	O
DevPt	struct
p_act	struct
;	O
int	O
dx	int
,	O
dy	int
,	O
s1	double
,	O
s2	double
,	O
swapdir	int
,	O
err	int
,	O
count	int
;	O
}	O
bres	struct
;	O
DevPt	struct
*	O
bresenham_init	function
(	O
DevPt	struct
*	O
pp1	pointer
,	O
DevPt	struct
*	O
pp2	pointer
)	O
{	O
bres	struct
.	O
p_act	int
=	O
*	O
pp1	pointer
;	O
if	O
(	O
(	O
bres	struct
.	O
dx	pointer
=	O
pp2	pointer
->	O
x	double
-	O
pp1	int
->	O
x	double
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
bres	struct
.	O
dx	int
<	O
0	int
)	O
{	O
bres	struct
.	O
dx	pointer
=	O
-	O
bres	struct
.	O
dx	pointer
;	O
bres	struct
.	O
s1	pointer
=	O
-	O
1	int
;	O
}	O
else	O
bres	struct
.	O
s1	pointer
=	O
1	int
;	O
}	O
else	O
bres	struct
.	O
s1	pointer
=	O
0	int
;	O
if	O
(	O
(	O
bres	struct
.	O
dy	int
=	O
pp2	int
->	O
y	int
-	O
pp1	int
->	O
y	double
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
bres	struct
.	O
dy	int
<	O
0	int
)	O
{	O
bres	struct
.	O
dy	double
=	O
-	O
bres	struct
.	O
dy	int
;	O
bres	struct
.	O
s2	double
=	O
-	O
1	int
;	O
}	O
else	O
bres	struct
.	O
s2	double
=	O
1	int
;	O
}	O
else	O
bres	struct
.	O
s2	double
=	O
0	int
;	O
if	O
(	O
bres	struct
.	O
dy	int
>	O
bres	struct
.	O
dx	pointer
)	O
{	O
bres	struct
.	O
swapdir	int
=	O
bres	struct
.	O
dx	pointer
;	O
bres	struct
.	O
dx	pointer
=	O
bres	struct
.	O
dy	int
;	O
bres	struct
.	O
dy	int
=	O
bres	struct
.	O
swapdir	int
;	O
bres	struct
.	O
swapdir	int
=	O
1	int
;	O
}	O
else	O
bres	struct
.	O
swapdir	int
=	O
0	int
;	O
bres	struct
.	O
count	int
=	O
bres	struct
.	O
dx	pointer
;	O
bres	struct
.	O
dy	int
<<=	O
1	int
;	O
bres	struct
.	O
err	int
=	O
bres	struct
.	O
dy	int
-	O
bres	struct
.	O
dx	pointer
;	O
bres	struct
.	O
dx	int
<<=	O
1	int
;	O
return	O
&	O
bres	struct
.	O
p_act	int
;	O
}	O
int	O
bresenham_next	function
(	O
void	O
)	O
{	O
if	O
(	O
bres	struct
.	O
count	int
<=	O
0	int
)	O
return	O
(	O
BRESENHAM_ERR	pointer
)	O
;	O
while	O
(	O
bres	struct
.	O
err	int
>=	O
0	int
)	O
{	O
if	O
(	O
bres	struct
.	O
swapdir	int
)	O
bres	struct
.	O
p_act	struct
.	O
x	double
+=	O
bres	struct
.	O
s1	pointer
;	O
else	O
bres	struct
.	O
p_act	struct
.	O
y	int
+=	O
bres	struct
.	O
s2	pointer
;	O
bres	struct
.	O
err	int
-=	O
bres	struct
.	O
dx	pointer
;	O
}	O
if	O
(	O
bres	struct
.	O
swapdir	int
)	O
bres	struct
.	O
p_act	struct
.	O
y	int
+=	O
bres	struct
.	O
s2	double
;	O
else	O
bres	struct
.	O
p_act	struct
.	O
x	double
+=	O
bres	struct
.	O
s1	pointer
;	O
bres	struct
.	O
err	int
+=	O
bres	struct
.	O
dy	int
;	O
bres	struct
.	O
count	int
--	O
;	O
return	O
(	O
(	O
bres	struct
.	O
count	int
)	O
?	O
0	int
:	O
BRESENHAM_EOL	int
)	O
;	O
}	O