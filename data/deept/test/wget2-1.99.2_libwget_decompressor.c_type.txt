typedef	O
int	O
wget_decompressor_decompress_fn	function
(	O
wget_decompressor	struct
*	O
dc	pointer
,	O
char	O
*	O
src	pointer
,	O
size_t	long
srclen	long
)	O
;	O
typedef	O
void	O
wget_decompressor_exit_fn	function
(	O
wget_decompressor	struct
*	O
dc	pointer
)	O
;	O
struct	O
wget_decompressor_st	struct
{	O
z_stream	struct
z_strm	struct
;	O
wget_decompressor_sink_fn	struct
*	O
sink	pointer
;	O
wget_decompressor_error_handler	struct
*	O
error_handler	pointer
;	O
wget_decompressor_decompress_fn	struct
*	O
decompress	pointer
;	O
wget_decompressor_exit_fn	struct
*	O
exit	pointer
;	O
void	O
*	O
context	pointer
;	O
wget_content_encoding	pointer
encoding	pointer
;	O
}	O
;	O
static	O
int	O
gzip_init	function
(	O
z_stream	struct
*	O
strm	pointer
)	O
{	O
memset	function
(	O
strm	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
strm	pointer
)	O
)	O
;	O
if	O
(	O
inflateInit2	function
(	O
strm	pointer
,	O
15	int
+	O
32	int
)	O
!=	O
Z_OK	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to init gzip decompression\n"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
gzip_decompress	function
(	O
wget_decompressor	struct
*	O
dc	pointer
,	O
char	O
*	O
src	pointer
,	O
size_t	long
srclen	long
)	O
{	O
z_stream	struct
*	O
strm	pointer
;	O
char	O
dst	pointer
[	O
10240	int
]	O
;	O
int	O
status	int
;	O
if	O
(	O
!	O
srclen	long
)	O
{	O
if	O
(	O
dc	pointer
->	O
sink	pointer
)	O
dc	pointer
->	O
sink	function
(	O
dc	pointer
->	O
context	pointer
,	O
""	pointer
,	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
strm	pointer
=	O
&	O
dc	pointer
->	O
z_strm	pointer
;	O
strm	pointer
->	O
next_in	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
src	pointer
;	O
strm	pointer
->	O
avail_in	int
=	O
(	O
unsigned	O
int	O
)	O
srclen	long
;	O
do	O
{	O
strm	pointer
->	O
next_out	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
dst	pointer
;	O
strm	pointer
->	O
avail_out	int
=	O
sizeof	O
(	O
dst	pointer
)	O
;	O
status	int
=	O
inflate	function
(	O
strm	pointer
,	O
Z_SYNC_FLUSH	int
)	O
;	O
if	O
(	O
(	O
status	int
==	O
Z_OK	int
||	O
status	int
==	O
Z_STREAM_END	int
)	O
&&	O
strm	pointer
->	O
avail_out	int
<	O
sizeof	O
(	O
dst	pointer
)	O
)	O
{	O
if	O
(	O
dc	pointer
->	O
sink	pointer
)	O
dc	pointer
->	O
sink	function
(	O
dc	pointer
->	O
context	pointer
,	O
dst	pointer
,	O
sizeof	O
(	O
dst	pointer
)	O
-	O
strm	pointer
->	O
avail_out	int
)	O
;	O
}	O
}	O
while	O
(	O
status	int
==	O
Z_OK	int
&&	O
!	O
strm	pointer
->	O
avail_out	int
)	O
;	O
if	O
(	O
status	int
==	O
Z_OK	int
||	O
status	int
==	O
Z_STREAM_END	int
)	O
return	O
0	int
;	O
error_printf	O
(	O
_	O
(	O
"Failed to uncompress gzip stream (%d)\n"	pointer
)	O
,	O
status	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
static	O
void	O
gzip_exit	function
(	O
wget_decompressor	struct
*	O
dc	pointer
)	O
{	O
int	O
status	int
;	O
if	O
(	O
(	O
status	int
=	O
inflateEnd	function
(	O
&	O
dc	struct
->	O
z_strm	pointer
)	O
)	O
!=	O
Z_OK	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to close gzip stream (%d)\n"	pointer
)	O
,	O
status	int
)	O
;	O
}	O
}	O
static	O
int	O
deflate_init	function
(	O
z_stream	struct
*	O
strm	pointer
)	O
{	O
memset	function
(	O
strm	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
strm	pointer
)	O
)	O
;	O
if	O
(	O
inflateInit	O
(	O
strm	pointer
)	O
!=	O
Z_OK	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to init deflate decompression\n"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
identity	function
(	O
wget_decompressor	struct
*	O
dc	pointer
,	O
char	O
*	O
src	pointer
,	O
size_t	long
srclen	long
)	O
{	O
if	O
(	O
dc	pointer
->	O
sink	pointer
)	O
dc	pointer
->	O
sink	function
(	O
dc	pointer
->	O
context	pointer
,	O
src	pointer
,	O
srclen	long
)	O
;	O
return	O
0	int
;	O
}	O
wget_decompressor	struct
*	O
wget_decompress_open	function
(	O
wget_content_encoding	pointer
encoding	pointer
,	O
wget_decompressor_sink_fn	struct
*	O
sink	pointer
,	O
void	O
*	O
context	pointer
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
wget_decompressor	int
*	O
dc	pointer
=	O
wget_calloc	function
(	O
1	int
,	O
sizeof	O
(	O
wget_decompressor	pointer
)	O
)	O
;	O
if	O
(	O
!	O
dc	pointer
)	O
return	O
NULL	O
;	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_gzip	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
gzip_init	function
(	O
&	O
dc	pointer
->	O
z_strm	pointer
)	O
)	O
==	O
0	int
)	O
{	O
dc	pointer
->	O
decompress	int
=	O
gzip_decompress	int
;	O
dc	pointer
->	O
exit	long
=	O
gzip_exit	int
;	O
}	O
}	O
else	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_deflate	int
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
deflate_init	function
(	O
&	O
dc	struct
->	O
z_strm	pointer
)	O
)	O
==	O
0	int
)	O
{	O
dc	pointer
->	O
decompress	int
=	O
gzip_decompress	int
;	O
dc	pointer
->	O
exit	long
=	O
gzip_exit	int
;	O
}	O
}	O
else	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_bzip2	pointer
)	O
{	O
}	O
else	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_lzma	pointer
)	O
{	O
}	O
else	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_brotli	pointer
)	O
{	O
}	O
else	O
if	O
(	O
encoding	pointer
==	O
wget_content_encoding_zstd	pointer
)	O
{	O
}	O
if	O
(	O
!	O
dc	pointer
->	O
decompress	pointer
)	O
{	O
debug_printf	O
(	O
"Falling back to Content-Encoding 'identity'\n"	pointer
)	O
;	O
dc	pointer
->	O
decompress	int
=	O
identity	int
;	O
}	O
if	O
(	O
rc	int
)	O
{	O
xfree	function
(	O
dc	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
dc	pointer
->	O
encoding	pointer
=	O
encoding	pointer
;	O
dc	pointer
->	O
sink	int
=	O
sink	int
;	O
dc	pointer
->	O
context	pointer
=	O
context	pointer
;	O
return	O
dc	pointer
;	O
}	O
void	O
wget_decompress_close	function
(	O
wget_decompressor	struct
*	O
dc	pointer
)	O
{	O
if	O
(	O
dc	pointer
)	O
{	O
if	O
(	O
dc	pointer
->	O
exit	long
)	O
dc	pointer
->	O
exit	function
(	O
dc	pointer
)	O
;	O
xfree	function
(	O
dc	pointer
)	O
;	O
}	O
}	O
int	O
wget_decompress	function
(	O
wget_decompressor	struct
*	O
dc	pointer
,	O
char	O
*	O
src	pointer
,	O
size_t	long
srclen	long
)	O
{	O
if	O
(	O
dc	pointer
)	O
{	O
int	O
rc	int
=	O
dc	pointer
->	O
decompress	function
(	O
dc	pointer
,	O
src	pointer
,	O
srclen	long
)	O
;	O
if	O
(	O
rc	int
&&	O
dc	pointer
->	O
error_handler	pointer
)	O
dc	pointer
->	O
error_handler	function
(	O
dc	pointer
,	O
rc	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
wget_decompress_set_error_handler	function
(	O
wget_decompressor	struct
*	O
dc	pointer
,	O
wget_decompressor_error_handler	struct
*	O
error_handler	pointer
)	O
{	O
if	O
(	O
dc	pointer
)	O
dc	pointer
->	O
error_handler	pointer
=	O
error_handler	pointer
;	O
}	O
void	O
*	O
wget_decompress_get_context	function
(	O
wget_decompressor	struct
*	O
dc	pointer
)	O
{	O
return	O
dc	int
?	O
dc	pointer
->	O
context	pointer
:	O
NULL	O
;	O
}	O
static	O
char	O
_encoding_names	array
[	O
wget_content_encoding_max	int
]	O
[	O
9	int
]	O
=	O
{	O
[	O
wget_content_encoding_identity	int
]	O
=	O
"identity"	pointer
,	O
[	O
wget_content_encoding_gzip	int
]	O
=	O
"gzip"	pointer
,	O
[	O
wget_content_encoding_deflate	int
]	O
=	O
"deflate"	pointer
,	O
[	O
wget_content_encoding_xz	int
]	O
=	O
"xz"	pointer
,	O
[	O
wget_content_encoding_lzma	int
]	O
=	O
"lzma"	pointer
,	O
[	O
wget_content_encoding_bzip2	int
]	O
=	O
"bzip2"	pointer
,	O
[	O
wget_content_encoding_brotli	int
]	O
=	O
"br"	pointer
,	O
[	O
wget_content_encoding_zstd	int
]	O
=	O
"zstd"	int
,	O
}	O
;	O
wget_content_encoding	pointer
wget_content_encoding_by_name	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
if	O
(	O
name	pointer
)	O
{	O
for	O
(	O
wget_content_encoding	int
it	long
=	O
0	int
;	O
it	long
<	O
wget_content_encoding_max	int
;	O
it	long
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	function
(	O
_encoding_names	pointer
[	O
it	long
]	O
,	O
name	pointer
)	O
)	O
return	O
it	long
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
"none"	pointer
,	O
name	pointer
)	O
)	O
return	O
wget_content_encoding_identity	int
;	O
}	O
return	O
wget_content_encoding_unknown	pointer
;	O
}	O
const	O
char	O
*	O
wget_content_encoding_to_name	function
(	O
wget_content_encoding	int
type	O
)	O
{	O
if	O
(	O
type	enum
>=	O
0	int
&&	O
type	int
<	O
wget_content_encoding_max	int
)	O
return	O
_encoding_names	array
[	O
type	int
]	O
;	O
return	O
NULL	O
;	O
}	O