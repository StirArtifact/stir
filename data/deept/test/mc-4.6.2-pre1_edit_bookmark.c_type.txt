static	O
inline	O
struct	O
_book_mark	struct
*	O
double_marks	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
struct	O
_book_mark	struct
*	O
p	pointer
)	O
{	O
(	O
void	O
)	O
edit	int
;	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
while	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
==	O
p	pointer
->	O
line	pointer
)	O
p	pointer
=	O
p	pointer
->	O
next	pointer
;	O
return	O
p	pointer
;	O
}	O
struct	O
_book_mark	struct
*	O
book_mark_find	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	pointer
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	int
)	O
{	O
edit	pointer
->	O
book_mark	int
=	O
g_malloc0	function
(	O
sizeof	O
(	O
struct	O
_book_mark	struct
)	O
)	O
;	O
edit	pointer
->	O
book_mark	pointer
->	O
line	pointer
=	O
-	O
1	int
;	O
return	O
edit	pointer
->	O
book_mark	int
;	O
}	O
for	O
(	O
p	pointer
=	O
edit	pointer
->	O
book_mark	int
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
line	pointer
>	O
line	pointer
)	O
break	O
;	O
if	O
(	O
p	pointer
->	O
line	pointer
<=	O
line	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
>	O
line	pointer
)	O
{	O
edit	pointer
->	O
book_mark	int
=	O
p	pointer
;	O
return	O
double_marks	function
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
else	O
{	O
edit	pointer
->	O
book_mark	int
=	O
p	pointer
;	O
return	O
double_marks	function
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
}	O
for	O
(	O
p	pointer
=	O
edit	pointer
->	O
book_mark	int
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
prev	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
if	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
<=	O
line	pointer
)	O
break	O
;	O
if	O
(	O
p	pointer
->	O
line	pointer
<=	O
line	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
next	pointer
->	O
line	pointer
>	O
line	pointer
)	O
{	O
edit	pointer
->	O
book_mark	int
=	O
p	pointer
;	O
return	O
double_marks	function
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
else	O
{	O
edit	pointer
->	O
book_mark	int
=	O
p	pointer
;	O
return	O
double_marks	function
(	O
edit	pointer
,	O
p	pointer
)	O
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
book_mark_query_color	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
)	O
return	O
0	int
;	O
for	O
(	O
p	pointer
=	O
book_mark_find	function
(	O
edit	pointer
,	O
line	pointer
)	O
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
prev	pointer
)	O
{	O
if	O
(	O
p	pointer
->	O
line	pointer
!=	O
line	pointer
)	O
return	O
0	int
;	O
if	O
(	O
p	pointer
->	O
c	int
==	O
c	int
)	O
return	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
book_mark_insert	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
p	pointer
=	O
book_mark_find	function
(	O
edit	pointer
,	O
line	pointer
)	O
;	O
edit	pointer
->	O
force	bool
|=	O
REDRAW_LINE	int
;	O
q	pointer
=	O
g_malloc0	function
(	O
sizeof	O
(	O
struct	O
_book_mark	struct
)	O
)	O
;	O
q	pointer
->	O
line	pointer
=	O
line	pointer
;	O
q	pointer
->	O
c	int
=	O
c	int
;	O
q	pointer
->	O
next	pointer
=	O
p	pointer
->	O
next	pointer
;	O
q	pointer
->	O
prev	pointer
=	O
p	pointer
;	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
p	pointer
->	O
next	pointer
->	O
prev	pointer
=	O
q	pointer
;	O
p	pointer
->	O
next	pointer
=	O
q	pointer
;	O
}	O
int	O
book_mark_clear	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	int
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
int	O
r	int
=	O
1	int
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	int
)	O
return	O
r	int
;	O
for	O
(	O
p	pointer
=	O
book_mark_find	function
(	O
edit	pointer
,	O
line	pointer
)	O
;	O
p	pointer
;	O
p	pointer
=	O
q	pointer
)	O
{	O
q	pointer
=	O
p	pointer
->	O
prev	pointer
;	O
if	O
(	O
p	pointer
->	O
line	pointer
==	O
line	pointer
&&	O
(	O
p	pointer
->	O
c	int
==	O
c	int
||	O
c	int
==	O
-	O
1	int
)	O
)	O
{	O
r	int
=	O
0	int
;	O
edit	int
->	O
force	enum
|=	O
REDRAW_LINE	int
;	O
edit	pointer
->	O
book_mark	int
=	O
p	pointer
->	O
prev	pointer
;	O
p	pointer
->	O
prev	pointer
->	O
next	pointer
=	O
p	pointer
->	O
next	pointer
;	O
if	O
(	O
p	pointer
->	O
next	pointer
)	O
p	pointer
->	O
next	pointer
->	O
prev	pointer
=	O
p	pointer
->	O
prev	pointer
;	O
g_free	function
(	O
p	pointer
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
edit	pointer
->	O
book_mark	pointer
->	O
line	pointer
==	O
-	O
1	int
&&	O
!	O
edit	pointer
->	O
book_mark	pointer
->	O
next	pointer
)	O
{	O
g_free	function
(	O
edit	pointer
->	O
book_mark	int
)	O
;	O
edit	pointer
->	O
book_mark	int
=	O
0	int
;	O
}	O
return	O
r	int
;	O
}	O
void	O
book_mark_flush	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
c	int
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	int
)	O
return	O
;	O
edit	pointer
->	O
force	enum
|=	O
REDRAW_PAGE	int
;	O
while	O
(	O
edit	pointer
->	O
book_mark	pointer
->	O
prev	pointer
)	O
edit	pointer
->	O
book_mark	int
=	O
edit	pointer
->	O
book_mark	pointer
->	O
prev	pointer
;	O
for	O
(	O
q	pointer
=	O
edit	pointer
->	O
book_mark	pointer
->	O
next	pointer
;	O
q	pointer
;	O
q	pointer
=	O
p	pointer
)	O
{	O
p	pointer
=	O
q	pointer
->	O
next	pointer
;	O
if	O
(	O
q	pointer
->	O
c	int
==	O
c	int
||	O
c	int
==	O
-	O
1	int
)	O
{	O
q	pointer
->	O
prev	pointer
->	O
next	pointer
=	O
q	pointer
->	O
next	pointer
;	O
if	O
(	O
p	pointer
)	O
p	pointer
->	O
prev	pointer
=	O
q	pointer
->	O
prev	pointer
;	O
g_free	function
(	O
q	pointer
)	O
;	O
}	O
}	O
if	O
(	O
!	O
edit	pointer
->	O
book_mark	pointer
->	O
next	pointer
)	O
{	O
g_free	function
(	O
edit	pointer
->	O
book_mark	int
)	O
;	O
edit	pointer
->	O
book_mark	int
=	O
0	int
;	O
}	O
}	O
void	O
book_mark_inc	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	int
)	O
{	O
if	O
(	O
edit	pointer
->	O
book_mark	pointer
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
p	pointer
=	O
book_mark_find	function
(	O
edit	pointer
,	O
line	pointer
)	O
;	O
for	O
(	O
p	pointer
=	O
p	pointer
->	O
next	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
{	O
p	pointer
->	O
line	pointer
++	O
;	O
}	O
}	O
}	O
void	O
book_mark_dec	function
(	O
WEdit	struct
*	O
edit	pointer
,	O
int	O
line	int
)	O
{	O
if	O
(	O
edit	pointer
->	O
book_mark	pointer
)	O
{	O
struct	O
_book_mark	struct
*	O
p	pointer
;	O
p	pointer
=	O
book_mark_find	function
(	O
edit	pointer
,	O
line	pointer
)	O
;	O
for	O
(	O
p	pointer
=	O
p	pointer
->	O
next	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
{	O
p	pointer
->	O
line	pointer
--	O
;	O
}	O
}	O
}	O