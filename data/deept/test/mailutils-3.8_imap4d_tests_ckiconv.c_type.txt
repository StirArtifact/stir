static	O
mu_stream_t	pointer
base64stream	function
(	O
int	O
flg	pointer
)	O
{	O
mu_stream_t	pointer
flt	pointer
,	O
str	pointer
;	O
int	O
mode	int
;	O
switch	O
(	O
flg	pointer
)	O
{	O
case	O
MU_STREAM_READ	int
:	O
mode	int
=	O
MU_FILTER_DECODE	int
;	O
str	pointer
=	O
mu_strin	pointer
;	O
break	O
;	O
case	O
MU_STREAM_WRITE	int
:	O
mode	int
=	O
MU_FILTER_ENCODE	int
;	O
str	pointer
=	O
mu_strout	pointer
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
MU_ASSERT	O
(	O
mu_filter_create	function
(	O
&	O
flt	pointer
,	O
str	pointer
,	O
"base64"	int
,	O
mode	int
,	O
flg	pointer
)	O
)	O
;	O
return	O
flt	pointer
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
mu_stream_t	pointer
flt	pointer
,	O
input	pointer
,	O
output	pointer
;	O
char	O
const	O
*	O
iargv	pointer
[	O
]	O
=	O
{	O
"iconv"	pointer
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
;	O
assert	O
(	O
argc	int
==	O
3	int
)	O
;	O
iargv	array
[	O
1	int
]	O
=	O
argv	pointer
[	O
1	int
]	O
;	O
iargv	array
[	O
2	int
]	O
=	O
argv	pointer
[	O
2	int
]	O
;	O
mu_stdstream_setup	function
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
input	pointer
=	O
base64stream	function
(	O
MU_STREAM_READ	int
)	O
;	O
output	pointer
=	O
base64stream	function
(	O
MU_STREAM_WRITE	int
)	O
;	O
MU_ASSERT	O
(	O
mu_filter_chain_create	function
(	O
&	O
flt	pointer
,	O
input	pointer
,	O
MU_FILTER_ENCODE	int
,	O
MU_STREAM_READ	int
,	O
MU_ARRAY_SIZE	O
(	O
iargv	pointer
)	O
-	O
1	int
,	O
(	O
char	O
*	O
*	O
)	O
iargv	pointer
)	O
)	O
;	O
mu_stream_unref	function
(	O
input	pointer
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	function
(	O
output	pointer
,	O
flt	pointer
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
mu_stream_destroy	function
(	O
&	O
flt	pointer
)	O
;	O
mu_stream_destroy	function
(	O
&	O
output	pointer
)	O
;	O
return	O
0	int
;	O
}	O