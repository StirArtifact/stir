oid_t	pointer
oid_dup	function
(	O
oid_t	pointer
oid	pointer
)	O
{	O
oid_t	pointer
new_oid	pointer
;	O
new_oid	pointer
=	O
snmp_alloc	function
(	O
OIDSIZE	function
(	O
oid	pointer
)	O
+	O
sizeof	O
(	O
oid	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
new_oid	pointer
)	O
return	O
NULL	O
;	O
memcpy	function
(	O
new_oid	pointer
,	O
oid	pointer
,	O
OIDSIZE	function
(	O
oid	pointer
)	O
+	O
sizeof	O
(	O
oid	pointer
[	O
0	int
]	O
)	O
)	O
;	O
return	O
new_oid	int
;	O
}	O
oid_t	pointer
oid_create	O
(	O
int	O
len	int
)	O
{	O
oid_t	pointer
oid	pointer
;	O
if	O
(	O
(	O
oid	pointer
=	O
snmp_alloc	function
(	O
(	O
len	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
oid	pointer
[	O
0	int
]	O
)	O
)	O
)	O
)	O
OIDLEN	O
(	O
oid	pointer
)	O
=	O
len	int
;	O
return	O
oid	pointer
;	O
}	O
oid_t	pointer
oid_create_from_string	O
(	O
char	O
*	O
str	pointer
)	O
{	O
char	O
*	O
tok	int
;	O
int	O
len	int
;	O
oid_t	pointer
name	pointer
,	O
p	pointer
;	O
if	O
(	O
*	O
str	pointer
==	O
'.'	O
)	O
str	pointer
++	O
;	O
for	O
(	O
tok	int
=	O
str	pointer
,	O
len	int
=	O
0	int
;	O
*	O
tok	int
;	O
tok	int
++	O
)	O
if	O
(	O
*	O
tok	int
==	O
'.'	O
)	O
len	int
++	O
;	O
len	int
++	O
;	O
name	pointer
=	O
snmp_alloc	function
(	O
sizeof	O
(	O
*	O
name	pointer
)	O
*	O
(	O
len	int
+	O
1	int
)	O
)	O
;	O
if	O
(	O
!	O
name	pointer
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
return	O
NULL	O
;	O
}	O
OIDLEN	O
(	O
name	pointer
)	O
=	O
len	int
;	O
p	pointer
=	O
OIDPTR	O
(	O
name	pointer
)	O
;	O
tok	int
=	O
str	pointer
;	O
for	O
(	O
;	O
;	O
)	O
{	O
*	O
p	pointer
++	O
=	O
strtol	function
(	O
tok	int
,	O
&	O
tok	int
,	O
10	int
)	O
;	O
if	O
(	O
*	O
tok	int
==	O
0	int
)	O
break	O
;	O
if	O
(	O
*	O
tok	int
++	O
!=	O
'.'	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_BAD_OID	pointer
)	O
;	O
snmp_free	function
(	O
name	pointer
)	O
;	O
name	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
}	O
return	O
name	pointer
;	O
}	O
oid_t	pointer
oid_create_from_subid	O
(	O
int	O
len	int
,	O
subid_t	int
*	O
subid	pointer
)	O
{	O
oid_t	pointer
oid	pointer
;	O
oid	pointer
=	O
snmp_alloc	function
(	O
(	O
len	long
+	O
1	int
)	O
*	O
sizeof	O
(	O
oid	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
oid	pointer
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
return	O
NULL	O
;	O
}	O
OIDLEN	O
(	O
oid	pointer
)	O
=	O
len	int
;	O
memcpy	function
(	O
OIDPTR	O
(	O
oid	pointer
)	O
,	O
subid	pointer
,	O
len	int
*	O
sizeof	O
(	O
oid	pointer
[	O
0	int
]	O
)	O
)	O
;	O
return	O
oid	pointer
;	O
}	O
int	O
oid_cmp	function
(	O
oid_t	int
a	double
,	O
oid_t	int
b	pointer
)	O
{	O
int	O
i	int
;	O
if	O
(	O
OIDLEN	O
(	O
a	double
)	O
!=	O
OIDLEN	O
(	O
b	pointer
)	O
)	O
return	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
OIDLEN	O
(	O
a	pointer
)	O
;	O
i	int
++	O
)	O
if	O
(	O
SUBID	O
(	O
a	double
,	O
i	int
)	O
!=	O
SUBID	O
(	O
b	pointer
,	O
i	int
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
char	O
*	O
sprint_oid	function
(	O
char	O
*	O
buf	pointer
,	O
int	O
buflen	int
,	O
oid_t	pointer
oid	pointer
)	O
{	O
int	O
i	int
,	O
d	int
;	O
char	O
*	O
p	pointer
,	O
*	O
start	int
;	O
char	O
temp	array
[	O
64	int
]	O
;	O
int	O
len	int
=	O
OIDLEN	O
(	O
oid	pointer
)	O
;	O
oid_t	pointer
name	pointer
=	O
OIDPTR	O
(	O
oid	pointer
)	O
;	O
start	int
=	O
buf	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
buflen	int
<	O
3	int
)	O
{	O
*	O
buf	pointer
++	O
=	O
'>'	O
;	O
break	O
;	O
}	O
sprintf	function
(	O
temp	pointer
,	O
"%d"	pointer
,	O
*	O
name	pointer
)	O
;	O
d	int
=	O
strlen	function
(	O
temp	pointer
)	O
+	O
1	int
;	O
if	O
(	O
buflen	long
-	O
d	int
<	O
3	int
)	O
{	O
*	O
buf	pointer
++	O
=	O
'>'	O
;	O
break	O
;	O
}	O
buflen	long
-=	O
d	int
;	O
*	O
buf	pointer
++	O
=	O
'.'	O
;	O
for	O
(	O
p	pointer
=	O
temp	pointer
;	O
*	O
p	pointer
;	O
)	O
*	O
buf	pointer
++	O
=	O
*	O
p	pointer
++	O
;	O
name	pointer
++	O
;	O
}	O
*	O
buf	pointer
=	O
0	int
;	O
return	O
start	int
;	O
}	O