static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: hash_upgrade.c,v 1.4 2014/04/17 20:27:29 sebdiaz Exp $"	int
;	O
int	O
CDB___ham_30_hashmeta	function
(	O
dbp	pointer
,	O
real_name	pointer
,	O
obuf	int
)	O
DB	struct
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int8_t	bool
*	O
obuf	pointer
;	O
{	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
HASHHDR	struct
*	O
oldmeta	pointer
;	O
HMETA30	int
newmeta	int
;	O
u_int32_t	int
*	O
o_spares	pointer
,	O
*	O
n_spares	pointer
;	O
u_int32_t	int
fillf	int
,	O
maxb	int
,	O
nelem	int
;	O
int	O
i	int
,	O
non_zero	int
,	O
ret	int
;	O
dbenv	pointer
=	O
dbp	pointer
->	O
dbenv	pointer
;	O
memset	function
(	O
&	O
newmeta	int
,	O
0	int
,	O
sizeof	O
(	O
newmeta	pointer
)	O
)	O
;	O
oldmeta	pointer
=	O
(	O
HASHHDR	struct
*	O
)	O
obuf	pointer
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
lsn	struct
=	O
oldmeta	pointer
->	O
lsn	struct
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
pgno	int
=	O
oldmeta	int
->	O
pgno	int
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
magic	int
=	O
oldmeta	pointer
->	O
magic	double
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
version	int
=	O
6	int
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
pagesize	pointer
=	O
oldmeta	pointer
->	O
pagesize	pointer
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
type	int
=	O
P_HASHMETA	int
;	O
newmeta	struct
.	O
dbmeta	struct
.	O
flags	int
=	O
oldmeta	int
->	O
flags	int
;	O
newmeta	struct
.	O
max_bucket	int
=	O
oldmeta	pointer
->	O
max_bucket	int
;	O
newmeta	struct
.	O
high_mask	int
=	O
oldmeta	pointer
->	O
high_mask	int
;	O
newmeta	struct
.	O
low_mask	int
=	O
oldmeta	pointer
->	O
low_mask	int
;	O
newmeta	struct
.	O
ffactor	int
=	O
oldmeta	pointer
->	O
ffactor	int
;	O
newmeta	struct
.	O
nelem	int
=	O
oldmeta	pointer
->	O
nelem	int
;	O
newmeta	struct
.	O
h_charkey	int
=	O
oldmeta	pointer
->	O
h_charkey	int
;	O
nelem	int
=	O
newmeta	struct
.	O
nelem	int
;	O
fillf	int
=	O
newmeta	struct
.	O
ffactor	int
;	O
maxb	int
=	O
newmeta	struct
.	O
max_bucket	int
;	O
if	O
(	O
(	O
fillf	int
!=	O
0	int
&&	O
fillf	int
*	O
maxb	int
<	O
2	int
*	O
nelem	pointer
)	O
||	O
(	O
fillf	int
==	O
0	int
&&	O
nelem	int
>	O
0x8000000	int
)	O
)	O
newmeta	struct
.	O
nelem	int
=	O
0	int
;	O
o_spares	int
=	O
oldmeta	pointer
->	O
spares	int
;	O
n_spares	int
=	O
newmeta	struct
.	O
spares	int
;	O
non_zero	int
=	O
0	int
;	O
n_spares	array
[	O
0	int
]	O
=	O
1	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
NCACHED	int
;	O
i	int
++	O
)	O
{	O
non_zero	int
=	O
non_zero	int
||	O
o_spares	array
[	O
i	int
-	O
1	int
]	O
!=	O
0	int
;	O
if	O
(	O
o_spares	array
[	O
i	int
-	O
1	int
]	O
==	O
0	int
&&	O
non_zero	int
)	O
n_spares	array
[	O
i	int
]	O
=	O
0	int
;	O
else	O
n_spares	array
[	O
i	int
]	O
=	O
1	int
+	O
o_spares	array
[	O
i	int
-	O
1	int
]	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_fileid	function
(	O
dbenv	pointer
,	O
real_name	int
,	O
1	int
,	O
newmeta	struct
.	O
dbmeta	struct
.	O
uid	int
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
memcpy	function
(	O
oldmeta	pointer
,	O
&	O
newmeta	int
,	O
sizeof	O
(	O
newmeta	pointer
)	O
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___ham_31_hashmeta	function
(	O
dbp	pointer
,	O
real_name	int
,	O
flags	int
,	O
fhp	int
,	O
h	pointer
,	O
dirtyp	int
)	O
DB	struct
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int32_t	int
flags	int
;	O
DB_FH	struct
*	O
fhp	pointer
;	O
PAGE	struct
*	O
h	pointer
;	O
int	O
*	O
dirtyp	pointer
;	O
{	O
if	O
(	O
dbp	pointer
||	O
real_name	int
||	O
fhp	pointer
)	O
{	O
}	O
HMETA31	struct
*	O
newmeta	pointer
;	O
HMETA30	struct
*	O
oldmeta	pointer
;	O
COMPQUIET	O
(	O
dbp	pointer
,	O
NULL	O
)	O
;	O
COMPQUIET	O
(	O
real_name	pointer
,	O
NULL	O
)	O
;	O
COMPQUIET	O
(	O
fhp	pointer
,	O
NULL	O
)	O
;	O
newmeta	pointer
=	O
(	O
HMETA31	struct
*	O
)	O
h	pointer
;	O
oldmeta	pointer
=	O
(	O
HMETA30	struct
*	O
)	O
h	pointer
;	O
memmove	function
(	O
newmeta	pointer
->	O
spares	int
,	O
oldmeta	pointer
->	O
spares	int
,	O
sizeof	O
(	O
oldmeta	pointer
->	O
spares	pointer
)	O
)	O
;	O
newmeta	pointer
->	O
h_charkey	int
=	O
oldmeta	pointer
->	O
h_charkey	int
;	O
newmeta	pointer
->	O
nelem	int
=	O
oldmeta	pointer
->	O
nelem	int
;	O
newmeta	pointer
->	O
ffactor	int
=	O
oldmeta	pointer
->	O
ffactor	int
;	O
newmeta	pointer
->	O
low_mask	int
=	O
oldmeta	pointer
->	O
low_mask	int
;	O
newmeta	pointer
->	O
high_mask	int
=	O
oldmeta	pointer
->	O
high_mask	int
;	O
newmeta	pointer
->	O
max_bucket	int
=	O
oldmeta	pointer
->	O
max_bucket	int
;	O
memmove	function
(	O
newmeta	pointer
->	O
dbmeta	struct
.	O
uid	int
,	O
oldmeta	int
->	O
dbmeta	struct
.	O
uid	int
,	O
sizeof	O
(	O
oldmeta	pointer
->	O
dbmeta	struct
.	O
uid	int
)	O
)	O
;	O
newmeta	pointer
->	O
dbmeta	struct
.	O
flags	int
=	O
oldmeta	int
->	O
dbmeta	struct
.	O
flags	int
;	O
newmeta	int
->	O
dbmeta	struct
.	O
record_count	int
=	O
0	int
;	O
newmeta	int
->	O
dbmeta	struct
.	O
key_count	int
=	O
0	int
;	O
ZERO_LSN	O
(	O
newmeta	pointer
->	O
dbmeta	struct
.	O
alloc_lsn	int
)	O
;	O
newmeta	pointer
->	O
dbmeta	struct
.	O
version	int
=	O
7	int
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUPSORT	pointer
)	O
)	O
F_SET	O
(	O
&	O
newmeta	struct
->	O
dbmeta	struct
,	O
DB_HASH_DUPSORT	int
)	O
;	O
*	O
dirtyp	pointer
=	O
1	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___ham_31_hash	function
(	O
dbp	pointer
,	O
real_name	int
,	O
flags	int
,	O
fhp	int
,	O
h	pointer
,	O
dirtyp	int
)	O
DB	struct
*	O
dbp	pointer
;	O
char	O
*	O
real_name	pointer
;	O
u_int32_t	int
flags	int
;	O
DB_FH	struct
*	O
fhp	pointer
;	O
PAGE	struct
*	O
h	pointer
;	O
int	O
*	O
dirtyp	pointer
;	O
{	O
HKEYDATA	struct
*	O
hk	pointer
;	O
db_pgno_t	int
pgno	int
,	O
tpgno	int
;	O
db_indx_t	int
indx	O
;	O
int	O
ret	int
;	O
COMPQUIET	O
(	O
flags	int
,	O
0	int
)	O
;	O
ret	int
=	O
0	int
;	O
for	O
(	O
indx	double
=	O
0	int
;	O
indx	double
<	O
NUM_ENT	O
(	O
h	pointer
)	O
;	O
indx	double
+=	O
2	int
)	O
{	O
hk	pointer
=	O
(	O
HKEYDATA	struct
*	O
)	O
H_PAIRDATA	function
(	O
h	pointer
,	O
indx	double
)	O
;	O
if	O
(	O
HPAGE_PTYPE	O
(	O
hk	pointer
)	O
==	O
H_OFFDUP	int
)	O
{	O
memcpy	function
(	O
&	O
pgno	int
,	O
HOFFDUP_PGNO	function
(	O
hk	pointer
)	O
,	O
sizeof	O
(	O
db_pgno_t	int
)	O
)	O
;	O
tpgno	int
=	O
pgno	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_31_offdup	function
(	O
dbp	pointer
,	O
real_name	pointer
,	O
fhp	pointer
,	O
LF_ISSET	O
(	O
DB_DUPSORT	pointer
)	O
?	O
1	int
:	O
0	int
,	O
&	O
tpgno	int
)	O
)	O
!=	O
0	int
)	O
break	O
;	O
if	O
(	O
pgno	int
!=	O
tpgno	int
)	O
{	O
*	O
dirtyp	pointer
=	O
1	int
;	O
memcpy	function
(	O
HOFFDUP_PGNO	function
(	O
hk	pointer
)	O
,	O
&	O
tpgno	int
,	O
sizeof	O
(	O
db_pgno_t	int
)	O
)	O
;	O
}	O
}	O
}	O
return	O
(	O
ret	int
)	O
;	O
}	O