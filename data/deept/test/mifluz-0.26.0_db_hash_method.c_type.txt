static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: hash_method.c,v 1.3 2000/06/28 16:47:01 loic Exp $"	int
;	O
static	O
int	O
__ham_set_h_ffactor	int
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__ham_set_h_hash	int
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	function
(	O
*	O
)	O
(	O
const	O
void	O
*	O
,	O
u_int32_t	int
)	O
)	O
)	O
;	O
static	O
int	O
__ham_set_h_nelem	int
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
int	O
CDB___ham_db_create	function
(	O
dbp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
{	O
HASH	struct
*	O
hashp	pointer
;	O
int	O
ret	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
sizeof	O
(	O
HASH	struct
)	O
,	O
NULL	O
,	O
&	O
dbp	pointer
->	O
h_internal	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
hashp	pointer
=	O
dbp	pointer
->	O
h_internal	pointer
;	O
hashp	pointer
->	O
h_nelem	int
=	O
0	int
;	O
hashp	pointer
->	O
h_ffactor	int
=	O
0	int
;	O
hashp	pointer
->	O
h_hash	pointer
=	O
NULL	O
;	O
dbp	pointer
->	O
set_h_ffactor	int
=	O
__ham_set_h_ffactor	int
;	O
dbp	pointer
->	O
set_h_hash	int
=	O
__ham_set_h_hash	int
;	O
dbp	pointer
->	O
set_h_nelem	int
=	O
__ham_set_h_nelem	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___ham_db_close	function
(	O
dbp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
{	O
if	O
(	O
dbp	pointer
->	O
h_internal	pointer
==	O
NULL	O
)	O
return	O
(	O
0	int
)	O
;	O
CDB___os_free	function
(	O
dbp	pointer
->	O
h_internal	pointer
,	O
sizeof	O
(	O
HASH	struct
)	O
)	O
;	O
dbp	pointer
->	O
h_internal	pointer
=	O
NULL	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_ffactor	function
(	O
dbp	pointer
,	O
h_ffactor	int
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
h_ffactor	int
;	O
{	O
HASH	struct
*	O
hashp	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	pointer
,	O
"set_h_ffactor"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_HASH	pointer
)	O
;	O
hashp	pointer
=	O
dbp	pointer
->	O
h_internal	pointer
;	O
hashp	pointer
->	O
h_ffactor	int
=	O
h_ffactor	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_hash	function
(	O
dbp	pointer
,	O
func	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
(	O
*	O
func	pointer
)	O
__P	O
(	O
(	O
const	O
void	O
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
{	O
HASH	struct
*	O
hashp	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	pointer
,	O
"set_h_hash"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_HASH	pointer
)	O
;	O
hashp	pointer
=	O
dbp	pointer
->	O
h_internal	pointer
;	O
hashp	pointer
->	O
h_hash	int
=	O
func	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ham_set_h_nelem	function
(	O
dbp	pointer
,	O
h_nelem	int
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
h_nelem	int
;	O
{	O
HASH	struct
*	O
hashp	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	function
(	O
dbp	pointer
,	O
"set_h_nelem"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_HASH	pointer
)	O
;	O
hashp	pointer
=	O
dbp	pointer
->	O
h_internal	pointer
;	O
hashp	pointer
->	O
h_nelem	int
=	O
h_nelem	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O