void	O
trimnl	function
(	O
char	O
*	O
buf	pointer
,	O
size_t	long
len	long
)	O
{	O
if	O
(	O
len	long
>	O
1	int
&&	O
buf	pointer
[	O
--	O
len	long
]	O
==	O
'\n'	O
)	O
{	O
buf	pointer
[	O
len	long
]	O
=	O
0	int
;	O
if	O
(	O
len	long
>	O
1	int
&&	O
buf	pointer
[	O
--	O
len	long
]	O
==	O
'\r'	O
)	O
buf	pointer
[	O
len	long
]	O
=	O
0	int
;	O
}	O
}	O
char	O
*	O
make_full_file_name	function
(	O
const	O
char	O
*	O
dir	pointer
,	O
const	O
char	O
*	O
file	pointer
)	O
{	O
char	O
*	O
s	pointer
=	O
dico_full_file_name	function
(	O
dir	pointer
,	O
file	pointer
)	O
;	O
if	O
(	O
!	O
s	pointer
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
s	pointer
;	O
}	O
dico_list_t	pointer
xdico_list_create	O
(	O
void	O
)	O
{	O
dico_list_t	pointer
p	pointer
=	O
dico_list_create	function
(	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	pointer
;	O
}	O
dico_iterator_t	pointer
xdico_list_iterator	O
(	O
dico_list_t	pointer
list	pointer
)	O
{	O
dico_iterator_t	struct
p	pointer
=	O
dico_list_iterator	function
(	O
list	pointer
)	O
;	O
if	O
(	O
!	O
p	pointer
&&	O
errno	O
==	O
ENOMEM	int
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	pointer
;	O
}	O
void	O
xdico_list_append	function
(	O
struct	O
dico_list	struct
*	O
list	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
if	O
(	O
dico_list_append	function
(	O
list	pointer
,	O
data	pointer
)	O
&&	O
errno	O
==	O
ENOMEM	int
)	O
xalloc_die	function
(	O
)	O
;	O
}	O
void	O
xdico_list_prepend	function
(	O
struct	O
dico_list	struct
*	O
list	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
if	O
(	O
dico_list_prepend	function
(	O
list	pointer
,	O
data	pointer
)	O
&&	O
errno	O
==	O
ENOMEM	int
)	O
xalloc_die	function
(	O
)	O
;	O
}	O
dico_assoc_list_t	pointer
xdico_assoc_create	O
(	O
int	O
flags	int
)	O
{	O
dico_assoc_list_t	pointer
p	pointer
=	O
dico_assoc_create	function
(	O
flags	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
p	pointer
;	O
}	O
void	O
xdico_assoc_append	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
value	pointer
)	O
{	O
if	O
(	O
dico_assoc_append	function
(	O
assoc	pointer
,	O
key	pointer
,	O
value	int
)	O
&&	O
errno	O
==	O
ENOMEM	int
)	O
xalloc_die	function
(	O
)	O
;	O
}	O
int	O
xdico_assoc_add	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
value	pointer
,	O
size_t	long
count	long
,	O
int	O
replace	int
)	O
{	O
int	O
rc	int
=	O
dico_assoc_add	function
(	O
assoc	pointer
,	O
key	pointer
,	O
value	int
,	O
count	long
,	O
replace	int
)	O
;	O
if	O
(	O
rc	int
&&	O
errno	O
==	O
ENOMEM	int
)	O
xalloc_die	function
(	O
)	O
;	O
return	O
rc	int
;	O
}	O
char	O
*	O
xdico_assign_string	function
(	O
char	O
*	O
*	O
dest	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
if	O
(	O
*	O
dest	pointer
)	O
free	function
(	O
*	O
dest	pointer
)	O
;	O
return	O
*	O
dest	pointer
=	O
str	pointer
?	O
xstrdup	function
(	O
str	pointer
)	O
:	O
NULL	O
;	O
}	O
static	O
char	O
*	O
mech_to_capa_table	pointer
[	O
]	O
[	O
2	int
]	O
=	O
{	O
{	O
"EXTERNAL"	pointer
,	O
"external"	int
}	O
,	O
{	O
"SKEY"	pointer
,	O
"skey"	int
}	O
,	O
{	O
"GSSAPI"	pointer
,	O
"gssapi"	int
}	O
,	O
{	O
"KERBEROS_V4"	pointer
,	O
"kerberos_v4"	int
}	O
}	O
;	O
char	O
*	O
xdico_sasl_mech_to_capa	function
(	O
char	O
*	O
mech	pointer
)	O
{	O
int	O
i	int
;	O
size_t	long
len	long
;	O
char	O
*	O
rets	pointer
,	O
*	O
p	pointer
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
DICO_ARRAY_SIZE	function
(	O
mech_to_capa_table	pointer
)	O
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
mech_to_capa_table	pointer
[	O
i	long
]	O
[	O
0	int
]	O
,	O
mech	pointer
)	O
==	O
0	int
)	O
return	O
xstrdup	function
(	O
mech_to_capa_table	array
[	O
i	long
]	O
[	O
1	int
]	O
)	O
;	O
len	long
=	O
strlen	function
(	O
mech	pointer
)	O
+	O
1	int
;	O
rets	int
=	O
p	pointer
=	O
xmalloc	function
(	O
len	long
+	O
1	int
)	O
;	O
*	O
p	pointer
++	O
=	O
'x'	O
;	O
for	O
(	O
;	O
*	O
mech	pointer
;	O
mech	pointer
++	O
)	O
*	O
p	pointer
++	O
=	O
tolower	function
(	O
*	O
mech	pointer
)	O
;	O
*	O
p	pointer
=	O
0	int
;	O
return	O
rets	int
;	O
}	O
int	O
xdico_sasl_capa_match_p	function
(	O
const	O
char	O
*	O
mech	pointer
,	O
const	O
char	O
*	O
capa	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
DICO_ARRAY_SIZE	function
(	O
mech_to_capa_table	pointer
)	O
;	O
i	long
++	O
)	O
if	O
(	O
c_strcasecmp	O
(	O
mech_to_capa_table	array
[	O
i	long
]	O
[	O
0	int
]	O
,	O
mech	pointer
)	O
==	O
0	int
)	O
return	O
c_strcasecmp	O
(	O
mech_to_capa_table	array
[	O
i	long
]	O
[	O
1	int
]	O
,	O
capa	pointer
)	O
==	O
0	int
;	O
if	O
(	O
*	O
capa	pointer
==	O
'x'	O
)	O
return	O
c_strcasecmp	O
(	O
mech	pointer
,	O
capa	pointer
+	O
1	int
)	O
==	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
dicod_free_item	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
DICO_ARG_UNUSED	pointer
)	O
{	O
free	function
(	O
item	pointer
)	O
;	O
return	O
0	int
;	O
}	O