size_t	long
block_read	function
(	O
int	O
fd	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
nbytes	long
)	O
{	O
char	O
*	O
bp	pointer
=	O
buf	pointer
;	O
char	O
const	O
*	O
buflim	pointer
=	O
buf	pointer
+	O
nbytes	long
;	O
size_t	long
readlim	long
=	O
MIN	O
(	O
SSIZE_MAX	O
,	O
SIZE_MAX	O
)	O
;	O
do	O
{	O
size_t	long
bytes_remaining	long
=	O
buflim	int
-	O
bp	pointer
;	O
size_t	long
bytes_to_read	long
=	O
MIN	O
(	O
bytes_remaining	pointer
,	O
readlim	int
)	O
;	O
ssize_t	long
nread	long
=	O
read	function
(	O
fd	int
,	O
bp	pointer
,	O
bytes_to_read	pointer
)	O
;	O
if	O
(	O
nread	long
<=	O
0	int
)	O
{	O
if	O
(	O
nread	long
==	O
0	int
)	O
break	O
;	O
if	O
(	O
errno	O
==	O
EINVAL	int
&&	O
INT_MAX	O
<	O
bytes_to_read	int
)	O
{	O
readlim	pointer
=	O
INT_MAX	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
SA_RESTART	int
&&	O
errno	O
==	O
EINTR	int
)	O
continue	O
;	O
return	O
SIZE_MAX	O
;	O
}	O
bp	pointer
+=	O
nread	long
;	O
}	O
while	O
(	O
bp	pointer
<	O
buflim	pointer
)	O
;	O
return	O
bp	pointer
-	O
buf	pointer
;	O
}	O
size_t	long
buffer_lcm	O
(	O
size_t	long
a	long
,	O
size_t	long
b	long
,	O
size_t	long
lcm_max	long
)	O
{	O
size_t	long
lcm	long
,	O
m	pointer
,	O
n	long
,	O
q	pointer
,	O
r	int
;	O
if	O
(	O
!	O
a	double
)	O
return	O
b	long
?	O
b	long
:	O
8	int
*	O
1024	int
;	O
if	O
(	O
!	O
b	long
)	O
return	O
a	double
;	O
for	O
(	O
m	pointer
=	O
a	pointer
,	O
n	long
=	O
b	long
;	O
(	O
r	int
=	O
m	long
%	O
n	long
)	O
!=	O
0	int
;	O
m	pointer
=	O
n	long
,	O
n	long
=	O
r	int
)	O
continue	O
;	O
q	int
=	O
a	double
/	O
n	long
;	O
lcm	int
=	O
q	int
*	O
b	pointer
;	O
return	O
lcm	int
<=	O
lcm_max	int
&&	O
lcm	double
/	O
b	long
==	O
q	int
?	O
lcm	int
:	O
a	int
;	O
}	O