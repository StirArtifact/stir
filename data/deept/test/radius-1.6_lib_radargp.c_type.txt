const	O
char	O
*	O
argp_program_bug_address	pointer
=	O
"<"	pointer
PACKAGE_BUGREPORT	pointer
">"	pointer
;	O
static	O
struct	O
argp_option	struct
rad_common_argp_option	pointer
[	O
]	O
=	O
{	O
{	O
"directory"	pointer
,	O
'd'	O
,	O
N_	O
(	O
"DIR"	pointer
)	O
,	O
0	int
,	O
N_	O
(	O
"Set path to the configuration directory"	pointer
)	O
,	O
0	int
}	O
,	O
{	O
"license"	pointer
,	O
'L'	O
,	O
NULL	O
,	O
0	int
,	O
N_	O
(	O
"print license and exit"	pointer
)	O
,	O
0	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
static	O
error_t	O
rad_common_argp_parser	function
(	O
int	O
key	int
,	O
char	O
*	O
arg	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
;	O
struct	O
argp	struct
grad_common_argp	struct
=	O
{	O
rad_common_argp_option	pointer
,	O
rad_common_argp_parser	pointer
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
}	O
;	O
struct	O
argp_child	struct
grad_common_argp_child	pointer
[	O
]	O
=	O
{	O
{	O
&	O
grad_common_argp	int
,	O
0	int
,	O
N_	O
(	O
"Common options"	pointer
)	O
,	O
1	int
}	O
,	O
{	O
NULL	O
}	O
,	O
}	O
;	O
char	O
*	O
__argp_base_name	function
(	O
const	O
char	O
*	O
arg	pointer
)	O
{	O
const	O
char	O
*	O
p	pointer
=	O
strrchr	function
(	O
arg	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
p	pointer
=	O
arg	pointer
;	O
else	O
p	pointer
++	O
;	O
return	O
(	O
char	O
*	O
)	O
p	pointer
;	O
}	O
static	O
char	O
license_text	array
[	O
]	O
=	O
N_	O
(	O
"   This program is free software; you can redistribute it and/or modify\n"	pointer
"   it under the terms of the GNU General Public License as published by\n"	O
"   the Free Software Foundation; either version 3, or (at your option)\n"	int
"   any later version.\n"	pointer
"\n"	pointer
"   This program is distributed in the hope that it will be useful,\n"	pointer
"   but WITHOUT ANY WARRANTY; without even the implied warranty of\n"	pointer
"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"	pointer
"   GNU General Public License for more details.\n"	pointer
"\n"	pointer
"   You should have received a copy of the GNU General Public License\n"	pointer
"   along with GNU Radius; if not, write to the Free Software Foundation,\n"	pointer
"   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"	pointer
"\n"	pointer
)	O
;	O
static	O
error_t	O
rad_common_argp_parser	function
(	O
int	O
key	int
,	O
char	O
*	O
arg	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
switch	O
(	O
key	pointer
)	O
{	O
case	O
'd'	O
:	O
grad_config_dir	int
=	O
arg	pointer
;	O
break	O
;	O
case	O
'L'	O
:	O
printf	function
(	O
"%s"	pointer
,	O
_	O
(	O
license_text	pointer
)	O
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
case	O
ARGP_KEY_FINI	int
:	O
grad_path_init	function
(	O
)	O
;	O
break	O
;	O
default	O
:	O
return	O
ARGP_ERR_UNKNOWN	O
;	O
}	O
return	O
0	int
;	O
}	O
error_t	O
grad_argp_parse	function
(	O
const	O
struct	O
argp	struct
*	O
argp	pointer
,	O
int	O
*	O
pargc	pointer
,	O
char	O
*	O
*	O
pargv	pointer
[	O
]	O
,	O
unsigned	O
flags	int
,	O
int	O
*	O
arg_index	pointer
,	O
void	O
*	O
input	pointer
)	O
{	O
error_t	O
ret	int
;	O
program_invocation_name	O
=	O
(	O
*	O
pargv	pointer
[	O
0	int
]	O
)	O
;	O
program_invocation_short_name	pointer
=	O
strrchr	function
(	O
program_invocation_name	O
,	O
'/'	O
)	O
;	O
if	O
(	O
!	O
program_invocation_short_name	pointer
)	O
program_invocation_short_name	pointer
=	O
program_invocation_name	O
;	O
else	O
program_invocation_short_name	pointer
++	O
;	O
ret	int
=	O
argp_parse	function
(	O
argp	pointer
,	O
*	O
pargc	pointer
,	O
*	O
pargv	pointer
,	O
flags	int
,	O
arg_index	int
,	O
input	pointer
)	O
;	O
return	O
ret	int
;	O
}	O