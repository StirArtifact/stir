void	O
mu_diag_init	function
(	O
)	O
{	O
if	O
(	O
!	O
mu_strerr	pointer
)	O
mu_stdstream_setup	function
(	O
MU_STDSTREAM_RESET_NONE	int
)	O
;	O
}	O
void	O
mu_diag_voutput	function
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	pointer
)	O
{	O
mu_diag_init	function
(	O
)	O
;	O
mu_stream_printf	function
(	O
mu_strerr	pointer
,	O
"\033s<%d>"	int
,	O
level	int
)	O
;	O
mu_stream_vprintf	function
(	O
mu_strerr	pointer
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
mu_stream_write	function
(	O
mu_strerr	pointer
,	O
"\n"	pointer
,	O
1	int
,	O
NULL	O
)	O
;	O
}	O
void	O
mu_diag_output	function
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
mu_diag_voutput	function
(	O
level	int
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
}	O
void	O
mu_vdiag_at_locus_range	function
(	O
int	O
level	int
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
struct	O
mu_locus_range	struct
old_loc	struct
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
int	O
old_mode	int
;	O
int	O
restore	int
=	O
0	int
;	O
if	O
(	O
loc	struct
)	O
{	O
if	O
(	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_GET_LOCUS_RANGE	int
,	O
&	O
old_loc	struct
)	O
==	O
0	int
)	O
{	O
if	O
(	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_GET_MODE	int
,	O
&	O
old_mode	struct
)	O
==	O
0	int
)	O
{	O
int	O
mode	int
=	O
old_mode	int
|	O
MU_LOGMODE_LOCUS	int
;	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
,	O
&	O
mode	O
)	O
;	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	pointer
,	O
(	O
void	O
*	O
)	O
loc	struct
)	O
;	O
restore	int
=	O
1	int
;	O
}	O
}	O
}	O
mu_diag_voutput	function
(	O
level	int
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
if	O
(	O
restore	int
)	O
{	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_LOCUS_RANGE	int
,	O
&	O
old_loc	struct
)	O
;	O
mu_stream_ioctl	function
(	O
mu_strerr	pointer
,	O
MU_IOCTL_LOGSTREAM	int
,	O
MU_IOCTL_LOGSTREAM_SET_MODE	int
,	O
&	O
old_mode	struct
)	O
;	O
mu_locus_range_deinit	function
(	O
&	O
old_loc	struct
)	O
;	O
}	O
}	O
void	O
mu_diag_at_locus_range	function
(	O
int	O
level	int
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
mu_vdiag_at_locus_range	function
(	O
level	int
,	O
loc	struct
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
}	O
void	O
mu_diag_at_locus_point	function
(	O
int	O
level	int
,	O
struct	O
mu_locus_point	struct
const	O
*	O
loc	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	pointer
;	O
struct	O
mu_locus_range	struct
lr	pointer
=	O
MU_LOCUS_RANGE_INITIALIZER	O
;	O
lr	pointer
.	O
beg	pointer
=	O
*	O
loc	struct
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
mu_vdiag_at_locus_range	function
(	O
level	int
,	O
&	O
lr	pointer
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
}	O
void	O
mu_diag_vprintf	function
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
mu_diag_init	function
(	O
)	O
;	O
mu_stream_printf	function
(	O
mu_strerr	pointer
,	O
"\033s<%d>"	int
,	O
level	int
)	O
;	O
mu_stream_vprintf	function
(	O
mu_strerr	pointer
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
}	O
void	O
mu_diag_cont_vprintf	function
(	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
mu_diag_init	function
(	O
)	O
;	O
mu_stream_vprintf	function
(	O
mu_strerr	pointer
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
}	O
void	O
mu_diag_printf	function
(	O
int	O
level	int
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
mu_diag_vprintf	function
(	O
level	int
,	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
}	O
void	O
mu_diag_cont_printf	function
(	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	pointer
,	O
fmt	pointer
)	O
;	O
mu_diag_cont_vprintf	function
(	O
fmt	pointer
,	O
ap	pointer
)	O
;	O
va_end	O
(	O
ap	pointer
)	O
;	O
}	O
const	O
char	O
*	O
mu_diag_level_to_string	function
(	O
int	O
level	int
)	O
{	O
switch	O
(	O
level	int
)	O
{	O
case	O
MU_DIAG_EMERG	O
:	O
return	O
_	O
(	O
"emergency"	pointer
)	O
;	O
case	O
MU_DIAG_ALERT	O
:	O
return	O
_	O
(	O
"alert"	pointer
)	O
;	O
case	O
MU_DIAG_CRIT	O
:	O
return	O
_	O
(	O
"critical"	pointer
)	O
;	O
case	O
MU_DIAG_ERROR	O
:	O
return	O
_	O
(	O
"error"	pointer
)	O
;	O
case	O
MU_DIAG_WARNING	O
:	O
return	O
_	O
(	O
"warning"	pointer
)	O
;	O
case	O
MU_DIAG_NOTICE	O
:	O
return	O
_	O
(	O
"notice"	pointer
)	O
;	O
case	O
MU_DIAG_INFO	O
:	O
return	O
_	O
(	O
"info"	pointer
)	O
;	O
case	O
MU_DIAG_DEBUG	O
:	O
return	O
_	O
(	O
"debug"	pointer
)	O
;	O
}	O
return	O
_	O
(	O
"unknown"	pointer
)	O
;	O
}	O
void	O
mu_diag_funcall	function
(	O
mu_log_level_t	int
level	int
,	O
const	O
char	O
*	O
func	pointer
,	O
const	O
char	O
*	O
arg	pointer
,	O
int	O
err	int
)	O
{	O
if	O
(	O
err	int
)	O
mu_diag_output	function
(	O
level	int
,	O
_	O
(	O
"%s(%s) failed: %s"	pointer
)	O
,	O
func	pointer
,	O
mu_prstr	function
(	O
arg	pointer
)	O
,	O
mu_strerror	function
(	O
err	int
)	O
)	O
;	O
else	O
mu_diag_output	function
(	O
level	int
,	O
_	O
(	O
"%s(%s) failed"	pointer
)	O
,	O
func	pointer
,	O
mu_prstr	function
(	O
arg	pointer
)	O
)	O
;	O
}	O