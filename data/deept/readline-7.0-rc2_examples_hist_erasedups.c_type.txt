static	O
void	O
usage	function
(	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"hist_erasedups: usage: hist_erasedups [-t] [filename]\n"	pointer
)	O
;	O
exit	function
(	O
2	int
)	O
;	O
}	O
int	O
main	function
(	O
argc	int
,	O
argv	pointer
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
{	O
char	O
*	O
fn	pointer
;	O
int	O
r	int
;	O
while	O
(	O
(	O
r	int
=	O
getopt	function
(	O
argc	int
,	O
argv	pointer
,	O
"t"	pointer
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
switch	O
(	O
r	int
)	O
{	O
case	O
't'	O
:	O
history_write_timestamps	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
usage	function
(	O
)	O
;	O
}	O
}	O
argv	pointer
+=	O
optind	int
;	O
argc	int
-=	O
optind	int
;	O
fn	pointer
=	O
argc	int
?	O
argv	pointer
[	O
0	int
]	O
:	O
getenv	function
(	O
"HISTFILE"	pointer
)	O
;	O
if	O
(	O
fn	pointer
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"hist_erasedups: no history file\n"	pointer
)	O
;	O
usage	function
(	O
)	O
;	O
}	O
if	O
(	O
(	O
r	int
=	O
read_history	function
(	O
fn	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"hist_erasedups: read_history: %s: %s\n"	pointer
,	O
fn	pointer
,	O
strerror	function
(	O
r	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
hist_erasedups	function
(	O
)	O
;	O
if	O
(	O
(	O
r	int
=	O
write_history	function
(	O
fn	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"hist_erasedups: write_history: %s: %s\n"	pointer
,	O
fn	pointer
,	O
strerror	function
(	O
r	int
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
exit	function
(	O
0	int
)	O
;	O
}	O
int	O
hist_erasedups	function
(	O
)	O
{	O
int	O
r	int
,	O
n	int
;	O
HIST_ENTRY	struct
*	O
h	pointer
,	O
*	O
temp	pointer
;	O
using_history	function
(	O
)	O
;	O
while	O
(	O
h	pointer
=	O
previous_history	function
(	O
)	O
)	O
{	O
r	int
=	O
where_history	function
(	O
)	O
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
r	int
;	O
n	int
++	O
)	O
{	O
temp	pointer
=	O
history_get	function
(	O
n	int
+	O
history_base	int
)	O
;	O
if	O
(	O
STREQ	O
(	O
h	pointer
->	O
line	pointer
,	O
temp	pointer
->	O
line	pointer
)	O
)	O
{	O
remove_history	function
(	O
n	int
)	O
;	O
r	int
--	O
;	O
n	int
--	O
;	O
history_offset	int
--	O
;	O
}	O
}	O
}	O
using_history	function
(	O
)	O
;	O
return	O
r	int
;	O
}	O
