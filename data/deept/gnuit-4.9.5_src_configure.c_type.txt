static	O
FILE	struct
*	O
fileptr	pointer
;	O
static	O
int	O
sectionptr	int
;	O
static	O
char	O
line	array
[	O
MAXLINE	int
]	O
;	O
int	O
configuration_init	function
(	O
file_name	pointer
)	O
char	O
*	O
file_name	pointer
;	O
{	O
if	O
(	O
file_name	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
fileptr	pointer
=	O
fopen	function
(	O
file_name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
fileptr	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
sectionptr	int
=	O
-	O
1	int
;	O
return	O
1	int
;	O
}	O
void	O
configuration_end	function
(	O
)	O
{	O
if	O
(	O
fileptr	pointer
)	O
fclose	function
(	O
fileptr	pointer
)	O
;	O
}	O
static	O
int	O
configuration_getline	function
(	O
)	O
{	O
int	O
c	int
;	O
size_t	long
len	long
;	O
char	O
*	O
comment	pointer
;	O
for	O
(	O
;	O
;	O
)	O
{	O
comment	pointer
=	O
NULL	O
;	O
if	O
(	O
fgets	function
(	O
line	array
,	O
MAXLINE	int
,	O
fileptr	pointer
)	O
==	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
(	O
len	long
=	O
strlen	function
(	O
line	array
)	O
)	O
==	O
MAXLINE	int
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: configuration: line too long. Truncated.\n"	pointer
,	O
g_program	pointer
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
c	int
=	O
fgetc	function
(	O
fileptr	pointer
)	O
;	O
if	O
(	O
c	int
==	O
'\n'	O
||	O
c	int
==	O
EOF	O
)	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
comment	pointer
=	O
strchr	function
(	O
line	array
,	O
ICS	char
)	O
)	O
)	O
{	O
char	O
*	O
ptr	pointer
;	O
int	O
isws	int
=	O
1	int
;	O
*	O
comment	pointer
=	O
0	int
;	O
for	O
(	O
ptr	pointer
=	O
line	array
;	O
*	O
ptr	pointer
;	O
ptr	pointer
++	O
)	O
{	O
if	O
(	O
!	O
isspace	function
(	O
(	O
int	O
)	O
*	O
ptr	pointer
)	O
)	O
{	O
isws	int
=	O
0	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
isws	int
)	O
comment	pointer
=	O
line	array
;	O
}	O
else	O
if	O
(	O
line	array
[	O
len	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
line	array
[	O
len	long
-	O
1	int
]	O
=	O
0	int
;	O
if	O
(	O
comment	pointer
!=	O
line	array
)	O
return	O
1	int
;	O
}	O
}	O
int	O
configuration_section	function
(	O
section_name	pointer
)	O
char	O
*	O
section_name	pointer
;	O
{	O
fseek	function
(	O
fileptr	pointer
,	O
0	int
,	O
SEEK_SET	int
)	O
;	O
while	O
(	O
configuration_getline	function
(	O
)	O
)	O
if	O
(	O
strcmp	function
(	O
section_name	pointer
,	O
line	array
)	O
==	O
0	int
)	O
return	O
sectionptr	int
=	O
ftell	function
(	O
fileptr	pointer
)	O
;	O
return	O
sectionptr	int
=	O
-	O
1	int
;	O
}	O
void	O
configuration_getvarinfo	function
(	O
var_name	pointer
,	O
dest	pointer
,	O
fields	int
,	O
seek	pointer
)	O
char	O
*	O
var_name	pointer
,	O
*	O
*	O
dest	pointer
;	O
int	O
fields	int
,	O
seek	pointer
;	O
{	O
int	O
fld	int
;	O
char	O
buf	array
[	O
MAXLINE	int
]	O
,	O
*	O
ptr	pointer
,	O
*	O
tmp	pointer
;	O
if	O
(	O
seek	pointer
)	O
fseek	function
(	O
fileptr	pointer
,	O
sectionptr	int
,	O
SEEK_SET	int
)	O
;	O
if	O
(	O
fields	int
==	O
1	int
)	O
*	O
dest	pointer
=	O
0	int
;	O
else	O
memset	function
(	O
(	O
char	O
*	O
)	O
dest	pointer
,	O
0	int
,	O
fields	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
while	O
(	O
configuration_getline	function
(	O
)	O
&&	O
*	O
line	array
)	O
{	O
*	O
buf	array
=	O
0	int
;	O
sscanf	function
(	O
line	array
,	O
"%s"	pointer
,	O
buf	array
)	O
;	O
if	O
(	O
seek	pointer
==	O
NO_SEEK	int
)	O
buf	array
[	O
32	int
]	O
=	O
0	int
;	O
if	O
(	O
!	O
isprint	function
(	O
(	O
int	O
)	O
*	O
buf	array
)	O
)	O
return	O
;	O
if	O
(	O
seek	pointer
==	O
NO_SEEK	int
||	O
strcmp	function
(	O
var_name	pointer
,	O
buf	array
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ptr	pointer
=	O
strchr	function
(	O
line	array
,	O
IAS	char
)	O
)	O
&&	O
*	O
++	O
ptr	pointer
)	O
{	O
for	O
(	O
dest	pointer
[	O
0	int
]	O
=	O
ptr	pointer
,	O
fld	int
=	O
1	int
;	O
*	O
ptr	pointer
&&	O
fld	int
<	O
fields	int
;	O
ptr	pointer
++	O
)	O
if	O
(	O
*	O
ptr	pointer
==	O
IFS	char
)	O
{	O
*	O
ptr	pointer
=	O
0	int
;	O
if	O
(	O
*	O
(	O
ptr	pointer
+	O
1	int
)	O
&&	O
*	O
(	O
ptr	pointer
+	O
1	int
)	O
!=	O
IFS	char
)	O
dest	pointer
[	O
fld	int
]	O
=	O
ptr	pointer
+	O
1	int
;	O
fld	int
++	O
;	O
}	O
if	O
(	O
(	O
ptr	pointer
=	O
strchr	function
(	O
ptr	pointer
,	O
IFS	char
)	O
)	O
)	O
*	O
ptr	pointer
=	O
0	int
;	O
}	O
for	O
(	O
fld	int
=	O
0	int
;	O
fld	int
<	O
fields	int
;	O
fld	int
++	O
)	O
if	O
(	O
dest	pointer
[	O
fld	int
]	O
)	O
{	O
while	O
(	O
isspace	function
(	O
(	O
int	O
)	O
*	O
dest	pointer
[	O
fld	int
]	O
)	O
)	O
dest	pointer
[	O
fld	int
]	O
++	O
;	O
tmp	pointer
=	O
dest	pointer
[	O
fld	int
]	O
+	O
strlen	function
(	O
dest	pointer
[	O
fld	int
]	O
)	O
-	O
1	int
;	O
while	O
(	O
isspace	function
(	O
(	O
int	O
)	O
*	O
tmp	pointer
)	O
&&	O
tmp	pointer
>=	O
dest	pointer
[	O
fld	int
]	O
)	O
tmp	pointer
--	O
;	O
*	O
(	O
tmp	pointer
+	O
1	int
)	O
=	O
0	int
;	O
if	O
(	O
dest	pointer
[	O
fld	int
]	O
[	O
0	int
]	O
==	O
0	int
)	O
dest	pointer
[	O
fld	int
]	O
=	O
NULL	O
;	O
}	O
if	O
(	O
seek	pointer
==	O
NO_SEEK	int
)	O
strcpy	function
(	O
var_name	pointer
,	O
buf	array
)	O
;	O
return	O
;	O
}	O
}	O
if	O
(	O
seek	pointer
==	O
NO_SEEK	int
)	O
*	O
var_name	pointer
=	O
0	int
;	O
}	O
