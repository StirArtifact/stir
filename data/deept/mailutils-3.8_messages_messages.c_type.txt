static	O
int	O
messages_count	function
(	O
const	O
char	O
*	O
)	O
;	O
static	O
int	O
silent	int
=	O
0	int
;	O
static	O
struct	O
mu_option	struct
messages_options	array
[	O
]	O
=	O
{	O
{	O
"quiet"	pointer
,	O
'q'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"only display number of messages"	pointer
)	O
,	O
mu_c_bool	int
,	O
&	O
silent	int
}	O
,	O
{	O
"silent"	pointer
,	O
's'	O
,	O
NULL	O
,	O
MU_OPTION_ALIAS	int
}	O
,	O
MU_OPTION_END	O
}	O
;	O
static	O
char	O
*	O
capa	pointer
[	O
]	O
=	O
{	O
"debug"	pointer
,	O
"mailbox"	pointer
,	O
"locking"	pointer
,	O
NULL	O
}	O
;	O
static	O
struct	O
mu_option	struct
*	O
options	array
[	O
]	O
=	O
{	O
messages_options	array
,	O
NULL	O
}	O
;	O
struct	O
mu_cli_setup	struct
cli	struct
=	O
{	O
options	array
,	O
NULL	O
,	O
N_	O
(	O
"GNU messages -- count the number of messages in a mailbox"	pointer
)	O
,	O
N_	O
(	O
"[mailbox...]"	pointer
)	O
}	O
;	O
int	O
main	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
err	int
=	O
0	int
;	O
MU_APP_INIT_NLS	O
(	O
)	O
;	O
mu_register_all_mbox_formats	O
(	O
)	O
;	O
mu_auth_register_module	function
(	O
&	O
mu_auth_tls_module	struct
)	O
;	O
mu_cli	function
(	O
argc	long
,	O
argv	pointer
,	O
&	O
cli	struct
,	O
capa	pointer
,	O
NULL	O
,	O
&	O
argc	long
,	O
&	O
argv	pointer
)	O
;	O
if	O
(	O
argc	long
==	O
0	int
&&	O
messages_count	function
(	O
NULL	O
)	O
<	O
0	int
)	O
err	int
=	O
1	int
;	O
else	O
if	O
(	O
argc	long
>=	O
1	int
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
messages_count	function
(	O
argv	pointer
[	O
i	long
]	O
)	O
<	O
0	int
)	O
err	int
=	O
1	int
;	O
}	O
}	O
return	O
err	int
;	O
}	O
static	O
int	O
messages_count	function
(	O
const	O
char	O
*	O
box	pointer
)	O
{	O
mu_mailbox_t	pointer
mbox	pointer
;	O
mu_url_t	pointer
url	pointer
=	O
NULL	O
;	O
size_t	long
count	long
;	O
int	O
status	int
=	O
0	int
;	O
status	int
=	O
mu_mailbox_create_default	function
(	O
&	O
mbox	pointer
,	O
box	pointer
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
if	O
(	O
box	pointer
)	O
mu_error	function
(	O
_	O
(	O
"could not create mailbox `%s': %s"	pointer
)	O
,	O
box	pointer
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
else	O
mu_error	function
(	O
_	O
(	O
"could not create default mailbox: %s"	pointer
)	O
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
mu_mailbox_get_url	function
(	O
mbox	pointer
,	O
&	O
url	pointer
)	O
;	O
box	pointer
=	O
mu_url_to_string	function
(	O
url	pointer
)	O
;	O
status	int
=	O
mu_mailbox_open	function
(	O
mbox	pointer
,	O
MU_STREAM_READ	int
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"could not open mailbox `%s': %s"	pointer
)	O
,	O
box	pointer
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
status	int
=	O
mu_mailbox_messages_count	function
(	O
mbox	pointer
,	O
&	O
count	long
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"could not count messages in mailbox `%s': %s"	pointer
)	O
,	O
box	pointer
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
silent	int
)	O
mu_printf	function
(	O
"%lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
count	long
)	O
;	O
else	O
mu_printf	function
(	O
_	O
(	O
"Number of messages in %s: %lu\n"	pointer
)	O
,	O
box	pointer
,	O
(	O
unsigned	O
long	O
)	O
count	long
)	O
;	O
status	int
=	O
mu_mailbox_close	function
(	O
mbox	pointer
)	O
;	O
if	O
(	O
status	int
!=	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"could not close `%s': %s"	pointer
)	O
,	O
box	pointer
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
mu_mailbox_destroy	function
(	O
&	O
mbox	pointer
)	O
;	O
return	O
count	long
;	O
}	O
