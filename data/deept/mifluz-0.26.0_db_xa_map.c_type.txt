static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: xa_map.c,v 1.4 2014/04/17 20:27:42 sebdiaz Exp $"	pointer
;	O
int	O
CDB___db_rmid_to_env	function
(	O
rmid	int
,	O
envp	pointer
)	O
int	O
rmid	int
;	O
DB_ENV	struct
*	O
*	O
envp	pointer
;	O
{	O
DB_ENV	struct
*	O
env	pointer
;	O
env	pointer
=	O
TAILQ_FIRST	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
)	O
;	O
if	O
(	O
env	pointer
!=	O
NULL	O
&&	O
env	pointer
->	O
xa_rmid	int
==	O
rmid	int
)	O
{	O
*	O
envp	pointer
=	O
env	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
for	O
(	O
;	O
env	pointer
!=	O
NULL	O
;	O
env	pointer
=	O
TAILQ_NEXT	O
(	O
env	pointer
,	O
links	struct
)	O
)	O
if	O
(	O
env	pointer
->	O
xa_rmid	int
==	O
rmid	int
)	O
{	O
TAILQ_REMOVE	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
,	O
env	pointer
,	O
links	struct
)	O
;	O
TAILQ_INSERT_HEAD	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
,	O
env	pointer
,	O
links	struct
)	O
;	O
*	O
envp	pointer
=	O
env	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
return	O
(	O
1	int
)	O
;	O
}	O
int	O
CDB___db_xid_to_txn	function
(	O
dbenv	pointer
,	O
xid	array
,	O
offp	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
XID	struct
*	O
xid	array
;	O
size_t	long
*	O
offp	pointer
;	O
{	O
DB_TXNMGR	struct
*	O
mgr	pointer
;	O
DB_TXNREGION	struct
*	O
tmr	pointer
;	O
struct	O
__txn_detail	struct
*	O
td	pointer
;	O
mgr	pointer
=	O
dbenv	pointer
->	O
tx_handle	pointer
;	O
tmr	pointer
=	O
mgr	pointer
->	O
reginfo	pointer
.	O
primary	int
;	O
R_LOCK	O
(	O
dbenv	pointer
,	O
&	O
mgr	pointer
->	O
reginfo	pointer
)	O
;	O
for	O
(	O
td	pointer
=	O
SH_TAILQ_FIRST	O
(	O
&	O
tmr	pointer
->	O
active_txn	struct
,	O
__txn_detail	struct
)	O
;	O
td	pointer
!=	O
NULL	O
;	O
td	pointer
=	O
SH_TAILQ_NEXT	O
(	O
td	pointer
,	O
links	struct
,	O
__txn_detail	struct
)	O
)	O
if	O
(	O
memcmp	function
(	O
xid	array
->	O
data	pointer
,	O
td	pointer
->	O
xid	array
,	O
XIDDATASIZE	int
)	O
==	O
0	int
)	O
break	O
;	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
&	O
mgr	pointer
->	O
reginfo	pointer
)	O
;	O
if	O
(	O
td	pointer
==	O
NULL	O
)	O
return	O
(	O
EINVAL	int
)	O
;	O
*	O
offp	pointer
=	O
R_OFFSET	O
(	O
&	O
mgr	pointer
->	O
reginfo	pointer
,	O
td	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___db_map_rmid	function
(	O
rmid	int
,	O
env	pointer
)	O
int	O
rmid	int
;	O
DB_ENV	struct
*	O
env	pointer
;	O
{	O
env	pointer
->	O
xa_rmid	int
=	O
rmid	int
;	O
TAILQ_INSERT_TAIL	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
,	O
env	pointer
,	O
links	struct
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___db_unmap_rmid	function
(	O
rmid	int
)	O
int	O
rmid	int
;	O
{	O
DB_ENV	struct
*	O
e	pointer
;	O
for	O
(	O
e	pointer
=	O
TAILQ_FIRST	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
)	O
;	O
e	pointer
->	O
xa_rmid	int
!=	O
rmid	int
;	O
e	pointer
=	O
TAILQ_NEXT	O
(	O
e	pointer
,	O
links	struct
)	O
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
return	O
(	O
EINVAL	int
)	O
;	O
TAILQ_REMOVE	O
(	O
&	O
DB_GLOBAL	O
(	O
db_envq	struct
)	O
,	O
e	pointer
,	O
links	struct
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___db_map_xid	function
(	O
env	pointer
,	O
xid	array
,	O
off	long
)	O
DB_ENV	struct
*	O
env	pointer
;	O
XID	struct
*	O
xid	array
;	O
size_t	long
off	long
;	O
{	O
REGINFO	struct
*	O
infop	pointer
;	O
TXN_DETAIL	struct
*	O
td	pointer
;	O
infop	pointer
=	O
&	O
(	O
(	O
DB_TXNMGR	struct
*	O
)	O
env	pointer
->	O
tx_handle	pointer
)	O
->	O
reginfo	pointer
;	O
td	pointer
=	O
(	O
TXN_DETAIL	struct
*	O
)	O
R_ADDR	O
(	O
infop	pointer
,	O
off	long
)	O
;	O
R_LOCK	O
(	O
env	pointer
,	O
infop	pointer
)	O
;	O
memcpy	function
(	O
td	pointer
->	O
xid	array
,	O
xid	array
->	O
data	pointer
,	O
XIDDATASIZE	int
)	O
;	O
td	pointer
->	O
bqual	int
=	O
(	O
u_int32_t	int
)	O
xid	array
->	O
bqual_length	long
;	O
td	pointer
->	O
gtrid	int
=	O
(	O
u_int32_t	int
)	O
xid	array
->	O
gtrid_length	long
;	O
td	pointer
->	O
format	int
=	O
(	O
int32_t	int
)	O
xid	array
->	O
formatID	long
;	O
R_UNLOCK	O
(	O
env	pointer
,	O
infop	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
void	O
CDB___db_unmap_xid	function
(	O
env	pointer
,	O
xid	array
,	O
off	long
)	O
DB_ENV	struct
*	O
env	pointer
;	O
XID	struct
*	O
xid	array
;	O
size_t	long
off	long
;	O
{	O
if	O
(	O
xid	array
)	O
{	O
}	O
TXN_DETAIL	struct
*	O
td	pointer
;	O
COMPQUIET	O
(	O
xid	array
,	O
NULL	O
)	O
;	O
td	pointer
=	O
(	O
TXN_DETAIL	struct
*	O
)	O
R_ADDR	O
(	O
&	O
(	O
(	O
DB_TXNMGR	struct
*	O
)	O
env	pointer
->	O
tx_handle	pointer
)	O
->	O
reginfo	pointer
,	O
off	long
)	O
;	O
memset	function
(	O
td	pointer
->	O
xid	array
,	O
0	int
,	O
sizeof	O
(	O
td	pointer
->	O
xid	array
)	O
)	O
;	O
}	O
