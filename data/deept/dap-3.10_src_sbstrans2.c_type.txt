extern	O
char	O
sbstmp	array
[	O
TOKENLEN	int
+	O
1	int
]	O
;	O
extern	O
int	O
sbslineno	int
;	O
int	O
sbshaspicts	int
;	O
void	O
charttrans	function
(	O
char	O
*	O
step	pointer
,	O
FILE	struct
*	O
dapfile	pointer
)	O
{	O
int	O
s	int
;	O
int	O
sincr	int
;	O
char	O
setname	pointer
[	O
TOKENLEN	int
+	O
1	int
]	O
;	O
char	O
varname	array
[	O
TOKENLEN	int
+	O
1	int
+	O
1	int
]	O
;	O
if	O
(	O
!	O
(	O
s	int
=	O
getoption	function
(	O
step	pointer
,	O
"data"	pointer
,	O
setname	pointer
,	O
1	int
)	O
)	O
)	O
strcpy	function
(	O
setname	pointer
,	O
sbstmp	array
)	O
;	O
if	O
(	O
isby	function
(	O
step	pointer
)	O
>=	O
0	int
)	O
countparts	function
(	O
step	pointer
,	O
setname	pointer
,	O
dapfile	pointer
)	O
;	O
else	O
fputs	function
(	O
"_sbspictcnt_[_sbsnpicts_] = 1;\n"	pointer
,	O
dapfile	pointer
)	O
;	O
fprintf	function
(	O
dapfile	pointer
,	O
"_sbspict_[_sbsnpicts_] = histogram(\"%s\", \""	pointer
,	O
setname	pointer
)	O
;	O
if	O
(	O
(	O
s	int
=	O
findstatement	function
(	O
step	pointer
,	O
"vbar"	pointer
)	O
)	O
)	O
{	O
s	int
+=	O
linecpy	function
(	O
varname	array
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
fprintf	function
(	O
dapfile	pointer
,	O
"%s "	pointer
,	O
varname	array
)	O
;	O
if	O
(	O
(	O
s	int
=	O
getoption	function
(	O
step	pointer
+	O
s	int
,	O
"freq"	pointer
,	O
varname	array
,	O
0	int
)	O
)	O
)	O
fputs	function
(	O
varname	array
,	O
dapfile	pointer
)	O
;	O
fputs	function
(	O
"\", \""	pointer
,	O
dapfile	pointer
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: missing vbar statement in proc chart.\n"	pointer
,	O
sbslineno	int
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
copylist	function
(	O
step	pointer
,	O
"by"	pointer
,	O
dapfile	pointer
)	O
;	O
fputs	function
(	O
"\", "	pointer
,	O
dapfile	pointer
)	O
;	O
s	int
=	O
findstatement	function
(	O
step	pointer
,	O
"vbar"	pointer
)	O
;	O
if	O
(	O
getoption	function
(	O
step	pointer
+	O
s	int
,	O
"levels"	pointer
,	O
varname	array
,	O
1	int
)	O
)	O
fputs	function
(	O
varname	array
,	O
dapfile	pointer
)	O
;	O
else	O
fputs	function
(	O
"10"	pointer
,	O
dapfile	pointer
)	O
;	O
fputs	function
(	O
", \""	pointer
,	O
dapfile	pointer
)	O
;	O
fputs	function
(	O
"== "	pointer
,	O
dapfile	pointer
)	O
;	O
if	O
(	O
getoption	function
(	O
step	pointer
+	O
s	int
,	O
"type"	pointer
,	O
varname	array
,	O
1	int
)	O
)	O
{	O
if	O
(	O
!	O
linecmp	function
(	O
varname	array
,	O
"freq"	pointer
)	O
)	O
strcpy	function
(	O
varname	array
,	O
"COUNT"	pointer
)	O
;	O
else	O
if	O
(	O
!	O
linecmp	function
(	O
varname	array
,	O
"percent"	pointer
)	O
||	O
!	O
linecmp	function
(	O
varname	array
,	O
"pct"	pointer
)	O
)	O
strcpy	function
(	O
varname	array
,	O
"PERCENT"	pointer
)	O
;	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: bad option %s in vbar statement in proc chart.\n"	pointer
,	O
sbslineno	int
,	O
varname	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
fputs	function
(	O
varname	array
,	O
dapfile	pointer
)	O
;	O
}	O
if	O
(	O
(	O
sincr	int
=	O
getoption	function
(	O
step	pointer
+	O
s	int
,	O
"axis"	pointer
,	O
varname	array
,	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
!	O
linecmp	function
(	O
varname	array
,	O
"+"	pointer
)	O
||	O
!	O
linecmp	function
(	O
varname	array
,	O
"-"	pointer
)	O
)	O
{	O
s	int
+=	O
sincr	int
;	O
s	int
+=	O
linecpy	function
(	O
varname	array
+	O
1	int
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
}	O
else	O
s	int
+=	O
sincr	int
;	O
if	O
(	O
'0'	O
<=	O
step	pointer
[	O
s	int
]	O
&&	O
step	pointer
[	O
s	int
]	O
<=	O
'9'	O
||	O
step	pointer
[	O
s	int
]	O
==	O
'.'	O
||	O
step	pointer
[	O
s	int
]	O
==	O
'-'	O
||	O
step	pointer
[	O
s	int
]	O
==	O
'+'	O
)	O
{	O
fprintf	function
(	O
dapfile	pointer
,	O
" MINX%s"	pointer
,	O
varname	array
)	O
;	O
if	O
(	O
step	pointer
[	O
s	int
]	O
==	O
'-'	O
||	O
step	pointer
[	O
s	int
]	O
==	O
'-'	O
)	O
{	O
s	int
+=	O
linecpy	function
(	O
varname	array
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
linecpy	function
(	O
varname	array
+	O
1	int
,	O
step	pointer
+	O
s	int
)	O
;	O
}	O
else	O
linecpy	function
(	O
varname	array
,	O
step	pointer
+	O
s	int
)	O
;	O
}	O
fprintf	function
(	O
dapfile	pointer
,	O
" MAXX%s"	pointer
,	O
varname	array
)	O
;	O
}	O
fprintf	function
(	O
dapfile	pointer
,	O
"\", NULL, %d);\n"	pointer
,	O
MAXPICTS	int
)	O
;	O
fputs	function
(	O
"_sbspictpage_[_sbsnpicts_++] = 1;\n"	pointer
,	O
dapfile	pointer
)	O
;	O
sbshaspicts	int
=	O
1	int
;	O
}	O
void	O
plottrans	function
(	O
char	O
*	O
step	pointer
,	O
FILE	struct
*	O
dapfile	pointer
)	O
{	O
int	O
s	int
;	O
int	O
sincr	int
;	O
int	O
by	int
;	O
char	O
setname	pointer
[	O
TOKENLEN	int
+	O
1	int
]	O
;	O
char	O
xname	array
[	O
TOKENLEN	int
+	O
1	int
]	O
;	O
char	O
yname	array
[	O
TOKENLEN	int
+	O
1	int
]	O
;	O
if	O
(	O
!	O
(	O
s	int
=	O
getoption	function
(	O
step	pointer
,	O
"data"	pointer
,	O
setname	pointer
,	O
1	int
)	O
)	O
)	O
strcpy	function
(	O
setname	pointer
,	O
sbstmp	array
)	O
;	O
by	int
=	O
isby	function
(	O
step	pointer
)	O
;	O
for	O
(	O
s	int
=	O
0	int
;	O
(	O
sincr	int
=	O
findstatement	function
(	O
step	pointer
+	O
s	int
,	O
"plot"	pointer
)	O
)	O
;	O
s	int
+=	O
2	int
)	O
{	O
if	O
(	O
by	int
>=	O
0	int
)	O
countparts	function
(	O
step	pointer
,	O
setname	pointer
,	O
dapfile	pointer
)	O
;	O
else	O
fputs	function
(	O
"_sbspictcnt_[_sbsnpicts_] = 1;\n"	pointer
,	O
dapfile	pointer
)	O
;	O
s	int
+=	O
sincr	int
;	O
fprintf	function
(	O
dapfile	pointer
,	O
"_sbspict_[_sbsnpicts_] = plot(\"%s\", \""	pointer
,	O
setname	pointer
)	O
;	O
s	int
+=	O
linecpy	function
(	O
yname	array
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
if	O
(	O
!	O
alpha	function
(	O
yname	array
[	O
0	int
]	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: bad vertical variable name in plot statement in proc plot.\n"	pointer
,	O
sbslineno	int
,	O
yname	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
linecmp	function
(	O
step	pointer
+	O
s	int
,	O
"*"	pointer
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: missing * after vertical variable name in plot statement in proc plot.\n"	pointer
,	O
sbslineno	int
,	O
yname	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
s	int
+=	O
2	int
;	O
s	int
+=	O
linecpy	function
(	O
xname	array
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
if	O
(	O
!	O
alpha	function
(	O
xname	array
[	O
0	int
]	O
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: bad horizontal variable name in plot statement in proc plot.\n"	pointer
,	O
sbslineno	int
,	O
xname	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
fprintf	function
(	O
dapfile	pointer
,	O
"%s %s\", \""	pointer
,	O
xname	array
,	O
yname	array
)	O
;	O
copylist	function
(	O
step	pointer
,	O
"by"	pointer
,	O
dapfile	pointer
)	O
;	O
fputs	function
(	O
"\", \""	pointer
,	O
dapfile	pointer
)	O
;	O
if	O
(	O
step	pointer
[	O
s	int
]	O
==	O
'/'	O
)	O
{	O
s	int
+=	O
2	int
;	O
while	O
(	O
step	pointer
[	O
s	int
]	O
&&	O
step	pointer
[	O
s	int
]	O
!=	O
';'	O
)	O
{	O
s	int
+=	O
linecpy	function
(	O
xname	array
,	O
step	pointer
+	O
s	int
)	O
+	O
1	int
;	O
if	O
(	O
!	O
linecmp	function
(	O
xname	array
,	O
"box"	pointer
)	O
)	O
fputs	function
(	O
"== "	pointer
,	O
dapfile	pointer
)	O
;	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: bad option %s in plot statement in proc plot.\n"	pointer
,	O
sbslineno	int
,	O
xname	array
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
}	O
fprintf	function
(	O
dapfile	pointer
,	O
"\", NULL, NULL, %d);\n"	pointer
,	O
MAXPICTS	int
)	O
;	O
fputs	function
(	O
"_sbspictpage_[_sbsnpicts_++] = 1;\n"	pointer
,	O
dapfile	pointer
)	O
;	O
sbshaspicts	int
=	O
1	int
;	O
}	O
if	O
(	O
!	O
s	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"sbstrans: before %d: missing plot statement in proc plot.\n"	pointer
,	O
sbslineno	int
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
