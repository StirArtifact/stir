int	O
linebuffer_reset	function
(	O
linebuffer	struct
*	O
lb	pointer
)	O
{	O
lb	pointer
->	O
buffer	pointer
=	O
NULL	O
;	O
lb	pointer
->	O
length	long
=	O
0	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
linebuffer_free	function
(	O
linebuffer	struct
*	O
lb	pointer
)	O
{	O
if	O
(	O
lb	pointer
->	O
buffer	pointer
!=	O
NULL	O
)	O
free	function
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
linebuffer_reset	function
(	O
lb	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
linebuffer_concatenate	function
(	O
linebuffer	struct
*	O
lb	pointer
,	O
char	O
*	O
buff	pointer
,	O
size_t	long
size	long
)	O
{	O
if	O
(	O
buff	pointer
==	O
NULL	O
||	O
size	long
<=	O
0	int
)	O
return	O
(	O
0	int
)	O
;	O
lb	pointer
->	O
buffer	pointer
=	O
(	O
char	O
*	O
)	O
realloc	function
(	O
lb	pointer
->	O
buffer	pointer
,	O
lb	pointer
->	O
length	long
+	O
size	long
+	O
1	int
)	O
;	O
malloc_check	O
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
memcpy	function
(	O
lb	pointer
->	O
buffer	pointer
+	O
lb	pointer
->	O
length	long
,	O
buff	pointer
,	O
size	long
)	O
;	O
lb	pointer
->	O
length	long
+=	O
size	long
;	O
lb	pointer
->	O
buffer	pointer
[	O
lb	pointer
->	O
length	long
]	O
=	O
0	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
char	O
*	O
linebuffer_read_line	function
(	O
int	O
fd	int
,	O
linebuffer	struct
*	O
lb	pointer
,	O
int	O
timeout	int
)	O
{	O
char	O
*	O
line	pointer
,	O
*	O
eoc	pointer
,	O
buff	pointer
[	O
256	int
]	O
;	O
int	O
length	long
,	O
n	int
;	O
struct	O
timeval	struct
tv	struct
,	O
*	O
ptv	pointer
,	O
tn	struct
;	O
fd_set	struct
set	struct
;	O
if	O
(	O
timeout	int
>	O
0	int
)	O
{	O
tv	struct
.	O
tv_sec	long
=	O
timeout	int
;	O
tv	struct
.	O
tv_usec	long
=	O
0	int
;	O
ptv	pointer
=	O
&	O
tv	struct
;	O
}	O
else	O
ptv	pointer
=	O
NULL	O
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
lb	pointer
->	O
buffer	pointer
!=	O
NULL	O
)	O
eoc	pointer
=	O
memchr	function
(	O
lb	pointer
->	O
buffer	pointer
,	O
10	int
,	O
lb	pointer
->	O
length	long
)	O
;	O
else	O
eoc	pointer
=	O
NULL	O
;	O
if	O
(	O
eoc	pointer
!=	O
NULL	O
)	O
{	O
length	long
=	O
(	O
int	O
)	O
(	O
eoc	pointer
-	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
line	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
1	int
+	O
length	long
)	O
;	O
malloc_check	O
(	O
line	pointer
)	O
;	O
memcpy	function
(	O
line	pointer
,	O
lb	pointer
->	O
buffer	pointer
,	O
length	long
)	O
;	O
line	pointer
[	O
length	long
]	O
=	O
0	int
;	O
length	long
++	O
;	O
if	O
(	O
length	long
>=	O
lb	pointer
->	O
length	long
)	O
{	O
free	function
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
lb	pointer
->	O
buffer	pointer
=	O
NULL	O
;	O
lb	pointer
->	O
length	long
=	O
0	int
;	O
}	O
else	O
{	O
memmove	function
(	O
lb	pointer
->	O
buffer	pointer
,	O
lb	pointer
->	O
buffer	pointer
+	O
length	long
,	O
lb	pointer
->	O
length	long
-	O
length	long
)	O
;	O
lb	pointer
->	O
length	long
-=	O
length	long
;	O
}	O
return	O
(	O
line	pointer
)	O
;	O
}	O
FD_ZERO	O
(	O
&	O
set	struct
)	O
;	O
FD_SET	O
(	O
fd	int
,	O
&	O
set	struct
)	O
;	O
tn	struct
.	O
tv_sec	long
=	O
0	int
;	O
tn	struct
.	O
tv_usec	long
=	O
0	int
;	O
select	function
(	O
fd	int
+	O
1	int
,	O
&	O
set	struct
,	O
NULL	O
,	O
NULL	O
,	O
&	O
tn	struct
)	O
;	O
if	O
(	O
FD_ISSET	O
(	O
fd	int
,	O
&	O
set	struct
)	O
)	O
{	O
n	int
=	O
read	pointer
(	O
fd	int
,	O
buff	pointer
,	O
256	int
)	O
;	O
if	O
(	O
n	int
>	O
0	int
)	O
linebuffer_concatenate	function
(	O
lb	pointer
,	O
buff	pointer
,	O
n	int
)	O
;	O
else	O
if	O
(	O
!	O
(	O
n	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
)	O
return	O
(	O
NULL	O
)	O
;	O
}	O
else	O
{	O
FD_ZERO	O
(	O
&	O
set	struct
)	O
;	O
FD_SET	O
(	O
fd	int
,	O
&	O
set	struct
)	O
;	O
select	function
(	O
fd	int
+	O
1	int
,	O
&	O
set	struct
,	O
NULL	O
,	O
NULL	O
,	O
ptv	pointer
)	O
;	O
if	O
(	O
FD_ISSET	O
(	O
fd	int
,	O
&	O
set	struct
)	O
)	O
{	O
n	int
=	O
read	pointer
(	O
fd	int
,	O
buff	pointer
,	O
256	int
)	O
;	O
if	O
(	O
n	int
>	O
0	int
)	O
linebuffer_concatenate	function
(	O
lb	pointer
,	O
buff	pointer
,	O
n	int
)	O
;	O
else	O
if	O
(	O
!	O
(	O
n	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
)	O
return	O
(	O
NULL	O
)	O
;	O
}	O
else	O
return	O
(	O
NULL	O
)	O
;	O
}	O
}	O
return	O
(	O
NULL	O
)	O
;	O
}	O
char	O
*	O
linebuffer_fetch	function
(	O
linebuffer	struct
*	O
lb	pointer
)	O
{	O
char	O
*	O
eoc	pointer
,	O
*	O
line	pointer
;	O
size_t	long
length	long
;	O
if	O
(	O
lb	pointer
->	O
buffer	pointer
!=	O
NULL	O
&&	O
lb	pointer
->	O
length	long
>	O
0	int
)	O
eoc	pointer
=	O
memchr	function
(	O
lb	pointer
->	O
buffer	pointer
,	O
10	int
,	O
lb	pointer
->	O
length	long
)	O
;	O
else	O
eoc	pointer
=	O
NULL	O
;	O
if	O
(	O
eoc	pointer
!=	O
NULL	O
)	O
{	O
length	long
=	O
(	O
size_t	long
)	O
(	O
eoc	pointer
-	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
line	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
1	int
+	O
length	long
)	O
;	O
malloc_check	O
(	O
line	pointer
)	O
;	O
memcpy	function
(	O
line	pointer
,	O
lb	pointer
->	O
buffer	pointer
,	O
length	long
)	O
;	O
line	pointer
[	O
length	long
]	O
=	O
0	int
;	O
length	long
++	O
;	O
if	O
(	O
length	long
>=	O
lb	pointer
->	O
length	long
)	O
{	O
free	function
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
lb	pointer
->	O
buffer	pointer
=	O
NULL	O
;	O
lb	pointer
->	O
length	long
=	O
0	int
;	O
}	O
else	O
{	O
memmove	function
(	O
lb	pointer
->	O
buffer	pointer
,	O
lb	pointer
->	O
buffer	pointer
+	O
length	long
,	O
lb	pointer
->	O
length	long
-	O
length	long
)	O
;	O
lb	pointer
->	O
length	long
-=	O
length	long
;	O
}	O
return	O
(	O
line	pointer
)	O
;	O
}	O
else	O
return	O
(	O
NULL	O
)	O
;	O
}	O
char	O
*	O
linebuffer_flush	function
(	O
linebuffer	struct
*	O
lb	pointer
)	O
{	O
char	O
*	O
line	pointer
;	O
size_t	long
length	long
;	O
if	O
(	O
lb	pointer
->	O
buffer	pointer
!=	O
NULL	O
&&	O
lb	pointer
->	O
length	long
>	O
0	int
)	O
{	O
line	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
lb	pointer
->	O
length	long
+	O
1	int
)	O
;	O
malloc_check	O
(	O
line	pointer
)	O
;	O
length	long
=	O
lb	pointer
->	O
length	long
;	O
memcpy	function
(	O
line	pointer
,	O
lb	pointer
->	O
buffer	pointer
,	O
length	long
)	O
;	O
line	pointer
[	O
length	long
]	O
=	O
0	int
;	O
free	function
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
linebuffer_reset	function
(	O
lb	pointer
)	O
;	O
return	O
(	O
line	pointer
)	O
;	O
}	O
else	O
{	O
if	O
(	O
lb	pointer
->	O
buffer	pointer
!=	O
NULL	O
)	O
free	function
(	O
lb	pointer
->	O
buffer	pointer
)	O
;	O
linebuffer_reset	function
(	O
lb	pointer
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
}	O
