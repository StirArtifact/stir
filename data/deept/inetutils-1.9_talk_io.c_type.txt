int	O
talk	function
(	O
void	O
)	O
{	O
fd_set	struct
read_template	struct
,	O
read_set	struct
;	O
int	O
stdin_fd	int
=	O
fileno	function
(	O
stdin	pointer
)	O
;	O
int	O
i	int
,	O
nb	int
,	O
num_fds	int
;	O
char	O
buf	array
[	O
BUFSIZ	int
]	O
;	O
struct	O
timeval	struct
wait	struct
;	O
message	function
(	O
"Connection established"	pointer
)	O
;	O
beep	function
(	O
)	O
;	O
current_line	int
=	O
0	int
;	O
FD_ZERO	O
(	O
&	O
read_template	struct
)	O
;	O
FD_SET	O
(	O
sockt	int
,	O
&	O
read_template	struct
)	O
;	O
FD_SET	O
(	O
stdin_fd	int
,	O
&	O
read_template	struct
)	O
;	O
num_fds	int
=	O
(	O
stdin_fd	int
>	O
sockt	int
?	O
stdin_fd	int
:	O
sockt	int
)	O
+	O
1	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
read_set	struct
=	O
read_template	struct
;	O
wait	struct
.	O
tv_sec	long
=	O
A_LONG_TIME	int
;	O
wait	struct
.	O
tv_usec	long
=	O
0	int
;	O
nb	int
=	O
select	function
(	O
num_fds	int
,	O
&	O
read_set	struct
,	O
0	int
,	O
0	int
,	O
&	O
wait	struct
)	O
;	O
if	O
(	O
nb	int
<=	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINTR	int
)	O
{	O
read_set	struct
=	O
read_template	struct
;	O
continue	O
;	O
}	O
p_error	function
(	O
"Unexpected error from select"	pointer
)	O
;	O
quit	function
(	O
)	O
;	O
}	O
if	O
(	O
FD_ISSET	O
(	O
sockt	int
,	O
&	O
read_set	struct
)	O
)	O
{	O
nb	int
=	O
read	pointer
(	O
sockt	int
,	O
buf	array
,	O
sizeof	O
buf	array
)	O
;	O
if	O
(	O
nb	int
<=	O
0	int
)	O
{	O
message	function
(	O
"Connection closed. Exiting"	pointer
)	O
;	O
quit	function
(	O
)	O
;	O
}	O
display	function
(	O
&	O
his_win	struct
,	O
buf	array
,	O
nb	int
)	O
;	O
}	O
if	O
(	O
FD_ISSET	O
(	O
stdin_fd	int
,	O
&	O
read_set	struct
)	O
)	O
{	O
ioctl	function
(	O
0	int
,	O
FIONREAD	int
,	O
(	O
struct	O
sgttyb	O
*	O
)	O
&	O
nb	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
nb	int
;	O
i	int
++	O
)	O
buf	array
[	O
i	int
]	O
=	O
getch	function
(	O
)	O
;	O
display	function
(	O
&	O
my_win	struct
,	O
buf	array
,	O
nb	int
)	O
;	O
write	pointer
(	O
sockt	int
,	O
buf	array
,	O
nb	int
)	O
;	O
}	O
}	O
}	O
int	O
p_error	function
(	O
char	O
*	O
string	pointer
)	O
{	O
wmove	function
(	O
my_win	struct
.	O
x_win	pointer
,	O
current_line	int
%	O
my_win	struct
.	O
x_nlines	int
,	O
0	int
)	O
;	O
wprintw	function
(	O
my_win	struct
.	O
x_win	pointer
,	O
"[%s : %s (%d)]\n"	pointer
,	O
string	pointer
,	O
strerror	function
(	O
errno	O
)	O
,	O
errno	O
)	O
;	O
wrefresh	function
(	O
my_win	struct
.	O
x_win	pointer
)	O
;	O
move	function
(	O
LINES	int
-	O
1	int
,	O
0	int
)	O
;	O
refresh	function
(	O
)	O
;	O
quit	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
message	function
(	O
char	O
*	O
string	pointer
)	O
{	O
wmove	function
(	O
my_win	struct
.	O
x_win	pointer
,	O
current_line	int
%	O
my_win	struct
.	O
x_nlines	int
,	O
0	int
)	O
;	O
wprintw	function
(	O
my_win	struct
.	O
x_win	pointer
,	O
"[%s]"	pointer
,	O
string	pointer
)	O
;	O
wclrtoeol	function
(	O
my_win	struct
.	O
x_win	pointer
)	O
;	O
current_line	int
++	O
;	O
wmove	function
(	O
my_win	struct
.	O
x_win	pointer
,	O
current_line	int
%	O
my_win	struct
.	O
x_nlines	int
,	O
0	int
)	O
;	O
wrefresh	function
(	O
my_win	struct
.	O
x_win	pointer
)	O
;	O
return	O
0	int
;	O
}	O
