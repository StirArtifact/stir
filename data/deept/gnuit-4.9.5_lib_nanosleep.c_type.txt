enum	O
{	O
BILLION	int
=	O
1000	int
*	O
1000	int
*	O
1000	int
}	O
;	O
static	O
void	O
getnow	function
(	O
struct	O
timespec	struct
*	O
t	pointer
)	O
{	O
if	O
(	O
clock_gettime	function
(	O
CLOCK_MONOTONIC	int
,	O
t	pointer
)	O
==	O
0	int
)	O
return	O
;	O
gettime	function
(	O
t	pointer
)	O
;	O
}	O
int	O
rpl_nanosleep	function
(	O
const	O
struct	O
timespec	struct
*	O
requested_delay	pointer
,	O
struct	O
timespec	struct
*	O
remaining_delay	pointer
)	O
{	O
struct	O
timespec	struct
delay	struct
=	O
*	O
requested_delay	pointer
;	O
struct	O
timespec	struct
t0	struct
;	O
getnow	function
(	O
&	O
t0	struct
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
r	int
=	O
nanosleep	function
(	O
&	O
delay	struct
,	O
remaining_delay	pointer
)	O
;	O
if	O
(	O
r	int
==	O
0	int
)	O
{	O
time_t	long
secs_sofar	long
;	O
struct	O
timespec	struct
now	struct
;	O
getnow	function
(	O
&	O
now	struct
)	O
;	O
secs_sofar	long
=	O
now	struct
.	O
tv_sec	long
-	O
t0	struct
.	O
tv_sec	long
;	O
if	O
(	O
requested_delay	pointer
->	O
tv_sec	long
<	O
secs_sofar	long
)	O
return	O
0	int
;	O
delay	struct
.	O
tv_sec	long
=	O
requested_delay	pointer
->	O
tv_sec	long
-	O
secs_sofar	long
;	O
delay	struct
.	O
tv_nsec	long
=	O
requested_delay	pointer
->	O
tv_nsec	long
-	O
(	O
now	struct
.	O
tv_nsec	long
-	O
t0	struct
.	O
tv_nsec	long
)	O
;	O
if	O
(	O
delay	struct
.	O
tv_nsec	long
<	O
0	int
)	O
{	O
if	O
(	O
delay	struct
.	O
tv_sec	long
==	O
0	int
)	O
return	O
0	int
;	O
delay	struct
.	O
tv_nsec	long
+=	O
BILLION	int
;	O
delay	struct
.	O
tv_sec	long
--	O
;	O
}	O
else	O
if	O
(	O
BILLION	int
<=	O
delay	struct
.	O
tv_nsec	long
)	O
{	O
delay	struct
.	O
tv_nsec	long
-=	O
BILLION	int
;	O
delay	struct
.	O
tv_sec	long
++	O
;	O
}	O
}	O
}	O
}	O
