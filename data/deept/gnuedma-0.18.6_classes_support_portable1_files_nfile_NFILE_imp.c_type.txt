typedef	O
struct	O
{	O
FILE	struct
*	O
handler	pointer
;	O
EDMAT_BUFFER	struct
buffer	struct
;	O
}	O
DtNFILE1	struct
;	O
ESint32	int
EDMAPROC	O
NFILEopenZZrS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
name	pointer
,	O
EPChar	pointer
mode	pointer
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
(	O
m	pointer
->	O
handler	pointer
=	O
fopen	function
(	O
name	pointer
,	O
mode	pointer
)	O
)	O
==	O
NULL	O
)	O
{	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"Can't open file %s:"	pointer
,	O
name	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEcloserS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
fclose	function
(	O
m	pointer
->	O
handler	pointer
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEreadsAsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EDMAT_BUFFER	struct
*	O
buf	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
buf	pointer
)	O
if	O
(	O
buf	pointer
->	O
Size	long
<	O
*	O
len	int
)	O
{	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"Not enough allocated space to read data."	pointer
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"Using Buffer size: %ld"	pointer
,	O
buf	pointer
->	O
Size	long
)	O
;	O
*	O
len	int
=	O
buf	pointer
->	O
Size	long
;	O
}	O
*	O
len	int
=	O
(	O
size_t	int
)	O
fread	function
(	O
buf	pointer
->	O
dat	pointer
,	O
1	int
,	O
*	O
len	int
,	O
m	pointer
->	O
handler	pointer
)	O
;	O
return	O
*	O
len	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEwriteAsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EDMAT_BUFFER	struct
buf	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
*	O
len	int
=	O
fwrite	function
(	O
buf	pointer
.	O
dat	pointer
,	O
1	int
,	O
*	O
len	int
,	O
m	pointer
->	O
handler	pointer
)	O
;	O
return	O
*	O
len	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEputsZS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
s	pointer
,	O
ESint32	int
len	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
EPChar	pointer
s1	pointer
;	O
ESint32	int
l	long
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
s1	pointer
=	O
strdup	function
(	O
s	pointer
)	O
;	O
l	long
=	O
len	int
;	O
if	O
(	O
l	long
>	O
strlen	function
(	O
s1	pointer
)	O
)	O
l	long
=	O
strlen	function
(	O
s1	pointer
)	O
;	O
else	O
s1	pointer
[	O
l	long
]	O
=	O
0	int
;	O
fputs	function
(	O
s1	pointer
,	O
m	pointer
->	O
handler	pointer
)	O
;	O
free	function
(	O
s1	pointer
)	O
;	O
return	O
l	long
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEputcCS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EChar	char
c	char
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
putc	function
(	O
c	char
,	O
m	pointer
->	O
handler	pointer
)	O
;	O
}	O
EPChar	pointer
EDMAPROC	O
NFILEgetssZsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
s	pointer
,	O
EPSint32	pointer
len	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
fgets	function
(	O
s	pointer
,	O
*	O
len	int
,	O
m	pointer
->	O
handler	pointer
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEgetcsCrS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
c	char
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
int	O
r	int
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
r	int
=	O
fgetc	function
(	O
m	pointer
->	O
handler	pointer
)	O
;	O
*	O
c	char
=	O
(	O
char	O
)	O
r	int
;	O
return	O
r	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEflushrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
fflush	function
(	O
m	pointer
->	O
handler	pointer
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEseekS32ZrS32	function
(	O
OBJID	int
IdObj	int
,	O
ESint32	int
off	int
,	O
EPChar	pointer
where	pointer
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
int	O
w	int
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
strncmp	function
(	O
where	pointer
,	O
"SEEK_SET"	pointer
,	O
8	int
)	O
==	O
0	int
)	O
w	int
=	O
SEEK_SET	int
;	O
else	O
{	O
if	O
(	O
strncmp	function
(	O
where	pointer
,	O
"SEEK_END"	pointer
,	O
8	int
)	O
==	O
0	int
)	O
w	int
=	O
SEEK_END	int
;	O
else	O
w	int
=	O
SEEK_CUR	int
;	O
}	O
return	O
fseek	function
(	O
m	pointer
->	O
handler	pointer
,	O
off	int
,	O
w	int
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEtellsS32rS32	function
(	O
OBJID	int
IdObj	int
,	O
EPSint32	pointer
off	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
*	O
off	int
=	O
ftell	function
(	O
m	pointer
->	O
handler	pointer
)	O
;	O
return	O
*	O
off	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILErewindrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
fseek	function
(	O
m	pointer
->	O
handler	pointer
,	O
0	int
,	O
SEEK_SET	int
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEeofrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
return	O
feof	function
(	O
m	pointer
->	O
handler	pointer
)	O
;	O
}	O
ESint32	int
EDMAPROC	O
NFILEerrorrS32	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"Method still not implemented"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILELoadZsArS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
Name	pointer
,	O
EDMAT_BUFFER	struct
*	O
buf	pointer
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"Method still not implemented"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
NFILESaveZArS32	function
(	O
OBJID	int
IdObj	int
,	O
EPChar	pointer
Name	pointer
,	O
EDMAT_BUFFER	struct
buf	pointer
)	O
{	O
DtNFILE1	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtNFILE1	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_printf_obj	function
(	O
IdObj	int
,	O
"%s"	pointer
,	O
"Method still not implemented"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
