int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
double	O
a	double
=	O
0.0	int
,	O
b	double
=	O
1.0	int
;	O
size_t	long
n	long
=	O
10	int
;	O
if	O
(	O
argc	int
!=	O
3	int
&&	O
argc	int
!=	O
4	int
)	O
{	O
printf	function
(	O
"Usage: gsl-histogram xmin xmax [n]\n"	pointer
)	O
;	O
printf	function
(	O
"Computes a histogram of the data on stdin using n bins from xmin to xmax.\n"	pointer
"If n is unspecified then bins of integer width are used.\n"	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
a	double
=	O
atof	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
b	double
=	O
atof	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
;	O
if	O
(	O
argc	int
==	O
4	int
)	O
{	O
n	long
=	O
atoi	function
(	O
argv	pointer
[	O
3	int
]	O
)	O
;	O
}	O
else	O
{	O
n	long
=	O
(	O
int	O
)	O
(	O
b	double
-	O
a	double
)	O
;	O
}	O
{	O
double	O
x	double
;	O
gsl_histogram	struct
*	O
h	pointer
=	O
gsl_histogram_alloc	function
(	O
n	long
)	O
;	O
gsl_histogram_set_ranges_uniform	function
(	O
h	pointer
,	O
a	double
,	O
b	double
)	O
;	O
while	O
(	O
fscanf	function
(	O
stdin	pointer
,	O
"%lg"	pointer
,	O
&	O
x	double
)	O
==	O
1	int
)	O
{	O
gsl_histogram_increment	function
(	O
h	pointer
,	O
x	double
)	O
;	O
}	O
gsl_histogram_fprintf	function
(	O
stdout	pointer
,	O
h	pointer
,	O
"%g"	pointer
,	O
"%g"	pointer
)	O
;	O
gsl_histogram_free	function
(	O
h	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
