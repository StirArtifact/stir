extern	O
Suser	struct
user	struct
;	O
extern	O
void	O
(	O
*	O
keymap	array
[	O
128	int
]	O
)	O
(	O
)	O
;	O
void	O
init_keymap	function
(	O
)	O
{	O
int	O
i	int
;	O
void	O
null_key	function
(	O
)	O
,	O
bad_key	function
(	O
)	O
,	O
quit	function
(	O
)	O
,	O
up	pointer
(	O
)	O
,	O
down	function
(	O
)	O
,	O
right	function
(	O
)	O
,	O
left	function
(	O
)	O
,	O
upright	function
(	O
)	O
,	O
upleft	function
(	O
)	O
,	O
jhome	function
(	O
)	O
,	O
jpos	function
(	O
)	O
,	O
downright	function
(	O
)	O
,	O
downleft	function
(	O
)	O
,	O
jup	function
(	O
)	O
,	O
jdown	function
(	O
)	O
,	O
jright	function
(	O
)	O
,	O
jleft	function
(	O
)	O
,	O
help	function
(	O
)	O
,	O
redraw	function
(	O
)	O
,	O
windows	function
(	O
)	O
,	O
display_menu	function
(	O
)	O
,	O
mail	function
(	O
)	O
,	O
report_menu	function
(	O
)	O
,	O
army_menu	function
(	O
)	O
,	O
zoom_sector	function
(	O
)	O
,	O
trade_menu	function
(	O
)	O
,	O
wizardry_menu	function
(	O
)	O
,	O
dump_map	function
(	O
)	O
,	O
news	function
(	O
)	O
,	O
construct	function
(	O
)	O
,	O
transport	function
(	O
)	O
,	O
root_edit	function
(	O
)	O
,	O
options	function
(	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
128	int
;	O
++	O
i	int
)	O
{	O
keymap	array
[	O
i	int
]	O
=	O
bad_key	function
;	O
}	O
if	O
(	O
user	struct
.	O
id	short
==	O
0	int
)	O
{	O
keymap	array
[	O
'E'	O
]	O
=	O
root_edit	function
;	O
}	O
keymap	array
[	O
' '	O
]	O
=	O
keymap	array
[	O
'\n'	O
]	O
=	O
keymap	array
[	O
'\r'	O
]	O
=	O
null_key	function
;	O
keymap	array
[	O
'q'	O
]	O
=	O
keymap	array
[	O
'Q'	O
]	O
=	O
quit	function
;	O
keymap	array
[	O
'?'	O
]	O
=	O
help	function
;	O
keymap	array
[	O
''	O
]	O
=	O
redraw	function
;	O
keymap	array
[	O
'h'	O
]	O
=	O
keymap	array
[	O
'4'	O
]	O
=	O
left	function
;	O
keymap	array
[	O
'l'	O
]	O
=	O
keymap	array
[	O
'6'	O
]	O
=	O
right	function
;	O
keymap	array
[	O
'k'	O
]	O
=	O
keymap	array
[	O
'8'	O
]	O
=	O
up	pointer
;	O
keymap	array
[	O
'j'	O
]	O
=	O
keymap	array
[	O
'2'	O
]	O
=	O
down	function
;	O
keymap	array
[	O
'u'	O
]	O
=	O
keymap	array
[	O
'9'	O
]	O
=	O
upright	function
;	O
keymap	array
[	O
'y'	O
]	O
=	O
keymap	array
[	O
'7'	O
]	O
=	O
upleft	function
;	O
keymap	array
[	O
'n'	O
]	O
=	O
keymap	array
[	O
'3'	O
]	O
=	O
downright	function
;	O
keymap	array
[	O
'b'	O
]	O
=	O
keymap	array
[	O
'1'	O
]	O
=	O
downleft	function
;	O
keymap	array
[	O
'H'	O
]	O
=	O
jleft	function
;	O
keymap	array
[	O
'J'	O
]	O
=	O
jdown	function
;	O
keymap	array
[	O
'K'	O
]	O
=	O
jup	function
;	O
keymap	array
[	O
'L'	O
]	O
=	O
jright	function
;	O
keymap	array
[	O
'w'	O
]	O
=	O
windows	function
;	O
keymap	array
[	O
'd'	O
]	O
=	O
display_menu	function
;	O
keymap	array
[	O
'r'	O
]	O
=	O
report_menu	function
;	O
keymap	array
[	O
'a'	O
]	O
=	O
army_menu	function
;	O
keymap	array
[	O
'Z'	O
]	O
=	O
zoom_sector	function
;	O
keymap	array
[	O
'm'	O
]	O
=	O
mail	function
;	O
keymap	array
[	O
'W'	O
]	O
=	O
wizardry_menu	function
;	O
keymap	array
[	O
'F'	O
]	O
=	O
dump_map	function
;	O
keymap	array
[	O
'N'	O
]	O
=	O
news	function
;	O
keymap	array
[	O
'C'	O
]	O
=	O
construct	function
;	O
keymap	array
[	O
't'	O
]	O
=	O
transport	function
;	O
keymap	array
[	O
'O'	O
]	O
=	O
options	function
;	O
keymap	array
[	O
'P'	O
]	O
=	O
jhome	function
;	O
keymap	array
[	O
'p'	O
]	O
=	O
jpos	function
;	O
}	O
void	O
intro	function
(	O
Sworld	struct
*	O
wp	pointer
,	O
Snation	struct
*	O
np	pointer
)	O
{	O
FILE	struct
*	O
mail	function
;	O
char	O
txt	array
[	O
200	int
]	O
;	O
sprintf	function
(	O
txt	array
,	O
"mail/mail.%d"	pointer
,	O
np	pointer
->	O
id	short
)	O
;	O
mail	function
=	O
fopen	function
(	O
txt	array
,	O
"r"	pointer
)	O
;	O
strcpy	function
(	O
txt	array
,	O
"Dominion"	pointer
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
-	O
12	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
sprintf	function
(	O
txt	array
,	O
"Version %s"	pointer
,	O
VERSION	pointer
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
-	O
10	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
standout	function
(	O
)	O
;	O
strcpy	function
(	O
txt	array
,	O
"Copyright (c) 1990, Free Software Foundation"	pointer
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
-	O
6	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
standend	function
(	O
)	O
;	O
sprintf	function
(	O
txt	array
,	O
"Thon %d"	pointer
,	O
wp	pointer
->	O
turn	int
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
-	O
2	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
sprintf	function
(	O
txt	array
,	O
"%d nation%c"	pointer
,	O
wp	pointer
->	O
n_nations	int
,	O
wp	pointer
->	O
n_nations	int
>	O
1	int
?	O
's'	O
:	O
' '	O
)	O
;	O
mvprintw	function
(	O
LINES	int
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
sprintf	function
(	O
txt	array
,	O
"world size is %d across, %d down"	pointer
,	O
wp	pointer
->	O
xmax	int
,	O
wp	pointer
->	O
ymax	int
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
-	O
2	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
standout	function
(	O
)	O
;	O
if	O
(	O
mail	function
)	O
{	O
strcpy	function
(	O
txt	array
,	O
"You have mail!"	pointer
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
+	O
6	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
fclose	function
(	O
mail	function
)	O
;	O
}	O
strcpy	function
(	O
txt	array
,	O
"Press any key to begin"	pointer
)	O
;	O
mvprintw	function
(	O
(	O
LINES	int
+	O
10	int
)	O
/	O
2	int
,	O
(	O
COLS	int
-	O
strlen	function
(	O
txt	array
)	O
)	O
/	O
2	int
,	O
txt	array
)	O
;	O
standend	function
(	O
)	O
;	O
refresh	function
(	O
)	O
;	O
to_getch	function
(	O
)	O
;	O
clear	function
(	O
)	O
;	O
}	O
