static	O
inline	O
bool	bool
msgstr_equal	function
(	O
const	O
char	O
*	O
msgstr1	pointer
,	O
size_t	long
msgstr1_len	long
,	O
const	O
char	O
*	O
msgstr2	pointer
,	O
size_t	long
msgstr2_len	long
)	O
{	O
return	O
(	O
msgstr1_len	long
==	O
msgstr2_len	long
&&	O
memcmp	function
(	O
msgstr1	pointer
,	O
msgstr2	pointer
,	O
msgstr1_len	long
)	O
==	O
0	int
)	O
;	O
}	O
static	O
bool	bool
msgstr_equal_ignoring_potcdate	function
(	O
const	O
char	O
*	O
msgstr1	pointer
,	O
size_t	long
msgstr1_len	long
,	O
const	O
char	O
*	O
msgstr2	pointer
,	O
size_t	long
msgstr2_len	long
)	O
{	O
const	O
char	O
*	O
msgstr1_end	pointer
=	O
msgstr1	pointer
+	O
msgstr1_len	long
;	O
const	O
char	O
*	O
msgstr2_end	pointer
=	O
msgstr2	pointer
+	O
msgstr2_len	long
;	O
const	O
char	O
*	O
ptr1	pointer
;	O
const	O
char	O
*	O
ptr2	pointer
;	O
const	O
char	O
*	O
const	O
field	pointer
=	O
"POT-Creation-Date:"	pointer
;	O
const	O
ptrdiff_t	long
fieldlen	long
=	O
sizeof	O
(	O
"POT-Creation-Date:"	pointer
)	O
-	O
1	int
;	O
for	O
(	O
ptr1	pointer
=	O
msgstr1	pointer
;	O
;	O
)	O
{	O
if	O
(	O
msgstr1_end	pointer
-	O
ptr1	pointer
<	O
fieldlen	long
)	O
{	O
ptr1	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
memcmp	function
(	O
ptr1	pointer
,	O
field	pointer
,	O
fieldlen	long
)	O
==	O
0	int
)	O
break	O
;	O
ptr1	pointer
=	O
(	O
const	O
char	O
*	O
)	O
memchr	function
(	O
ptr1	pointer
,	O
'\n'	O
,	O
msgstr1_end	pointer
-	O
ptr1	pointer
)	O
;	O
if	O
(	O
ptr1	pointer
==	O
NULL	O
)	O
break	O
;	O
ptr1	pointer
++	O
;	O
}	O
for	O
(	O
ptr2	pointer
=	O
msgstr2	pointer
;	O
;	O
)	O
{	O
if	O
(	O
msgstr2_end	pointer
-	O
ptr2	pointer
<	O
fieldlen	long
)	O
{	O
ptr2	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
memcmp	function
(	O
ptr2	pointer
,	O
field	pointer
,	O
fieldlen	long
)	O
==	O
0	int
)	O
break	O
;	O
ptr2	pointer
=	O
(	O
const	O
char	O
*	O
)	O
memchr	function
(	O
ptr2	pointer
,	O
'\n'	O
,	O
msgstr2_end	pointer
-	O
ptr2	pointer
)	O
;	O
if	O
(	O
ptr2	pointer
==	O
NULL	O
)	O
break	O
;	O
ptr2	pointer
++	O
;	O
}	O
if	O
(	O
ptr1	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
ptr2	pointer
==	O
NULL	O
)	O
return	O
msgstr_equal	function
(	O
msgstr1	pointer
,	O
msgstr1_len	long
,	O
msgstr2	pointer
,	O
msgstr2_len	long
)	O
;	O
}	O
else	O
{	O
if	O
(	O
ptr2	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
msgstr_equal	function
(	O
msgstr1	pointer
,	O
ptr1	pointer
-	O
msgstr1	pointer
,	O
msgstr2	pointer
,	O
ptr2	pointer
-	O
msgstr2	pointer
)	O
)	O
{	O
ptr1	pointer
=	O
(	O
const	O
char	O
*	O
)	O
memchr	function
(	O
ptr1	pointer
,	O
'\n'	O
,	O
msgstr1_end	pointer
-	O
ptr1	pointer
)	O
;	O
if	O
(	O
ptr1	pointer
==	O
NULL	O
)	O
ptr1	pointer
=	O
msgstr1_end	pointer
;	O
ptr2	pointer
=	O
(	O
const	O
char	O
*	O
)	O
memchr	function
(	O
ptr2	pointer
,	O
'\n'	O
,	O
msgstr2_end	pointer
-	O
ptr2	pointer
)	O
;	O
if	O
(	O
ptr2	pointer
==	O
NULL	O
)	O
ptr2	pointer
=	O
msgstr2_end	pointer
;	O
return	O
msgstr_equal	function
(	O
ptr1	pointer
,	O
msgstr1_end	pointer
-	O
ptr1	pointer
,	O
ptr2	pointer
,	O
msgstr2_end	pointer
-	O
ptr2	pointer
)	O
;	O
}	O
}	O
}	O
return	O
false	int
;	O
}	O
static	O
inline	O
bool	bool
pos_equal	function
(	O
const	O
lex_pos_ty	struct
*	O
pos1	pointer
,	O
const	O
lex_pos_ty	struct
*	O
pos2	pointer
)	O
{	O
return	O
(	O
(	O
pos1	pointer
->	O
file_name	pointer
==	O
pos2	pointer
->	O
file_name	pointer
||	O
strcmp	function
(	O
pos1	pointer
->	O
file_name	pointer
,	O
pos2	pointer
->	O
file_name	pointer
)	O
==	O
0	int
)	O
&&	O
pos1	pointer
->	O
line_number	long
==	O
pos2	pointer
->	O
line_number	long
)	O
;	O
}	O
bool	bool
string_list_equal	function
(	O
const	O
string_list_ty	struct
*	O
slp1	pointer
,	O
const	O
string_list_ty	struct
*	O
slp2	pointer
)	O
{	O
size_t	long
i	long
,	O
i1	long
,	O
i2	long
;	O
i1	long
=	O
(	O
slp1	pointer
!=	O
NULL	O
?	O
slp1	pointer
->	O
nitems	long
:	O
0	int
)	O
;	O
i2	long
=	O
(	O
slp2	pointer
!=	O
NULL	O
?	O
slp2	pointer
->	O
nitems	long
:	O
0	int
)	O
;	O
if	O
(	O
i1	long
!=	O
i2	long
)	O
return	O
false	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
i1	long
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
slp1	pointer
->	O
item	pointer
[	O
i	long
]	O
,	O
slp2	pointer
->	O
item	pointer
[	O
i	long
]	O
)	O
!=	O
0	int
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
bool	bool
message_equal	function
(	O
const	O
message_ty	struct
*	O
mp1	pointer
,	O
const	O
message_ty	struct
*	O
mp2	pointer
,	O
bool	bool
ignore_potcdate	bool
)	O
{	O
size_t	long
i	long
,	O
i1	long
,	O
i2	long
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
msgctxt	pointer
!=	O
NULL	O
?	O
mp2	pointer
->	O
msgctxt	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
mp1	pointer
->	O
msgctxt	pointer
,	O
mp2	pointer
->	O
msgctxt	pointer
)	O
==	O
0	int
:	O
mp2	pointer
->	O
msgctxt	pointer
==	O
NULL	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
strcmp	function
(	O
mp1	pointer
->	O
msgid	pointer
,	O
mp2	pointer
->	O
msgid	pointer
)	O
!=	O
0	int
)	O
return	O
false	int
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
msgid_plural	pointer
!=	O
NULL	O
?	O
mp2	pointer
->	O
msgid_plural	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
mp1	pointer
->	O
msgid_plural	pointer
,	O
mp2	pointer
->	O
msgid_plural	pointer
)	O
==	O
0	int
:	O
mp2	pointer
->	O
msgid_plural	pointer
==	O
NULL	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
is_header	O
(	O
mp1	pointer
)	O
&&	O
ignore_potcdate	bool
?	O
!	O
msgstr_equal_ignoring_potcdate	function
(	O
mp1	pointer
->	O
msgstr	pointer
,	O
mp1	pointer
->	O
msgstr_len	long
,	O
mp2	pointer
->	O
msgstr	pointer
,	O
mp2	pointer
->	O
msgstr_len	long
)	O
:	O
!	O
msgstr_equal	function
(	O
mp1	pointer
->	O
msgstr	pointer
,	O
mp1	pointer
->	O
msgstr_len	long
,	O
mp2	pointer
->	O
msgstr	pointer
,	O
mp2	pointer
->	O
msgstr_len	long
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
pos_equal	function
(	O
&	O
mp1	pointer
->	O
pos	struct
,	O
&	O
mp2	pointer
->	O
pos	struct
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
string_list_equal	function
(	O
mp1	pointer
->	O
comment	pointer
,	O
mp2	pointer
->	O
comment	pointer
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
string_list_equal	function
(	O
mp1	pointer
->	O
comment_dot	pointer
,	O
mp2	pointer
->	O
comment_dot	pointer
)	O
)	O
return	O
false	int
;	O
i1	long
=	O
mp1	pointer
->	O
filepos_count	long
;	O
i2	long
=	O
mp2	pointer
->	O
filepos_count	long
;	O
if	O
(	O
i1	long
!=	O
i2	long
)	O
return	O
false	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
i1	long
;	O
i	long
++	O
)	O
if	O
(	O
!	O
pos_equal	function
(	O
&	O
mp1	pointer
->	O
filepos	pointer
[	O
i	long
]	O
,	O
&	O
mp2	pointer
->	O
filepos	pointer
[	O
i	long
]	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
mp1	pointer
->	O
is_fuzzy	bool
!=	O
mp2	pointer
->	O
is_fuzzy	bool
)	O
return	O
false	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
NFORMATS	int
;	O
i	long
++	O
)	O
if	O
(	O
mp1	pointer
->	O
is_format	enum
[	O
i	long
]	O
!=	O
mp2	pointer
->	O
is_format	enum
[	O
i	long
]	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
range	struct
.	O
min	int
==	O
mp2	pointer
->	O
range	struct
.	O
min	int
&&	O
mp1	pointer
->	O
range	struct
.	O
max	int
==	O
mp2	pointer
->	O
range	struct
.	O
max	int
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
prev_msgctxt	pointer
!=	O
NULL	O
?	O
mp2	pointer
->	O
prev_msgctxt	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
mp1	pointer
->	O
prev_msgctxt	pointer
,	O
mp2	pointer
->	O
prev_msgctxt	pointer
)	O
==	O
0	int
:	O
mp2	pointer
->	O
prev_msgctxt	pointer
==	O
NULL	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
prev_msgid	pointer
!=	O
NULL	O
?	O
mp2	pointer
->	O
prev_msgid	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
mp1	pointer
->	O
prev_msgid	pointer
,	O
mp2	pointer
->	O
prev_msgid	pointer
)	O
==	O
0	int
:	O
mp2	pointer
->	O
prev_msgid	pointer
==	O
NULL	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
!	O
(	O
mp1	pointer
->	O
prev_msgid_plural	pointer
!=	O
NULL	O
?	O
mp2	pointer
->	O
prev_msgid_plural	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
mp1	pointer
->	O
prev_msgid_plural	pointer
,	O
mp2	pointer
->	O
prev_msgid_plural	pointer
)	O
==	O
0	int
:	O
mp2	pointer
->	O
prev_msgid_plural	pointer
==	O
NULL	O
)	O
)	O
return	O
false	int
;	O
if	O
(	O
mp1	pointer
->	O
obsolete	bool
!=	O
mp2	pointer
->	O
obsolete	bool
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
bool	bool
message_list_equal	function
(	O
const	O
message_list_ty	struct
*	O
mlp1	pointer
,	O
const	O
message_list_ty	struct
*	O
mlp2	pointer
,	O
bool	bool
ignore_potcdate	bool
)	O
{	O
size_t	long
i	long
,	O
i1	long
,	O
i2	long
;	O
i1	long
=	O
mlp1	pointer
->	O
nitems	long
;	O
i2	long
=	O
mlp2	pointer
->	O
nitems	long
;	O
if	O
(	O
i1	long
!=	O
i2	long
)	O
return	O
false	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
i1	long
;	O
i	long
++	O
)	O
if	O
(	O
!	O
message_equal	function
(	O
mlp1	pointer
->	O
item	pointer
[	O
i	long
]	O
,	O
mlp2	pointer
->	O
item	pointer
[	O
i	long
]	O
,	O
ignore_potcdate	bool
)	O
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
static	O
inline	O
bool	bool
msgdomain_equal	function
(	O
const	O
msgdomain_ty	struct
*	O
mdp1	pointer
,	O
const	O
msgdomain_ty	struct
*	O
mdp2	pointer
,	O
bool	bool
ignore_potcdate	bool
)	O
{	O
return	O
(	O
strcmp	function
(	O
mdp1	pointer
->	O
domain	pointer
,	O
mdp2	pointer
->	O
domain	pointer
)	O
==	O
0	int
&&	O
message_list_equal	function
(	O
mdp1	pointer
->	O
messages	pointer
,	O
mdp2	pointer
->	O
messages	pointer
,	O
ignore_potcdate	bool
)	O
)	O
;	O
}	O
bool	bool
msgdomain_list_equal	function
(	O
const	O
msgdomain_list_ty	struct
*	O
mdlp1	pointer
,	O
const	O
msgdomain_list_ty	struct
*	O
mdlp2	pointer
,	O
bool	bool
ignore_potcdate	bool
)	O
{	O
size_t	long
i	long
,	O
i1	long
,	O
i2	long
;	O
i1	long
=	O
mdlp1	pointer
->	O
nitems	long
;	O
i2	long
=	O
mdlp2	pointer
->	O
nitems	long
;	O
if	O
(	O
i1	long
!=	O
i2	long
)	O
return	O
false	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
i1	long
;	O
i	long
++	O
)	O
if	O
(	O
!	O
msgdomain_equal	function
(	O
mdlp1	pointer
->	O
item	pointer
[	O
i	long
]	O
,	O
mdlp2	pointer
->	O
item	pointer
[	O
i	long
]	O
,	O
ignore_potcdate	bool
)	O
)	O
return	O
false	int
;	O
return	O
true	int
;	O
}	O
