static	O
const	O
line_t	struct
*	O
*	O
active_list	pointer
=	O
0	int
;	O
static	O
int	O
active_size	int
=	O
0	int
;	O
static	O
int	O
active_len	int
=	O
0	int
;	O
static	O
int	O
active_ptr	int
=	O
0	int
;	O
static	O
int	O
active_ndx	int
=	O
0	int
;	O
void	O
clear_active_list	function
(	O
void	O
)	O
{	O
disable_interrupts	function
(	O
)	O
;	O
if	O
(	O
active_list	pointer
)	O
free	function
(	O
active_list	pointer
)	O
;	O
active_list	pointer
=	O
0	int
;	O
active_size	int
=	O
active_len	int
=	O
active_ptr	int
=	O
active_ndx	int
=	O
0	int
;	O
enable_interrupts	function
(	O
)	O
;	O
}	O
const	O
line_t	struct
*	O
next_active_node	function
(	O
void	O
)	O
{	O
while	O
(	O
active_ptr	int
<	O
active_len	int
&&	O
!	O
active_list	pointer
[	O
active_ptr	int
]	O
)	O
++	O
active_ptr	int
;	O
return	O
(	O
active_ptr	int
<	O
active_len	int
)	O
?	O
active_list	pointer
[	O
active_ptr	int
++	O
]	O
:	O
0	int
;	O
}	O
char	O
set_active_node	function
(	O
const	O
line_t	struct
*	O
lp	pointer
)	O
{	O
disable_interrupts	function
(	O
)	O
;	O
if	O
(	O
!	O
resize_line_buffer	function
(	O
&	O
active_list	pointer
,	O
&	O
active_size	int
,	O
(	O
active_len	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
line_t	struct
*	O
*	O
)	O
)	O
)	O
{	O
show_strerror	function
(	O
0	int
,	O
errno	O
)	O
;	O
set_error_msg	function
(	O
"Memory exhausted"	pointer
)	O
;	O
enable_interrupts	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
enable_interrupts	function
(	O
)	O
;	O
active_list	pointer
[	O
active_len	int
++	O
]	O
=	O
lp	pointer
;	O
return	O
1	int
;	O
}	O
void	O
unset_active_nodes	function
(	O
const	O
line_t	struct
*	O
np	pointer
,	O
const	O
line_t	struct
*	O
mp	pointer
)	O
{	O
const	O
line_t	struct
*	O
lp	pointer
=	O
np	pointer
;	O
while	O
(	O
lp	pointer
!=	O
mp	pointer
)	O
{	O
int	O
i	pointer
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
active_len	int
;	O
++	O
i	pointer
)	O
{	O
if	O
(	O
++	O
active_ndx	int
>=	O
active_len	int
)	O
active_ndx	int
=	O
0	int
;	O
if	O
(	O
active_list	pointer
[	O
active_ndx	int
]	O
==	O
lp	pointer
)	O
{	O
active_list	pointer
[	O
active_ndx	int
]	O
=	O
0	int
;	O
break	O
;	O
}	O
}	O
lp	pointer
=	O
lp	pointer
->	O
q_forw	pointer
;	O
}	O
}	O
