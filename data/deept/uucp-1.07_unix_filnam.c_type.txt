extern	O
off_t	long
lseek	function
(	O
)	O
;	O
static	O
boolean	int
fscmd_seq	function
P	O
(	O
(	O
const	O
char	O
*	O
zsystem	pointer
,	O
char	O
*	O
zseq	pointer
)	O
)	O
;	O
static	O
char	O
*	O
zsfile_name	function
P	O
(	O
(	O
int	O
btype	int
,	O
const	O
char	O
*	O
zsystem	pointer
,	O
const	O
char	O
*	O
zlocalname	pointer
,	O
int	O
bgrade	char
,	O
boolean	int
fxqt	int
,	O
char	O
*	O
ztname	pointer
,	O
char	O
*	O
zdname	pointer
,	O
char	O
*	O
zxname	pointer
)	O
)	O
;	O
static	O
boolean	int
fscmd_seq	function
(	O
zsystem	pointer
,	O
zseq	pointer
)	O
const	O
char	O
*	O
zsystem	pointer
;	O
char	O
*	O
zseq	pointer
;	O
{	O
int	O
cdelay	int
;	O
char	O
*	O
zfree	pointer
;	O
const	O
char	O
*	O
zfile	pointer
;	O
int	O
o	int
;	O
boolean	int
flockfile	function
;	O
int	O
i	int
;	O
boolean	int
fret	int
;	O
cdelay	int
=	O
5	int
;	O
zfree	pointer
=	O
NULL	O
;	O
zfree	pointer
=	O
zsysdep_in_dir	function
(	O
zsystem	pointer
,	O
"SEQF"	pointer
)	O
;	O
zfile	pointer
=	O
zfree	pointer
;	O
o	int
=	O
open	function
(	O
(	O
char	O
*	O
)	O
zfile	pointer
,	O
O_RDWR	int
|	O
O_CREAT	int
|	O
O_NOCTTY	int
,	O
IPRIVATE_FILE_MODE	O
)	O
;	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zfile	pointer
,	O
FALSE	O
)	O
)	O
{	O
return	O
FALSE	O
;	O
}	O
o	int
=	O
open	function
(	O
(	O
char	O
*	O
)	O
zfile	pointer
,	O
O_RDWR	int
|	O
O_CREAT	int
|	O
O_NOCTTY	int
,	O
IPRIVATE_FILE_MODE	O
)	O
;	O
}	O
if	O
(	O
o	int
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"open (%s): %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
{	O
struct	O
flock	struct
slock	struct
;	O
flockfile	function
=	O
FALSE	O
;	O
slock	struct
.	O
l_type	short
=	O
F_WRLCK	int
;	O
slock	struct
.	O
l_whence	short
=	O
SEEK_SET	int
;	O
slock	struct
.	O
l_start	long
=	O
0	int
;	O
slock	struct
.	O
l_len	long
=	O
0	int
;	O
while	O
(	O
fcntl	function
(	O
o	int
,	O
F_SETLKW	int
,	O
&	O
slock	struct
)	O
==	O
-	O
1	int
)	O
{	O
boolean	int
fagain	int
;	O
if	O
(	O
errno	O
==	O
EINVAL	int
)	O
{	O
boolean	int
ferr	int
;	O
while	O
(	O
!	O
fsdo_lock	function
(	O
"LCK..SEQ"	pointer
,	O
TRUE	O
,	O
&	O
ferr	int
)	O
)	O
{	O
if	O
(	O
ferr	int
||	O
FGOT_SIGNAL	O
(	O
)	O
)	O
{	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
sleep	function
(	O
cdelay	int
)	O
;	O
if	O
(	O
cdelay	int
<	O
60	int
)	O
++	O
cdelay	int
;	O
}	O
flockfile	function
=	O
TRUE	O
;	O
break	O
;	O
}	O
fagain	int
=	O
FALSE	O
;	O
if	O
(	O
errno	O
==	O
ENOMEM	int
)	O
fagain	int
=	O
TRUE	O
;	O
if	O
(	O
errno	O
==	O
ENOLCK	int
)	O
fagain	int
=	O
TRUE	O
;	O
if	O
(	O
errno	O
==	O
ENOSPC	int
)	O
fagain	int
=	O
TRUE	O
;	O
if	O
(	O
fagain	int
)	O
{	O
sleep	function
(	O
cdelay	int
)	O
;	O
if	O
(	O
cdelay	int
<	O
60	int
)	O
++	O
cdelay	int
;	O
continue	O
;	O
}	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Locking %s: %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
read	function
(	O
o	int
,	O
zseq	pointer
,	O
CSEQLEN	O
)	O
!=	O
CSEQLEN	O
)	O
strcpy	function
(	O
zseq	pointer
,	O
"0000"	pointer
)	O
;	O
zseq	pointer
[	O
CSEQLEN	O
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	int
=	O
CSEQLEN	O
-	O
1	int
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
{	O
const	O
char	O
*	O
zdig	pointer
;	O
zdig	pointer
=	O
strchr	function
(	O
ZCHARS	pointer
,	O
zseq	pointer
[	O
i	int
]	O
)	O
;	O
if	O
(	O
zdig	pointer
==	O
NULL	O
||	O
zdig	pointer
[	O
0	int
]	O
==	O
'\0'	O
||	O
zdig	pointer
[	O
1	int
]	O
==	O
'\0'	O
)	O
zseq	pointer
[	O
i	int
]	O
=	O
'0'	O
;	O
else	O
{	O
zseq	pointer
[	O
i	int
]	O
=	O
zdig	pointer
[	O
1	int
]	O
;	O
break	O
;	O
}	O
}	O
fret	int
=	O
TRUE	O
;	O
if	O
(	O
lseek	function
(	O
o	int
,	O
(	O
off_t	long
)	O
0	int
,	O
SEEK_SET	int
)	O
<	O
0	int
||	O
write	function
(	O
o	int
,	O
zseq	pointer
,	O
CSEQLEN	O
)	O
!=	O
CSEQLEN	O
||	O
close	function
(	O
o	int
)	O
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"lseek or write or close %s: %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
if	O
(	O
flockfile	function
)	O
(	O
void	O
)	O
fsdo_unlock	function
(	O
"LCK..SEQ"	pointer
,	O
TRUE	O
)	O
;	O
ubuffree	function
(	O
zfree	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
char	O
*	O
zsfile_name	function
(	O
btype	int
,	O
zsystem	pointer
,	O
zlocalname	pointer
,	O
bgrade	char
,	O
fxqt	int
,	O
ztname	pointer
,	O
zdname	pointer
,	O
zxname	pointer
)	O
int	O
btype	int
;	O
const	O
char	O
*	O
zsystem	pointer
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
int	O
bgrade	char
;	O
boolean	int
fxqt	int
;	O
char	O
*	O
ztname	pointer
;	O
char	O
*	O
zdname	pointer
;	O
char	O
*	O
zxname	pointer
;	O
{	O
char	O
abseq	array
[	O
CSEQLEN	O
+	O
1	int
]	O
;	O
char	O
absimple	array
[	O
11	int
+	O
CSEQLEN	O
]	O
;	O
char	O
*	O
zname	pointer
;	O
if	O
(	O
zlocalname	pointer
==	O
NULL	O
)	O
zlocalname	pointer
=	O
zSlocalname	pointer
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
!	O
fscmd_seq	function
(	O
zsystem	pointer
,	O
abseq	array
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
btype	int
==	O
'C'	O
)	O
{	O
sprintf	function
(	O
absimple	array
,	O
"C.%c%s"	pointer
,	O
bgrade	char
,	O
abseq	array
)	O
;	O
}	O
else	O
if	O
(	O
btype	int
==	O
'D'	O
)	O
{	O
if	O
(	O
fxqt	int
)	O
sprintf	function
(	O
absimple	array
,	O
"D.X%s"	pointer
,	O
abseq	array
)	O
;	O
else	O
sprintf	function
(	O
absimple	array
,	O
"D.%s"	pointer
,	O
abseq	array
)	O
;	O
}	O
else	O
ulog	function
(	O
LOG_FATAL	int
,	O
"zsfile_name: Can't happen"	pointer
)	O
;	O
zname	pointer
=	O
zsfind_file	function
(	O
absimple	array
,	O
zsystem	pointer
,	O
bgrade	char
)	O
;	O
if	O
(	O
zname	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
fsysdep_file_exists	function
(	O
zname	pointer
)	O
)	O
break	O
;	O
ubuffree	function
(	O
zname	pointer
)	O
;	O
}	O
if	O
(	O
ztname	pointer
!=	O
NULL	O
)	O
strcpy	function
(	O
ztname	pointer
,	O
absimple	array
)	O
;	O
if	O
(	O
zdname	pointer
!=	O
NULL	O
)	O
sprintf	function
(	O
zdname	pointer
,	O
"D.%.7s%c%s"	pointer
,	O
zlocalname	pointer
,	O
bgrade	char
,	O
abseq	array
)	O
;	O
if	O
(	O
zxname	pointer
!=	O
NULL	O
)	O
sprintf	function
(	O
zxname	pointer
,	O
"X.%.7s%c%s"	pointer
,	O
zlocalname	pointer
,	O
bgrade	char
,	O
abseq	array
)	O
;	O
return	O
zname	pointer
;	O
}	O
char	O
*	O
zsysdep_data_file_name	function
(	O
qsys	pointer
,	O
zlocalname	pointer
,	O
bgrade	char
,	O
fxqt	int
,	O
ztname	pointer
,	O
zdname	pointer
,	O
zxname	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
int	O
bgrade	char
;	O
boolean	int
fxqt	int
;	O
char	O
*	O
ztname	pointer
;	O
char	O
*	O
zdname	pointer
;	O
char	O
*	O
zxname	pointer
;	O
{	O
return	O
zsfile_name	function
(	O
'D'	O
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
zlocalname	pointer
,	O
bgrade	char
,	O
fxqt	int
,	O
ztname	pointer
,	O
zdname	pointer
,	O
zxname	pointer
)	O
;	O
}	O
static	O
void	O
usput62	function
P	O
(	O
(	O
long	O
i	int
,	O
char	O
*	O
,	O
int	O
c	int
)	O
)	O
;	O
static	O
void	O
usput62	function
(	O
i	int
,	O
z	pointer
,	O
c	int
)	O
long	O
i	int
;	O
char	O
*	O
z	pointer
;	O
int	O
c	int
;	O
{	O
for	O
(	O
--	O
c	int
;	O
c	int
>=	O
0	int
;	O
--	O
c	int
)	O
{	O
int	O
d	int
;	O
d	int
=	O
i	int
%	O
62	int
;	O
i	int
/=	O
62	int
;	O
if	O
(	O
d	int
<	O
26	int
)	O
z	pointer
[	O
c	int
]	O
=	O
'A'	O
+	O
d	int
;	O
else	O
if	O
(	O
d	int
<	O
52	int
)	O
z	pointer
[	O
c	int
]	O
=	O
'a'	O
+	O
d	int
-	O
26	int
;	O
else	O
z	pointer
[	O
c	int
]	O
=	O
'0'	O
+	O
d	int
-	O
52	int
;	O
}	O
}	O
char	O
*	O
zscmd_file	function
(	O
qsys	pointer
,	O
bgrade	char
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
int	O
bgrade	char
;	O
{	O
char	O
*	O
zname	pointer
;	O
long	O
isecs	long
,	O
imicros	long
;	O
pid_t	int
ipid	int
;	O
isecs	long
=	O
ixsysdep_time	function
(	O
&	O
imicros	long
)	O
;	O
ipid	int
=	O
getpid	function
(	O
)	O
;	O
isecs	long
%=	O
(	O
long	O
)	O
24	int
*	O
(	O
long	O
)	O
60	int
*	O
(	O
long	O
)	O
60	int
;	O
imicros	long
%=	O
1000000	int
;	O
imicros	long
/=	O
5	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
char	O
ab	array
[	O
15	int
]	O
;	O
ab	array
[	O
0	int
]	O
=	O
'C'	O
;	O
ab	array
[	O
1	int
]	O
=	O
'.'	O
;	O
ab	array
[	O
2	int
]	O
=	O
bgrade	char
;	O
usput62	function
(	O
isecs	long
,	O
ab	array
+	O
3	int
,	O
3	int
)	O
;	O
usput62	function
(	O
imicros	long
,	O
ab	array
+	O
6	int
,	O
3	int
)	O
;	O
usput62	function
(	O
(	O
long	O
)	O
ipid	int
,	O
ab	array
+	O
9	int
,	O
5	int
)	O
;	O
ab	array
[	O
14	int
]	O
=	O
'\0'	O
;	O
zname	pointer
=	O
zsfind_file	function
(	O
ab	array
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
bgrade	char
)	O
;	O
if	O
(	O
zname	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
fsysdep_file_exists	function
(	O
zname	pointer
)	O
)	O
break	O
;	O
ubuffree	function
(	O
zname	pointer
)	O
;	O
if	O
(	O
imicros	long
==	O
0	int
)	O
{	O
imicros	long
=	O
(	O
long	O
)	O
62	int
*	O
(	O
long	O
)	O
62	int
*	O
(	O
long	O
)	O
62	int
;	O
if	O
(	O
isecs	long
==	O
0	int
)	O
isecs	long
=	O
(	O
long	O
)	O
62	int
*	O
(	O
long	O
)	O
62	int
*	O
(	O
long	O
)	O
62	int
;	O
--	O
isecs	long
;	O
}	O
--	O
imicros	long
;	O
}	O
return	O
zname	pointer
;	O
}	O
char	O
*	O
zsysdep_xqt_file_name	function
(	O
)	O
{	O
char	O
abseq	array
[	O
CSEQLEN	O
+	O
1	int
]	O
;	O
char	O
absx	array
[	O
11	int
+	O
CSEQLEN	O
]	O
;	O
char	O
*	O
zname	pointer
;	O
while	O
(	O
TRUE	O
)	O
{	O
if	O
(	O
!	O
fscmd_seq	function
(	O
zSlocalname	pointer
,	O
abseq	array
)	O
)	O
return	O
NULL	O
;	O
sprintf	function
(	O
absx	array
,	O
"X.%.7sX%s"	pointer
,	O
zSlocalname	pointer
,	O
abseq	array
)	O
;	O
zname	pointer
=	O
zsfind_file	function
(	O
absx	array
,	O
zSlocalname	pointer
,	O
-	O
1	int
)	O
;	O
if	O
(	O
zname	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
fsysdep_file_exists	function
(	O
zname	pointer
)	O
)	O
break	O
;	O
ubuffree	function
(	O
zname	pointer
)	O
;	O
}	O
return	O
zname	pointer
;	O
}	O
