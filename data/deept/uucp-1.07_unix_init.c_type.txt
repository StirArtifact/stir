extern	O
char	O
*	O
getlogin	function
(	O
)	O
;	O
extern	O
struct	O
passwd	struct
*	O
getpwnam	function
(	O
)	O
;	O
extern	O
struct	O
passwd	struct
*	O
getpwuid	function
(	O
)	O
;	O
extern	O
char	O
*	O
getcwd	function
(	O
)	O
;	O
extern	O
long	O
sysconf	function
(	O
)	O
;	O
static	O
char	O
*	O
zSlogin	pointer
;	O
const	O
char	O
*	O
zSspooldir	pointer
;	O
const	O
char	O
*	O
zSlockdir	pointer
;	O
const	O
char	O
*	O
zSlocalname	pointer
;	O
char	O
*	O
zScwd	pointer
;	O
size_t	long
cSysdep_max_name_len	long
=	O
255	int
;	O
void	O
usysdep_initialize	function
(	O
puuconf	pointer
,	O
iflags	int
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
iflags	int
;	O
{	O
int	O
iuuconf	int
;	O
char	O
*	O
z	pointer
;	O
struct	O
passwd	struct
*	O
q	pointer
;	O
ulog_id	function
(	O
getpid	function
(	O
)	O
)	O
;	O
if	O
(	O
(	O
iflags	int
&	O
INIT_NOCLOSE	O
)	O
==	O
0	int
)	O
{	O
int	O
cdescs	int
;	O
int	O
o	int
;	O
cdescs	int
=	O
getdtablesize	function
(	O
)	O
;	O
for	O
(	O
o	int
=	O
3	int
;	O
o	int
<	O
cdescs	int
;	O
o	int
++	O
)	O
(	O
void	O
)	O
close	function
(	O
o	int
)	O
;	O
}	O
if	O
(	O
fcntl	function
(	O
0	int
,	O
F_GETFD	int
,	O
0	int
)	O
<	O
0	int
&&	O
open	function
(	O
(	O
char	O
*	O
)	O
"/dev/null"	pointer
,	O
O_RDONLY	int
,	O
0	int
)	O
!=	O
0	int
)	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
if	O
(	O
fcntl	function
(	O
1	int
,	O
F_GETFD	int
,	O
0	int
)	O
<	O
0	int
&&	O
open	function
(	O
(	O
char	O
*	O
)	O
"/dev/null"	pointer
,	O
O_WRONLY	int
,	O
0	int
)	O
!=	O
1	int
)	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
if	O
(	O
fcntl	function
(	O
2	int
,	O
F_GETFD	int
,	O
0	int
)	O
<	O
0	int
&&	O
open	function
(	O
(	O
char	O
*	O
)	O
"/dev/null"	pointer
,	O
O_WRONLY	int
,	O
0	int
)	O
!=	O
2	int
)	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
iuuconf	int
=	O
uuconf_spooldir	function
(	O
puuconf	pointer
,	O
&	O
zSspooldir	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
iuuconf	int
=	O
uuconf_lockdir	function
(	O
puuconf	pointer
,	O
&	O
zSlockdir	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
iuuconf	int
=	O
uuconf_localname	function
(	O
puuconf	pointer
,	O
&	O
zSlocalname	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
char	O
ab	array
[	O
256	int
]	O
;	O
if	O
(	O
gethostname	function
(	O
ab	array
,	O
sizeof	O
ab	array
-	O
1	int
)	O
<	O
0	int
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"gethostname: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
ab	array
[	O
sizeof	O
ab	array
-	O
1	int
]	O
=	O
'\0'	O
;	O
ab	array
[	O
strcspn	function
(	O
ab	array
,	O
"."	pointer
)	O
]	O
=	O
'\0'	O
;	O
zSlocalname	pointer
=	O
zbufcpy	function
(	O
ab	array
)	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
umask	function
(	O
0	int
)	O
;	O
z	pointer
=	O
getenv	function
(	O
"LOGNAME"	pointer
)	O
;	O
if	O
(	O
z	pointer
==	O
NULL	O
)	O
z	pointer
=	O
getenv	function
(	O
"USER"	pointer
)	O
;	O
if	O
(	O
z	pointer
==	O
NULL	O
)	O
z	pointer
=	O
getlogin	function
(	O
)	O
;	O
if	O
(	O
z	pointer
==	O
NULL	O
)	O
q	pointer
=	O
NULL	O
;	O
else	O
{	O
q	pointer
=	O
getpwnam	function
(	O
z	pointer
)	O
;	O
if	O
(	O
q	pointer
!=	O
NULL	O
)	O
z	pointer
=	O
q	pointer
->	O
pw_name	pointer
;	O
}	O
if	O
(	O
q	pointer
==	O
NULL	O
||	O
q	pointer
->	O
pw_uid	int
!=	O
getuid	function
(	O
)	O
)	O
{	O
q	pointer
=	O
getpwuid	function
(	O
getuid	function
(	O
)	O
)	O
;	O
if	O
(	O
q	pointer
==	O
NULL	O
)	O
z	pointer
=	O
NULL	O
;	O
else	O
z	pointer
=	O
q	pointer
->	O
pw_name	pointer
;	O
}	O
if	O
(	O
z	pointer
!=	O
NULL	O
)	O
zSlogin	pointer
=	O
zbufcpy	function
(	O
z	pointer
)	O
;	O
if	O
(	O
(	O
iflags	int
&	O
INIT_SUID	O
)	O
!=	O
0	int
&&	O
geteuid	function
(	O
)	O
==	O
0	int
)	O
{	O
q	pointer
=	O
getpwnam	function
(	O
OWNER	pointer
)	O
;	O
if	O
(	O
q	pointer
!=	O
NULL	O
)	O
setuid	function
(	O
q	pointer
->	O
pw_uid	int
)	O
;	O
}	O
if	O
(	O
(	O
iflags	int
&	O
INIT_GETCWD	O
)	O
!=	O
0	int
)	O
{	O
const	O
char	O
*	O
zenv	pointer
;	O
struct	O
stat	struct
senv	struct
,	O
sdot	struct
;	O
zenv	pointer
=	O
getenv	function
(	O
"PWD"	pointer
)	O
;	O
if	O
(	O
zenv	pointer
!=	O
NULL	O
&&	O
stat	struct
(	O
(	O
char	O
*	O
)	O
zenv	pointer
,	O
&	O
senv	struct
)	O
==	O
0	int
&&	O
stat	struct
(	O
(	O
char	O
*	O
)	O
"."	pointer
,	O
&	O
sdot	struct
)	O
==	O
0	int
&&	O
senv	struct
.	O
st_ino	long
==	O
sdot	struct
.	O
st_ino	long
&&	O
senv	struct
.	O
st_dev	long
==	O
sdot	struct
.	O
st_dev	long
)	O
zScwd	pointer
=	O
zbufcpy	function
(	O
zenv	pointer
)	O
;	O
else	O
{	O
{	O
size_t	long
c	long
;	O
c	long
=	O
128	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
zScwd	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
c	long
)	O
;	O
if	O
(	O
getcwd	function
(	O
zScwd	pointer
,	O
c	long
)	O
!=	O
NULL	O
)	O
break	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zScwd	pointer
)	O
;	O
zScwd	pointer
=	O
NULL	O
;	O
if	O
(	O
errno	O
!=	O
ERANGE	int
)	O
break	O
;	O
c	long
<<=	O
1	int
;	O
}	O
}	O
if	O
(	O
zScwd	pointer
!=	O
NULL	O
)	O
zScwd	pointer
=	O
(	O
char	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
zScwd	pointer
,	O
strlen	function
(	O
zScwd	pointer
)	O
+	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
(	O
iflags	int
&	O
INIT_NOCHDIR	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
chdir	function
(	O
zSspooldir	pointer
)	O
<	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
ENOENT	int
&&	O
mkdir	function
(	O
(	O
char	O
*	O
)	O
zSspooldir	pointer
,	O
IDIRECTORY_MODE	O
)	O
<	O
0	int
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"mkdir (%s): %s"	pointer
,	O
zSspooldir	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
chdir	function
(	O
zSspooldir	pointer
)	O
<	O
0	int
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"chdir (%s): %s"	pointer
,	O
zSspooldir	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
}	O
void	O
usysdep_exit	function
(	O
fsuccess	int
)	O
boolean	int
fsuccess	int
;	O
{	O
exit	function
(	O
fsuccess	int
?	O
EXIT_SUCCESS	int
:	O
EXIT_FAILURE	int
)	O
;	O
}	O
boolean	int
fsysdep_other_config	function
(	O
z	pointer
)	O
const	O
char	O
*	O
z	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
(	O
void	O
)	O
setuid	function
(	O
getuid	function
(	O
)	O
)	O
;	O
(	O
void	O
)	O
setgid	function
(	O
getgid	function
(	O
)	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
const	O
char	O
*	O
zsysdep_localname	function
(	O
)	O
{	O
return	O
zSlocalname	pointer
;	O
}	O
const	O
char	O
*	O
zsysdep_login_name	function
(	O
)	O
{	O
if	O
(	O
zSlogin	pointer
==	O
NULL	O
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"Can't get login name"	pointer
)	O
;	O
return	O
zSlogin	pointer
;	O
}	O
