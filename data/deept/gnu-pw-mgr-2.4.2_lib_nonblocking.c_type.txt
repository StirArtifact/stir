int	O
get_nonblocking_flag	function
(	O
int	O
desc	int
)	O
{	O
int	O
fcntl_flags	int
;	O
fcntl_flags	int
=	O
fcntl	function
(	O
desc	int
,	O
F_GETFL	int
,	O
0	int
)	O
;	O
if	O
(	O
fcntl_flags	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
return	O
(	O
fcntl_flags	int
&	O
O_NONBLOCK	int
)	O
!=	O
0	int
;	O
}	O
int	O
set_nonblocking_flag	function
(	O
int	O
desc	int
,	O
bool	bool
value	bool
)	O
{	O
int	O
fcntl_flags	int
;	O
fcntl_flags	int
=	O
fcntl	function
(	O
desc	int
,	O
F_GETFL	int
,	O
0	int
)	O
;	O
if	O
(	O
fcntl_flags	int
<	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
(	O
(	O
fcntl_flags	int
&	O
O_NONBLOCK	int
)	O
!=	O
0	int
)	O
==	O
value	bool
)	O
return	O
0	int
;	O
if	O
(	O
value	bool
)	O
fcntl_flags	int
|=	O
O_NONBLOCK	int
;	O
else	O
fcntl_flags	int
&=	O
~	O
O_NONBLOCK	int
;	O
return	O
fcntl	function
(	O
desc	int
,	O
F_SETFL	int
,	O
fcntl_flags	int
)	O
;	O
}	O
