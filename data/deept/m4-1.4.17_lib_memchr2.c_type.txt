void	O
*	O
memchr2	function
(	O
void	O
const	O
*	O
s	pointer
,	O
int	O
c1_in	int
,	O
int	O
c2_in	int
,	O
size_t	long
n	long
)	O
{	O
typedef	O
unsigned	O
long	O
int	O
longword	long
;	O
const	O
unsigned	O
char	O
*	O
char_ptr	pointer
;	O
void	O
const	O
*	O
void_ptr	pointer
;	O
const	O
longword	long
*	O
longword_ptr	pointer
;	O
longword	long
repeated_one	long
;	O
longword	long
repeated_c1	long
;	O
longword	long
repeated_c2	long
;	O
unsigned	O
char	O
c1	int
;	O
unsigned	O
char	O
c2	int
;	O
c1	int
=	O
(	O
unsigned	O
char	O
)	O
c1_in	int
;	O
c2	int
=	O
(	O
unsigned	O
char	O
)	O
c2_in	int
;	O
if	O
(	O
c1	int
==	O
c2	int
)	O
return	O
memchr	function
(	O
s	pointer
,	O
c1	int
,	O
n	long
)	O
;	O
for	O
(	O
void_ptr	pointer
=	O
s	pointer
;	O
n	long
>	O
0	int
&&	O
(	O
uintptr_t	long
)	O
void_ptr	pointer
%	O
sizeof	O
(	O
longword	long
)	O
!=	O
0	int
;	O
--	O
n	long
)	O
{	O
char_ptr	pointer
=	O
void_ptr	pointer
;	O
if	O
(	O
*	O
char_ptr	pointer
==	O
c1	int
||	O
*	O
char_ptr	pointer
==	O
c2	int
)	O
return	O
(	O
void	O
*	O
)	O
void_ptr	pointer
;	O
void_ptr	pointer
=	O
char_ptr	pointer
+	O
1	int
;	O
}	O
longword_ptr	pointer
=	O
void_ptr	pointer
;	O
repeated_one	long
=	O
0x01010101	int
;	O
repeated_c1	long
=	O
c1	int
|	O
(	O
c1	int
<<	O
8	int
)	O
;	O
repeated_c2	long
=	O
c2	int
|	O
(	O
c2	int
<<	O
8	int
)	O
;	O
repeated_c1	long
|=	O
repeated_c1	long
<<	O
16	int
;	O
repeated_c2	long
|=	O
repeated_c2	long
<<	O
16	int
;	O
if	O
(	O
0xffffffffU	int
<	O
(	O
longword	long
)	O
-	O
1	int
)	O
{	O
repeated_one	long
|=	O
repeated_one	long
<<	O
31	int
<<	O
1	int
;	O
repeated_c1	long
|=	O
repeated_c1	long
<<	O
31	int
<<	O
1	int
;	O
repeated_c2	long
|=	O
repeated_c2	long
<<	O
31	int
<<	O
1	int
;	O
if	O
(	O
8	int
<	O
sizeof	O
(	O
longword	long
)	O
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
64	int
;	O
i	long
<	O
sizeof	O
(	O
longword	long
)	O
*	O
8	int
;	O
i	long
*=	O
2	int
)	O
{	O
repeated_one	long
|=	O
repeated_one	long
<<	O
i	long
;	O
repeated_c1	long
|=	O
repeated_c1	long
<<	O
i	long
;	O
repeated_c2	long
|=	O
repeated_c2	long
<<	O
i	long
;	O
}	O
}	O
}	O
while	O
(	O
n	long
>=	O
sizeof	O
(	O
longword	long
)	O
)	O
{	O
longword	long
longword1	long
=	O
*	O
longword_ptr	pointer
^	O
repeated_c1	long
;	O
longword	long
longword2	long
=	O
*	O
longword_ptr	pointer
^	O
repeated_c2	long
;	O
if	O
(	O
(	O
(	O
(	O
(	O
longword1	long
-	O
repeated_one	long
)	O
&	O
~	O
longword1	long
)	O
|	O
(	O
(	O
longword2	long
-	O
repeated_one	long
)	O
&	O
~	O
longword2	long
)	O
)	O
&	O
(	O
repeated_one	long
<<	O
7	int
)	O
)	O
!=	O
0	int
)	O
break	O
;	O
longword_ptr	pointer
++	O
;	O
n	long
-=	O
sizeof	O
(	O
longword	long
)	O
;	O
}	O
char_ptr	pointer
=	O
(	O
const	O
unsigned	O
char	O
*	O
)	O
longword_ptr	pointer
;	O
for	O
(	O
;	O
n	long
>	O
0	int
;	O
--	O
n	long
,	O
++	O
char_ptr	pointer
)	O
{	O
if	O
(	O
*	O
char_ptr	pointer
==	O
c1	int
||	O
*	O
char_ptr	pointer
==	O
c2	int
)	O
return	O
(	O
void	O
*	O
)	O
char_ptr	pointer
;	O
}	O
return	O
NULL	O
;	O
}	O
