const	O
char	O
*	O
osip_protocol_version	pointer
=	O
"SIP/2.0"	pointer
;	O
int	O
osip_message_init	function
(	O
osip_message_t	struct
*	O
*	O
sip	pointer
)	O
{	O
*	O
sip	pointer
=	O
(	O
osip_message_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_message_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
sip	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	function
(	O
*	O
sip	pointer
,	O
0	int
,	O
sizeof	O
(	O
osip_message_t	struct
)	O
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
accepts	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
accept_encodings	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
accept_languages	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
alert_infos	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
allows	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
authentication_infos	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
authorizations	struct
)	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
call_id	pointer
=	O
NULL	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
call_infos	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
contacts	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
content_encodings	struct
)	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
content_length	pointer
=	O
NULL	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
content_type	pointer
=	O
NULL	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
cseq	pointer
=	O
NULL	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
error_infos	struct
)	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
from	pointer
=	O
NULL	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
mime_version	pointer
=	O
NULL	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
proxy_authenticates	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
proxy_authentication_infos	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
proxy_authorizations	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
record_routes	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
routes	struct
)	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
to	pointer
=	O
NULL	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
vias	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
www_authenticates	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
bodies	struct
)	O
;	O
osip_list_init	function
(	O
&	O
(	O
*	O
sip	pointer
)	O
->	O
headers	pointer
)	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
message_property	int
=	O
3	int
;	O
(	O
*	O
sip	pointer
)	O
->	O
message	pointer
=	O
NULL	O
;	O
(	O
*	O
sip	pointer
)	O
->	O
message_length	long
=	O
0	int
;	O
(	O
*	O
sip	pointer
)	O
->	O
application_data	pointer
=	O
NULL	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_message_set_reason_phrase	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
char	O
*	O
reason	pointer
)	O
{	O
sip	pointer
->	O
reason_phrase	pointer
=	O
reason	pointer
;	O
}	O
void	O
osip_message_set_status_code	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
int	O
status_code	int
)	O
{	O
sip	pointer
->	O
status_code	int
=	O
status_code	int
;	O
}	O
void	O
osip_message_set_method	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
char	O
*	O
sip_method	pointer
)	O
{	O
sip	pointer
->	O
sip_method	pointer
=	O
sip_method	pointer
;	O
}	O
void	O
osip_message_set_version	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
char	O
*	O
sip_version	pointer
)	O
{	O
sip	pointer
->	O
sip_version	pointer
=	O
sip_version	pointer
;	O
}	O
void	O
osip_message_set_uri	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
osip_uri_t	struct
*	O
url	pointer
)	O
{	O
sip	pointer
->	O
req_uri	pointer
=	O
url	pointer
;	O
}	O
void	O
osip_message_free	function
(	O
osip_message_t	struct
*	O
sip	pointer
)	O
{	O
if	O
(	O
sip	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
sip	pointer
->	O
sip_method	pointer
)	O
;	O
osip_free	O
(	O
sip	pointer
->	O
sip_version	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
req_uri	pointer
!=	O
NULL	O
)	O
osip_uri_free	function
(	O
sip	pointer
->	O
req_uri	pointer
)	O
;	O
osip_free	O
(	O
sip	pointer
->	O
reason_phrase	pointer
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
accepts	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_accept_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
authorizations	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_authorization_free	function
)	O
;	O
if	O
(	O
sip	pointer
->	O
call_id	pointer
!=	O
NULL	O
)	O
osip_call_id_free	function
(	O
sip	pointer
->	O
call_id	pointer
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
accept_encodings	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_accept_encoding_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
accept_languages	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_accept_language_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
alert_infos	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_alert_info_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
allows	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_allow_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
authentication_infos	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_authentication_info_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
content_encodings	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_content_encoding_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
error_infos	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_error_info_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
proxy_authentication_infos	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_proxy_authentication_info_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
call_infos	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_call_info_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
contacts	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_contact_free	function
)	O
;	O
if	O
(	O
sip	pointer
->	O
content_length	pointer
!=	O
NULL	O
)	O
osip_content_length_free	function
(	O
sip	pointer
->	O
content_length	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
content_type	pointer
!=	O
NULL	O
)	O
osip_content_type_free	function
(	O
sip	pointer
->	O
content_type	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
cseq	pointer
!=	O
NULL	O
)	O
osip_cseq_free	function
(	O
sip	pointer
->	O
cseq	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
from	pointer
!=	O
NULL	O
)	O
osip_from_free	function
(	O
sip	pointer
->	O
from	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
mime_version	pointer
!=	O
NULL	O
)	O
osip_mime_version_free	O
(	O
sip	pointer
->	O
mime_version	pointer
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
proxy_authenticates	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_proxy_authenticate_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
proxy_authorizations	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_proxy_authorization_free	O
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
record_routes	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_record_route_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
routes	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_route_free	function
)	O
;	O
if	O
(	O
sip	pointer
->	O
to	pointer
!=	O
NULL	O
)	O
osip_to_free	function
(	O
sip	pointer
->	O
to	pointer
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
vias	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_via_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
www_authenticates	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_www_authenticate_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
headers	pointer
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_header_free	function
)	O
;	O
osip_list_special_free	function
(	O
&	O
sip	pointer
->	O
bodies	struct
,	O
(	O
void	O
(	O
*	O
)	O
(	O
void	O
*	O
)	O
)	O
&	O
osip_body_free	function
)	O
;	O
osip_free	O
(	O
sip	pointer
->	O
message	pointer
)	O
;	O
osip_free	O
(	O
sip	pointer
)	O
;	O
}	O
int	O
osip_message_clone	function
(	O
const	O
osip_message_t	struct
*	O
sip	pointer
,	O
osip_message_t	struct
*	O
*	O
dest	pointer
)	O
{	O
osip_message_t	struct
*	O
copy	pointer
;	O
int	O
i	int
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
sip	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_message_init	function
(	O
&	O
copy	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
copy	pointer
->	O
sip_method	pointer
=	O
osip_strdup	function
(	O
sip	pointer
->	O
sip_method	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
sip_method	pointer
!=	O
NULL	O
&&	O
copy	pointer
->	O
sip_method	pointer
==	O
NULL	O
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
copy	pointer
->	O
sip_version	pointer
=	O
osip_strdup	function
(	O
sip	pointer
->	O
sip_version	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
sip_version	pointer
!=	O
NULL	O
&&	O
copy	pointer
->	O
sip_version	pointer
==	O
NULL	O
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
copy	pointer
->	O
status_code	int
=	O
sip	pointer
->	O
status_code	int
;	O
copy	pointer
->	O
reason_phrase	pointer
=	O
osip_strdup	function
(	O
sip	pointer
->	O
reason_phrase	pointer
)	O
;	O
if	O
(	O
sip	pointer
->	O
reason_phrase	pointer
!=	O
NULL	O
&&	O
copy	pointer
->	O
reason_phrase	pointer
==	O
NULL	O
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
sip	pointer
->	O
req_uri	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_uri_clone	function
(	O
sip	pointer
->	O
req_uri	pointer
,	O
&	O
(	O
copy	pointer
->	O
req_uri	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
accepts	struct
,	O
&	O
copy	pointer
->	O
accepts	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_accept_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
accept_encodings	struct
,	O
&	O
copy	pointer
->	O
accept_encodings	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_accept_encoding_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
accept_languages	struct
,	O
&	O
copy	pointer
->	O
accept_languages	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_accept_language_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
alert_infos	struct
,	O
&	O
copy	pointer
->	O
alert_infos	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_alert_info_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
allows	struct
,	O
&	O
copy	pointer
->	O
allows	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_allow_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
authentication_infos	struct
,	O
&	O
copy	pointer
->	O
authentication_infos	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_authentication_info_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
content_encodings	struct
,	O
&	O
copy	pointer
->	O
content_encodings	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_content_encoding_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
error_infos	struct
,	O
&	O
copy	pointer
->	O
error_infos	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_error_info_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
proxy_authentication_infos	struct
,	O
&	O
copy	pointer
->	O
proxy_authentication_infos	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_proxy_authentication_info_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
call_infos	struct
,	O
&	O
copy	pointer
->	O
call_infos	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_call_info_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
authorizations	struct
,	O
&	O
copy	pointer
->	O
authorizations	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_authorization_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
sip	pointer
->	O
call_id	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_call_id_clone	function
(	O
sip	pointer
->	O
call_id	pointer
,	O
&	O
(	O
copy	pointer
->	O
call_id	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
contacts	struct
,	O
&	O
copy	pointer
->	O
contacts	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_contact_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
sip	pointer
->	O
content_length	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_content_length_clone	function
(	O
sip	pointer
->	O
content_length	pointer
,	O
&	O
(	O
copy	pointer
->	O
content_length	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
if	O
(	O
sip	pointer
->	O
content_type	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_content_type_clone	function
(	O
sip	pointer
->	O
content_type	pointer
,	O
&	O
(	O
copy	pointer
->	O
content_type	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
if	O
(	O
sip	pointer
->	O
cseq	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_cseq_clone	function
(	O
sip	pointer
->	O
cseq	pointer
,	O
&	O
(	O
copy	pointer
->	O
cseq	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
if	O
(	O
sip	pointer
->	O
from	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_from_clone	function
(	O
sip	pointer
->	O
from	pointer
,	O
&	O
(	O
copy	pointer
->	O
from	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
if	O
(	O
sip	pointer
->	O
mime_version	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_mime_version_clone	O
(	O
sip	pointer
->	O
mime_version	pointer
,	O
&	O
(	O
copy	pointer
->	O
mime_version	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
proxy_authenticates	struct
,	O
&	O
copy	pointer
->	O
proxy_authenticates	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_proxy_authenticate_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
proxy_authorizations	struct
,	O
&	O
copy	pointer
->	O
proxy_authorizations	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_proxy_authorization_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
record_routes	struct
,	O
&	O
copy	pointer
->	O
record_routes	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_record_route_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
routes	struct
,	O
&	O
copy	pointer
->	O
routes	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_route_clone	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
if	O
(	O
sip	pointer
->	O
to	pointer
!=	O
NULL	O
)	O
{	O
i	int
=	O
osip_to_clone	function
(	O
sip	pointer
->	O
to	pointer
,	O
&	O
(	O
copy	pointer
->	O
to	pointer
)	O
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
vias	struct
,	O
&	O
copy	pointer
->	O
vias	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_via_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
www_authenticates	struct
,	O
&	O
copy	pointer
->	O
www_authenticates	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_www_authenticate_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
headers	pointer
,	O
&	O
copy	pointer
->	O
headers	pointer
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_header_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
i	int
=	O
osip_list_clone	function
(	O
&	O
sip	pointer
->	O
bodies	struct
,	O
&	O
copy	pointer
->	O
bodies	struct
,	O
(	O
int	O
(	O
*	O
)	O
(	O
void	O
*	O
,	O
void	O
*	O
*	O
)	O
)	O
&	O
osip_body_clone	function
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
i	int
;	O
}	O
copy	pointer
->	O
message_length	long
=	O
sip	pointer
->	O
message_length	long
;	O
copy	pointer
->	O
message	pointer
=	O
osip_strdup	function
(	O
sip	pointer
->	O
message	pointer
)	O
;	O
if	O
(	O
copy	pointer
->	O
message	pointer
==	O
NULL	O
&&	O
sip	pointer
->	O
message	pointer
!=	O
NULL	O
)	O
{	O
osip_message_free	function
(	O
copy	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
copy	pointer
->	O
message_property	int
=	O
sip	pointer
->	O
message_property	int
;	O
copy	pointer
->	O
application_data	pointer
=	O
sip	pointer
->	O
application_data	pointer
;	O
*	O
dest	pointer
=	O
copy	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_knownheaderlist	function
(	O
osip_list_t	struct
*	O
header_list	pointer
,	O
int	O
pos	int
,	O
void	O
*	O
*	O
dest	pointer
)	O
{	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	function
(	O
header_list	pointer
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
*	O
dest	pointer
=	O
(	O
void	O
*	O
)	O
osip_list_get	function
(	O
header_list	pointer
,	O
pos	int
)	O
;	O
return	O
pos	int
;	O
}	O
