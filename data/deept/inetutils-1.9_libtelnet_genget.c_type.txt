int	O
isprefix	function
(	O
register	O
char	O
*	O
s1	pointer
,	O
register	O
char	O
*	O
s2	pointer
)	O
{	O
char	O
*	O
os1	pointer
;	O
register	O
char	O
c1	char
,	O
c2	char
;	O
if	O
(	O
*	O
s1	pointer
==	O
'\0'	O
)	O
return	O
(	O
-	O
1	int
)	O
;	O
os1	pointer
=	O
s1	pointer
;	O
c1	char
=	O
*	O
s1	pointer
;	O
c2	char
=	O
*	O
s2	pointer
;	O
while	O
(	O
LOWER	O
(	O
c1	char
)	O
==	O
LOWER	O
(	O
c2	char
)	O
)	O
{	O
if	O
(	O
c1	char
==	O
'\0'	O
)	O
break	O
;	O
c1	char
=	O
*	O
++	O
s1	pointer
;	O
c2	char
=	O
*	O
++	O
s2	pointer
;	O
}	O
return	O
(	O
*	O
s1	pointer
?	O
0	int
:	O
(	O
*	O
s2	pointer
?	O
(	O
s1	pointer
-	O
os1	pointer
)	O
:	O
(	O
os1	pointer
-	O
s1	pointer
)	O
)	O
)	O
;	O
}	O
static	O
char	O
*	O
ambiguous	pointer
;	O
char	O
*	O
*	O
genget	function
(	O
char	O
*	O
name	pointer
,	O
char	O
*	O
*	O
table	pointer
,	O
int	O
stlen	int
)	O
{	O
register	O
char	O
*	O
*	O
c	pointer
,	O
*	O
*	O
found	pointer
;	O
register	O
int	O
n	int
;	O
if	O
(	O
name	pointer
==	O
0	int
)	O
return	O
0	int
;	O
found	pointer
=	O
0	int
;	O
for	O
(	O
c	pointer
=	O
table	pointer
;	O
*	O
c	pointer
!=	O
0	int
;	O
c	pointer
=	O
(	O
char	O
*	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
c	pointer
+	O
stlen	int
)	O
)	O
{	O
if	O
(	O
(	O
n	int
=	O
isprefix	function
(	O
name	pointer
,	O
*	O
c	pointer
)	O
)	O
==	O
0	int
)	O
continue	O
;	O
if	O
(	O
n	int
<	O
0	int
)	O
return	O
(	O
c	pointer
)	O
;	O
if	O
(	O
found	pointer
)	O
return	O
(	O
&	O
ambiguous	pointer
)	O
;	O
found	pointer
=	O
c	pointer
;	O
}	O
return	O
(	O
found	pointer
)	O
;	O
}	O
int	O
Ambiguous	function
(	O
char	O
*	O
s	pointer
)	O
{	O
return	O
(	O
(	O
char	O
*	O
*	O
)	O
s	pointer
==	O
&	O
ambiguous	pointer
)	O
;	O
}	O
