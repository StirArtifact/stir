struct	O
coff_symbols	struct
{	O
asymbol	struct
*	O
*	O
syms	pointer
;	O
long	O
symcount	int
;	O
long	O
symno	long
;	O
long	O
coff_symno	long
;	O
}	O
;	O
struct	O
coff_slots	struct
{	O
struct	O
coff_slots	struct
*	O
next	pointer
;	O
debug_type	pointer
slots	array
[	O
COFF_SLOTS	O
]	O
;	O
}	O
;	O
struct	O
coff_types	struct
{	O
struct	O
coff_slots	struct
*	O
slots	array
;	O
debug_type	pointer
basic	array
[	O
T_MAX	O
+	O
1	int
]	O
;	O
}	O
;	O
static	O
debug_type	pointer
*	O
coff_get_slot	function
(	O
struct	O
coff_types	struct
*	O
,	O
long	O
)	O
;	O
static	O
debug_type	pointer
parse_coff_type	function
(	O
bfd	struct
*	O
,	O
struct	O
coff_symbols	struct
*	O
,	O
struct	O
coff_types	struct
*	O
,	O
long	O
,	O
int	O
,	O
union	O
internal_auxent	union
*	O
,	O
bfd_boolean	int
,	O
void	O
*	O
)	O
;	O
static	O
debug_type	pointer
parse_coff_base_type	function
(	O
bfd	struct
*	O
,	O
struct	O
coff_symbols	struct
*	O
,	O
struct	O
coff_types	struct
*	O
,	O
long	O
,	O
int	O
,	O
union	O
internal_auxent	union
*	O
,	O
void	O
*	O
)	O
;	O
static	O
debug_type	pointer
parse_coff_struct_type	function
(	O
bfd	struct
*	O
,	O
struct	O
coff_symbols	struct
*	O
,	O
struct	O
coff_types	struct
*	O
,	O
int	O
,	O
union	O
internal_auxent	union
*	O
,	O
void	O
*	O
)	O
;	O
static	O
debug_type	pointer
parse_coff_enum_type	function
(	O
bfd	struct
*	O
,	O
struct	O
coff_symbols	struct
*	O
,	O
struct	O
coff_types	struct
*	O
,	O
union	O
internal_auxent	union
*	O
,	O
void	O
*	O
)	O
;	O
static	O
bfd_boolean	int
parse_coff_symbol	function
(	O
bfd	struct
*	O
,	O
struct	O
coff_types	struct
*	O
,	O
asymbol	struct
*	O
,	O
long	O
,	O
struct	O
internal_syment	struct
*	O
,	O
void	O
*	O
,	O
debug_type	pointer
,	O
bfd_boolean	int
)	O
;	O
static	O
bfd_boolean	int
external_coff_symbol_p	function
(	O
int	O
sym_class	int
)	O
;	O
static	O
debug_type	pointer
*	O
coff_get_slot	function
(	O
struct	O
coff_types	struct
*	O
types	pointer
,	O
long	O
indx	long
)	O
{	O
struct	O
coff_slots	struct
*	O
*	O
pps	pointer
;	O
pps	pointer
=	O
&	O
types	pointer
->	O
slots	array
;	O
if	O
(	O
indx	long
/	O
COFF_SLOTS	O
>	O
1000	int
)	O
fatal	function
(	O
_	O
(	O
"Excessively large slot index: %lx"	pointer
)	O
,	O
indx	long
)	O
;	O
while	O
(	O
indx	long
>=	O
COFF_SLOTS	O
)	O
{	O
if	O
(	O
*	O
pps	pointer
==	O
NULL	O
)	O
{	O
*	O
pps	pointer
=	O
(	O
struct	O
coff_slots	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
*	O
*	O
pps	pointer
)	O
;	O
memset	function
(	O
*	O
pps	pointer
,	O
0	int
,	O
sizeof	O
*	O
*	O
pps	pointer
)	O
;	O
}	O
pps	pointer
=	O
&	O
(	O
*	O
pps	pointer
)	O
->	O
next	pointer
;	O
indx	long
-=	O
COFF_SLOTS	O
;	O
}	O
if	O
(	O
*	O
pps	pointer
==	O
NULL	O
)	O
{	O
*	O
pps	pointer
=	O
(	O
struct	O
coff_slots	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
*	O
*	O
pps	pointer
)	O
;	O
memset	function
(	O
*	O
pps	pointer
,	O
0	int
,	O
sizeof	O
*	O
*	O
pps	pointer
)	O
;	O
}	O
return	O
(	O
*	O
pps	pointer
)	O
->	O
slots	array
+	O
indx	long
;	O
}	O
static	O
debug_type	pointer
parse_coff_type	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
coff_symbols	struct
*	O
symbols	pointer
,	O
struct	O
coff_types	struct
*	O
types	pointer
,	O
long	O
coff_symno	long
,	O
int	O
ntype	enum
,	O
union	O
internal_auxent	union
*	O
pauxent	pointer
,	O
bfd_boolean	int
useaux	int
,	O
void	O
*	O
dhandle	pointer
)	O
{	O
debug_type	pointer
type	enum
;	O
if	O
(	O
(	O
ntype	enum
&	O
~	O
N_BTMASK	O
)	O
!=	O
0	int
)	O
{	O
int	O
newtype	int
;	O
newtype	int
=	O
DECREF	O
(	O
ntype	enum
)	O
;	O
if	O
(	O
ISPTR	O
(	O
ntype	enum
)	O
)	O
{	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
coff_symno	long
,	O
newtype	int
,	O
pauxent	pointer
,	O
useaux	int
,	O
dhandle	pointer
)	O
;	O
type	enum
=	O
debug_make_pointer_type	function
(	O
dhandle	pointer
,	O
type	enum
)	O
;	O
}	O
else	O
if	O
(	O
ISFCN	O
(	O
ntype	enum
)	O
)	O
{	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
coff_symno	long
,	O
newtype	int
,	O
pauxent	pointer
,	O
useaux	int
,	O
dhandle	pointer
)	O
;	O
type	enum
=	O
debug_make_function_type	function
(	O
dhandle	pointer
,	O
type	enum
,	O
(	O
debug_type	pointer
*	O
)	O
NULL	O
,	O
FALSE	int
)	O
;	O
}	O
else	O
if	O
(	O
ISARY	O
(	O
ntype	enum
)	O
)	O
{	O
int	O
n	int
;	O
if	O
(	O
pauxent	pointer
==	O
NULL	O
)	O
n	int
=	O
0	int
;	O
else	O
{	O
unsigned	O
short	O
*	O
dim	pointer
;	O
int	O
i	pointer
;	O
dim	pointer
=	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_fcnary	union
.	O
x_ary	struct
.	O
x_dimen	array
;	O
n	int
=	O
dim	pointer
[	O
0	int
]	O
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
*	O
dim	pointer
!=	O
0	int
&&	O
i	pointer
<	O
DIMNUM	int
-	O
1	int
;	O
i	pointer
++	O
,	O
dim	pointer
++	O
)	O
*	O
dim	pointer
=	O
*	O
(	O
dim	pointer
+	O
1	int
)	O
;	O
*	O
dim	pointer
=	O
0	int
;	O
}	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
coff_symno	long
,	O
newtype	int
,	O
pauxent	pointer
,	O
FALSE	int
,	O
dhandle	pointer
)	O
;	O
type	enum
=	O
debug_make_array_type	function
(	O
dhandle	pointer
,	O
type	enum
,	O
parse_coff_base_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
coff_symno	long
,	O
T_INT	int
,	O
NULL	O
,	O
dhandle	pointer
)	O
,	O
0	int
,	O
n	int
-	O
1	int
,	O
FALSE	int
)	O
;	O
}	O
else	O
{	O
non_fatal	function
(	O
_	O
(	O
"parse_coff_type: Bad type code 0x%x"	pointer
)	O
,	O
ntype	enum
)	O
;	O
return	O
DEBUG_TYPE_NULL	O
;	O
}	O
return	O
type	enum
;	O
}	O
if	O
(	O
pauxent	pointer
!=	O
NULL	O
&&	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_tagndx	union
.	O
l	long
>	O
0	int
)	O
{	O
debug_type	pointer
*	O
slot	pointer
;	O
slot	pointer
=	O
coff_get_slot	function
(	O
types	pointer
,	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_tagndx	union
.	O
l	long
)	O
;	O
if	O
(	O
*	O
slot	pointer
!=	O
DEBUG_TYPE_NULL	O
)	O
return	O
*	O
slot	pointer
;	O
else	O
return	O
debug_make_indirect_type	function
(	O
dhandle	pointer
,	O
slot	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
}	O
if	O
(	O
!	O
useaux	int
)	O
pauxent	pointer
=	O
NULL	O
;	O
return	O
parse_coff_base_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
coff_symno	long
,	O
ntype	enum
,	O
pauxent	pointer
,	O
dhandle	pointer
)	O
;	O
}	O
static	O
debug_type	pointer
parse_coff_base_type	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
coff_symbols	struct
*	O
symbols	pointer
,	O
struct	O
coff_types	struct
*	O
types	pointer
,	O
long	O
coff_symno	long
,	O
int	O
ntype	enum
,	O
union	O
internal_auxent	union
*	O
pauxent	pointer
,	O
void	O
*	O
dhandle	pointer
)	O
{	O
debug_type	pointer
ret	pointer
;	O
bfd_boolean	int
set_basic	int
;	O
const	O
char	O
*	O
name	pointer
;	O
debug_type	pointer
*	O
slot	pointer
;	O
if	O
(	O
ntype	enum
>=	O
0	int
&&	O
ntype	enum
<=	O
T_MAX	O
&&	O
types	pointer
->	O
basic	array
[	O
ntype	enum
]	O
!=	O
DEBUG_TYPE_NULL	O
)	O
return	O
types	pointer
->	O
basic	array
[	O
ntype	enum
]	O
;	O
set_basic	int
=	O
TRUE	int
;	O
name	pointer
=	O
NULL	O
;	O
switch	O
(	O
ntype	enum
)	O
{	O
default	O
:	O
ret	pointer
=	O
debug_make_void_type	function
(	O
dhandle	pointer
)	O
;	O
break	O
;	O
case	O
T_NULL	int
:	O
case	O
T_VOID	int
:	O
ret	pointer
=	O
debug_make_void_type	function
(	O
dhandle	pointer
)	O
;	O
name	pointer
=	O
"void"	pointer
;	O
break	O
;	O
case	O
T_CHAR	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
1	int
,	O
FALSE	int
)	O
;	O
name	pointer
=	O
"char"	pointer
;	O
break	O
;	O
case	O
T_SHORT	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
2	int
,	O
FALSE	int
)	O
;	O
name	pointer
=	O
"short"	pointer
;	O
break	O
;	O
case	O
T_INT	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
4	int
,	O
FALSE	int
)	O
;	O
name	pointer
=	O
"int"	pointer
;	O
break	O
;	O
case	O
T_LONG	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
4	int
,	O
FALSE	int
)	O
;	O
name	pointer
=	O
"long"	pointer
;	O
break	O
;	O
case	O
T_FLOAT	int
:	O
ret	pointer
=	O
debug_make_float_type	function
(	O
dhandle	pointer
,	O
4	int
)	O
;	O
name	pointer
=	O
"float"	pointer
;	O
break	O
;	O
case	O
T_DOUBLE	int
:	O
ret	pointer
=	O
debug_make_float_type	function
(	O
dhandle	pointer
,	O
8	int
)	O
;	O
name	pointer
=	O
"double"	pointer
;	O
break	O
;	O
case	O
T_LNGDBL	int
:	O
ret	pointer
=	O
debug_make_float_type	function
(	O
dhandle	pointer
,	O
12	int
)	O
;	O
name	pointer
=	O
"long double"	pointer
;	O
break	O
;	O
case	O
T_UCHAR	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
1	int
,	O
TRUE	int
)	O
;	O
name	pointer
=	O
"unsigned char"	pointer
;	O
break	O
;	O
case	O
T_USHORT	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
2	int
,	O
TRUE	int
)	O
;	O
name	pointer
=	O
"unsigned short"	pointer
;	O
break	O
;	O
case	O
T_UINT	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
4	int
,	O
TRUE	int
)	O
;	O
name	pointer
=	O
"unsigned int"	pointer
;	O
break	O
;	O
case	O
T_ULONG	int
:	O
ret	pointer
=	O
debug_make_int_type	function
(	O
dhandle	pointer
,	O
4	int
,	O
TRUE	int
)	O
;	O
name	pointer
=	O
"unsigned long"	pointer
;	O
break	O
;	O
case	O
T_STRUCT	int
:	O
if	O
(	O
pauxent	pointer
==	O
NULL	O
)	O
ret	pointer
=	O
debug_make_struct_type	function
(	O
dhandle	pointer
,	O
TRUE	int
,	O
0	int
,	O
(	O
debug_field	pointer
*	O
)	O
NULL	O
)	O
;	O
else	O
ret	pointer
=	O
parse_coff_struct_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
ntype	enum
,	O
pauxent	pointer
,	O
dhandle	pointer
)	O
;	O
slot	pointer
=	O
coff_get_slot	function
(	O
types	pointer
,	O
coff_symno	long
)	O
;	O
*	O
slot	pointer
=	O
ret	pointer
;	O
set_basic	int
=	O
FALSE	int
;	O
break	O
;	O
case	O
T_UNION	int
:	O
if	O
(	O
pauxent	pointer
==	O
NULL	O
)	O
ret	pointer
=	O
debug_make_struct_type	function
(	O
dhandle	pointer
,	O
FALSE	int
,	O
0	int
,	O
(	O
debug_field	pointer
*	O
)	O
NULL	O
)	O
;	O
else	O
ret	pointer
=	O
parse_coff_struct_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
ntype	enum
,	O
pauxent	pointer
,	O
dhandle	pointer
)	O
;	O
slot	pointer
=	O
coff_get_slot	function
(	O
types	pointer
,	O
coff_symno	long
)	O
;	O
*	O
slot	pointer
=	O
ret	pointer
;	O
set_basic	int
=	O
FALSE	int
;	O
break	O
;	O
case	O
T_ENUM	int
:	O
if	O
(	O
pauxent	pointer
==	O
NULL	O
)	O
ret	pointer
=	O
debug_make_enum_type	function
(	O
dhandle	pointer
,	O
(	O
const	O
char	O
*	O
*	O
)	O
NULL	O
,	O
(	O
bfd_signed_vma	long
*	O
)	O
NULL	O
)	O
;	O
else	O
ret	pointer
=	O
parse_coff_enum_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
pauxent	pointer
,	O
dhandle	pointer
)	O
;	O
slot	pointer
=	O
coff_get_slot	function
(	O
types	pointer
,	O
coff_symno	long
)	O
;	O
*	O
slot	pointer
=	O
ret	pointer
;	O
set_basic	int
=	O
FALSE	int
;	O
break	O
;	O
}	O
if	O
(	O
name	pointer
!=	O
NULL	O
)	O
ret	pointer
=	O
debug_name_type	function
(	O
dhandle	pointer
,	O
name	pointer
,	O
ret	pointer
)	O
;	O
if	O
(	O
set_basic	int
&&	O
ntype	enum
>=	O
0	int
&&	O
ntype	enum
<=	O
T_MAX	O
)	O
types	pointer
->	O
basic	array
[	O
ntype	enum
]	O
=	O
ret	pointer
;	O
return	O
ret	pointer
;	O
}	O
static	O
debug_type	pointer
parse_coff_struct_type	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
coff_symbols	struct
*	O
symbols	pointer
,	O
struct	O
coff_types	struct
*	O
types	pointer
,	O
int	O
ntype	enum
,	O
union	O
internal_auxent	union
*	O
pauxent	pointer
,	O
void	O
*	O
dhandle	pointer
)	O
{	O
long	O
symend	long
;	O
int	O
alloc	int
;	O
debug_field	pointer
*	O
fields	pointer
;	O
int	O
count	int
;	O
bfd_boolean	int
done	int
;	O
symend	long
=	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_fcnary	union
.	O
x_fcn	struct
.	O
x_endndx	union
.	O
l	long
;	O
alloc	int
=	O
10	int
;	O
fields	pointer
=	O
(	O
debug_field	pointer
*	O
)	O
xmalloc	function
(	O
alloc	int
*	O
sizeof	O
*	O
fields	pointer
)	O
;	O
count	int
=	O
0	int
;	O
done	int
=	O
FALSE	int
;	O
while	O
(	O
!	O
done	int
&&	O
symbols	pointer
->	O
coff_symno	long
<	O
symend	long
&&	O
symbols	pointer
->	O
symno	long
<	O
symbols	pointer
->	O
symcount	int
)	O
{	O
asymbol	struct
*	O
sym	pointer
;	O
long	O
this_coff_symno	long
;	O
struct	O
internal_syment	struct
syment	struct
;	O
union	O
internal_auxent	union
auxent	union
;	O
union	O
internal_auxent	union
*	O
psubaux	pointer
;	O
bfd_vma	long
bitpos	int
=	O
0	int
,	O
bitsize	int
=	O
0	int
;	O
sym	pointer
=	O
symbols	pointer
->	O
syms	pointer
[	O
symbols	pointer
->	O
symno	long
]	O
;	O
if	O
(	O
!	O
bfd_coff_get_syment	function
(	O
abfd	pointer
,	O
sym	pointer
,	O
&	O
syment	struct
)	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"bfd_coff_get_syment failed: %s"	pointer
)	O
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
free	function
(	O
fields	pointer
)	O
;	O
return	O
DEBUG_TYPE_NULL	O
;	O
}	O
this_coff_symno	long
=	O
symbols	pointer
->	O
coff_symno	long
;	O
++	O
symbols	pointer
->	O
symno	long
;	O
symbols	pointer
->	O
coff_symno	long
+=	O
1	int
+	O
syment	struct
.	O
n_numaux	char
;	O
if	O
(	O
syment	struct
.	O
n_numaux	char
==	O
0	int
)	O
psubaux	pointer
=	O
NULL	O
;	O
else	O
{	O
if	O
(	O
!	O
bfd_coff_get_auxent	function
(	O
abfd	pointer
,	O
sym	pointer
,	O
0	int
,	O
&	O
auxent	union
)	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"bfd_coff_get_auxent failed: %s"	pointer
)	O
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
free	function
(	O
fields	pointer
)	O
;	O
return	O
DEBUG_TYPE_NULL	O
;	O
}	O
psubaux	pointer
=	O
&	O
auxent	union
;	O
}	O
switch	O
(	O
syment	struct
.	O
n_sclass	char
)	O
{	O
case	O
C_MOS	int
:	O
case	O
C_MOU	int
:	O
bitpos	int
=	O
8	int
*	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
;	O
bitsize	int
=	O
0	int
;	O
break	O
;	O
case	O
C_FIELD	int
:	O
bitpos	int
=	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
;	O
bitsize	int
=	O
auxent	union
.	O
x_sym	struct
.	O
x_misc	union
.	O
x_lnsz	struct
.	O
x_size	short
;	O
break	O
;	O
case	O
C_EOS	int
:	O
done	int
=	O
TRUE	int
;	O
break	O
;	O
}	O
if	O
(	O
!	O
done	int
)	O
{	O
debug_type	pointer
ftype	pointer
;	O
debug_field	pointer
f	pointer
;	O
ftype	pointer
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
symbols	pointer
,	O
types	pointer
,	O
this_coff_symno	long
,	O
syment	struct
.	O
n_type	short
,	O
psubaux	pointer
,	O
TRUE	int
,	O
dhandle	pointer
)	O
;	O
f	pointer
=	O
debug_make_field	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
ftype	pointer
,	O
bitpos	int
,	O
bitsize	int
,	O
DEBUG_VISIBILITY_PUBLIC	int
)	O
;	O
if	O
(	O
f	pointer
==	O
DEBUG_FIELD_NULL	O
)	O
return	O
DEBUG_TYPE_NULL	O
;	O
if	O
(	O
count	int
+	O
1	int
>=	O
alloc	int
)	O
{	O
alloc	int
+=	O
10	int
;	O
fields	pointer
=	O
(	O
(	O
debug_field	pointer
*	O
)	O
xrealloc	function
(	O
fields	pointer
,	O
alloc	int
*	O
sizeof	O
*	O
fields	pointer
)	O
)	O
;	O
}	O
fields	pointer
[	O
count	int
]	O
=	O
f	pointer
;	O
++	O
count	int
;	O
}	O
}	O
fields	pointer
[	O
count	int
]	O
=	O
DEBUG_FIELD_NULL	O
;	O
return	O
debug_make_struct_type	function
(	O
dhandle	pointer
,	O
ntype	enum
==	O
T_STRUCT	int
,	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_misc	union
.	O
x_lnsz	struct
.	O
x_size	short
,	O
fields	pointer
)	O
;	O
}	O
static	O
debug_type	pointer
parse_coff_enum_type	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
coff_symbols	struct
*	O
symbols	pointer
,	O
struct	O
coff_types	struct
*	O
types	pointer
ATTRIBUTE_UNUSED	O
,	O
union	O
internal_auxent	union
*	O
pauxent	pointer
,	O
void	O
*	O
dhandle	pointer
)	O
{	O
long	O
symend	long
;	O
int	O
alloc	int
;	O
const	O
char	O
*	O
*	O
names	pointer
;	O
bfd_signed_vma	long
*	O
vals	pointer
;	O
int	O
count	int
;	O
bfd_boolean	int
done	int
;	O
symend	long
=	O
pauxent	pointer
->	O
x_sym	struct
.	O
x_fcnary	union
.	O
x_fcn	struct
.	O
x_endndx	union
.	O
l	long
;	O
alloc	int
=	O
10	int
;	O
names	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xmalloc	function
(	O
alloc	int
*	O
sizeof	O
*	O
names	pointer
)	O
;	O
vals	pointer
=	O
(	O
bfd_signed_vma	long
*	O
)	O
xmalloc	function
(	O
alloc	int
*	O
sizeof	O
*	O
vals	pointer
)	O
;	O
count	int
=	O
0	int
;	O
done	int
=	O
FALSE	int
;	O
while	O
(	O
!	O
done	int
&&	O
symbols	pointer
->	O
coff_symno	long
<	O
symend	long
&&	O
symbols	pointer
->	O
symno	long
<	O
symbols	pointer
->	O
symcount	int
)	O
{	O
asymbol	struct
*	O
sym	pointer
;	O
struct	O
internal_syment	struct
syment	struct
;	O
sym	pointer
=	O
symbols	pointer
->	O
syms	pointer
[	O
symbols	pointer
->	O
symno	long
]	O
;	O
if	O
(	O
!	O
bfd_coff_get_syment	function
(	O
abfd	pointer
,	O
sym	pointer
,	O
&	O
syment	struct
)	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"bfd_coff_get_syment failed: %s"	pointer
)	O
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
free	function
(	O
names	pointer
)	O
;	O
free	function
(	O
vals	pointer
)	O
;	O
return	O
DEBUG_TYPE_NULL	O
;	O
}	O
++	O
symbols	pointer
->	O
symno	long
;	O
symbols	pointer
->	O
coff_symno	long
+=	O
1	int
+	O
syment	struct
.	O
n_numaux	char
;	O
switch	O
(	O
syment	struct
.	O
n_sclass	char
)	O
{	O
case	O
C_MOE	int
:	O
if	O
(	O
count	int
+	O
1	int
>=	O
alloc	int
)	O
{	O
alloc	int
+=	O
10	int
;	O
names	pointer
=	O
(	O
(	O
const	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
names	pointer
,	O
alloc	int
*	O
sizeof	O
*	O
names	pointer
)	O
)	O
;	O
vals	pointer
=	O
(	O
(	O
bfd_signed_vma	long
*	O
)	O
xrealloc	function
(	O
vals	pointer
,	O
alloc	int
*	O
sizeof	O
*	O
vals	pointer
)	O
)	O
;	O
}	O
names	pointer
[	O
count	int
]	O
=	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
;	O
vals	pointer
[	O
count	int
]	O
=	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
;	O
++	O
count	int
;	O
break	O
;	O
case	O
C_EOS	int
:	O
done	int
=	O
TRUE	int
;	O
break	O
;	O
}	O
}	O
names	pointer
[	O
count	int
]	O
=	O
NULL	O
;	O
return	O
debug_make_enum_type	function
(	O
dhandle	pointer
,	O
names	pointer
,	O
vals	pointer
)	O
;	O
}	O
static	O
bfd_boolean	int
parse_coff_symbol	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
coff_types	struct
*	O
types	pointer
,	O
asymbol	struct
*	O
sym	pointer
,	O
long	O
coff_symno	long
,	O
struct	O
internal_syment	struct
*	O
psyment	pointer
,	O
void	O
*	O
dhandle	pointer
,	O
debug_type	pointer
type	enum
,	O
bfd_boolean	int
within_function	int
)	O
{	O
switch	O
(	O
psyment	pointer
->	O
n_sclass	char
)	O
{	O
case	O
C_NULL	int
:	O
break	O
;	O
case	O
C_AUTO	int
:	O
if	O
(	O
!	O
debug_record_variable	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
DEBUG_LOCAL	int
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_WEAKEXT	int
:	O
case	O
C_EXT	int
:	O
if	O
(	O
!	O
debug_record_variable	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
DEBUG_GLOBAL	int
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_STAT	int
:	O
if	O
(	O
!	O
debug_record_variable	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
(	O
within_function	int
?	O
DEBUG_LOCAL_STATIC	int
:	O
DEBUG_STATIC	int
)	O
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_REG	int
:	O
if	O
(	O
!	O
debug_record_variable	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
DEBUG_REGISTER	int
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_LABEL	int
:	O
break	O
;	O
case	O
C_ARG	int
:	O
if	O
(	O
!	O
debug_record_parameter	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
DEBUG_PARM_STACK	int
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_REGPARM	int
:	O
if	O
(	O
!	O
debug_record_parameter	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
,	O
DEBUG_PARM_REG	int
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_TPDEF	int
:	O
type	enum
=	O
debug_name_type	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
)	O
;	O
if	O
(	O
type	enum
==	O
DEBUG_TYPE_NULL	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_STRTAG	int
:	O
case	O
C_UNTAG	int
:	O
case	O
C_ENTAG	int
:	O
{	O
debug_type	pointer
*	O
slot	pointer
;	O
type	enum
=	O
debug_tag_type	function
(	O
dhandle	pointer
,	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
,	O
type	enum
)	O
;	O
if	O
(	O
type	enum
==	O
DEBUG_TYPE_NULL	O
)	O
return	O
FALSE	int
;	O
slot	pointer
=	O
coff_get_slot	function
(	O
types	pointer
,	O
coff_symno	long
)	O
;	O
*	O
slot	pointer
=	O
type	enum
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
bfd_boolean	int
external_coff_symbol_p	function
(	O
int	O
sym_class	int
)	O
{	O
switch	O
(	O
sym_class	int
)	O
{	O
case	O
C_EXT	int
:	O
case	O
C_WEAKEXT	int
:	O
return	O
TRUE	int
;	O
default	O
:	O
break	O
;	O
}	O
return	O
FALSE	int
;	O
}	O
bfd_boolean	int
parse_coff	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
asymbol	struct
*	O
*	O
syms	pointer
,	O
long	O
symcount	int
,	O
void	O
*	O
dhandle	pointer
)	O
{	O
struct	O
coff_symbols	struct
symbols	pointer
;	O
struct	O
coff_types	struct
types	pointer
;	O
int	O
i	pointer
;	O
long	O
next_c_file	long
;	O
const	O
char	O
*	O
fnname	pointer
;	O
int	O
fnclass	int
;	O
int	O
fntype	int
;	O
bfd_vma	long
fnend	long
;	O
alent	struct
*	O
linenos	pointer
;	O
bfd_boolean	int
within_function	int
;	O
long	O
this_coff_symno	long
;	O
symbols	pointer
.	O
syms	pointer
=	O
syms	pointer
;	O
symbols	pointer
.	O
symcount	int
=	O
symcount	int
;	O
symbols	pointer
.	O
symno	long
=	O
0	int
;	O
symbols	pointer
.	O
coff_symno	long
=	O
0	int
;	O
types	pointer
.	O
slots	array
=	O
NULL	O
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<=	O
T_MAX	O
;	O
i	pointer
++	O
)	O
types	pointer
.	O
basic	array
[	O
i	pointer
]	O
=	O
DEBUG_TYPE_NULL	O
;	O
next_c_file	long
=	O
-	O
1	int
;	O
fnname	pointer
=	O
NULL	O
;	O
fnclass	int
=	O
0	int
;	O
fntype	int
=	O
0	int
;	O
fnend	long
=	O
0	int
;	O
linenos	pointer
=	O
NULL	O
;	O
within_function	int
=	O
FALSE	int
;	O
while	O
(	O
symbols	pointer
.	O
symno	long
<	O
symcount	int
)	O
{	O
asymbol	struct
*	O
sym	pointer
;	O
const	O
char	O
*	O
name	pointer
;	O
struct	O
internal_syment	struct
syment	struct
;	O
union	O
internal_auxent	union
auxent	union
;	O
union	O
internal_auxent	union
*	O
paux	pointer
;	O
debug_type	pointer
type	enum
;	O
sym	pointer
=	O
syms	pointer
[	O
symbols	pointer
.	O
symno	long
]	O
;	O
if	O
(	O
!	O
bfd_coff_get_syment	function
(	O
abfd	pointer
,	O
sym	pointer
,	O
&	O
syment	struct
)	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"bfd_coff_get_syment failed: %s"	pointer
)	O
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
return	O
FALSE	int
;	O
}	O
name	pointer
=	O
bfd_asymbol_name	function
(	O
sym	pointer
)	O
;	O
this_coff_symno	long
=	O
symbols	pointer
.	O
coff_symno	long
;	O
++	O
symbols	pointer
.	O
symno	long
;	O
symbols	pointer
.	O
coff_symno	long
+=	O
1	int
+	O
syment	struct
.	O
n_numaux	char
;	O
if	O
(	O
syment	struct
.	O
n_numaux	char
==	O
0	int
)	O
paux	pointer
=	O
NULL	O
;	O
else	O
{	O
if	O
(	O
!	O
bfd_coff_get_auxent	function
(	O
abfd	pointer
,	O
sym	pointer
,	O
0	int
,	O
&	O
auxent	union
)	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"bfd_coff_get_auxent failed: %s"	pointer
)	O
,	O
bfd_errmsg	function
(	O
bfd_get_error	function
(	O
)	O
)	O
)	O
;	O
return	O
FALSE	int
;	O
}	O
paux	pointer
=	O
&	O
auxent	union
;	O
}	O
if	O
(	O
this_coff_symno	long
==	O
next_c_file	long
&&	O
syment	struct
.	O
n_sclass	char
!=	O
C_FILE	int
)	O
{	O
if	O
(	O
!	O
debug_set_filename	function
(	O
dhandle	pointer
,	O
"*globals*"	pointer
)	O
)	O
return	O
FALSE	int
;	O
}	O
switch	O
(	O
syment	struct
.	O
n_sclass	char
)	O
{	O
case	O
C_EFCN	int
:	O
case	O
C_EXTDEF	int
:	O
case	O
C_ULABEL	int
:	O
case	O
C_USTATIC	int
:	O
case	O
C_LINE	int
:	O
case	O
C_ALIAS	int
:	O
case	O
C_HIDDEN	int
:	O
break	O
;	O
case	O
C_FILE	int
:	O
next_c_file	long
=	O
syment	struct
.	O
n_value	long
;	O
if	O
(	O
!	O
debug_set_filename	function
(	O
dhandle	pointer
,	O
name	pointer
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_STAT	int
:	O
if	O
(	O
syment	struct
.	O
n_type	short
==	O
T_NULL	int
)	O
break	O
;	O
case	O
C_WEAKEXT	int
:	O
case	O
C_EXT	int
:	O
if	O
(	O
ISFCN	O
(	O
syment	struct
.	O
n_type	short
)	O
)	O
{	O
fnname	pointer
=	O
name	pointer
;	O
fnclass	int
=	O
syment	struct
.	O
n_sclass	char
;	O
fntype	int
=	O
syment	struct
.	O
n_type	short
;	O
if	O
(	O
syment	struct
.	O
n_numaux	char
>	O
0	int
)	O
fnend	long
=	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
+	O
auxent	union
.	O
x_sym	struct
.	O
x_misc	union
.	O
x_fsize	long
;	O
else	O
fnend	long
=	O
0	int
;	O
linenos	pointer
=	O
BFD_SEND	O
(	O
abfd	pointer
,	O
_get_lineno	pointer
,	O
(	O
abfd	pointer
,	O
sym	pointer
)	O
)	O
;	O
break	O
;	O
}	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
&	O
symbols	pointer
,	O
&	O
types	pointer
,	O
this_coff_symno	long
,	O
syment	struct
.	O
n_type	short
,	O
paux	pointer
,	O
TRUE	int
,	O
dhandle	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
DEBUG_TYPE_NULL	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
!	O
parse_coff_symbol	function
(	O
abfd	pointer
,	O
&	O
types	pointer
,	O
sym	pointer
,	O
this_coff_symno	long
,	O
&	O
syment	struct
,	O
dhandle	pointer
,	O
type	enum
,	O
within_function	int
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
case	O
C_FCN	int
:	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
".bf"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
fnname	pointer
==	O
NULL	O
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"%ld: .bf without preceding function"	pointer
)	O
,	O
this_coff_symno	long
)	O
;	O
return	O
FALSE	int
;	O
}	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
&	O
symbols	pointer
,	O
&	O
types	pointer
,	O
this_coff_symno	long
,	O
DECREF	O
(	O
fntype	int
)	O
,	O
paux	pointer
,	O
FALSE	int
,	O
dhandle	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
DEBUG_TYPE_NULL	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
!	O
debug_record_function	function
(	O
dhandle	pointer
,	O
fnname	pointer
,	O
type	enum
,	O
external_coff_symbol_p	function
(	O
fnclass	int
)	O
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
linenos	pointer
!=	O
NULL	O
)	O
{	O
int	O
base	int
;	O
bfd_vma	long
addr	pointer
;	O
if	O
(	O
syment	struct
.	O
n_numaux	char
==	O
0	int
)	O
base	int
=	O
0	int
;	O
else	O
base	int
=	O
auxent	union
.	O
x_sym	struct
.	O
x_misc	union
.	O
x_lnsz	struct
.	O
x_lnno	short
-	O
1	int
;	O
addr	pointer
=	O
bfd_section_vma	function
(	O
bfd_asymbol_section	function
(	O
sym	pointer
)	O
)	O
;	O
++	O
linenos	pointer
;	O
while	O
(	O
linenos	pointer
->	O
line_number	int
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
debug_record_line	function
(	O
dhandle	pointer
,	O
linenos	pointer
->	O
line_number	int
+	O
base	int
,	O
linenos	pointer
->	O
u	union
.	O
offset	long
+	O
addr	pointer
)	O
)	O
return	O
FALSE	int
;	O
++	O
linenos	pointer
;	O
}	O
}	O
fnname	pointer
=	O
NULL	O
;	O
linenos	pointer
=	O
NULL	O
;	O
fnclass	int
=	O
0	int
;	O
fntype	int
=	O
0	int
;	O
within_function	int
=	O
TRUE	int
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
".ef"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
within_function	int
)	O
{	O
non_fatal	function
(	O
_	O
(	O
"%ld: unexpected .ef\n"	pointer
)	O
,	O
this_coff_symno	long
)	O
;	O
return	O
FALSE	int
;	O
}	O
if	O
(	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
>	O
fnend	long
)	O
fnend	long
=	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
;	O
if	O
(	O
!	O
debug_end_function	function
(	O
dhandle	pointer
,	O
fnend	long
)	O
)	O
return	O
FALSE	int
;	O
fnend	long
=	O
0	int
;	O
within_function	int
=	O
FALSE	int
;	O
}	O
break	O
;	O
case	O
C_BLOCK	int
:	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
".bb"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
debug_start_block	function
(	O
dhandle	pointer
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
".eb"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
debug_end_block	function
(	O
dhandle	pointer
,	O
bfd_asymbol_value	function
(	O
sym	pointer
)	O
)	O
)	O
return	O
FALSE	int
;	O
}	O
break	O
;	O
default	O
:	O
type	enum
=	O
parse_coff_type	function
(	O
abfd	pointer
,	O
&	O
symbols	pointer
,	O
&	O
types	pointer
,	O
this_coff_symno	long
,	O
syment	struct
.	O
n_type	short
,	O
paux	pointer
,	O
TRUE	int
,	O
dhandle	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
DEBUG_TYPE_NULL	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
!	O
parse_coff_symbol	function
(	O
abfd	pointer
,	O
&	O
types	pointer
,	O
sym	pointer
,	O
this_coff_symno	long
,	O
&	O
syment	struct
,	O
dhandle	pointer
,	O
type	enum
,	O
within_function	int
)	O
)	O
return	O
FALSE	int
;	O
break	O
;	O
}	O
}	O
return	O
TRUE	int
;	O
}	O
