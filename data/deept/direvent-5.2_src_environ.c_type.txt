extern	O
char	O
*	O
*	O
environ	pointer
;	O
static	O
int	O
find_env_pos	function
(	O
char	O
*	O
*	O
env	pointer
,	O
char	O
*	O
name	pointer
,	O
size_t	long
*	O
idx	pointer
,	O
size_t	long
*	O
valoff	pointer
)	O
{	O
size_t	long
nlen	long
=	O
strcspn	function
(	O
name	pointer
,	O
"+="	pointer
)	O
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
env	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
size_t	long
elen	long
=	O
strcspn	function
(	O
env	pointer
[	O
i	long
]	O
,	O
"="	pointer
)	O
;	O
if	O
(	O
elen	long
==	O
nlen	long
&&	O
memcmp	function
(	O
name	pointer
,	O
env	pointer
[	O
i	long
]	O
,	O
nlen	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
idx	pointer
)	O
*	O
idx	pointer
=	O
i	long
;	O
if	O
(	O
valoff	pointer
)	O
*	O
valoff	pointer
=	O
elen	long
+	O
1	int
;	O
return	O
0	int
;	O
}	O
}	O
return	O
-	O
1	int
;	O
}	O
static	O
char	O
*	O
find_env_ptr	function
(	O
char	O
*	O
*	O
env	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
val	int
)	O
{	O
size_t	long
i	long
,	O
j	long
;	O
if	O
(	O
find_env_pos	function
(	O
env	pointer
,	O
name	pointer
,	O
&	O
i	long
,	O
&	O
j	long
)	O
)	O
return	O
NULL	O
;	O
return	O
val	int
?	O
env	pointer
[	O
i	long
]	O
+	O
j	long
:	O
env	pointer
[	O
i	long
]	O
;	O
}	O
static	O
int	O
var_is_unset	function
(	O
char	O
*	O
*	O
env	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
int	O
i	long
;	O
int	O
nlen	long
=	O
strcspn	function
(	O
name	pointer
,	O
"="	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
env	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
env	pointer
[	O
i	long
]	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
size_t	long
elen	long
=	O
strcspn	function
(	O
env	pointer
[	O
i	long
]	O
+	O
1	int
,	O
"="	pointer
)	O
;	O
if	O
(	O
elen	long
==	O
nlen	long
&&	O
memcmp	function
(	O
name	pointer
,	O
env	pointer
[	O
i	long
]	O
+	O
1	int
,	O
nlen	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
env	pointer
[	O
i	long
]	O
[	O
nlen	long
+	O
1	int
]	O
)	O
return	O
strcmp	function
(	O
name	pointer
+	O
nlen	long
,	O
env	pointer
[	O
i	long
]	O
+	O
1	int
+	O
nlen	long
)	O
==	O
0	int
;	O
else	O
return	O
1	int
;	O
}	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
env_concat	function
(	O
const	O
char	O
*	O
name	pointer
,	O
size_t	long
namelen	long
,	O
const	O
char	O
*	O
a	pointer
,	O
const	O
char	O
*	O
b	pointer
)	O
{	O
char	O
*	O
res	pointer
;	O
size_t	long
len	long
;	O
if	O
(	O
a	pointer
&&	O
b	pointer
)	O
{	O
res	pointer
=	O
emalloc	function
(	O
namelen	long
+	O
1	int
+	O
strlen	function
(	O
a	pointer
)	O
+	O
strlen	function
(	O
b	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
res	pointer
+	O
namelen	long
+	O
1	int
,	O
a	pointer
)	O
;	O
strcat	function
(	O
res	pointer
+	O
namelen	long
+	O
1	int
,	O
b	pointer
)	O
;	O
}	O
else	O
if	O
(	O
a	pointer
)	O
{	O
len	long
=	O
strlen	function
(	O
a	pointer
)	O
;	O
if	O
(	O
ispunct	function
(	O
a	pointer
[	O
len	long
-	O
1	int
]	O
)	O
)	O
len	long
--	O
;	O
res	pointer
=	O
emalloc	function
(	O
namelen	long
+	O
1	int
+	O
len	long
+	O
1	int
)	O
;	O
memcpy	function
(	O
res	pointer
+	O
namelen	long
+	O
1	int
,	O
a	pointer
,	O
len	long
)	O
;	O
res	pointer
[	O
namelen	long
+	O
1	int
+	O
len	long
]	O
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
ispunct	function
(	O
b	pointer
[	O
0	int
]	O
)	O
)	O
b	pointer
++	O
;	O
len	long
=	O
strlen	function
(	O
b	pointer
)	O
;	O
res	pointer
=	O
emalloc	function
(	O
namelen	long
+	O
1	int
+	O
len	long
+	O
1	int
)	O
;	O
strcpy	function
(	O
res	pointer
+	O
namelen	long
+	O
1	int
,	O
b	pointer
)	O
;	O
}	O
memcpy	function
(	O
res	pointer
,	O
name	pointer
,	O
namelen	long
)	O
;	O
res	pointer
[	O
namelen	long
]	O
=	O
'='	O
;	O
return	O
res	pointer
;	O
}	O
static	O
char	O
*	O
defenv	array
[	O
]	O
=	O
{	O
"DIREVENT_SYSEV_CODE=${sysev_code}"	pointer
,	O
"DIREVENT_SYSEV_NAME=${sysev_name}"	pointer
,	O
"DIREVENT_GENEV_CODE=${genev_code}"	pointer
,	O
"DIREVENT_GENEV_NAME=${genev_name}"	pointer
,	O
"DIREVENT_FILE=${file}"	pointer
,	O
NULL	O
}	O
;	O
char	O
*	O
*	O
environ_setup	function
(	O
char	O
*	O
*	O
hint	pointer
,	O
char	O
*	O
*	O
kve	pointer
)	O
{	O
char	O
*	O
empty	array
[	O
1	int
]	O
=	O
{	O
NULL	O
}	O
;	O
char	O
*	O
*	O
old_env	pointer
=	O
environ	pointer
;	O
char	O
*	O
*	O
new_env	pointer
;	O
char	O
*	O
*	O
addenv	pointer
=	O
defenv	array
;	O
char	O
*	O
var	pointer
;	O
size_t	long
count	long
,	O
i	long
,	O
j	long
,	O
n	long
;	O
struct	O
wordsplit	struct
ws	pointer
;	O
int	O
wsflags	int
=	O
WRDSF_NOCMD	int
|	O
WRDSF_QUOTE	O
|	O
WRDSF_NOSPLIT	int
|	O
WRDSF_ENV	int
|	O
WRDSF_ENV_KV	int
;	O
ws	pointer
.	O
ws_env	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
kve	pointer
;	O
if	O
(	O
!	O
hint	pointer
)	O
hint	pointer
=	O
empty	array
;	O
else	O
if	O
(	O
strcmp	function
(	O
hint	pointer
[	O
0	int
]	O
,	O
"-"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
hint	pointer
[	O
0	int
]	O
,	O
"--"	pointer
)	O
==	O
0	int
)	O
{	O
old_env	pointer
=	O
NULL	O
;	O
if	O
(	O
hint	pointer
[	O
0	int
]	O
[	O
1	int
]	O
==	O
'-'	O
)	O
addenv	pointer
=	O
empty	array
;	O
hint	pointer
++	O
;	O
}	O
count	long
=	O
0	int
;	O
if	O
(	O
old_env	pointer
)	O
for	O
(	O
i	long
=	O
0	int
;	O
old_env	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
count	long
++	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
addenv	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
count	long
++	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
hint	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
count	long
++	O
;	O
if	O
(	O
self_test_pid	int
)	O
count	long
++	O
;	O
new_env	pointer
=	O
ecalloc	function
(	O
count	long
+	O
1	int
,	O
sizeof	O
new_env	pointer
[	O
0	int
]	O
)	O
;	O
n	long
=	O
0	int
;	O
if	O
(	O
old_env	pointer
)	O
for	O
(	O
i	long
=	O
0	int
;	O
old_env	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
!	O
var_is_unset	function
(	O
hint	pointer
,	O
old_env	pointer
[	O
i	long
]	O
)	O
)	O
new_env	pointer
[	O
n	long
++	O
]	O
=	O
old_env	pointer
[	O
i	long
]	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
addenv	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
if	O
(	O
!	O
var_is_unset	function
(	O
hint	pointer
,	O
addenv	pointer
[	O
i	long
]	O
)	O
)	O
{	O
if	O
(	O
wordsplit	struct
(	O
addenv	pointer
[	O
i	long
]	O
,	O
&	O
ws	pointer
,	O
wsflags	int
)	O
)	O
{	O
diag	function
(	O
LOG_CRIT	int
,	O
"wordsplit: %s"	pointer
,	O
wordsplit_strerror	function
(	O
&	O
ws	pointer
)	O
)	O
;	O
_exit	function
(	O
127	int
)	O
;	O
}	O
wsflags	int
|=	O
WRDSF_REUSE	int
;	O
new_env	pointer
[	O
n	long
++	O
]	O
=	O
estrdup	function
(	O
ws	pointer
.	O
ws_wordv	pointer
[	O
0	int
]	O
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
hint	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
char	O
*	O
p	pointer
;	O
if	O
(	O
hint	pointer
[	O
i	long
]	O
[	O
0	int
]	O
==	O
'-'	O
)	O
{	O
continue	O
;	O
}	O
if	O
(	O
wordsplit	struct
(	O
hint	pointer
[	O
i	long
]	O
,	O
&	O
ws	pointer
,	O
wsflags	int
)	O
)	O
{	O
diag	function
(	O
LOG_CRIT	int
,	O
"wordsplit: %s"	pointer
,	O
wordsplit_strerror	function
(	O
&	O
ws	pointer
)	O
)	O
;	O
_exit	function
(	O
127	int
)	O
;	O
}	O
wsflags	int
|=	O
WRDSF_REUSE	int
;	O
var	pointer
=	O
ws	pointer
.	O
ws_wordv	pointer
[	O
0	int
]	O
;	O
if	O
(	O
find_env_pos	function
(	O
new_env	pointer
,	O
hint	pointer
[	O
i	long
]	O
,	O
&	O
j	long
,	O
NULL	O
)	O
)	O
j	long
=	O
n	long
;	O
if	O
(	O
(	O
p	pointer
=	O
strchr	function
(	O
var	pointer
,	O
'='	O
)	O
)	O
)	O
{	O
if	O
(	O
p	pointer
==	O
var	pointer
)	O
continue	O
;	O
if	O
(	O
p	pointer
[	O
-	O
1	int
]	O
==	O
'+'	O
)	O
new_env	pointer
[	O
j	long
]	O
=	O
env_concat	function
(	O
var	pointer
,	O
p	pointer
-	O
var	pointer
-	O
1	int
,	O
find_env_ptr	function
(	O
environ	pointer
,	O
var	pointer
,	O
1	int
)	O
,	O
p	pointer
+	O
1	int
)	O
;	O
else	O
if	O
(	O
p	pointer
[	O
1	int
]	O
==	O
'+'	O
)	O
new_env	pointer
[	O
j	long
]	O
=	O
env_concat	function
(	O
var	pointer
,	O
p	pointer
-	O
var	pointer
,	O
p	pointer
+	O
2	int
,	O
find_env_ptr	function
(	O
environ	pointer
,	O
var	pointer
,	O
1	int
)	O
)	O
;	O
else	O
new_env	pointer
[	O
j	long
]	O
=	O
estrdup	function
(	O
var	pointer
)	O
;	O
}	O
else	O
if	O
(	O
(	O
p	pointer
=	O
find_env_ptr	function
(	O
environ	pointer
,	O
hint	pointer
[	O
i	long
]	O
,	O
0	int
)	O
)	O
)	O
new_env	pointer
[	O
j	long
]	O
=	O
p	pointer
;	O
else	O
continue	O
;	O
if	O
(	O
j	long
==	O
n	long
)	O
++	O
n	long
;	O
}	O
if	O
(	O
self_test_pid	int
)	O
{	O
char	O
buf	array
[	O
512	int
]	O
;	O
snprintf	function
(	O
buf	array
,	O
sizeof	O
buf	array
,	O
"DIREVENT_SELF_TEST_PID=%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
self_test_pid	int
)	O
;	O
new_env	pointer
[	O
n	long
++	O
]	O
=	O
estrdup	function
(	O
buf	array
)	O
;	O
;	O
}	O
new_env	pointer
[	O
n	long
]	O
=	O
NULL	O
;	O
if	O
(	O
wsflags	int
&	O
WRDSF_REUSE	int
)	O
wordsplit_free	function
(	O
&	O
ws	pointer
)	O
;	O
return	O
new_env	pointer
;	O
}	O
