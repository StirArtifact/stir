void	O
*	O
grad_malloc	function
(	O
size_t	long
size	int
)	O
{	O
char	O
*	O
p	pointer
;	O
p	pointer
=	O
malloc	function
(	O
size	int
+	O
EXTRA	int
)	O
;	O
GRAD_DEBUG2	O
(	O
10	int
,	O
"malloc(%d) = %p"	pointer
,	O
size	int
,	O
p	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
memset	function
(	O
p	pointer
,	O
0	int
,	O
size	int
)	O
;	O
}	O
return	O
p	pointer
;	O
}	O
void	O
*	O
grad_realloc	function
(	O
void	O
*	O
ptr	pointer
,	O
size_t	long
size	int
)	O
{	O
if	O
(	O
!	O
ptr	pointer
)	O
return	O
grad_malloc	function
(	O
size	int
)	O
;	O
else	O
{	O
ptr	pointer
=	O
realloc	function
(	O
ptr	pointer
,	O
size	int
)	O
;	O
}	O
return	O
ptr	pointer
;	O
}	O
void	O
grad_free	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
if	O
(	O
!	O
ptr	pointer
)	O
return	O
;	O
GRAD_DEBUG1	O
(	O
10	int
,	O
"free(%p)"	pointer
,	O
ptr	pointer
)	O
;	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
void	O
grad_destroy	function
(	O
void	O
*	O
*	O
pptr	pointer
)	O
{	O
if	O
(	O
*	O
pptr	pointer
)	O
{	O
grad_free	function
(	O
*	O
pptr	pointer
)	O
;	O
*	O
pptr	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
*	O
grad_emalloc	function
(	O
size_t	long
size	int
)	O
{	O
char	O
*	O
p	pointer
;	O
p	pointer
=	O
grad_malloc	function
(	O
size	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
{	O
grad_log	function
(	O
GRAD_LOG_CRIT	int
,	O
_	O
(	O
"low core: aborting"	pointer
)	O
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
return	O
p	pointer
;	O
}	O
void	O
*	O
grad_erealloc	function
(	O
void	O
*	O
ptr	pointer
,	O
size_t	long
size	int
)	O
{	O
ptr	pointer
=	O
grad_realloc	function
(	O
ptr	pointer
,	O
size	int
)	O
;	O
if	O
(	O
!	O
ptr	pointer
)	O
{	O
grad_log	function
(	O
GRAD_LOG_CRIT	int
,	O
_	O
(	O
"low core: aborting"	pointer
)	O
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
return	O
ptr	pointer
;	O
}	O
char	O
*	O
grad_estrdup	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
char	O
*	O
p	pointer
;	O
if	O
(	O
!	O
s	pointer
)	O
return	O
NULL	O
;	O
p	pointer
=	O
grad_emalloc	function
(	O
strlen	function
(	O
s	pointer
)	O
+	O
1	int
)	O
;	O
return	O
strcpy	function
(	O
p	pointer
,	O
s	pointer
)	O
;	O
}	O
char	O
*	O
grad_string_replace	function
(	O
char	O
*	O
*	O
str	pointer
,	O
const	O
char	O
*	O
new_value	pointer
)	O
{	O
char	O
*	O
p	pointer
=	O
*	O
str	pointer
;	O
*	O
str	pointer
=	O
grad_estrdup	function
(	O
new_value	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
grad_free	function
(	O
p	pointer
)	O
;	O
return	O
*	O
str	pointer
;	O
}	O
