typedef	O
struct	O
{	O
ESint32	long
type	long
;	O
EPChar	pointer
desc	pointer
;	O
}	O
DtEDMA_EXCEPTION	struct
;	O
ESint32	long
EDMAPROC	O
EDMA_EXCEPTIONprint	function
(	O
OBJID	long
IdObj	long
)	O
{	O
DtEDMA_EXCEPTION	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtEDMA_EXCEPTION	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	long
)	O
;	O
edma_print	function
(	O
">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"	pointer
)	O
;	O
edma_print	function
(	O
"[EDMA_EXCEPTION] print"	pointer
)	O
;	O
edma_printf	function
(	O
"    Type        : %ld"	pointer
,	O
m	pointer
->	O
type	long
)	O
;	O
edma_printf	function
(	O
"    Description : %s"	pointer
,	O
m	pointer
->	O
desc	pointer
)	O
;	O
edma_print	function
(	O
">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
EDMA_EXCEPTIONbrief	function
(	O
OBJID	long
IdObj	long
)	O
{	O
DtEDMA_EXCEPTION	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtEDMA_EXCEPTION	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	long
)	O
;	O
edma_printf	function
(	O
"[EDMA_EXCEPTION] <%ld> :: %s"	pointer
,	O
m	pointer
->	O
type	long
,	O
m	pointer
->	O
desc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
EDMA_EXCEPTIONthrow	function
(	O
OBJID	long
IdObj	long
)	O
{	O
DtEDMA_EXCEPTION	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtEDMA_EXCEPTION	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	long
)	O
;	O
edma_exception_throw	function
(	O
IdObj	long
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
EDMA_EXCEPTIONsetS32Z	function
(	O
OBJID	long
IdObj	long
,	O
ESint32	long
type	long
,	O
EPChar	pointer
msg	pointer
)	O
{	O
DtEDMA_EXCEPTION	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtEDMA_EXCEPTION	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	long
)	O
;	O
edma_wprop3	function
(	O
IdObj	long
,	O
"type"	pointer
,	O
type	long
)	O
;	O
edma_wprop3	function
(	O
IdObj	long
,	O
"desc"	pointer
,	O
msg	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMA_EXCEPTION_class_factory	function
(	O
)	O
{	O
CLASSID	long
cid	long
;	O
cid	long
=	O
edma_idf_get_free_class_id	function
(	O
EDMA_LOCAL_CLASS	int
)	O
;	O
edma_idf_set_class_name	function
(	O
cid	long
,	O
"EDMA_EXCEPTION"	pointer
)	O
;	O
edma_idf_set_class_namespace	function
(	O
cid	long
,	O
""	pointer
)	O
;	O
edma_idf_set_class_version	function
(	O
cid	long
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	function
(	O
cid	long
,	O
"type"	pointer
,	O
DT_ESINT32	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_property	function
(	O
cid	long
,	O
"desc"	pointer
,	O
DT_EZSTRING	int
,	O
E_L	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	function
(	O
cid	long
,	O
"print"	pointer
,	O
""	pointer
,	O
(	O
PPROC	pointer
)	O
EDMA_EXCEPTIONprint	function
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	function
(	O
cid	long
,	O
"throw"	pointer
,	O
""	pointer
,	O
(	O
PPROC	pointer
)	O
EDMA_EXCEPTIONthrow	function
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	function
(	O
cid	long
,	O
"set"	pointer
,	O
"S32Z"	pointer
,	O
(	O
PPROC	pointer
)	O
EDMA_EXCEPTIONsetS32Z	function
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_add_local_class_method	function
(	O
cid	long
,	O
"brief"	pointer
,	O
""	pointer
,	O
(	O
PPROC	pointer
)	O
EDMA_EXCEPTIONbrief	function
,	O
1	int
,	O
0	int
,	O
0	int
)	O
;	O
edma_idf_set_class_id	function
(	O
cid	long
)	O
;	O
return	O
cid	long
;	O
}	O
