void	O
mpz_clrbit	O
(	O
mpz_ptr	pointer
d	long
,	O
mp_bitcnt_t	long
bit_idx	long
)	O
{	O
mp_size_t	long
dsize	long
=	O
SIZ	O
(	O
d	long
)	O
;	O
mp_ptr	pointer
dp	pointer
=	O
PTR	O
(	O
d	long
)	O
;	O
mp_size_t	long
limb_idx	long
;	O
mp_limb_t	long
mask	long
;	O
limb_idx	long
=	O
bit_idx	long
/	O
GMP_NUMB_BITS	O
;	O
mask	long
=	O
CNST_LIMB	O
(	O
1	int
)	O
<<	O
(	O
bit_idx	long
%	O
GMP_NUMB_BITS	O
)	O
;	O
if	O
(	O
dsize	long
>=	O
0	int
)	O
{	O
if	O
(	O
limb_idx	long
<	O
dsize	long
)	O
{	O
mp_limb_t	long
dlimb	long
;	O
dlimb	long
=	O
dp	pointer
[	O
limb_idx	long
]	O
;	O
dlimb	long
&=	O
~	O
mask	long
;	O
dp	pointer
[	O
limb_idx	long
]	O
=	O
dlimb	long
;	O
if	O
(	O
UNLIKELY	O
(	O
dlimb	long
==	O
0	int
&&	O
limb_idx	long
==	O
dsize	long
-	O
1	int
)	O
)	O
{	O
MPN_NORMALIZE	O
(	O
dp	pointer
,	O
limb_idx	long
)	O
;	O
SIZ	O
(	O
d	long
)	O
=	O
limb_idx	long
;	O
}	O
}	O
else	O
;	O
}	O
else	O
{	O
mp_size_t	long
zero_bound	long
;	O
dsize	long
=	O
-	O
dsize	long
;	O
zero_bound	long
=	O
0	int
;	O
while	O
(	O
dp	pointer
[	O
zero_bound	long
]	O
==	O
0	int
)	O
zero_bound	long
++	O
;	O
if	O
(	O
limb_idx	long
>	O
zero_bound	long
)	O
{	O
if	O
(	O
limb_idx	long
<	O
dsize	long
)	O
dp	pointer
[	O
limb_idx	long
]	O
|=	O
mask	long
;	O
else	O
{	O
dp	pointer
=	O
MPZ_REALLOC	O
(	O
d	long
,	O
limb_idx	long
+	O
1	int
)	O
;	O
SIZ	O
(	O
d	long
)	O
=	O
-	O
(	O
limb_idx	long
+	O
1	int
)	O
;	O
MPN_ZERO	O
(	O
dp	pointer
+	O
dsize	long
,	O
limb_idx	long
-	O
dsize	long
)	O
;	O
dp	pointer
[	O
limb_idx	long
]	O
=	O
mask	long
;	O
}	O
}	O
else	O
if	O
(	O
limb_idx	long
==	O
zero_bound	long
)	O
{	O
dp	pointer
[	O
limb_idx	long
]	O
=	O
(	O
(	O
(	O
(	O
dp	pointer
[	O
limb_idx	long
]	O
-	O
1	int
)	O
|	O
mask	long
)	O
+	O
1	int
)	O
&	O
GMP_NUMB_MASK	O
)	O
;	O
if	O
(	O
dp	pointer
[	O
limb_idx	long
]	O
==	O
0	int
)	O
{	O
dp	pointer
=	O
MPZ_REALLOC	O
(	O
d	long
,	O
dsize	long
+	O
1	int
)	O
;	O
dp	pointer
[	O
dsize	long
]	O
=	O
0	int
;	O
MPN_INCR_U	O
(	O
dp	pointer
+	O
limb_idx	long
+	O
1	int
,	O
dsize	long
-	O
limb_idx	long
,	O
1	int
)	O
;	O
dsize	long
+=	O
dp	pointer
[	O
dsize	long
]	O
;	O
SIZ	O
(	O
d	long
)	O
=	O
-	O
dsize	long
;	O
}	O
}	O
else	O
;	O
}	O
}	O
