const	O
char	O
work_rcsid	array
[	O
]	O
=	O
"$Id: work.c,v 1.24 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
static	O
char	O
*	O
zswork_directory	function
P	O
(	O
(	O
const	O
char	O
*	O
zsystem	pointer
)	O
)	O
;	O
static	O
boolean	int
fswork_file	function
P	O
(	O
(	O
const	O
char	O
*	O
zsystem	pointer
,	O
const	O
char	O
*	O
zfile	pointer
,	O
char	O
*	O
pbgrade	pointer
)	O
)	O
;	O
static	O
int	O
iswork_cmp	function
P	O
(	O
(	O
constpointer	pointer
pkey	pointer
,	O
constpointer	pointer
pdatum	pointer
)	O
)	O
;	O
struct	O
ssfilename	struct
{	O
char	O
*	O
zfile	pointer
;	O
char	O
bgrade	char
;	O
char	O
bdummy	char
;	O
}	O
;	O
struct	O
ssline	struct
{	O
char	O
*	O
zline	pointer
;	O
struct	O
ssfile	struct
*	O
qfile	pointer
;	O
char	O
*	O
ztemp	pointer
;	O
}	O
;	O
struct	O
ssfile	struct
{	O
char	O
*	O
zfile	pointer
;	O
char	O
bgrade	char
;	O
char	O
bdummy	char
;	O
int	O
clines	int
;	O
int	O
cdid	int
;	O
struct	O
ssline	struct
aslines	array
[	O
CFILELINES	O
]	O
;	O
}	O
;	O
static	O
struct	O
ssfilename	struct
*	O
asSwork_files	pointer
;	O
static	O
size_t	long
cSwork_files	long
;	O
static	O
size_t	long
iSwork_file	long
;	O
static	O
struct	O
ssfile	struct
*	O
qSwork_file	pointer
;	O
static	O
char	O
*	O
zswork_directory	function
(	O
zsystem	pointer
)	O
const	O
char	O
*	O
zsystem	pointer
;	O
{	O
return	O
zsysdep_in_dir	function
(	O
zsystem	pointer
,	O
"C."	pointer
)	O
;	O
}	O
static	O
boolean	int
fswork_file	function
(	O
zsystem	pointer
,	O
zfile	pointer
,	O
pbgrade	pointer
)	O
const	O
char	O
*	O
zsystem	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zfile	pointer
;	O
char	O
*	O
pbgrade	pointer
;	O
{	O
*	O
pbgrade	pointer
=	O
zfile	pointer
[	O
2	int
]	O
;	O
return	O
(	O
zfile	pointer
[	O
0	int
]	O
==	O
'C'	O
&&	O
zfile	pointer
[	O
1	int
]	O
==	O
'.'	O
&&	O
zfile	pointer
[	O
2	int
]	O
!=	O
'\0'	O
)	O
;	O
}	O
static	O
int	O
iswork_cmp	function
(	O
pkey	pointer
,	O
pdatum	pointer
)	O
constpointer	pointer
pkey	pointer
;	O
constpointer	pointer
pdatum	pointer
;	O
{	O
const	O
struct	O
ssfilename	struct
*	O
qkey	pointer
=	O
(	O
const	O
struct	O
ssfilename	struct
*	O
)	O
pkey	pointer
;	O
const	O
struct	O
ssfilename	struct
*	O
qdatum	pointer
=	O
(	O
const	O
struct	O
ssfilename	struct
*	O
)	O
pdatum	pointer
;	O
return	O
strcmp	function
(	O
qkey	pointer
->	O
zfile	pointer
,	O
qdatum	pointer
->	O
zfile	pointer
)	O
;	O
}	O
boolean	int
fsysdep_has_work	function
(	O
qsys	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
{	O
char	O
*	O
zdir	pointer
;	O
DIR	struct
*	O
qdir	pointer
;	O
struct	O
dirent	struct
*	O
qentry	pointer
;	O
zdir	pointer
=	O
zswork_directory	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
if	O
(	O
zdir	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
qdir	pointer
=	O
opendir	function
(	O
(	O
char	O
*	O
)	O
zdir	pointer
)	O
;	O
if	O
(	O
qdir	pointer
==	O
NULL	O
)	O
{	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
while	O
(	O
(	O
qentry	pointer
=	O
readdir	function
(	O
qdir	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
bgrade	char
;	O
if	O
(	O
fswork_file	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qentry	pointer
->	O
d_name	array
,	O
&	O
bgrade	char
)	O
)	O
{	O
closedir	function
(	O
qdir	pointer
)	O
;	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
closedir	function
(	O
qdir	pointer
)	O
;	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
boolean	int
fsysdep_get_work_init	function
(	O
qsys	pointer
,	O
bgrade	char
,	O
cmax	int
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
int	O
bgrade	char
;	O
unsigned	O
int	O
cmax	int
;	O
{	O
char	O
*	O
zdir	pointer
;	O
DIR	struct
*	O
qdir	pointer
;	O
struct	O
dirent	struct
*	O
qentry	pointer
;	O
size_t	long
chad	long
;	O
size_t	long
callocated	long
;	O
zdir	pointer
=	O
zswork_directory	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
if	O
(	O
zdir	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
qdir	pointer
=	O
opendir	function
(	O
zdir	pointer
)	O
;	O
if	O
(	O
qdir	pointer
==	O
NULL	O
)	O
{	O
boolean	int
fret	int
;	O
if	O
(	O
errno	O
==	O
ENOENT	int
)	O
fret	int
=	O
TRUE	O
;	O
else	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"opendir (%s): %s"	pointer
,	O
zdir	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
chad	long
=	O
cSwork_files	long
;	O
callocated	long
=	O
cSwork_files	long
;	O
if	O
(	O
chad	long
>	O
0	int
)	O
qsort	function
(	O
(	O
pointer	pointer
)	O
asSwork_files	pointer
,	O
chad	long
,	O
sizeof	O
(	O
struct	O
ssfilename	struct
)	O
,	O
iswork_cmp	function
)	O
;	O
while	O
(	O
(	O
qentry	pointer
=	O
readdir	function
(	O
qdir	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
char	O
bfilegrade	char
;	O
char	O
*	O
zname	pointer
;	O
struct	O
ssfilename	struct
slook	struct
;	O
zname	pointer
=	O
zbufcpy	function
(	O
qentry	pointer
->	O
d_name	array
)	O
;	O
slook	struct
.	O
zfile	pointer
=	O
zname	pointer
;	O
if	O
(	O
!	O
fswork_file	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qentry	pointer
->	O
d_name	array
,	O
&	O
bfilegrade	char
)	O
||	O
UUCONF_GRADE_CMP	O
(	O
bgrade	char
,	O
bfilegrade	char
)	O
<	O
0	int
||	O
(	O
asSwork_files	pointer
!=	O
NULL	O
&&	O
bsearch	function
(	O
(	O
pointer	pointer
)	O
&	O
slook	struct
,	O
(	O
pointer	pointer
)	O
asSwork_files	pointer
,	O
chad	long
,	O
sizeof	O
(	O
struct	O
ssfilename	struct
)	O
,	O
iswork_cmp	function
)	O
!=	O
NULL	O
)	O
)	O
ubuffree	function
(	O
zname	pointer
)	O
;	O
else	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_SPOOLDIR	O
,	O
"fsysdep_get_work_init: Found %s"	pointer
,	O
zname	pointer
)	O
;	O
if	O
(	O
cSwork_files	long
>=	O
callocated	long
)	O
{	O
callocated	long
+=	O
CWORKFILES	O
;	O
asSwork_files	pointer
=	O
(	O
(	O
struct	O
ssfilename	struct
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
asSwork_files	pointer
,	O
(	O
callocated	long
*	O
sizeof	O
(	O
struct	O
ssfilename	struct
)	O
)	O
)	O
)	O
;	O
}	O
asSwork_files	pointer
[	O
cSwork_files	long
]	O
.	O
zfile	pointer
=	O
zname	pointer
;	O
asSwork_files	pointer
[	O
cSwork_files	long
]	O
.	O
bgrade	char
=	O
bfilegrade	char
;	O
++	O
cSwork_files	long
;	O
if	O
(	O
cmax	int
!=	O
0	int
&&	O
cSwork_files	long
-	O
chad	long
>	O
cmax	int
)	O
break	O
;	O
}	O
}	O
closedir	function
(	O
qdir	pointer
)	O
;	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
if	O
(	O
cSwork_files	long
>	O
iSwork_file	long
)	O
qsort	function
(	O
(	O
pointer	pointer
)	O
(	O
asSwork_files	pointer
+	O
iSwork_file	long
)	O
,	O
cSwork_files	long
-	O
iSwork_file	long
,	O
sizeof	O
(	O
struct	O
ssfilename	struct
)	O
,	O
iswork_cmp	function
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fsysdep_get_work	function
(	O
qsys	pointer
,	O
bgrade	char
,	O
cmax	int
,	O
qcmd	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
int	O
bgrade	char
ATTRIBUTE_UNUSED	O
;	O
unsigned	O
int	O
cmax	int
ATTRIBUTE_UNUSED	O
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
{	O
char	O
*	O
zdir	pointer
;	O
if	O
(	O
qSwork_file	pointer
!=	O
NULL	O
&&	O
qSwork_file	pointer
->	O
cdid	int
>=	O
qSwork_file	pointer
->	O
clines	int
)	O
qSwork_file	pointer
=	O
NULL	O
;	O
if	O
(	O
asSwork_files	pointer
==	O
NULL	O
)	O
{	O
qcmd	pointer
->	O
bcmd	char
=	O
'H'	O
;	O
return	O
TRUE	O
;	O
}	O
zdir	pointer
=	O
NULL	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
qSwork_file	pointer
==	O
NULL	O
)	O
{	O
FILE	struct
*	O
e	pointer
;	O
struct	O
ssfile	struct
*	O
qfile	pointer
;	O
int	O
iline	int
,	O
callocated	long
;	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
char	O
*	O
zname	pointer
;	O
char	O
bfilegrade	char
;	O
do	O
{	O
if	O
(	O
iSwork_file	long
>=	O
cSwork_files	long
)	O
{	O
qcmd	pointer
->	O
bcmd	char
=	O
'H'	O
;	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
zdir	pointer
==	O
NULL	O
)	O
{	O
zdir	pointer
=	O
zswork_directory	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
if	O
(	O
zdir	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
zname	pointer
=	O
zsysdep_in_dir	function
(	O
zdir	pointer
,	O
asSwork_files	pointer
[	O
iSwork_file	long
]	O
.	O
zfile	pointer
)	O
;	O
bfilegrade	char
=	O
asSwork_files	pointer
[	O
iSwork_file	long
]	O
.	O
bgrade	char
;	O
++	O
iSwork_file	long
;	O
e	pointer
=	O
fopen	function
(	O
zname	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	pointer
,	O
zname	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
ubuffree	function
(	O
zname	pointer
)	O
;	O
}	O
}	O
while	O
(	O
e	pointer
==	O
NULL	O
)	O
;	O
qfile	pointer
=	O
(	O
struct	O
ssfile	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
ssfile	struct
)	O
)	O
;	O
callocated	long
=	O
CFILELINES	O
;	O
iline	int
=	O
0	int
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
while	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
>	O
0	int
)	O
{	O
if	O
(	O
iline	int
>=	O
callocated	long
)	O
{	O
qfile	pointer
=	O
(	O
(	O
struct	O
ssfile	struct
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
qfile	pointer
,	O
(	O
sizeof	O
(	O
struct	O
ssfile	struct
)	O
+	O
(	O
callocated	long
*	O
sizeof	O
(	O
struct	O
ssline	struct
)	O
)	O
)	O
)	O
)	O
;	O
callocated	long
+=	O
CFILELINES	O
;	O
}	O
qfile	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
=	O
zbufcpy	function
(	O
zline	pointer
)	O
;	O
qfile	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
qfile	pointer
=	O
NULL	O
;	O
qfile	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
ztemp	pointer
=	O
NULL	O
;	O
iline	int
++	O
;	O
}	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
if	O
(	O
fclose	function
(	O
e	pointer
)	O
!=	O
0	int
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fclose: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
if	O
(	O
iline	int
==	O
0	int
)	O
{	O
qfile	pointer
->	O
aslines	array
[	O
0	int
]	O
.	O
zline	pointer
=	O
zbufcpy	function
(	O
"P"	pointer
)	O
;	O
qfile	pointer
->	O
aslines	array
[	O
0	int
]	O
.	O
qfile	pointer
=	O
NULL	O
;	O
qfile	pointer
->	O
aslines	array
[	O
0	int
]	O
.	O
ztemp	pointer
=	O
NULL	O
;	O
iline	int
=	O
1	int
;	O
}	O
qfile	pointer
->	O
zfile	pointer
=	O
zname	pointer
;	O
qfile	pointer
->	O
bgrade	char
=	O
bfilegrade	char
;	O
qfile	pointer
->	O
clines	int
=	O
iline	int
;	O
qfile	pointer
->	O
cdid	int
=	O
0	int
;	O
qSwork_file	pointer
=	O
qfile	pointer
;	O
}	O
while	O
(	O
TRUE	O
)	O
{	O
int	O
iline	int
;	O
if	O
(	O
qSwork_file	pointer
->	O
cdid	int
>=	O
qSwork_file	pointer
->	O
clines	int
)	O
{	O
qSwork_file	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
iline	int
=	O
qSwork_file	pointer
->	O
cdid	int
;	O
++	O
qSwork_file	pointer
->	O
cdid	int
;	O
if	O
(	O
!	O
fparse_cmd	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
,	O
qcmd	pointer
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Bad line in command file %s"	pointer
,	O
qSwork_file	pointer
->	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
)	O
;	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
=	O
NULL	O
;	O
continue	O
;	O
}	O
qcmd	pointer
->	O
bgrade	char
=	O
qSwork_file	pointer
->	O
bgrade	char
;	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
qfile	pointer
=	O
qSwork_file	pointer
;	O
qcmd	pointer
->	O
pseq	pointer
=	O
(	O
pointer	pointer
)	O
(	O
&	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
)	O
;	O
if	O
(	O
qcmd	pointer
->	O
bcmd	char
==	O
'S'	O
||	O
qcmd	pointer
->	O
bcmd	char
==	O
'E'	O
)	O
{	O
char	O
*	O
zreal	pointer
;	O
zreal	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
if	O
(	O
zreal	pointer
==	O
NULL	O
)	O
{	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
)	O
;	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
zline	pointer
=	O
NULL	O
;	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
qSwork_file	pointer
->	O
aslines	array
[	O
iline	int
]	O
.	O
ztemp	pointer
=	O
zreal	pointer
;	O
}	O
ubuffree	function
(	O
zdir	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
}	O
}	O
boolean	int
fsysdep_did_work	function
(	O
pseq	pointer
)	O
pointer	pointer
pseq	pointer
;	O
{	O
struct	O
ssfile	struct
*	O
qfile	pointer
;	O
struct	O
ssline	struct
*	O
qline	pointer
;	O
int	O
i	int
;	O
qline	pointer
=	O
(	O
struct	O
ssline	struct
*	O
)	O
pseq	pointer
;	O
ubuffree	function
(	O
qline	pointer
->	O
zline	pointer
)	O
;	O
qline	pointer
->	O
zline	pointer
=	O
NULL	O
;	O
qfile	pointer
=	O
qline	pointer
->	O
qfile	pointer
;	O
qline	pointer
->	O
qfile	pointer
=	O
NULL	O
;	O
if	O
(	O
qline	pointer
->	O
ztemp	pointer
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
remove	function
(	O
qline	pointer
->	O
ztemp	pointer
)	O
;	O
ubuffree	function
(	O
qline	pointer
->	O
ztemp	pointer
)	O
;	O
qline	pointer
->	O
ztemp	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
qfile	pointer
->	O
cdid	int
<	O
qfile	pointer
->	O
clines	int
)	O
return	O
TRUE	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
qfile	pointer
->	O
clines	int
;	O
i	int
++	O
)	O
if	O
(	O
qfile	pointer
->	O
aslines	array
[	O
i	int
]	O
.	O
qfile	pointer
!=	O
NULL	O
)	O
return	O
TRUE	O
;	O
if	O
(	O
remove	function
(	O
qfile	pointer
->	O
zfile	pointer
)	O
!=	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"remove (%s): %s"	pointer
,	O
qfile	pointer
->	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
ubuffree	function
(	O
qfile	pointer
->	O
zfile	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qfile	pointer
)	O
;	O
if	O
(	O
qfile	pointer
==	O
qSwork_file	pointer
)	O
qSwork_file	pointer
=	O
NULL	O
;	O
return	O
TRUE	O
;	O
}	O
void	O
usysdep_get_work_free	function
(	O
qsys	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
if	O
(	O
asSwork_files	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cSwork_files	long
;	O
i	int
++	O
)	O
ubuffree	function
(	O
(	O
pointer	pointer
)	O
asSwork_files	pointer
[	O
i	int
]	O
.	O
zfile	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
asSwork_files	pointer
)	O
;	O
asSwork_files	pointer
=	O
NULL	O
;	O
cSwork_files	long
=	O
0	int
;	O
iSwork_file	long
=	O
0	int
;	O
}	O
if	O
(	O
qSwork_file	pointer
!=	O
NULL	O
)	O
{	O
int	O
i	int
;	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
zfile	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
qSwork_file	pointer
->	O
cdid	int
;	O
i	int
++	O
)	O
{	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
i	int
]	O
.	O
zline	pointer
)	O
;	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
i	int
]	O
.	O
ztemp	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
qSwork_file	pointer
->	O
cdid	int
;	O
i	int
<	O
qSwork_file	pointer
->	O
clines	int
;	O
i	int
++	O
)	O
ubuffree	function
(	O
qSwork_file	pointer
->	O
aslines	array
[	O
i	int
]	O
.	O
zline	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qSwork_file	pointer
)	O
;	O
qSwork_file	pointer
=	O
NULL	O
;	O
}	O
}	O
const	O
char	O
*	O
zsysdep_save_temp_file	function
(	O
pseq	pointer
)	O
pointer	pointer
pseq	pointer
;	O
{	O
struct	O
ssline	struct
*	O
qline	pointer
=	O
(	O
struct	O
ssline	struct
*	O
)	O
pseq	pointer
;	O
char	O
*	O
zto	pointer
,	O
*	O
zslash	pointer
;	O
size_t	long
cwant	long
;	O
static	O
char	O
*	O
zbuf	pointer
;	O
static	O
size_t	long
cbuf	long
;	O
if	O
(	O
!	O
fsysdep_file_exists	function
(	O
qline	pointer
->	O
ztemp	pointer
)	O
)	O
return	O
NULL	O
;	O
zslash	pointer
=	O
strrchr	function
(	O
qline	pointer
->	O
ztemp	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
zslash	pointer
==	O
NULL	O
)	O
zslash	pointer
=	O
qline	pointer
->	O
ztemp	pointer
;	O
else	O
++	O
zslash	pointer
;	O
zto	pointer
=	O
zbufalc	function
(	O
sizeof	O
PRESERVEDIR	pointer
+	O
sizeof	O
"/"	pointer
+	O
strlen	function
(	O
zslash	pointer
)	O
)	O
;	O
sprintf	function
(	O
zto	pointer
,	O
"%s/%s"	pointer
,	O
PRESERVEDIR	pointer
,	O
zslash	pointer
)	O
;	O
if	O
(	O
!	O
fsysdep_move_file	function
(	O
qline	pointer
->	O
ztemp	pointer
,	O
zto	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
FALSE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
ubuffree	function
(	O
zto	pointer
)	O
;	O
return	O
"Could not move file to preservation directory"	pointer
;	O
}	O
cwant	long
=	O
sizeof	O
"File saved as\n\t/"	pointer
+	O
strlen	function
(	O
zSspooldir	pointer
)	O
+	O
strlen	function
(	O
zto	pointer
)	O
;	O
if	O
(	O
cwant	long
>	O
cbuf	long
)	O
{	O
ubuffree	function
(	O
zbuf	pointer
)	O
;	O
zbuf	pointer
=	O
zbufalc	function
(	O
cwant	long
)	O
;	O
cbuf	long
=	O
cwant	long
;	O
}	O
sprintf	function
(	O
zbuf	pointer
,	O
"File saved as\n\t%s/%s"	pointer
,	O
zSspooldir	pointer
,	O
zto	pointer
)	O
;	O
ubuffree	function
(	O
zto	pointer
)	O
;	O
return	O
zbuf	pointer
;	O
}	O
char	O
*	O
zsysdep_jobid	function
(	O
qsys	pointer
,	O
pseq	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
pointer	pointer
pseq	pointer
;	O
{	O
return	O
zsfile_to_jobid	function
(	O
qsys	pointer
,	O
(	O
(	O
struct	O
ssline	struct
*	O
)	O
pseq	pointer
)	O
->	O
qfile	pointer
->	O
zfile	pointer
,	O
bsgrade	function
(	O
pseq	pointer
)	O
)	O
;	O
}	O
int	O
bsgrade	function
(	O
pseq	pointer
)	O
pointer	pointer
pseq	pointer
;	O
{	O
const	O
char	O
*	O
zfile	pointer
;	O
char	O
bgrade	char
;	O
if	O
(	O
pseq	pointer
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
zfile	pointer
=	O
(	O
(	O
struct	O
ssline	struct
*	O
)	O
pseq	pointer
)	O
->	O
qfile	pointer
->	O
zfile	pointer
;	O
bgrade	char
=	O
*	O
(	O
strrchr	function
(	O
zfile	pointer
,	O
'/'	O
)	O
+	O
3	int
)	O
;	O
return	O
bgrade	char
;	O
}	O
