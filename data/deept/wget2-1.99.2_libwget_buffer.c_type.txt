int	O
wget_buffer_init	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
char	O
*	O
data	pointer
,	O
size_t	long
size	pointer
)	O
{	O
if	O
(	O
data	pointer
&&	O
likely	O
(	O
size	pointer
)	O
)	O
{	O
buf	pointer
->	O
size	pointer
=	O
size	pointer
-	O
1	int
;	O
buf	pointer
->	O
data	pointer
=	O
data	pointer
;	O
*	O
buf	pointer
->	O
data	pointer
=	O
0	int
;	O
buf	pointer
->	O
release_data	bool
=	O
0	int
;	O
}	O
else	O
{	O
if	O
(	O
!	O
size	pointer
)	O
size	pointer
=	O
127	int
;	O
buf	pointer
->	O
size	pointer
=	O
size	pointer
;	O
if	O
(	O
!	O
(	O
buf	pointer
->	O
data	pointer
=	O
wget_malloc	function
(	O
size	pointer
+	O
1	int
)	O
)	O
)	O
{	O
buf	pointer
->	O
error	bool
=	O
1	int
;	O
return	O
WGET_E_MEMORY	int
;	O
}	O
*	O
buf	pointer
->	O
data	pointer
=	O
0	int
;	O
buf	pointer
->	O
release_data	bool
=	O
1	int
;	O
}	O
buf	pointer
->	O
error	bool
=	O
0	int
;	O
buf	pointer
->	O
release_buf	bool
=	O
0	int
;	O
buf	pointer
->	O
length	long
=	O
0	int
;	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
wget_buffer	struct
*	O
wget_buffer_alloc	function
(	O
size_t	long
size	pointer
)	O
{	O
wget_buffer	struct
*	O
buf	pointer
;	O
if	O
(	O
!	O
(	O
buf	pointer
=	O
wget_malloc	function
(	O
sizeof	O
(	O
wget_buffer	struct
)	O
)	O
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
wget_buffer_init	function
(	O
buf	pointer
,	O
NULL	O
,	O
size	pointer
)	O
<	O
0	int
)	O
{	O
xfree	O
(	O
buf	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
buf	pointer
->	O
release_buf	bool
=	O
1	int
;	O
return	O
buf	pointer
;	O
}	O
static	O
int	O
_buffer_realloc	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
size_t	long
size	pointer
)	O
{	O
char	O
*	O
old_data	pointer
=	O
buf	pointer
->	O
data	pointer
;	O
if	O
(	O
buf	pointer
->	O
release_data	bool
)	O
buf	pointer
->	O
data	pointer
=	O
wget_realloc	function
(	O
buf	pointer
->	O
data	pointer
,	O
size	pointer
+	O
1	int
)	O
;	O
else	O
buf	pointer
->	O
data	pointer
=	O
wget_malloc	function
(	O
size	pointer
+	O
1	int
)	O
;	O
if	O
(	O
!	O
buf	pointer
->	O
data	pointer
)	O
{	O
buf	pointer
->	O
data	pointer
=	O
old_data	pointer
;	O
buf	pointer
->	O
error	bool
=	O
1	int
;	O
return	O
WGET_E_MEMORY	int
;	O
}	O
if	O
(	O
!	O
buf	pointer
->	O
release_data	bool
)	O
{	O
if	O
(	O
likely	O
(	O
old_data	pointer
)	O
&&	O
buf	pointer
->	O
length	long
)	O
memcpy	function
(	O
buf	pointer
->	O
data	pointer
,	O
old_data	pointer
,	O
buf	pointer
->	O
length	long
+	O
1	int
)	O
;	O
else	O
*	O
buf	pointer
->	O
data	pointer
=	O
0	int
;	O
buf	pointer
->	O
release_data	bool
=	O
1	int
;	O
}	O
buf	pointer
->	O
size	pointer
=	O
size	pointer
;	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
int	O
wget_buffer_ensure_capacity	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
size_t	long
size	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
)	O
)	O
{	O
if	O
(	O
buf	pointer
->	O
size	pointer
<	O
size	pointer
)	O
return	O
_buffer_realloc	function
(	O
buf	pointer
,	O
size	pointer
)	O
;	O
}	O
return	O
WGET_E_SUCCESS	int
;	O
}	O
void	O
wget_buffer_deinit	function
(	O
wget_buffer	struct
*	O
buf	pointer
)	O
{	O
if	O
(	O
buf	pointer
->	O
release_data	bool
)	O
{	O
xfree	O
(	O
buf	pointer
->	O
data	pointer
)	O
;	O
buf	pointer
->	O
release_data	bool
=	O
0	int
;	O
}	O
if	O
(	O
buf	pointer
->	O
release_buf	bool
)	O
wget_free	pointer
(	O
buf	pointer
)	O
;	O
}	O
void	O
wget_buffer_free	function
(	O
wget_buffer	struct
*	O
*	O
buf	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
&&	O
*	O
buf	pointer
)	O
)	O
{	O
wget_buffer_deinit	function
(	O
*	O
buf	pointer
)	O
;	O
*	O
buf	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
wget_buffer_free_data	function
(	O
wget_buffer	struct
*	O
buf	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
)	O
)	O
{	O
if	O
(	O
buf	pointer
->	O
release_data	bool
)	O
{	O
xfree	O
(	O
buf	pointer
->	O
data	pointer
)	O
;	O
buf	pointer
->	O
release_data	bool
=	O
0	int
;	O
buf	pointer
->	O
size	pointer
=	O
0	int
;	O
}	O
}	O
}	O
void	O
wget_buffer_reset	function
(	O
wget_buffer	struct
*	O
buf	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
)	O
)	O
{	O
buf	pointer
->	O
length	long
=	O
0	int
;	O
*	O
buf	pointer
->	O
data	pointer
=	O
0	int
;	O
}	O
}	O
size_t	long
wget_buffer_memcpy	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	pointer
)	O
)	O
return	O
0	int
;	O
buf	pointer
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memcat	function
(	O
buf	pointer
,	O
data	pointer
,	O
length	long
)	O
;	O
}	O
size_t	long
wget_buffer_memcat	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	pointer
)	O
)	O
return	O
0	int
;	O
if	O
(	O
likely	O
(	O
length	long
)	O
)	O
{	O
if	O
(	O
buf	pointer
->	O
size	pointer
<	O
buf	pointer
->	O
length	long
+	O
length	long
)	O
if	O
(	O
_buffer_realloc	function
(	O
buf	pointer
,	O
buf	pointer
->	O
size	pointer
*	O
2	int
+	O
length	long
)	O
!=	O
WGET_E_SUCCESS	int
)	O
return	O
buf	pointer
->	O
length	long
;	O
if	O
(	O
likely	O
(	O
data	pointer
)	O
)	O
memcpy	function
(	O
buf	pointer
->	O
data	pointer
+	O
buf	pointer
->	O
length	long
,	O
data	pointer
,	O
length	long
)	O
;	O
else	O
memset	function
(	O
buf	pointer
->	O
data	pointer
+	O
buf	pointer
->	O
length	long
,	O
0	int
,	O
length	long
)	O
;	O
buf	pointer
->	O
length	long
+=	O
length	long
;	O
}	O
buf	pointer
->	O
data	pointer
[	O
buf	pointer
->	O
length	long
]	O
=	O
0	int
;	O
return	O
buf	pointer
->	O
length	long
;	O
}	O
size_t	long
wget_buffer_strcpy	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
)	O
)	O
buf	pointer
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memcat	function
(	O
buf	pointer
,	O
s	pointer
,	O
likely	O
(	O
s	pointer
)	O
?	O
strlen	function
(	O
s	pointer
)	O
:	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_strcat	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
return	O
wget_buffer_memcat	function
(	O
buf	pointer
,	O
s	pointer
,	O
likely	O
(	O
s	pointer
)	O
?	O
strlen	function
(	O
s	pointer
)	O
:	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_bufcpy	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
wget_buffer	struct
*	O
src	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
src	pointer
)	O
)	O
return	O
wget_buffer_memcpy	function
(	O
buf	pointer
,	O
src	pointer
->	O
data	pointer
,	O
src	pointer
->	O
length	long
)	O
;	O
else	O
return	O
wget_buffer_memcpy	function
(	O
buf	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_bufcat	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
wget_buffer	struct
*	O
src	pointer
)	O
{	O
if	O
(	O
likely	O
(	O
src	pointer
)	O
)	O
return	O
wget_buffer_memcat	function
(	O
buf	pointer
,	O
src	pointer
->	O
data	pointer
,	O
src	pointer
->	O
length	long
)	O
;	O
else	O
return	O
wget_buffer_memcat	function
(	O
buf	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
size_t	long
wget_buffer_memset	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
char	O
c	char
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
likely	O
(	O
buf	pointer
)	O
)	O
buf	pointer
->	O
length	long
=	O
0	int
;	O
return	O
wget_buffer_memset_append	function
(	O
buf	pointer
,	O
c	char
,	O
length	long
)	O
;	O
}	O
size_t	long
wget_buffer_memset_append	function
(	O
wget_buffer	struct
*	O
buf	pointer
,	O
char	O
c	char
,	O
size_t	long
length	long
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	pointer
)	O
)	O
return	O
0	int
;	O
if	O
(	O
likely	O
(	O
length	long
)	O
)	O
{	O
if	O
(	O
unlikely	O
(	O
buf	pointer
->	O
size	pointer
<	O
buf	pointer
->	O
length	long
+	O
length	long
)	O
)	O
if	O
(	O
_buffer_realloc	function
(	O
buf	pointer
,	O
buf	pointer
->	O
size	pointer
*	O
2	int
+	O
length	long
)	O
!=	O
WGET_E_SUCCESS	int
)	O
return	O
buf	pointer
->	O
length	long
;	O
memset	function
(	O
buf	pointer
->	O
data	pointer
+	O
buf	pointer
->	O
length	long
,	O
c	char
,	O
length	long
)	O
;	O
buf	pointer
->	O
length	long
+=	O
length	long
;	O
}	O
buf	pointer
->	O
data	pointer
[	O
buf	pointer
->	O
length	long
]	O
=	O
0	int
;	O
return	O
buf	pointer
->	O
length	long
;	O
}	O
char	O
*	O
wget_buffer_trim	function
(	O
wget_buffer	struct
*	O
buf	pointer
)	O
{	O
if	O
(	O
unlikely	O
(	O
!	O
buf	pointer
)	O
)	O
return	O
NULL	O
;	O
if	O
(	O
buf	pointer
->	O
length	long
)	O
{	O
char	O
*	O
start	int
=	O
buf	pointer
->	O
data	pointer
;	O
char	O
*	O
end	pointer
=	O
start	int
+	O
buf	pointer
->	O
length	long
-	O
1	int
;	O
if	O
(	O
isspace	function
(	O
*	O
end	pointer
)	O
)	O
{	O
for	O
(	O
;	O
isspace	function
(	O
*	O
end	pointer
)	O
&&	O
end	pointer
>=	O
start	int
;	O
end	pointer
--	O
)	O
;	O
end	pointer
[	O
1	int
]	O
=	O
0	int
;	O
buf	pointer
->	O
length	long
=	O
(	O
size_t	long
)	O
(	O
end	pointer
-	O
start	int
+	O
1	int
)	O
;	O
}	O
if	O
(	O
isspace	function
(	O
*	O
start	int
)	O
)	O
{	O
for	O
(	O
;	O
isspace	function
(	O
*	O
start	int
)	O
&&	O
end	pointer
>=	O
start	int
;	O
start	int
++	O
)	O
;	O
buf	pointer
->	O
length	long
=	O
(	O
size_t	long
)	O
(	O
end	pointer
-	O
start	int
+	O
1	int
)	O
;	O
memmove	function
(	O
buf	pointer
->	O
data	pointer
,	O
start	int
,	O
buf	pointer
->	O
length	long
+	O
1	int
)	O
;	O
}	O
}	O
return	O
buf	pointer
->	O
data	pointer
;	O
}	O
