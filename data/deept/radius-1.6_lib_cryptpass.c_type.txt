void	O
grad_encrypt_text	function
(	O
u_char	char
*	O
*	O
encr_text	pointer
,	O
size_t	long
*	O
encr_size	pointer
,	O
u_char	char
*	O
password	pointer
,	O
u_char	char
*	O
authenticator	array
,	O
u_char	char
*	O
secret	pointer
,	O
u_char	char
*	O
salt	pointer
,	O
size_t	long
saltlen	long
)	O
{	O
int	O
passlen	int
;	O
int	O
secretlen	int
;	O
int	O
nchunks	int
;	O
int	O
buflen	int
;	O
u_char	char
*	O
passbuf	pointer
;	O
int	O
md5len	int
;	O
u_char	char
*	O
md5buf	pointer
;	O
u_char	char
digest	array
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
u_char	char
*	O
cp	pointer
;	O
int	O
i	int
,	O
j	int
;	O
passlen	int
=	O
strlen	function
(	O
password	pointer
)	O
;	O
nchunks	int
=	O
(	O
passlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
-	O
1	int
)	O
/	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
buflen	int
=	O
nchunks	int
*	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
*	O
encr_text	pointer
=	O
grad_emalloc	function
(	O
buflen	int
)	O
;	O
*	O
encr_size	pointer
=	O
buflen	int
;	O
passbuf	pointer
=	O
*	O
encr_text	pointer
;	O
memset	function
(	O
passbuf	pointer
,	O
0	int
,	O
buflen	int
)	O
;	O
memcpy	function
(	O
passbuf	pointer
,	O
password	pointer
,	O
passlen	int
)	O
;	O
secretlen	int
=	O
strlen	function
(	O
secret	pointer
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	pointer
=	O
grad_emalloc	function
(	O
md5len	int
+	O
saltlen	long
)	O
;	O
memcpy	function
(	O
md5buf	pointer
,	O
secret	pointer
,	O
secretlen	int
)	O
;	O
cp	pointer
=	O
authenticator	array
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
buflen	int
;	O
)	O
{	O
memcpy	function
(	O
md5buf	pointer
+	O
secretlen	int
,	O
cp	pointer
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
if	O
(	O
i	int
==	O
0	int
&&	O
saltlen	long
)	O
{	O
memcpy	function
(	O
md5buf	pointer
+	O
md5len	int
,	O
salt	pointer
,	O
saltlen	long
)	O
;	O
grad_md5_calc	function
(	O
digest	array
,	O
md5buf	pointer
,	O
md5len	int
+	O
saltlen	long
)	O
;	O
}	O
else	O
grad_md5_calc	function
(	O
digest	array
,	O
md5buf	pointer
,	O
md5len	int
)	O
;	O
cp	pointer
=	O
passbuf	pointer
+	O
i	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
passbuf	pointer
[	O
i	int
]	O
^=	O
digest	array
[	O
j	int
]	O
;	O
}	O
grad_free	function
(	O
md5buf	pointer
)	O
;	O
}	O
void	O
grad_decrypt_text	function
(	O
u_char	char
*	O
password	pointer
,	O
u_char	char
*	O
encr_text	pointer
,	O
size_t	long
encr_size	pointer
,	O
u_char	char
*	O
authenticator	array
,	O
u_char	char
*	O
secret	pointer
,	O
u_char	char
*	O
salt	pointer
,	O
size_t	long
saltsize	long
)	O
{	O
int	O
md5len	int
;	O
u_char	char
*	O
md5buf	pointer
;	O
u_char	char
digest	array
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
u_char	char
*	O
cp	pointer
;	O
int	O
secretlen	int
;	O
int	O
i	int
,	O
j	int
;	O
memcpy	function
(	O
password	pointer
,	O
encr_text	pointer
,	O
encr_size	pointer
)	O
;	O
secretlen	int
=	O
strlen	function
(	O
secret	pointer
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	pointer
=	O
grad_emalloc	function
(	O
md5len	int
)	O
;	O
memcpy	function
(	O
md5buf	pointer
,	O
secret	pointer
,	O
secretlen	int
)	O
;	O
cp	pointer
=	O
authenticator	array
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
encr_size	pointer
;	O
)	O
{	O
memcpy	function
(	O
md5buf	pointer
+	O
secretlen	int
,	O
cp	pointer
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
if	O
(	O
i	int
==	O
0	int
&&	O
saltsize	long
)	O
{	O
memcpy	function
(	O
md5buf	pointer
+	O
md5len	int
,	O
salt	pointer
,	O
saltsize	long
)	O
;	O
grad_md5_calc	function
(	O
digest	array
,	O
md5buf	pointer
,	O
md5len	int
+	O
saltsize	long
)	O
;	O
}	O
else	O
grad_md5_calc	function
(	O
digest	array
,	O
md5buf	pointer
,	O
md5len	int
)	O
;	O
cp	pointer
=	O
encr_text	pointer
+	O
i	int
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
password	pointer
[	O
i	int
]	O
^=	O
digest	array
[	O
j	int
]	O
;	O
}	O
password	pointer
[	O
encr_size	pointer
]	O
=	O
0	int
;	O
grad_free	function
(	O
md5buf	pointer
)	O
;	O
}	O
void	O
grad_encrypt_password	function
(	O
grad_avp_t	struct
*	O
pair	pointer
,	O
char	O
*	O
password	pointer
,	O
char	O
*	O
authenticator	array
,	O
char	O
*	O
secret	pointer
)	O
{	O
u_char	char
*	O
encr_text	pointer
;	O
size_t	long
encr_size	pointer
;	O
grad_encrypt_text	function
(	O
&	O
encr_text	pointer
,	O
&	O
encr_size	pointer
,	O
password	pointer
,	O
authenticator	array
,	O
secret	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
pair	pointer
->	O
avp_strvalue	O
=	O
encr_text	pointer
;	O
pair	pointer
->	O
avp_strlength	O
=	O
encr_size	pointer
;	O
}	O
void	O
grad_decrypt_password	function
(	O
char	O
*	O
password	pointer
,	O
grad_avp_t	struct
*	O
pair	pointer
,	O
char	O
*	O
authenticator	array
,	O
char	O
*	O
secret	pointer
)	O
{	O
grad_decrypt_text	function
(	O
password	pointer
,	O
pair	pointer
->	O
avp_strvalue	O
,	O
pair	pointer
->	O
avp_strlength	O
,	O
authenticator	array
,	O
secret	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
void	O
grad_decrypt_password_broken	function
(	O
char	O
*	O
password	pointer
,	O
grad_avp_t	struct
*	O
pair	pointer
,	O
char	O
*	O
authenticator	array
,	O
char	O
*	O
secret	pointer
)	O
{	O
int	O
md5len	int
;	O
char	O
*	O
md5buf	pointer
;	O
char	O
digest	array
[	O
GRAD_AUTHENTICATOR_LENGTH	int
]	O
;	O
int	O
secretlen	int
;	O
int	O
passlen	int
;	O
int	O
i	int
,	O
j	int
;	O
memcpy	function
(	O
password	pointer
,	O
pair	pointer
->	O
avp_strvalue	O
,	O
pair	pointer
->	O
avp_strlength	O
)	O
;	O
passlen	int
=	O
pair	pointer
->	O
avp_strlength	O
;	O
secretlen	int
=	O
strlen	function
(	O
secret	pointer
)	O
;	O
md5len	int
=	O
secretlen	int
+	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
md5buf	pointer
=	O
grad_emalloc	function
(	O
md5len	int
)	O
;	O
memcpy	function
(	O
md5buf	pointer
,	O
secret	pointer
,	O
secretlen	int
)	O
;	O
memcpy	function
(	O
md5buf	pointer
+	O
secretlen	int
,	O
authenticator	array
,	O
GRAD_AUTHENTICATOR_LENGTH	int
)	O
;	O
grad_md5_calc	function
(	O
digest	array
,	O
md5buf	pointer
,	O
md5len	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
passlen	int
;	O
)	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
GRAD_AUTHENTICATOR_LENGTH	int
;	O
j	int
++	O
,	O
i	int
++	O
)	O
password	pointer
[	O
i	int
]	O
^=	O
digest	array
[	O
j	int
]	O
;	O
}	O
grad_free	function
(	O
md5buf	pointer
)	O
;	O
}	O
void	O
grad_encrypt_tunnel_password	function
(	O
grad_avp_t	struct
*	O
pair	pointer
,	O
u_char	char
tag	char
,	O
char	O
*	O
password	pointer
,	O
char	O
*	O
authenticator	array
,	O
char	O
*	O
secret	pointer
)	O
{	O
u_char	char
*	O
encr_text	pointer
;	O
size_t	long
encr_size	pointer
;	O
char	O
*	O
plaintext	pointer
;	O
size_t	long
length	short
=	O
strlen	function
(	O
password	pointer
)	O
;	O
unsigned	O
short	O
salt	pointer
=	O
htons	function
(	O
(	O
(	O
(	O
long	O
)	O
pair	pointer
^	O
*	O
(	O
long	O
*	O
)	O
authenticator	array
)	O
&	O
0xffff	int
)	O
|	O
0x8000	int
)	O
;	O
plaintext	pointer
=	O
grad_emalloc	function
(	O
length	short
+	O
2	int
)	O
;	O
plaintext	pointer
[	O
0	int
]	O
=	O
length	short
;	O
memcpy	function
(	O
&	O
plaintext	pointer
[	O
1	int
]	O
,	O
password	pointer
,	O
length	short
+	O
1	int
)	O
;	O
grad_encrypt_text	function
(	O
&	O
encr_text	pointer
,	O
&	O
encr_size	pointer
,	O
plaintext	pointer
,	O
authenticator	array
,	O
secret	pointer
,	O
(	O
u_char	char
*	O
)	O
&	O
salt	pointer
,	O
2	int
)	O
;	O
grad_free	function
(	O
plaintext	pointer
)	O
;	O
pair	pointer
->	O
avp_strlength	O
=	O
3	int
+	O
encr_size	pointer
;	O
pair	pointer
->	O
avp_strvalue	O
=	O
grad_emalloc	function
(	O
pair	pointer
->	O
avp_strlength	O
)	O
;	O
pair	pointer
->	O
avp_strvalue	O
[	O
0	int
]	O
=	O
tag	char
;	O
memcpy	function
(	O
&	O
pair	pointer
->	O
avp_strvalue	O
[	O
1	int
]	O
,	O
&	O
salt	pointer
,	O
2	int
)	O
;	O
memcpy	function
(	O
&	O
pair	pointer
->	O
avp_strvalue	O
[	O
3	int
]	O
,	O
encr_text	pointer
,	O
encr_size	pointer
)	O
;	O
grad_free	function
(	O
encr_text	pointer
)	O
;	O
}	O
void	O
grad_decrypt_tunnel_password	function
(	O
char	O
*	O
password	pointer
,	O
u_char	char
*	O
tag	char
,	O
grad_avp_t	struct
*	O
pair	pointer
,	O
char	O
*	O
authenticator	array
,	O
char	O
*	O
secret	pointer
)	O
{	O
size_t	long
length	short
;	O
grad_decrypt_text	function
(	O
password	pointer
,	O
pair	pointer
->	O
avp_strvalue	O
+	O
3	int
,	O
pair	pointer
->	O
avp_strlength	O
-	O
3	int
,	O
authenticator	array
,	O
secret	pointer
,	O
&	O
pair	pointer
->	O
avp_strvalue	O
[	O
1	int
]	O
,	O
2	int
)	O
;	O
length	short
=	O
*	O
(	O
u_char	char
*	O
)	O
password	pointer
;	O
memmove	function
(	O
password	pointer
,	O
password	pointer
+	O
1	int
,	O
length	short
)	O
;	O
password	pointer
[	O
length	short
]	O
=	O
0	int
;	O
*	O
tag	char
=	O
pair	pointer
->	O
avp_strvalue	O
[	O
0	int
]	O
;	O
}	O
