static	O
int	O
print_datum	function
(	O
datum	struct
const	O
*	O
dat	pointer
,	O
unsigned	O
char	O
*	O
*	O
bufptr	pointer
,	O
size_t	long
*	O
bufsize	pointer
,	O
FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
rc	int
;	O
size_t	long
len	long
;	O
unsigned	O
char	O
*	O
p	pointer
;	O
fprintf	function
(	O
fp	pointer
,	O
"#:len=%lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
dat	pointer
->	O
dsize	int
)	O
;	O
rc	int
=	O
_gdbm_base64_encode	function
(	O
(	O
unsigned	O
char	O
*	O
)	O
dat	pointer
->	O
dptr	pointer
,	O
dat	pointer
->	O
dsize	int
,	O
bufptr	pointer
,	O
bufsize	pointer
,	O
&	O
len	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
p	pointer
=	O
*	O
bufptr	pointer
;	O
while	O
(	O
len	long
)	O
{	O
size_t	long
n	int
=	O
len	long
;	O
if	O
(	O
n	int
>	O
_GDBM_MAX_DUMP_LINE_LEN	int
)	O
n	int
=	O
_GDBM_MAX_DUMP_LINE_LEN	int
;	O
if	O
(	O
fwrite	function
(	O
p	pointer
,	O
n	int
,	O
1	int
,	O
fp	pointer
)	O
!=	O
1	int
)	O
return	O
GDBM_FILE_WRITE_ERROR	int
;	O
fputc	function
(	O
'\n'	O
,	O
fp	pointer
)	O
;	O
len	long
-=	O
n	int
;	O
p	pointer
+=	O
n	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
_gdbm_dump_ascii	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
FILE	struct
*	O
fp	pointer
)	O
{	O
time_t	long
t	long
;	O
int	O
fd	int
;	O
struct	O
stat	struct
st	struct
;	O
struct	O
passwd	struct
*	O
pw	pointer
;	O
struct	O
group	struct
*	O
gr	pointer
;	O
datum	struct
key	struct
;	O
size_t	long
count	int
=	O
0	int
;	O
unsigned	O
char	O
*	O
buffer	pointer
=	O
NULL	O
;	O
size_t	long
bufsize	pointer
=	O
0	int
;	O
int	O
rc	int
=	O
0	int
;	O
fd	int
=	O
gdbm_fdesc	function
(	O
dbf	pointer
)	O
;	O
if	O
(	O
fstat	function
(	O
fd	int
,	O
&	O
st	struct
)	O
)	O
return	O
GDBM_FILE_STAT_ERROR	int
;	O
time	function
(	O
&	O
t	long
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"# GDBM dump file created by %s on %s"	pointer
,	O
gdbm_version	pointer
,	O
ctime	function
(	O
&	O
t	long
)	O
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"#:version=1.0\n"	pointer
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"#:file=%s\n"	pointer
,	O
dbf	pointer
->	O
name	pointer
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"#:uid=%lu,"	pointer
,	O
(	O
unsigned	O
long	O
)	O
st	struct
.	O
st_uid	int
)	O
;	O
pw	pointer
=	O
getpwuid	function
(	O
st	struct
.	O
st_uid	int
)	O
;	O
if	O
(	O
pw	pointer
)	O
fprintf	function
(	O
fp	pointer
,	O
"user=%s,"	pointer
,	O
pw	pointer
->	O
pw_name	pointer
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"gid=%lu,"	pointer
,	O
(	O
unsigned	O
long	O
)	O
st	struct
.	O
st_gid	int
)	O
;	O
gr	pointer
=	O
getgrgid	function
(	O
st	struct
.	O
st_gid	int
)	O
;	O
if	O
(	O
gr	pointer
)	O
fprintf	function
(	O
fp	pointer
,	O
"group=%s,"	pointer
,	O
gr	pointer
->	O
gr_name	pointer
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"mode=%03o\n"	pointer
,	O
st	struct
.	O
st_mode	int
&	O
0777	int
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"# End of header\n"	pointer
)	O
;	O
key	struct
=	O
gdbm_firstkey	function
(	O
dbf	pointer
)	O
;	O
while	O
(	O
key	struct
.	O
dptr	pointer
)	O
{	O
datum	struct
nextkey	struct
;	O
datum	struct
data	pointer
=	O
gdbm_fetch	function
(	O
dbf	pointer
,	O
key	struct
)	O
;	O
if	O
(	O
data	pointer
.	O
dptr	pointer
)	O
{	O
if	O
(	O
(	O
rc	int
=	O
print_datum	function
(	O
&	O
key	struct
,	O
&	O
buffer	pointer
,	O
&	O
bufsize	pointer
,	O
fp	pointer
)	O
)	O
||	O
(	O
rc	int
=	O
print_datum	function
(	O
&	O
data	pointer
,	O
&	O
buffer	pointer
,	O
&	O
bufsize	pointer
,	O
fp	pointer
)	O
)	O
)	O
{	O
free	function
(	O
key	struct
.	O
dptr	pointer
)	O
;	O
free	function
(	O
data	pointer
.	O
dptr	pointer
)	O
;	O
GDBM_SET_ERRNO	O
(	O
dbf	pointer
,	O
rc	int
,	O
FALSE	int
)	O
;	O
break	O
;	O
}	O
}	O
else	O
break	O
;	O
nextkey	struct
=	O
gdbm_nextkey	function
(	O
dbf	pointer
,	O
key	struct
)	O
;	O
free	function
(	O
key	struct
.	O
dptr	pointer
)	O
;	O
free	function
(	O
data	pointer
.	O
dptr	pointer
)	O
;	O
key	struct
=	O
nextkey	struct
;	O
count	int
++	O
;	O
}	O
fprintf	function
(	O
fp	pointer
,	O
"#:count=%lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
count	int
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"# End of data\n"	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
rc	int
=	O
gdbm_last_errno	function
(	O
dbf	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
GDBM_ITEM_NOT_FOUND	int
)	O
{	O
gdbm_clear_error	function
(	O
dbf	pointer
)	O
;	O
gdbm_errno	O
=	O
GDBM_NO_ERROR	int
;	O
rc	int
=	O
0	int
;	O
}	O
}	O
free	function
(	O
buffer	pointer
)	O
;	O
return	O
rc	int
?	O
-	O
1	int
:	O
0	int
;	O
}	O
int	O
gdbm_dump_to_file	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
FILE	struct
*	O
fp	pointer
,	O
int	O
format	int
)	O
{	O
int	O
rc	int
;	O
GDBM_ASSERT_CONSISTENCY	O
(	O
dbf	pointer
,	O
-	O
1	int
)	O
;	O
switch	O
(	O
format	int
)	O
{	O
case	O
GDBM_DUMP_FMT_BINARY	int
:	O
rc	int
=	O
gdbm_export_to_file	function
(	O
dbf	pointer
,	O
fp	pointer
)	O
==	O
-	O
1	int
;	O
break	O
;	O
case	O
GDBM_DUMP_FMT_ASCII	int
:	O
rc	int
=	O
_gdbm_dump_ascii	function
(	O
dbf	pointer
,	O
fp	pointer
)	O
;	O
break	O
;	O
default	O
:	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_BAD_OPEN_FLAGS	int
,	O
FALSE	int
)	O
;	O
return	O
EINVAL	int
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
ferror	function
(	O
fp	pointer
)	O
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_WRITE_ERROR	int
,	O
FALSE	int
)	O
;	O
rc	int
=	O
-	O
1	int
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
gdbm_dump	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
int	O
fmt	pointer
,	O
int	O
open_flags	int
,	O
int	O
mode	int
)	O
{	O
int	O
nfd	int
,	O
rc	int
;	O
FILE	struct
*	O
fp	pointer
;	O
GDBM_ASSERT_CONSISTENCY	O
(	O
dbf	pointer
,	O
-	O
1	int
)	O
;	O
switch	O
(	O
open_flags	int
)	O
{	O
case	O
GDBM_WRCREAT	int
:	O
nfd	int
=	O
open	function
(	O
filename	pointer
,	O
O_WRONLY	int
|	O
O_CREAT	int
|	O
O_EXCL	int
,	O
mode	int
)	O
;	O
if	O
(	O
nfd	int
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
break	O
;	O
case	O
GDBM_NEWDB	int
:	O
nfd	int
=	O
open	function
(	O
filename	pointer
,	O
O_WRONLY	int
|	O
O_CREAT	int
|	O
O_TRUNC	int
,	O
mode	int
)	O
;	O
if	O
(	O
nfd	int
==	O
-	O
1	int
)	O
{	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
break	O
;	O
default	O
:	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_BAD_OPEN_FLAGS	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
fp	pointer
=	O
fdopen	function
(	O
nfd	int
,	O
"w"	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
{	O
close	function
(	O
nfd	int
)	O
;	O
GDBM_SET_ERRNO	O
(	O
NULL	O
,	O
GDBM_FILE_OPEN_ERROR	int
,	O
FALSE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
gdbm_dump_to_file	function
(	O
dbf	pointer
,	O
fp	pointer
,	O
fmt	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
