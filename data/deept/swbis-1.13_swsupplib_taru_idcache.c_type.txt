char	O
*	O
xstrdup	function
(	O
char	O
*	O
)	O
;	O
struct	O
userid	struct
{	O
union	O
{	O
uid_t	int
u	int
;	O
gid_t	int
g	int
;	O
}	O
id	union
;	O
char	O
*	O
name	pointer
;	O
struct	O
userid	struct
*	O
next	pointer
;	O
}	O
;	O
static	O
struct	O
userid	struct
*	O
user_alist	pointer
;	O
static	O
struct	O
userid	struct
*	O
nouser_alist	pointer
;	O
char	O
*	O
tar_idcache_getuser	function
(	O
uid_t	int
uid	int
)	O
{	O
register	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
passwd	struct
*	O
pwent	pointer
;	O
char	O
usernum_string	array
[	O
20	int
]	O
;	O
for	O
(	O
tail	pointer
=	O
user_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
tail	pointer
->	O
id	union
.	O
u	int
==	O
uid	int
)	O
return	O
tail	pointer
->	O
name	pointer
;	O
pwent	pointer
=	O
getpwuid	function
(	O
uid	int
)	O
;	O
tail	pointer
=	O
(	O
struct	O
userid	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
userid	struct
)	O
)	O
;	O
tail	pointer
->	O
id	union
.	O
u	int
=	O
uid	int
;	O
if	O
(	O
pwent	pointer
==	O
0	int
)	O
{	O
snprintf	function
(	O
usernum_string	array
,	O
sizeof	O
(	O
usernum_string	array
)	O
,	O
"%u"	pointer
,	O
(	O
unsigned	O
)	O
uid	int
)	O
;	O
usernum_string	array
[	O
sizeof	O
(	O
usernum_string	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
usernum_string	array
)	O
;	O
}	O
else	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
pwent	pointer
->	O
pw_name	pointer
)	O
;	O
tail	pointer
->	O
next	pointer
=	O
user_alist	pointer
;	O
user_alist	pointer
=	O
tail	pointer
;	O
return	O
tail	pointer
->	O
name	pointer
;	O
}	O
uid_t	int
*	O
tar_idcache_getuidbyname	function
(	O
char	O
*	O
user	pointer
)	O
{	O
register	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
passwd	struct
*	O
pwent	pointer
;	O
for	O
(	O
tail	pointer
=	O
user_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	pointer
==	O
*	O
user	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	pointer
,	O
user	pointer
)	O
)	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
u	int
;	O
for	O
(	O
tail	pointer
=	O
nouser_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	pointer
==	O
*	O
user	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	pointer
,	O
user	pointer
)	O
)	O
return	O
0	int
;	O
pwent	pointer
=	O
getpwnam	function
(	O
user	pointer
)	O
;	O
tail	pointer
=	O
(	O
struct	O
userid	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
userid	struct
)	O
)	O
;	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
user	pointer
)	O
;	O
if	O
(	O
pwent	pointer
)	O
{	O
tail	pointer
->	O
id	union
.	O
u	int
=	O
pwent	pointer
->	O
pw_uid	int
;	O
tail	pointer
->	O
next	pointer
=	O
user_alist	pointer
;	O
user_alist	pointer
=	O
tail	pointer
;	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
u	int
;	O
}	O
tail	pointer
->	O
next	pointer
=	O
nouser_alist	pointer
;	O
nouser_alist	pointer
=	O
tail	pointer
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
userid	struct
*	O
group_alist	pointer
;	O
static	O
struct	O
userid	struct
*	O
nogroup_alist	pointer
;	O
char	O
*	O
tar_idcache_getgroup	function
(	O
gid_t	int
gid	int
)	O
{	O
register	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
group	struct
*	O
grent	pointer
;	O
char	O
groupnum_string	array
[	O
20	int
]	O
;	O
for	O
(	O
tail	pointer
=	O
group_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
tail	pointer
->	O
id	union
.	O
g	int
==	O
gid	int
)	O
return	O
tail	pointer
->	O
name	pointer
;	O
grent	pointer
=	O
getgrgid	function
(	O
gid	int
)	O
;	O
tail	pointer
=	O
(	O
struct	O
userid	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
userid	struct
)	O
)	O
;	O
tail	pointer
->	O
id	union
.	O
g	int
=	O
gid	int
;	O
if	O
(	O
grent	pointer
==	O
0	int
)	O
{	O
snprintf	function
(	O
groupnum_string	array
,	O
sizeof	O
(	O
groupnum_string	array
)	O
,	O
"%u"	pointer
,	O
(	O
unsigned	O
int	O
)	O
gid	int
)	O
;	O
groupnum_string	array
[	O
sizeof	O
(	O
groupnum_string	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
groupnum_string	array
)	O
;	O
}	O
else	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
grent	pointer
->	O
gr_name	pointer
)	O
;	O
tail	pointer
->	O
next	pointer
=	O
group_alist	pointer
;	O
group_alist	pointer
=	O
tail	pointer
;	O
return	O
tail	pointer
->	O
name	pointer
;	O
}	O
gid_t	int
*	O
tar_idcache_getgidbyname	function
(	O
char	O
*	O
group	struct
)	O
{	O
register	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
group	struct
*	O
grent	pointer
;	O
for	O
(	O
tail	pointer
=	O
group_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	pointer
==	O
*	O
group	struct
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	pointer
,	O
group	struct
)	O
)	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
g	int
;	O
for	O
(	O
tail	pointer
=	O
nogroup_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	pointer
==	O
*	O
group	struct
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	pointer
,	O
group	struct
)	O
)	O
return	O
0	int
;	O
grent	pointer
=	O
getgrnam	function
(	O
group	struct
)	O
;	O
tail	pointer
=	O
(	O
struct	O
userid	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
userid	struct
)	O
)	O
;	O
tail	pointer
->	O
name	pointer
=	O
xstrdup	function
(	O
group	struct
)	O
;	O
if	O
(	O
grent	pointer
)	O
{	O
tail	pointer
->	O
id	union
.	O
g	int
=	O
grent	pointer
->	O
gr_gid	int
;	O
tail	pointer
->	O
next	pointer
=	O
group_alist	pointer
;	O
group_alist	pointer
=	O
tail	pointer
;	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
g	int
;	O
}	O
tail	pointer
->	O
next	pointer
=	O
nogroup_alist	pointer
;	O
nogroup_alist	pointer
=	O
tail	pointer
;	O
return	O
0	int
;	O
}	O
