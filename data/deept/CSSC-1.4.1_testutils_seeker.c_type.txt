void	O
usage	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
retval	int
)	O
;	O
static	O
void	O
try_getpos	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
fpos_t	struct
pos	struct
;	O
int	O
rv	int
;	O
rv	int
=	O
fgetpos	function
(	O
f	pointer
,	O
&	O
pos	struct
)	O
;	O
printf	function
(	O
"fgetpos() returns %d\n"	pointer
,	O
rv	int
)	O
;	O
rv	int
=	O
fsetpos	function
(	O
f	pointer
,	O
&	O
pos	struct
)	O
;	O
printf	function
(	O
"fsetpos() returns %d\n"	pointer
,	O
rv	int
)	O
;	O
}	O
static	O
void	O
try_fseek	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
long	O
lrv	long
;	O
int	O
rv	int
;	O
lrv	long
=	O
ftell	function
(	O
f	pointer
)	O
;	O
printf	function
(	O
"ftell() returns %ld\n"	pointer
,	O
lrv	long
)	O
;	O
rv	int
=	O
fseek	function
(	O
f	pointer
,	O
SEEK_SET	int
,	O
lrv	long
)	O
;	O
printf	function
(	O
"fseek() returns %d\n"	pointer
,	O
rv	int
)	O
;	O
}	O
static	O
void	O
try_lseek	function
(	O
)	O
{	O
off_t	long
pos	struct
;	O
pos	struct
=	O
lseek	function
(	O
0	int
,	O
0	int
,	O
SEEK_CUR	int
)	O
;	O
printf	function
(	O
"lseek() returns %ld [SEEK_CUR]\n"	pointer
,	O
(	O
long	O
)	O
pos	struct
)	O
;	O
pos	struct
=	O
lseek	function
(	O
0	int
,	O
pos	struct
,	O
SEEK_CUR	int
)	O
;	O
printf	function
(	O
"lseek() returns %ld [SEEK_SET]\n"	pointer
,	O
(	O
long	O
)	O
pos	struct
)	O
;	O
}	O
int	O
do_help	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
usage	function
(	O
name	pointer
,	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
do_unbuffered	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
(	O
void	O
)	O
name	pointer
;	O
printf	function
(	O
"stdin is unbuffered\n"	pointer
)	O
;	O
setvbuf	function
(	O
stdin	pointer
,	O
(	O
char	O
*	O
)	O
NULL	O
,	O
_IONBF	int
,	O
0u	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
do_blockbuffered	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
(	O
void	O
)	O
name	pointer
;	O
printf	function
(	O
"stdin is fully-buffered\n"	pointer
)	O
;	O
setvbuf	function
(	O
stdin	pointer
,	O
(	O
char	O
*	O
)	O
NULL	O
,	O
_IOFBF	int
,	O
BUFSIZ	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
do_linebuffered	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
(	O
void	O
)	O
name	pointer
;	O
printf	function
(	O
"stdin is line-buffered\n"	pointer
)	O
;	O
setvbuf	function
(	O
stdin	pointer
,	O
(	O
char	O
*	O
)	O
NULL	O
,	O
_IOLBF	int
,	O
0	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
do_nothing	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
(	O
void	O
)	O
name	pointer
;	O
printf	function
(	O
"stdin is buffered in the default way\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
struct	O
optact	struct
{	O
const	O
char	O
*	O
option	pointer
;	O
int	O
(	O
*	O
action	pointer
)	O
(	O
const	O
char	O
*	O
)	O
;	O
}	O
;	O
struct	O
optact	struct
actions	array
[	O
]	O
=	O
{	O
{	O
"--help"	pointer
,	O
do_help	function
}	O
,	O
{	O
"--unbuffered"	pointer
,	O
do_unbuffered	function
}	O
,	O
{	O
"--fully-buffered"	pointer
,	O
do_blockbuffered	function
}	O
,	O
{	O
"--line-buffered"	pointer
,	O
do_linebuffered	function
}	O
,	O
{	O
"--default-buffering"	pointer
,	O
do_nothing	function
}	O
}	O
;	O
void	O
usage	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
retval	int
)	O
{	O
unsigned	O
int	O
j	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"usage: %s "	pointer
,	O
name	pointer
)	O
;	O
for	O
(	O
j	int
=	O
0u	int
;	O
j	int
<	O
NOPTIONS	O
;	O
++	O
j	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"[%s] "	pointer
,	O
actions	array
[	O
j	int
]	O
.	O
option	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
exit	function
(	O
retval	int
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
int	O
i	int
;	O
unsigned	O
int	O
j	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
'-'	O
==	O
argv	array
[	O
i	int
]	O
[	O
0	int
]	O
)	O
{	O
for	O
(	O
j	int
=	O
0u	int
;	O
j	int
<	O
NOPTIONS	O
;	O
++	O
j	int
)	O
{	O
if	O
(	O
0	int
==	O
strcmp	function
(	O
argv	array
[	O
i	int
]	O
,	O
actions	array
[	O
j	int
]	O
.	O
option	pointer
)	O
)	O
{	O
(	O
*	O
actions	array
[	O
j	int
]	O
.	O
action	pointer
)	O
(	O
argv	array
[	O
0	int
]	O
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
NOPTIONS	O
==	O
j	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Unknown option `%s'\n"	pointer
,	O
argv	array
[	O
i	int
]	O
)	O
;	O
usage	function
(	O
argv	array
[	O
0	int
]	O
,	O
ERR_USAGE	O
)	O
;	O
}	O
}	O
else	O
{	O
usage	function
(	O
argv	array
[	O
0	int
]	O
,	O
ERR_USAGE	O
)	O
;	O
}	O
}	O
try_getpos	function
(	O
stdin	pointer
)	O
;	O
try_fseek	function
(	O
stdin	pointer
)	O
;	O
try_lseek	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
