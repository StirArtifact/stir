static	O
const	O
char	O
ascii	array
[	O
]	O
=	O
"ASCII"	pointer
;	O
const	O
char	O
*	O
po_charset_ascii	pointer
=	O
ascii	array
;	O
static	O
const	O
char	O
utf8	array
[	O
]	O
=	O
"UTF-8"	pointer
;	O
const	O
char	O
*	O
po_charset_utf8	pointer
=	O
utf8	array
;	O
const	O
char	O
*	O
po_charset_canonicalize	function
(	O
const	O
char	O
*	O
charset	pointer
)	O
{	O
static	O
const	O
char	O
*	O
standard_charsets	array
[	O
]	O
=	O
{	O
ascii	array
,	O
"ANSI_X3.4-1968"	pointer
,	O
"US-ASCII"	pointer
,	O
"ISO-8859-1"	pointer
,	O
"ISO_8859-1"	pointer
,	O
"ISO-8859-2"	pointer
,	O
"ISO_8859-2"	pointer
,	O
"ISO-8859-3"	pointer
,	O
"ISO_8859-3"	pointer
,	O
"ISO-8859-4"	pointer
,	O
"ISO_8859-4"	pointer
,	O
"ISO-8859-5"	pointer
,	O
"ISO_8859-5"	pointer
,	O
"ISO-8859-6"	pointer
,	O
"ISO_8859-6"	pointer
,	O
"ISO-8859-7"	pointer
,	O
"ISO_8859-7"	pointer
,	O
"ISO-8859-8"	pointer
,	O
"ISO_8859-8"	pointer
,	O
"ISO-8859-9"	pointer
,	O
"ISO_8859-9"	pointer
,	O
"ISO-8859-13"	pointer
,	O
"ISO_8859-13"	pointer
,	O
"ISO-8859-14"	pointer
,	O
"ISO_8859-14"	pointer
,	O
"ISO-8859-15"	pointer
,	O
"ISO_8859-15"	pointer
,	O
"KOI8-R"	pointer
,	O
"KOI8-U"	pointer
,	O
"KOI8-T"	pointer
,	O
"CP850"	pointer
,	O
"CP866"	pointer
,	O
"CP874"	pointer
,	O
"CP932"	pointer
,	O
"CP949"	pointer
,	O
"CP950"	pointer
,	O
"CP1250"	pointer
,	O
"CP1251"	pointer
,	O
"CP1252"	pointer
,	O
"CP1253"	pointer
,	O
"CP1254"	pointer
,	O
"CP1255"	pointer
,	O
"CP1256"	pointer
,	O
"CP1257"	pointer
,	O
"GB2312"	pointer
,	O
"EUC-JP"	pointer
,	O
"EUC-KR"	pointer
,	O
"EUC-TW"	pointer
,	O
"BIG5"	pointer
,	O
"BIG5-HKSCS"	pointer
,	O
"GBK"	pointer
,	O
"GB18030"	pointer
,	O
"SHIFT_JIS"	pointer
,	O
"JOHAB"	pointer
,	O
"TIS-620"	pointer
,	O
"VISCII"	pointer
,	O
"GEORGIAN-PS"	pointer
,	O
utf8	array
}	O
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
SIZEOF	O
(	O
standard_charsets	array
)	O
;	O
i	long
++	O
)	O
if	O
(	O
c_strcasecmp	function
(	O
charset	pointer
,	O
standard_charsets	array
[	O
i	long
]	O
)	O
==	O
0	int
)	O
return	O
standard_charsets	array
[	O
i	long
<	O
3	int
?	O
0	int
:	O
i	long
<	O
27	int
?	O
(	O
(	O
i	long
-	O
3	int
)	O
&	O
~	O
1	int
)	O
+	O
3	int
:	O
i	long
]	O
;	O
return	O
NULL	O
;	O
}	O
bool	bool
po_charset_ascii_compatible	function
(	O
const	O
char	O
*	O
canon_charset	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"SHIFT_JIS"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
canon_charset	pointer
,	O
"JOHAB"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
canon_charset	pointer
,	O
"VISCII"	pointer
)	O
==	O
0	int
)	O
return	O
false	int
;	O
else	O
return	O
true	int
;	O
}	O
bool	bool
po_is_charset_weird	function
(	O
const	O
char	O
*	O
canon_charset	pointer
)	O
{	O
static	O
const	O
char	O
*	O
weird_charsets	array
[	O
]	O
=	O
{	O
"BIG5"	pointer
,	O
"BIG5-HKSCS"	pointer
,	O
"GBK"	pointer
,	O
"GB18030"	pointer
,	O
"SHIFT_JIS"	pointer
,	O
"JOHAB"	pointer
}	O
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
SIZEOF	O
(	O
weird_charsets	array
)	O
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
weird_charsets	array
[	O
i	long
]	O
)	O
==	O
0	int
)	O
return	O
true	int
;	O
return	O
false	int
;	O
}	O
bool	bool
po_is_charset_weird_cjk	function
(	O
const	O
char	O
*	O
canon_charset	pointer
)	O
{	O
static	O
const	O
char	O
*	O
weird_cjk_charsets	array
[	O
]	O
=	O
{	O
"BIG5"	pointer
,	O
"BIG5-HKSCS"	pointer
,	O
"GBK"	pointer
,	O
"GB18030"	pointer
,	O
"SHIFT_JIS"	pointer
,	O
"JOHAB"	pointer
}	O
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
SIZEOF	O
(	O
weird_cjk_charsets	array
)	O
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
weird_cjk_charsets	array
[	O
i	long
]	O
)	O
==	O
0	int
)	O
return	O
true	int
;	O
return	O
false	int
;	O
}	O
static	O
size_t	long
char_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
return	O
1	int
;	O
}	O
static	O
size_t	long
euc_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0xa1	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
euc_jp_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0xa1	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
return	O
2	int
;	O
}	O
else	O
if	O
(	O
c	char
==	O
0x8e	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xe0	int
)	O
return	O
2	int
;	O
}	O
else	O
if	O
(	O
c	char
==	O
0x8f	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c3	char
=	O
s	pointer
[	O
2	int
]	O
;	O
if	O
(	O
c3	char
>=	O
0xa1	int
&&	O
c3	char
<	O
0xff	int
)	O
return	O
3	int
;	O
}	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
euc_tw_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0xa1	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
return	O
2	int
;	O
}	O
else	O
if	O
(	O
c	char
==	O
0x8e	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<=	O
0xb0	int
)	O
{	O
unsigned	O
char	O
c3	char
=	O
s	pointer
[	O
2	int
]	O
;	O
if	O
(	O
c3	char
>=	O
0xa1	int
&&	O
c3	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c4	char
=	O
s	pointer
[	O
3	int
]	O
;	O
if	O
(	O
c4	char
>=	O
0xa1	int
&&	O
c4	char
<	O
0xff	int
)	O
return	O
4	int
;	O
}	O
}	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
big5_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0xa1	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x40	int
&&	O
c2	char
<	O
0x7f	int
)	O
||	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
big5hkscs_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0x88	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x40	int
&&	O
c2	char
<	O
0x7f	int
)	O
||	O
(	O
c2	char
>=	O
0xa1	int
&&	O
c2	char
<	O
0xff	int
)	O
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
gbk_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0x81	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x40	int
&&	O
c2	char
<	O
0x7f	int
)	O
||	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<	O
0xff	int
)	O
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
gb18030_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0x81	int
&&	O
c	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x40	int
&&	O
c2	char
<	O
0x7f	int
)	O
||	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<	O
0xff	int
)	O
)	O
return	O
2	int
;	O
}	O
if	O
(	O
c	char
>=	O
0x81	int
&&	O
c	char
<=	O
0x84	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0x30	int
&&	O
c2	char
<=	O
0x39	int
)	O
{	O
unsigned	O
char	O
c3	char
=	O
s	pointer
[	O
2	int
]	O
;	O
if	O
(	O
c3	char
>=	O
0x81	int
&&	O
c3	char
<	O
0xff	int
)	O
{	O
unsigned	O
char	O
c4	char
=	O
s	pointer
[	O
3	int
]	O
;	O
if	O
(	O
c4	char
>=	O
0x30	int
&&	O
c4	char
<=	O
0x39	int
)	O
return	O
4	int
;	O
}	O
}	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
shift_jis_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
(	O
c	char
>=	O
0x81	int
&&	O
c	char
<=	O
0x9f	int
)	O
||	O
(	O
c	char
>=	O
0xe0	int
&&	O
c	char
<=	O
0xf9	int
)	O
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x40	int
&&	O
c2	char
<=	O
0x7e	int
)	O
||	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<=	O
0xfc	int
)	O
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
johab_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0x84	int
&&	O
c	char
<=	O
0xd3	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x41	int
&&	O
c2	char
<	O
0x7f	int
)	O
||	O
(	O
c2	char
>=	O
0x81	int
&&	O
c2	char
<	O
0xff	int
)	O
)	O
return	O
2	int
;	O
}	O
else	O
if	O
(	O
c	char
>=	O
0xd9	int
&&	O
c	char
<=	O
0xf9	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
(	O
c2	char
>=	O
0x31	int
&&	O
c2	char
<=	O
0x7e	int
)	O
||	O
(	O
c2	char
>=	O
0x91	int
&&	O
c2	char
<=	O
0xfe	int
)	O
)	O
return	O
2	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
size_t	long
utf8_character_iterator	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
unsigned	O
char	O
c	char
=	O
*	O
s	pointer
;	O
if	O
(	O
c	char
>=	O
0xc2	int
)	O
{	O
if	O
(	O
c	char
<	O
0xe0	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<	O
0xc0	int
)	O
return	O
2	int
;	O
}	O
else	O
if	O
(	O
c	char
<	O
0xf0	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<	O
0xc0	int
)	O
{	O
unsigned	O
char	O
c3	char
=	O
s	pointer
[	O
2	int
]	O
;	O
if	O
(	O
c3	char
>=	O
0x80	int
&&	O
c3	char
<	O
0xc0	int
)	O
return	O
3	int
;	O
}	O
}	O
else	O
if	O
(	O
c	char
<	O
0xf8	int
)	O
{	O
unsigned	O
char	O
c2	char
=	O
s	pointer
[	O
1	int
]	O
;	O
if	O
(	O
c2	char
>=	O
0x80	int
&&	O
c2	char
<	O
0xc0	int
)	O
{	O
unsigned	O
char	O
c3	char
=	O
s	pointer
[	O
2	int
]	O
;	O
if	O
(	O
c3	char
>=	O
0x80	int
&&	O
c3	char
<	O
0xc0	int
)	O
{	O
unsigned	O
char	O
c4	char
=	O
s	pointer
[	O
3	int
]	O
;	O
if	O
(	O
c4	char
>=	O
0x80	int
&&	O
c4	char
<	O
0xc0	int
)	O
return	O
4	int
;	O
}	O
}	O
}	O
}	O
return	O
1	int
;	O
}	O
character_iterator_t	pointer
po_charset_character_iterator	function
(	O
const	O
char	O
*	O
canon_charset	pointer
)	O
{	O
if	O
(	O
canon_charset	pointer
==	O
utf8	array
)	O
return	O
utf8_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"GB2312"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
canon_charset	pointer
,	O
"EUC-KR"	pointer
)	O
==	O
0	int
)	O
return	O
euc_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"EUC-JP"	pointer
)	O
==	O
0	int
)	O
return	O
euc_jp_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"EUC-TW"	pointer
)	O
==	O
0	int
)	O
return	O
euc_tw_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"BIG5"	pointer
)	O
==	O
0	int
)	O
return	O
big5_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"BIG5-HKSCS"	pointer
)	O
==	O
0	int
)	O
return	O
big5hkscs_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"GBK"	pointer
)	O
==	O
0	int
)	O
return	O
gbk_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"GB18030"	pointer
)	O
==	O
0	int
)	O
return	O
gb18030_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"SHIFT_JIS"	pointer
)	O
==	O
0	int
)	O
return	O
shift_jis_character_iterator	function
;	O
if	O
(	O
strcmp	function
(	O
canon_charset	pointer
,	O
"JOHAB"	pointer
)	O
==	O
0	int
)	O
return	O
johab_character_iterator	function
;	O
return	O
char_iterator	function
;	O
}	O
const	O
char	O
*	O
po_lex_charset	pointer
;	O
iconv_t	pointer
po_lex_iconv	pointer
;	O
bool	bool
po_lex_weird_cjk	bool
;	O
void	O
po_lex_charset_init	function
(	O
)	O
{	O
po_lex_charset	pointer
=	O
NULL	O
;	O
po_lex_iconv	pointer
=	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
;	O
po_lex_weird_cjk	bool
=	O
false	int
;	O
}	O
void	O
po_lex_charset_set	function
(	O
const	O
char	O
*	O
header_entry	pointer
,	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
const	O
char	O
*	O
charsetstr	pointer
=	O
c_strstr	function
(	O
header_entry	pointer
,	O
"charset="	pointer
)	O
;	O
if	O
(	O
charsetstr	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
charset	pointer
;	O
const	O
char	O
*	O
canon_charset	pointer
;	O
charsetstr	pointer
+=	O
strlen	function
(	O
"charset="	pointer
)	O
;	O
len	long
=	O
strcspn	function
(	O
charsetstr	pointer
,	O
" \t\n"	pointer
)	O
;	O
charset	pointer
=	O
(	O
char	O
*	O
)	O
xmalloca	O
(	O
len	long
+	O
1	int
)	O
;	O
memcpy	function
(	O
charset	pointer
,	O
charsetstr	pointer
,	O
len	long
)	O
;	O
charset	pointer
[	O
len	long
]	O
=	O
'\0'	O
;	O
canon_charset	pointer
=	O
po_charset_canonicalize	function
(	O
charset	pointer
)	O
;	O
if	O
(	O
canon_charset	pointer
==	O
NULL	O
)	O
{	O
size_t	long
filenamelen	long
=	O
strlen	function
(	O
filename	pointer
)	O
;	O
if	O
(	O
!	O
(	O
filenamelen	long
>=	O
4	int
&&	O
memcmp	function
(	O
filename	pointer
+	O
filenamelen	long
-	O
4	int
,	O
".pot"	pointer
,	O
4	int
)	O
==	O
0	int
&&	O
strcmp	function
(	O
charset	pointer
,	O
"CHARSET"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
char	O
*	O
warning_message	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"Charset \"%s\" is not a portable encoding name.\nMessage conversion to user's charset might not work.\n"	pointer
)	O
,	O
charset	pointer
)	O
;	O
po_xerror	pointer
(	O
PO_SEVERITY_WARNING	int
,	O
NULL	O
,	O
filename	pointer
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
true	int
,	O
warning_message	pointer
)	O
;	O
free	function
(	O
warning_message	pointer
)	O
;	O
}	O
}	O
else	O
{	O
const	O
char	O
*	O
envval	pointer
;	O
po_lex_charset	pointer
=	O
canon_charset	pointer
;	O
if	O
(	O
po_lex_iconv	pointer
!=	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
)	O
iconv_close	function
(	O
po_lex_iconv	pointer
)	O
;	O
envval	pointer
=	O
getenv	function
(	O
"OLD_PO_FILE_INPUT"	pointer
)	O
;	O
if	O
(	O
envval	pointer
!=	O
NULL	O
&&	O
*	O
envval	pointer
!=	O
'\0'	O
)	O
{	O
po_lex_iconv	pointer
=	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
;	O
po_lex_weird_cjk	bool
=	O
false	int
;	O
}	O
else	O
{	O
po_lex_iconv	pointer
=	O
iconv_open	function
(	O
"UTF-8"	pointer
,	O
po_lex_charset	pointer
)	O
;	O
if	O
(	O
po_lex_iconv	pointer
==	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
)	O
{	O
const	O
char	O
*	O
progname	pointer
;	O
char	O
*	O
warning_message	pointer
;	O
const	O
char	O
*	O
recommendation	pointer
;	O
const	O
char	O
*	O
note	pointer
;	O
char	O
*	O
whole_message	pointer
;	O
progname	pointer
=	O
basename	function
(	O
program_name	pointer
)	O
;	O
warning_message	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"Charset \"%s\" is not supported. %s relies on iconv(),\nand iconv() does not support \"%s\".\n"	pointer
)	O
,	O
po_lex_charset	pointer
,	O
progname	pointer
,	O
po_lex_charset	pointer
)	O
;	O
recommendation	pointer
=	O
_	O
(	O
"Installing GNU libiconv and then reinstalling GNU gettext\nwould fix this problem.\n"	pointer
)	O
;	O
po_lex_weird_cjk	bool
=	O
po_is_charset_weird_cjk	function
(	O
po_lex_charset	pointer
)	O
;	O
if	O
(	O
po_is_charset_weird	function
(	O
po_lex_charset	pointer
)	O
&&	O
!	O
po_lex_weird_cjk	bool
)	O
note	pointer
=	O
_	O
(	O
"Continuing anyway, expect parse errors."	pointer
)	O
;	O
else	O
note	pointer
=	O
_	O
(	O
"Continuing anyway."	pointer
)	O
;	O
whole_message	pointer
=	O
xasprintf	function
(	O
"%s%s%s\n"	pointer
,	O
warning_message	pointer
,	O
recommendation	pointer
,	O
note	pointer
)	O
;	O
po_xerror	pointer
(	O
PO_SEVERITY_WARNING	int
,	O
NULL	O
,	O
filename	pointer
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
true	int
,	O
whole_message	pointer
)	O
;	O
free	function
(	O
whole_message	pointer
)	O
;	O
free	function
(	O
warning_message	pointer
)	O
;	O
}	O
}	O
}	O
freea	function
(	O
charset	pointer
)	O
;	O
}	O
else	O
{	O
size_t	long
filenamelen	long
=	O
strlen	function
(	O
filename	pointer
)	O
;	O
if	O
(	O
!	O
(	O
filenamelen	long
>=	O
4	int
&&	O
memcmp	function
(	O
filename	pointer
+	O
filenamelen	long
-	O
4	int
,	O
".pot"	pointer
,	O
4	int
)	O
==	O
0	int
)	O
)	O
po_xerror	pointer
(	O
PO_SEVERITY_WARNING	int
,	O
NULL	O
,	O
filename	pointer
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
,	O
true	int
,	O
_	O
(	O
"Charset missing in header.\nMessage conversion to user's charset will not work.\n"	pointer
)	O
)	O
;	O
}	O
}	O
void	O
po_lex_charset_close	function
(	O
)	O
{	O
po_lex_charset	pointer
=	O
NULL	O
;	O
if	O
(	O
po_lex_iconv	pointer
!=	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
)	O
{	O
iconv_close	function
(	O
po_lex_iconv	pointer
)	O
;	O
po_lex_iconv	pointer
=	O
(	O
iconv_t	pointer
)	O
(	O
-	O
1	int
)	O
;	O
}	O
po_lex_weird_cjk	bool
=	O
false	int
;	O
}	O
