bool	enum
_pl_f_retrieve_font	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
double	O
theta	double
;	O
double	O
dx	int
,	O
dy	int
,	O
device_dx	double
,	O
device_dy	double
,	O
device_vector_len	double
;	O
double	O
pointsize	double
,	O
fig_pointsize	double
,	O
size	double
,	O
quantized_size	double
;	O
int	O
int_fig_pointsize	int
;	O
double	O
quantization_factor	double
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_type	int
!=	O
PL_F_POSTSCRIPT	int
)	O
return	O
false	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
uniform	enum
||	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
nonreflection	enum
)	O
return	O
false	int
;	O
theta	double
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
text_rotation	double
*	O
M_PI	int
/	O
180.0	int
;	O
dx	int
=	O
cos	function
(	O
theta	double
)	O
;	O
dy	int
=	O
sin	function
(	O
theta	double
)	O
;	O
device_dx	double
=	O
XDV	O
(	O
dx	int
,	O
dy	int
)	O
;	O
device_dy	double
=	O
YDV	O
(	O
dx	int
,	O
dy	int
)	O
;	O
device_vector_len	double
=	O
sqrt	function
(	O
device_dx	double
*	O
device_dx	double
+	O
device_dy	double
*	O
device_dy	double
)	O
;	O
size	double
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_size	double
;	O
pointsize	double
=	O
FIG_UNITS_TO_POINTS	O
(	O
size	double
*	O
device_vector_len	double
)	O
;	O
fig_pointsize	double
=	O
FIG_FONT_SCALING	O
*	O
pointsize	double
;	O
int_fig_pointsize	int
=	O
IROUND	O
(	O
fig_pointsize	double
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fig_font_point_size	int
=	O
int_fig_pointsize	int
;	O
if	O
(	O
device_vector_len	double
==	O
0.0	int
)	O
quantized_size	double
=	O
0.0	int
;	O
else	O
quantized_size	double
=	O
(	O
POINTS_TO_FIG_UNITS	O
(	O
(	O
double	O
)	O
int_fig_pointsize	int
/	O
FIG_FONT_SCALING	O
)	O
)	O
/	O
(	O
device_vector_len	double
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
true_font_size	double
=	O
quantized_size	double
;	O
if	O
(	O
size	double
==	O
0.0	int
)	O
quantization_factor	double
=	O
0.0	int
;	O
else	O
quantization_factor	double
=	O
quantized_size	double
/	O
size	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_ascent	double
*=	O
quantization_factor	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_descent	double
*=	O
quantization_factor	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
font_cap_height	double
*=	O
quantization_factor	double
;	O
return	O
true	int
;	O
}	O
