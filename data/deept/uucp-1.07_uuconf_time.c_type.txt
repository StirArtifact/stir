const	O
char	O
_uuconf_time_rcsid	array
[	O
]	O
=	O
"$Id: time.c,v 1.14 2002/03/05 19:10:43 ian Rel $"	pointer
;	O
static	O
int	O
itadd_span	function
P	O
(	O
(	O
struct	O
sglobal	struct
*	O
qglobal	pointer
,	O
int	O
istart	int
,	O
int	O
iend	int
,	O
long	O
ival	long
,	O
int	O
cretry	int
,	O
int	O
(	O
*	O
picmp	pointer
)	O
P	O
(	O
(	O
long	O
,	O
long	O
)	O
)	O
,	O
struct	O
uuconf_timespan	struct
*	O
*	O
pqspan	pointer
,	O
pointer	pointer
pblock	pointer
)	O
)	O
;	O
static	O
int	O
itnew	function
P	O
(	O
(	O
struct	O
sglobal	struct
*	O
qglobal	pointer
,	O
struct	O
uuconf_timespan	struct
*	O
*	O
pqset	pointer
,	O
struct	O
uuconf_timespan	struct
*	O
qnext	pointer
,	O
int	O
istart	int
,	O
int	O
iend	int
,	O
long	O
ival	long
,	O
int	O
cretry	int
,	O
pointer	pointer
pblock	pointer
)	O
)	O
;	O
static	O
const	O
struct	O
{	O
const	O
char	O
*	O
zname	pointer
;	O
int	O
imin	int
;	O
int	O
imax	int
;	O
}	O
asTdays	array
[	O
]	O
=	O
{	O
{	O
"any"	pointer
,	O
0	int
,	O
6	int
}	O
,	O
{	O
"wk"	pointer
,	O
1	int
,	O
5	int
}	O
,	O
{	O
"su"	pointer
,	O
0	int
,	O
0	int
}	O
,	O
{	O
"mo"	pointer
,	O
1	int
,	O
1	int
}	O
,	O
{	O
"tu"	pointer
,	O
2	int
,	O
2	int
}	O
,	O
{	O
"we"	pointer
,	O
3	int
,	O
3	int
}	O
,	O
{	O
"th"	pointer
,	O
4	int
,	O
4	int
}	O
,	O
{	O
"fr"	pointer
,	O
5	int
,	O
5	int
}	O
,	O
{	O
"sa"	pointer
,	O
6	int
,	O
6	int
}	O
,	O
{	O
"never"	pointer
,	O
-	O
1	int
,	O
-	O
2	int
}	O
,	O
{	O
"none"	pointer
,	O
-	O
1	int
,	O
-	O
2	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
}	O
}	O
;	O
int	O
_uuconf_itime_parse	function
(	O
qglobal	pointer
,	O
ztime	pointer
,	O
ival	long
,	O
cretry	int
,	O
picmp	pointer
,	O
pqspan	pointer
,	O
pblock	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
char	O
*	O
ztime	pointer
;	O
long	O
ival	long
;	O
int	O
cretry	int
;	O
int	O
(	O
*	O
picmp	pointer
)	O
P	O
(	O
(	O
long	O
,	O
long	O
)	O
)	O
;	O
struct	O
uuconf_timespan	struct
*	O
*	O
pqspan	pointer
;	O
pointer	pointer
pblock	pointer
;	O
{	O
struct	O
uuconf_timespan	struct
*	O
qlist	pointer
;	O
char	O
bfirst	char
;	O
const	O
char	O
*	O
z	pointer
;	O
qlist	pointer
=	O
*	O
pqspan	pointer
;	O
if	O
(	O
qlist	pointer
==	O
(	O
struct	O
uuconf_timespan	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
qlist	pointer
=	O
NULL	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
char	O
*	O
*	O
pz	pointer
;	O
char	O
*	O
zfound	pointer
;	O
bfirst	char
=	O
*	O
ztime	pointer
;	O
if	O
(	O
isupper	function
(	O
BUCHAR	O
(	O
bfirst	char
)	O
)	O
)	O
bfirst	char
=	O
tolower	function
(	O
BUCHAR	O
(	O
bfirst	char
)	O
)	O
;	O
zfound	pointer
=	O
NULL	O
;	O
pz	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pztimetables	pointer
;	O
while	O
(	O
*	O
pz	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
(	O
bfirst	char
==	O
(	O
*	O
pz	pointer
)	O
[	O
0	int
]	O
||	O
(	O
isupper	function
(	O
BUCHAR	O
(	O
(	O
*	O
pz	pointer
)	O
[	O
0	int
]	O
)	O
)	O
&&	O
(	O
int	O
)	O
bfirst	char
==	O
(	O
int	O
)	O
tolower	function
(	O
BUCHAR	O
(	O
(	O
*	O
pz	pointer
)	O
[	O
0	int
]	O
)	O
)	O
)	O
)	O
&&	O
strcasecmp	function
(	O
ztime	pointer
,	O
*	O
pz	pointer
)	O
==	O
0	int
)	O
zfound	pointer
=	O
pz	pointer
[	O
1	int
]	O
;	O
pz	pointer
+=	O
2	int
;	O
}	O
if	O
(	O
zfound	pointer
==	O
NULL	O
)	O
break	O
;	O
ztime	pointer
=	O
zfound	pointer
;	O
}	O
z	pointer
=	O
ztime	pointer
;	O
while	O
(	O
*	O
z	pointer
!=	O
'\0'	O
)	O
{	O
int	O
iday	int
;	O
boolean	int
afday	array
[	O
7	int
]	O
;	O
int	O
istart	int
,	O
iend	int
;	O
if	O
(	O
*	O
z	pointer
==	O
','	O
||	O
*	O
z	pointer
==	O
'|'	O
)	O
++	O
z	pointer
;	O
if	O
(	O
*	O
z	pointer
==	O
'\0'	O
||	O
*	O
z	pointer
==	O
';'	O
)	O
break	O
;	O
for	O
(	O
iday	int
=	O
0	int
;	O
iday	int
<	O
7	int
;	O
iday	int
++	O
)	O
afday	array
[	O
iday	int
]	O
=	O
FALSE	O
;	O
do	O
{	O
bfirst	char
=	O
*	O
z	pointer
;	O
if	O
(	O
isupper	function
(	O
BUCHAR	O
(	O
bfirst	char
)	O
)	O
)	O
bfirst	char
=	O
tolower	function
(	O
BUCHAR	O
(	O
bfirst	char
)	O
)	O
;	O
for	O
(	O
iday	int
=	O
0	int
;	O
asTdays	array
[	O
iday	int
]	O
.	O
zname	pointer
!=	O
NULL	O
;	O
iday	int
++	O
)	O
{	O
size_t	long
clen	long
;	O
if	O
(	O
bfirst	char
!=	O
asTdays	array
[	O
iday	int
]	O
.	O
zname	pointer
[	O
0	int
]	O
)	O
continue	O
;	O
clen	long
=	O
strlen	function
(	O
asTdays	array
[	O
iday	int
]	O
.	O
zname	pointer
)	O
;	O
if	O
(	O
strncasecmp	function
(	O
z	pointer
,	O
asTdays	array
[	O
iday	int
]	O
.	O
zname	pointer
,	O
clen	long
)	O
==	O
0	int
)	O
{	O
int	O
iset	int
;	O
for	O
(	O
iset	int
=	O
asTdays	array
[	O
iday	int
]	O
.	O
imin	int
;	O
iset	int
<=	O
asTdays	array
[	O
iday	int
]	O
.	O
imax	int
;	O
iset	int
++	O
)	O
afday	array
[	O
iset	int
]	O
=	O
TRUE	O
;	O
z	pointer
+=	O
clen	long
;	O
break	O
;	O
}	O
}	O
if	O
(	O
asTdays	array
[	O
iday	int
]	O
.	O
zname	pointer
==	O
NULL	O
)	O
return	O
UUCONF_SYNTAX_ERROR	O
;	O
}	O
while	O
(	O
isalpha	function
(	O
BUCHAR	O
(	O
*	O
z	pointer
)	O
)	O
)	O
;	O
if	O
(	O
!	O
isdigit	function
(	O
BUCHAR	O
(	O
*	O
z	pointer
)	O
)	O
)	O
{	O
istart	int
=	O
0	int
;	O
iend	int
=	O
24	int
*	O
60	int
;	O
}	O
else	O
{	O
char	O
*	O
zendnum	pointer
;	O
istart	int
=	O
(	O
int	O
)	O
strtol	function
(	O
(	O
char	O
*	O
)	O
z	pointer
,	O
&	O
zendnum	pointer
,	O
10	int
)	O
;	O
if	O
(	O
*	O
zendnum	pointer
!=	O
'-'	O
||	O
!	O
isdigit	function
(	O
BUCHAR	O
(	O
zendnum	pointer
[	O
1	int
]	O
)	O
)	O
)	O
return	O
UUCONF_SYNTAX_ERROR	O
;	O
z	pointer
=	O
zendnum	pointer
+	O
1	int
;	O
iend	int
=	O
(	O
int	O
)	O
strtol	function
(	O
(	O
char	O
*	O
)	O
z	pointer
,	O
&	O
zendnum	pointer
,	O
10	int
)	O
;	O
z	pointer
=	O
zendnum	pointer
;	O
istart	int
=	O
(	O
istart	int
/	O
100	int
)	O
*	O
60	int
+	O
istart	int
%	O
100	int
;	O
iend	int
=	O
(	O
iend	int
/	O
100	int
)	O
*	O
60	int
+	O
iend	int
%	O
100	int
;	O
}	O
for	O
(	O
iday	int
=	O
0	int
;	O
iday	int
<	O
7	int
;	O
iday	int
++	O
)	O
{	O
if	O
(	O
afday	array
[	O
iday	int
]	O
)	O
{	O
int	O
iminute	int
,	O
iret	int
;	O
iminute	int
=	O
iday	int
*	O
24	int
*	O
60	int
;	O
if	O
(	O
istart	int
<	O
iend	int
)	O
iret	int
=	O
itadd_span	function
(	O
qglobal	pointer
,	O
iminute	int
+	O
istart	int
,	O
iminute	int
+	O
iend	int
,	O
ival	long
,	O
cretry	int
,	O
picmp	pointer
,	O
&	O
qlist	pointer
,	O
pblock	pointer
)	O
;	O
else	O
{	O
iret	int
=	O
itadd_span	function
(	O
qglobal	pointer
,	O
iminute	int
,	O
iminute	int
+	O
iend	int
,	O
ival	long
,	O
cretry	int
,	O
picmp	pointer
,	O
&	O
qlist	pointer
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
==	O
UUCONF_SUCCESS	O
)	O
iret	int
=	O
itadd_span	function
(	O
qglobal	pointer
,	O
iminute	int
+	O
istart	int
,	O
iminute	int
+	O
24	int
*	O
60	int
,	O
ival	long
,	O
cretry	int
,	O
picmp	pointer
,	O
&	O
qlist	pointer
,	O
pblock	pointer
)	O
;	O
}	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
}	O
}	O
*	O
pqspan	pointer
=	O
qlist	pointer
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
static	O
int	O
itadd_span	function
(	O
qglobal	pointer
,	O
istart	int
,	O
iend	int
,	O
ival	long
,	O
cretry	int
,	O
picmp	pointer
,	O
pqspan	pointer
,	O
pblock	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
int	O
istart	int
;	O
int	O
iend	int
;	O
long	O
ival	long
;	O
int	O
cretry	int
;	O
int	O
(	O
*	O
picmp	pointer
)	O
P	O
(	O
(	O
long	O
,	O
long	O
)	O
)	O
;	O
struct	O
uuconf_timespan	struct
*	O
*	O
pqspan	pointer
;	O
pointer	pointer
pblock	pointer
;	O
{	O
struct	O
uuconf_timespan	struct
*	O
*	O
pq	pointer
;	O
int	O
iret	int
;	O
for	O
(	O
pq	pointer
=	O
pqspan	pointer
;	O
*	O
pq	pointer
!=	O
NULL	O
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
)	O
{	O
int	O
icmp	int
;	O
if	O
(	O
iend	int
<=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
)	O
{	O
if	O
(	O
iend	int
==	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
&&	O
cretry	int
==	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_cretry	int
&&	O
(	O
*	O
picmp	pointer
)	O
(	O
ival	long
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
)	O
==	O
0	int
)	O
{	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
=	O
istart	int
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
<=	O
istart	int
)	O
{	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
==	O
istart	int
&&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_cretry	int
==	O
cretry	int
&&	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
==	O
NULL	O
||	O
iend	int
<=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
->	O
uuconf_istart	int
)	O
&&	O
(	O
*	O
picmp	pointer
)	O
(	O
ival	long
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
)	O
==	O
0	int
)	O
{	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
=	O
iend	int
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
continue	O
;	O
}	O
icmp	int
=	O
(	O
*	O
picmp	pointer
)	O
(	O
ival	long
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
)	O
;	O
if	O
(	O
icmp	int
==	O
0	int
)	O
{	O
if	O
(	O
istart	int
<	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
)	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
=	O
istart	int
;	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
>=	O
iend	int
)	O
return	O
UUCONF_SUCCESS	O
;	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
==	O
NULL	O
||	O
iend	int
<=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
->	O
uuconf_istart	int
)	O
{	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
=	O
iend	int
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
->	O
uuconf_istart	int
;	O
istart	int
=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
;	O
}	O
else	O
if	O
(	O
icmp	int
<	O
0	int
)	O
{	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
<	O
istart	int
)	O
{	O
iret	int
=	O
itnew	function
(	O
qglobal	pointer
,	O
pq	pointer
,	O
*	O
pq	pointer
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
,	O
istart	int
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_cretry	int
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
;	O
}	O
if	O
(	O
iend	int
<	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
)	O
{	O
iret	int
=	O
itnew	function
(	O
qglobal	pointer
,	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
,	O
iend	int
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_cretry	int
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_ival	long
=	O
ival	long
;	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
=	O
istart	int
;	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_cretry	int
=	O
cretry	int
;	O
if	O
(	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
==	O
NULL	O
||	O
iend	int
<=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
->	O
uuconf_istart	int
)	O
{	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
=	O
iend	int
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
->	O
uuconf_istart	int
;	O
istart	int
=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
;	O
}	O
else	O
{	O
if	O
(	O
istart	int
<	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
)	O
{	O
iret	int
=	O
itnew	function
(	O
qglobal	pointer
,	O
pq	pointer
,	O
*	O
pq	pointer
,	O
istart	int
,	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_istart	int
,	O
ival	long
,	O
cretry	int
,	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qnext	pointer
;	O
}	O
if	O
(	O
iend	int
<=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
)	O
return	O
UUCONF_SUCCESS	O
;	O
istart	int
=	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_iend	int
;	O
}	O
}	O
return	O
itnew	function
(	O
qglobal	pointer
,	O
pq	pointer
,	O
*	O
pq	pointer
,	O
istart	int
,	O
iend	int
,	O
ival	long
,	O
cretry	int
,	O
pblock	pointer
)	O
;	O
}	O
static	O
int	O
itnew	function
(	O
qglobal	pointer
,	O
pqset	pointer
,	O
qnext	pointer
,	O
istart	int
,	O
iend	int
,	O
ival	long
,	O
cretry	int
,	O
pblock	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
struct	O
uuconf_timespan	struct
*	O
*	O
pqset	pointer
;	O
struct	O
uuconf_timespan	struct
*	O
qnext	pointer
;	O
int	O
istart	int
;	O
int	O
iend	int
;	O
long	O
ival	long
;	O
int	O
cretry	int
;	O
pointer	pointer
pblock	pointer
;	O
{	O
register	O
struct	O
uuconf_timespan	struct
*	O
qnew	pointer
;	O
qnew	pointer
=	O
(	O
(	O
struct	O
uuconf_timespan	struct
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
sizeof	O
(	O
struct	O
uuconf_timespan	struct
)	O
)	O
)	O
;	O
if	O
(	O
qnew	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
qnew	pointer
->	O
uuconf_qnext	pointer
=	O
qnext	pointer
;	O
qnew	pointer
->	O
uuconf_istart	int
=	O
istart	int
;	O
qnew	pointer
->	O
uuconf_iend	int
=	O
iend	int
;	O
qnew	pointer
->	O
uuconf_ival	long
=	O
ival	long
;	O
qnew	pointer
->	O
uuconf_cretry	int
=	O
cretry	int
;	O
*	O
pqset	pointer
=	O
qnew	pointer
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
