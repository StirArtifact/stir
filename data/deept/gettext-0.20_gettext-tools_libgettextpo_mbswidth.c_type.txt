int	O
mbswidth	O
(	O
const	O
char	O
*	O
string	O
,	O
int	O
flags	O
)	O
{	O
return	O
mbsnwidth	O
(	O
string	O
,	O
strlen	O
(	O
string	O
)	O
,	O
flags	O
)	O
;	O
}	O
int	O
mbsnwidth	O
(	O
const	O
char	O
*	O
string	O
,	O
size_t	O
nbytes	O
,	O
int	O
flags	O
)	O
{	O
const	O
char	O
*	O
p	O
=	O
string	O
;	O
const	O
char	O
*	O
plimit	O
=	O
p	O
+	O
nbytes	O
;	O
int	O
width	O
;	O
width	O
=	O
0	int
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
{	O
while	O
(	O
p	O
<	O
plimit	O
)	O
switch	O
(	O
*	O
p	O
)	O
{	O
case	O
' '	O
:	O
case	O
'!'	O
:	O
case	O
'"'	O
:	O
case	O
'#'	O
:	O
case	O
'%'	O
:	O
case	O
'&'	O
:	O
case	O
'\''	O
:	O
case	O
'('	O
:	O
case	O
')'	O
:	O
case	O
'*'	O
:	O
case	O
'+'	O
:	O
case	O
','	O
:	O
case	O
'-'	O
:	O
case	O
'.'	O
:	O
case	O
'/'	O
:	O
case	O
'0'	O
:	O
case	O
'1'	O
:	O
case	O
'2'	O
:	O
case	O
'3'	O
:	O
case	O
'4'	O
:	O
case	O
'5'	O
:	O
case	O
'6'	O
:	O
case	O
'7'	O
:	O
case	O
'8'	O
:	O
case	O
'9'	O
:	O
case	O
':'	O
:	O
case	O
';'	O
:	O
case	O
'<'	O
:	O
case	O
'='	O
:	O
case	O
'>'	O
:	O
case	O
'?'	O
:	O
case	O
'A'	O
:	O
case	O
'B'	O
:	O
case	O
'C'	O
:	O
case	O
'D'	O
:	O
case	O
'E'	O
:	O
case	O
'F'	O
:	O
case	O
'G'	O
:	O
case	O
'H'	O
:	O
case	O
'I'	O
:	O
case	O
'J'	O
:	O
case	O
'K'	O
:	O
case	O
'L'	O
:	O
case	O
'M'	O
:	O
case	O
'N'	O
:	O
case	O
'O'	O
:	O
case	O
'P'	O
:	O
case	O
'Q'	O
:	O
case	O
'R'	O
:	O
case	O
'S'	O
:	O
case	O
'T'	O
:	O
case	O
'U'	O
:	O
case	O
'V'	O
:	O
case	O
'W'	O
:	O
case	O
'X'	O
:	O
case	O
'Y'	O
:	O
case	O
'Z'	O
:	O
case	O
'['	O
:	O
case	O
'\\'	O
:	O
case	O
']'	O
:	O
case	O
'^'	O
:	O
case	O
'_'	O
:	O
case	O
'a'	O
:	O
case	O
'b'	O
:	O
case	O
'c'	O
:	O
case	O
'd'	O
:	O
case	O
'e'	O
:	O
case	O
'f'	O
:	O
case	O
'g'	O
:	O
case	O
'h'	O
:	O
case	O
'i'	O
:	O
case	O
'j'	O
:	O
case	O
'k'	O
:	O
case	O
'l'	O
:	O
case	O
'm'	O
:	O
case	O
'n'	O
:	O
case	O
'o'	O
:	O
case	O
'p'	O
:	O
case	O
'q'	O
:	O
case	O
'r'	O
:	O
case	O
's'	O
:	O
case	O
't'	O
:	O
case	O
'u'	O
:	O
case	O
'v'	O
:	O
case	O
'w'	O
:	O
case	O
'x'	O
:	O
case	O
'y'	O
:	O
case	O
'z'	O
:	O
case	O
'{'	O
:	O
case	O
'|'	O
:	O
case	O
'}'	O
:	O
case	O
'~'	O
:	O
p	O
++	O
;	O
width	O
++	O
;	O
break	O
;	O
default	O
:	O
{	O
mbstate_t	O
mbstate	O
;	O
memset	O
(	O
&	O
mbstate	O
,	O
0	int
,	O
sizeof	O
mbstate	O
)	O
;	O
do	O
{	O
wchar_t	O
wc	O
;	O
size_t	O
bytes	O
;	O
int	O
w	O
;	O
bytes	O
=	O
mbrtowc	O
(	O
&	O
wc	O
,	O
p	O
,	O
plimit	O
-	O
p	O
,	O
&	O
mbstate	O
)	O
;	O
if	O
(	O
bytes	O
==	O
(	O
size_t	O
)	O
-	O
1	int
)	O
{	O
if	O
(	O
!	O
(	O
flags	O
&	O
MBSW_REJECT_INVALID	O
)	O
)	O
{	O
p	O
++	O
;	O
width	O
++	O
;	O
break	O
;	O
}	O
else	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
bytes	O
==	O
(	O
size_t	O
)	O
-	O
2	int
)	O
{	O
if	O
(	O
!	O
(	O
flags	O
&	O
MBSW_REJECT_INVALID	O
)	O
)	O
{	O
p	O
=	O
plimit	O
;	O
width	O
++	O
;	O
break	O
;	O
}	O
else	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
bytes	O
==	O
0	int
)	O
bytes	O
=	O
1	int
;	O
w	O
=	O
wcwidth	O
(	O
wc	O
)	O
;	O
if	O
(	O
w	O
>=	O
0	int
)	O
{	O
if	O
(	O
w	O
>	O
INT_MAX	O
-	O
width	O
)	O
goto	O
overflow	O
;	O
width	O
+=	O
w	O
;	O
}	O
else	O
if	O
(	O
!	O
(	O
flags	O
&	O
MBSW_REJECT_UNPRINTABLE	O
)	O
)	O
{	O
if	O
(	O
!	O
iswcntrl	O
(	O
wc	O
)	O
)	O
{	O
if	O
(	O
width	O
==	O
INT_MAX	O
)	O
goto	O
overflow	O
;	O
width	O
++	O
;	O
}	O
}	O
else	O
return	O
-	O
1	int
;	O
p	O
+=	O
bytes	O
;	O
}	O
while	O
(	O
!	O
mbsinit	O
(	O
&	O
mbstate	O
)	O
)	O
;	O
}	O
break	O
;	O
}	O
return	O
width	O
;	O
}	O
while	O
(	O
p	O
<	O
plimit	O
)	O
{	O
unsigned	O
char	O
c	O
=	O
(	O
unsigned	O
char	O
)	O
*	O
p	O
++	O
;	O
if	O
(	O
isprint	O
(	O
c	O
)	O
)	O
{	O
if	O
(	O
width	O
==	O
INT_MAX	O
)	O
goto	O
overflow	O
;	O
width	O
++	O
;	O
}	O
else	O
if	O
(	O
!	O
(	O
flags	O
&	O
MBSW_REJECT_UNPRINTABLE	O
)	O
)	O
{	O
if	O
(	O
!	O
iscntrl	O
(	O
c	O
)	O
)	O
{	O
if	O
(	O
width	O
==	O
INT_MAX	O
)	O
goto	O
overflow	O
;	O
width	O
++	O
;	O
}	O
}	O
else	O
return	O
-	O
1	int
;	O
}	O
return	O
width	O
;	O
overflow	O
:	O
return	O
INT_MAX	O
;	O
}	O
