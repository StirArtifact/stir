struct	O
dico_assoc_list	struct
{	O
int	O
flags	int
;	O
dico_list_t	pointer
list	array
;	O
}	O
;	O
struct	O
find_closure	struct
{	O
size_t	long
count	long
;	O
}	O
;	O
static	O
int	O
assoc_key_cmp	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
void	O
*	O
data	pointer
,	O
void	O
*	O
closure	pointer
)	O
{	O
const	O
struct	O
dico_assoc	struct
*	O
aptr	pointer
=	O
item	pointer
;	O
char	O
const	O
*	O
str	pointer
=	O
data	pointer
;	O
struct	O
find_closure	struct
*	O
clos	pointer
=	O
closure	pointer
;	O
if	O
(	O
strcmp	function
(	O
aptr	pointer
->	O
key	pointer
,	O
str	pointer
)	O
==	O
0	int
&&	O
--	O
clos	pointer
->	O
count	long
==	O
0	int
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
int	O
assoc_key_cmp_ci	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
void	O
*	O
data	pointer
,	O
void	O
*	O
closure	pointer
)	O
{	O
const	O
struct	O
dico_assoc	struct
*	O
aptr	pointer
=	O
item	pointer
;	O
char	O
const	O
*	O
str	pointer
=	O
data	pointer
;	O
struct	O
find_closure	struct
*	O
clos	pointer
=	O
closure	pointer
;	O
if	O
(	O
strcasecmp	function
(	O
aptr	pointer
->	O
key	pointer
,	O
str	pointer
)	O
==	O
0	int
&&	O
--	O
clos	pointer
->	O
count	long
==	O
0	int
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
static	O
int	O
assoc_free	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
dico_assoc	struct
*	O
a	pointer
=	O
item	pointer
;	O
free	function
(	O
a	pointer
->	O
value	pointer
)	O
;	O
free	function
(	O
a	pointer
)	O
;	O
return	O
0	int
;	O
}	O
dico_assoc_list_t	pointer
dico_assoc_create	function
(	O
int	O
flags	int
)	O
{	O
struct	O
dico_assoc_list	struct
*	O
assoc	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
assoc	pointer
)	O
)	O
;	O
if	O
(	O
assoc	pointer
)	O
{	O
assoc	pointer
->	O
flags	int
=	O
flags	int
;	O
assoc	pointer
->	O
list	array
=	O
dico_list_create	function
(	O
)	O
;	O
if	O
(	O
!	O
assoc	pointer
->	O
list	array
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
free	function
(	O
assoc	pointer
)	O
;	O
assoc	pointer
=	O
NULL	O
;	O
errno	O
=	O
ec	int
;	O
}	O
else	O
{	O
dico_list_set_comparator	function
(	O
assoc	pointer
->	O
list	array
,	O
(	O
flags	int
&	O
DICO_ASSOC_CI	int
)	O
?	O
assoc_key_cmp_ci	function
:	O
assoc_key_cmp	function
,	O
NULL	O
)	O
;	O
dico_list_set_free_item	function
(	O
assoc	pointer
->	O
list	array
,	O
assoc_free	function
,	O
NULL	O
)	O
;	O
}	O
}	O
return	O
assoc	pointer
;	O
}	O
dico_assoc_list_t	pointer
dico_assoc_dup	function
(	O
dico_assoc_list_t	pointer
src	pointer
)	O
{	O
dico_iterator_t	pointer
itr	pointer
;	O
struct	O
dico_assoc	struct
*	O
p	pointer
;	O
dico_assoc_list_t	pointer
dst	pointer
;	O
dst	pointer
=	O
dico_assoc_create	function
(	O
src	pointer
->	O
flags	int
)	O
;	O
if	O
(	O
dst	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
itr	pointer
=	O
dico_assoc_iterator	function
(	O
src	pointer
)	O
;	O
if	O
(	O
!	O
itr	pointer
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
dico_assoc_destroy	function
(	O
&	O
dst	pointer
)	O
;	O
errno	O
=	O
ec	int
;	O
return	O
NULL	O
;	O
}	O
for	O
(	O
p	pointer
=	O
dico_iterator_first	function
(	O
itr	pointer
)	O
;	O
p	pointer
;	O
p	pointer
=	O
dico_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
if	O
(	O
dico_assoc_append	function
(	O
dst	pointer
,	O
p	pointer
->	O
key	pointer
,	O
p	pointer
->	O
value	pointer
)	O
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
dico_assoc_destroy	function
(	O
&	O
dst	pointer
)	O
;	O
errno	O
=	O
ec	int
;	O
break	O
;	O
}	O
}	O
dico_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
return	O
dst	pointer
;	O
}	O
struct	O
dico_assoc	struct
*	O
_dico_assoc_find_n	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
size_t	long
n	long
)	O
{	O
struct	O
find_closure	struct
clos	pointer
;	O
struct	O
dico_assoc	struct
*	O
res	pointer
;	O
if	O
(	O
!	O
assoc	pointer
||	O
n	long
==	O
0	int
)	O
return	O
NULL	O
;	O
clos	pointer
.	O
count	long
=	O
n	long
;	O
dico_list_set_comparator_data	function
(	O
assoc	pointer
->	O
list	array
,	O
&	O
clos	pointer
)	O
;	O
res	pointer
=	O
dico_list_locate	function
(	O
assoc	pointer
->	O
list	array
,	O
(	O
void	O
*	O
)	O
key	pointer
)	O
;	O
dico_list_set_comparator_data	function
(	O
assoc	pointer
->	O
list	array
,	O
NULL	O
)	O
;	O
return	O
res	pointer
;	O
}	O
const	O
char	O
*	O
dico_assoc_find_n	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
size_t	long
n	long
)	O
{	O
struct	O
dico_assoc	struct
*	O
kvp	pointer
=	O
_dico_assoc_find_n	function
(	O
assoc	pointer
,	O
key	pointer
,	O
n	long
)	O
;	O
return	O
kvp	pointer
?	O
kvp	pointer
->	O
value	pointer
:	O
NULL	O
;	O
}	O
const	O
char	O
*	O
dico_assoc_find	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
)	O
{	O
return	O
dico_assoc_find_n	function
(	O
assoc	pointer
,	O
key	pointer
,	O
1	int
)	O
;	O
}	O
void	O
dico_assoc_remove_n	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
size_t	long
n	long
)	O
{	O
struct	O
find_closure	struct
clos	pointer
;	O
if	O
(	O
n	long
==	O
0	int
)	O
return	O
;	O
clos	pointer
.	O
count	long
=	O
n	long
;	O
dico_list_set_comparator_data	function
(	O
assoc	pointer
->	O
list	array
,	O
&	O
clos	pointer
)	O
;	O
dico_list_remove	function
(	O
assoc	pointer
->	O
list	array
,	O
(	O
void	O
*	O
)	O
key	pointer
,	O
NULL	O
)	O
;	O
dico_list_set_comparator_data	function
(	O
assoc	pointer
->	O
list	array
,	O
NULL	O
)	O
;	O
}	O
void	O
dico_assoc_remove	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
)	O
{	O
return	O
dico_assoc_remove_n	function
(	O
assoc	pointer
,	O
key	pointer
,	O
1	int
)	O
;	O
}	O
int	O
dico_assoc_add	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
value	pointer
,	O
size_t	long
count	long
,	O
int	O
replace	int
)	O
{	O
struct	O
dico_assoc	struct
*	O
a	pointer
;	O
size_t	long
size	long
;	O
if	O
(	O
value	pointer
==	O
NULL	O
)	O
{	O
dico_assoc_remove_n	function
(	O
assoc	pointer
,	O
key	pointer
,	O
count	long
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
!	O
(	O
assoc	pointer
->	O
flags	int
&	O
DICO_ASSOC_MULT	int
)	O
)	O
{	O
a	pointer
=	O
_dico_assoc_find_n	function
(	O
assoc	pointer
,	O
key	pointer
,	O
count	long
)	O
;	O
if	O
(	O
a	pointer
)	O
{	O
if	O
(	O
replace	int
)	O
{	O
char	O
*	O
s	pointer
=	O
strdup	function
(	O
value	pointer
)	O
;	O
if	O
(	O
!	O
s	pointer
)	O
return	O
1	int
;	O
free	function
(	O
a	pointer
->	O
value	pointer
)	O
;	O
a	pointer
->	O
value	pointer
=	O
s	pointer
;	O
return	O
0	int
;	O
}	O
errno	O
=	O
EEXIST	int
;	O
return	O
1	int
;	O
}	O
}	O
size	long
=	O
sizeof	O
(	O
*	O
a	pointer
)	O
+	O
strlen	function
(	O
key	pointer
)	O
+	O
1	int
;	O
a	pointer
=	O
malloc	function
(	O
size	long
)	O
;	O
if	O
(	O
!	O
a	pointer
)	O
return	O
1	int
;	O
a	pointer
->	O
key	pointer
=	O
(	O
char	O
*	O
)	O
(	O
a	pointer
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
a	pointer
->	O
key	pointer
,	O
key	pointer
)	O
;	O
a	pointer
->	O
value	pointer
=	O
strdup	function
(	O
value	pointer
)	O
;	O
if	O
(	O
!	O
a	pointer
->	O
value	pointer
)	O
{	O
int	O
ec	int
=	O
errno	O
;	O
free	function
(	O
a	pointer
)	O
;	O
errno	O
=	O
ec	int
;	O
return	O
1	int
;	O
}	O
return	O
dico_list_append	function
(	O
assoc	pointer
->	O
list	array
,	O
a	pointer
)	O
;	O
}	O
int	O
dico_assoc_append	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
value	pointer
)	O
{	O
return	O
dico_assoc_add	function
(	O
assoc	pointer
,	O
key	pointer
,	O
value	pointer
,	O
1	int
,	O
0	int
)	O
;	O
}	O
int	O
dico_assoc_clear	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
)	O
{	O
if	O
(	O
!	O
assoc	pointer
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
1	int
;	O
}	O
return	O
dico_list_clear	function
(	O
assoc	pointer
->	O
list	array
)	O
;	O
}	O
void	O
dico_assoc_destroy	function
(	O
dico_assoc_list_t	pointer
*	O
passoc	pointer
)	O
{	O
if	O
(	O
passoc	pointer
&&	O
*	O
passoc	pointer
)	O
{	O
dico_assoc_list_t	pointer
assoc	pointer
=	O
*	O
passoc	pointer
;	O
dico_list_destroy	function
(	O
&	O
assoc	pointer
->	O
list	array
)	O
;	O
free	function
(	O
assoc	pointer
)	O
;	O
}	O
}	O
dico_iterator_t	pointer
dico_assoc_iterator	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
)	O
{	O
if	O
(	O
!	O
assoc	pointer
)	O
return	O
NULL	O
;	O
return	O
dico_list_iterator	function
(	O
assoc	pointer
->	O
list	array
)	O
;	O
}	O
size_t	long
dico_assoc_count	function
(	O
dico_assoc_list_t	pointer
assoc	pointer
)	O
{	O
if	O
(	O
!	O
assoc	pointer
)	O
return	O
0	int
;	O
return	O
dico_list_count	function
(	O
assoc	pointer
->	O
list	array
)	O
;	O
}	O
