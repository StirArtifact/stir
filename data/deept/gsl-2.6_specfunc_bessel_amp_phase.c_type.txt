static	O
double	O
bm0_data	array
[	O
21	int
]	O
=	O
{	O
0.09284961637381644	int
,	O
-	O
0.00142987707403484	int
,	O
0.00002830579271257	int
,	O
-	O
0.00000143300611424	int
,	O
0.00000012028628046	int
,	O
-	O
0.00000001397113013	int
,	O
0.00000000204076188	int
,	O
-	O
0.00000000035399669	int
,	O
0.00000000007024759	int
,	O
-	O
0.00000000001554107	int
,	O
0.00000000000376226	int
,	O
-	O
0.00000000000098282	int
,	O
0.00000000000027408	int
,	O
-	O
0.00000000000008091	int
,	O
0.00000000000002511	int
,	O
-	O
0.00000000000000814	int
,	O
0.00000000000000275	int
,	O
-	O
0.00000000000000096	int
,	O
0.00000000000000034	int
,	O
-	O
0.00000000000000012	int
,	O
0.00000000000000004	int
}	O
;	O
const	O
cheb_series	struct
_gsl_sf_bessel_amp_phase_bm0_cs	struct
=	O
{	O
bm0_data	array
,	O
20	int
,	O
-	O
1	int
,	O
1	int
,	O
10	int
}	O
;	O
static	O
double	O
bth0_data	array
[	O
24	int
]	O
=	O
{	O
-	O
0.24639163774300119	int
,	O
0.001737098307508963	int
,	O
-	O
0.000062183633402968	int
,	O
0.000004368050165742	int
,	O
-	O
0.000000456093019869	int
,	O
0.000000062197400101	int
,	O
-	O
0.000000010300442889	int
,	O
0.000000001979526776	int
,	O
-	O
0.000000000428198396	int
,	O
0.000000000102035840	int
,	O
-	O
0.000000000026363898	int
,	O
0.000000000007297935	int
,	O
-	O
0.000000000002144188	int
,	O
0.000000000000663693	int
,	O
-	O
0.000000000000215126	int
,	O
0.000000000000072659	int
,	O
-	O
0.000000000000025465	int
,	O
0.000000000000009229	int
,	O
-	O
0.000000000000003448	int
,	O
0.000000000000001325	int
,	O
-	O
0.000000000000000522	int
,	O
0.000000000000000210	int
,	O
-	O
0.000000000000000087	int
,	O
0.000000000000000036	int
}	O
;	O
const	O
cheb_series	struct
_gsl_sf_bessel_amp_phase_bth0_cs	struct
=	O
{	O
bth0_data	array
,	O
23	int
,	O
-	O
1	int
,	O
1	int
,	O
12	int
}	O
;	O
static	O
double	O
bm1_data	array
[	O
21	int
]	O
=	O
{	O
0.1047362510931285	int
,	O
0.00442443893702345	int
,	O
-	O
0.00005661639504035	int
,	O
0.00000231349417339	int
,	O
-	O
0.00000017377182007	int
,	O
0.00000001893209930	int
,	O
-	O
0.00000000265416023	int
,	O
0.00000000044740209	int
,	O
-	O
0.00000000008691795	int
,	O
0.00000000001891492	int
,	O
-	O
0.00000000000451884	int
,	O
0.00000000000116765	int
,	O
-	O
0.00000000000032265	int
,	O
0.00000000000009450	int
,	O
-	O
0.00000000000002913	int
,	O
0.00000000000000939	int
,	O
-	O
0.00000000000000315	int
,	O
0.00000000000000109	int
,	O
-	O
0.00000000000000039	int
,	O
0.00000000000000014	int
,	O
-	O
0.00000000000000005	int
,	O
}	O
;	O
const	O
cheb_series	struct
_gsl_sf_bessel_amp_phase_bm1_cs	struct
=	O
{	O
bm1_data	array
,	O
20	int
,	O
-	O
1	int
,	O
1	int
,	O
10	int
}	O
;	O
static	O
double	O
bth1_data	array
[	O
24	int
]	O
=	O
{	O
0.74060141026313850	int
,	O
-	O
0.004571755659637690	int
,	O
0.000119818510964326	int
,	O
-	O
0.000006964561891648	int
,	O
0.000000655495621447	int
,	O
-	O
0.000000084066228945	int
,	O
0.000000013376886564	int
,	O
-	O
0.000000002499565654	int
,	O
0.000000000529495100	int
,	O
-	O
0.000000000124135944	int
,	O
0.000000000031656485	int
,	O
-	O
0.000000000008668640	int
,	O
0.000000000002523758	int
,	O
-	O
0.000000000000775085	int
,	O
0.000000000000249527	int
,	O
-	O
0.000000000000083773	int
,	O
0.000000000000029205	int
,	O
-	O
0.000000000000010534	int
,	O
0.000000000000003919	int
,	O
-	O
0.000000000000001500	int
,	O
0.000000000000000589	int
,	O
-	O
0.000000000000000237	int
,	O
0.000000000000000097	int
,	O
-	O
0.000000000000000040	int
,	O
}	O
;	O
const	O
cheb_series	struct
_gsl_sf_bessel_amp_phase_bth1_cs	struct
=	O
{	O
bth1_data	array
,	O
23	int
,	O
-	O
1	int
,	O
1	int
,	O
12	int
}	O
;	O
int	O
gsl_sf_bessel_asymp_Mnu_e	function
(	O
const	O
double	O
nu	double
,	O
const	O
double	O
x	double
,	O
double	O
*	O
result	pointer
)	O
{	O
const	O
double	O
r	pointer
=	O
2.0	int
*	O
nu	double
/	O
x	double
;	O
const	O
double	O
r2	double
=	O
r	pointer
*	O
r	pointer
;	O
const	O
double	O
x2	double
=	O
x	double
*	O
x	double
;	O
const	O
double	O
term1	double
=	O
(	O
r2	double
-	O
1.0	int
/	O
x2	double
)	O
/	O
8.0	int
;	O
const	O
double	O
term2	double
=	O
(	O
r2	double
-	O
1.0	int
/	O
x2	double
)	O
*	O
(	O
r2	double
-	O
9.0	int
/	O
x2	double
)	O
*	O
3.0	int
/	O
128.0	int
;	O
const	O
double	O
Mnu2_c	double
=	O
2.0	int
/	O
(	O
M_PI	int
)	O
*	O
(	O
1.0	int
+	O
term1	double
+	O
term2	double
)	O
;	O
*	O
result	pointer
=	O
sqrt	function
(	O
Mnu2_c	double
)	O
/	O
sqrt	function
(	O
x	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
int	O
gsl_sf_bessel_asymp_thetanu_corr_e	function
(	O
const	O
double	O
nu	double
,	O
const	O
double	O
x	double
,	O
double	O
*	O
result	pointer
)	O
{	O
const	O
double	O
r	pointer
=	O
2.0	int
*	O
nu	double
/	O
x	double
;	O
const	O
double	O
r2	double
=	O
r	pointer
*	O
r	pointer
;	O
const	O
double	O
x2	double
=	O
x	double
*	O
x	double
;	O
const	O
double	O
term1	double
=	O
x	double
*	O
(	O
r2	double
-	O
1.0	int
/	O
x2	double
)	O
/	O
8.0	int
;	O
const	O
double	O
term2	double
=	O
x	double
*	O
(	O
r2	double
-	O
1.0	int
/	O
x2	double
)	O
*	O
(	O
r2	double
-	O
25.0	int
/	O
x2	double
)	O
/	O
384.0	int
;	O
*	O
result	pointer
=	O
(	O
-	O
0.25	int
*	O
M_PI	int
+	O
term1	double
+	O
term2	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
