static	O
inline	O
void	O
swap	function
(	O
void	O
*	O
base	pointer
,	O
size_t	long
size	long
,	O
size_t	long
i	long
,	O
size_t	long
j	long
)	O
{	O
register	O
char	O
*	O
a	pointer
=	O
size	long
*	O
i	long
+	O
(	O
char	O
*	O
)	O
base	pointer
;	O
register	O
char	O
*	O
b	pointer
=	O
size	long
*	O
j	long
+	O
(	O
char	O
*	O
)	O
base	pointer
;	O
register	O
size_t	long
s	pointer
=	O
size	long
;	O
if	O
(	O
i	long
==	O
j	long
)	O
return	O
;	O
do	O
{	O
char	O
tmp	char
=	O
*	O
a	pointer
;	O
*	O
a	pointer
++	O
=	O
*	O
b	pointer
;	O
*	O
b	pointer
++	O
=	O
tmp	char
;	O
}	O
while	O
(	O
--	O
s	pointer
>	O
0	int
)	O
;	O
}	O
static	O
inline	O
void	O
copy	function
(	O
void	O
*	O
dest	pointer
,	O
size_t	long
i	long
,	O
void	O
*	O
src	pointer
,	O
size_t	long
j	long
,	O
size_t	long
size	long
)	O
{	O
register	O
char	O
*	O
a	pointer
=	O
size	long
*	O
i	long
+	O
(	O
char	O
*	O
)	O
dest	pointer
;	O
register	O
char	O
*	O
b	pointer
=	O
size	long
*	O
j	long
+	O
(	O
char	O
*	O
)	O
src	pointer
;	O
register	O
size_t	long
s	pointer
=	O
size	long
;	O
do	O
{	O
*	O
a	pointer
++	O
=	O
*	O
b	pointer
++	O
;	O
}	O
while	O
(	O
--	O
s	pointer
>	O
0	int
)	O
;	O
}	O
void	O
gsl_ran_shuffle	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
void	O
*	O
base	pointer
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
n	long
-	O
1	int
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
{	O
size_t	long
j	long
=	O
gsl_rng_uniform_int	function
(	O
r	pointer
,	O
i	long
+	O
1	int
)	O
;	O
swap	function
(	O
base	pointer
,	O
size	long
,	O
i	long
,	O
j	long
)	O
;	O
}	O
}	O
int	O
gsl_ran_choose	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
void	O
*	O
dest	pointer
,	O
size_t	long
k	long
,	O
void	O
*	O
src	pointer
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
,	O
j	long
=	O
0	int
;	O
if	O
(	O
k	long
>	O
n	long
)	O
{	O
GSL_ERROR	O
(	O
"k is greater than n, cannot sample more than n items"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	long
&&	O
j	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
(	O
n	long
-	O
i	long
)	O
*	O
gsl_rng_uniform	function
(	O
r	pointer
)	O
<	O
k	long
-	O
j	long
)	O
{	O
copy	function
(	O
dest	pointer
,	O
j	long
,	O
src	pointer
,	O
i	long
,	O
size	long
)	O
;	O
j	long
++	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
void	O
gsl_ran_sample	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
void	O
*	O
dest	pointer
,	O
size_t	long
k	long
,	O
void	O
*	O
src	pointer
,	O
size_t	long
n	long
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	long
,	O
j	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
k	long
;	O
i	long
++	O
)	O
{	O
j	long
=	O
gsl_rng_uniform_int	function
(	O
r	pointer
,	O
n	long
)	O
;	O
copy	function
(	O
dest	pointer
,	O
i	long
,	O
src	pointer
,	O
j	long
,	O
size	long
)	O
;	O
}	O
}	O
