static	O
mp_limb_t	long
powlimb	function
(	O
mp_limb_t	long
a	int
,	O
mp_limb_t	long
e	long
)	O
{	O
mp_limb_t	long
r	long
=	O
1	int
;	O
mp_limb_t	long
s	array
=	O
a	int
;	O
for	O
(	O
r	long
=	O
1	int
,	O
s	array
=	O
a	int
;	O
e	long
>	O
0	int
;	O
e	long
>>=	O
1	int
,	O
s	array
*=	O
s	array
)	O
if	O
(	O
e	long
&	O
1	int
)	O
r	long
*=	O
s	array
;	O
return	O
r	long
;	O
}	O
void	O
mpn_broot_invm1	O
(	O
mp_ptr	pointer
rp	pointer
,	O
mp_srcptr	pointer
ap	pointer
,	O
mp_size_t	long
n	long
,	O
mp_limb_t	long
k	int
)	O
{	O
mp_size_t	long
sizes	array
[	O
GMP_LIMB_BITS	int
*	O
2	int
]	O
;	O
mp_ptr	pointer
akm1	pointer
,	O
tp	pointer
,	O
rnp	pointer
,	O
ep	pointer
,	O
scratch	pointer
;	O
mp_limb_t	long
a0	long
,	O
r0	long
,	O
km1	long
,	O
kp1h	long
,	O
kinv	long
;	O
mp_size_t	long
rn	long
;	O
unsigned	O
i	long
;	O
TMP_DECL	O
;	O
ASSERT	O
(	O
n	long
>	O
0	int
)	O
;	O
ASSERT	O
(	O
ap	pointer
[	O
0	int
]	O
&	O
1	int
)	O
;	O
ASSERT	O
(	O
k	int
&	O
1	int
)	O
;	O
ASSERT	O
(	O
k	int
>=	O
3	int
)	O
;	O
TMP_MARK	O
;	O
akm1	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
4	int
*	O
n	long
)	O
;	O
tp	pointer
=	O
akm1	pointer
+	O
n	long
;	O
km1	long
=	O
k	int
-	O
1	int
;	O
mpn_powlo	O
(	O
akm1	pointer
,	O
ap	pointer
,	O
&	O
km1	long
,	O
1	int
,	O
n	long
,	O
tp	pointer
)	O
;	O
a0	long
=	O
ap	pointer
[	O
0	int
]	O
;	O
binvert_limb	O
(	O
kinv	long
,	O
k	int
)	O
;	O
r0	long
=	O
1	int
+	O
(	O
(	O
(	O
k	int
<<	O
2	int
)	O
&	O
(	O
(	O
a0	long
<<	O
1	int
)	O
^	O
(	O
a0	long
<<	O
2	int
)	O
)	O
)	O
&	O
8	int
)	O
;	O
r0	long
=	O
kinv	long
*	O
r0	long
*	O
(	O
k	int
+	O
1	int
-	O
akm1	pointer
[	O
0	int
]	O
*	O
powlimb	function
(	O
r0	long
,	O
k	int
&	O
0x7f	int
)	O
)	O
;	O
r0	long
=	O
kinv	long
*	O
r0	long
*	O
(	O
k	int
+	O
1	int
-	O
akm1	pointer
[	O
0	int
]	O
*	O
powlimb	function
(	O
r0	long
,	O
k	int
&	O
0x7fff	int
)	O
)	O
;	O
r0	long
=	O
kinv	long
*	O
r0	long
*	O
(	O
k	int
+	O
1	int
-	O
akm1	pointer
[	O
0	int
]	O
*	O
powlimb	function
(	O
r0	long
,	O
k	int
)	O
)	O
;	O
{	O
unsigned	O
prec	int
=	O
32	int
;	O
do	O
{	O
r0	long
=	O
kinv	long
*	O
r0	long
*	O
(	O
k	int
+	O
1	int
-	O
akm1	pointer
[	O
0	int
]	O
*	O
powlimb	function
(	O
r0	long
,	O
k	int
)	O
)	O
;	O
prec	int
*=	O
2	int
;	O
}	O
while	O
(	O
prec	int
<	O
GMP_NUMB_BITS	O
)	O
;	O
}	O
rp	pointer
[	O
0	int
]	O
=	O
r0	long
;	O
if	O
(	O
n	long
==	O
1	int
)	O
{	O
TMP_FREE	O
;	O
return	O
;	O
}	O
kp1h	long
=	O
k	int
/	O
2	int
+	O
1	int
;	O
rnp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
2	int
*	O
n	long
+	O
1	int
)	O
;	O
ep	pointer
=	O
rnp	pointer
+	O
n	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
n	long
>	O
1	int
;	O
n	long
=	O
(	O
n	long
+	O
1	int
)	O
/	O
2	int
)	O
sizes	array
[	O
i	long
++	O
]	O
=	O
n	long
;	O
rn	long
=	O
1	int
;	O
while	O
(	O
i	long
--	O
>	O
0	int
)	O
{	O
mpn_sqr	O
(	O
ep	pointer
,	O
rp	pointer
,	O
rn	long
)	O
;	O
mpn_powlo	O
(	O
rnp	pointer
,	O
ep	pointer
,	O
&	O
kp1h	long
,	O
1	int
,	O
sizes	array
[	O
i	long
]	O
,	O
tp	pointer
)	O
;	O
mpn_mullo_n	O
(	O
ep	pointer
,	O
rnp	pointer
,	O
akm1	pointer
,	O
sizes	array
[	O
i	long
]	O
)	O
;	O
ASSERT	O
(	O
mpn_cmp	O
(	O
ep	pointer
,	O
rp	pointer
,	O
rn	long
)	O
==	O
0	int
)	O
;	O
ASSERT	O
(	O
sizes	array
[	O
i	long
]	O
<=	O
2	int
*	O
rn	long
)	O
;	O
mpn_pi1_bdiv_q_1	O
(	O
rp	pointer
+	O
rn	long
,	O
ep	pointer
+	O
rn	long
,	O
sizes	array
[	O
i	long
]	O
-	O
rn	long
,	O
k	int
,	O
kinv	long
,	O
0	int
)	O
;	O
mpn_neg	O
(	O
rp	pointer
+	O
rn	long
,	O
rp	pointer
+	O
rn	long
,	O
sizes	array
[	O
i	long
]	O
-	O
rn	long
)	O
;	O
rn	long
=	O
sizes	array
[	O
i	long
]	O
;	O
}	O
TMP_FREE	O
;	O
}	O
void	O
mpn_broot	O
(	O
mp_ptr	pointer
rp	pointer
,	O
mp_srcptr	pointer
ap	pointer
,	O
mp_size_t	long
n	long
,	O
mp_limb_t	long
k	int
)	O
{	O
mp_ptr	pointer
tp	pointer
;	O
TMP_DECL	O
;	O
ASSERT	O
(	O
n	long
>	O
0	int
)	O
;	O
ASSERT	O
(	O
ap	pointer
[	O
0	int
]	O
&	O
1	int
)	O
;	O
ASSERT	O
(	O
k	int
&	O
1	int
)	O
;	O
if	O
(	O
k	int
==	O
1	int
)	O
{	O
MPN_COPY	O
(	O
rp	pointer
,	O
ap	pointer
,	O
n	long
)	O
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
tp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
n	long
)	O
;	O
mpn_broot_invm1	O
(	O
tp	pointer
,	O
ap	pointer
,	O
n	long
,	O
k	int
)	O
;	O
mpn_mullo_n	O
(	O
rp	pointer
,	O
tp	pointer
,	O
ap	pointer
,	O
n	long
)	O
;	O
TMP_FREE	O
;	O
}	O
