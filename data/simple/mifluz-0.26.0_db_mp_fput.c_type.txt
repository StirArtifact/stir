static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: mp_fput.c,v 1.3 2000/06/28 16:47:02 loic Exp $"	pointer
;	O
int	O
CDB_memp_fput	function
(	O
dbmfp	pointer
,	O
pgaddr	pointer
,	O
flags	int
)	O
DB_MPOOLFILE	struct
*	O
dbmfp	pointer
;	O
void	O
*	O
pgaddr	pointer
;	O
u_int32_t	int
flags	int
;	O
{	O
BH	struct
*	O
bhp	pointer
;	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DB_MPOOL	struct
*	O
dbmp	pointer
;	O
MPOOL	struct
*	O
c_mp	pointer
,	O
*	O
mp	pointer
;	O
int	O
ret	int
,	O
wrote	int
;	O
dbmp	pointer
=	O
dbmfp	pointer
->	O
dbmp	pointer
;	O
dbenv	pointer
=	O
dbmp	pointer
->	O
dbenv	pointer
;	O
mp	pointer
=	O
dbmp	pointer
->	O
reginfo	pointer
[	O
0	int
]	O
.	O
primary	int
;	O
PANIC_CHECK	O
(	O
dbenv	pointer
)	O
;	O
if	O
(	O
flags	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fchk	function
(	O
dbenv	pointer
,	O
"CDB_memp_fput"	pointer
,	O
flags	int
,	O
DB_MPOOL_CLEAN	int
|	O
DB_MPOOL_DIRTY	int
|	O
DB_MPOOL_DISCARD	int
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fcchk	function
(	O
dbenv	pointer
,	O
"CDB_memp_fput"	pointer
,	O
flags	int
,	O
DB_MPOOL_CLEAN	int
,	O
DB_MPOOL_DIRTY	int
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_MPOOL_DIRTY	int
)	O
&&	O
F_ISSET	O
(	O
dbmfp	pointer
,	O
MP_READONLY	int
)	O
)	O
{	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"%s: dirty flag set for readonly file page"	pointer
,	O
CDB___memp_fn	function
(	O
dbmfp	pointer
)	O
)	O
;	O
return	O
(	O
EACCES	int
)	O
;	O
}	O
}	O
R_LOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
if	O
(	O
dbmfp	pointer
->	O
pinref	int
==	O
0	int
)	O
{	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"%s: more pages returned than retrieved"	pointer
,	O
CDB___memp_fn	function
(	O
dbmfp	pointer
)	O
)	O
;	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
EINVAL	int
)	O
;	O
}	O
else	O
--	O
dbmfp	pointer
->	O
pinref	int
;	O
if	O
(	O
dbmfp	pointer
->	O
addr	pointer
!=	O
NULL	O
&&	O
pgaddr	pointer
>=	O
dbmfp	pointer
->	O
addr	pointer
&&	O
(	O
u_int8_t	char
*	O
)	O
pgaddr	pointer
<=	O
(	O
u_int8_t	char
*	O
)	O
dbmfp	pointer
->	O
addr	pointer
+	O
dbmfp	pointer
->	O
len	long
)	O
{	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
bhp	pointer
=	O
(	O
BH	struct
*	O
)	O
(	O
(	O
u_int8_t	char
*	O
)	O
pgaddr	pointer
-	O
SSZA	O
(	O
BH	struct
,	O
buf	pointer
)	O
)	O
;	O
c_mp	pointer
=	O
BH_TO_CACHE	O
(	O
dbmp	pointer
,	O
bhp	pointer
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_MPOOL_CLEAN	int
)	O
&&	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
)	O
{	O
++	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_clean	int
;	O
--	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_dirty	int
;	O
F_CLR	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
;	O
}	O
if	O
(	O
LF_ISSET	O
(	O
DB_MPOOL_DIRTY	int
)	O
&&	O
!	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
)	O
{	O
--	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_clean	int
;	O
++	O
c_mp	pointer
->	O
stat	pointer
.	O
st_page_dirty	int
;	O
F_SET	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
;	O
}	O
if	O
(	O
LF_ISSET	O
(	O
DB_MPOOL_DISCARD	int
)	O
)	O
F_SET	O
(	O
bhp	pointer
,	O
BH_DISCARD	int
)	O
;	O
if	O
(	O
bhp	pointer
->	O
ref	int
==	O
0	int
)	O
{	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"%s: page %lu: unpinned page returned"	pointer
,	O
CDB___memp_fn	function
(	O
dbmfp	pointer
)	O
,	O
(	O
u_long	long
)	O
bhp	pointer
->	O
pgno	int
)	O
;	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
EINVAL	int
)	O
;	O
}	O
if	O
(	O
--	O
bhp	pointer
->	O
ref	int
>	O
0	int
)	O
{	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
SH_TAILQ_REMOVE	O
(	O
&	O
c_mp	pointer
->	O
bhq	struct
,	O
bhp	pointer
,	O
q	struct
,	O
__bh	struct
)	O
;	O
if	O
(	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_DISCARD	int
)	O
)	O
SH_TAILQ_INSERT_HEAD	O
(	O
&	O
c_mp	pointer
->	O
bhq	struct
,	O
bhp	pointer
,	O
q	struct
,	O
__bh	struct
)	O
;	O
else	O
SH_TAILQ_INSERT_TAIL	O
(	O
&	O
c_mp	pointer
->	O
bhq	struct
,	O
bhp	pointer
,	O
q	struct
)	O
;	O
if	O
(	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_WRITE	int
)	O
)	O
{	O
if	O
(	O
F_ISSET	O
(	O
bhp	pointer
,	O
BH_DIRTY	int
)	O
)	O
{	O
if	O
(	O
CDB___memp_bhwrite	function
(	O
dbmp	pointer
,	O
dbmfp	pointer
->	O
mfp	pointer
,	O
bhp	pointer
,	O
NULL	O
,	O
&	O
wrote	int
)	O
!=	O
0	int
||	O
!	O
wrote	int
)	O
F_SET	O
(	O
mp	pointer
,	O
MP_LSN_RETRY	int
)	O
;	O
}	O
else	O
{	O
F_CLR	O
(	O
bhp	pointer
,	O
BH_WRITE	int
)	O
;	O
--	O
mp	pointer
->	O
lsn_cnt	int
;	O
--	O
dbmfp	pointer
->	O
mfp	pointer
->	O
lsn_cnt	int
;	O
}	O
}	O
R_UNLOCK	O
(	O
dbenv	pointer
,	O
dbmp	pointer
->	O
reginfo	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
