bfd_boolean	int
_bfd_bool_bfd_false	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
FALSE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_asymbol_false	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asymbol	struct
*	O
sym	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
FALSE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_false_error	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
FALSE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_link_false_error	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
bfd_link_info	O
*	O
info	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
_bfd_bool_bfd_false_error	function
(	O
abfd	pointer
)	O
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_true	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_link_true	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
bfd_link_info	O
*	O
info	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_bfd_true	function
(	O
bfd	struct
*	O
ibfd	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
obfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_uint_true	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
unsigned	O
int	O
flags	int
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_asection_bfd_asection_true	function
(	O
bfd	struct
*	O
ibfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
isec	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
obfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
osec	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_asymbol_bfd_asymbol_true	function
(	O
bfd	struct
*	O
ibfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asymbol	struct
*	O
isym	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
obfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asymbol	struct
*	O
osym	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_bool_bfd_ptr_true	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
void	O
*	O
ptr	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
void	O
*	O
_bfd_ptr_bfd_null_error	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
_bfd_int_bfd_0	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
0	int
;	O
}	O
unsigned	O
int	O
_bfd_uint_bfd_0	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
0	int
;	O
}	O
long	O
_bfd_long_bfd_0	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
0	int
;	O
}	O
long	O
_bfd_long_bfd_n1_error	function
(	O
bfd	struct
*	O
ignore_abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
void	O
_bfd_void_bfd	function
(	O
bfd	struct
*	O
ignore	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
void	O
_bfd_void_bfd_link	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
bfd_link_info	O
*	O
info	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
void	O
_bfd_void_bfd_asection	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
sec	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
long	O
_bfd_norelocs_get_reloc_upper_bound	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
sec	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
sizeof	O
(	O
arelent	struct
*	O
)	O
;	O
}	O
long	O
_bfd_norelocs_canonicalize_reloc	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
sec	pointer
ATTRIBUTE_UNUSED	O
,	O
arelent	struct
*	O
*	O
relptr	pointer
,	O
asymbol	struct
*	O
*	O
symbols	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
*	O
relptr	pointer
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
void	O
_bfd_norelocs_set_reloc	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
sec	pointer
ATTRIBUTE_UNUSED	O
,	O
arelent	struct
*	O
*	O
relptr	pointer
ATTRIBUTE_UNUSED	O
,	O
unsigned	O
int	O
count	int
ATTRIBUTE_UNUSED	O
)	O
{	O
}	O
bfd_boolean	int
_bfd_nocore_core_file_matches_executable_p	function
(	O
bfd	struct
*	O
ignore_core_bfd	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
ignore_exec_bfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
FALSE	int
;	O
}	O
char	O
*	O
_bfd_nocore_core_file_failing_command	function
(	O
bfd	struct
*	O
ignore_abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
NULL	O
;	O
}	O
int	O
_bfd_nocore_core_file_failing_signal	function
(	O
bfd	struct
*	O
ignore_abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
_bfd_nocore_core_file_pid	function
(	O
bfd	struct
*	O
ignore_abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
0	int
;	O
}	O
const	O
bfd_target	struct
*	O
_bfd_dummy_target	function
(	O
bfd	struct
*	O
ignore_abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_wrong_format	int
)	O
;	O
return	O
0	int
;	O
}	O
void	O
*	O
bfd_malloc	function
(	O
bfd_size_type	long
size	long
)	O
{	O
void	O
*	O
ptr	pointer
;	O
size_t	long
sz	long
=	O
(	O
size_t	long
)	O
size	long
;	O
if	O
(	O
size	long
!=	O
sz	long
||	O
sz	long
>	O
SSIZE_MAX	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
NULL	O
;	O
}	O
ptr	pointer
=	O
malloc	function
(	O
sz	long
)	O
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
&&	O
sz	long
!=	O
0	int
)	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
ptr	pointer
;	O
}	O
void	O
*	O
bfd_malloc2	function
(	O
bfd_size_type	long
nmemb	long
,	O
bfd_size_type	long
size	long
)	O
{	O
if	O
(	O
(	O
nmemb	long
|	O
size	long
)	O
>=	O
HALF_BFD_SIZE_TYPE	O
&&	O
size	long
!=	O
0	int
&&	O
nmemb	long
>	O
~	O
(	O
bfd_size_type	long
)	O
0	int
/	O
size	long
)	O
{	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
bfd_malloc	function
(	O
size	long
*	O
nmemb	long
)	O
;	O
}	O
void	O
*	O
bfd_realloc	function
(	O
void	O
*	O
ptr	pointer
,	O
bfd_size_type	long
size	long
)	O
{	O
void	O
*	O
ret	pointer
;	O
size_t	long
sz	long
=	O
(	O
size_t	long
)	O
size	long
;	O
if	O
(	O
ptr	pointer
==	O
NULL	O
)	O
return	O
bfd_malloc	function
(	O
size	long
)	O
;	O
if	O
(	O
size	long
!=	O
sz	long
||	O
sz	long
>	O
SSIZE_MAX	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
NULL	O
;	O
}	O
ret	pointer
=	O
realloc	function
(	O
ptr	pointer
,	O
sz	long
)	O
;	O
if	O
(	O
ret	pointer
==	O
NULL	O
&&	O
sz	long
!=	O
0	int
)	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
ret	pointer
;	O
}	O
void	O
*	O
bfd_realloc2	function
(	O
void	O
*	O
ptr	pointer
,	O
bfd_size_type	long
nmemb	long
,	O
bfd_size_type	long
size	long
)	O
{	O
if	O
(	O
(	O
nmemb	long
|	O
size	long
)	O
>=	O
HALF_BFD_SIZE_TYPE	O
&&	O
size	long
!=	O
0	int
&&	O
nmemb	long
>	O
~	O
(	O
bfd_size_type	long
)	O
0	int
/	O
size	long
)	O
{	O
bfd_set_error	function
(	O
bfd_error_no_memory	int
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
bfd_realloc	function
(	O
ptr	pointer
,	O
size	long
*	O
nmemb	long
)	O
;	O
}	O
void	O
*	O
bfd_realloc_or_free	function
(	O
void	O
*	O
ptr	pointer
,	O
bfd_size_type	long
size	long
)	O
{	O
void	O
*	O
ret	pointer
=	O
bfd_realloc	function
(	O
ptr	pointer
,	O
size	long
)	O
;	O
if	O
(	O
ret	pointer
==	O
NULL	O
&&	O
ptr	pointer
!=	O
NULL	O
)	O
free	function
(	O
ptr	pointer
)	O
;	O
return	O
ret	pointer
;	O
}	O
void	O
*	O
bfd_zmalloc	function
(	O
bfd_size_type	long
size	long
)	O
{	O
void	O
*	O
ptr	pointer
=	O
bfd_malloc	function
(	O
size	long
)	O
;	O
if	O
(	O
ptr	pointer
!=	O
NULL	O
&&	O
size	long
>	O
0	int
)	O
memset	function
(	O
ptr	pointer
,	O
0	int
,	O
(	O
size_t	long
)	O
size	long
)	O
;	O
return	O
ptr	pointer
;	O
}	O
void	O
*	O
bfd_zmalloc2	function
(	O
bfd_size_type	long
nmemb	long
,	O
bfd_size_type	long
size	long
)	O
{	O
void	O
*	O
ptr	pointer
=	O
bfd_malloc2	function
(	O
nmemb	long
,	O
size	long
)	O
;	O
if	O
(	O
ptr	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
sz	long
=	O
nmemb	long
*	O
size	long
;	O
if	O
(	O
sz	long
>	O
0	int
)	O
memset	function
(	O
ptr	pointer
,	O
0	int
,	O
sz	long
)	O
;	O
}	O
return	O
ptr	pointer
;	O
}	O
bfd_boolean	int
bfd_write_bigendian_4byte_int	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
unsigned	O
int	O
i	pointer
)	O
{	O
bfd_byte	char
buffer	pointer
[	O
4	int
]	O
;	O
bfd_putb32	function
(	O
(	O
bfd_vma	long
)	O
i	pointer
,	O
buffer	pointer
)	O
;	O
return	O
bfd_bwrite	function
(	O
buffer	pointer
,	O
(	O
bfd_size_type	long
)	O
4	int
,	O
abfd	pointer
)	O
==	O
4	int
;	O
}	O
bfd_vma	long
bfd_getb16	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
return	O
(	O
addr	pointer
[	O
0	int
]	O
<<	O
8	int
)	O
|	O
addr	pointer
[	O
1	int
]	O
;	O
}	O
bfd_vma	long
bfd_getl16	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
return	O
(	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
)	O
|	O
addr	pointer
[	O
0	int
]	O
;	O
}	O
bfd_signed_vma	long
bfd_getb_signed_16	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
return	O
COERCE16	O
(	O
(	O
addr	pointer
[	O
0	int
]	O
<<	O
8	int
)	O
|	O
addr	pointer
[	O
1	int
]	O
)	O
;	O
}	O
bfd_signed_vma	long
bfd_getl_signed_16	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
return	O
COERCE16	O
(	O
(	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
)	O
|	O
addr	pointer
[	O
0	int
]	O
)	O
;	O
}	O
void	O
bfd_putb16	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
}	O
void	O
bfd_putl16	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
}	O
void	O
bfd_putb24	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
(	O
data	pointer
>>	O
16	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
}	O
void	O
bfd_putl24	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
(	O
data	pointer
>>	O
16	int
)	O
&	O
0xff	int
;	O
}	O
bfd_vma	long
bfd_getb24	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
<<	O
16	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
;	O
return	O
v	long
;	O
}	O
bfd_vma	long
bfd_getl24	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
<<	O
16	int
;	O
return	O
v	long
;	O
}	O
bfd_vma	long
bfd_getb32	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
<<	O
24	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
16	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
3	int
]	O
;	O
return	O
v	long
;	O
}	O
bfd_vma	long
bfd_getl32	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
<<	O
16	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
3	int
]	O
<<	O
24	int
;	O
return	O
v	long
;	O
}	O
bfd_signed_vma	long
bfd_getb_signed_32	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
<<	O
24	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
16	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
3	int
]	O
;	O
return	O
COERCE32	O
(	O
v	long
)	O
;	O
}	O
bfd_signed_vma	long
bfd_getl_signed_32	function
(	O
const	O
void	O
*	O
p	pointer
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
unsigned	O
long	O
v	long
;	O
v	long
=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
0	int
]	O
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
1	int
]	O
<<	O
8	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
2	int
]	O
<<	O
16	int
;	O
v	long
|=	O
(	O
unsigned	O
long	O
)	O
addr	pointer
[	O
3	int
]	O
<<	O
24	int
;	O
return	O
COERCE32	O
(	O
v	long
)	O
;	O
}	O
bfd_uint64_t	long
bfd_getb64	function
(	O
const	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
bfd_uint64_t	long
v	long
;	O
v	long
=	O
addr	pointer
[	O
0	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
1	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
2	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
3	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
4	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
5	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
6	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
7	int
]	O
;	O
return	O
v	long
;	O
}	O
bfd_uint64_t	long
bfd_getl64	function
(	O
const	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
bfd_uint64_t	long
v	long
;	O
v	long
=	O
addr	pointer
[	O
7	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
6	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
5	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
4	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
3	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
2	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
1	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
0	int
]	O
;	O
return	O
v	long
;	O
}	O
bfd_int64_t	long
bfd_getb_signed_64	function
(	O
const	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
bfd_uint64_t	long
v	long
;	O
v	long
=	O
addr	pointer
[	O
0	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
1	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
2	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
3	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
4	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
5	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
6	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
7	int
]	O
;	O
return	O
COERCE64	O
(	O
v	long
)	O
;	O
}	O
bfd_int64_t	long
bfd_getl_signed_64	function
(	O
const	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
bfd_uint64_t	long
v	long
;	O
v	long
=	O
addr	pointer
[	O
7	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
6	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
5	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
4	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
3	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
2	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
1	int
]	O
;	O
v	long
<<=	O
8	int
;	O
v	long
|=	O
addr	pointer
[	O
0	int
]	O
;	O
return	O
COERCE64	O
(	O
v	long
)	O
;	O
}	O
void	O
bfd_putb32	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
(	O
data	pointer
>>	O
24	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
16	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
3	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
}	O
void	O
bfd_putl32	function
(	O
bfd_vma	long
data	pointer
,	O
void	O
*	O
p	pointer
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
8	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
(	O
data	pointer
>>	O
16	int
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
3	int
]	O
=	O
(	O
data	pointer
>>	O
24	int
)	O
&	O
0xff	int
;	O
}	O
void	O
bfd_putb64	function
(	O
bfd_uint64_t	long
data	pointer
ATTRIBUTE_UNUSED	O
,	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
0	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
7	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
6	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
5	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
3	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
4	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
4	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
3	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
5	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
2	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
6	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
1	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
7	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
0	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
}	O
void	O
bfd_putl64	function
(	O
bfd_uint64_t	long
data	pointer
ATTRIBUTE_UNUSED	O
,	O
void	O
*	O
p	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
addr	pointer
[	O
7	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
7	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
6	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
6	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
5	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
5	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
4	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
4	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
3	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
3	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
2	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
2	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
1	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
1	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
addr	pointer
[	O
0	int
]	O
=	O
(	O
data	pointer
>>	O
(	O
0	int
*	O
8	int
)	O
)	O
&	O
0xff	int
;	O
}	O
void	O
bfd_put_bits	function
(	O
bfd_uint64_t	long
data	pointer
,	O
void	O
*	O
p	pointer
,	O
int	O
bits	int
,	O
bfd_boolean	int
big_p	int
)	O
{	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
int	O
i	pointer
;	O
int	O
bytes	int
;	O
if	O
(	O
bits	int
%	O
8	int
!=	O
0	int
)	O
abort	function
(	O
)	O
;	O
bytes	int
=	O
bits	int
/	O
8	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
bytes	int
;	O
i	pointer
++	O
)	O
{	O
int	O
addr_index	int
=	O
big_p	int
?	O
bytes	int
-	O
i	pointer
-	O
1	int
:	O
i	pointer
;	O
addr	pointer
[	O
addr_index	int
]	O
=	O
data	pointer
&	O
0xff	int
;	O
data	pointer
>>=	O
8	int
;	O
}	O
}	O
bfd_uint64_t	long
bfd_get_bits	function
(	O
const	O
void	O
*	O
p	pointer
,	O
int	O
bits	int
,	O
bfd_boolean	int
big_p	int
)	O
{	O
const	O
bfd_byte	char
*	O
addr	pointer
=	O
(	O
const	O
bfd_byte	char
*	O
)	O
p	pointer
;	O
bfd_uint64_t	long
data	pointer
;	O
int	O
i	pointer
;	O
int	O
bytes	int
;	O
if	O
(	O
bits	int
%	O
8	int
!=	O
0	int
)	O
abort	function
(	O
)	O
;	O
data	pointer
=	O
0	int
;	O
bytes	int
=	O
bits	int
/	O
8	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
bytes	int
;	O
i	pointer
++	O
)	O
{	O
int	O
addr_index	int
=	O
big_p	int
?	O
i	pointer
:	O
bytes	int
-	O
i	pointer
-	O
1	int
;	O
data	pointer
=	O
(	O
data	pointer
<<	O
8	int
)	O
|	O
addr	pointer
[	O
addr_index	int
]	O
;	O
}	O
return	O
data	pointer
;	O
}	O
bfd_boolean	int
_bfd_generic_get_section_contents	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
sec_ptr	pointer
section	pointer
,	O
void	O
*	O
location	pointer
,	O
file_ptr	long
offset	long
,	O
bfd_size_type	long
count	int
)	O
{	O
bfd_size_type	long
sz	long
;	O
if	O
(	O
count	int
==	O
0	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
section	pointer
->	O
compress_status	int
!=	O
COMPRESS_SECTION_NONE	int
)	O
{	O
_bfd_error_handler	function
(	O
_	O
(	O
"%pB: unable to get decompressed section %pA"	pointer
)	O
,	O
abfd	pointer
,	O
section	pointer
)	O
;	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
FALSE	int
;	O
}	O
if	O
(	O
abfd	pointer
->	O
direction	enum
!=	O
write_direction	int
&&	O
section	pointer
->	O
rawsize	long
!=	O
0	int
)	O
sz	long
=	O
section	pointer
->	O
rawsize	long
;	O
else	O
sz	long
=	O
section	pointer
->	O
size	long
;	O
if	O
(	O
offset	long
+	O
count	int
<	O
count	int
||	O
offset	long
+	O
count	int
>	O
sz	long
||	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
&&	O
(	O
(	O
ufile_ptr	long
)	O
section	pointer
->	O
filepos	long
+	O
offset	long
+	O
count	int
>	O
arelt_size	O
(	O
abfd	pointer
)	O
)	O
)	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
FALSE	int
;	O
}	O
if	O
(	O
bfd_seek	function
(	O
abfd	pointer
,	O
section	pointer
->	O
filepos	long
+	O
offset	long
,	O
SEEK_SET	int
)	O
!=	O
0	int
||	O
bfd_bread	function
(	O
location	pointer
,	O
count	int
,	O
abfd	pointer
)	O
!=	O
count	int
)	O
return	O
FALSE	int
;	O
return	O
TRUE	int
;	O
}	O
bfd_boolean	int
_bfd_generic_get_section_contents_in_window	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
sec_ptr	pointer
section	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_window	struct
*	O
w	pointer
ATTRIBUTE_UNUSED	O
,	O
file_ptr	long
offset	long
ATTRIBUTE_UNUSED	O
,	O
bfd_size_type	long
count	int
ATTRIBUTE_UNUSED	O
)	O
{	O
abort	function
(	O
)	O
;	O
}	O
bfd_boolean	int
_bfd_generic_set_section_contents	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
sec_ptr	pointer
section	pointer
,	O
const	O
void	O
*	O
location	pointer
,	O
file_ptr	long
offset	long
,	O
bfd_size_type	long
count	int
)	O
{	O
if	O
(	O
count	int
==	O
0	int
)	O
return	O
TRUE	int
;	O
if	O
(	O
bfd_seek	function
(	O
abfd	pointer
,	O
section	pointer
->	O
filepos	long
+	O
offset	long
,	O
SEEK_SET	int
)	O
!=	O
0	int
||	O
bfd_bwrite	function
(	O
location	pointer
,	O
count	int
,	O
abfd	pointer
)	O
!=	O
count	int
)	O
return	O
FALSE	int
;	O
return	O
TRUE	int
;	O
}	O
unsigned	O
int	O
bfd_log2	function
(	O
bfd_vma	long
x	long
)	O
{	O
unsigned	O
int	O
result	int
=	O
0	int
;	O
if	O
(	O
x	long
<=	O
1	int
)	O
return	O
result	int
;	O
--	O
x	long
;	O
do	O
++	O
result	int
;	O
while	O
(	O
(	O
x	long
>>=	O
1	int
)	O
!=	O
0	int
)	O
;	O
return	O
result	int
;	O
}	O
bfd_boolean	int
bfd_generic_is_local_label_name	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
char	O
locals_prefix	char
=	O
(	O
bfd_get_symbol_leading_char	function
(	O
abfd	pointer
)	O
==	O
'_'	O
)	O
?	O
'L'	O
:	O
'.'	O
;	O
return	O
name	pointer
[	O
0	int
]	O
==	O
locals_prefix	char
;	O
}	O
void	O
_bfd_warn_deprecated	function
(	O
const	O
char	O
*	O
what	pointer
,	O
const	O
char	O
*	O
file	pointer
,	O
int	O
line	int
,	O
const	O
char	O
*	O
func	pointer
)	O
{	O
static	O
size_t	long
mask	long
=	O
0	int
;	O
if	O
(	O
~	O
(	O
size_t	long
)	O
func	pointer
&	O
~	O
mask	long
)	O
{	O
fflush	function
(	O
stdout	pointer
)	O
;	O
if	O
(	O
func	pointer
)	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"Deprecated %s called at %s line %d in %s\n"	pointer
)	O
,	O
what	pointer
,	O
file	pointer
,	O
line	int
,	O
func	pointer
)	O
;	O
else	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"Deprecated %s called\n"	pointer
)	O
,	O
what	pointer
)	O
;	O
fflush	function
(	O
stderr	pointer
)	O
;	O
mask	long
|=	O
~	O
(	O
size_t	long
)	O
func	pointer
;	O
}	O
}	O
bfd_vma	long
_bfd_read_unsigned_leb128	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_byte	char
*	O
buf	pointer
,	O
unsigned	O
int	O
*	O
bytes_read_ptr	pointer
)	O
{	O
bfd_vma	long
result	int
;	O
unsigned	O
int	O
num_read	int
;	O
unsigned	O
int	O
shift	int
;	O
unsigned	O
char	O
byte	char
;	O
result	int
=	O
0	int
;	O
shift	int
=	O
0	int
;	O
num_read	int
=	O
0	int
;	O
do	O
{	O
byte	char
=	O
bfd_get_8	O
(	O
abfd	pointer
,	O
buf	pointer
)	O
;	O
buf	pointer
++	O
;	O
num_read	int
++	O
;	O
result	int
|=	O
(	O
(	O
(	O
bfd_vma	long
)	O
byte	char
&	O
0x7f	int
)	O
<<	O
shift	int
)	O
;	O
shift	int
+=	O
7	int
;	O
}	O
while	O
(	O
byte	char
&	O
0x80	int
)	O
;	O
*	O
bytes_read_ptr	pointer
=	O
num_read	int
;	O
return	O
result	int
;	O
}	O
bfd_vma	long
_bfd_safe_read_leb128	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_byte	char
*	O
data	pointer
,	O
unsigned	O
int	O
*	O
length_return	pointer
,	O
bfd_boolean	int
sign	int
,	O
const	O
bfd_byte	char
*	O
const	O
end	pointer
)	O
{	O
bfd_vma	long
result	int
=	O
0	int
;	O
unsigned	O
int	O
num_read	int
=	O
0	int
;	O
unsigned	O
int	O
shift	int
=	O
0	int
;	O
unsigned	O
char	O
byte	char
=	O
0	int
;	O
while	O
(	O
data	pointer
<	O
end	pointer
)	O
{	O
byte	char
=	O
bfd_get_8	O
(	O
abfd	pointer
,	O
data	pointer
)	O
;	O
data	pointer
++	O
;	O
num_read	int
++	O
;	O
result	int
|=	O
(	O
(	O
bfd_vma	long
)	O
(	O
byte	char
&	O
0x7f	int
)	O
)	O
<<	O
shift	int
;	O
shift	int
+=	O
7	int
;	O
if	O
(	O
(	O
byte	char
&	O
0x80	int
)	O
==	O
0	int
)	O
break	O
;	O
}	O
if	O
(	O
length_return	pointer
!=	O
NULL	O
)	O
*	O
length_return	pointer
=	O
num_read	int
;	O
if	O
(	O
sign	int
&&	O
(	O
shift	int
<	O
8	int
*	O
sizeof	O
(	O
result	int
)	O
)	O
&&	O
(	O
byte	char
&	O
0x40	int
)	O
)	O
result	int
|=	O
-	O
(	O
(	O
bfd_vma	long
)	O
1	int
<<	O
shift	int
)	O
;	O
return	O
result	int
;	O
}	O
bfd_signed_vma	long
_bfd_read_signed_leb128	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_byte	char
*	O
buf	pointer
,	O
unsigned	O
int	O
*	O
bytes_read_ptr	pointer
)	O
{	O
bfd_vma	long
result	int
;	O
unsigned	O
int	O
shift	int
;	O
unsigned	O
int	O
num_read	int
;	O
unsigned	O
char	O
byte	char
;	O
result	int
=	O
0	int
;	O
shift	int
=	O
0	int
;	O
num_read	int
=	O
0	int
;	O
do	O
{	O
byte	char
=	O
bfd_get_8	O
(	O
abfd	pointer
,	O
buf	pointer
)	O
;	O
buf	pointer
++	O
;	O
num_read	int
++	O
;	O
result	int
|=	O
(	O
(	O
(	O
bfd_vma	long
)	O
byte	char
&	O
0x7f	int
)	O
<<	O
shift	int
)	O
;	O
shift	int
+=	O
7	int
;	O
}	O
while	O
(	O
byte	char
&	O
0x80	int
)	O
;	O
if	O
(	O
shift	int
<	O
8	int
*	O
sizeof	O
(	O
result	int
)	O
&&	O
(	O
byte	char
&	O
0x40	int
)	O
)	O
result	int
|=	O
(	O
(	O
(	O
bfd_vma	long
)	O
-	O
1	int
)	O
<<	O
shift	int
)	O
;	O
*	O
bytes_read_ptr	pointer
=	O
num_read	int
;	O
return	O
result	int
;	O
}	O
bfd_boolean	int
_bfd_generic_init_private_section_data	function
(	O
bfd	struct
*	O
ibfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
isec	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd	struct
*	O
obfd	pointer
ATTRIBUTE_UNUSED	O
,	O
asection	struct
*	O
osec	pointer
ATTRIBUTE_UNUSED	O
,	O
struct	O
bfd_link_info	O
*	O
link_info	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
TRUE	int
;	O
}	O
