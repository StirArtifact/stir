static	O
int	O
dico_qp_decode	function
(	O
const	O
char	O
*	O
iptr	pointer
,	O
size_t	long
isize	long
,	O
char	O
*	O
optr	pointer
,	O
size_t	long
osize	long
,	O
size_t	long
*	O
pnbytes	pointer
)	O
{	O
char	O
c	int
;	O
size_t	long
consumed	long
=	O
0	int
;	O
size_t	long
wscount	long
=	O
0	int
;	O
size_t	long
nbytes	long
=	O
0	int
;	O
while	O
(	O
consumed	long
<	O
isize	long
&&	O
nbytes	long
<	O
osize	long
)	O
{	O
c	int
=	O
*	O
iptr	pointer
++	O
;	O
if	O
(	O
ISWS	O
(	O
c	int
)	O
)	O
{	O
wscount	long
++	O
;	O
consumed	long
++	O
;	O
}	O
else	O
{	O
if	O
(	O
wscount	long
)	O
{	O
if	O
(	O
c	int
!=	O
'\r'	O
&&	O
c	int
!=	O
'\n'	O
)	O
{	O
size_t	long
sz	long
;	O
if	O
(	O
consumed	long
>=	O
isize	long
)	O
break	O
;	O
if	O
(	O
nbytes	long
+	O
wscount	long
>	O
osize	long
)	O
sz	long
=	O
osize	long
-	O
nbytes	long
;	O
else	O
sz	long
=	O
wscount	long
;	O
memcpy	function
(	O
optr	pointer
,	O
iptr	pointer
-	O
wscount	long
-	O
1	int
,	O
sz	long
)	O
;	O
optr	pointer
+=	O
sz	long
;	O
nbytes	long
+=	O
sz	long
;	O
if	O
(	O
wscount	long
>	O
sz	long
)	O
{	O
wscount	long
-=	O
sz	long
;	O
break	O
;	O
}	O
}	O
wscount	long
=	O
0	int
;	O
if	O
(	O
nbytes	long
==	O
osize	long
)	O
break	O
;	O
}	O
if	O
(	O
c	int
==	O
'='	O
)	O
{	O
if	O
(	O
consumed	long
+	O
2	int
>=	O
isize	long
)	O
break	O
;	O
else	O
{	O
char	O
chr	int
[	O
3	int
]	O
;	O
int	O
new_c	int
;	O
chr	int
[	O
2	int
]	O
=	O
0	int
;	O
chr	int
[	O
0	int
]	O
=	O
*	O
iptr	pointer
++	O
;	O
if	O
(	O
chr	int
[	O
0	int
]	O
!=	O
'\n'	O
)	O
{	O
chr	int
[	O
1	int
]	O
=	O
*	O
iptr	pointer
++	O
;	O
new_c	int
=	O
strtoul	function
(	O
chr	int
,	O
NULL	O
,	O
16	int
)	O
;	O
*	O
optr	pointer
++	O
=	O
new_c	int
;	O
nbytes	long
++	O
;	O
consumed	long
+=	O
3	int
;	O
}	O
else	O
consumed	long
+=	O
2	int
;	O
}	O
}	O
else	O
if	O
(	O
c	int
==	O
'\r'	O
)	O
{	O
if	O
(	O
consumed	long
+	O
1	int
>=	O
isize	long
)	O
break	O
;	O
else	O
{	O
iptr	pointer
++	O
;	O
*	O
optr	pointer
++	O
=	O
'\n'	O
;	O
nbytes	long
++	O
;	O
consumed	long
+=	O
2	int
;	O
}	O
}	O
else	O
{	O
*	O
optr	pointer
++	O
=	O
c	int
;	O
nbytes	long
++	O
;	O
consumed	long
++	O
;	O
}	O
}	O
}	O
*	O
pnbytes	pointer
=	O
nbytes	long
;	O
return	O
consumed	long
-	O
wscount	long
;	O
}	O
static	O
int	O
dico_qp_encode	function
(	O
const	O
char	O
*	O
iptr	pointer
,	O
size_t	long
isize	long
,	O
char	O
*	O
optr	pointer
,	O
size_t	long
osize	long
,	O
size_t	long
*	O
pnbytes	pointer
)	O
{	O
unsigned	O
int	O
c	int
;	O
size_t	long
consumed	long
=	O
0	int
;	O
size_t	long
nbytes	long
=	O
0	int
;	O
static	O
const	O
char	O
_hexdigits	array
[	O
]	O
=	O
"0123456789ABCDEF"	pointer
;	O
nbytes	long
=	O
0	int
;	O
while	O
(	O
consumed	long
<	O
isize	long
)	O
{	O
int	O
simple_char	int
;	O
c	int
=	O
*	O
(	O
unsigned	O
char	O
*	O
)	O
iptr	pointer
;	O
simple_char	int
=	O
(	O
c	int
>=	O
32	int
&&	O
c	int
<=	O
60	int
)	O
||	O
(	O
c	int
>=	O
62	int
&&	O
c	int
<=	O
126	int
)	O
||	O
c	int
==	O
'\t'	O
||	O
c	int
==	O
'\n'	O
;	O
if	O
(	O
simple_char	int
)	O
{	O
if	O
(	O
nbytes	long
+	O
1	int
>	O
osize	long
)	O
break	O
;	O
*	O
optr	pointer
++	O
=	O
c	int
;	O
nbytes	long
++	O
;	O
iptr	pointer
++	O
;	O
consumed	long
++	O
;	O
}	O
else	O
{	O
if	O
(	O
nbytes	long
+	O
3	int
>	O
osize	long
)	O
break	O
;	O
*	O
optr	pointer
++	O
=	O
'='	O
;	O
*	O
optr	pointer
++	O
=	O
_hexdigits	array
[	O
(	O
c	int
>>	O
4	int
)	O
&	O
0xf	int
]	O
;	O
*	O
optr	pointer
++	O
=	O
_hexdigits	array
[	O
c	int
&	O
0xf	int
]	O
;	O
nbytes	long
+=	O
3	int
;	O
iptr	pointer
++	O
;	O
consumed	long
++	O
;	O
}	O
}	O
*	O
pnbytes	pointer
=	O
nbytes	long
;	O
return	O
consumed	long
;	O
}	O
dico_stream_t	pointer
dico_qp_stream_create	function
(	O
dico_stream_t	pointer
str	pointer
,	O
int	O
mode	int
)	O
{	O
return	O
filter_stream_create	function
(	O
str	pointer
,	O
4	int
,	O
0	int
,	O
mode	int
==	O
FILTER_ENCODE	int
?	O
dico_qp_encode	function
:	O
dico_qp_decode	function
,	O
mode	int
)	O
;	O
}	O
