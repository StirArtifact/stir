static	O
int	O
pstrcmp	function
(	O
const	O
void	O
*	O
p1	pointer
,	O
const	O
void	O
*	O
p2	pointer
)	O
{	O
return	O
strcmp	function
(	O
*	O
(	O
char	O
*	O
*	O
)	O
p1	pointer
,	O
*	O
(	O
char	O
*	O
*	O
)	O
p2	pointer
)	O
;	O
}	O
static	O
int	O
exec_edit_syntax_dialog	function
(	O
const	O
char	O
*	O
*	O
names	pointer
)	O
{	O
int	O
i	long
;	O
Listbox	struct
*	O
syntaxlist	pointer
=	O
create_listbox_window	function
(	O
MAX_ENTRY_LEN	int
,	O
LIST_LINES	int
,	O
_	O
(	O
" Choose syntax highlighting "	pointer
)	O
,	O
NULL	O
)	O
;	O
LISTBOX_APPEND_TEXT	O
(	O
syntaxlist	pointer
,	O
'A'	O
,	O
_	O
(	O
"< Auto >"	pointer
)	O
,	O
NULL	O
)	O
;	O
LISTBOX_APPEND_TEXT	O
(	O
syntaxlist	pointer
,	O
'R'	O
,	O
_	O
(	O
"< Reload Current Syntax >"	pointer
)	O
,	O
NULL	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
names	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
LISTBOX_APPEND_TEXT	O
(	O
syntaxlist	pointer
,	O
0	int
,	O
names	pointer
[	O
i	long
]	O
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
option_auto_syntax	int
&&	O
option_syntax_type	pointer
&&	O
(	O
strcmp	function
(	O
names	pointer
[	O
i	long
]	O
,	O
option_syntax_type	pointer
)	O
==	O
0	int
)	O
)	O
listbox_select_by_number	function
(	O
syntaxlist	pointer
->	O
list	pointer
,	O
i	long
+	O
N_DFLT_ENTRIES	int
)	O
;	O
}	O
return	O
run_listbox	function
(	O
syntaxlist	pointer
)	O
;	O
}	O
void	O
edit_syntax_dialog	function
(	O
void	O
)	O
{	O
char	O
*	O
old_syntax_type	pointer
;	O
int	O
old_auto_syntax	int
,	O
syntax	long
;	O
char	O
*	O
*	O
names	pointer
;	O
int	O
i	long
;	O
int	O
force_reload	int
=	O
0	int
;	O
int	O
count	int
=	O
0	int
;	O
names	pointer
=	O
(	O
char	O
*	O
*	O
)	O
g_malloc	function
(	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
names	pointer
[	O
0	int
]	O
=	O
NULL	O
;	O
edit_load_syntax	function
(	O
NULL	O
,	O
&	O
names	pointer
,	O
NULL	O
)	O
;	O
while	O
(	O
names	pointer
[	O
count	int
++	O
]	O
!=	O
NULL	O
)	O
;	O
qsort	function
(	O
names	pointer
,	O
count	int
-	O
1	int
,	O
sizeof	O
(	O
char	O
*	O
)	O
,	O
pstrcmp	function
)	O
;	O
if	O
(	O
(	O
syntax	long
=	O
exec_edit_syntax_dialog	function
(	O
(	O
const	O
char	O
*	O
*	O
)	O
names	pointer
)	O
)	O
<	O
0	int
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
names	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
g_free	function
(	O
names	pointer
[	O
i	long
]	O
)	O
;	O
}	O
g_free	function
(	O
names	pointer
)	O
;	O
return	O
;	O
}	O
old_auto_syntax	int
=	O
option_auto_syntax	int
;	O
old_syntax_type	pointer
=	O
g_strdup	function
(	O
option_syntax_type	pointer
)	O
;	O
switch	O
(	O
syntax	long
)	O
{	O
case	O
0	int
:	O
option_auto_syntax	int
=	O
1	int
;	O
break	O
;	O
case	O
1	int
:	O
force_reload	int
=	O
1	int
;	O
break	O
;	O
default	O
:	O
option_auto_syntax	int
=	O
0	int
;	O
g_free	function
(	O
option_syntax_type	pointer
)	O
;	O
option_syntax_type	pointer
=	O
g_strdup	function
(	O
names	pointer
[	O
syntax	long
-	O
N_DFLT_ENTRIES	int
]	O
)	O
;	O
}	O
if	O
(	O
(	O
option_auto_syntax	int
&&	O
!	O
old_auto_syntax	int
)	O
||	O
old_auto_syntax	int
||	O
(	O
old_syntax_type	pointer
&&	O
option_syntax_type	pointer
&&	O
(	O
strcmp	function
(	O
old_syntax_type	pointer
,	O
option_syntax_type	pointer
)	O
!=	O
0	int
)	O
)	O
||	O
force_reload	int
)	O
edit_load_syntax	function
(	O
wedit	pointer
,	O
NULL	O
,	O
option_syntax_type	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
names	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
g_free	function
(	O
names	pointer
[	O
i	long
]	O
)	O
;	O
}	O
g_free	function
(	O
names	pointer
)	O
;	O
g_free	function
(	O
old_syntax_type	pointer
)	O
;	O
}	O
