void	O
mpn_toom44_mul	O
(	O
mp_ptr	pointer
pp	pointer
,	O
mp_srcptr	pointer
ap	pointer
,	O
mp_size_t	long
an	long
,	O
mp_srcptr	pointer
bp	pointer
,	O
mp_size_t	long
bn	long
,	O
mp_ptr	pointer
scratch	pointer
)	O
{	O
mp_size_t	long
n	long
,	O
s	array
,	O
t	long
;	O
mp_limb_t	long
cy	long
;	O
enum	O
toom7_flags	enum
flags	enum
;	O
ASSERT	O
(	O
an	long
>=	O
bn	long
)	O
;	O
n	long
=	O
(	O
an	long
+	O
3	int
)	O
>>	O
2	int
;	O
s	array
=	O
an	long
-	O
3	int
*	O
n	long
;	O
t	long
=	O
bn	long
-	O
3	int
*	O
n	long
;	O
ASSERT	O
(	O
0	int
<	O
s	array
&&	O
s	array
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
0	int
<	O
t	long
&&	O
t	long
<=	O
n	long
)	O
;	O
ASSERT	O
(	O
s	array
>=	O
t	long
)	O
;	O
flags	enum
=	O
(	O
enum	O
toom7_flags	enum
)	O
(	O
toom7_w1_neg	int
&	O
mpn_toom_eval_dgr3_pm2	O
(	O
apx	O
,	O
amx	O
,	O
ap	pointer
,	O
n	long
,	O
s	array
,	O
tp	pointer
)	O
)	O
;	O
flags	enum
=	O
(	O
enum	O
toom7_flags	enum
)	O
(	O
flags	enum
^	O
toom7_w1_neg	int
&	O
mpn_toom_eval_dgr3_pm2	O
(	O
bpx	O
,	O
bmx	O
,	O
bp	pointer
,	O
n	long
,	O
t	long
,	O
tp	pointer
)	O
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
v2	O
,	O
apx	O
,	O
bpx	O
,	O
n	long
+	O
1	int
,	O
tp	pointer
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
vm2	O
,	O
amx	O
,	O
bmx	O
,	O
n	long
+	O
1	int
,	O
tp	pointer
)	O
;	O
cy	long
=	O
mpn_addlsh1_n	O
(	O
apx	O
,	O
a1	O
,	O
a0	O
,	O
n	long
)	O
;	O
cy	long
=	O
2	int
*	O
cy	long
+	O
mpn_addlsh1_n	O
(	O
apx	O
,	O
a2	O
,	O
apx	O
,	O
n	long
)	O
;	O
if	O
(	O
s	array
<	O
n	long
)	O
{	O
mp_limb_t	long
cy2	long
;	O
cy2	long
=	O
mpn_addlsh1_n	O
(	O
apx	O
,	O
a3	O
,	O
apx	O
,	O
s	array
)	O
;	O
apx	O
[	O
n	long
]	O
=	O
2	int
*	O
cy	long
+	O
mpn_lshift	O
(	O
apx	O
+	O
s	array
,	O
apx	O
+	O
s	array
,	O
n	long
-	O
s	array
,	O
1	int
)	O
;	O
MPN_INCR_U	O
(	O
apx	O
+	O
s	array
,	O
n	long
+	O
1	int
-	O
s	array
,	O
cy2	long
)	O
;	O
}	O
else	O
apx	O
[	O
n	long
]	O
=	O
2	int
*	O
cy	long
+	O
mpn_addlsh1_n	O
(	O
apx	O
,	O
a3	O
,	O
apx	O
,	O
n	long
)	O
;	O
cy	long
=	O
mpn_addlsh1_n	O
(	O
bpx	O
,	O
b1	O
,	O
b0	O
,	O
n	long
)	O
;	O
cy	long
=	O
2	int
*	O
cy	long
+	O
mpn_addlsh1_n	O
(	O
bpx	O
,	O
b2	O
,	O
bpx	O
,	O
n	long
)	O
;	O
if	O
(	O
t	long
<	O
n	long
)	O
{	O
mp_limb_t	long
cy2	long
;	O
cy2	long
=	O
mpn_addlsh1_n	O
(	O
bpx	O
,	O
b3	O
,	O
bpx	O
,	O
t	long
)	O
;	O
bpx	O
[	O
n	long
]	O
=	O
2	int
*	O
cy	long
+	O
mpn_lshift	O
(	O
bpx	O
+	O
t	long
,	O
bpx	O
+	O
t	long
,	O
n	long
-	O
t	long
,	O
1	int
)	O
;	O
MPN_INCR_U	O
(	O
bpx	O
+	O
t	long
,	O
n	long
+	O
1	int
-	O
t	long
,	O
cy2	long
)	O
;	O
}	O
else	O
bpx	O
[	O
n	long
]	O
=	O
2	int
*	O
cy	long
+	O
mpn_addlsh1_n	O
(	O
bpx	O
,	O
b3	O
,	O
bpx	O
,	O
n	long
)	O
;	O
ASSERT	O
(	O
apx	O
[	O
n	long
]	O
<	O
15	int
)	O
;	O
ASSERT	O
(	O
bpx	O
[	O
n	long
]	O
<	O
15	int
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
vh	O
,	O
apx	O
,	O
bpx	O
,	O
n	long
+	O
1	int
,	O
tp	pointer
)	O
;	O
flags	enum
=	O
(	O
enum	O
toom7_flags	enum
)	O
(	O
flags	enum
|	O
toom7_w3_neg	int
&	O
mpn_toom_eval_dgr3_pm1	O
(	O
apx	O
,	O
amx	O
,	O
ap	pointer
,	O
n	long
,	O
s	array
,	O
tp	pointer
)	O
)	O
;	O
flags	enum
=	O
(	O
enum	O
toom7_flags	enum
)	O
(	O
flags	enum
^	O
toom7_w3_neg	int
&	O
mpn_toom_eval_dgr3_pm1	O
(	O
bpx	O
,	O
bmx	O
,	O
bp	pointer
,	O
n	long
,	O
t	long
,	O
tp	pointer
)	O
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
vm1	O
,	O
amx	O
,	O
bmx	O
,	O
n	long
+	O
1	int
,	O
tp	pointer
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
v1	O
,	O
apx	O
,	O
bpx	O
,	O
n	long
+	O
1	int
,	O
tp	pointer
)	O
;	O
TOOM44_MUL_N_REC	O
(	O
v0	O
,	O
a0	O
,	O
b0	O
,	O
n	long
,	O
tp	pointer
)	O
;	O
if	O
(	O
s	array
>	O
t	long
)	O
mpn_mul	O
(	O
vinf	O
,	O
a3	O
,	O
s	array
,	O
b3	O
,	O
t	long
)	O
;	O
else	O
TOOM44_MUL_N_REC	O
(	O
vinf	O
,	O
a3	O
,	O
b3	O
,	O
s	array
,	O
tp	pointer
)	O
;	O
mpn_toom_interpolate_7pts	O
(	O
pp	pointer
,	O
n	long
,	O
flags	enum
,	O
vm2	O
,	O
vm1	O
,	O
v2	O
,	O
vh	O
,	O
s	array
+	O
t	long
,	O
tp	pointer
)	O
;	O
}	O
