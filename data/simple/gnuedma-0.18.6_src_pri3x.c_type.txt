ESint32	long
EDMAPROC	O
edma_met3_pargs	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
EPChar	pointer
Sig	array
,	O
ESint32	long
virt	long
,	O
va_list	pointer
p	pointer
)	O
{	O
OBJID	long
iObj	long
,	O
r	long
;	O
ESint32	long
indx	long
,	O
pos	long
,	O
i	long
;	O
ESint32	long
Tipo	long
;	O
POBJ	pointer
pObj	pointer
;	O
PPROC	pointer
Func	pointer
=	O
NULL	O
;	O
ESint32	long
ret_val	long
;	O
CLASSID	long
cid	pointer
;	O
long	O
*	O
p2	array
[	O
16	int
]	O
;	O
va_list	pointer
vc	pointer
;	O
va_copy	O
(	O
vc	pointer
,	O
p	pointer
)	O
;	O
if	O
(	O
(	O
edma_check_obj_id1	function
(	O
IdObj	long
,	O
"edma_met3_pargs"	pointer
,	O
Id1	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
r	long
=	O
_edma_locate_method	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
Sig	array
,	O
&	O
pos	long
,	O
&	O
indx	long
)	O
;	O
if	O
(	O
r	long
==	O
-	O
1	int
)	O
return	O
_edma_system_exception	function
(	O
"[edma_met3_pargs] Can't run method '%s'"	pointer
" on object %d of class '%s'"	pointer
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
if	O
(	O
(	O
r	long
==	O
IdObj	long
)	O
&&	O
pos	long
)	O
{	O
edma_printf_err	function
(	O
"[edma_met3_pargs] Inheritance cycle detected, running "	pointer
"method '%s' in object %ld of class '%s'"	pointer
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
return	O
-	O
1	int
;	O
}	O
pObj	pointer
=	O
gObj	O
[	O
r	long
]	O
;	O
Tipo	long
=	O
pObj	pointer
->	O
IdClass	long
;	O
if	O
(	O
indx	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
pObj	pointer
->	O
IdSIU	long
!=	O
-	O
1	int
)	O
{	O
ret_val	long
=	O
(	O
ESint32	long
)	O
edma_met3	function
(	O
IdObj	long
,	O
"Met3"	pointer
,	O
pObj	pointer
->	O
IdSIU	long
,	O
Id1	pointer
+	O
pos	long
,	O
p	pointer
)	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
ret_val	long
;	O
}	O
return	O
_edma_system_exception	function
(	O
"[edma_met3_pargs] Method '%s' "	pointer
"not defined in class '%s'"	pointer
,	O
Id1	pointer
,	O
gClass	O
[	O
Tipo	long
]	O
->	O
ClassName	array
)	O
;	O
}	O
else	O
{	O
pObj	pointer
->	O
last_met	long
=	O
indx	long
;	O
if	O
(	O
(	O
pClass	pointer
[	O
Tipo	long
]	O
->	O
Met	pointer
[	O
indx	long
]	O
.	O
Virtual	char
)	O
&&	O
(	O
virt	long
==	O
1	int
)	O
)	O
{	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
gClass	O
[	O
Tipo	long
]	O
->	O
nMetVir	long
;	O
i	long
++	O
)	O
if	O
(	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Ind	long
==	O
indx	long
)	O
break	O
;	O
if	O
(	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Flag	char
==	O
1	int
)	O
{	O
iObj	long
=	O
(	O
(	O
POBJ	pointer
)	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Obj	long
)	O
->	O
IdObj	long
;	O
Func	pointer
=	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Func	pointer
;	O
cid	pointer
=	O
gObj	O
[	O
iObj	long
]	O
->	O
IdClass	long
;	O
pClass	pointer
[	O
cid	pointer
]	O
->	O
nRef	long
++	O
;	O
p2	array
[	O
0	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
1	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
2	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
3	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
4	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
5	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
6	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
7	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
8	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
_edma_stack_execution_add_obj	function
(	O
iObj	long
)	O
;	O
ret_val	long
=	O
(	O
ESint32	long
)	O
Func	pointer
(	O
iObj	long
,	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Id	long
,	O
p2	array
[	O
0	int
]	O
,	O
p2	array
[	O
1	int
]	O
,	O
p2	array
[	O
2	int
]	O
,	O
p2	array
[	O
3	int
]	O
,	O
p2	array
[	O
4	int
]	O
,	O
p2	array
[	O
5	int
]	O
,	O
p2	array
[	O
6	int
]	O
,	O
p2	array
[	O
7	int
]	O
,	O
p2	array
[	O
8	int
]	O
)	O
;	O
_edma_stack_execution_del_obj	function
(	O
iObj	long
)	O
;	O
pClass	pointer
[	O
cid	pointer
]	O
->	O
nRef	long
--	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
ret_val	long
;	O
}	O
Func	pointer
=	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Func	pointer
;	O
pObj	pointer
=	O
(	O
(	O
POBJ	pointer
)	O
pObj	pointer
->	O
vTable	pointer
[	O
i	long
]	O
.	O
Obj	long
)	O
;	O
if	O
(	O
pObj	pointer
==	O
NULL	O
)	O
iObj	long
=	O
-	O
1	int
;	O
else	O
iObj	long
=	O
pObj	pointer
->	O
IdObj	long
;	O
}	O
else	O
{	O
Func	pointer
=	O
(	O
PPROC	pointer
)	O
pClass	pointer
[	O
Tipo	long
]	O
->	O
met_func	pointer
[	O
indx	long
]	O
.	O
Func	pointer
;	O
iObj	long
=	O
r	long
;	O
}	O
cid	pointer
=	O
gObj	O
[	O
iObj	long
]	O
->	O
IdClass	long
;	O
pClass	pointer
[	O
cid	pointer
]	O
->	O
nRef	long
++	O
;	O
p2	array
[	O
0	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
1	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
2	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
3	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
4	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
5	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
6	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
7	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
p2	array
[	O
8	int
]	O
=	O
va_arg	O
(	O
p	pointer
,	O
long	O
*	O
)	O
;	O
_edma_stack_execution_add_obj	function
(	O
iObj	long
)	O
;	O
ret_val	long
=	O
(	O
ESint32	long
)	O
Func	pointer
(	O
iObj	long
,	O
p2	array
[	O
0	int
]	O
,	O
p2	array
[	O
1	int
]	O
,	O
p2	array
[	O
2	int
]	O
,	O
p2	array
[	O
3	int
]	O
,	O
p2	array
[	O
4	int
]	O
,	O
p2	array
[	O
5	int
]	O
,	O
p2	array
[	O
6	int
]	O
,	O
p2	array
[	O
7	int
]	O
,	O
p2	array
[	O
8	int
]	O
)	O
;	O
_edma_stack_execution_del_obj	function
(	O
iObj	long
)	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
pClass	pointer
[	O
cid	pointer
]	O
->	O
nRef	long
--	O
;	O
return	O
ret_val	long
;	O
}	O
edma_printf	function
(	O
"[emda_met3_pargs] You shouldn't been seeing this message. "	pointer
"Method: %s"	pointer
,	O
Id1	pointer
)	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_wprop3_pargs	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
va_list	pointer
p	pointer
)	O
{	O
OBJID	long
r	long
;	O
ESint32	long
indx	long
,	O
pos	long
,	O
ret_val	long
;	O
ESint32	long
Tipo	long
;	O
EPChar	pointer
Id	long
=	O
NULL	O
;	O
POBJ	pointer
pObj	pointer
;	O
va_list	pointer
vc	pointer
;	O
va_copy	O
(	O
vc	pointer
,	O
p	pointer
)	O
;	O
if	O
(	O
(	O
edma_check_obj_id1	function
(	O
IdObj	long
,	O
"edma_write_prop3"	pointer
,	O
Id1	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
r	long
=	O
_edma_locate_property	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
pos	long
,	O
&	O
indx	long
)	O
;	O
if	O
(	O
r	long
==	O
-	O
1	int
)	O
return	O
_edma_system_exception	function
(	O
"[edma_wprop3_pargs] Can't write "	pointer
"Property '%s' on Object %d "	pointer
"of class '%s'"	pointer
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
pObj	pointer
=	O
gObj	O
[	O
r	long
]	O
;	O
Tipo	long
=	O
pObj	pointer
->	O
IdClass	long
;	O
if	O
(	O
indx	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
pObj	pointer
->	O
IdSIU	long
!=	O
-	O
1	int
)	O
{	O
ret_val	long
=	O
(	O
ESint32	long
)	O
edma_met3	function
(	O
IdObj	long
,	O
"WProp3"	pointer
,	O
pObj	pointer
->	O
IdSIU	long
,	O
Id1	pointer
+	O
pos	long
,	O
p	pointer
)	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
ret_val	long
;	O
}	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
_edma_system_exception	function
(	O
"[edma_wprop3_pargs] Property '%s' "	pointer
"not defined in class '%s'"	pointer
,	O
Id	long
,	O
gClass	O
[	O
Tipo	long
]	O
->	O
ClassName	array
)	O
;	O
}	O
else	O
{	O
_edma_wprop1_pargs	function
(	O
pObj	pointer
->	O
IdObj	long
,	O
indx	long
,	O
p	pointer
)	O
;	O
}	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_rprop3_pargs	function
(	O
OBJID	long
IdObj	long
,	O
EPChar	pointer
Id1	pointer
,	O
va_list	pointer
p	pointer
)	O
{	O
OBJID	long
r	long
;	O
ESint32	long
indx	long
,	O
pos	long
,	O
ret_val	long
;	O
ESint32	long
Tipo	long
;	O
EPChar	pointer
Id	long
=	O
NULL	O
;	O
POBJ	pointer
pObj	pointer
;	O
va_list	pointer
vc	pointer
;	O
va_copy	O
(	O
vc	pointer
,	O
p	pointer
)	O
;	O
if	O
(	O
(	O
edma_check_obj_id1	function
(	O
IdObj	long
,	O
"edma_rprop3_prop3"	pointer
,	O
Id1	pointer
)	O
)	O
==	O
-	O
1	int
)	O
return	O
-	O
1	int
;	O
r	long
=	O
_edma_locate_property	function
(	O
IdObj	long
,	O
Id1	pointer
,	O
&	O
pos	long
,	O
&	O
indx	long
)	O
;	O
if	O
(	O
r	long
==	O
-	O
1	int
)	O
return	O
_edma_system_exception	function
(	O
"[edma_rprop3_pargs] Can't write "	pointer
"Property '%s' on Object %d "	pointer
"of class '%s'"	pointer
,	O
Id1	pointer
,	O
IdObj	long
,	O
gClass	O
[	O
gObj	O
[	O
IdObj	long
]	O
->	O
IdClass	long
]	O
->	O
ClassName	array
)	O
;	O
pObj	pointer
=	O
gObj	O
[	O
r	long
]	O
;	O
Tipo	long
=	O
pObj	pointer
->	O
IdClass	long
;	O
if	O
(	O
indx	long
==	O
-	O
1	int
)	O
{	O
if	O
(	O
pObj	pointer
->	O
IdSIU	long
!=	O
-	O
1	int
)	O
{	O
ret_val	long
=	O
(	O
ESint32	long
)	O
edma_met3	function
(	O
IdObj	long
,	O
"RProp3"	pointer
,	O
pObj	pointer
->	O
IdSIU	long
,	O
Id1	pointer
+	O
pos	long
,	O
p	pointer
)	O
;	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
ret_val	long
;	O
}	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
_edma_system_exception	function
(	O
"[edma_rprop3_pargs] Property '%s' "	pointer
"not defined in class '%s'"	pointer
,	O
Id	long
,	O
gClass	O
[	O
Tipo	long
]	O
->	O
ClassName	array
)	O
;	O
}	O
else	O
{	O
_edma_rprop1_pargs	function
(	O
pObj	pointer
->	O
IdObj	long
,	O
indx	long
,	O
p	pointer
)	O
;	O
}	O
va_copy	O
(	O
p	pointer
,	O
vc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
