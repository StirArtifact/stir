static	O
void	O
recset_parse_args	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
;	O
static	O
void	O
recset_process_actions	function
(	O
rec_db_t	pointer
db	pointer
)	O
;	O
char	O
*	O
recutl_sex_str	pointer
=	O
NULL	O
;	O
rec_sex_t	pointer
recutl_sex	pointer
=	O
NULL	O
;	O
char	O
*	O
recutl_quick_str	pointer
=	O
NULL	O
;	O
char	O
*	O
recutl_fex_str	pointer
=	O
NULL	O
;	O
rec_fex_t	pointer
recutl_fex	pointer
=	O
NULL	O
;	O
char	O
*	O
recutl_type	pointer
=	O
NULL	O
;	O
int	O
recset_action	int
=	O
REC_SET_ACT_NONE	int
;	O
char	O
*	O
recset_value	pointer
=	O
NULL	O
;	O
char	O
*	O
recset_new_field_name	pointer
=	O
NULL	O
;	O
bool	bool
recutl_insensitive	bool
=	O
false	int
;	O
char	O
*	O
recset_file	pointer
=	O
NULL	O
;	O
bool	bool
recset_force	bool
=	O
false	int
;	O
bool	bool
recset_verbose	bool
=	O
false	int
;	O
bool	bool
recset_external	bool
=	O
true	int
;	O
bool	bool
recset_descriptor_renamed	bool
=	O
false	int
;	O
size_t	long
recutl_random	long
=	O
0	int
;	O
enum	O
{	O
COMMON_ARGS	O
,	O
RECORD_SELECTION_ARGS	O
,	O
FIELD_EXPR_ARG	int
,	O
ADD_ACTION_ARG	int
,	O
RENAME_ACTION_ARG	int
,	O
DELETE_ACTION_ARG	int
,	O
COMMENT_ACTION_ARG	int
,	O
SET_ACTION_ARG	int
,	O
SET_ADD_ACTION_ARG	int
,	O
FORCE_ARG	int
,	O
VERBOSE_ARG	int
,	O
NO_EXTERNAL_ARG	int
}	O
;	O
static	O
const	O
struct	O
option	struct
GNU_longOptions	array
[	O
]	O
=	O
{	O
COMMON_LONG_ARGS	O
,	O
RECORD_SELECTION_LONG_ARGS	O
,	O
{	O
"fields"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
FIELD_EXPR_ARG	int
}	O
,	O
{	O
"add"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
ADD_ACTION_ARG	int
}	O
,	O
{	O
"rename"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
RENAME_ACTION_ARG	int
}	O
,	O
{	O
"delete"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
DELETE_ACTION_ARG	int
}	O
,	O
{	O
"comment"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
COMMENT_ACTION_ARG	int
}	O
,	O
{	O
"set"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
SET_ACTION_ARG	int
}	O
,	O
{	O
"set-add"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
SET_ADD_ACTION_ARG	int
}	O
,	O
{	O
"force"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
FORCE_ARG	int
}	O
,	O
{	O
"verbose"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
VERBOSE_ARG	int
}	O
,	O
{	O
"no-external"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
NO_EXTERNAL_ARG	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
void	O
recutl_print_help	function
(	O
void	O
)	O
{	O
printf	function
(	O
_	O
(	O
"Usage: recset [OPTION]... [FILE]...\n"	pointer
)	O
)	O
;	O
fputs	function
(	O
_	O
(	O
"Alter or delete fields in records.\n"	pointer
)	O
,	O
stdout	pointer
)	O
;	O
puts	function
(	O
""	pointer
)	O
;	O
fputs	function
(	O
_	O
(	O
"      --no-external                   don't use external descriptors.\n      --force                         alter the records even if violating record\n                                        restrictions.\n"	pointer
)	O
,	O
stdout	pointer
)	O
;	O
recutl_print_help_common	function
(	O
)	O
;	O
puts	function
(	O
""	pointer
)	O
;	O
recutl_print_help_record_selection	function
(	O
)	O
;	O
puts	function
(	O
""	pointer
)	O
;	O
fputs	function
(	O
_	O
(	O
"Field selection options:\n  -f, --fields=FIELDS                 comma-separated list of field names with optional\n                                        subscripts.\n"	pointer
)	O
,	O
stdout	pointer
)	O
;	O
puts	function
(	O
""	pointer
)	O
;	O
fputs	function
(	O
_	O
(	O
"Actions:\n  -s, --set=VALUE                     change the value of the selected fields.\n  -a, --add=VALUE                     add the selected fields with the given value.\n  -S, --set-add=VALUE                 change the value of the selected fields.  If they don't\n                                        exist then add a new field with that value.\n  -r, --rename=NAME                   rename the selected fields to a given name.  If an entire\n                                        record set is selected then the field is renamed in the\n                                        record descriptor as well.\n  -d, --delete                        delete the selected fields.\n  -c, --comment                       comment out the selected fields.\n"	pointer
)	O
,	O
stdout	pointer
)	O
;	O
puts	function
(	O
""	pointer
)	O
;	O
recutl_print_help_footer	function
(	O
)	O
;	O
}	O
static	O
void	O
recset_parse_args	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
ret	int
;	O
char	O
c	int
;	O
while	O
(	O
(	O
ret	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	pointer
,	O
RECORD_SELECTION_SHORT_ARGS	pointer
"dct:s:S:a:f:r:"	pointer
,	O
GNU_longOptions	array
,	O
NULL	O
)	O
)	O
!=	O
-	O
1	int
)	O
{	O
c	int
=	O
ret	int
;	O
switch	O
(	O
c	int
)	O
{	O
COMMON_ARGS_CASES	O
RECORD_SELECTION_ARGS_CASES	O
case	O
FORCE_ARG	int
:	O
{	O
recset_force	bool
=	O
true	int
;	O
break	O
;	O
}	O
case	O
VERBOSE_ARG	int
:	O
{	O
recset_verbose	bool
=	O
true	int
;	O
break	O
;	O
}	O
case	O
FIELD_EXPR_ARG	int
:	O
case	O
'f'	O
:	O
{	O
recutl_fex_str	pointer
=	O
xstrdup	function
(	O
optarg	pointer
)	O
;	O
if	O
(	O
!	O
rec_fex_check	function
(	O
recutl_fex_str	pointer
,	O
REC_FEX_SUBSCRIPTS	int
)	O
)	O
{	O
recutl_fatal	function
(	O
_	O
(	O
"invalid field expression in -f.\n"	pointer
)	O
)	O
;	O
}	O
recutl_fex	pointer
=	O
rec_fex_new	function
(	O
recutl_fex_str	pointer
,	O
REC_FEX_SUBSCRIPTS	int
)	O
;	O
if	O
(	O
!	O
recutl_fex	pointer
)	O
{	O
recutl_fatal	function
(	O
_	O
(	O
"creating the field expression.\n"	pointer
)	O
)	O
;	O
}	O
rec_fex_sort	function
(	O
recutl_fex	pointer
)	O
;	O
break	O
;	O
}	O
case	O
SET_ACTION_ARG	int
:	O
case	O
's'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
recset_action	int
=	O
REC_SET_ACT_SET	int
;	O
recset_value	pointer
=	O
xstrdup	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
}	O
case	O
RENAME_ACTION_ARG	int
:	O
case	O
'r'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
if	O
(	O
rec_fex_size	function
(	O
recutl_fex	pointer
)	O
!=	O
1	int
)	O
{	O
recutl_fatal	function
(	O
_	O
(	O
"the rename operation requires just one field with an optional subscript.\n"	pointer
)	O
)	O
;	O
}	O
recset_action	int
=	O
REC_SET_ACT_RENAME	int
;	O
recset_value	pointer
=	O
xstrdup	function
(	O
optarg	pointer
)	O
;	O
recset_new_field_name	pointer
=	O
recset_value	pointer
;	O
if	O
(	O
!	O
rec_field_name_p	function
(	O
recset_new_field_name	pointer
)	O
)	O
{	O
recutl_fatal	function
(	O
_	O
(	O
"invalid field name %s.\n"	pointer
)	O
,	O
recset_value	pointer
)	O
;	O
}	O
break	O
;	O
}	O
case	O
ADD_ACTION_ARG	int
:	O
case	O
'a'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
recset_action	int
=	O
REC_SET_ACT_ADD	int
;	O
recset_value	pointer
=	O
xstrdup	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
}	O
case	O
SET_ADD_ACTION_ARG	int
:	O
case	O
'S'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
recset_action	int
=	O
REC_SET_ACT_SETADD	int
;	O
recset_value	pointer
=	O
xstrdup	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
}	O
case	O
DELETE_ACTION_ARG	int
:	O
case	O
'd'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
recset_action	int
=	O
REC_SET_ACT_DELETE	int
;	O
break	O
;	O
}	O
case	O
COMMENT_ACTION_ARG	int
:	O
case	O
'c'	O
:	O
{	O
CHECK_ACTION_PREREQ	O
;	O
recset_action	int
=	O
REC_SET_ACT_COMMENT	int
;	O
break	O
;	O
}	O
case	O
NO_EXTERNAL_ARG	int
:	O
{	O
recset_external	bool
=	O
false	int
;	O
break	O
;	O
}	O
default	O
:	O
{	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
optind	int
<	O
argc	int
)	O
{	O
if	O
(	O
(	O
argc	int
-	O
optind	int
)	O
!=	O
1	int
)	O
{	O
recutl_print_help	function
(	O
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
recset_file	pointer
=	O
argv	pointer
[	O
optind	int
++	O
]	O
;	O
}	O
}	O
static	O
void	O
recset_process_actions	function
(	O
rec_db_t	pointer
db	pointer
)	O
{	O
int	O
flags	int
=	O
0	int
;	O
if	O
(	O
recutl_insensitive	bool
)	O
{	O
flags	int
=	O
flags	int
|	O
REC_F_ICASE	int
;	O
}	O
if	O
(	O
!	O
rec_db_set	function
(	O
db	pointer
,	O
recutl_type	pointer
,	O
recutl_index	function
(	O
)	O
,	O
recutl_sex	pointer
,	O
recutl_quick_str	pointer
,	O
recutl_random	long
,	O
recutl_fex	pointer
,	O
recset_action	int
,	O
recset_value	pointer
,	O
flags	int
)	O
)	O
recutl_out_of_memory	function
(	O
)	O
;	O
if	O
(	O
!	O
recset_force	bool
&&	O
db	pointer
)	O
{	O
recutl_check_integrity	function
(	O
db	pointer
,	O
recset_verbose	bool
,	O
recset_external	bool
)	O
;	O
}	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	pointer
[	O
]	O
)	O
{	O
rec_db_t	pointer
db	pointer
;	O
recutl_init	function
(	O
"recset"	pointer
)	O
;	O
recset_parse_args	function
(	O
argc	int
,	O
argv	pointer
)	O
;	O
db	pointer
=	O
recutl_read_db_from_file	function
(	O
recset_file	pointer
)	O
;	O
if	O
(	O
!	O
db	pointer
)	O
{	O
recutl_fatal	function
(	O
_	O
(	O
"cannot read file %s\n"	pointer
)	O
,	O
recset_file	pointer
)	O
;	O
}	O
recset_process_actions	function
(	O
db	pointer
)	O
;	O
if	O
(	O
!	O
recutl_file_is_writable	function
(	O
recset_file	pointer
)	O
)	O
{	O
recutl_error	function
(	O
_	O
(	O
"file %s is not writable.\n"	pointer
)	O
,	O
recset_file	pointer
)	O
;	O
return	O
EXIT_FAILURE	int
;	O
}	O
recutl_write_db_to_file	function
(	O
db	pointer
,	O
recset_file	pointer
)	O
;	O
return	O
EXIT_SUCCESS	int
;	O
}	O
