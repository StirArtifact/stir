typedef	O
int	O
(	O
*	O
opfn	pointer
)	O
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
;	O
struct	O
optab	struct
{	O
char	O
*	O
name	pointer
;	O
opfn	pointer
fun	pointer
;	O
}	O
;	O
static	O
unsigned	O
*	O
strtowc	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
unsigned	O
*	O
buf	pointer
;	O
if	O
(	O
utf8_mbstr_to_wc	function
(	O
str	pointer
,	O
&	O
buf	pointer
,	O
NULL	O
)	O
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
"cannot convert \"%s\""	pointer
,	O
str	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
return	O
buf	pointer
;	O
}	O
static	O
int	O
help	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
printf	function
(	O
"No more help, sorry"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_strlen	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
1	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires one argument"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
printf	function
(	O
"%lu\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
utf8_strlen	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_strcasecmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_strcasecmp	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
argv	pointer
[	O
1	int
]	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_strncasecmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
3	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires three arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_strncasecmp	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
argv	pointer
[	O
1	int
]	O
,	O
atoi	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strcmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_wc_strcmp	function
(	O
wa	pointer
,	O
wb	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strncmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
3	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires three arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_wc_strncmp	function
(	O
wa	pointer
,	O
wb	pointer
,	O
atoi	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strcasecmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_wc_strcasecmp	function
(	O
wa	pointer
,	O
wb	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strncasecmp	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
3	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires three arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
printf	function
(	O
"%d\n"	pointer
,	O
utf8_wc_strncasecmp	function
(	O
wa	pointer
,	O
wb	pointer
,	O
atoi	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
)	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_toupper	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
1	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires one arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
utf8_toupper	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
abort	function
(	O
)	O
;	O
printf	function
(	O
"%s\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_tolower	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
1	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires one argument"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
if	O
(	O
utf8_tolower	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
abort	function
(	O
)	O
;	O
printf	function
(	O
"%s\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strchr	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
const	O
unsigned	O
*	O
p	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
p	pointer
=	O
utf8_wc_strchr	function
(	O
wa	pointer
,	O
wb	pointer
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
2	int
;	O
printf	function
(	O
"%td\n"	pointer
,	O
p	pointer
-	O
wa	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strchr_ci	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
const	O
unsigned	O
*	O
p	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
p	pointer
=	O
utf8_wc_strchr_ci	function
(	O
wa	pointer
,	O
wb	pointer
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
2	int
;	O
printf	function
(	O
"%td\n"	pointer
,	O
p	pointer
-	O
wa	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
op_wc_strstr	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
*	O
wa	pointer
,	O
*	O
wb	pointer
;	O
const	O
unsigned	O
*	O
p	pointer
;	O
char	O
*	O
opname	pointer
=	O
*	O
argv	pointer
++	O
;	O
argc	int
--	O
;	O
if	O
(	O
argc	int
!=	O
2	int
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"%s requires two arguments"	pointer
,	O
opname	pointer
)	O
;	O
return	O
1	int
;	O
}	O
wa	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
wb	pointer
=	O
strtowc	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
p	pointer
=	O
utf8_wc_strstr	function
(	O
wa	pointer
,	O
wb	pointer
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
{	O
if	O
(	O
errno	O
)	O
{	O
dico_log	function
(	O
L_ERR	int
,	O
errno	O
,	O
"can't match"	pointer
)	O
;	O
return	O
3	int
;	O
}	O
return	O
2	int
;	O
}	O
printf	function
(	O
"%td\n"	pointer
,	O
p	pointer
-	O
wa	pointer
)	O
;	O
return	O
0	int
;	O
}	O
struct	O
optab	struct
optab	struct
[	O
]	O
=	O
{	O
{	O
"help"	pointer
,	O
help	function
}	O
,	O
{	O
"strlen"	pointer
,	O
op_strlen	function
}	O
,	O
{	O
"strcasecmp"	pointer
,	O
op_strcasecmp	function
}	O
,	O
{	O
"strncasecmp"	pointer
,	O
op_strncasecmp	function
}	O
,	O
{	O
"wc_strcmp"	pointer
,	O
op_wc_strcmp	function
}	O
,	O
{	O
"wc_strncmp"	pointer
,	O
op_wc_strncmp	function
}	O
,	O
{	O
"wc_strcasecmp"	pointer
,	O
op_wc_strcasecmp	function
}	O
,	O
{	O
"wc_strncasecmp"	pointer
,	O
op_wc_strncasecmp	function
}	O
,	O
{	O
"toupper"	pointer
,	O
op_toupper	function
}	O
,	O
{	O
"tolower"	pointer
,	O
op_tolower	function
}	O
,	O
{	O
"wc_strchr"	pointer
,	O
op_wc_strchr	function
}	O
,	O
{	O
"wc_strchr_ci"	pointer
,	O
op_wc_strchr_ci	function
}	O
,	O
{	O
"wc_strstr"	pointer
,	O
op_wc_strstr	function
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
void	O
usage	function
(	O
FILE	struct
*	O
fp	pointer
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"usage: %s [op] [args]\n"	pointer
,	O
dico_program_name	pointer
)	O
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
struct	O
optab	struct
*	O
op	pointer
;	O
dico_set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
argc	int
--	O
;	O
argv	pointer
++	O
;	O
if	O
(	O
!	O
argc	int
)	O
{	O
usage	function
(	O
stderr	pointer
)	O
;	O
return	O
1	int
;	O
}	O
for	O
(	O
op	pointer
=	O
optab	struct
;	O
op	pointer
->	O
name	pointer
;	O
op	pointer
++	O
)	O
if	O
(	O
strcmp	function
(	O
*	O
argv	pointer
,	O
op	pointer
->	O
name	pointer
)	O
==	O
0	int
)	O
return	O
op	pointer
->	O
fun	pointer
(	O
argc	int
,	O
argv	pointer
)	O
;	O
dico_log	function
(	O
L_ERR	int
,	O
0	int
,	O
"unknown operation"	pointer
)	O
;	O
return	O
1	int
;	O
}	O
