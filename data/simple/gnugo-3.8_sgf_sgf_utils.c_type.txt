int	O
get_moveX	function
(	O
SGFProperty	struct
*	O
property	pointer
,	O
int	O
boardsize	int
)	O
{	O
int	O
i	int
;	O
if	O
(	O
strlen	function
(	O
property	pointer
->	O
value	pointer
)	O
<	O
2	int
)	O
return	O
-	O
1	int
;	O
i	int
=	O
toupper	function
(	O
(	O
int	O
)	O
property	pointer
->	O
value	pointer
[	O
1	int
]	O
)	O
-	O
'A'	O
;	O
if	O
(	O
i	int
>=	O
boardsize	int
)	O
return	O
-	O
1	int
;	O
return	O
i	int
;	O
}	O
int	O
get_moveY	function
(	O
SGFProperty	struct
*	O
property	pointer
,	O
int	O
boardsize	int
)	O
{	O
int	O
j	int
;	O
if	O
(	O
strlen	function
(	O
property	pointer
->	O
value	pointer
)	O
<	O
2	int
)	O
return	O
-	O
1	int
;	O
j	int
=	O
toupper	function
(	O
(	O
int	O
)	O
property	pointer
->	O
value	pointer
[	O
0	int
]	O
)	O
-	O
'A'	O
;	O
if	O
(	O
j	int
>=	O
boardsize	int
)	O
return	O
-	O
1	int
;	O
return	O
j	int
;	O
}	O
int	O
get_moveXY	function
(	O
SGFProperty	struct
*	O
property	pointer
,	O
int	O
*	O
i	int
,	O
int	O
*	O
j	int
,	O
int	O
boardsize	int
)	O
{	O
*	O
i	int
=	O
get_moveX	function
(	O
property	pointer
,	O
boardsize	int
)	O
;	O
*	O
j	int
=	O
get_moveY	function
(	O
property	pointer
,	O
boardsize	int
)	O
;	O
if	O
(	O
*	O
i	int
==	O
-	O
1	int
&&	O
*	O
j	int
==	O
-	O
1	int
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
int	O
show_sgf_properties	function
(	O
SGFNode	struct
*	O
node	pointer
)	O
{	O
SGFProperty	struct
*	O
sgf_prop	pointer
;	O
int	O
propcount	int
;	O
propcount	int
=	O
0	int
;	O
printf	function
(	O
"P: "	pointer
)	O
;	O
if	O
(	O
!	O
node	pointer
->	O
props	pointer
)	O
{	O
printf	function
(	O
"None\n"	pointer
)	O
;	O
return	O
propcount	int
;	O
}	O
else	O
{	O
sgf_prop	pointer
=	O
node	pointer
->	O
props	pointer
;	O
while	O
(	O
sgf_prop	pointer
)	O
{	O
printf	function
(	O
"%c%c "	pointer
,	O
sgf_prop	pointer
->	O
name	short
&	O
0x00FF	int
,	O
(	O
sgf_prop	pointer
->	O
name	short
&	O
0xFF00	int
)	O
>>	O
8	int
)	O
;	O
sgf_prop	pointer
=	O
sgf_prop	pointer
->	O
next	pointer
;	O
propcount	int
++	O
;	O
}	O
printf	function
(	O
"(%d) "	pointer
,	O
propcount	int
)	O
;	O
if	O
(	O
node	pointer
->	O
next	pointer
)	O
printf	function
(	O
"n"	pointer
)	O
;	O
if	O
(	O
node	pointer
->	O
child	pointer
)	O
printf	function
(	O
"c"	pointer
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
return	O
propcount	int
;	O
}	O
int	O
show_sgf_tree	function
(	O
SGFNode	struct
*	O
node	pointer
)	O
{	O
int	O
n	int
=	O
0	int
;	O
n	int
++	O
;	O
show_sgf_properties	function
(	O
node	pointer
)	O
;	O
if	O
(	O
node	pointer
->	O
child	pointer
)	O
n	int
+=	O
show_sgf_tree	function
(	O
node	pointer
->	O
child	pointer
)	O
;	O
if	O
(	O
node	pointer
->	O
next	pointer
)	O
n	int
+=	O
show_sgf_tree	function
(	O
node	pointer
->	O
next	pointer
)	O
;	O
return	O
n	int
;	O
}	O
int	O
is_markup_node	function
(	O
SGFNode	struct
*	O
node	pointer
)	O
{	O
SGFProperty	struct
*	O
sgf_prop	pointer
;	O
if	O
(	O
!	O
node	pointer
->	O
props	pointer
)	O
return	O
0	int
;	O
sgf_prop	pointer
=	O
node	pointer
->	O
props	pointer
;	O
while	O
(	O
sgf_prop	pointer
)	O
{	O
switch	O
(	O
sgf_prop	pointer
->	O
name	short
)	O
{	O
case	O
SGFCR	int
:	O
case	O
SGFSQ	int
:	O
case	O
SGFTR	int
:	O
case	O
SGFMA	int
:	O
case	O
SGFBM	int
:	O
case	O
SGFDO	int
:	O
case	O
SGFIT	int
:	O
case	O
SGFTE	int
:	O
return	O
1	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
sgf_prop	pointer
=	O
sgf_prop	pointer
->	O
next	pointer
;	O
}	O
return	O
0	int
;	O
}	O
int	O
is_move_node	function
(	O
SGFNode	struct
*	O
node	pointer
)	O
{	O
SGFProperty	struct
*	O
sgf_prop	pointer
;	O
if	O
(	O
!	O
node	pointer
->	O
props	pointer
)	O
return	O
0	int
;	O
sgf_prop	pointer
=	O
node	pointer
->	O
props	pointer
;	O
while	O
(	O
sgf_prop	pointer
)	O
{	O
switch	O
(	O
sgf_prop	pointer
->	O
name	short
)	O
{	O
case	O
SGFB	int
:	O
case	O
SGFW	int
:	O
return	O
1	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
sgf_prop	pointer
=	O
sgf_prop	pointer
->	O
next	pointer
;	O
}	O
return	O
0	int
;	O
}	O
int	O
is_pass_node	function
(	O
SGFNode	struct
*	O
node	pointer
,	O
int	O
boardsize	int
)	O
{	O
SGFProperty	struct
*	O
sgf_prop	pointer
;	O
int	O
i	int
,	O
j	int
;	O
if	O
(	O
!	O
node	pointer
->	O
props	pointer
)	O
return	O
0	int
;	O
sgf_prop	pointer
=	O
node	pointer
->	O
props	pointer
;	O
while	O
(	O
sgf_prop	pointer
)	O
{	O
switch	O
(	O
sgf_prop	pointer
->	O
name	short
)	O
{	O
case	O
SGFB	int
:	O
case	O
SGFW	int
:	O
return	O
!	O
get_moveXY	function
(	O
sgf_prop	pointer
,	O
&	O
i	int
,	O
&	O
j	int
,	O
boardsize	int
)	O
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
sgf_prop	pointer
=	O
sgf_prop	pointer
->	O
next	pointer
;	O
}	O
return	O
0	int
;	O
}	O
int	O
find_move	function
(	O
SGFNode	struct
*	O
node	pointer
)	O
{	O
SGFProperty	struct
*	O
sgf_prop	pointer
;	O
if	O
(	O
!	O
node	pointer
->	O
props	pointer
)	O
return	O
0	int
;	O
sgf_prop	pointer
=	O
node	pointer
->	O
props	pointer
;	O
while	O
(	O
sgf_prop	pointer
)	O
{	O
switch	O
(	O
sgf_prop	pointer
->	O
name	short
)	O
{	O
case	O
SGFB	int
:	O
return	O
BLACK	int
;	O
break	O
;	O
case	O
SGFW	int
:	O
return	O
WHITE	int
;	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
sgf_prop	pointer
=	O
sgf_prop	pointer
->	O
next	pointer
;	O
}	O
return	O
EMPTY	int
;	O
}	O
