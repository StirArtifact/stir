int	O
mu_fgetpwent_r	function
(	O
FILE	struct
*	O
fp	pointer
,	O
char	O
*	O
*	O
bufp	pointer
,	O
size_t	long
*	O
bufs	pointer
,	O
struct	O
passwd	struct
*	O
*	O
result	pointer
)	O
{	O
char	O
*	O
buffer	pointer
=	O
*	O
bufp	pointer
;	O
size_t	long
buflen	long
=	O
*	O
bufs	pointer
;	O
char	O
*	O
nb	pointer
;	O
size_t	long
ns	long
;	O
struct	O
passwd	struct
*	O
pwbuf	pointer
;	O
size_t	long
pos	long
=	O
SPWDSIZ	O
;	O
int	O
c	int
;	O
size_t	long
off	array
[	O
6	int
]	O
;	O
int	O
i	int
=	O
0	int
;	O
if	O
(	O
!	O
buffer	pointer
)	O
buflen	long
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
fgetc	function
(	O
fp	pointer
)	O
)	O
!=	O
EOF	O
)	O
{	O
if	O
(	O
pos	long
>=	O
buflen	long
)	O
{	O
if	O
(	O
buflen	long
==	O
0	int
)	O
ns	long
=	O
SPWDSIZ	O
+	O
128	int
;	O
else	O
{	O
ns	long
=	O
ns	long
*	O
2	int
;	O
if	O
(	O
ns	long
<	O
buflen	long
)	O
return	O
ENOMEM	int
;	O
}	O
nb	pointer
=	O
realloc	function
(	O
buffer	pointer
,	O
ns	long
)	O
;	O
if	O
(	O
!	O
nb	pointer
)	O
return	O
ENOMEM	int
;	O
buffer	pointer
=	O
nb	pointer
;	O
buflen	long
=	O
ns	long
;	O
}	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
{	O
buffer	pointer
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
if	O
(	O
i	int
!=	O
sizeof	O
(	O
off	array
)	O
/	O
sizeof	O
(	O
off	array
[	O
0	int
]	O
)	O
)	O
{	O
pos	long
=	O
SPWDSIZ	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
c	int
==	O
':'	O
)	O
{	O
buffer	pointer
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
if	O
(	O
i	int
<	O
sizeof	O
(	O
off	array
)	O
/	O
sizeof	O
(	O
off	array
[	O
0	int
]	O
)	O
)	O
off	array
[	O
i	int
++	O
]	O
=	O
pos	long
;	O
}	O
else	O
buffer	pointer
[	O
pos	long
++	O
]	O
=	O
c	int
;	O
}	O
if	O
(	O
pos	long
==	O
SPWDSIZ	O
)	O
return	O
ENOENT	int
;	O
if	O
(	O
c	int
==	O
EOF	O
)	O
{	O
if	O
(	O
i	int
!=	O
sizeof	O
(	O
off	array
)	O
/	O
sizeof	O
(	O
off	array
[	O
0	int
]	O
)	O
)	O
return	O
ENOENT	int
;	O
if	O
(	O
pos	long
==	O
buflen	long
)	O
{	O
nb	pointer
=	O
realloc	function
(	O
buffer	pointer
,	O
buflen	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
nb	pointer
)	O
return	O
ENOMEM	int
;	O
buffer	pointer
=	O
nb	pointer
;	O
buflen	long
=	O
ns	long
;	O
}	O
buffer	pointer
[	O
pos	long
++	O
]	O
=	O
0	int
;	O
}	O
pwbuf	pointer
=	O
(	O
struct	O
passwd	struct
*	O
)	O
buffer	pointer
;	O
pwbuf	pointer
->	O
pw_name	pointer
=	O
buffer	pointer
+	O
SPWDSIZ	O
;	O
pwbuf	pointer
->	O
pw_passwd	pointer
=	O
buffer	pointer
+	O
off	array
[	O
0	int
]	O
;	O
pwbuf	pointer
->	O
pw_uid	int
=	O
strtoul	function
(	O
buffer	pointer
+	O
off	array
[	O
1	int
]	O
,	O
NULL	O
,	O
10	int
)	O
;	O
pwbuf	pointer
->	O
pw_gid	int
=	O
strtoul	function
(	O
buffer	pointer
+	O
off	array
[	O
2	int
]	O
,	O
NULL	O
,	O
10	int
)	O
;	O
pwbuf	pointer
->	O
pw_gecos	pointer
=	O
buffer	pointer
+	O
off	array
[	O
3	int
]	O
;	O
pwbuf	pointer
->	O
pw_dir	pointer
=	O
buffer	pointer
+	O
off	array
[	O
4	int
]	O
;	O
pwbuf	pointer
->	O
pw_shell	pointer
=	O
buffer	pointer
+	O
off	array
[	O
5	int
]	O
;	O
*	O
bufp	pointer
=	O
buffer	pointer
;	O
*	O
bufs	pointer
=	O
buflen	long
;	O
*	O
result	pointer
=	O
pwbuf	pointer
;	O
return	O
0	int
;	O
}	O
struct	O
passwd	struct
*	O
mu_fgetpwent	function
(	O
FILE	struct
*	O
fp	pointer
)	O
{	O
static	O
char	O
*	O
buffer	pointer
;	O
static	O
size_t	long
bufsize	long
;	O
static	O
struct	O
passwd	struct
*	O
pwbuf	pointer
;	O
int	O
rc	int
=	O
mu_fgetpwent_r	function
(	O
fp	pointer
,	O
&	O
buffer	pointer
,	O
&	O
bufsize	long
,	O
&	O
pwbuf	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
errno	O
=	O
rc	int
;	O
return	O
NULL	O
;	O
}	O
return	O
pwbuf	pointer
;	O
}	O
