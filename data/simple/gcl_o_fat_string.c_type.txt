enum	O
type	O
what_to_collect	enum
;	O
object	O
sSAprofile_arrayA	int
;	O
DEFUN_NEW	function
(	O
"PROFILE"	pointer
,	O
object	O
,	O
fSprofile	O
,	O
SI	O
,	O
2	int
,	O
2	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
start_address	O
,	O
object	O
scale	int
)	O
,	O
"Sets up profiling with START-ADDRESS and  SCALE where scale is   between 0 and 256"	pointer
)	O
{	O
object	O
ar	pointer
=	O
sSAprofile_arrayA	int
->	O
s	O
.	O
s_dbind	O
;	O
void	O
*	O
x	pointer
;	O
if	O
(	O
type_of	function
(	O
ar	pointer
)	O
!=	O
t_string	O
)	O
FEerror	function
(	O
"si:*Profile-array* not a string"	pointer
,	O
0	int
)	O
;	O
if	O
(	O
type_of	function
(	O
start_address	O
)	O
!=	O
t_fixnum	O
||	O
type_of	function
(	O
scale	int
)	O
!=	O
t_fixnum	O
)	O
FEerror	function
(	O
"Needs start address and scale as args"	pointer
,	O
0	int
)	O
;	O
x	pointer
=	O
!	O
(	O
fix	function
(	O
start_address	O
)	O
*	O
fix	function
(	O
scale	int
)	O
)	O
?	O
NULL	O
:	O
(	O
void	O
*	O
)	O
(	O
ar	pointer
->	O
ust	O
.	O
ust_self	O
)	O
;	O
profil	function
(	O
x	pointer
,	O
(	O
ar	pointer
->	O
ust	O
.	O
ust_dim	O
)	O
,	O
fix	function
(	O
start_address	O
)	O
,	O
fix	function
(	O
scale	int
)	O
<<	O
8	int
)	O
;	O
RETURN1	function
(	O
start_address	O
)	O
;	O
}	O
DEFUN_NEW	function
(	O
"FUNCTION-START"	pointer
,	O
object	O
,	O
fSfunction_start	O
,	O
SI	O
,	O
1	int
,	O
1	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
funobj	O
)	O
,	O
""	pointer
)	O
{	O
if	O
(	O
type_of	function
(	O
funobj	O
)	O
!=	O
t_cfun	O
&&	O
type_of	function
(	O
funobj	O
)	O
!=	O
t_sfun	O
&&	O
type_of	function
(	O
funobj	O
)	O
!=	O
t_vfun	O
&&	O
type_of	function
(	O
funobj	O
)	O
!=	O
t_afun	O
&&	O
type_of	function
(	O
funobj	O
)	O
!=	O
t_gfun	O
)	O
FEerror	function
(	O
"not compiled function"	pointer
,	O
0	int
)	O
;	O
funobj	O
=	O
make_fixnum	function
(	O
(	O
long	O
)	O
(	O
funobj	O
->	O
cf	O
.	O
cf_self	O
)	O
)	O
;	O
RETURN1	function
(	O
funobj	O
)	O
;	O
}	O
int	O
maxpage	int
;	O
object	O
sScdefn	int
;	O
static	O
void	O
cfuns_to_combined_table	function
(	O
unsigned	O
int	O
n	int
)	O
{	O
int	O
ii	int
=	O
0	int
;	O
STATIC	O
int	O
j	int
;	O
STATIC	O
object	O
x	pointer
;	O
STATIC	O
char	O
*	O
p	O
,	O
*	O
cf_addr	O
;	O
STATIC	O
struct	O
typemanager	O
*	O
tm	O
;	O
if	O
(	O
!	O
(	O
n	int
||	O
combined_table	O
.	O
ptable	O
)	O
)	O
n	int
=	O
CFUN_LIM	int
;	O
if	O
(	O
n	int
&&	O
combined_table	O
.	O
alloc_length	O
<	O
n	int
)	O
{	O
(	O
combined_table	O
.	O
ptable	O
)	O
=	O
NULL	O
;	O
(	O
combined_table	O
.	O
ptable	O
)	O
=	O
(	O
struct	O
node	O
*	O
)	O
malloc	function
(	O
n	int
*	O
sizeof	O
(	O
struct	O
node	O
)	O
)	O
;	O
if	O
(	O
!	O
combined_table	O
.	O
ptable	O
)	O
FEerror	function
(	O
"unable to allocate"	pointer
,	O
0	int
)	O
;	O
combined_table	O
.	O
alloc_length	O
=	O
n	int
;	O
}	O
{	O
struct	O
pageinfo	O
*	O
v	pointer
;	O
for	O
(	O
v	pointer
=	O
cell_list_head	O
;	O
v	pointer
;	O
v	pointer
=	O
v	pointer
->	O
next	int
)	O
{	O
enum	O
type	O
tp	enum
=	O
v	pointer
->	O
type	O
;	O
if	O
(	O
tp	enum
!=	O
tm_table	O
[	O
(	O
short	O
)	O
t_cfun	O
]	O
.	O
tm_type	O
&&	O
tp	enum
!=	O
tm_table	O
[	O
(	O
short	O
)	O
t_gfun	O
]	O
.	O
tm_type	O
&&	O
tp	enum
!=	O
tm_table	O
[	O
(	O
short	O
)	O
t_sfun	O
]	O
.	O
tm_type	O
&&	O
tp	enum
!=	O
tm_table	O
[	O
(	O
short	O
)	O
t_vfun	O
]	O
.	O
tm_type	O
)	O
continue	O
;	O
tm	O
=	O
tm_of	function
(	O
tp	enum
)	O
;	O
p	O
=	O
pagetochar	function
(	O
page	function
(	O
v	pointer
)	O
)	O
;	O
for	O
(	O
j	int
=	O
tm	O
->	O
tm_nppage	O
;	O
j	int
>	O
0	int
;	O
--	O
j	int
,	O
p	O
+=	O
tm	O
->	O
tm_size	O
)	O
{	O
x	pointer
=	O
(	O
object	O
)	O
p	O
;	O
if	O
(	O
type_of	function
(	O
x	pointer
)	O
!=	O
t_cfun	O
&&	O
type_of	function
(	O
x	pointer
)	O
!=	O
t_sfun	O
&&	O
type_of	function
(	O
x	pointer
)	O
!=	O
t_vfun	O
&&	O
type_of	function
(	O
x	pointer
)	O
!=	O
t_gfun	O
)	O
continue	O
;	O
if	O
(	O
is_free	function
(	O
x	pointer
)	O
||	O
x	pointer
->	O
cf	O
.	O
cf_self	O
==	O
NULL	O
)	O
continue	O
;	O
cf_addr	O
=	O
(	O
char	O
*	O
)	O
(	O
(	O
unsigned	O
long	O
)	O
(	O
x	pointer
->	O
cf	O
.	O
cf_self	O
)	O
)	O
;	O
SYM_ADDRESS	function
(	O
combined_table	O
,	O
ii	int
)	O
=	O
(	O
unsigned	O
long	O
)	O
cf_addr	O
;	O
SYM_STRING	function
(	O
combined_table	O
,	O
ii	int
)	O
=	O
(	O
char	O
*	O
)	O
(	O
CF_FLAG	O
|	O
(	O
unsigned	O
long	O
)	O
x	pointer
)	O
;	O
combined_table	O
.	O
length	O
=	O
++	O
ii	int
;	O
if	O
(	O
ii	int
>=	O
combined_table	O
.	O
alloc_length	O
)	O
FEerror	function
(	O
"Need a larger combined_table"	pointer
,	O
0	int
)	O
;	O
}	O
}	O
}	O
}	O
static	O
int	O
address_node_compare	function
(	O
const	O
void	O
*	O
node1	pointer
,	O
const	O
void	O
*	O
node2	pointer
)	O
{	O
unsigned	O
int	O
a1	int
,	O
a2	int
;	O
a1	int
=	O
(	O
(	O
struct	O
node	O
*	O
)	O
node1	pointer
)	O
->	O
address	int
;	O
a2	int
=	O
(	O
(	O
struct	O
node	O
*	O
)	O
node2	pointer
)	O
->	O
address	int
;	O
if	O
(	O
a1	int
>	O
a2	int
)	O
return	O
1	int
;	O
if	O
(	O
a1	int
<	O
a2	int
)	O
return	O
-	O
1	int
;	O
return	O
0	int
;	O
}	O
DEFUN_NEW	function
(	O
"SET-UP-COMBINED"	pointer
,	O
object	O
,	O
fSset_up_combined	O
,	O
SI	O
,	O
0	int
,	O
1	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
first	O
,	O
...	O
)	O
,	O
""	pointer
)	O
{	O
int	O
nargs	int
=	O
VFUN_NARGS	O
;	O
unsigned	O
int	O
n	int
;	O
object	O
siz	O
;	O
if	O
(	O
nargs	int
>=	O
1	int
)	O
siz	O
=	O
first	O
;	O
else	O
siz	O
=	O
small_fixnum	function
(	O
0	int
)	O
;	O
CHECK_ARG_RANGE	function
(	O
0	int
,	O
1	int
)	O
;	O
n	int
=	O
(	O
unsigned	O
int	O
)	O
fix	function
(	O
siz	O
)	O
;	O
cfuns_to_combined_table	function
(	O
n	int
)	O
;	O
qsort	function
(	O
combined_table	O
.	O
ptable	O
,	O
combined_table	O
.	O
length	O
,	O
sizeof	O
(	O
*	O
combined_table	O
.	O
ptable	O
)	O
,	O
address_node_compare	function
)	O
;	O
RETURN1	function
(	O
siz	O
)	O
;	O
}	O
static	O
int	O
prof_start	int
;	O
static	O
int	O
prof_ind	function
(	O
unsigned	O
int	O
address	int
,	O
int	O
scale	int
)	O
{	O
address	int
=	O
address	int
-	O
prof_start	int
;	O
if	O
(	O
address	int
>	O
0	int
)	O
return	O
(	O
(	O
address	int
*	O
scale	int
)	O
>>	O
8	int
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
string_sum	function
(	O
register	O
unsigned	O
char	O
*	O
aar	pointer
,	O
unsigned	O
int	O
dim	int
)	O
{	O
register	O
unsigned	O
char	O
*	O
endar	pointer
;	O
register	O
unsigned	O
int	O
count	int
=	O
0	int
;	O
endar	pointer
=	O
aar	pointer
+	O
dim	int
;	O
for	O
(	O
;	O
aar	pointer
<	O
endar	pointer
;	O
aar	pointer
++	O
)	O
count	int
+=	O
*	O
aar	pointer
;	O
return	O
count	int
;	O
}	O
DEFUN_NEW	function
(	O
"DISPLAY-PROFILE"	pointer
,	O
object	O
,	O
fSdisplay_profile	O
,	O
SI	O
,	O
2	int
,	O
2	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
start_addr	O
,	O
object	O
scal	O
)	O
,	O
""	pointer
)	O
{	O
if	O
(	O
!	O
combined_table	O
.	O
ptable	O
)	O
FEerror	function
(	O
"must symbols first"	pointer
,	O
0	int
)	O
;	O
{	O
unsigned	O
int	O
prev	int
,	O
next	int
,	O
upto	int
,	O
dim	int
,	O
total	int
;	O
int	O
j	int
,	O
scale	int
,	O
count	int
;	O
unsigned	O
char	O
*	O
ar	pointer
;	O
object	O
obj_ar	O
;	O
obj_ar	O
=	O
sSAprofile_arrayA	int
->	O
s	O
.	O
s_dbind	O
;	O
if	O
(	O
type_of	function
(	O
obj_ar	O
)	O
!=	O
t_string	O
)	O
FEerror	function
(	O
"si:*Profile-array* not a string"	pointer
,	O
0	int
)	O
;	O
ar	pointer
=	O
obj_ar	O
->	O
ust	O
.	O
ust_self	O
;	O
scale	int
=	O
fix	function
(	O
scal	O
)	O
;	O
prof_start	int
=	O
fix	function
(	O
start_addr	O
)	O
;	O
vs_top	O
=	O
vs_base	O
;	O
dim	int
=	O
(	O
obj_ar	O
->	O
ust	O
.	O
ust_dim	O
)	O
;	O
total	int
=	O
string_sum	function
(	O
ar	pointer
,	O
dim	int
)	O
;	O
j	int
=	O
0	int
;	O
{	O
int	O
i	int
,	O
finish	int
=	O
combined_table	O
.	O
length	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
,	O
prev	int
=	O
SYM_ADDRESS	function
(	O
combined_table	O
,	O
i	int
)	O
;	O
i	int
<	O
finish	int
;	O
prev	int
=	O
next	int
)	O
{	O
++	O
i	int
;	O
next	int
=	O
SYM_ADDRESS	function
(	O
combined_table	O
,	O
i	int
)	O
;	O
if	O
(	O
prev	int
<	O
prof_start	int
)	O
continue	O
;	O
upto	int
=	O
prof_ind	function
(	O
next	int
,	O
scale	int
)	O
;	O
if	O
(	O
upto	int
>=	O
dim	int
)	O
upto	int
=	O
dim	int
;	O
{	O
const	O
char	O
*	O
name	pointer
;	O
unsigned	O
long	O
uname	long
;	O
count	int
=	O
0	int
;	O
for	O
(	O
;	O
j	int
<	O
upto	int
;	O
j	int
++	O
)	O
count	int
+=	O
ar	pointer
[	O
j	int
]	O
;	O
if	O
(	O
count	int
>	O
0	int
)	O
{	O
name	pointer
=	O
SYM_STRING	function
(	O
combined_table	O
,	O
i	int
-	O
1	int
)	O
;	O
uname	long
=	O
(	O
unsigned	O
long	O
)	O
name	pointer
;	O
printf	O
(	O
"\n%6.2f%% (%5d): "	pointer
,	O
(	O
100.0	int
*	O
count	int
)	O
/	O
total	int
,	O
count	int
)	O
;	O
fflush	function
(	O
stdout	O
)	O
;	O
if	O
(	O
CF_FLAG	O
&	O
uname	long
)	O
{	O
if	O
(	O
~	O
CF_FLAG	O
&	O
uname	long
)	O
prin1	function
(	O
(	O
(	O
object	O
)	O
(	O
~	O
CF_FLAG	O
&	O
uname	long
)	O
)	O
->	O
cf	O
.	O
cf_name	O
,	O
Cnil	O
)	O
;	O
}	O
else	O
if	O
(	O
name	pointer
)	O
printf	O
(	O
"%s"	pointer
,	O
name	pointer
)	O
;	O
}	O
;	O
if	O
(	O
upto	int
==	O
dim	int
)	O
goto	O
TOTALS	O
;	O
}	O
}	O
}	O
TOTALS	O
:	O
printf	O
(	O
"\nTotal ticks %d"	pointer
,	O
total	int
)	O
;	O
fflush	function
(	O
stdout	O
)	O
;	O
}	O
RETURN1	function
(	O
start_addr	O
)	O
;	O
}	O
DEFUN_NEW	function
(	O
"ARRAY-ADRESS"	pointer
,	O
object	O
,	O
fSarray_adress	O
,	O
SI	O
,	O
1	int
,	O
1	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
array	O
)	O
,	O
""	pointer
)	O
{	O
array	O
=	O
make_fixnum	function
(	O
(	O
long	O
)	O
(	O
&	O
(	O
array	O
->	O
st	O
.	O
st_self	O
[	O
0	int
]	O
)	O
)	O
)	O
;	O
RETURN1	function
(	O
array	O
)	O
;	O
}	O
DEFVAR	function
(	O
"*PROFILE-ARRAY*"	pointer
,	O
sSAprofile_arrayA	int
,	O
SI	O
,	O
Cnil	O
,	O
""	pointer
)	O
;	O
void	O
gcl_init_fat_string	function
(	O
void	O
)	O
{	O
make_si_constant	function
(	O
"*ASH->>*"	pointer
,	O
(	O
-	O
1	int
==	O
(	O
(	O
(	O
int	O
)	O
-	O
1	int
)	O
>>	O
20	int
)	O
)	O
?	O
Ct	O
:	O
Cnil	O
)	O
;	O
init_fasdump	function
(	O
)	O
;	O
}	O
