error_t	function
_store_create	function
(	O
const	O
struct	O
store_class	struct
*	O
class	pointer
,	O
mach_port_t	O
port	int
,	O
int	O
flags	int
,	O
size_t	long
block_size	long
,	O
const	O
struct	O
store_run	struct
*	O
runs	pointer
,	O
size_t	long
num_runs	long
,	O
store_offset_t	long
end	long
,	O
struct	O
store	struct
*	O
*	O
store	struct
)	O
{	O
if	O
(	O
(	O
block_size	long
&	O
(	O
block_size	long
-	O
1	int
)	O
)	O
||	O
(	O
block_size	long
==	O
0	int
&&	O
num_runs	long
>	O
0	int
)	O
)	O
return	O
EINVAL	O
;	O
else	O
{	O
struct	O
store	struct
*	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
store	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
{	O
error_t	function
err	function
;	O
new	pointer
->	O
name	pointer
=	O
0	int
;	O
new	pointer
->	O
port	int
=	O
port	int
;	O
new	pointer
->	O
runs	pointer
=	O
0	int
;	O
new	pointer
->	O
num_runs	long
=	O
0	int
;	O
new	pointer
->	O
wrap_src	long
=	O
0	int
;	O
new	pointer
->	O
wrap_dst	long
=	O
0	int
;	O
new	pointer
->	O
flags	int
=	O
flags	int
;	O
new	pointer
->	O
end	long
=	O
end	long
;	O
new	pointer
->	O
block_size	long
=	O
block_size	long
;	O
new	pointer
->	O
source	int
=	O
MACH_PORT_NULL	O
;	O
new	pointer
->	O
blocks	long
=	O
0	int
;	O
new	pointer
->	O
size	long
=	O
0	int
;	O
new	pointer
->	O
log2_block_size	int
=	O
0	int
;	O
new	pointer
->	O
log2_blocks_per_page	int
=	O
0	int
;	O
new	pointer
->	O
misc	pointer
=	O
0	int
;	O
new	pointer
->	O
misc_len	long
=	O
0	int
;	O
new	pointer
->	O
hook	pointer
=	O
0	int
;	O
new	pointer
->	O
children	pointer
=	O
0	int
;	O
new	pointer
->	O
num_children	long
=	O
0	int
;	O
new	pointer
->	O
class	pointer
=	O
class	pointer
;	O
err	function
=	O
store_set_runs	function
(	O
new	pointer
,	O
runs	pointer
,	O
num_runs	long
)	O
;	O
if	O
(	O
err	function
)	O
free	function
(	O
new	pointer
)	O
;	O
else	O
*	O
store	struct
=	O
new	pointer
;	O
return	O
err	function
;	O
}	O
else	O
return	O
ENOMEM	O
;	O
}	O
}	O
void	O
store_free	function
(	O
struct	O
store	struct
*	O
store	struct
)	O
{	O
int	O
k	int
;	O
if	O
(	O
store	struct
->	O
class	pointer
->	O
cleanup	pointer
)	O
(	O
*	O
store	struct
->	O
class	pointer
->	O
cleanup	pointer
)	O
(	O
store	struct
)	O
;	O
for	O
(	O
k	int
=	O
0	int
;	O
k	int
<	O
store	struct
->	O
num_children	long
;	O
k	int
++	O
)	O
store_free	function
(	O
store	struct
->	O
children	pointer
[	O
k	int
]	O
)	O
;	O
if	O
(	O
store	struct
->	O
port	int
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
store	struct
->	O
port	int
)	O
;	O
if	O
(	O
store	struct
->	O
source	int
!=	O
MACH_PORT_NULL	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
store	struct
->	O
source	int
)	O
;	O
if	O
(	O
store	struct
->	O
name	pointer
)	O
free	function
(	O
store	struct
->	O
name	pointer
)	O
;	O
if	O
(	O
store	struct
->	O
runs	pointer
)	O
free	function
(	O
store	struct
->	O
runs	pointer
)	O
;	O
free	function
(	O
store	struct
)	O
;	O
}	O
