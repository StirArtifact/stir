static	O
const	O
uint32_t	int
K	array
[	O
64	int
]	O
=	O
{	O
0x428a2f98UL	int
,	O
0x71374491UL	int
,	O
0xb5c0fbcfUL	int
,	O
0xe9b5dba5UL	int
,	O
0x3956c25bUL	int
,	O
0x59f111f1UL	int
,	O
0x923f82a4UL	int
,	O
0xab1c5ed5UL	int
,	O
0xd807aa98UL	int
,	O
0x12835b01UL	int
,	O
0x243185beUL	int
,	O
0x550c7dc3UL	int
,	O
0x72be5d74UL	int
,	O
0x80deb1feUL	int
,	O
0x9bdc06a7UL	int
,	O
0xc19bf174UL	int
,	O
0xe49b69c1UL	int
,	O
0xefbe4786UL	int
,	O
0x0fc19dc6UL	int
,	O
0x240ca1ccUL	int
,	O
0x2de92c6fUL	int
,	O
0x4a7484aaUL	int
,	O
0x5cb0a9dcUL	int
,	O
0x76f988daUL	int
,	O
0x983e5152UL	int
,	O
0xa831c66dUL	int
,	O
0xb00327c8UL	int
,	O
0xbf597fc7UL	int
,	O
0xc6e00bf3UL	int
,	O
0xd5a79147UL	int
,	O
0x06ca6351UL	int
,	O
0x14292967UL	int
,	O
0x27b70a85UL	int
,	O
0x2e1b2138UL	int
,	O
0x4d2c6dfcUL	int
,	O
0x53380d13UL	int
,	O
0x650a7354UL	int
,	O
0x766a0abbUL	int
,	O
0x81c2c92eUL	int
,	O
0x92722c85UL	int
,	O
0xa2bfe8a1UL	int
,	O
0xa81a664bUL	int
,	O
0xc24b8b70UL	int
,	O
0xc76c51a3UL	int
,	O
0xd192e819UL	int
,	O
0xd6990624UL	int
,	O
0xf40e3585UL	int
,	O
0x106aa070UL	int
,	O
0x19a4c116UL	int
,	O
0x1e376c08UL	int
,	O
0x2748774cUL	int
,	O
0x34b0bcb5UL	int
,	O
0x391c0cb3UL	int
,	O
0x4ed8aa4aUL	int
,	O
0x5b9cca4fUL	int
,	O
0x682e6ff3UL	int
,	O
0x748f82eeUL	int
,	O
0x78a5636fUL	int
,	O
0x84c87814UL	int
,	O
0x8cc70208UL	int
,	O
0x90befffaUL	int
,	O
0xa4506cebUL	int
,	O
0xbef9a3f7UL	int
,	O
0xc67178f2UL	int
,	O
}	O
;	O
void	O
sha256_init	O
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
)	O
{	O
static	O
const	O
uint32_t	int
H0	array
[	O
_SHA256_DIGEST_LENGTH	int
]	O
=	O
{	O
0x6a09e667UL	int
,	O
0xbb67ae85UL	int
,	O
0x3c6ef372UL	int
,	O
0xa54ff53aUL	int
,	O
0x510e527fUL	int
,	O
0x9b05688cUL	int
,	O
0x1f83d9abUL	int
,	O
0x5be0cd19UL	int
,	O
}	O
;	O
memcpy	function
(	O
ctx	pointer
->	O
state	pointer
,	O
H0	array
,	O
sizeof	O
(	O
H0	array
)	O
)	O
;	O
ctx	pointer
->	O
count	long
=	O
0	int
;	O
ctx	pointer
->	O
index	function
=	O
0	int
;	O
}	O
void	O
sha256_update	O
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
const	O
uint8_t	char
*	O
data	pointer
)	O
{	O
MD_UPDATE	O
(	O
ctx	pointer
,	O
length	long
,	O
data	pointer
,	O
COMPRESS	O
,	O
ctx	pointer
->	O
count	long
++	O
)	O
;	O
}	O
static	O
void	O
sha256_write_digest	function
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	pointer
)	O
{	O
uint64_t	long
bit_count	long
;	O
assert	O
(	O
length	long
<=	O
SHA256_DIGEST_SIZE	int
)	O
;	O
MD_PAD	O
(	O
ctx	pointer
,	O
8	int
,	O
COMPRESS	O
)	O
;	O
bit_count	long
=	O
(	O
ctx	pointer
->	O
count	long
<<	O
9	int
)	O
|	O
(	O
ctx	pointer
->	O
index	function
<<	O
3	int
)	O
;	O
WRITE_UINT64	O
(	O
ctx	pointer
->	O
block	array
+	O
(	O
SHA256_BLOCK_SIZE	int
-	O
8	int
)	O
,	O
bit_count	long
)	O
;	O
COMPRESS	O
(	O
ctx	pointer
,	O
ctx	pointer
->	O
block	array
)	O
;	O
_nettle_write_be32	function
(	O
length	long
,	O
digest	pointer
,	O
ctx	pointer
->	O
state	pointer
)	O
;	O
}	O
void	O
sha256_digest	O
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	pointer
)	O
{	O
sha256_write_digest	function
(	O
ctx	pointer
,	O
length	long
,	O
digest	pointer
)	O
;	O
sha256_init	O
(	O
ctx	pointer
)	O
;	O
}	O
void	O
sha224_init	O
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
)	O
{	O
static	O
const	O
uint32_t	int
H0	array
[	O
_SHA256_DIGEST_LENGTH	int
]	O
=	O
{	O
0xc1059ed8	int
,	O
0x367cd507	int
,	O
0x3070dd17	int
,	O
0xf70e5939	int
,	O
0xffc00b31	int
,	O
0x68581511	int
,	O
0x64f98fa7	int
,	O
0xbefa4fa4	int
,	O
}	O
;	O
memcpy	function
(	O
ctx	pointer
->	O
state	pointer
,	O
H0	array
,	O
sizeof	O
(	O
H0	array
)	O
)	O
;	O
ctx	pointer
->	O
count	long
=	O
0	int
;	O
ctx	pointer
->	O
index	function
=	O
0	int
;	O
}	O
void	O
sha224_digest	O
(	O
struct	O
sha256_ctx	struct
*	O
ctx	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
digest	pointer
)	O
{	O
sha256_write_digest	function
(	O
ctx	pointer
,	O
length	long
,	O
digest	pointer
)	O
;	O
sha224_init	O
(	O
ctx	pointer
)	O
;	O
}	O
