typedef	O
struct	O
Arg_t	struct
{	O
unsigned	O
char	O
add	char
;	O
unsigned	O
char	O
remove	function
;	O
struct	O
MainParam_t	struct
mp	pointer
;	O
int	O
recursive	int
;	O
int	O
doPrintName	int
;	O
}	O
Arg_t	struct
;	O
static	O
int	O
attrib_file	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
{	O
Arg_t	struct
*	O
arg	pointer
=	O
(	O
Arg_t	struct
*	O
)	O
mp	pointer
->	O
arg	pointer
;	O
if	O
(	O
entry	int
->	O
entry	int
!=	O
-	O
3	int
)	O
{	O
entry	int
->	O
dir	pointer
.	O
attr	char
=	O
(	O
entry	int
->	O
dir	pointer
.	O
attr	char
&	O
arg	pointer
->	O
remove	function
)	O
|	O
arg	pointer
->	O
add	char
;	O
dir_write	function
(	O
entry	int
)	O
;	O
}	O
return	O
GOT_ONE	int
;	O
}	O
static	O
int	O
replay_attrib	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
UNUSEDP	O
)	O
{	O
if	O
(	O
(	O
IS_ARCHIVE	O
(	O
entry	int
)	O
&&	O
IS_DIR	O
(	O
entry	int
)	O
)	O
||	O
(	O
!	O
IS_ARCHIVE	O
(	O
entry	int
)	O
&&	O
!	O
IS_DIR	O
(	O
entry	int
)	O
)	O
||	O
IS_SYSTEM	O
(	O
entry	int
)	O
||	O
IS_HIDDEN	O
(	O
entry	int
)	O
)	O
{	O
printf	function
(	O
"mattrib "	pointer
)	O
;	O
if	O
(	O
IS_ARCHIVE	O
(	O
entry	int
)	O
&&	O
IS_DIR	O
(	O
entry	int
)	O
)	O
{	O
printf	function
(	O
"+a "	pointer
)	O
;	O
}	O
if	O
(	O
!	O
IS_ARCHIVE	O
(	O
entry	int
)	O
&&	O
!	O
IS_DIR	O
(	O
entry	int
)	O
)	O
{	O
printf	function
(	O
"-a "	pointer
)	O
;	O
}	O
if	O
(	O
IS_SYSTEM	O
(	O
entry	int
)	O
)	O
{	O
printf	function
(	O
"+s "	pointer
)	O
;	O
}	O
if	O
(	O
IS_HIDDEN	O
(	O
entry	int
)	O
)	O
{	O
printf	function
(	O
"+h "	pointer
)	O
;	O
}	O
fprintPwd	function
(	O
stdout	pointer
,	O
entry	int
,	O
1	int
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
return	O
GOT_ONE	int
;	O
}	O
static	O
int	O
view_attrib	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
UNUSEDP	O
)	O
{	O
printf	function
(	O
"  "	pointer
)	O
;	O
if	O
(	O
IS_ARCHIVE	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'A'	O
)	O
;	O
else	O
putchar	function
(	O
' '	O
)	O
;	O
fputs	function
(	O
"  "	pointer
,	O
stdout	pointer
)	O
;	O
if	O
(	O
IS_SYSTEM	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'S'	O
)	O
;	O
else	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
IS_HIDDEN	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'H'	O
)	O
;	O
else	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
IS_READONLY	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'R'	O
)	O
;	O
else	O
putchar	function
(	O
' '	O
)	O
;	O
printf	function
(	O
"     "	pointer
)	O
;	O
fprintPwd	function
(	O
stdout	pointer
,	O
entry	int
,	O
0	int
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
return	O
GOT_ONE	int
;	O
}	O
static	O
int	O
concise_view_attrib	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
{	O
Arg_t	struct
*	O
arg	pointer
=	O
(	O
Arg_t	struct
*	O
)	O
mp	pointer
->	O
arg	pointer
;	O
if	O
(	O
IS_ARCHIVE	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'A'	O
)	O
;	O
if	O
(	O
IS_DIR	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'D'	O
)	O
;	O
if	O
(	O
IS_SYSTEM	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'S'	O
)	O
;	O
if	O
(	O
IS_HIDDEN	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'H'	O
)	O
;	O
if	O
(	O
IS_READONLY	O
(	O
entry	int
)	O
)	O
putchar	function
(	O
'R'	O
)	O
;	O
if	O
(	O
arg	pointer
->	O
doPrintName	int
)	O
{	O
putchar	function
(	O
' '	O
)	O
;	O
fprintPwd	function
(	O
stdout	pointer
,	O
entry	int
,	O
0	int
)	O
;	O
}	O
putchar	function
(	O
'\n'	O
)	O
;	O
return	O
GOT_ONE	int
;	O
}	O
static	O
int	O
recursive_attrib	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
{	O
mp	pointer
->	O
callback	pointer
(	O
entry	int
,	O
mp	pointer
)	O
;	O
return	O
mp	pointer
->	O
loop	pointer
(	O
mp	pointer
->	O
File	pointer
,	O
mp	pointer
,	O
"*"	pointer
)	O
;	O
}	O
static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
NORETURN	O
;	O
static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Mtools version %s, dated %s\n"	pointer
,	O
mversion	pointer
,	O
mdate	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s [-p] [-a|+a] [-h|+h] [-r|+r] [-s|+s] msdosfile [msdosfiles...]\n"	pointer
,	O
progname	pointer
)	O
;	O
exit	function
(	O
ret	int
)	O
;	O
}	O
static	O
int	O
letterToCode	function
(	O
int	O
letter	int
)	O
{	O
switch	O
(	O
toupper	function
(	O
letter	int
)	O
)	O
{	O
case	O
'A'	O
:	O
return	O
ATTR_ARCHIVE	int
;	O
case	O
'H'	O
:	O
return	O
ATTR_HIDDEN	int
;	O
case	O
'R'	O
:	O
return	O
ATTR_READONLY	int
;	O
case	O
'S'	O
:	O
return	O
ATTR_SYSTEM	int
;	O
default	O
:	O
usage	function
(	O
1	int
)	O
;	O
}	O
}	O
void	O
mattrib	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
NORETURN	O
;	O
void	O
mattrib	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
type	enum
UNUSEDP	O
)	O
{	O
Arg_t	struct
arg	pointer
;	O
int	O
view	int
;	O
int	O
c	int
;	O
int	O
concise	int
;	O
int	O
replay	int
;	O
char	O
*	O
ptr	pointer
;	O
int	O
wantUsage	int
;	O
arg	pointer
.	O
add	char
=	O
0	int
;	O
arg	pointer
.	O
remove	function
=	O
0xff	int
;	O
arg	pointer
.	O
recursive	int
=	O
0	int
;	O
arg	pointer
.	O
doPrintName	int
=	O
1	int
;	O
view	int
=	O
0	int
;	O
concise	int
=	O
0	int
;	O
replay	int
=	O
0	int
;	O
wantUsage	int
=	O
0	int
;	O
if	O
(	O
helpFlag	function
(	O
argc	int
,	O
argv	pointer
)	O
)	O
usage	function
(	O
0	int
)	O
;	O
while	O
(	O
(	O
c	int
=	O
getopt	function
(	O
argc	int
,	O
argv	pointer
,	O
"i:/ahrsAHRSXp"	pointer
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
c	int
)	O
{	O
case	O
'h'	O
:	O
wantUsage	int
=	O
1	int
;	O
default	O
:	O
arg	pointer
.	O
remove	function
&=	O
~	O
letterToCode	function
(	O
c	int
)	O
;	O
break	O
;	O
case	O
'i'	O
:	O
set_cmd_line_image	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
replay	int
=	O
1	int
;	O
break	O
;	O
case	O
'/'	O
:	O
arg	pointer
.	O
recursive	int
=	O
1	int
;	O
break	O
;	O
case	O
'X'	O
:	O
concise	int
=	O
1	int
;	O
break	O
;	O
case	O
'?'	O
:	O
usage	function
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
optind	int
==	O
argc	int
&&	O
wantUsage	int
)	O
{	O
usage	function
(	O
0	int
)	O
;	O
}	O
for	O
(	O
;	O
optind	int
<	O
argc	int
;	O
optind	int
++	O
)	O
{	O
switch	O
(	O
argv	pointer
[	O
optind	int
]	O
[	O
0	int
]	O
)	O
{	O
case	O
'+'	O
:	O
for	O
(	O
ptr	pointer
=	O
argv	pointer
[	O
optind	int
]	O
+	O
1	int
;	O
*	O
ptr	pointer
;	O
ptr	pointer
++	O
)	O
arg	pointer
.	O
add	char
|=	O
letterToCode	function
(	O
*	O
ptr	pointer
)	O
;	O
continue	O
;	O
case	O
'-'	O
:	O
for	O
(	O
ptr	pointer
=	O
argv	pointer
[	O
optind	int
]	O
+	O
1	int
;	O
*	O
ptr	pointer
;	O
ptr	pointer
++	O
)	O
arg	pointer
.	O
remove	function
&=	O
~	O
letterToCode	function
(	O
*	O
ptr	pointer
)	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
arg	pointer
.	O
remove	function
==	O
0xff	int
&&	O
!	O
arg	pointer
.	O
add	char
)	O
view	int
=	O
1	int
;	O
if	O
(	O
optind	int
>=	O
argc	int
)	O
usage	function
(	O
1	int
)	O
;	O
init_mp	function
(	O
&	O
arg	pointer
.	O
mp	pointer
)	O
;	O
if	O
(	O
view	int
)	O
{	O
if	O
(	O
concise	int
)	O
{	O
arg	pointer
.	O
mp	pointer
.	O
callback	pointer
=	O
concise_view_attrib	function
;	O
arg	pointer
.	O
doPrintName	int
=	O
(	O
argc	int
-	O
optind	int
>	O
1	int
||	O
arg	pointer
.	O
recursive	int
||	O
strpbrk	function
(	O
argv	pointer
[	O
optind	int
]	O
,	O
"*[?"	pointer
)	O
!=	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
replay	int
)	O
{	O
arg	pointer
.	O
mp	pointer
.	O
callback	pointer
=	O
replay_attrib	function
;	O
}	O
else	O
arg	pointer
.	O
mp	pointer
.	O
callback	pointer
=	O
view_attrib	function
;	O
arg	pointer
.	O
mp	pointer
.	O
openflags	int
=	O
O_RDONLY	int
;	O
}	O
else	O
{	O
arg	pointer
.	O
mp	pointer
.	O
callback	pointer
=	O
attrib_file	function
;	O
arg	pointer
.	O
mp	pointer
.	O
openflags	int
=	O
O_RDWR	int
;	O
}	O
if	O
(	O
arg	pointer
.	O
recursive	int
)	O
arg	pointer
.	O
mp	pointer
.	O
dirCallback	pointer
=	O
recursive_attrib	function
;	O
arg	pointer
.	O
mp	pointer
.	O
arg	pointer
=	O
(	O
void	O
*	O
)	O
&	O
arg	pointer
;	O
arg	pointer
.	O
mp	pointer
.	O
lookupflags	int
=	O
ACCEPT_PLAIN	int
|	O
ACCEPT_DIR	int
;	O
if	O
(	O
arg	pointer
.	O
recursive	int
)	O
arg	pointer
.	O
mp	pointer
.	O
lookupflags	int
|=	O
DO_OPEN_DIRS	int
|	O
NO_DOTS	int
;	O
exit	function
(	O
main_loop	function
(	O
&	O
arg	pointer
.	O
mp	pointer
,	O
argv	pointer
+	O
optind	int
,	O
argc	int
-	O
optind	int
)	O
)	O
;	O
}	O
