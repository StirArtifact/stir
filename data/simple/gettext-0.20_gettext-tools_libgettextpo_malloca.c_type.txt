typedef	O
unsigned	O
char	O
small_t	O
;	O
verify	function
(	O
2	int
*	O
sa_alignment_max	O
-	O
1	int
<=	O
(	O
small_t	O
)	O
-	O
1	int
)	O
;	O
void	O
*	O
mmalloca	O
(	O
size_t	O
n	int
)	O
{	O
size_t	O
nplus	O
=	O
n	int
+	O
sizeof	O
(	O
small_t	O
)	O
+	O
2	int
*	O
sa_alignment_max	O
-	O
1	int
;	O
if	O
(	O
nplus	O
>=	O
n	int
)	O
{	O
char	O
*	O
mem	pointer
=	O
(	O
char	O
*	O
)	O
malloc	O
(	O
nplus	O
)	O
;	O
if	O
(	O
mem	pointer
!=	O
NULL	O
)	O
{	O
char	O
*	O
p	pointer
=	O
(	O
char	O
*	O
)	O
(	O
(	O
(	O
(	O
uintptr_t	O
)	O
mem	pointer
+	O
sizeof	O
(	O
small_t	O
)	O
+	O
sa_alignment_max	O
-	O
1	int
)	O
&	O
~	O
(	O
uintptr_t	O
)	O
(	O
2	int
*	O
sa_alignment_max	O
-	O
1	int
)	O
)	O
+	O
sa_alignment_max	O
)	O
;	O
(	O
(	O
small_t	O
*	O
)	O
p	pointer
)	O
[	O
-	O
1	int
]	O
=	O
p	pointer
-	O
mem	pointer
;	O
return	O
p	pointer
;	O
}	O
}	O
return	O
NULL	O
;	O
}	O
void	O
freea	O
(	O
void	O
*	O
p	pointer
)	O
{	O
if	O
(	O
(	O
uintptr_t	O
)	O
p	pointer
&	O
(	O
sa_alignment_max	O
-	O
1	int
)	O
)	O
{	O
abort	O
(	O
)	O
;	O
}	O
if	O
(	O
(	O
uintptr_t	O
)	O
p	pointer
&	O
sa_alignment_max	O
)	O
{	O
void	O
*	O
mem	pointer
=	O
(	O
char	O
*	O
)	O
p	pointer
-	O
(	O
(	O
small_t	O
*	O
)	O
p	pointer
)	O
[	O
-	O
1	int
]	O
;	O
free	function
(	O
mem	pointer
)	O
;	O
}	O
}	O
