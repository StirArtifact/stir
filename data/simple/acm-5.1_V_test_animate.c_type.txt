static	O
char	O
*	O
id	pointer
=	O
"V library animation test -- Riley Rainey"	pointer
;	O
struct	O
{	O
char	O
*	O
sw	pointer
;	O
int	O
value	pointer
;	O
}	O
switches	array
[	O
]	O
=	O
{	O
"-bw"	pointer
,	O
SW_BORDER	int
,	O
"-bg"	pointer
,	O
SW_BG	int
,	O
"-geometry"	pointer
,	O
SW_GEOM	int
,	O
NULL	O
,	O
0	int
}	O
,	O
*	O
swp	pointer
;	O
char	O
*	O
background	long
=	O
NULL	O
,	O
*	O
filename	pointer
;	O
int	O
borderWidth	int
=	O
1	int
;	O
int	O
mono	int
;	O
XWMHints	struct
xwmh	struct
=	O
{	O
(	O
InputHint	O
|	O
StateHint	O
)	O
,	O
False	int
,	O
NormalState	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
}	O
;	O
Display	struct
*	O
dpy	pointer
;	O
Window	long
win	long
;	O
GC	pointer
gc	pointer
;	O
XGCValues	struct
gcv	struct
;	O
XSizeHints	struct
xsh	struct
;	O
Colormap	long
cmap	long
;	O
static	O
unsigned	O
long	O
planemask	array
[	O
6	int
]	O
;	O
static	O
unsigned	O
long	O
pixels	array
[	O
16	int
]	O
;	O
GC	pointer
curGC	pointer
;	O
main	function
(	O
argc	int
,	O
argv	pointer
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
{	O
char	O
*	O
fontName	pointer
;	O
XFontStruct	struct
*	O
fontstruct	pointer
;	O
unsigned	O
long	O
ftw	long
,	O
fth	long
,	O
pad	char
;	O
unsigned	O
long	O
bg	long
,	O
bd	long
;	O
unsigned	O
long	O
bw	long
;	O
char	O
*	O
tempstr	pointer
;	O
XColor	struct
color	struct
;	O
char	O
*	O
geomSpec	pointer
=	O
NULL	O
;	O
XSetWindowAttributes	struct
xswa	struct
;	O
char	O
*	O
*	O
c	pointer
;	O
for	O
(	O
c	pointer
=	O
&	O
argv	pointer
[	O
1	int
]	O
;	O
*	O
c	pointer
!=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
++	O
c	pointer
)	O
if	O
(	O
*	O
*	O
c	pointer
==	O
'-'	O
)	O
{	O
for	O
(	O
swp	pointer
=	O
&	O
switches	array
[	O
0	int
]	O
;	O
swp	pointer
->	O
value	pointer
!=	O
0	int
;	O
++	O
swp	pointer
)	O
if	O
(	O
strcmp	O
(	O
swp	pointer
->	O
sw	pointer
,	O
*	O
c	pointer
)	O
==	O
0	int
)	O
{	O
switch	O
(	O
swp	pointer
->	O
value	pointer
)	O
{	O
case	O
SW_GEOM	int
:	O
geomSpec	pointer
=	O
*	O
(	O
++	O
c	pointer
)	O
;	O
break	O
;	O
case	O
SW_BG	int
:	O
background	long
=	O
*	O
(	O
++	O
c	pointer
)	O
;	O
break	O
;	O
case	O
SW_BORDER	int
:	O
borderWidth	int
=	O
atoi	function
(	O
*	O
(	O
++	O
c	pointer
)	O
)	O
;	O
break	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
swp	pointer
->	O
value	pointer
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: invalid switch %s"	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
*	O
c	pointer
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
}	O
else	O
filename	pointer
=	O
*	O
c	pointer
;	O
if	O
(	O
(	O
dpy	pointer
=	O
XOpenDisplay	function
(	O
NULL	O
)	O
)	O
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: can't open %s\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
XDisplayName	function
(	O
NULL	O
)	O
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
mono	int
=	O
(	O
DisplayPlanes	O
(	O
dpy	pointer
,	O
0	int
)	O
<	O
2	int
)	O
?	O
1	int
:	O
0	int
;	O
if	O
(	O
(	O
fontName	pointer
=	O
XGetDefault	function
(	O
dpy	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
ARG_FONT	pointer
)	O
)	O
==	O
NULL	O
)	O
{	O
fontName	pointer
=	O
FONT	pointer
;	O
}	O
if	O
(	O
(	O
fontstruct	pointer
=	O
XLoadQueryFont	function
(	O
dpy	pointer
,	O
fontName	pointer
)	O
)	O
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: display %s doesn't know font %s\n"	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
DisplayString	O
(	O
dpy	pointer
)	O
,	O
fontName	pointer
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
fth	long
=	O
fontstruct	pointer
->	O
max_bounds	struct
.	O
ascent	short
+	O
fontstruct	pointer
->	O
max_bounds	struct
.	O
descent	short
;	O
ftw	long
=	O
fontstruct	pointer
->	O
max_bounds	struct
.	O
width	int
;	O
cmap	long
=	O
DefaultColormap	O
(	O
dpy	pointer
,	O
DefaultScreen	O
(	O
dpy	pointer
)	O
)	O
;	O
if	O
(	O
(	O
tempstr	pointer
=	O
XGetDefault	function
(	O
dpy	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
ARG_BORDER_COLOR	pointer
)	O
)	O
==	O
NULL	O
)	O
tempstr	pointer
=	O
DEFAULT_BORDER	pointer
;	O
if	O
(	O
XParseColor	function
(	O
dpy	pointer
,	O
cmap	long
,	O
tempstr	pointer
,	O
&	O
color	struct
)	O
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Can't get border color %s\n"	pointer
,	O
tempstr	pointer
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
bd	long
=	O
color	struct
.	O
pixel	long
;	O
if	O
(	O
mono	int
==	O
0	int
)	O
if	O
(	O
XAllocColorCells	function
(	O
dpy	pointer
,	O
cmap	long
,	O
False	int
,	O
planemask	array
,	O
0	int
,	O
pixels	array
,	O
1	int
)	O
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Cannot allocate color cells\n"	pointer
)	O
;	O
}	O
bg	long
=	O
WhitePixel	O
(	O
dpy	pointer
,	O
0	int
)	O
;	O
if	O
(	O
mono	int
)	O
bd	long
=	O
BlackPixel	O
(	O
dpy	pointer
,	O
0	int
)	O
;	O
else	O
{	O
bd	long
=	O
color	struct
.	O
pixel	long
=	O
pixels	array
[	O
0	int
]	O
;	O
XStoreColor	function
(	O
dpy	pointer
,	O
cmap	long
,	O
&	O
color	struct
)	O
;	O
}	O
if	O
(	O
background	long
==	O
NULL	O
)	O
background	long
=	O
XGetDefault	function
(	O
dpy	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
ARG_BACKGROUND	pointer
)	O
;	O
if	O
(	O
background	long
==	O
NULL	O
)	O
background	long
=	O
DEFAULT_BACKGROUND	pointer
;	O
pad	char
=	O
BORDER	int
;	O
if	O
(	O
(	O
tempstr	pointer
=	O
XGetDefault	function
(	O
dpy	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
ARG_BORDER	pointer
)	O
)	O
==	O
NULL	O
)	O
bw	long
=	O
1	int
;	O
else	O
bw	long
=	O
atoi	function
(	O
tempstr	pointer
)	O
;	O
if	O
(	O
geomSpec	pointer
==	O
NULL	O
)	O
geomSpec	pointer
=	O
XGetDefault	function
(	O
dpy	pointer
,	O
argv	pointer
[	O
0	int
]	O
,	O
ARG_GEOMETRY	pointer
)	O
;	O
if	O
(	O
geomSpec	pointer
==	O
NULL	O
)	O
{	O
xsh	struct
.	O
flags	char
=	O
(	O
PPosition	O
|	O
PSize	O
)	O
;	O
xsh	struct
.	O
height	int
=	O
499	int
;	O
xsh	struct
.	O
width	int
=	O
1200	int
;	O
xsh	struct
.	O
x	int
=	O
(	O
DisplayWidth	O
(	O
dpy	pointer
,	O
DefaultScreen	O
(	O
dpy	pointer
)	O
)	O
-	O
xsh	struct
.	O
width	int
)	O
/	O
2	int
;	O
xsh	struct
.	O
y	int
=	O
(	O
DisplayHeight	O
(	O
dpy	pointer
,	O
DefaultScreen	O
(	O
dpy	pointer
)	O
)	O
-	O
xsh	struct
.	O
height	int
)	O
/	O
2	int
;	O
}	O
else	O
{	O
int	O
bitmask	int
;	O
bzero	O
(	O
&	O
xsh	struct
,	O
sizeof	O
(	O
xsh	struct
)	O
)	O
;	O
bitmask	int
=	O
XGeometry	function
(	O
dpy	pointer
,	O
DefaultScreen	O
(	O
dpy	pointer
)	O
,	O
geomSpec	pointer
,	O
geomSpec	pointer
,	O
bw	long
,	O
ftw	long
,	O
fth	long
,	O
pad	char
,	O
pad	char
,	O
&	O
(	O
xsh	struct
.	O
x	int
)	O
,	O
&	O
(	O
xsh	struct
.	O
y	int
)	O
,	O
&	O
(	O
xsh	struct
.	O
width	int
)	O
,	O
&	O
(	O
xsh	struct
.	O
height	int
)	O
)	O
;	O
if	O
(	O
bitmask	int
&	O
(	O
XValue	int
|	O
YValue	int
)	O
)	O
{	O
xsh	struct
.	O
flags	char
|=	O
USPosition	O
;	O
}	O
if	O
(	O
bitmask	int
&	O
(	O
WidthValue	int
|	O
HeightValue	int
)	O
)	O
{	O
xsh	struct
.	O
flags	char
|=	O
USSize	O
;	O
}	O
}	O
win	long
=	O
XCreateSimpleWindow	function
(	O
dpy	pointer
,	O
DefaultRootWindow	O
(	O
dpy	pointer
)	O
,	O
xsh	struct
.	O
x	int
,	O
xsh	struct
.	O
y	int
,	O
xsh	struct
.	O
width	int
,	O
xsh	struct
.	O
height	int
,	O
bw	long
,	O
bd	long
,	O
bg	long
)	O
;	O
XSetStandardProperties	function
(	O
dpy	pointer
,	O
win	long
,	O
STRING	pointer
,	O
STRING	pointer
,	O
None	int
,	O
argv	pointer
,	O
argc	int
,	O
&	O
xsh	struct
)	O
;	O
XSetWMHints	function
(	O
dpy	pointer
,	O
win	long
,	O
&	O
xwmh	struct
)	O
;	O
xswa	struct
.	O
colormap	long
=	O
DefaultColormap	O
(	O
dpy	pointer
,	O
DefaultScreen	O
(	O
dpy	pointer
)	O
)	O
;	O
xswa	struct
.	O
bit_gravity	int
=	O
NorthWestGravity	int
;	O
XChangeWindowAttributes	function
(	O
dpy	pointer
,	O
win	long
,	O
(	O
CWColormap	O
|	O
CWBitGravity	O
)	O
,	O
&	O
xswa	struct
)	O
;	O
gcv	struct
.	O
font	long
=	O
fontstruct	pointer
->	O
fid	long
;	O
curGC	pointer
=	O
XCreateGC	function
(	O
dpy	pointer
,	O
win	long
,	O
GCFont	O
,	O
&	O
gcv	struct
)	O
;	O
XSelectInput	function
(	O
dpy	pointer
,	O
win	long
,	O
ExposureMask	O
)	O
;	O
XMapWindow	function
(	O
dpy	pointer
,	O
win	long
)	O
;	O
app	function
(	O
background	long
)	O
;	O
exit	O
(	O
1	int
)	O
;	O
}	O
