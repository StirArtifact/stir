static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: crdel_rec.c,v 1.4 2014/04/17 20:27:25 sebdiaz Exp $"	pointer
;	O
int	O
CDB___crdel_fileopen_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
info	pointer
)	O
{	O
}	O
__crdel_fileopen_args	struct
*	O
argp	pointer
;	O
DBMETA	struct
ondisk	struct
;	O
DB_FH	struct
fh	struct
;	O
size_t	long
nr	long
;	O
int	O
do_unlink	int
,	O
ret	int
;	O
u_int32_t	int
b	int
,	O
mb	int
,	O
io	int
;	O
char	O
*	O
real_name	pointer
;	O
COMPQUIET	O
(	O
info	pointer
,	O
NULL	O
)	O
;	O
real_name	pointer
=	O
NULL	O
;	O
REC_PRINT	O
(	O
CDB___crdel_fileopen_print	function
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___crdel_fileopen_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
argp	pointer
->	O
name	pointer
.	O
size	int
==	O
0	int
)	O
goto	O
done	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_open	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
DB_OSO_CREATE	int
,	O
argp	pointer
->	O
mode	enum
,	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_closehandle	function
(	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
else	O
if	O
(	O
DB_UNDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
CDB___os_exists	function
(	O
real_name	pointer
,	O
NULL	O
)	O
!=	O
0	int
)	O
goto	O
done	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_open	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
0	int
,	O
0	int
,	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_ioinfo	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
&	O
fh	struct
,	O
&	O
mb	int
,	O
&	O
b	int
,	O
&	O
io	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
do_unlink	int
=	O
0	int
;	O
if	O
(	O
mb	int
!=	O
0	int
||	O
b	int
!=	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_read	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
&	O
ondisk	struct
,	O
sizeof	O
(	O
ondisk	struct
)	O
,	O
&	O
nr	long
)	O
)	O
!=	O
0	int
||	O
nr	long
!=	O
sizeof	O
(	O
ondisk	struct
)	O
)	O
goto	O
out	O
;	O
if	O
(	O
ondisk	struct
.	O
magic	int
==	O
0	int
)	O
do_unlink	int
=	O
1	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_closehandle	function
(	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
do_unlink	int
||	O
(	O
mb	int
==	O
0	int
&&	O
b	int
==	O
0	int
)	O
)	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_unlink	function
(	O
dbenv	pointer
,	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
done	O
:	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
out	O
:	O
if	O
(	O
argp	pointer
!=	O
NULL	O
)	O
CDB___os_free	function
(	O
argp	pointer
,	O
sizeof	O
(	O
*	O
argp	pointer
)	O
)	O
;	O
if	O
(	O
real_name	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
real_name	pointer
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___crdel_metasub_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
info	pointer
)	O
{	O
}	O
__crdel_metasub_args	struct
*	O
argp	pointer
;	O
DB	struct
*	O
file_dbp	pointer
;	O
DBC	struct
*	O
dbc	pointer
;	O
DB_MPOOLFILE	struct
*	O
mpf	pointer
;	O
PAGE	struct
*	O
pagep	pointer
;	O
int	O
cmp_p	int
,	O
modified	int
,	O
ret	int
;	O
COMPQUIET	O
(	O
info	pointer
,	O
NULL	O
)	O
;	O
REC_PRINT	O
(	O
CDB___crdel_metasub_print	function
)	O
;	O
REC_INTRO	O
(	O
CDB___crdel_metasub_read	function
,	O
0	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fget	function
(	O
mpf	pointer
,	O
&	O
argp	pointer
->	O
pgno	int
,	O
0	int
,	O
&	O
pagep	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fget	function
(	O
mpf	pointer
,	O
&	O
argp	pointer
->	O
pgno	int
,	O
DB_MPOOL_CREATE	int
,	O
&	O
pagep	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
else	O
{	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
goto	O
out	O
;	O
}	O
}	O
modified	int
=	O
0	int
;	O
cmp_p	int
=	O
CDB_log_compare	function
(	O
&	O
LSN	O
(	O
pagep	pointer
)	O
,	O
&	O
argp	pointer
->	O
lsn	struct
)	O
;	O
CHECK_LSN	O
(	O
op	enum
,	O
cmp_p	int
,	O
&	O
LSN	O
(	O
pagep	pointer
)	O
,	O
&	O
argp	pointer
->	O
lsn	struct
)	O
;	O
if	O
(	O
cmp_p	int
==	O
0	int
&&	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
memcpy	function
(	O
pagep	pointer
,	O
argp	pointer
->	O
page	pointer
.	O
data	pointer
,	O
argp	pointer
->	O
page	pointer
.	O
size	int
)	O
;	O
LSN	O
(	O
pagep	pointer
)	O
=	O
*	O
lsnp	pointer
;	O
modified	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
DB_UNDO	O
(	O
op	enum
)	O
)	O
{	O
LSN	O
(	O
pagep	pointer
)	O
=	O
argp	pointer
->	O
lsn	struct
;	O
modified	int
=	O
1	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fput	function
(	O
mpf	pointer
,	O
pagep	pointer
,	O
modified	int
?	O
DB_MPOOL_DIRTY	int
:	O
0	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
done	O
:	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
out	O
:	O
REC_CLOSE	O
;	O
}	O
int	O
CDB___crdel_metapage_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
info	pointer
)	O
{	O
}	O
__crdel_metapage_args	struct
*	O
argp	pointer
;	O
DB	struct
*	O
dbp	pointer
;	O
DBMETA	struct
*	O
meta	pointer
,	O
ondisk	struct
;	O
DB_FH	struct
fh	struct
;	O
size_t	long
nr	long
;	O
u_int32_t	int
b	int
,	O
io	int
,	O
mb	int
,	O
pagesize	long
;	O
int	O
is_done	int
,	O
ret	int
;	O
char	O
*	O
real_name	pointer
;	O
COMPQUIET	O
(	O
info	pointer
,	O
NULL	O
)	O
;	O
real_name	pointer
=	O
NULL	O
;	O
memset	function
(	O
&	O
fh	struct
,	O
0	int
,	O
sizeof	O
(	O
fh	struct
)	O
)	O
;	O
REC_PRINT	O
(	O
CDB___crdel_metapage_print	function
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___crdel_metapage_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
argp	pointer
->	O
name	pointer
.	O
size	int
==	O
0	int
)	O
goto	O
done	O
;	O
meta	pointer
=	O
(	O
DBMETA	struct
*	O
)	O
argp	pointer
->	O
page	pointer
.	O
data	pointer
;	O
CDB___ua_memcpy	function
(	O
&	O
pagesize	long
,	O
&	O
meta	pointer
->	O
pagesize	long
,	O
sizeof	O
(	O
pagesize	long
)	O
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fileid_to_db	function
(	O
dbenv	pointer
,	O
&	O
dbp	pointer
,	O
argp	pointer
->	O
fileid	array
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
ret	int
==	O
DB_DELETED	O
)	O
goto	O
done	O
;	O
else	O
goto	O
out	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_open	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
0	int
,	O
0	int
,	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_seek	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
pagesize	long
,	O
argp	pointer
->	O
pgno	int
,	O
0	int
,	O
0	int
,	O
DB_OS_SEEK_SET	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_read	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
&	O
ondisk	struct
,	O
sizeof	O
(	O
ondisk	struct
)	O
,	O
&	O
nr	long
)	O
)	O
==	O
0	int
&&	O
nr	long
==	O
sizeof	O
(	O
ondisk	struct
)	O
)	O
{	O
if	O
(	O
ondisk	struct
.	O
magic	int
!=	O
0	int
)	O
goto	O
done	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_seek	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
pagesize	long
,	O
argp	pointer
->	O
pgno	int
,	O
0	int
,	O
0	int
,	O
DB_OS_SEEK_SET	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
CDB___ua_memcpy	function
(	O
&	O
meta	pointer
->	O
lsn	struct
,	O
lsnp	pointer
,	O
sizeof	O
(	O
DB_LSN	struct
)	O
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_write	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
argp	pointer
->	O
page	pointer
.	O
data	pointer
,	O
argp	pointer
->	O
page	pointer
.	O
size	int
,	O
&	O
nr	long
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
nr	long
!=	O
(	O
size_t	long
)	O
argp	pointer
->	O
page	pointer
.	O
size	int
)	O
{	O
CDB___db_err	function
(	O
dbenv	pointer
,	O
"Write failed during recovery"	pointer
)	O
;	O
ret	int
=	O
EIO	int
;	O
goto	O
out	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___log_reopen_file	function
(	O
dbenv	pointer
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
argp	pointer
->	O
fileid	array
,	O
meta	pointer
->	O
uid	array
,	O
argp	pointer
->	O
pgno	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
else	O
if	O
(	O
DB_UNDO	O
(	O
op	enum
)	O
)	O
{	O
is_done	int
=	O
0	int
;	O
if	O
(	O
CDB___os_exists	function
(	O
real_name	pointer
,	O
NULL	O
)	O
!=	O
0	int
)	O
goto	O
done	O
;	O
dbp	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fileid_to_db	function
(	O
dbenv	pointer
,	O
&	O
dbp	pointer
,	O
argp	pointer
->	O
fileid	array
,	O
0	int
)	O
)	O
==	O
0	int
)	O
(	O
void	O
)	O
dbp	pointer
->	O
sync	pointer
(	O
dbp	pointer
,	O
0	int
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_open	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
0	int
,	O
0	int
,	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_ioinfo	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
&	O
fh	struct
,	O
&	O
mb	int
,	O
&	O
b	int
,	O
&	O
io	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
mb	int
!=	O
0	int
||	O
b	int
!=	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_seek	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
pagesize	long
,	O
argp	pointer
->	O
pgno	int
,	O
0	int
,	O
0	int
,	O
DB_OS_SEEK_SET	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_read	function
(	O
dbenv	pointer
,	O
&	O
fh	struct
,	O
&	O
ondisk	struct
,	O
sizeof	O
(	O
ondisk	struct
)	O
,	O
&	O
nr	long
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB_log_compare	function
(	O
&	O
ondisk	struct
.	O
lsn	struct
,	O
lsnp	pointer
)	O
!=	O
0	int
)	O
is_done	int
=	O
1	int
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_closehandle	function
(	O
&	O
fh	struct
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
!	O
is_done	int
)	O
{	O
if	O
(	O
dbp	pointer
!=	O
NULL	O
&&	O
dbp	pointer
->	O
saved_open_fhp	pointer
!=	O
NULL	O
&&	O
F_ISSET	O
(	O
dbp	pointer
->	O
saved_open_fhp	pointer
,	O
DB_FH_VALID	int
)	O
&&	O
(	O
ret	int
=	O
CDB___os_closehandle	function
(	O
dbp	pointer
->	O
saved_open_fhp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
dbp	pointer
!=	O
NULL	O
&&	O
dbp	pointer
->	O
mpf	pointer
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
CDB___memp_fremove	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fclose	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_AM_DISCARD	int
)	O
;	O
dbp	pointer
->	O
mpf	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_unlink	function
(	O
dbenv	pointer
,	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
}	O
done	O
:	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
out	O
:	O
if	O
(	O
argp	pointer
!=	O
NULL	O
)	O
CDB___os_free	function
(	O
argp	pointer
,	O
sizeof	O
(	O
*	O
argp	pointer
)	O
)	O
;	O
if	O
(	O
real_name	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
real_name	pointer
)	O
;	O
if	O
(	O
F_ISSET	O
(	O
&	O
fh	struct
,	O
DB_FH_VALID	int
)	O
)	O
(	O
void	O
)	O
CDB___os_closehandle	function
(	O
&	O
fh	struct
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___crdel_delete_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
info	pointer
)	O
{	O
}	O
DB	struct
*	O
dbp	pointer
;	O
__crdel_delete_args	struct
*	O
argp	pointer
;	O
int	O
ret	int
;	O
char	O
*	O
backup	pointer
,	O
*	O
real_back	pointer
,	O
*	O
real_name	pointer
;	O
REC_PRINT	O
(	O
CDB___crdel_delete_print	function
)	O
;	O
backup	pointer
=	O
real_back	pointer
=	O
real_name	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___crdel_delete_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB___os_exists	function
(	O
real_name	pointer
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fileid_to_db	function
(	O
dbenv	pointer
,	O
&	O
dbp	pointer
,	O
argp	pointer
->	O
fileid	array
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
(	O
void	O
)	O
CDB___memp_fremove	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fclose	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
dbp	pointer
->	O
mpf	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_unlink	function
(	O
dbenv	pointer
,	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_backup_name	function
(	O
dbenv	pointer
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
&	O
backup	pointer
,	O
lsnp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
backup	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_back	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB___os_exists	function
(	O
real_back	pointer
,	O
NULL	O
)	O
==	O
0	int
)	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_unlink	function
(	O
dbenv	pointer
,	O
real_back	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_txnlist_delete	function
(	O
dbenv	pointer
,	O
info	pointer
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
TXNLIST_INVALID_ID	int
,	O
1	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
else	O
if	O
(	O
DB_UNDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_backup_name	function
(	O
dbenv	pointer
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
&	O
backup	pointer
,	O
lsnp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
backup	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_back	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB___os_exists	function
(	O
real_back	pointer
,	O
NULL	O
)	O
==	O
0	int
)	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_rename	function
(	O
dbenv	pointer
,	O
real_back	pointer
,	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
out	O
:	O
if	O
(	O
argp	pointer
!=	O
NULL	O
)	O
CDB___os_free	function
(	O
argp	pointer
,	O
sizeof	O
(	O
*	O
argp	pointer
)	O
)	O
;	O
if	O
(	O
backup	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
backup	pointer
)	O
;	O
if	O
(	O
real_back	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
real_back	pointer
)	O
;	O
if	O
(	O
real_name	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
real_name	pointer
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
int	O
CDB___crdel_rename_recover	function
(	O
dbenv	pointer
,	O
dbtp	pointer
,	O
lsnp	pointer
,	O
op	enum
,	O
info	pointer
)	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
DBT	struct
*	O
dbtp	pointer
;	O
DB_LSN	struct
*	O
lsnp	pointer
;	O
db_recops	enum
op	enum
;	O
void	O
*	O
info	pointer
;	O
{	O
if	O
(	O
info	pointer
)	O
{	O
}	O
DB	struct
*	O
dbp	pointer
;	O
__crdel_rename_args	struct
*	O
argp	pointer
;	O
char	O
*	O
new_name	pointer
,	O
*	O
real_name	pointer
;	O
int	O
ret	int
,	O
set	int
;	O
COMPQUIET	O
(	O
info	pointer
,	O
NULL	O
)	O
;	O
REC_PRINT	O
(	O
CDB___crdel_rename_print	function
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___crdel_rename_read	function
(	O
dbenv	pointer
,	O
dbtp	pointer
->	O
data	pointer
,	O
&	O
argp	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_fileid_to_db	function
(	O
dbenv	pointer
,	O
&	O
dbp	pointer
,	O
argp	pointer
->	O
fileid	array
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
DB_REDO	O
(	O
op	enum
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___log_filelist_update	function
(	O
dbenv	pointer
,	O
NULL	O
,	O
argp	pointer
->	O
fileid	array
,	O
argp	pointer
->	O
newname	struct
.	O
data	pointer
,	O
&	O
set	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
set	int
!=	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB___os_exists	function
(	O
real_name	pointer
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
newname	struct
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
new_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
(	O
void	O
)	O
CDB___memp_fremove	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fclose	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
dbp	pointer
->	O
mpf	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_rename	function
(	O
dbenv	pointer
,	O
real_name	pointer
,	O
new_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___log_filelist_update	function
(	O
dbenv	pointer
,	O
NULL	O
,	O
argp	pointer
->	O
fileid	array
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
&	O
set	int
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
set	int
!=	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
newname	struct
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
new_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
CDB___os_exists	function
(	O
new_name	pointer
,	O
NULL	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___db_appname	function
(	O
dbenv	pointer
,	O
DB_APP_DATA	int
,	O
NULL	O
,	O
argp	pointer
->	O
name	pointer
.	O
data	pointer
,	O
0	int
,	O
NULL	O
,	O
&	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
if	O
(	O
dbp	pointer
->	O
mpf	pointer
!=	O
NULL	O
)	O
{	O
(	O
void	O
)	O
CDB___memp_fremove	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
;	O
if	O
(	O
(	O
ret	int
=	O
CDB_memp_fclose	function
(	O
dbp	pointer
->	O
mpf	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
dbp	pointer
->	O
mpf	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_rename	function
(	O
dbenv	pointer
,	O
new_name	pointer
,	O
real_name	pointer
)	O
)	O
!=	O
0	int
)	O
goto	O
out	O
;	O
}	O
}	O
}	O
*	O
lsnp	pointer
=	O
argp	pointer
->	O
prev_lsn	struct
;	O
ret	int
=	O
0	int
;	O
out	O
:	O
if	O
(	O
argp	pointer
!=	O
NULL	O
)	O
CDB___os_free	function
(	O
argp	pointer
,	O
sizeof	O
(	O
*	O
argp	pointer
)	O
)	O
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
