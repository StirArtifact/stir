static	O
kwset_t	pointer
kwset	pointer
;	O
void	O
Fcompile	function
(	O
char	O
const	O
*	O
pattern	pointer
,	O
size_t	long
size	array
)	O
{	O
char	O
const	O
*	O
beg	pointer
,	O
*	O
end	pointer
,	O
*	O
lim	pointer
,	O
*	O
err	long
,	O
*	O
pat	pointer
;	O
size_t	long
psize	long
;	O
kwsinit	function
(	O
&	O
kwset	pointer
)	O
;	O
psize	long
=	O
size	array
;	O
if	O
(	O
match_icase	int
&&	O
MB_CUR_MAX	O
>	O
1	int
)	O
pat	pointer
=	O
mbtolower	function
(	O
pattern	pointer
,	O
&	O
psize	long
)	O
;	O
else	O
pat	pointer
=	O
pattern	pointer
;	O
beg	pointer
=	O
pat	pointer
;	O
do	O
{	O
for	O
(	O
lim	pointer
=	O
beg	pointer
;	O
;	O
++	O
lim	pointer
)	O
{	O
end	pointer
=	O
lim	pointer
;	O
if	O
(	O
lim	pointer
>=	O
pat	pointer
+	O
psize	long
)	O
break	O
;	O
if	O
(	O
*	O
lim	pointer
==	O
'\n'	O
)	O
{	O
lim	pointer
++	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
err	long
=	O
kwsincr	function
(	O
kwset	pointer
,	O
beg	pointer
,	O
end	pointer
-	O
beg	pointer
)	O
)	O
!=	O
NULL	O
)	O
error	function
(	O
EXIT_TROUBLE	int
,	O
0	int
,	O
"%s"	pointer
,	O
err	long
)	O
;	O
beg	pointer
=	O
lim	pointer
;	O
}	O
while	O
(	O
beg	pointer
<	O
pat	pointer
+	O
psize	long
)	O
;	O
if	O
(	O
(	O
err	long
=	O
kwsprep	function
(	O
kwset	pointer
)	O
)	O
!=	O
NULL	O
)	O
error	function
(	O
EXIT_TROUBLE	int
,	O
0	int
,	O
"%s"	pointer
,	O
err	long
)	O
;	O
}	O
size_t	long
Fexecute	function
(	O
char	O
const	O
*	O
buf	pointer
,	O
size_t	long
size	array
,	O
size_t	long
*	O
match_size	pointer
,	O
char	O
const	O
*	O
start_ptr	pointer
)	O
{	O
char	O
const	O
*	O
beg	pointer
,	O
*	O
try	pointer
,	O
*	O
end	pointer
,	O
*	O
mb_start	pointer
;	O
size_t	long
len	long
;	O
char	O
eol	char
=	O
eolbyte	char
;	O
struct	O
kwsmatch	struct
kwsmatch	struct
;	O
size_t	long
ret_val	long
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
{	O
if	O
(	O
match_icase	int
)	O
{	O
char	O
*	O
case_buf	pointer
=	O
mbtolower	function
(	O
buf	pointer
,	O
&	O
size	array
)	O
;	O
if	O
(	O
start_ptr	pointer
)	O
start_ptr	pointer
=	O
case_buf	pointer
+	O
(	O
start_ptr	pointer
-	O
buf	pointer
)	O
;	O
buf	pointer
=	O
case_buf	pointer
;	O
}	O
}	O
for	O
(	O
mb_start	pointer
=	O
beg	pointer
=	O
start_ptr	pointer
?	O
start_ptr	pointer
:	O
buf	pointer
;	O
beg	pointer
<=	O
buf	pointer
+	O
size	array
;	O
beg	pointer
++	O
)	O
{	O
size_t	long
offset	long
=	O
kwsexec	function
(	O
kwset	pointer
,	O
beg	pointer
,	O
buf	pointer
+	O
size	array
-	O
beg	pointer
,	O
&	O
kwsmatch	struct
)	O
;	O
if	O
(	O
offset	long
==	O
(	O
size_t	long
)	O
-	O
1	int
)	O
goto	O
failure	O
;	O
len	long
=	O
kwsmatch	struct
.	O
size	array
[	O
0	int
]	O
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
&&	O
is_mb_middle	function
(	O
&	O
mb_start	pointer
,	O
beg	pointer
+	O
offset	long
,	O
buf	pointer
+	O
size	array
,	O
len	long
)	O
)	O
{	O
mbstate_t	struct
s	long
;	O
memset	function
(	O
&	O
s	long
,	O
0	int
,	O
sizeof	O
s	long
)	O
;	O
size_t	long
mb_len	long
=	O
mbrlen	function
(	O
mb_start	pointer
,	O
(	O
buf	pointer
+	O
size	array
)	O
-	O
(	O
beg	pointer
+	O
offset	long
)	O
,	O
&	O
s	long
)	O
;	O
if	O
(	O
mb_len	long
==	O
(	O
size_t	long
)	O
-	O
2	int
)	O
goto	O
failure	O
;	O
beg	pointer
=	O
mb_start	pointer
;	O
if	O
(	O
mb_len	long
!=	O
(	O
size_t	long
)	O
-	O
1	int
)	O
beg	pointer
+=	O
mb_len	long
-	O
1	int
;	O
continue	O
;	O
}	O
beg	pointer
+=	O
offset	long
;	O
if	O
(	O
start_ptr	pointer
&&	O
!	O
match_words	int
)	O
goto	O
success_in_beg_and_len	O
;	O
if	O
(	O
match_lines	int
)	O
{	O
if	O
(	O
beg	pointer
>	O
buf	pointer
&&	O
beg	pointer
[	O
-	O
1	int
]	O
!=	O
eol	char
)	O
continue	O
;	O
if	O
(	O
beg	pointer
+	O
len	long
<	O
buf	pointer
+	O
size	array
&&	O
beg	pointer
[	O
len	long
]	O
!=	O
eol	char
)	O
continue	O
;	O
goto	O
success	O
;	O
}	O
else	O
if	O
(	O
match_words	int
)	O
for	O
(	O
try	pointer
=	O
beg	pointer
;	O
;	O
)	O
{	O
if	O
(	O
try	pointer
>	O
buf	pointer
&&	O
WCHAR	O
(	O
(	O
unsigned	O
char	O
)	O
try	pointer
[	O
-	O
1	int
]	O
)	O
)	O
break	O
;	O
if	O
(	O
try	pointer
+	O
len	long
<	O
buf	pointer
+	O
size	array
&&	O
WCHAR	O
(	O
(	O
unsigned	O
char	O
)	O
try	pointer
[	O
len	long
]	O
)	O
)	O
{	O
if	O
(	O
!	O
len	long
)	O
break	O
;	O
offset	long
=	O
kwsexec	function
(	O
kwset	pointer
,	O
beg	pointer
,	O
--	O
len	long
,	O
&	O
kwsmatch	struct
)	O
;	O
if	O
(	O
offset	long
==	O
(	O
size_t	long
)	O
-	O
1	int
)	O
break	O
;	O
try	pointer
=	O
beg	pointer
+	O
offset	long
;	O
len	long
=	O
kwsmatch	struct
.	O
size	array
[	O
0	int
]	O
;	O
}	O
else	O
if	O
(	O
!	O
start_ptr	pointer
)	O
goto	O
success	O
;	O
else	O
goto	O
success_in_beg_and_len	O
;	O
}	O
else	O
goto	O
success	O
;	O
}	O
failure	O
:	O
ret_val	long
=	O
-	O
1	int
;	O
goto	O
out	O
;	O
success	O
:	O
if	O
(	O
(	O
end	pointer
=	O
memchr	function
(	O
beg	pointer
+	O
len	long
,	O
eol	char
,	O
(	O
buf	pointer
+	O
size	array
)	O
-	O
(	O
beg	pointer
+	O
len	long
)	O
)	O
)	O
!=	O
NULL	O
)	O
end	pointer
++	O
;	O
else	O
end	pointer
=	O
buf	pointer
+	O
size	array
;	O
while	O
(	O
buf	pointer
<	O
beg	pointer
&&	O
beg	pointer
[	O
-	O
1	int
]	O
!=	O
eol	char
)	O
--	O
beg	pointer
;	O
len	long
=	O
end	pointer
-	O
beg	pointer
;	O
success_in_beg_and_len	O
:	O
*	O
match_size	pointer
=	O
len	long
;	O
ret_val	long
=	O
beg	pointer
-	O
buf	pointer
;	O
out	O
:	O
return	O
ret_val	long
;	O
}	O
