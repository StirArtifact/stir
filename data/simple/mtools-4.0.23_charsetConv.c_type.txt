struct	O
doscp_t	struct
{	O
iconv_t	pointer
from	pointer
;	O
iconv_t	pointer
to	pointer
;	O
}	O
;	O
static	O
const	O
char	O
*	O
wcharCp	pointer
=	O
NULL	O
;	O
static	O
const	O
char	O
*	O
wcharTries	array
[	O
]	O
=	O
{	O
"WCHAR_T"	pointer
,	O
"UTF-32BE"	pointer
,	O
"UTF-32LE"	pointer
,	O
"UTF-16BE"	pointer
,	O
"UTF-16LE"	pointer
,	O
"UTF-32"	pointer
,	O
"UTF-16"	pointer
,	O
"UCS-4BE"	pointer
,	O
"UCS-4LE"	pointer
,	O
"UCS-2BE"	pointer
,	O
"UCS-2LE"	pointer
,	O
"UCS-4"	pointer
,	O
"UCS-2"	pointer
}	O
;	O
static	O
const	O
char	O
*	O
asciiTries	array
[	O
]	O
=	O
{	O
"ASCII"	pointer
,	O
"ASCII-GR"	pointer
,	O
"ISO8859-1"	pointer
}	O
;	O
static	O
const	O
wchar_t	int
*	O
testString	pointer
=	O
L"ab"	O
;	O
static	O
int	O
try	function
(	O
const	O
char	O
*	O
testCp	pointer
)	O
{	O
size_t	long
res	long
;	O
char	O
*	O
inbuf	pointer
=	O
(	O
char	O
*	O
)	O
testString	pointer
;	O
size_t	long
inbufLen	long
=	O
2	int
*	O
sizeof	O
(	O
wchar_t	int
)	O
;	O
char	O
outbuf	array
[	O
3	int
]	O
;	O
char	O
*	O
outbufP	pointer
=	O
outbuf	array
;	O
size_t	long
outbufLen	long
=	O
2	int
*	O
sizeof	O
(	O
char	O
)	O
;	O
iconv_t	pointer
test	pointer
=	O
0	int
;	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
sizeof	O
(	O
asciiTries	array
)	O
/	O
sizeof	O
(	O
asciiTries	array
[	O
0	int
]	O
)	O
;	O
i	long
++	O
)	O
{	O
test	pointer
=	O
iconv_open	function
(	O
asciiTries	array
[	O
i	long
]	O
,	O
testCp	pointer
)	O
;	O
if	O
(	O
test	pointer
!=	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
break	O
;	O
}	O
if	O
(	O
test	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
goto	O
fail0	O
;	O
res	long
=	O
iconv	function
(	O
test	pointer
,	O
&	O
inbuf	pointer
,	O
&	O
inbufLen	long
,	O
&	O
outbufP	pointer
,	O
&	O
outbufLen	long
)	O
;	O
if	O
(	O
res	long
!=	O
0	int
||	O
outbufLen	long
!=	O
0	int
||	O
inbufLen	long
!=	O
0	int
)	O
goto	O
fail	O
;	O
if	O
(	O
memcmp	function
(	O
outbuf	array
,	O
"ab"	pointer
,	O
2	int
)	O
)	O
goto	O
fail	O
;	O
return	O
1	int
;	O
fail	O
:	O
iconv_close	function
(	O
test	pointer
)	O
;	O
fail0	O
:	O
return	O
0	int
;	O
}	O
static	O
const	O
char	O
*	O
getWcharCp	function
(	O
void	O
)	O
{	O
unsigned	O
int	O
i	long
;	O
if	O
(	O
wcharCp	pointer
!=	O
NULL	O
)	O
return	O
wcharCp	pointer
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
sizeof	O
(	O
wcharTries	array
)	O
/	O
sizeof	O
(	O
wcharTries	array
[	O
0	int
]	O
)	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
try	function
(	O
wcharTries	array
[	O
i	long
]	O
)	O
)	O
return	O
(	O
wcharCp	pointer
=	O
wcharTries	array
[	O
i	long
]	O
)	O
;	O
}	O
fprintf	function
(	O
stderr	pointer
,	O
"No codepage found for wchar_t\n"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
doscp_t	struct
*	O
cp_open	function
(	O
int	O
codepage	int
)	O
{	O
char	O
dosCp	array
[	O
17	int
]	O
;	O
doscp_t	struct
*	O
ret	pointer
;	O
iconv_t	pointer
*	O
from	pointer
;	O
iconv_t	pointer
*	O
to	pointer
;	O
if	O
(	O
codepage	int
==	O
0	int
)	O
codepage	int
=	O
mtools_default_codepage	int
;	O
if	O
(	O
codepage	int
<	O
0	int
||	O
codepage	int
>	O
9999	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Bad codepage %d\n"	pointer
,	O
codepage	int
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
getWcharCp	function
(	O
)	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
sprintf	function
(	O
dosCp	array
,	O
"CP%d"	pointer
,	O
codepage	int
)	O
;	O
from	pointer
=	O
iconv_open	function
(	O
wcharCp	pointer
,	O
dosCp	array
)	O
;	O
if	O
(	O
from	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Error converting to codepage %d %s\n"	pointer
,	O
codepage	int
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
sprintf	function
(	O
dosCp	array
,	O
"CP%d//TRANSLIT"	pointer
,	O
codepage	int
)	O
;	O
to	pointer
=	O
iconv_open	function
(	O
dosCp	array
,	O
wcharCp	pointer
)	O
;	O
if	O
(	O
to	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
{	O
sprintf	function
(	O
dosCp	array
,	O
"CP%d"	pointer
,	O
codepage	int
)	O
;	O
to	pointer
=	O
iconv_open	function
(	O
dosCp	array
,	O
wcharCp	pointer
)	O
;	O
}	O
if	O
(	O
to	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
{	O
iconv_close	function
(	O
from	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Error converting to codepage %d %s\n"	pointer
,	O
codepage	int
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
ret	pointer
=	O
New	O
(	O
doscp_t	struct
)	O
;	O
if	O
(	O
ret	pointer
==	O
NULL	O
)	O
return	O
ret	pointer
;	O
ret	pointer
->	O
from	pointer
=	O
from	pointer
;	O
ret	pointer
->	O
to	pointer
=	O
to	pointer
;	O
return	O
ret	pointer
;	O
}	O
void	O
cp_close	function
(	O
doscp_t	struct
*	O
cp	pointer
)	O
{	O
iconv_close	function
(	O
cp	pointer
->	O
to	pointer
)	O
;	O
iconv_close	function
(	O
cp	pointer
->	O
from	pointer
)	O
;	O
free	function
(	O
cp	pointer
)	O
;	O
}	O
int	O
dos_to_wchar	function
(	O
doscp_t	struct
*	O
cp	pointer
,	O
const	O
char	O
*	O
dos	pointer
,	O
wchar_t	int
*	O
wchar	pointer
,	O
size_t	long
len	long
)	O
{	O
int	O
r	int
;	O
size_t	long
in_len	long
=	O
len	long
;	O
size_t	long
out_len	long
=	O
len	long
*	O
sizeof	O
(	O
wchar_t	int
)	O
;	O
wchar_t	int
*	O
dptr	pointer
=	O
wchar	pointer
;	O
char	O
*	O
dos2	pointer
=	O
(	O
char	O
*	O
)	O
dos	pointer
;	O
r	int
=	O
iconv	function
(	O
cp	pointer
->	O
from	pointer
,	O
&	O
dos2	pointer
,	O
&	O
in_len	long
,	O
(	O
char	O
*	O
*	O
)	O
&	O
dptr	pointer
,	O
&	O
out_len	long
)	O
;	O
if	O
(	O
r	int
<	O
0	int
)	O
return	O
r	int
;	O
*	O
dptr	pointer
=	O
L'\0'	O
;	O
return	O
dptr	pointer
-	O
wchar	pointer
;	O
}	O
static	O
int	O
safe_iconv	function
(	O
iconv_t	pointer
conv	pointer
,	O
const	O
wchar_t	int
*	O
wchar	pointer
,	O
char	O
*	O
dest	short
,	O
size_t	long
in_len	long
,	O
size_t	long
out_len	long
,	O
int	O
*	O
mangled	pointer
)	O
{	O
int	O
r	int
;	O
unsigned	O
int	O
i	long
;	O
char	O
*	O
dptr	pointer
=	O
dest	short
;	O
size_t	long
len	long
;	O
in_len	long
=	O
in_len	long
*	O
sizeof	O
(	O
wchar_t	int
)	O
;	O
while	O
(	O
in_len	long
>	O
0	int
&&	O
out_len	long
>	O
0	int
)	O
{	O
r	int
=	O
iconv	function
(	O
conv	pointer
,	O
(	O
char	O
*	O
*	O
)	O
&	O
wchar	pointer
,	O
&	O
in_len	long
,	O
&	O
dptr	pointer
,	O
&	O
out_len	long
)	O
;	O
if	O
(	O
r	int
>=	O
0	int
||	O
errno	O
!=	O
EILSEQ	int
)	O
{	O
break	O
;	O
}	O
*	O
mangled	pointer
|=	O
1	int
;	O
if	O
(	O
out_len	long
<=	O
0	int
)	O
break	O
;	O
if	O
(	O
dptr	pointer
)	O
*	O
dptr	pointer
++	O
=	O
'_'	O
;	O
in_len	long
-=	O
sizeof	O
(	O
wchar_t	int
)	O
;	O
wchar	pointer
++	O
;	O
out_len	long
--	O
;	O
}	O
len	long
=	O
dptr	pointer
-	O
dest	short
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
len	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
dest	short
[	O
i	long
]	O
==	O
'?'	O
)	O
{	O
dest	short
[	O
i	long
]	O
=	O
'_'	O
;	O
*	O
mangled	pointer
|=	O
1	int
;	O
}	O
}	O
return	O
len	long
;	O
}	O
void	O
wchar_to_dos	function
(	O
doscp_t	struct
*	O
cp	pointer
,	O
wchar_t	int
*	O
wchar	pointer
,	O
char	O
*	O
dos	pointer
,	O
size_t	long
len	long
,	O
int	O
*	O
mangled	pointer
)	O
{	O
safe_iconv	function
(	O
cp	pointer
->	O
to	pointer
,	O
wchar	pointer
,	O
dos	pointer
,	O
len	long
,	O
len	long
,	O
mangled	pointer
)	O
;	O
}	O
static	O
iconv_t	pointer
to_native	pointer
=	O
NULL	O
;	O
static	O
void	O
initialize_to_native	function
(	O
void	O
)	O
{	O
char	O
*	O
li	pointer
,	O
*	O
cp	pointer
;	O
int	O
len	long
;	O
if	O
(	O
to_native	pointer
!=	O
NULL	O
)	O
return	O
;	O
li	pointer
=	O
nl_langinfo	function
(	O
CODESET	int
)	O
;	O
len	long
=	O
strlen	function
(	O
li	pointer
)	O
+	O
11	int
;	O
if	O
(	O
getWcharCp	function
(	O
)	O
==	O
NULL	O
)	O
exit	function
(	O
1	int
)	O
;	O
cp	pointer
=	O
safe_malloc	function
(	O
len	long
)	O
;	O
strcpy	function
(	O
cp	pointer
,	O
li	pointer
)	O
;	O
strcat	function
(	O
cp	pointer
,	O
"//TRANSLIT"	pointer
)	O
;	O
to_native	pointer
=	O
iconv_open	function
(	O
cp	pointer
,	O
wcharCp	pointer
)	O
;	O
if	O
(	O
to_native	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
to_native	pointer
=	O
iconv_open	function
(	O
li	pointer
,	O
wcharCp	pointer
)	O
;	O
if	O
(	O
to_native	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
fprintf	function
(	O
stderr	pointer
,	O
"Could not allocate iconv for %s\n"	pointer
,	O
cp	pointer
)	O
;	O
free	function
(	O
cp	pointer
)	O
;	O
if	O
(	O
to_native	pointer
==	O
(	O
iconv_t	pointer
)	O
-	O
1	int
)	O
exit	function
(	O
1	int
)	O
;	O
}	O
int	O
wchar_to_native	function
(	O
const	O
wchar_t	int
*	O
wchar	pointer
,	O
char	O
*	O
native	pointer
,	O
size_t	long
len	long
,	O
size_t	long
out_len	long
)	O
{	O
int	O
mangled	pointer
;	O
int	O
r	int
;	O
initialize_to_native	function
(	O
)	O
;	O
len	long
=	O
wcsnlen	function
(	O
wchar	pointer
,	O
len	long
)	O
;	O
r	int
=	O
safe_iconv	function
(	O
to_native	pointer
,	O
wchar	pointer
,	O
native	pointer
,	O
len	long
,	O
out_len	long
,	O
&	O
mangled	pointer
)	O
;	O
native	pointer
[	O
r	int
]	O
=	O
'\0'	O
;	O
return	O
r	int
;	O
}	O
int	O
native_to_wchar	function
(	O
const	O
char	O
*	O
native	pointer
,	O
wchar_t	int
*	O
wchar	pointer
,	O
size_t	long
len	long
,	O
const	O
char	O
*	O
end	pointer
,	O
int	O
*	O
mangled	pointer
)	O
{	O
mbstate_t	struct
ps	struct
;	O
unsigned	O
int	O
i	long
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
ps	struct
)	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
len	long
&&	O
(	O
native	pointer
<	O
end	pointer
||	O
!	O
end	pointer
)	O
;	O
i	long
++	O
)	O
{	O
int	O
r	int
=	O
mbrtowc	function
(	O
wchar	pointer
+	O
i	long
,	O
native	pointer
,	O
len	long
,	O
&	O
ps	struct
)	O
;	O
if	O
(	O
r	int
<	O
0	int
)	O
{	O
char	O
c	char
=	O
*	O
native	pointer
;	O
if	O
(	O
c	char
>=	O
'\xa0'	O
&&	O
c	char
<	O
'\xff'	O
)	O
wchar	pointer
[	O
i	long
]	O
=	O
c	char
&	O
0xff	int
;	O
else	O
wchar	pointer
[	O
i	long
]	O
=	O
'_'	O
;	O
memset	function
(	O
&	O
ps	struct
,	O
0	int
,	O
sizeof	O
(	O
ps	struct
)	O
)	O
;	O
r	int
=	O
1	int
;	O
}	O
if	O
(	O
r	int
==	O
0	int
)	O
break	O
;	O
native	pointer
+=	O
r	int
;	O
}	O
if	O
(	O
mangled	pointer
&&	O
(	O
(	O
end	pointer
&&	O
native	pointer
<	O
end	pointer
)	O
||	O
(	O
!	O
end	pointer
&&	O
*	O
native	pointer
&&	O
i	long
==	O
len	long
)	O
)	O
)	O
*	O
mangled	pointer
|=	O
3	int
;	O
wchar	pointer
[	O
i	long
]	O
=	O
'\0'	O
;	O
return	O
i	long
;	O
}	O
