static	O
const	O
char	O
table	array
[	O
240	int
]	O
[	O
3	int
+	O
1	int
]	O
=	O
{	O
"\xC3\x88"	pointer
,	O
""	pointer
,	O
"\xC4\x90"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"J"	pointer
,	O
"Lj"	pointer
,	O
"Nj"	pointer
,	O
"\xC4\x86"	pointer
,	O
""	pointer
,	O
"\xC3\x8C"	pointer
,	O
""	pointer
,	O
"D\xC5\xBE"	pointer
,	O
"A"	pointer
,	O
"B"	pointer
,	O
"V"	pointer
,	O
"G"	pointer
,	O
"D"	pointer
,	O
"E"	pointer
,	O
"\xC5\xBD"	pointer
,	O
"Z"	pointer
,	O
"I"	pointer
,	O
""	pointer
,	O
"K"	pointer
,	O
"L"	pointer
,	O
"M"	pointer
,	O
"N"	pointer
,	O
"O"	pointer
,	O
"P"	pointer
,	O
"R"	pointer
,	O
"S"	pointer
,	O
"T"	pointer
,	O
"U"	pointer
,	O
"F"	pointer
,	O
"H"	pointer
,	O
"C"	pointer
,	O
"\xC4\x8C"	pointer
,	O
"\xC5\xA0"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"a"	pointer
,	O
"b"	pointer
,	O
"v"	pointer
,	O
"g"	pointer
,	O
"d"	pointer
,	O
"e"	pointer
,	O
"\xC5\xBE"	pointer
,	O
"z"	pointer
,	O
"i"	pointer
,	O
""	pointer
,	O
"k"	pointer
,	O
"l"	pointer
,	O
"m"	pointer
,	O
"n"	pointer
,	O
"o"	pointer
,	O
"p"	pointer
,	O
"r"	pointer
,	O
"s"	pointer
,	O
"t"	pointer
,	O
"u"	pointer
,	O
"f"	pointer
,	O
"h"	pointer
,	O
"c"	pointer
,	O
"\xC4\x8D"	pointer
,	O
"\xC5\xA1"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"\xC3\xA8"	pointer
,	O
""	pointer
,	O
"\xC4\x91"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"j"	pointer
,	O
"lj"	pointer
,	O
"nj"	pointer
,	O
"\xC4\x87"	pointer
,	O
""	pointer
,	O
"\xC3\xAC"	pointer
,	O
""	pointer
,	O
"d\xC5\xBE"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"\xC4\xAA"	pointer
,	O
"\xC4\xAB"	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
""	pointer
,	O
"\xC5\xAA"	pointer
,	O
"\xC5\xAB"	pointer
}	O
;	O
void	O
serbian_to_latin	function
(	O
const	O
char	O
*	O
input	pointer
,	O
size_t	long
input_len	long
,	O
char	O
*	O
*	O
output_p	pointer
,	O
size_t	long
*	O
output_len_p	pointer
)	O
{	O
size_t	long
allocated	long
=	O
input_len	long
+	O
(	O
input_len	long
>>	O
1	int
)	O
;	O
char	O
*	O
output	pointer
=	O
XNMALLOC	O
(	O
allocated	long
,	O
char	O
)	O
;	O
const	O
char	O
*	O
input_end	pointer
=	O
input	pointer
+	O
input_len	long
;	O
const	O
char	O
*	O
ip	pointer
;	O
char	O
*	O
op	pointer
;	O
for	O
(	O
ip	pointer
=	O
input	pointer
,	O
op	pointer
=	O
output	pointer
;	O
ip	pointer
<	O
input_end	pointer
;	O
)	O
{	O
unsigned	O
char	O
byte	char
=	O
(	O
unsigned	O
char	O
)	O
*	O
ip	pointer
;	O
if	O
(	O
(	O
byte	char
>=	O
0xd0	int
&&	O
byte	char
<=	O
0xd3	int
)	O
&&	O
(	O
ip	pointer
+	O
1	int
<	O
input_end	pointer
)	O
)	O
{	O
unsigned	O
char	O
second_byte	char
=	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
1	int
]	O
;	O
if	O
(	O
second_byte	char
>=	O
0x80	int
&&	O
second_byte	char
<	O
0xc0	int
)	O
{	O
unsigned	O
int	O
uc	int
=	O
(	O
(	O
byte	char
&	O
0x1f	int
)	O
<<	O
6	int
)	O
|	O
(	O
second_byte	char
&	O
0x3f	int
)	O
;	O
if	O
(	O
uc	int
>=	O
0x0400	int
&&	O
uc	int
<=	O
0x04ef	int
)	O
{	O
const	O
char	O
*	O
repl	pointer
=	O
table	array
[	O
uc	int
-	O
0x0400	int
]	O
;	O
if	O
(	O
repl	pointer
[	O
0	int
]	O
!=	O
'\0'	O
)	O
{	O
if	O
(	O
uc	int
==	O
0x0409	int
||	O
uc	int
==	O
0x040a	int
||	O
uc	int
==	O
0x040f	int
)	O
if	O
(	O
(	O
ip	pointer
+	O
2	int
<	O
input_end	pointer
&&	O
IS_UPPERCASE_LATIN	O
(	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
2	int
]	O
)	O
)	O
||	O
(	O
ip	pointer
+	O
3	int
<	O
input_end	pointer
&&	O
IS_UPPERCASE_CYRILLIC	O
(	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
2	int
]	O
,	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
3	int
]	O
)	O
)	O
||	O
(	O
ip	pointer
>=	O
input	pointer
+	O
1	int
&&	O
IS_UPPERCASE_LATIN	O
(	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
-	O
1	int
]	O
)	O
)	O
||	O
(	O
ip	pointer
>=	O
input	pointer
+	O
2	int
&&	O
IS_UPPERCASE_CYRILLIC	O
(	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
-	O
2	int
]	O
,	O
(	O
unsigned	O
char	O
)	O
ip	pointer
[	O
-	O
1	int
]	O
)	O
)	O
)	O
{	O
switch	O
(	O
uc	int
)	O
{	O
case	O
0x0409	int
:	O
repl	pointer
=	O
"LJ"	pointer
;	O
break	O
;	O
case	O
0x040a	int
:	O
repl	pointer
=	O
"NJ"	pointer
;	O
break	O
;	O
case	O
0x040f	int
:	O
repl	pointer
=	O
"D\xC5\xBD"	pointer
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
}	O
*	O
op	pointer
++	O
=	O
*	O
repl	pointer
++	O
;	O
if	O
(	O
*	O
repl	pointer
!=	O
'\0'	O
)	O
{	O
*	O
op	pointer
++	O
=	O
*	O
repl	pointer
++	O
;	O
if	O
(	O
*	O
repl	pointer
!=	O
'\0'	O
)	O
{	O
*	O
op	pointer
++	O
=	O
*	O
repl	pointer
++	O
;	O
if	O
(	O
*	O
repl	pointer
!=	O
'\0'	O
)	O
abort	function
(	O
)	O
;	O
}	O
}	O
ip	pointer
+=	O
2	int
;	O
continue	O
;	O
}	O
}	O
}	O
}	O
*	O
op	pointer
++	O
=	O
*	O
ip	pointer
++	O
;	O
}	O
{	O
size_t	long
output_len	long
=	O
op	pointer
-	O
output	pointer
;	O
if	O
(	O
output_len	long
>	O
allocated	long
)	O
abort	function
(	O
)	O
;	O
if	O
(	O
output_len	long
<	O
allocated	long
)	O
output	pointer
=	O
(	O
char	O
*	O
)	O
xrealloc	function
(	O
output	pointer
,	O
output_len	long
)	O
;	O
*	O
output_p	pointer
=	O
output	pointer
;	O
*	O
output_len_p	pointer
=	O
output_len	long
;	O
}	O
}	O
