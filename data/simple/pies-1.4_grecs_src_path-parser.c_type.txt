static	O
int	O
next_char	function
(	O
FILE	struct
*	O
infile	pointer
)	O
{	O
int	O
c	long
=	O
fgetc	function
(	O
infile	pointer
)	O
;	O
if	O
(	O
c	long
==	O
'\n'	O
)	O
grecs_locus_point_advance_line	O
(	O
grecs_current_locus_point	struct
)	O
;	O
else	O
{	O
grecs_current_locus_point	struct
.	O
col	int
++	O
;	O
if	O
(	O
c	long
==	O
'\\'	O
)	O
{	O
int	O
nc	int
=	O
fgetc	function
(	O
infile	pointer
)	O
;	O
if	O
(	O
nc	int
==	O
'\n'	O
)	O
{	O
grecs_locus_point_advance_line	O
(	O
grecs_current_locus_point	struct
)	O
;	O
c	long
=	O
fgetc	function
(	O
infile	pointer
)	O
;	O
grecs_current_locus_point	struct
.	O
col	int
++	O
;	O
}	O
else	O
ungetc	function
(	O
nc	int
,	O
infile	pointer
)	O
;	O
}	O
}	O
return	O
c	long
;	O
}	O
struct	O
grecs_node	struct
*	O
grecs_path_parser	function
(	O
const	O
char	O
*	O
name	pointer
,	O
int	O
traceflags	int
)	O
{	O
struct	O
grecs_node	struct
*	O
root	pointer
,	O
*	O
subtree	pointer
=	O
NULL	O
,	O
*	O
node	pointer
;	O
FILE	struct
*	O
infile	pointer
;	O
struct	O
grecs_txtacc	O
*	O
acc	pointer
=	O
NULL	O
;	O
char	O
*	O
kw	pointer
,	O
*	O
val	pointer
;	O
grecs_locus_t	struct
kwloc	struct
,	O
valloc	function
,	O
rootloc	struct
;	O
int	O
inquote	int
;	O
int	O
lookahead	int
;	O
int	O
err	int
=	O
0	int
;	O
unsigned	O
prev_col	int
;	O
infile	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
infile	pointer
)	O
{	O
grecs_error	function
(	O
NULL	O
,	O
errno	O
,	O
_	O
(	O
"cannot open `%s'"	pointer
)	O
,	O
name	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
grecs_current_locus_point	struct
.	O
file	pointer
=	O
grecs_install_text	function
(	O
name	pointer
)	O
;	O
grecs_current_locus_point	struct
.	O
line	int
=	O
1	int
;	O
grecs_current_locus_point	struct
.	O
col	int
=	O
0	int
;	O
rootloc	struct
.	O
beg	struct
=	O
grecs_current_locus_point	struct
;	O
rootloc	struct
.	O
beg	struct
.	O
col	int
++	O
;	O
acc	pointer
=	O
grecs_txtacc_create	function
(	O
)	O
;	O
while	O
(	O
(	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
)	O
>	O
0	int
)	O
{	O
while	O
(	O
1	int
)	O
{	O
while	O
(	O
lookahead	int
==	O
' '	O
||	O
lookahead	int
==	O
'\t'	O
)	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
;	O
if	O
(	O
lookahead	int
==	O
'#'	O
)	O
{	O
while	O
(	O
(	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
)	O
&&	O
lookahead	int
!=	O
'\n'	O
)	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
lookahead	int
<=	O
0	int
)	O
break	O
;	O
kwloc	struct
.	O
beg	struct
=	O
grecs_current_locus_point	struct
;	O
inquote	int
=	O
0	int
;	O
for	O
(	O
;	O
lookahead	int
>	O
0	int
&&	O
lookahead	int
!=	O
':'	O
;	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
)	O
{	O
if	O
(	O
inquote	int
)	O
{	O
if	O
(	O
inquote	int
==	O
'"'	O
&&	O
lookahead	int
==	O
'\\'	O
)	O
{	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
;	O
if	O
(	O
lookahead	int
<=	O
0	int
)	O
break	O
;	O
}	O
else	O
if	O
(	O
lookahead	int
==	O
inquote	int
)	O
inquote	int
=	O
0	int
;	O
}	O
else	O
if	O
(	O
lookahead	int
==	O
'\''	O
||	O
lookahead	int
==	O
'"'	O
)	O
inquote	int
=	O
lookahead	int
;	O
grecs_txtacc_grow_char	O
(	O
acc	pointer
,	O
lookahead	int
)	O
;	O
}	O
if	O
(	O
lookahead	int
<=	O
0	int
)	O
{	O
grecs_error	function
(	O
&	O
kwloc	struct
,	O
0	int
,	O
_	O
(	O
"unexpected end of file"	pointer
)	O
)	O
;	O
err	int
=	O
1	int
;	O
break	O
;	O
}	O
grecs_txtacc_grow_char	O
(	O
acc	pointer
,	O
0	int
)	O
;	O
kw	pointer
=	O
grecs_txtacc_finish	function
(	O
acc	pointer
,	O
0	int
)	O
;	O
kwloc	struct
.	O
end	struct
=	O
grecs_current_locus_point	struct
;	O
kwloc	struct
.	O
end	struct
.	O
col	int
--	O
;	O
while	O
(	O
(	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
)	O
>	O
0	int
&&	O
(	O
lookahead	int
==	O
' '	O
||	O
lookahead	int
==	O
'\t'	O
)	O
)	O
;	O
if	O
(	O
lookahead	int
<=	O
0	int
)	O
{	O
grecs_error	function
(	O
&	O
kwloc	struct
,	O
0	int
,	O
_	O
(	O
"unexpected end of file"	pointer
)	O
)	O
;	O
err	int
=	O
1	int
;	O
break	O
;	O
}	O
valloc	function
.	O
beg	struct
=	O
grecs_current_locus_point	struct
;	O
do	O
{	O
grecs_txtacc_grow_char	O
(	O
acc	pointer
,	O
lookahead	int
)	O
;	O
prev_col	int
=	O
grecs_current_locus_point	struct
.	O
col	int
;	O
}	O
while	O
(	O
(	O
lookahead	int
=	O
next_char	function
(	O
infile	pointer
)	O
)	O
>	O
0	int
&&	O
lookahead	int
!=	O
'\n'	O
)	O
;	O
valloc	function
.	O
end	struct
=	O
grecs_current_locus_point	struct
;	O
valloc	function
.	O
end	struct
.	O
line	int
--	O
;	O
valloc	function
.	O
end	struct
.	O
col	int
=	O
prev_col	int
;	O
grecs_txtacc_grow_char	O
(	O
acc	pointer
,	O
0	int
)	O
;	O
val	pointer
=	O
grecs_txtacc_finish	function
(	O
acc	pointer
,	O
0	int
)	O
;	O
node	pointer
=	O
grecs_node_from_path_locus	function
(	O
kw	pointer
,	O
val	pointer
,	O
&	O
kwloc	struct
,	O
&	O
valloc	function
)	O
;	O
if	O
(	O
!	O
node	pointer
)	O
{	O
grecs_error	function
(	O
&	O
kwloc	struct
,	O
0	int
,	O
_	O
(	O
"parse error"	pointer
)	O
)	O
;	O
err	int
=	O
1	int
;	O
break	O
;	O
}	O
node	pointer
->	O
locus	struct
.	O
end	struct
=	O
valloc	function
.	O
end	struct
;	O
node	pointer
->	O
idloc	struct
=	O
kwloc	struct
;	O
if	O
(	O
!	O
subtree	pointer
)	O
subtree	pointer
=	O
node	pointer
;	O
else	O
grecs_node_bind	function
(	O
subtree	pointer
,	O
node	pointer
,	O
0	int
)	O
;	O
grecs_txtacc_free_string	function
(	O
acc	pointer
,	O
kw	pointer
)	O
;	O
grecs_txtacc_free_string	function
(	O
acc	pointer
,	O
val	pointer
)	O
;	O
}	O
fclose	function
(	O
infile	pointer
)	O
;	O
grecs_txtacc_free	function
(	O
acc	pointer
)	O
;	O
if	O
(	O
err	int
)	O
{	O
grecs_tree_free	function
(	O
subtree	pointer
)	O
;	O
root	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
rootloc	struct
.	O
end	struct
=	O
grecs_current_locus_point	struct
;	O
root	pointer
=	O
grecs_node_create	function
(	O
grecs_node_root	int
,	O
&	O
rootloc	struct
)	O
;	O
root	pointer
->	O
v	pointer
.	O
texttab	pointer
=	O
grecs_text_table	function
(	O
)	O
;	O
grecs_node_bind	function
(	O
root	pointer
,	O
subtree	pointer
,	O
1	int
)	O
;	O
grecs_tree_reduce	function
(	O
root	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
return	O
root	pointer
;	O
}	O
