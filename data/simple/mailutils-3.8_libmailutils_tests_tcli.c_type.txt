int	O
dtrt_option	int
;	O
struct	O
mu_option	struct
group_a	array
[	O
]	O
=	O
{	O
{	O
"dtrt"	pointer
,	O
'd'	O
,	O
"VALUE"	pointer
,	O
MU_OPTION_DEFAULT	int
,	O
"do the right thing"	pointer
,	O
mu_c_int	int
,	O
&	O
dtrt_option	int
}	O
,	O
MU_OPTION_END	O
}	O
;	O
struct	O
mu_option	struct
*	O
options	array
[	O
]	O
=	O
{	O
group_a	array
,	O
NULL	O
}	O
;	O
static	O
struct	O
mu_cfg_param	struct
config	array
[	O
]	O
=	O
{	O
{	O
"do-the-right-thing"	pointer
,	O
mu_c_int	int
,	O
&	O
dtrt_option	int
,	O
0	int
,	O
NULL	O
,	O
"do the right thing"	pointer
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
char	O
const	O
*	O
alt_args	array
[	O
]	O
=	O
{	O
"ALT ARGUMENTS 1"	pointer
,	O
"ALT ARGUMENTS 2"	pointer
,	O
NULL	O
}	O
;	O
struct	O
mu_cli_setup	struct
cli	struct
=	O
{	O
options	array
,	O
config	array
,	O
"Tests standard command line interface"	pointer
,	O
"ARGUMENTS"	pointer
,	O
alt_args	array
}	O
;	O
static	O
char	O
*	O
*	O
getcapa	function
(	O
void	O
)	O
{	O
struct	O
mu_wordsplit	struct
ws	pointer
;	O
char	O
*	O
p	pointer
;	O
p	pointer
=	O
getenv	function
(	O
"MU_CLI_CAPA"	pointer
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
NULL	O
;	O
ws	pointer
.	O
ws_delim	pointer
=	O
","	pointer
;	O
if	O
(	O
mu_wordsplit	struct
(	O
p	pointer
,	O
&	O
ws	pointer
,	O
MU_WRDSF_DELIM	O
|	O
MU_WRDSF_NOVAR	O
|	O
MU_WRDSF_NOCMD	O
|	O
MU_WRDSF_WS	O
|	O
MU_WRDSF_SHOWERR	O
)	O
)	O
exit	function
(	O
1	int
)	O
;	O
return	O
ws	pointer
.	O
ws_wordv	pointer
;	O
}	O
int	O
main	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
i	long
;	O
mu_cli	function
(	O
argc	long
,	O
argv	pointer
,	O
&	O
cli	struct
,	O
getcapa	function
(	O
)	O
,	O
NULL	O
,	O
&	O
argc	long
,	O
&	O
argv	pointer
)	O
;	O
printf	function
(	O
"DTRT=%d\n"	pointer
,	O
dtrt_option	int
)	O
;	O
printf	function
(	O
"%d arguments:\n"	pointer
,	O
argc	long
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
printf	function
(	O
"%d: %s\n"	pointer
,	O
i	long
,	O
argv	pointer
[	O
i	long
]	O
)	O
;	O
return	O
0	int
;	O
}	O
