struct	O
invert_closure	struct
{	O
mu_msgset_t	pointer
nset	pointer
;	O
size_t	long
next_num	long
;	O
}	O
;	O
static	O
int	O
_invert_range	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
mu_msgrange	struct
*	O
range	pointer
=	O
item	pointer
;	O
struct	O
invert_closure	struct
*	O
clos	pointer
=	O
data	pointer
;	O
int	O
rc	int
;	O
if	O
(	O
clos	pointer
->	O
next_num	long
<	O
range	pointer
->	O
msg_beg	long
-	O
1	int
)	O
{	O
rc	int
=	O
mu_msgset_add_range	function
(	O
clos	pointer
->	O
nset	pointer
,	O
clos	pointer
->	O
next_num	long
,	O
range	pointer
->	O
msg_beg	long
-	O
1	int
,	O
_MU_MSGSET_MODE	O
(	O
clos	pointer
->	O
nset	pointer
->	O
flags	int
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
clos	pointer
->	O
next_num	long
=	O
range	pointer
->	O
msg_end	long
+	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_msgset_negate	function
(	O
mu_msgset_t	pointer
msgset	pointer
,	O
mu_msgset_t	pointer
*	O
pnset	pointer
)	O
{	O
int	O
rc	int
;	O
struct	O
invert_closure	struct
clos	pointer
;	O
size_t	long
total	long
;	O
if	O
(	O
!	O
msgset	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
msgset	pointer
->	O
mbox	pointer
)	O
return	O
MU_ERR_NOT_OPEN	O
;	O
rc	int
=	O
mu_msgset_aggregate	function
(	O
msgset	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
rc	int
=	O
mu_mailbox_messages_count	function
(	O
msgset	pointer
->	O
mbox	pointer
,	O
&	O
total	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
_MU_MSGSET_MODE	O
(	O
msgset	pointer
->	O
flags	int
)	O
)	O
{	O
rc	int
=	O
mu_mailbox_translate	function
(	O
msgset	pointer
->	O
mbox	pointer
,	O
MU_MAILBOX_MSGNO_TO_UID	int
,	O
total	long
,	O
&	O
total	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
rc	int
=	O
mu_msgset_create	function
(	O
&	O
clos	pointer
.	O
nset	pointer
,	O
msgset	pointer
->	O
mbox	pointer
,	O
_MU_MSGSET_MODE	O
(	O
msgset	pointer
->	O
flags	int
)	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
clos	pointer
.	O
next_num	long
=	O
1	int
;	O
rc	int
=	O
mu_list_foreach	function
(	O
msgset	pointer
->	O
list	pointer
,	O
_invert_range	function
,	O
&	O
clos	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
if	O
(	O
clos	pointer
.	O
next_num	long
<	O
total	long
)	O
rc	int
=	O
mu_msgset_add_range	function
(	O
clos	pointer
.	O
nset	pointer
,	O
clos	pointer
.	O
next_num	long
,	O
total	long
,	O
_MU_MSGSET_MODE	O
(	O
clos	pointer
.	O
nset	pointer
->	O
flags	int
)	O
)	O
;	O
}	O
if	O
(	O
rc	int
)	O
mu_msgset_free	function
(	O
clos	pointer
.	O
nset	pointer
)	O
;	O
else	O
*	O
pnset	pointer
=	O
clos	pointer
.	O
nset	pointer
;	O
return	O
rc	int
;	O
}	O
