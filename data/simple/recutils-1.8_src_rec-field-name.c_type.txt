static	O
const	O
char	O
*	O
fnames	array
[	O
]	O
=	O
{	O
"%auto"	pointer
,	O
"%confidential"	pointer
,	O
"%key"	pointer
,	O
"%mandatory"	pointer
,	O
"%prohibit"	pointer
,	O
"%rec"	pointer
,	O
"%size"	pointer
,	O
"%sort"	pointer
,	O
"%type"	pointer
,	O
"%typedef"	pointer
,	O
"%unique"	pointer
,	O
"%constraint"	pointer
,	O
"%allowed"	pointer
}	O
;	O
const	O
char	O
*	O
rec_std_field_name	function
(	O
enum	O
rec_std_field_e	enum
std_field	enum
)	O
{	O
return	O
*	O
(	O
fnames	array
+	O
std_field	enum
)	O
;	O
}	O
bool	bool
rec_field_name_p	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
return	O
rec_match	function
(	O
str	pointer
,	O
"^"	pointer
REC_FNAME_RE	pointer
"$"	pointer
)	O
;	O
}	O
char	O
*	O
rec_field_name_normalise	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
char	O
*	O
normalised_name	pointer
;	O
int	O
i	long
;	O
normalised_name	pointer
=	O
malloc	function
(	O
strlen	function
(	O
str	pointer
)	O
+	O
1	int
)	O
;	O
if	O
(	O
normalised_name	pointer
)	O
{	O
memcpy	function
(	O
normalised_name	pointer
,	O
str	pointer
,	O
strlen	function
(	O
str	pointer
)	O
)	O
;	O
normalised_name	pointer
[	O
strlen	function
(	O
str	pointer
)	O
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
strlen	function
(	O
normalised_name	pointer
)	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
!	O
(	O
(	O
isalnum	function
(	O
normalised_name	pointer
[	O
i	long
]	O
)	O
)	O
||	O
(	O
normalised_name	pointer
[	O
i	long
]	O
==	O
'_'	O
)	O
||	O
(	O
normalised_name	pointer
[	O
i	long
]	O
==	O
'-'	O
)	O
||	O
(	O
normalised_name	pointer
[	O
i	long
]	O
==	O
'%'	O
)	O
)	O
)	O
{	O
normalised_name	pointer
[	O
i	long
]	O
=	O
'_'	O
;	O
}	O
}	O
}	O
if	O
(	O
normalised_name	pointer
)	O
{	O
if	O
(	O
!	O
rec_field_name_p	function
(	O
normalised_name	pointer
)	O
)	O
{	O
free	function
(	O
normalised_name	pointer
)	O
;	O
normalised_name	pointer
=	O
NULL	O
;	O
}	O
}	O
return	O
normalised_name	pointer
;	O
}	O
bool	bool
rec_field_name_equal_p	function
(	O
const	O
char	O
*	O
name1	pointer
,	O
const	O
char	O
*	O
name2	pointer
)	O
{	O
return	O
(	O
strcmp	function
(	O
name1	pointer
,	O
name2	pointer
)	O
==	O
0	int
)	O
;	O
}	O
