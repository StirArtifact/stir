public	O
int	O
screen_trashed	int
;	O
public	O
int	O
squished	int
;	O
public	O
int	O
no_back_scroll	int
=	O
0	int
;	O
public	O
int	O
forw_prompt	int
;	O
public	O
int	O
same_pos_bell	int
=	O
1	int
;	O
extern	O
int	O
sigs	int
;	O
extern	O
int	O
top_scroll	int
;	O
extern	O
int	O
quiet	int
;	O
extern	O
int	O
sc_width	int
,	O
sc_height	int
;	O
extern	O
int	O
plusoption	int
;	O
extern	O
int	O
forw_scroll	int
;	O
extern	O
int	O
back_scroll	int
;	O
extern	O
int	O
ignore_eoi	int
;	O
extern	O
int	O
clear_bg	int
;	O
extern	O
int	O
final_attr	int
;	O
extern	O
int	O
oldbot	int
;	O
extern	O
int	O
size_linebuf	int
;	O
extern	O
int	O
hilite_search	int
;	O
extern	O
int	O
status_col	int
;	O
extern	O
char	O
*	O
tagoption	pointer
;	O
static	O
void	O
eof_bell	function
(	O
)	O
{	O
if	O
(	O
quiet	int
==	O
NOT_QUIET	int
)	O
bell	function
(	O
)	O
;	O
else	O
vbell	function
(	O
)	O
;	O
}	O
public	O
int	O
eof_displayed	function
(	O
)	O
{	O
POSITION	long
pos	long
;	O
if	O
(	O
ignore_eoi	int
)	O
return	O
(	O
0	int
)	O
;	O
if	O
(	O
ch_length	function
(	O
)	O
==	O
NULL_POSITION	O
)	O
return	O
(	O
0	int
)	O
;	O
pos	long
=	O
position	function
(	O
BOTTOM_PLUS_ONE	O
)	O
;	O
return	O
(	O
pos	long
==	O
NULL_POSITION	O
||	O
pos	long
==	O
ch_length	function
(	O
)	O
)	O
;	O
}	O
public	O
int	O
entire_file_displayed	function
(	O
)	O
{	O
POSITION	long
pos	long
;	O
if	O
(	O
!	O
eof_displayed	function
(	O
)	O
)	O
return	O
(	O
0	int
)	O
;	O
pos	long
=	O
position	function
(	O
0	int
)	O
;	O
return	O
(	O
pos	long
==	O
NULL_POSITION	O
||	O
pos	long
==	O
0	int
)	O
;	O
}	O
public	O
void	O
squish_check	function
(	O
)	O
{	O
if	O
(	O
!	O
squished	int
)	O
return	O
;	O
squished	int
=	O
0	int
;	O
repaint	function
(	O
)	O
;	O
}	O
public	O
void	O
forw	function
(	O
n	int
,	O
pos	long
,	O
force	int
,	O
only_last	int
,	O
nblank	int
)	O
int	O
n	int
;	O
POSITION	long
pos	long
;	O
int	O
force	int
;	O
int	O
only_last	int
;	O
int	O
nblank	int
;	O
{	O
int	O
nlines	int
=	O
0	int
;	O
int	O
do_repaint	int
;	O
static	O
int	O
first_time	int
=	O
1	int
;	O
squish_check	function
(	O
)	O
;	O
do_repaint	int
=	O
(	O
only_last	int
&&	O
n	int
>	O
sc_height	int
-	O
1	int
)	O
||	O
(	O
forw_scroll	int
>=	O
0	int
&&	O
n	int
>	O
forw_scroll	int
&&	O
n	int
!=	O
sc_height	int
-	O
1	int
)	O
;	O
if	O
(	O
hilite_search	int
==	O
OPT_ONPLUS	int
||	O
is_filtering	function
(	O
)	O
||	O
status_col	int
)	O
{	O
prep_hilite	function
(	O
pos	long
,	O
pos	long
+	O
4	int
*	O
size_linebuf	int
,	O
ignore_eoi	int
?	O
1	int
:	O
-	O
1	int
)	O
;	O
pos	long
=	O
next_unfiltered	function
(	O
pos	long
)	O
;	O
}	O
if	O
(	O
!	O
do_repaint	int
)	O
{	O
if	O
(	O
top_scroll	int
&&	O
n	int
>=	O
sc_height	int
-	O
1	int
&&	O
pos	long
!=	O
ch_length	function
(	O
)	O
)	O
{	O
pos_clear	function
(	O
)	O
;	O
add_forw_pos	function
(	O
pos	long
)	O
;	O
force	int
=	O
1	int
;	O
clear	function
(	O
)	O
;	O
home	function
(	O
)	O
;	O
}	O
if	O
(	O
pos	long
!=	O
position	function
(	O
BOTTOM_PLUS_ONE	O
)	O
||	O
empty_screen	function
(	O
)	O
)	O
{	O
pos_clear	function
(	O
)	O
;	O
add_forw_pos	function
(	O
pos	long
)	O
;	O
force	int
=	O
1	int
;	O
if	O
(	O
top_scroll	int
)	O
{	O
clear	function
(	O
)	O
;	O
home	function
(	O
)	O
;	O
}	O
else	O
if	O
(	O
!	O
first_time	int
)	O
{	O
putstr	function
(	O
"...skipping...\n"	pointer
)	O
;	O
}	O
}	O
}	O
while	O
(	O
--	O
n	int
>=	O
0	int
)	O
{	O
if	O
(	O
nblank	int
>	O
0	int
)	O
{	O
if	O
(	O
--	O
nblank	int
==	O
0	int
)	O
pos	long
=	O
ch_zero	O
(	O
)	O
;	O
}	O
else	O
{	O
pos	long
=	O
forw_line	function
(	O
pos	long
)	O
;	O
pos	long
=	O
next_unfiltered	function
(	O
pos	long
)	O
;	O
if	O
(	O
pos	long
==	O
NULL_POSITION	O
)	O
{	O
if	O
(	O
!	O
force	int
&&	O
position	function
(	O
TOP	O
)	O
!=	O
NULL_POSITION	O
)	O
break	O
;	O
if	O
(	O
!	O
empty_lines	function
(	O
0	int
,	O
0	int
)	O
&&	O
!	O
empty_lines	function
(	O
1	int
,	O
1	int
)	O
&&	O
empty_lines	function
(	O
2	int
,	O
sc_height	int
-	O
1	int
)	O
)	O
break	O
;	O
}	O
}	O
add_forw_pos	function
(	O
pos	long
)	O
;	O
nlines	int
++	O
;	O
if	O
(	O
do_repaint	int
)	O
continue	O
;	O
if	O
(	O
first_time	int
&&	O
pos	long
==	O
NULL_POSITION	O
&&	O
!	O
top_scroll	int
&&	O
tagoption	pointer
==	O
NULL	O
&&	O
!	O
plusoption	int
)	O
{	O
squished	int
=	O
1	int
;	O
continue	O
;	O
}	O
put_line	function
(	O
)	O
;	O
forw_prompt	int
=	O
1	int
;	O
}	O
if	O
(	O
nlines	int
==	O
0	int
&&	O
!	O
ignore_eoi	int
&&	O
same_pos_bell	int
)	O
eof_bell	function
(	O
)	O
;	O
else	O
if	O
(	O
do_repaint	int
)	O
repaint	function
(	O
)	O
;	O
first_time	int
=	O
0	int
;	O
(	O
void	O
)	O
currline	function
(	O
BOTTOM	O
)	O
;	O
}	O
public	O
void	O
back	function
(	O
n	int
,	O
pos	long
,	O
force	int
,	O
only_last	int
)	O
int	O
n	int
;	O
POSITION	long
pos	long
;	O
int	O
force	int
;	O
int	O
only_last	int
;	O
{	O
int	O
nlines	int
=	O
0	int
;	O
int	O
do_repaint	int
;	O
squish_check	function
(	O
)	O
;	O
do_repaint	int
=	O
(	O
n	int
>	O
get_back_scroll	function
(	O
)	O
||	O
(	O
only_last	int
&&	O
n	int
>	O
sc_height	int
-	O
1	int
)	O
)	O
;	O
if	O
(	O
hilite_search	int
==	O
OPT_ONPLUS	int
||	O
is_filtering	function
(	O
)	O
||	O
status_col	int
)	O
{	O
prep_hilite	function
(	O
(	O
pos	long
<	O
3	int
*	O
size_linebuf	int
)	O
?	O
0	int
:	O
pos	long
-	O
3	int
*	O
size_linebuf	int
,	O
pos	long
,	O
-	O
1	int
)	O
;	O
}	O
while	O
(	O
--	O
n	int
>=	O
0	int
)	O
{	O
pos	long
=	O
prev_unfiltered	function
(	O
pos	long
)	O
;	O
pos	long
=	O
back_line	function
(	O
pos	long
)	O
;	O
if	O
(	O
pos	long
==	O
NULL_POSITION	O
)	O
{	O
if	O
(	O
!	O
force	int
)	O
break	O
;	O
}	O
add_back_pos	function
(	O
pos	long
)	O
;	O
nlines	int
++	O
;	O
if	O
(	O
!	O
do_repaint	int
)	O
{	O
home	function
(	O
)	O
;	O
add_line	function
(	O
)	O
;	O
put_line	function
(	O
)	O
;	O
}	O
}	O
if	O
(	O
nlines	int
==	O
0	int
&&	O
same_pos_bell	int
)	O
eof_bell	function
(	O
)	O
;	O
else	O
if	O
(	O
do_repaint	int
)	O
repaint	function
(	O
)	O
;	O
else	O
if	O
(	O
!	O
oldbot	int
)	O
lower_left	function
(	O
)	O
;	O
(	O
void	O
)	O
currline	function
(	O
BOTTOM	O
)	O
;	O
}	O
public	O
void	O
forward	function
(	O
n	int
,	O
force	int
,	O
only_last	int
)	O
int	O
n	int
;	O
int	O
force	int
;	O
int	O
only_last	int
;	O
{	O
POSITION	long
pos	long
;	O
if	O
(	O
get_quit_at_eof	function
(	O
)	O
&&	O
eof_displayed	function
(	O
)	O
&&	O
!	O
(	O
ch_getflags	function
(	O
)	O
&	O
CH_HELPFILE	int
)	O
)	O
{	O
if	O
(	O
edit_next	function
(	O
1	int
)	O
)	O
quit	function
(	O
QUIT_OK	int
)	O
;	O
return	O
;	O
}	O
pos	long
=	O
position	function
(	O
BOTTOM_PLUS_ONE	O
)	O
;	O
if	O
(	O
pos	long
==	O
NULL_POSITION	O
&&	O
(	O
!	O
force	int
||	O
empty_lines	function
(	O
2	int
,	O
sc_height	int
-	O
1	int
)	O
)	O
)	O
{	O
if	O
(	O
ignore_eoi	int
)	O
{	O
if	O
(	O
empty_screen	function
(	O
)	O
)	O
pos	long
=	O
ch_zero	O
(	O
)	O
;	O
else	O
{	O
do	O
{	O
back	function
(	O
1	int
,	O
position	function
(	O
TOP	O
)	O
,	O
1	int
,	O
0	int
)	O
;	O
pos	long
=	O
position	function
(	O
BOTTOM_PLUS_ONE	O
)	O
;	O
}	O
while	O
(	O
pos	long
==	O
NULL_POSITION	O
)	O
;	O
}	O
}	O
else	O
{	O
eof_bell	function
(	O
)	O
;	O
return	O
;	O
}	O
}	O
forw	function
(	O
n	int
,	O
pos	long
,	O
force	int
,	O
only_last	int
,	O
0	int
)	O
;	O
}	O
public	O
void	O
backward	function
(	O
n	int
,	O
force	int
,	O
only_last	int
)	O
int	O
n	int
;	O
int	O
force	int
;	O
int	O
only_last	int
;	O
{	O
POSITION	long
pos	long
;	O
pos	long
=	O
position	function
(	O
TOP	O
)	O
;	O
if	O
(	O
pos	long
==	O
NULL_POSITION	O
&&	O
(	O
!	O
force	int
||	O
position	function
(	O
BOTTOM	O
)	O
==	O
0	int
)	O
)	O
{	O
eof_bell	function
(	O
)	O
;	O
return	O
;	O
}	O
back	function
(	O
n	int
,	O
pos	long
,	O
force	int
,	O
only_last	int
)	O
;	O
}	O
public	O
int	O
get_back_scroll	function
(	O
)	O
{	O
if	O
(	O
no_back_scroll	int
)	O
return	O
(	O
0	int
)	O
;	O
if	O
(	O
back_scroll	int
>=	O
0	int
)	O
return	O
(	O
back_scroll	int
)	O
;	O
if	O
(	O
top_scroll	int
)	O
return	O
(	O
sc_height	int
-	O
2	int
)	O
;	O
return	O
(	O
10000	int
)	O
;	O
}	O
public	O
int	O
get_line_count	function
(	O
)	O
{	O
int	O
nlines	int
;	O
POSITION	long
pos	long
=	O
ch_zero	O
(	O
)	O
;	O
for	O
(	O
nlines	int
=	O
0	int
;	O
nlines	int
<=	O
sc_height	int
;	O
nlines	int
++	O
)	O
{	O
pos	long
=	O
forw_line	function
(	O
pos	long
)	O
;	O
if	O
(	O
pos	long
==	O
NULL_POSITION	O
)	O
break	O
;	O
}	O
return	O
nlines	int
;	O
}	O
