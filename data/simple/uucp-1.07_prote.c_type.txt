const	O
char	O
prote_rcsid	array
[	O
]	O
=	O
"$Id: prote.c,v 1.23 2002/03/05 19:10:41 ian Rel $"	pointer
;	O
static	O
char	O
*	O
zEbuf	pointer
;	O
static	O
boolean	int
fEfile	int
;	O
static	O
long	O
cEbytes	long
;	O
static	O
int	O
cEtimeout	int
=	O
120	int
;	O
struct	O
uuconf_cmdtab	struct
asEproto_params	array
[	O
]	O
=	O
{	O
{	O
"timeout"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	pointer
)	O
&	O
cEtimeout	int
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
boolean	int
feprocess_data	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
boolean	int
*	O
pfexit	pointer
,	O
size_t	long
*	O
pcneed	pointer
)	O
)	O
;	O
boolean	int
festart	function
(	O
qdaemon	pointer
,	O
pzlog	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
*	O
pzlog	pointer
;	O
{	O
*	O
pzlog	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_set	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
PARITYSETTING_NONE	int
,	O
STRIPSETTING_EIGHTBITS	int
,	O
XONXOFF_OFF	int
)	O
)	O
return	O
FALSE	O
;	O
zEbuf	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
CEBUFSIZE	O
)	O
;	O
fEfile	int
=	O
FALSE	O
;	O
usysdep_sleep	function
(	O
2	int
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
feshutdown	function
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zEbuf	pointer
)	O
;	O
zEbuf	pointer
=	O
NULL	O
;	O
cEtimeout	int
=	O
120	int
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fesendcmd	function
(	O
qdaemon	pointer
,	O
z	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
z	pointer
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fesendcmd: Sending command \"%s\""	pointer
,	O
z	pointer
)	O
;	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
z	pointer
,	O
strlen	function
(	O
z	pointer
)	O
+	O
1	int
,	O
TRUE	O
)	O
;	O
}	O
char	O
*	O
zegetspace	function
(	O
qdaemon	pointer
,	O
pclen	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	long
*	O
pclen	pointer
;	O
{	O
*	O
pclen	pointer
=	O
CEBUFSIZE	O
;	O
return	O
zEbuf	pointer
;	O
}	O
boolean	int
fesenddata	function
(	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
,	O
ilocal	int
,	O
iremote	int
,	O
ipos	long
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
long	O
ipos	long
ATTRIBUTE_UNUSED	O
;	O
{	O
cEbytes	long
-=	O
cdata	long
;	O
if	O
(	O
cEbytes	long
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Protocol 'e' internal error"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zdata	pointer
,	O
cdata	long
,	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
feprocess_data	function
(	O
qdaemon	pointer
,	O
pfexit	pointer
,	O
pcneed	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
boolean	int
*	O
pfexit	pointer
;	O
size_t	long
*	O
pcneed	pointer
;	O
{	O
int	O
cinbuf	int
,	O
cfirst	long
,	O
clen	long
;	O
*	O
pfexit	pointer
=	O
FALSE	O
;	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
!	O
fEfile	int
)	O
{	O
while	O
(	O
cinbuf	int
>	O
0	int
)	O
{	O
char	O
*	O
pnull	pointer
;	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	long
>	O
cinbuf	int
)	O
cfirst	long
=	O
cinbuf	int
;	O
pnull	pointer
=	O
memchr	function
(	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
'\0'	O
,	O
(	O
size_t	long
)	O
cfirst	long
)	O
;	O
if	O
(	O
pnull	pointer
!=	O
NULL	O
)	O
cfirst	long
=	O
pnull	pointer
-	O
(	O
abPrecbuf	array
+	O
iPrecstart	int
)	O
+	O
1	int
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"feprocess_data: Got %d command bytes"	pointer
,	O
cfirst	long
)	O
;	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
cfirst	long
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
size_t	long
)	O
0	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
cfirst	long
)	O
%	O
CRECBUFLEN	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
}	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
1	int
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
cEbytes	long
==	O
-	O
1	int
)	O
{	O
char	O
ab	array
[	O
CEFRAMELEN	O
+	O
1	int
]	O
;	O
if	O
(	O
cinbuf	int
<	O
CEFRAMELEN	O
)	O
{	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
*	O
pcneed	pointer
=	O
CEFRAMELEN	O
-	O
cinbuf	int
;	O
return	O
TRUE	O
;	O
}	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	long
>=	O
CEFRAMELEN	O
)	O
memcpy	function
(	O
ab	array
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
CEFRAMELEN	O
)	O
;	O
else	O
{	O
memcpy	function
(	O
ab	array
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
cfirst	long
)	O
;	O
memcpy	function
(	O
ab	array
+	O
cfirst	long
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
CEFRAMELEN	O
-	O
cfirst	long
)	O
;	O
}	O
ab	array
[	O
CEFRAMELEN	O
]	O
=	O
'\0'	O
;	O
cEbytes	long
=	O
strtol	function
(	O
ab	array
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
CEFRAMELEN	O
)	O
%	O
CRECBUFLEN	O
;	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
cEbytes	long
==	O
0	int
)	O
{	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
0	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
size_t	long
)	O
0	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
}	O
}	O
while	O
(	O
cinbuf	int
>	O
0	int
)	O
{	O
clen	long
=	O
cinbuf	int
;	O
if	O
(	O
(	O
long	O
)	O
clen	long
>	O
cEbytes	long
)	O
clen	long
=	O
(	O
int	O
)	O
cEbytes	long
;	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	long
>	O
clen	long
)	O
cfirst	long
=	O
clen	long
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"feprocess_data: Got %d data bytes"	pointer
,	O
clen	long
)	O
;	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
(	O
size_t	long
)	O
cfirst	long
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
(	O
clen	long
-	O
cfirst	long
)	O
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
clen	long
)	O
%	O
CRECBUFLEN	O
;	O
cEbytes	long
-=	O
clen	long
;	O
if	O
(	O
cEbytes	long
==	O
0	int
)	O
{	O
if	O
(	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
,	O
(	O
size_t	long
)	O
0	int
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
size_t	long
)	O
0	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
*	O
pfexit	pointer
)	O
return	O
TRUE	O
;	O
}	O
cinbuf	int
-=	O
clen	long
;	O
}	O
if	O
(	O
pcneed	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
cEbytes	long
>	O
CRECBUFLEN	O
/	O
2	int
)	O
*	O
pcneed	pointer
=	O
CRECBUFLEN	O
/	O
2	int
;	O
else	O
*	O
pcneed	pointer
=	O
(	O
int	O
)	O
cEbytes	long
;	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fewait	function
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
while	O
(	O
TRUE	O
)	O
{	O
boolean	int
fexit	int
;	O
size_t	long
cneed	long
,	O
crec	long
;	O
if	O
(	O
!	O
feprocess_data	function
(	O
qdaemon	pointer
,	O
&	O
fexit	int
,	O
&	O
cneed	long
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
fexit	int
)	O
return	O
TRUE	O
;	O
if	O
(	O
!	O
freceive_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
cneed	long
,	O
&	O
crec	long
,	O
cEtimeout	int
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
crec	long
==	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Timed out waiting for data"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
boolean	int
fefile	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
fstart	int
,	O
fsend	int
,	O
cbytes	long
,	O
pfhandled	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
ATTRIBUTE_UNUSED	O
;	O
boolean	int
fstart	int
;	O
boolean	int
fsend	int
;	O
long	O
cbytes	long
;	O
boolean	int
*	O
pfhandled	pointer
;	O
{	O
*	O
pfhandled	pointer
=	O
FALSE	O
;	O
if	O
(	O
fstart	int
)	O
{	O
if	O
(	O
fsend	int
)	O
{	O
char	O
ab	array
[	O
CEFRAMELEN	O
]	O
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
,	O
"Protocol 'e' starting to send %ld bytes"	pointer
,	O
cbytes	long
)	O
;	O
bzero	function
(	O
ab	array
,	O
(	O
size_t	long
)	O
CEFRAMELEN	O
)	O
;	O
sprintf	function
(	O
ab	array
,	O
"%ld"	pointer
,	O
cbytes	long
)	O
;	O
if	O
(	O
!	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
ab	array
,	O
(	O
size_t	long
)	O
CEFRAMELEN	O
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
cEbytes	long
=	O
cbytes	long
;	O
}	O
else	O
{	O
cEbytes	long
=	O
-	O
1	int
;	O
fEfile	int
=	O
TRUE	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
!	O
fsend	int
)	O
fEfile	int
=	O
FALSE	O
;	O
if	O
(	O
cEbytes	long
!=	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Protocol 'e' internal error: %ld bytes left over"	pointer
,	O
cEbytes	long
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
