static	O
grad_list_t	struct
*	O
naslist	pointer
;	O
static	O
int	O
_nas_mem_free	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
ARG_UNUSED	O
)	O
{	O
grad_nas_t	struct
*	O
p	pointer
=	O
item	pointer
;	O
grad_envar_free_list	function
(	O
&	O
p	pointer
->	O
args	pointer
)	O
;	O
grad_free	function
(	O
p	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
read_naslist_entry	function
(	O
void	O
*	O
unused	pointer
ARG_UNUSED	O
,	O
int	O
fc	int
,	O
char	O
*	O
*	O
fv	pointer
,	O
grad_locus_t	struct
*	O
loc	struct
)	O
{	O
int	O
i	int
;	O
grad_nas_t	struct
nas	struct
,	O
*	O
nasp	pointer
;	O
if	O
(	O
fc	int
<	O
2	int
)	O
{	O
grad_log_loc	function
(	O
GRAD_LOG_ERR	int
,	O
loc	struct
,	O
"%s"	pointer
,	O
_	O
(	O
"too few fields"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
memset	function
(	O
&	O
nas	struct
,	O
0	int
,	O
sizeof	O
(	O
nas	struct
)	O
)	O
;	O
GRAD_STRING_COPY	O
(	O
nas	struct
.	O
shortname	array
,	O
fv	pointer
[	O
1	int
]	O
)	O
;	O
if	O
(	O
!	O
fv	pointer
[	O
2	int
]	O
)	O
GRAD_STRING_COPY	O
(	O
nas	struct
.	O
nastype	array
,	O
"true"	pointer
)	O
;	O
else	O
GRAD_STRING_COPY	O
(	O
nas	struct
.	O
nastype	array
,	O
fv	pointer
[	O
2	int
]	O
)	O
;	O
if	O
(	O
strcmp	function
(	O
fv	pointer
[	O
0	int
]	O
,	O
"DEFAULT"	pointer
)	O
==	O
0	int
)	O
{	O
nas	struct
.	O
netdef	struct
.	O
ipaddr	int
=	O
nas	struct
.	O
netdef	struct
.	O
netmask	int
=	O
0	int
;	O
GRAD_STRING_COPY	O
(	O
nas	struct
.	O
longname	array
,	O
fv	pointer
[	O
0	int
]	O
)	O
;	O
}	O
else	O
{	O
grad_ip_getnetaddr	function
(	O
fv	pointer
[	O
0	int
]	O
,	O
&	O
nas	struct
.	O
netdef	struct
)	O
;	O
grad_ip_gethostname	function
(	O
nas	struct
.	O
netdef	struct
.	O
ipaddr	int
,	O
nas	struct
.	O
longname	array
,	O
sizeof	O
(	O
nas	struct
.	O
longname	array
)	O
)	O
;	O
if	O
(	O
nas	struct
.	O
longname	array
[	O
0	int
]	O
)	O
GRAD_STRING_COPY	O
(	O
nas	struct
.	O
longname	array
,	O
fv	pointer
[	O
0	int
]	O
)	O
;	O
}	O
nas	struct
.	O
args	pointer
=	O
NULL	O
;	O
for	O
(	O
i	int
=	O
3	int
;	O
i	int
<	O
fc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
fv	pointer
[	O
i	int
]	O
[	O
0	int
]	O
==	O
','	O
)	O
continue	O
;	O
if	O
(	O
fc	int
-	O
i	int
>	O
2	int
&&	O
fv	pointer
[	O
i	int
+	O
1	int
]	O
[	O
0	int
]	O
==	O
'='	O
)	O
{	O
grad_envar_assign	function
(	O
fv	pointer
[	O
i	int
]	O
,	O
fv	pointer
[	O
i	int
+	O
2	int
]	O
,	O
&	O
nas	struct
.	O
args	pointer
)	O
;	O
i	int
+=	O
2	int
;	O
}	O
else	O
{	O
grad_envar_assign	function
(	O
fv	pointer
[	O
i	int
]	O
,	O
NULL	O
,	O
&	O
nas	struct
.	O
args	pointer
)	O
;	O
}	O
}	O
nasp	pointer
=	O
grad_emalloc	function
(	O
sizeof	O
(	O
grad_nas_t	struct
)	O
)	O
;	O
memcpy	function
(	O
nasp	pointer
,	O
&	O
nas	struct
,	O
sizeof	O
(	O
nas	struct
)	O
)	O
;	O
if	O
(	O
!	O
naslist	pointer
)	O
naslist	pointer
=	O
grad_list_create	function
(	O
)	O
;	O
grad_list_prepend	function
(	O
naslist	pointer
,	O
nasp	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
grad_nas_read_file	function
(	O
char	O
*	O
file	pointer
)	O
{	O
grad_list_destroy	function
(	O
&	O
naslist	pointer
,	O
_nas_mem_free	function
,	O
NULL	O
)	O
;	O
return	O
grad_read_raddb_file	function
(	O
file	pointer
,	O
1	int
,	O
",="	pointer
,	O
read_naslist_entry	function
,	O
NULL	O
)	O
;	O
}	O
grad_nas_t	struct
*	O
grad_nas_lookup_name	function
(	O
char	O
*	O
name	pointer
)	O
{	O
grad_nas_t	struct
*	O
nas	struct
;	O
grad_nas_t	struct
*	O
defnas	pointer
=	O
NULL	O
;	O
grad_iterator_t	struct
*	O
itr	pointer
=	O
grad_iterator_create	function
(	O
naslist	pointer
)	O
;	O
if	O
(	O
!	O
itr	pointer
)	O
return	O
NULL	O
;	O
for	O
(	O
nas	struct
=	O
grad_iterator_first	function
(	O
itr	pointer
)	O
;	O
nas	struct
;	O
nas	struct
=	O
grad_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
if	O
(	O
nas	struct
->	O
netdef	struct
.	O
ipaddr	int
==	O
0	int
&&	O
nas	struct
->	O
netdef	struct
.	O
netmask	int
==	O
0	int
)	O
defnas	pointer
=	O
nas	struct
;	O
else	O
if	O
(	O
strcmp	function
(	O
nas	struct
->	O
shortname	array
,	O
name	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
nas	struct
->	O
longname	array
,	O
name	pointer
)	O
==	O
0	int
)	O
break	O
;	O
}	O
grad_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
return	O
nas	struct
?	O
nas	struct
:	O
defnas	pointer
;	O
}	O
grad_nas_t	struct
*	O
grad_nas_lookup_ip	function
(	O
grad_uint32_t	int
ipaddr	int
)	O
{	O
grad_nas_t	struct
*	O
nas	struct
=	O
NULL	O
;	O
grad_nas_t	struct
*	O
defnas	pointer
=	O
NULL	O
;	O
grad_iterator_t	struct
*	O
itr	pointer
=	O
grad_iterator_create	function
(	O
naslist	pointer
)	O
;	O
if	O
(	O
!	O
itr	pointer
)	O
return	O
NULL	O
;	O
for	O
(	O
nas	struct
=	O
grad_iterator_first	function
(	O
itr	pointer
)	O
;	O
nas	struct
;	O
nas	struct
=	O
grad_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
if	O
(	O
grad_ip_in_net_p	function
(	O
&	O
nas	struct
->	O
netdef	struct
,	O
ipaddr	int
)	O
)	O
{	O
if	O
(	O
!	O
defnas	pointer
||	O
(	O
defnas	pointer
->	O
netdef	struct
.	O
netmask	int
&	O
nas	struct
->	O
netdef	struct
.	O
netmask	int
)	O
==	O
defnas	pointer
->	O
netdef	struct
.	O
netmask	int
)	O
defnas	pointer
=	O
nas	struct
;	O
}	O
}	O
grad_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
return	O
defnas	pointer
;	O
}	O
char	O
*	O
grad_nas_ip_to_name	function
(	O
grad_uint32_t	int
ipaddr	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	int
)	O
{	O
grad_nas_t	struct
*	O
nas	struct
;	O
if	O
(	O
(	O
nas	struct
=	O
grad_nas_lookup_ip	function
(	O
ipaddr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
nas	struct
->	O
shortname	array
[	O
0	int
]	O
)	O
return	O
nas	struct
->	O
shortname	array
;	O
else	O
return	O
nas	struct
->	O
longname	array
;	O
}	O
return	O
grad_ip_gethostname	function
(	O
ipaddr	int
,	O
buf	pointer
,	O
size	int
)	O
;	O
}	O
grad_nas_t	struct
*	O
grad_nas_request_to_nas	function
(	O
const	O
grad_request_t	struct
*	O
radreq	pointer
)	O
{	O
grad_uint32_t	int
ipaddr	int
;	O
grad_avp_t	struct
*	O
pair	pointer
;	O
if	O
(	O
(	O
pair	pointer
=	O
grad_avl_find	function
(	O
radreq	pointer
->	O
avlist	pointer
,	O
DA_NAS_IP_ADDRESS	int
)	O
)	O
!=	O
NULL	O
)	O
ipaddr	int
=	O
pair	pointer
->	O
avp_lvalue	O
;	O
else	O
ipaddr	int
=	O
radreq	pointer
->	O
ipaddr	int
;	O
return	O
grad_nas_lookup_ip	function
(	O
ipaddr	int
)	O
;	O
}	O
char	O
*	O
grad_nas_request_to_name	function
(	O
const	O
grad_request_t	struct
*	O
radreq	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	int
)	O
{	O
grad_uint32_t	int
ipaddr	int
;	O
grad_nas_t	struct
*	O
nas	struct
;	O
grad_avp_t	struct
*	O
pair	pointer
;	O
if	O
(	O
(	O
pair	pointer
=	O
grad_avl_find	function
(	O
radreq	pointer
->	O
avlist	pointer
,	O
DA_NAS_IP_ADDRESS	int
)	O
)	O
!=	O
NULL	O
)	O
ipaddr	int
=	O
pair	pointer
->	O
avp_lvalue	O
;	O
else	O
ipaddr	int
=	O
radreq	pointer
->	O
ipaddr	int
;	O
if	O
(	O
(	O
nas	struct
=	O
grad_nas_lookup_ip	function
(	O
ipaddr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
nas	struct
->	O
shortname	array
[	O
0	int
]	O
)	O
return	O
nas	struct
->	O
shortname	array
;	O
else	O
return	O
nas	struct
->	O
longname	array
;	O
}	O
return	O
grad_ip_gethostname	function
(	O
ipaddr	int
,	O
buf	pointer
,	O
size	int
)	O
;	O
}	O
grad_iterator_t	struct
*	O
grad_nas_iterator	function
(	O
)	O
{	O
return	O
grad_iterator_create	function
(	O
naslist	pointer
)	O
;	O
}	O
