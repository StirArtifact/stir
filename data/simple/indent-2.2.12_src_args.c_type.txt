RCSTAG_CC	O
(	O
"$Id$"	pointer
)	O
;	O
const	O
char	O
*	O
settings_strings	array
[	O
6	int
]	O
=	O
{	O
KR_SETTINGS_STRING	O
,	O
GNU_SETTINGS_STRING	O
,	O
ORIG_SETTINGS_STRING	O
,	O
LINUX_SETTINGS_STRING	O
,	O
"-ip0\0"	pointer
,	O
VERSION	pointer
}	O
;	O
typedef	O
enum	O
{	O
PRO_BOOL	int
,	O
PRO_INT	int
,	O
PRO_IGN	int
,	O
PRO_KEY	int
,	O
PRO_SETTINGS	int
,	O
PRO_PRSTRING	int
}	O
profile_ty	enum
;	O
typedef	O
enum	O
{	O
ONOFF_NA	int
,	O
OFF	int
,	O
ON	int
}	O
on_or_off_ty	enum
;	O
static	O
int	O
exp_T	int
=	O
0	int
;	O
static	O
int	O
exp_bacc	int
=	O
0	int
;	O
static	O
int	O
exp_badp	int
=	O
0	int
;	O
static	O
int	O
exp_bad	int
=	O
0	int
;	O
static	O
int	O
exp_bap	int
=	O
0	int
;	O
static	O
int	O
exp_bbb	int
=	O
0	int
;	O
static	O
int	O
exp_bbo	int
=	O
0	int
;	O
static	O
int	O
exp_bc	int
=	O
0	int
;	O
static	O
int	O
exp_bl	int
=	O
0	int
;	O
static	O
int	O
exp_blf	int
=	O
0	int
;	O
static	O
int	O
exp_bli	int
=	O
0	int
;	O
static	O
int	O
exp_bls	int
=	O
0	int
;	O
static	O
int	O
exp_bs	int
=	O
0	int
;	O
static	O
int	O
exp_c	int
=	O
0	int
;	O
static	O
int	O
exp_cbi	int
=	O
0	int
;	O
static	O
int	O
exp_cdb	int
=	O
0	int
;	O
static	O
int	O
exp_cd	int
=	O
0	int
;	O
static	O
int	O
exp_cdw	int
=	O
0	int
;	O
static	O
int	O
exp_ce	int
=	O
0	int
;	O
static	O
int	O
exp_ci	int
=	O
0	int
;	O
static	O
int	O
exp_cli	int
=	O
0	int
;	O
static	O
int	O
exp_cp	int
=	O
0	int
;	O
static	O
int	O
exp_cpp	int
=	O
0	int
;	O
static	O
int	O
exp_cs	int
=	O
0	int
;	O
static	O
int	O
exp_d	int
=	O
0	int
;	O
static	O
int	O
exp_bfda	int
=	O
0	int
;	O
static	O
int	O
exp_bfde	int
=	O
0	int
;	O
static	O
int	O
exp_di	int
=	O
0	int
;	O
static	O
int	O
exp_dj	int
=	O
0	int
;	O
static	O
int	O
exp_eei	int
=	O
0	int
;	O
static	O
int	O
exp_fc1	int
=	O
0	int
;	O
static	O
int	O
exp_fca	int
=	O
0	int
;	O
static	O
int	O
exp_fnc	int
=	O
0	int
;	O
static	O
int	O
exp_gnu	int
=	O
0	int
;	O
static	O
int	O
exp_gts	int
=	O
0	int
;	O
static	O
int	O
exp_hnl	int
=	O
0	int
;	O
static	O
int	O
exp_i	int
=	O
0	int
;	O
static	O
int	O
exp_il	int
=	O
0	int
;	O
static	O
int	O
exp_ip	int
=	O
0	int
;	O
static	O
int	O
exp_kr	int
=	O
0	int
;	O
static	O
int	O
exp_l	int
=	O
0	int
;	O
static	O
int	O
exp_lc	int
=	O
0	int
;	O
static	O
int	O
exp_linux	int
=	O
0	int
;	O
static	O
int	O
exp_lp	int
=	O
0	int
;	O
static	O
int	O
exp_lps	int
=	O
0	int
;	O
static	O
int	O
exp_nip	int
=	O
0	int
;	O
static	O
int	O
exp_o	int
=	O
0	int
;	O
static	O
int	O
exp_orig	int
=	O
0	int
;	O
static	O
int	O
exp_pcs	int
=	O
0	int
;	O
static	O
int	O
exp_pi	int
=	O
0	int
;	O
static	O
int	O
exp_pmt	int
=	O
0	int
;	O
static	O
int	O
exp_pro	int
=	O
0	int
;	O
static	O
int	O
exp_prs	int
=	O
0	int
;	O
static	O
int	O
exp_psl	int
=	O
0	int
;	O
static	O
int	O
exp_ppi	int
=	O
0	int
;	O
static	O
int	O
exp_sai	int
=	O
0	int
;	O
static	O
int	O
exp_saf	int
=	O
0	int
;	O
static	O
int	O
exp_saw	int
=	O
0	int
;	O
static	O
int	O
exp_sbi	int
=	O
0	int
;	O
static	O
int	O
exp_sc	int
=	O
0	int
;	O
static	O
int	O
exp_sob	int
=	O
0	int
;	O
static	O
int	O
exp_ss	int
=	O
0	int
;	O
static	O
int	O
exp_st	int
=	O
0	int
;	O
static	O
int	O
exp_ts	int
=	O
0	int
;	O
static	O
int	O
exp_ut	int
=	O
0	int
;	O
static	O
int	O
exp_v	int
=	O
0	int
;	O
static	O
int	O
exp_version	int
=	O
0	int
;	O
static	O
int	O
exp_par	int
=	O
0	int
;	O
static	O
int	O
exp_slc	int
=	O
0	int
;	O
static	O
int	O
exp_as	int
=	O
0	int
;	O
static	O
int	O
exp_sar	int
=	O
0	int
;	O
static	O
int	O
exp_ntac	int
=	O
0	int
;	O
user_options_ty	struct
settings	struct
;	O
typedef	O
struct	O
{	O
const	O
char	O
*	O
p_name	pointer
;	O
profile_ty	enum
p_type	enum
;	O
int	O
p_default	int
;	O
on_or_off_ty	enum
p_special	enum
;	O
void	O
*	O
p_obj	pointer
;	O
int	O
*	O
p_explicit	pointer
;	O
}	O
pro_ty	struct
;	O
static	O
void	O
usage	function
(	O
void	O
)	O
;	O
const	O
pro_ty	struct
pro	array
[	O
]	O
=	O
{	O
{	O
"version"	pointer
,	O
PRO_PRSTRING	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
VERSION_SETTINGS_IDX	O
,	O
&	O
exp_version	int
}	O
,	O
{	O
"v"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
verbose	int
,	O
&	O
exp_v	int
}	O
,	O
{	O
"ut"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
use_tabs	int
,	O
&	O
exp_ut	int
}	O
,	O
{	O
"ts"	pointer
,	O
PRO_INT	int
,	O
8	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
tabsize	int
,	O
&	O
exp_ts	int
}	O
,	O
{	O
"st"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
use_stdout	int
,	O
&	O
exp_st	int
}	O
,	O
{	O
"ss"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
space_sp_semicolon	int
,	O
&	O
exp_ss	int
}	O
,	O
{	O
"sob"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
swallow_optional_blanklines	int
,	O
&	O
exp_sob	int
}	O
,	O
{	O
"sc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
star_comment_cont	int
,	O
&	O
exp_sc	int
}	O
,	O
{	O
"sbi"	pointer
,	O
PRO_INT	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
struct_brace_indent	int
,	O
&	O
exp_sbi	int
}	O
,	O
{	O
"saw"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
space_after_while	int
,	O
&	O
exp_saw	int
}	O
,	O
{	O
"sai"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
space_after_if	int
,	O
&	O
exp_sai	int
}	O
,	O
{	O
"saf"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
space_after_for	int
,	O
&	O
exp_saf	int
}	O
,	O
{	O
"psl"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
procnames_start_line	int
,	O
&	O
exp_psl	int
}	O
,	O
{	O
"prs"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
parentheses_space	int
,	O
&	O
exp_prs	int
}	O
,	O
{	O
"pmt"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
preserve_mtime	int
,	O
&	O
exp_pmt	int
}	O
,	O
{	O
"pi"	pointer
,	O
PRO_INT	int
,	O
-	O
1	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
paren_indent	int
,	O
&	O
exp_pi	int
}	O
,	O
{	O
"pcs"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
proc_calls_space	int
,	O
&	O
exp_pcs	int
}	O
,	O
{	O
"orig"	pointer
,	O
PRO_SETTINGS	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
ORIG_SETTINGS_IDX	O
,	O
&	O
exp_orig	int
}	O
,	O
{	O
"o"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
expect_output_file	int
,	O
&	O
exp_o	int
}	O
,	O
{	O
"nv"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
verbose	int
,	O
&	O
exp_v	int
}	O
,	O
{	O
"nut"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
use_tabs	int
,	O
&	O
exp_ut	int
}	O
,	O
{	O
"nss"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
space_sp_semicolon	int
,	O
&	O
exp_ss	int
}	O
,	O
{	O
"nsob"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
swallow_optional_blanklines	int
,	O
&	O
exp_sob	int
}	O
,	O
{	O
"nsc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
star_comment_cont	int
,	O
&	O
exp_sc	int
}	O
,	O
{	O
"nsaw"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
space_after_while	int
,	O
&	O
exp_saw	int
}	O
,	O
{	O
"nsai"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
space_after_if	int
,	O
&	O
exp_sai	int
}	O
,	O
{	O
"nsaf"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
space_after_for	int
,	O
&	O
exp_saf	int
}	O
,	O
{	O
"npsl"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
procnames_start_line	int
,	O
&	O
exp_psl	int
}	O
,	O
{	O
"nprs"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
parentheses_space	int
,	O
&	O
exp_prs	int
}	O
,	O
{	O
"npro"	pointer
,	O
PRO_IGN	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
0	int
,	O
&	O
exp_pro	int
}	O
,	O
{	O
"npmt"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
preserve_mtime	int
,	O
&	O
exp_pmt	int
}	O
,	O
{	O
"npcs"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
proc_calls_space	int
,	O
&	O
exp_pcs	int
}	O
,	O
{	O
"nlps"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
leave_preproc_space	int
,	O
&	O
exp_lps	int
}	O
,	O
{	O
"nlp"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
lineup_to_parens	int
,	O
&	O
exp_lp	int
}	O
,	O
{	O
"nip"	pointer
,	O
PRO_SETTINGS	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
NIP_SETTINGS_IDX	O
,	O
&	O
exp_nip	int
}	O
,	O
{	O
"nhnl"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
honour_newlines	int
,	O
&	O
exp_hnl	int
}	O
,	O
{	O
"ngts"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
gettext_strings	int
,	O
&	O
exp_gts	int
}	O
,	O
{	O
"nfca"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
format_comments	int
,	O
&	O
exp_fca	int
}	O
,	O
{	O
"nfc1"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
format_col1_comments	int
,	O
&	O
exp_fc1	int
}	O
,	O
{	O
"neei"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
extra_expression_indent	int
,	O
&	O
exp_eei	int
}	O
,	O
{	O
"ndj"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
ljust_decl	int
,	O
&	O
exp_dj	int
}	O
,	O
{	O
"ncs"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
cast_space	int
,	O
&	O
exp_cs	int
}	O
,	O
{	O
"nce"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
cuddle_else	int
,	O
&	O
exp_ce	int
}	O
,	O
{	O
"ncdw"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
cuddle_do_while	int
,	O
&	O
exp_cdw	int
}	O
,	O
{	O
"ncdb"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
comment_delimiter_on_blankline	int
,	O
&	O
exp_cdb	int
}	O
,	O
{	O
"nbs"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blank_after_sizeof	int
,	O
&	O
exp_bs	int
}	O
,	O
{	O
"nbfda"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
break_function_decl_args	int
,	O
&	O
exp_bfda	int
}	O
,	O
{	O
"nbfde"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
break_function_decl_args_end	int
,	O
&	O
exp_bfde	int
}	O
,	O
{	O
"nbc"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
leave_comma	int
,	O
&	O
exp_bc	int
}	O
,	O
{	O
"nbbo"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
break_before_boolean_operator	int
,	O
&	O
exp_bbo	int
}	O
,	O
{	O
"nbbb"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blanklines_before_blockcomments	int
,	O
&	O
exp_bbb	int
}	O
,	O
{	O
"nbap"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blanklines_after_procs	int
,	O
&	O
exp_bap	int
}	O
,	O
{	O
"nbadp"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blanklines_after_declarations_at_proctop	int
,	O
&	O
exp_badp	int
}	O
,	O
{	O
"nbad"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blanklines_after_declarations	int
,	O
&	O
exp_bad	int
}	O
,	O
{	O
"nbacc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
blanklines_around_conditional_compilation	int
,	O
&	O
exp_bacc	int
}	O
,	O
{	O
"linux"	pointer
,	O
PRO_SETTINGS	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
LINUX_SETTINGS_IDX	O
,	O
&	O
exp_linux	int
}	O
,	O
{	O
"lps"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
leave_preproc_space	int
,	O
&	O
exp_lps	int
}	O
,	O
{	O
"lp"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
lineup_to_parens	int
,	O
&	O
exp_lp	int
}	O
,	O
{	O
"lc"	pointer
,	O
PRO_INT	int
,	O
DEFAULT_RIGHT_COMMENT_MARGIN	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
comment_max_col	int
,	O
&	O
exp_lc	int
}	O
,	O
{	O
"l"	pointer
,	O
PRO_INT	int
,	O
DEFAULT_RIGHT_MARGIN	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
max_col	int
,	O
&	O
exp_l	int
}	O
,	O
{	O
"kr"	pointer
,	O
PRO_SETTINGS	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
KR_SETTINGS_IDX	O
,	O
&	O
exp_kr	int
}	O
,	O
{	O
"il"	pointer
,	O
PRO_INT	int
,	O
DEFAULT_LABEL_INDENT	O
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
label_offset	int
,	O
&	O
exp_il	int
}	O
,	O
{	O
"ip"	pointer
,	O
PRO_INT	int
,	O
5	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
indent_parameters	int
,	O
&	O
exp_ip	int
}	O
,	O
{	O
"i"	pointer
,	O
PRO_INT	int
,	O
2	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
ind_size	int
,	O
&	O
exp_i	int
}	O
,	O
{	O
"hnl"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
honour_newlines	int
,	O
&	O
exp_hnl	int
}	O
,	O
{	O
"h"	pointer
,	O
PRO_BOOL	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
NULL	O
,	O
NULL	O
}	O
,	O
{	O
"gts"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
gettext_strings	int
,	O
&	O
exp_gts	int
}	O
,	O
{	O
"gnu"	pointer
,	O
PRO_SETTINGS	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
GNU_SETTINGS_IDX	O
,	O
&	O
exp_gnu	int
}	O
,	O
{	O
"fnc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
fix_nested_comments	int
,	O
&	O
exp_fnc	int
}	O
,	O
{	O
"fca"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
format_comments	int
,	O
&	O
exp_fca	int
}	O
,	O
{	O
"fc1"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
format_col1_comments	int
,	O
&	O
exp_fc1	int
}	O
,	O
{	O
"eei"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
extra_expression_indent	int
,	O
&	O
exp_eei	int
}	O
,	O
{	O
"dj"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
ljust_decl	int
,	O
&	O
exp_dj	int
}	O
,	O
{	O
"di"	pointer
,	O
PRO_INT	int
,	O
2	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
decl_indent	int
,	O
&	O
exp_di	int
}	O
,	O
{	O
"d"	pointer
,	O
PRO_INT	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
unindent_displace	int
,	O
&	O
exp_d	int
}	O
,	O
{	O
"cs"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
cast_space	int
,	O
&	O
exp_cs	int
}	O
,	O
{	O
"cp"	pointer
,	O
PRO_INT	int
,	O
1	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
else_endif_col	int
,	O
&	O
exp_cp	int
}	O
,	O
{	O
"cli"	pointer
,	O
PRO_INT	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
case_indent	int
,	O
&	O
exp_cli	int
}	O
,	O
{	O
"ci"	pointer
,	O
PRO_INT	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
continuation_indent	int
,	O
&	O
exp_ci	int
}	O
,	O
{	O
"ce"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
cuddle_else	int
,	O
&	O
exp_ce	int
}	O
,	O
{	O
"cdw"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
cuddle_do_while	int
,	O
&	O
exp_cdw	int
}	O
,	O
{	O
"cdb"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
comment_delimiter_on_blankline	int
,	O
&	O
exp_cdb	int
}	O
,	O
{	O
"cd"	pointer
,	O
PRO_INT	int
,	O
33	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
decl_com_ind	int
,	O
&	O
exp_cd	int
}	O
,	O
{	O
"cbi"	pointer
,	O
PRO_INT	int
,	O
-	O
1	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
case_brace_indent	int
,	O
&	O
exp_cbi	int
}	O
,	O
{	O
"c++"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
c_plus_plus	int
,	O
&	O
exp_cpp	int
}	O
,	O
{	O
"c"	pointer
,	O
PRO_INT	int
,	O
33	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
com_ind	int
,	O
&	O
exp_c	int
}	O
,	O
{	O
"bs"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blank_after_sizeof	int
,	O
&	O
exp_bs	int
}	O
,	O
{	O
"brs"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
braces_on_struct_decl_line	int
,	O
&	O
exp_bls	int
}	O
,	O
{	O
"bls"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
braces_on_struct_decl_line	int
,	O
&	O
exp_bls	int
}	O
,	O
{	O
"brf"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
braces_on_func_def_line	int
,	O
&	O
exp_blf	int
}	O
,	O
{	O
"blf"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
braces_on_func_def_line	int
,	O
&	O
exp_blf	int
}	O
,	O
{	O
"bli"	pointer
,	O
PRO_INT	int
,	O
2	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
brace_indent	int
,	O
&	O
exp_bli	int
}	O
,	O
{	O
"br"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
btype_2	int
,	O
&	O
exp_bl	int
}	O
,	O
{	O
"bl"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
btype_2	int
,	O
&	O
exp_bl	int
}	O
,	O
{	O
"bfda"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
break_function_decl_args	int
,	O
&	O
exp_bfda	int
}	O
,	O
{	O
"bfde"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
break_function_decl_args_end	int
,	O
&	O
exp_bfde	int
}	O
,	O
{	O
"bc"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
leave_comma	int
,	O
&	O
exp_bc	int
}	O
,	O
{	O
"bbo"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
break_before_boolean_operator	int
,	O
&	O
exp_bbo	int
}	O
,	O
{	O
"bbb"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blanklines_before_blockcomments	int
,	O
&	O
exp_bbb	int
}	O
,	O
{	O
"bap"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blanklines_after_procs	int
,	O
&	O
exp_bap	int
}	O
,	O
{	O
"badp"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blanklines_after_declarations_at_proctop	int
,	O
&	O
exp_badp	int
}	O
,	O
{	O
"bad"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blanklines_after_declarations	int
,	O
&	O
exp_bad	int
}	O
,	O
{	O
"bacc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
blanklines_around_conditional_compilation	int
,	O
&	O
exp_bacc	int
}	O
,	O
{	O
"T"	pointer
,	O
PRO_KEY	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
0	int
,	O
&	O
exp_T	int
}	O
,	O
{	O
"ppi"	pointer
,	O
PRO_INT	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
&	O
settings	struct
.	O
force_preproc_width	int
,	O
&	O
exp_ppi	int
}	O
,	O
{	O
"pal"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
OFF	int
,	O
&	O
settings	struct
.	O
pointer_align_right	int
,	O
&	O
exp_par	int
}	O
,	O
{	O
"par"	pointer
,	O
PRO_BOOL	int
,	O
true	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
pointer_align_right	int
,	O
&	O
exp_par	int
}	O
,	O
{	O
"slc"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
allow_single_line_conditionals	int
,	O
&	O
exp_slc	int
}	O
,	O
{	O
"as"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
align_with_spaces	int
,	O
&	O
exp_as	int
}	O
,	O
{	O
"sar"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
spaces_around_initializers	int
,	O
&	O
exp_sar	int
}	O
,	O
{	O
"ntac"	pointer
,	O
PRO_BOOL	int
,	O
false	int
,	O
ON	int
,	O
&	O
settings	struct
.	O
dont_tab_align_comments	int
,	O
&	O
exp_ntac	int
}	O
,	O
{	O
0	int
,	O
PRO_IGN	int
,	O
0	int
,	O
ONOFF_NA	int
,	O
0	int
,	O
0	int
}	O
}	O
;	O
typedef	O
struct	O
long_option_conversion	struct
{	O
const	O
char	O
*	O
long_name	pointer
;	O
const	O
char	O
*	O
short_name	pointer
;	O
}	O
long_option_conversion_ty	struct
;	O
const	O
long_option_conversion_ty	struct
option_conversions	array
[	O
]	O
=	O
{	O
{	O
"version"	pointer
,	O
"version"	pointer
}	O
,	O
{	O
"verbose"	pointer
,	O
"v"	pointer
}	O
,	O
{	O
"usage"	pointer
,	O
"h"	pointer
}	O
,	O
{	O
"use-tabs"	pointer
,	O
"ut"	pointer
}	O
,	O
{	O
"tab-size"	pointer
,	O
"ts"	pointer
}	O
,	O
{	O
"swallow-optional-blank-lines"	pointer
,	O
"sob"	pointer
}	O
,	O
{	O
"struct-brace-indentation"	pointer
,	O
"sbi"	pointer
}	O
,	O
{	O
"start-left-side-of-comments"	pointer
,	O
"sc"	pointer
}	O
,	O
{	O
"standard-output"	pointer
,	O
"st"	pointer
}	O
,	O
{	O
"space-special-semicolon"	pointer
,	O
"ss"	pointer
}	O
,	O
{	O
"space-after-while"	pointer
,	O
"saw"	pointer
}	O
,	O
{	O
"space-after-procedure-calls"	pointer
,	O
"pcs"	pointer
}	O
,	O
{	O
"space-after-parentheses"	pointer
,	O
"prs"	pointer
}	O
,	O
{	O
"space-after-if"	pointer
,	O
"sai"	pointer
}	O
,	O
{	O
"space-after-for"	pointer
,	O
"saf"	pointer
}	O
,	O
{	O
"space-after-cast"	pointer
,	O
"cs"	pointer
}	O
,	O
{	O
"remove-preprocessor-space"	pointer
,	O
"nlps"	pointer
}	O
,	O
{	O
"procnames-start-lines"	pointer
,	O
"psl"	pointer
}	O
,	O
{	O
"preserve-mtime"	pointer
,	O
"pmt"	pointer
}	O
,	O
{	O
"paren-indentation"	pointer
,	O
"pi"	pointer
}	O
,	O
{	O
"parameter-indentation"	pointer
,	O
"ip"	pointer
}	O
,	O
{	O
"output-file"	pointer
,	O
"o"	pointer
}	O
,	O
{	O
"output"	pointer
,	O
"o"	pointer
}	O
,	O
{	O
"original-style"	pointer
,	O
"orig"	pointer
}	O
,	O
{	O
"original"	pointer
,	O
"orig"	pointer
}	O
,	O
{	O
"no-verbosity"	pointer
,	O
"nv"	pointer
}	O
,	O
{	O
"no-tabs"	pointer
,	O
"nut"	pointer
}	O
,	O
{	O
"no-space-after-while"	pointer
,	O
"nsaw"	pointer
}	O
,	O
{	O
"no-space-after-parentheses"	pointer
,	O
"nprs"	pointer
}	O
,	O
{	O
"no-space-after-if"	pointer
,	O
"nsai"	pointer
}	O
,	O
{	O
"no-space-after-function-call-names"	pointer
,	O
"npcs"	pointer
}	O
,	O
{	O
"no-space-after-for"	pointer
,	O
"nsaf"	pointer
}	O
,	O
{	O
"no-space-after-cast"	pointer
,	O
"ncs"	pointer
}	O
,	O
{	O
"no-space-after-casts"	pointer
,	O
"ncs"	pointer
}	O
,	O
{	O
"no-parameter-indentation"	pointer
,	O
"nip"	pointer
}	O
,	O
{	O
"no-extra-expression-indentation"	pointer
,	O
"neei"	pointer
}	O
,	O
{	O
"no-gettext-strings"	pointer
,	O
"ngts"	pointer
}	O
,	O
{	O
"no-comment-delimiters-on-blank-lines"	pointer
,	O
"ncdb"	pointer
}	O
,	O
{	O
"no-blank-lines-before-block-comments"	pointer
,	O
"nbbb"	pointer
}	O
,	O
{	O
"no-blank-lines-after-procedures"	pointer
,	O
"nbap"	pointer
}	O
,	O
{	O
"no-blank-lines-after-procedure-declarations"	pointer
,	O
"nbadp"	pointer
}	O
,	O
{	O
"no-blank-lines-after-ifdefs"	pointer
,	O
"nbacc"	pointer
}	O
,	O
{	O
"no-blank-lines-after-declarations"	pointer
,	O
"nbad"	pointer
}	O
,	O
{	O
"no-blank-lines-after-commas"	pointer
,	O
"nbc"	pointer
}	O
,	O
{	O
"no-blank-before-sizeof"	pointer
,	O
"nbs"	pointer
}	O
,	O
{	O
"no-Bill-Shannon"	pointer
,	O
"nbs"	pointer
}	O
,	O
{	O
"label-offset"	pointer
,	O
"il"	pointer
}	O
,	O
{	O
"line-length"	pointer
,	O
"l"	pointer
}	O
,	O
{	O
"line-comments-indentation"	pointer
,	O
"d"	pointer
}	O
,	O
{	O
"linux-style"	pointer
,	O
"linux"	pointer
}	O
,	O
{	O
"left-justify-declarations"	pointer
,	O
"dj"	pointer
}	O
,	O
{	O
"leave-preprocessor-space"	pointer
,	O
"lps"	pointer
}	O
,	O
{	O
"leave-optional-blank-lines"	pointer
,	O
"nsob"	pointer
}	O
,	O
{	O
"kernighan-and-ritchie-style"	pointer
,	O
"kr"	pointer
}	O
,	O
{	O
"kernighan-and-ritchie"	pointer
,	O
"kr"	pointer
}	O
,	O
{	O
"k-and-r-style"	pointer
,	O
"kr"	pointer
}	O
,	O
{	O
"indent-label"	pointer
,	O
"il"	pointer
}	O
,	O
{	O
"indentation-level"	pointer
,	O
"i"	pointer
}	O
,	O
{	O
"indent-level"	pointer
,	O
"i"	pointer
}	O
,	O
{	O
"ignore-profile"	pointer
,	O
"npro"	pointer
}	O
,	O
{	O
"ignore-newlines"	pointer
,	O
"nhnl"	pointer
}	O
,	O
{	O
"honour-newlines"	pointer
,	O
"hnl"	pointer
}	O
,	O
{	O
"help"	pointer
,	O
"h"	pointer
}	O
,	O
{	O
"gettext-strings"	pointer
,	O
"gts"	pointer
}	O
,	O
{	O
"gnu-style"	pointer
,	O
"gnu"	pointer
}	O
,	O
{	O
"fix-nested-comments"	pointer
,	O
"fnc"	pointer
}	O
,	O
{	O
"format-first-column-comments"	pointer
,	O
"fc1"	pointer
}	O
,	O
{	O
"format-all-comments"	pointer
,	O
"fca"	pointer
}	O
,	O
{	O
"extra-expression-indentation"	pointer
,	O
"eei"	pointer
}	O
,	O
{	O
"else-endif-column"	pointer
,	O
"cp"	pointer
}	O
,	O
{	O
"dont-star-comments"	pointer
,	O
"nsc"	pointer
}	O
,	O
{	O
"dont-space-special-semicolon"	pointer
,	O
"nss"	pointer
}	O
,	O
{	O
"dont-line-up-parentheses"	pointer
,	O
"nlp"	pointer
}	O
,	O
{	O
"dont-left-justify-declarations"	pointer
,	O
"ndj"	pointer
}	O
,	O
{	O
"dont-indent-parameters"	pointer
,	O
"nip"	pointer
}	O
,	O
{	O
"dont-format-first-column-comments"	pointer
,	O
"nfc1"	pointer
}	O
,	O
{	O
"dont-format-comments"	pointer
,	O
"nfca"	pointer
}	O
,	O
{	O
"dont-cuddle-else"	pointer
,	O
"nce"	pointer
}	O
,	O
{	O
"dont-cuddle-do-while"	pointer
,	O
"ncdw"	pointer
}	O
,	O
{	O
"dont-break-procedure-type"	pointer
,	O
"npsl"	pointer
}	O
,	O
{	O
"dont-break-function-decl-args"	pointer
,	O
"nbfda"	pointer
}	O
,	O
{	O
"dont-break-function-decl-args-end"	pointer
,	O
"nbfde"	pointer
}	O
,	O
{	O
"declaration-indentation"	pointer
,	O
"di"	pointer
}	O
,	O
{	O
"declaration-comment-column"	pointer
,	O
"cd"	pointer
}	O
,	O
{	O
"cuddle-else"	pointer
,	O
"ce"	pointer
}	O
,	O
{	O
"cuddle-do-while"	pointer
,	O
"cdw"	pointer
}	O
,	O
{	O
"continue-at-parentheses"	pointer
,	O
"lp"	pointer
}	O
,	O
{	O
"continuation-indentation"	pointer
,	O
"ci"	pointer
}	O
,	O
{	O
"comment-line-length"	pointer
,	O
"lc"	pointer
}	O
,	O
{	O
"comment-indentation"	pointer
,	O
"c"	pointer
}	O
,	O
{	O
"comment-delimiters-on-blank-lines"	pointer
,	O
"cdb"	pointer
}	O
,	O
{	O
"case-indentation"	pointer
,	O
"cli"	pointer
}	O
,	O
{	O
"case-brace-indentation"	pointer
,	O
"cbi"	pointer
}	O
,	O
{	O
"c-plus-plus"	pointer
,	O
"c++"	pointer
}	O
,	O
{	O
"break-function-decl-args"	pointer
,	O
"bfda"	pointer
}	O
,	O
{	O
"break-function-decl-args-end"	pointer
,	O
"bfde"	pointer
}	O
,	O
{	O
"break-before-boolean-operator"	pointer
,	O
"bbo"	pointer
}	O
,	O
{	O
"break-after-boolean-operator"	pointer
,	O
"nbbo"	pointer
}	O
,	O
{	O
"braces-on-struct-decl-line"	pointer
,	O
"brs"	pointer
}	O
,	O
{	O
"braces-on-func-def-line"	pointer
,	O
"brf"	pointer
}	O
,	O
{	O
"braces-on-if-line"	pointer
,	O
"br"	pointer
}	O
,	O
{	O
"braces-after-struct-decl-line"	pointer
,	O
"bls"	pointer
}	O
,	O
{	O
"braces-after-func-def-line"	pointer
,	O
"blf"	pointer
}	O
,	O
{	O
"braces-after-if-line"	pointer
,	O
"bl"	pointer
}	O
,	O
{	O
"brace-indent"	pointer
,	O
"bli"	pointer
}	O
,	O
{	O
"blank-lines-before-block-comments"	pointer
,	O
"bbb"	pointer
}	O
,	O
{	O
"blank-lines-after-procedures"	pointer
,	O
"bap"	pointer
}	O
,	O
{	O
"blank-lines-after-procedure-declarations"	pointer
,	O
"badp"	pointer
}	O
,	O
{	O
"blank-lines-after-ifdefs"	pointer
,	O
"bacc"	pointer
}	O
,	O
{	O
"blank-lines-after-declarations"	pointer
,	O
"bad"	pointer
}	O
,	O
{	O
"blank-lines-after-commas"	pointer
,	O
"bc"	pointer
}	O
,	O
{	O
"blank-before-sizeof"	pointer
,	O
"bs"	pointer
}	O
,	O
{	O
"berkeley-style"	pointer
,	O
"orig"	pointer
}	O
,	O
{	O
"berkeley"	pointer
,	O
"orig"	pointer
}	O
,	O
{	O
"Bill-Shannon"	pointer
,	O
"bs"	pointer
}	O
,	O
{	O
"preprocessor-indentation"	pointer
,	O
"ppi"	pointer
}	O
,	O
{	O
"pointer-align-right"	pointer
,	O
"par"	pointer
}	O
,	O
{	O
"pointer-align-left"	pointer
,	O
"pal"	pointer
}	O
,	O
{	O
"single-line-conditionals"	pointer
,	O
"slc"	pointer
}	O
,	O
{	O
"align-with-spaces"	pointer
,	O
"as"	pointer
}	O
,	O
{	O
"spaces-around-initializers"	pointer
,	O
"sar"	pointer
}	O
,	O
{	O
"dont-tab-align-comments"	pointer
,	O
"ntac"	pointer
}	O
,	O
{	O
0	int
,	O
0	int
}	O
,	O
}	O
;	O
static	O
void	O
usage	function
(	O
void	O
)	O
{	O
DieError	function
(	O
invocation_error	int
,	O
_	O
(	O
"usage: indent file [-o outfile ] [ options ]\n       indent file1 file2 ... fileN [ options ]\n"	pointer
)	O
)	O
;	O
}	O
static	O
BOOLEAN	char
eqin	function
(	O
const	O
char	O
*	O
s1	pointer
,	O
const	O
char	O
*	O
s2	pointer
,	O
const	O
char	O
*	O
*	O
start_param	pointer
)	O
{	O
BOOLEAN	char
ret	char
=	O
true	int
;	O
while	O
(	O
*	O
s1	pointer
)	O
{	O
if	O
(	O
*	O
s1	pointer
++	O
!=	O
*	O
s2	pointer
++	O
)	O
{	O
ret	char
=	O
false	int
;	O
}	O
}	O
*	O
start_param	pointer
=	O
s2	pointer
;	O
return	O
ret	char
;	O
}	O
void	O
set_defaults	function
(	O
void	O
)	O
{	O
const	O
pro_ty	struct
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
pro	array
;	O
p	pointer
->	O
p_name	pointer
;	O
p	pointer
++	O
)	O
{	O
if	O
(	O
p	pointer
->	O
p_obj	pointer
&&	O
(	O
(	O
(	O
p	pointer
->	O
p_type	enum
==	O
PRO_BOOL	int
)	O
&&	O
(	O
p	pointer
->	O
p_special	enum
==	O
ON	int
)	O
)	O
||	O
(	O
p	pointer
->	O
p_type	enum
==	O
PRO_INT	int
)	O
)	O
)	O
{	O
*	O
(	O
int	O
*	O
)	O
p	pointer
->	O
p_obj	pointer
=	O
p	pointer
->	O
p_default	int
;	O
}	O
}	O
}	O
void	O
set_defaults_after	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
exp_lc	int
)	O
{	O
settings	struct
.	O
comment_max_col	int
=	O
settings	struct
.	O
max_col	int
;	O
}	O
}	O
static	O
void	O
arg_missing	function
(	O
const	O
char	O
*	O
option	pointer
,	O
const	O
char	O
*	O
option_source	pointer
)	O
{	O
DieError	function
(	O
invocation_error	int
,	O
_	O
(	O
"%s: missing argument to parameter %s\n"	pointer
)	O
,	O
option_source	pointer
,	O
option	pointer
)	O
;	O
}	O
static	O
const	O
char	O
*	O
option_prefixes	array
[	O
4	int
]	O
=	O
{	O
"--"	pointer
,	O
"-"	pointer
,	O
"+"	pointer
,	O
0	int
}	O
;	O
static	O
size_t	long
option_prefix	function
(	O
const	O
char	O
*	O
arg	pointer
)	O
{	O
const	O
char	O
*	O
*	O
prefixes	pointer
=	O
option_prefixes	array
;	O
const	O
char	O
*	O
this_prefix	pointer
=	O
*	O
prefixes	pointer
;	O
const	O
char	O
*	O
argp	pointer
=	O
arg	pointer
;	O
size_t	long
ret	char
=	O
0	int
;	O
do	O
{	O
this_prefix	pointer
=	O
*	O
prefixes	pointer
;	O
argp	pointer
=	O
arg	pointer
;	O
while	O
(	O
*	O
this_prefix	pointer
==	O
*	O
argp	pointer
)	O
{	O
this_prefix	pointer
++	O
;	O
argp	pointer
++	O
;	O
}	O
if	O
(	O
*	O
this_prefix	pointer
==	O
'\0'	O
)	O
{	O
ret	char
=	O
(	O
size_t	long
)	O
(	O
this_prefix	pointer
-	O
*	O
prefixes	pointer
)	O
;	O
break	O
;	O
}	O
}	O
while	O
(	O
*	O
++	O
prefixes	pointer
)	O
;	O
return	O
ret	char
;	O
}	O
extern	O
int	O
set_option	function
(	O
const	O
char	O
*	O
option	pointer
,	O
const	O
char	O
*	O
param	pointer
,	O
int	O
explicit	int
,	O
const	O
char	O
*	O
option_source	pointer
)	O
{	O
const	O
pro_ty	struct
*	O
p	pointer
=	O
pro	array
;	O
const	O
char	O
*	O
param_start	pointer
=	O
NULL	O
;	O
size_t	long
option_length	long
=	O
option_prefix	function
(	O
option	pointer
)	O
;	O
int	O
val	enum
=	O
0	int
;	O
BOOLEAN	char
found	char
=	O
false	int
;	O
char	O
*	O
tmp	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
ctmp	pointer
=	O
NULL	O
;	O
size_t	long
param_len	long
=	O
0	int
;	O
if	O
(	O
option_length	long
>	O
0	int
)	O
{	O
if	O
(	O
(	O
option_length	long
==	O
1	int
)	O
&&	O
(	O
*	O
option	pointer
==	O
'-'	O
)	O
)	O
{	O
option	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
pro	array
;	O
p	pointer
->	O
p_name	pointer
;	O
p	pointer
++	O
)	O
{	O
if	O
(	O
(	O
*	O
p	pointer
->	O
p_name	pointer
==	O
*	O
option	pointer
)	O
&&	O
eqin	function
(	O
p	pointer
->	O
p_name	pointer
,	O
option	pointer
,	O
&	O
param_start	pointer
)	O
)	O
{	O
found	char
=	O
true	int
;	O
break	O
;	O
}	O
}	O
}	O
else	O
{	O
const	O
long_option_conversion_ty	struct
*	O
o	pointer
=	O
option_conversions	array
;	O
option	pointer
+=	O
option_length	long
;	O
while	O
(	O
o	pointer
->	O
short_name	pointer
)	O
{	O
if	O
(	O
eqin	function
(	O
o	pointer
->	O
long_name	pointer
,	O
option	pointer
,	O
&	O
param_start	pointer
)	O
)	O
{	O
break	O
;	O
}	O
o	pointer
++	O
;	O
}	O
if	O
(	O
o	pointer
->	O
short_name	pointer
)	O
{	O
for	O
(	O
p	pointer
=	O
pro	array
;	O
p	pointer
->	O
p_name	pointer
;	O
p	pointer
++	O
)	O
{	O
if	O
(	O
!	O
strcmp	function
(	O
p	pointer
->	O
p_name	pointer
,	O
o	pointer
->	O
short_name	pointer
)	O
)	O
{	O
found	char
=	O
true	int
;	O
break	O
;	O
}	O
}	O
}	O
}	O
}	O
if	O
(	O
!	O
found	char
)	O
{	O
DieError	function
(	O
invocation_error	int
,	O
_	O
(	O
"%s: unknown option \"%s\"\n"	pointer
)	O
,	O
option_source	pointer
,	O
option	pointer
-	O
1	int
)	O
;	O
}	O
else	O
if	O
(	O
strlen	function
(	O
p	pointer
->	O
p_name	pointer
)	O
==	O
1	int
&&	O
*	O
(	O
p	pointer
->	O
p_name	pointer
)	O
==	O
'h'	O
)	O
{	O
usage	function
(	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
settings	struct
.	O
verbose	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"option: %s\n"	pointer
)	O
,	O
p	pointer
->	O
p_name	pointer
)	O
;	O
}	O
if	O
(	O
explicit	int
||	O
!	O
*	O
(	O
p	pointer
->	O
p_explicit	pointer
)	O
)	O
{	O
if	O
(	O
explicit	int
)	O
{	O
*	O
(	O
p	pointer
->	O
p_explicit	pointer
)	O
=	O
1	int
;	O
}	O
switch	O
(	O
p	pointer
->	O
p_type	enum
)	O
{	O
case	O
PRO_PRSTRING	int
:	O
printf	function
(	O
_	O
(	O
"GNU indent %s\n"	pointer
)	O
,	O
settings_strings	array
[	O
(	O
size_t	long
)	O
p	pointer
->	O
p_obj	pointer
]	O
)	O
;	O
exit	function
(	O
invocation_error	int
)	O
;	O
break	O
;	O
case	O
PRO_SETTINGS	int
:	O
ctmp	pointer
=	O
settings_strings	array
[	O
(	O
size_t	long
)	O
p	pointer
->	O
p_obj	pointer
]	O
;	O
do	O
{	O
set_option	function
(	O
ctmp	pointer
,	O
0	int
,	O
0	int
,	O
option_source	pointer
)	O
;	O
while	O
(	O
*	O
ctmp	pointer
++	O
)	O
;	O
}	O
while	O
(	O
*	O
ctmp	pointer
)	O
;	O
break	O
;	O
case	O
PRO_IGN	int
:	O
break	O
;	O
case	O
PRO_KEY	int
:	O
if	O
(	O
*	O
param_start	pointer
==	O
0	int
)	O
{	O
if	O
(	O
!	O
(	O
param_start	pointer
=	O
param	pointer
)	O
)	O
{	O
arg_missing	function
(	O
option	pointer
,	O
option_source	pointer
)	O
;	O
}	O
else	O
{	O
val	enum
=	O
1	int
;	O
}	O
}	O
param_len	long
=	O
strlen	function
(	O
param_start	pointer
)	O
;	O
tmp	pointer
=	O
xmalloc	function
(	O
param_len	long
+	O
1	int
)	O
;	O
memcpy	function
(	O
tmp	pointer
,	O
param_start	pointer
,	O
param_len	long
)	O
;	O
tmp	pointer
[	O
param_len	long
]	O
=	O
'\0'	O
;	O
addkey	function
(	O
tmp	pointer
,	O
rw_decl	int
)	O
;	O
break	O
;	O
case	O
PRO_BOOL	int
:	O
if	O
(	O
p	pointer
->	O
p_special	enum
==	O
OFF	int
)	O
{	O
*	O
(	O
int	O
*	O
)	O
p	pointer
->	O
p_obj	pointer
=	O
false	int
;	O
}	O
else	O
{	O
*	O
(	O
int	O
*	O
)	O
p	pointer
->	O
p_obj	pointer
=	O
true	int
;	O
}	O
break	O
;	O
case	O
PRO_INT	int
:	O
if	O
(	O
*	O
param_start	pointer
==	O
'\0'	O
)	O
{	O
param_start	pointer
=	O
param	pointer
;	O
if	O
(	O
param_start	pointer
==	O
NULL	O
)	O
{	O
arg_missing	function
(	O
option	pointer
,	O
option_source	pointer
)	O
;	O
}	O
else	O
{	O
val	enum
=	O
1	int
;	O
}	O
}	O
if	O
(	O
isdigit	function
(	O
*	O
param_start	pointer
)	O
||	O
(	O
(	O
*	O
param_start	pointer
==	O
'-'	O
)	O
&&	O
isdigit	function
(	O
*	O
(	O
param_start	pointer
+	O
1	int
)	O
)	O
)	O
)	O
{	O
*	O
(	O
int	O
*	O
)	O
p	pointer
->	O
p_obj	pointer
=	O
atoi	function
(	O
param_start	pointer
)	O
;	O
}	O
else	O
{	O
DieError	function
(	O
invocation_error	int
,	O
_	O
(	O
"%s: option ``%s'' requires a numeric parameter\n"	pointer
)	O
,	O
option_source	pointer
,	O
option	pointer
-	O
1	int
)	O
;	O
}	O
break	O
;	O
default	O
:	O
DieError	function
(	O
invocation_error	int
,	O
_	O
(	O
"set_option: internal error: p_type %d\n"	pointer
)	O
,	O
(	O
int	O
)	O
p	pointer
->	O
p_type	enum
)	O
;	O
}	O
}	O
}	O
return	O
val	enum
;	O
}	O
static	O
int	O
skip_cpp_comment	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
int	O
i	int
;	O
do	O
{	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
while	O
(	O
(	O
i	int
!=	O
EOF	O
)	O
&&	O
(	O
i	int
!=	O
EOL	char
)	O
)	O
;	O
if	O
(	O
i	int
==	O
EOL	char
)	O
{	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
return	O
i	int
;	O
}	O
static	O
int	O
skip_c_comment	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
int	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
do	O
{	O
while	O
(	O
(	O
i	int
!=	O
EOF	O
)	O
&&	O
(	O
i	int
!=	O
'*'	O
)	O
)	O
{	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
if	O
(	O
i	int
==	O
EOF	O
)	O
{	O
WARNING	O
(	O
_	O
(	O
"Profile contains an unterminated comment"	pointer
)	O
,	O
NULL	O
,	O
NULL	O
)	O
;	O
break	O
;	O
}	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
while	O
(	O
i	int
!=	O
'/'	O
)	O
;	O
if	O
(	O
i	int
!=	O
EOF	O
)	O
{	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
return	O
i	int
;	O
}	O
static	O
int	O
skip_comment	function
(	O
FILE	struct
*	O
f	pointer
)	O
{	O
int	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
switch	O
(	O
i	int
)	O
{	O
case	O
'/'	O
:	O
i	int
=	O
skip_cpp_comment	function
(	O
f	pointer
)	O
;	O
break	O
;	O
case	O
'*'	O
:	O
i	int
=	O
skip_c_comment	function
(	O
f	pointer
)	O
;	O
break	O
;	O
default	O
:	O
WARNING	O
(	O
_	O
(	O
"Profile contains unpalatable characters"	pointer
)	O
,	O
NULL	O
,	O
NULL	O
)	O
;	O
}	O
return	O
i	int
;	O
}	O
static	O
int	O
skip_spaces	function
(	O
FILE	struct
*	O
f	pointer
,	O
int	O
first	int
)	O
{	O
int	O
i	int
=	O
first	int
;	O
while	O
(	O
(	O
i	int
<=	O
' '	O
)	O
&&	O
(	O
i	int
!=	O
EOF	O
)	O
)	O
{	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
return	O
i	int
;	O
}	O
static	O
int	O
read_string	function
(	O
FILE	struct
*	O
f	pointer
,	O
char	O
*	O
buff	pointer
,	O
int	O
first	int
)	O
{	O
int	O
i	int
=	O
first	int
;	O
char	O
*	O
p	pointer
=	O
buff	pointer
;	O
while	O
(	O
(	O
i	int
!=	O
EOF	O
)	O
&&	O
(	O
i	int
>	O
' '	O
)	O
&&	O
(	O
i	int
!=	O
'/'	O
)	O
&&	O
(	O
p	pointer
<	O
buff	pointer
+	O
BUFSIZ	int
)	O
)	O
{	O
*	O
(	O
p	pointer
++	O
)	O
=	O
(	O
char	O
)	O
i	int
;	O
i	int
=	O
getc	function
(	O
f	pointer
)	O
;	O
}	O
*	O
p	pointer
=	O
EOS	char
;	O
return	O
i	int
;	O
}	O
static	O
void	O
scan_profile	function
(	O
FILE	struct
*	O
f	pointer
,	O
const	O
char	O
*	O
option_source	pointer
)	O
{	O
char	O
b0	array
[	O
BUFSIZ	int
]	O
;	O
char	O
b1	array
[	O
BUFSIZ	int
]	O
;	O
char	O
*	O
current	pointer
=	O
b0	array
;	O
int	O
i	int
=	O
skip_spaces	function
(	O
f	pointer
,	O
' '	O
)	O
;	O
memset	function
(	O
b0	array
,	O
0	int
,	O
BUFSIZ	int
)	O
;	O
memset	function
(	O
b1	array
,	O
0	int
,	O
BUFSIZ	int
)	O
;	O
while	O
(	O
i	int
!=	O
EOF	O
)	O
{	O
if	O
(	O
i	int
==	O
'/'	O
)	O
{	O
i	int
=	O
skip_comment	function
(	O
f	pointer
)	O
;	O
}	O
else	O
{	O
i	int
=	O
read_string	function
(	O
f	pointer
,	O
current	pointer
,	O
i	int
)	O
;	O
if	O
(	O
current	pointer
==	O
b0	array
)	O
{	O
current	pointer
=	O
b1	array
;	O
}	O
else	O
if	O
(	O
set_option	function
(	O
b0	array
,	O
b1	array
,	O
1	int
,	O
option_source	pointer
)	O
==	O
1	int
)	O
{	O
current	pointer
=	O
b0	array
;	O
}	O
else	O
{	O
strcpy	function
(	O
b0	array
,	O
b1	array
)	O
;	O
current	pointer
=	O
b1	array
;	O
}	O
}	O
i	int
=	O
skip_spaces	function
(	O
f	pointer
,	O
i	int
)	O
;	O
}	O
if	O
(	O
current	pointer
!=	O
b0	array
)	O
{	O
set_option	function
(	O
b0	array
,	O
NULL	O
,	O
1	int
,	O
option_source	pointer
)	O
;	O
}	O
}	O
char	O
*	O
set_profile	function
(	O
void	O
)	O
{	O
FILE	struct
*	O
f	pointer
=	O
NULL	O
;	O
char	O
*	O
fname	pointer
=	O
NULL	O
;	O
static	O
char	O
prof	array
[	O
]	O
=	O
INDENT_PROFILE	pointer
;	O
char	O
*	O
homedir	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
envname	pointer
=	O
getenv	function
(	O
PROFILE_ENV_NAME	pointer
)	O
;	O
if	O
(	O
envname	pointer
!=	O
NULL	O
)	O
{	O
f	pointer
=	O
fopen	function
(	O
envname	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
f	pointer
==	O
NULL	O
)	O
{	O
fatal	function
(	O
_	O
(	O
"File named by environment variable %s does not exist or is not readable"	pointer
)	O
,	O
PROFILE_ENV_NAME	pointer
)	O
;	O
}	O
else	O
{	O
scan_profile	function
(	O
f	pointer
,	O
envname	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
f	pointer
)	O
;	O
fname	pointer
=	O
strdup	function
(	O
envname	pointer
)	O
;	O
}	O
}	O
else	O
{	O
f	pointer
=	O
fopen	function
(	O
INDENT_PROFILE	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
f	pointer
!=	O
NULL	O
)	O
{	O
int	O
len	int
=	O
strlen	function
(	O
INDENT_PROFILE	pointer
)	O
+	O
3	int
;	O
scan_profile	function
(	O
f	pointer
,	O
INDENT_PROFILE	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
f	pointer
)	O
;	O
fname	pointer
=	O
xmalloc	function
(	O
len	int
)	O
;	O
strcpy	function
(	O
fname	pointer
,	O
"./"	pointer
)	O
;	O
(	O
void	O
)	O
strcat	function
(	O
fname	pointer
,	O
INDENT_PROFILE	pointer
)	O
;	O
}	O
else	O
{	O
homedir	pointer
=	O
getenv	function
(	O
"HOME"	pointer
)	O
;	O
if	O
(	O
homedir	pointer
)	O
{	O
fname	pointer
=	O
xmalloc	function
(	O
strlen	function
(	O
homedir	pointer
)	O
+	O
strlen	function
(	O
PROFILE_FORMAT	pointer
)	O
+	O
sizeof	O
(	O
prof	array
)	O
)	O
;	O
sprintf	function
(	O
fname	pointer
,	O
PROFILE_FORMAT	pointer
,	O
homedir	pointer
,	O
prof	array
)	O
;	O
if	O
(	O
(	O
f	pointer
=	O
fopen	function
(	O
fname	pointer
,	O
"r"	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
scan_profile	function
(	O
f	pointer
,	O
fname	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
f	pointer
)	O
;	O
}	O
else	O
{	O
xfree	function
(	O
fname	pointer
)	O
;	O
fname	pointer
=	O
NULL	O
;	O
}	O
}	O
}	O
}	O
return	O
fname	pointer
;	O
}	O
