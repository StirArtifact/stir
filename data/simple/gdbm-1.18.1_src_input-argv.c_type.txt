struct	O
instream_argv	struct
{	O
struct	O
instream	struct
base	struct
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
int	O
idx	int
;	O
char	O
*	O
cur	pointer
;	O
int	O
delim	int
;	O
int	O
quote	int
;	O
}	O
;	O
static	O
ssize_t	long
instream_argv_read	function
(	O
instream_t	pointer
istr	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	int
)	O
{	O
size_t	long
total	long
=	O
0	int
;	O
struct	O
instream_argv	struct
*	O
i	pointer
=	O
(	O
struct	O
instream_argv	struct
*	O
)	O
istr	pointer
;	O
char	O
const	O
specials	array
[	O
]	O
=	O
" \"\t\n[]{},="	pointer
;	O
char	O
const	O
escapable	array
[	O
]	O
=	O
"\\\""	pointer
;	O
while	O
(	O
total	long
<	O
size	int
)	O
{	O
if	O
(	O
*	O
i	pointer
->	O
cur	pointer
==	O
0	int
)	O
{	O
if	O
(	O
i	pointer
->	O
quote	int
)	O
{	O
buf	pointer
[	O
total	long
++	O
]	O
=	O
'"'	O
;	O
i	pointer
->	O
quote	int
=	O
0	int
;	O
continue	O
;	O
}	O
if	O
(	O
i	pointer
->	O
idx	int
==	O
i	pointer
->	O
argc	int
)	O
{	O
if	O
(	O
!	O
i	pointer
->	O
delim	int
)	O
{	O
i	pointer
->	O
cur	pointer
=	O
"\n"	pointer
;	O
i	pointer
->	O
delim	int
=	O
1	int
;	O
}	O
else	O
break	O
;	O
}	O
else	O
if	O
(	O
!	O
i	pointer
->	O
delim	int
)	O
{	O
i	pointer
->	O
cur	pointer
=	O
" "	pointer
;	O
i	pointer
->	O
delim	int
=	O
1	int
;	O
}	O
else	O
{	O
size_t	long
len	long
;	O
i	pointer
->	O
cur	pointer
=	O
i	pointer
->	O
argv	pointer
[	O
i	pointer
->	O
idx	int
++	O
]	O
;	O
i	pointer
->	O
delim	int
=	O
0	int
;	O
len	long
=	O
strlen	function
(	O
i	pointer
->	O
cur	pointer
)	O
;	O
if	O
(	O
len	long
>	O
1	int
&&	O
i	pointer
->	O
cur	pointer
[	O
0	int
]	O
==	O
'"'	O
&&	O
i	pointer
->	O
cur	pointer
[	O
len	long
-	O
1	int
]	O
==	O
'"'	O
)	O
i	pointer
->	O
quote	int
=	O
0	int
;	O
else	O
if	O
(	O
i	pointer
->	O
cur	pointer
[	O
strcspn	function
(	O
i	pointer
->	O
cur	pointer
,	O
specials	array
)	O
]	O
)	O
{	O
buf	pointer
[	O
total	long
++	O
]	O
=	O
'"'	O
;	O
i	pointer
->	O
quote	int
=	O
1	int
;	O
continue	O
;	O
}	O
else	O
i	pointer
->	O
quote	int
=	O
0	int
;	O
}	O
}	O
if	O
(	O
strchr	function
(	O
escapable	array
,	O
*	O
i	pointer
->	O
cur	pointer
)	O
)	O
{	O
if	O
(	O
total	long
+	O
2	int
>	O
size	int
)	O
break	O
;	O
buf	pointer
[	O
total	long
++	O
]	O
=	O
'\\'	O
;	O
i	pointer
->	O
cur	pointer
++	O
;	O
}	O
buf	pointer
[	O
total	long
++	O
]	O
=	O
*	O
i	pointer
->	O
cur	pointer
++	O
;	O
}	O
return	O
total	long
;	O
}	O
static	O
void	O
instream_argv_close	function
(	O
instream_t	pointer
istr	pointer
)	O
{	O
struct	O
instream_argv	struct
*	O
i	pointer
=	O
(	O
struct	O
instream_argv	struct
*	O
)	O
istr	pointer
;	O
free	function
(	O
i	pointer
)	O
;	O
}	O
static	O
int	O
instream_argv_eq	function
(	O
instream_t	pointer
a	array
,	O
instream_t	pointer
b	array
)	O
{	O
return	O
0	int
;	O
}	O
instream_t	pointer
instream_argv_create	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
struct	O
instream_argv	struct
*	O
istr	pointer
;	O
istr	pointer
=	O
emalloc	function
(	O
sizeof	O
*	O
istr	pointer
)	O
;	O
istr	pointer
->	O
base	struct
.	O
in_name	pointer
=	O
"argv"	pointer
;	O
istr	pointer
->	O
base	struct
.	O
in_inter	int
=	O
0	int
;	O
istr	pointer
->	O
base	struct
.	O
in_read	pointer
=	O
instream_argv_read	function
;	O
istr	pointer
->	O
base	struct
.	O
in_close	pointer
=	O
instream_argv_close	function
;	O
istr	pointer
->	O
base	struct
.	O
in_eq	pointer
=	O
instream_argv_eq	function
;	O
istr	pointer
->	O
argc	int
=	O
argc	int
;	O
istr	pointer
->	O
argv	pointer
=	O
argv	pointer
;	O
istr	pointer
->	O
idx	int
=	O
0	int
;	O
istr	pointer
->	O
cur	pointer
=	O
""	pointer
;	O
istr	pointer
->	O
delim	int
=	O
1	int
;	O
istr	pointer
->	O
quote	int
=	O
0	int
;	O
return	O
(	O
instream_t	pointer
)	O
istr	pointer
;	O
}	O
