static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: bt_method.c,v 1.6 2000/06/28 16:47:00 loic Exp $"	pointer
;	O
static	O
int	O
__bam_set_bt_compare	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
int	O
(	O
*	O
)	O
(	O
const	O
DBT	struct
*	O
,	O
const	O
DBT	struct
*	O
)	O
)	O
)	O
;	O
static	O
int	O
__bam_set_bt_maxkey	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__bam_set_bt_minkey	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__bam_set_bt_prefix	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
size_t	long
(	O
*	O
)	O
(	O
const	O
DBT	struct
*	O
,	O
const	O
DBT	struct
*	O
)	O
)	O
)	O
;	O
static	O
int	O
__ram_set_re_delim	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
int	O
)	O
)	O
;	O
static	O
int	O
__ram_set_re_len	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
u_int32_t	int
)	O
)	O
;	O
static	O
int	O
__ram_set_re_pad	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
int	O
)	O
)	O
;	O
static	O
int	O
__ram_set_re_source	function
__P	O
(	O
(	O
DB	struct
*	O
,	O
const	O
char	O
*	O
)	O
)	O
;	O
int	O
CDB___bam_db_create	function
(	O
dbp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
int	O
ret	int
;	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_calloc	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
1	int
,	O
sizeof	O
(	O
BTREE	struct
)	O
,	O
&	O
t	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
dbp	pointer
->	O
bt_internal	pointer
=	O
t	pointer
;	O
t	pointer
->	O
bt_minkey	int
=	O
DEFMINKEYPAGE	O
;	O
t	pointer
->	O
bt_compare	pointer
=	O
CDB___bam_defcmp	function
;	O
t	pointer
->	O
bt_prefix	pointer
=	O
CDB___bam_defpfx	function
;	O
dbp	pointer
->	O
set_bt_compare	pointer
=	O
__bam_set_bt_compare	function
;	O
dbp	pointer
->	O
set_bt_maxkey	pointer
=	O
__bam_set_bt_maxkey	function
;	O
dbp	pointer
->	O
set_bt_minkey	pointer
=	O
__bam_set_bt_minkey	function
;	O
dbp	pointer
->	O
set_bt_prefix	pointer
=	O
__bam_set_bt_prefix	function
;	O
t	pointer
->	O
re_delim	int
=	O
'\n'	O
;	O
t	pointer
->	O
re_pad	int
=	O
' '	O
;	O
dbp	pointer
->	O
set_re_delim	pointer
=	O
__ram_set_re_delim	function
;	O
dbp	pointer
->	O
set_re_len	pointer
=	O
__ram_set_re_len	function
;	O
dbp	pointer
->	O
set_re_pad	pointer
=	O
__ram_set_re_pad	function
;	O
dbp	pointer
->	O
set_re_source	pointer
=	O
__ram_set_re_source	function
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___bam_db_close	function
(	O
dbp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
if	O
(	O
t	pointer
->	O
re_smap	pointer
!=	O
NULL	O
)	O
(	O
void	O
)	O
CDB___os_unmapfile	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
t	pointer
->	O
re_smap	pointer
,	O
t	pointer
->	O
re_msize	long
)	O
;	O
if	O
(	O
F_ISSET	O
(	O
&	O
t	pointer
->	O
re_fh	struct
,	O
DB_FH_VALID	int
)	O
)	O
(	O
void	O
)	O
CDB___os_closehandle	function
(	O
&	O
t	pointer
->	O
re_fh	struct
)	O
;	O
if	O
(	O
t	pointer
->	O
re_source	pointer
!=	O
NULL	O
)	O
CDB___os_freestr	function
(	O
t	pointer
->	O
re_source	pointer
)	O
;	O
CDB___os_free	function
(	O
t	pointer
,	O
sizeof	O
(	O
BTREE	struct
)	O
)	O
;	O
dbp	pointer
->	O
bt_internal	pointer
=	O
NULL	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___bam_set_flags	function
(	O
dbp	pointer
,	O
flagsp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
*	O
flagsp	pointer
;	O
{	O
u_int32_t	int
flags	int
;	O
flags	int
=	O
*	O
flagsp	pointer
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUP	int
|	O
DB_DUPSORT	int
|	O
DB_RECNUM	int
|	O
DB_REVSPLITOFF	int
)	O
)	O
{	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"DB->set_flags"	pointer
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUP	int
|	O
DB_DUPSORT	int
)	O
)	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
|	O
DB_OK_HASH	int
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_RECNUM	int
|	O
DB_REVSPLITOFF	int
)	O
)	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUP	int
|	O
DB_DUPSORT	int
)	O
)	O
{	O
if	O
(	O
F_ISSET	O
(	O
dbp	pointer
,	O
DB_BT_RECNUM	int
)	O
)	O
goto	O
incompat	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_DUPSORT	int
)	O
)	O
{	O
if	O
(	O
dbp	pointer
->	O
dup_compare	pointer
==	O
NULL	O
)	O
dbp	pointer
->	O
dup_compare	pointer
=	O
CDB___bam_defcmp	function
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_AM_DUPSORT	int
)	O
;	O
}	O
F_SET	O
(	O
dbp	pointer
,	O
DB_AM_DUP	int
)	O
;	O
LF_CLR	O
(	O
DB_DUP	int
|	O
DB_DUPSORT	int
)	O
;	O
}	O
if	O
(	O
LF_ISSET	O
(	O
DB_RECNUM	int
)	O
)	O
{	O
if	O
(	O
F_ISSET	O
(	O
dbp	pointer
,	O
DB_AM_DUP	int
)	O
)	O
goto	O
incompat	O
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_BT_RECNUM	int
)	O
;	O
LF_CLR	O
(	O
DB_RECNUM	int
)	O
;	O
}	O
if	O
(	O
LF_ISSET	O
(	O
DB_REVSPLITOFF	int
)	O
)	O
{	O
F_SET	O
(	O
dbp	pointer
,	O
DB_BT_REVSPLIT	int
)	O
;	O
LF_CLR	O
(	O
DB_REVSPLITOFF	int
)	O
;	O
}	O
*	O
flagsp	pointer
=	O
flags	int
;	O
}	O
return	O
(	O
0	int
)	O
;	O
incompat	O
:	O
return	O
(	O
CDB___db_ferr	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
"DB->set_flags"	pointer
,	O
1	int
)	O
)	O
;	O
}	O
static	O
int	O
__bam_set_bt_compare	function
(	O
dbp	pointer
,	O
func	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
int	O
(	O
*	O
func	pointer
)	O
__P	O
(	O
(	O
const	O
DBT	struct
*	O
,	O
const	O
DBT	struct
*	O
)	O
)	O
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_bt_compare"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
t	pointer
->	O
bt_compare	pointer
=	O
func	pointer
;	O
if	O
(	O
t	pointer
->	O
bt_prefix	pointer
==	O
CDB___bam_defpfx	function
)	O
t	pointer
->	O
bt_prefix	pointer
=	O
NULL	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__bam_set_bt_maxkey	function
(	O
dbp	pointer
,	O
bt_maxkey	int
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
bt_maxkey	int
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_bt_maxkey"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
if	O
(	O
bt_maxkey	int
<	O
1	int
)	O
{	O
CDB___db_err	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
"minimum bt_maxkey value is 1"	pointer
)	O
;	O
return	O
(	O
EINVAL	int
)	O
;	O
}	O
t	pointer
->	O
bt_maxkey	int
=	O
bt_maxkey	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__bam_set_bt_minkey	function
(	O
dbp	pointer
,	O
bt_minkey	int
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
bt_minkey	int
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_bt_minkey"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
if	O
(	O
bt_minkey	int
<	O
2	int
)	O
{	O
CDB___db_err	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
"minimum bt_minkey value is 2"	pointer
)	O
;	O
return	O
(	O
EINVAL	int
)	O
;	O
}	O
t	pointer
->	O
bt_minkey	int
=	O
bt_minkey	int
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__bam_set_bt_prefix	function
(	O
dbp	pointer
,	O
func	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
size_t	long
(	O
*	O
func	pointer
)	O
__P	O
(	O
(	O
const	O
DBT	struct
*	O
,	O
const	O
DBT	struct
*	O
)	O
)	O
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_bt_prefix"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_BTREE	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
t	pointer
->	O
bt_prefix	pointer
=	O
func	pointer
;	O
return	O
(	O
0	int
)	O
;	O
}	O
int	O
CDB___ram_set_flags	function
(	O
dbp	pointer
,	O
flagsp	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
*	O
flagsp	pointer
;	O
{	O
u_int32_t	int
flags	int
;	O
flags	int
=	O
*	O
flagsp	pointer
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_RENUMBER	int
|	O
DB_SNAPSHOT	int
)	O
)	O
{	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"DB->set_flags"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_RECNO	int
)	O
;	O
if	O
(	O
LF_ISSET	O
(	O
DB_RENUMBER	int
)	O
)	O
{	O
F_SET	O
(	O
dbp	pointer
,	O
DB_RE_RENUMBER	int
)	O
;	O
LF_CLR	O
(	O
DB_RENUMBER	int
)	O
;	O
}	O
if	O
(	O
LF_ISSET	O
(	O
DB_SNAPSHOT	int
)	O
)	O
{	O
F_SET	O
(	O
dbp	pointer
,	O
DB_RE_SNAPSHOT	int
)	O
;	O
LF_CLR	O
(	O
DB_SNAPSHOT	int
)	O
;	O
}	O
*	O
flagsp	pointer
=	O
flags	int
;	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ram_set_re_delim	function
(	O
dbp	pointer
,	O
re_delim	int
)	O
DB	struct
*	O
dbp	pointer
;	O
int	O
re_delim	int
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_re_delim"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_RECNO	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
t	pointer
->	O
re_delim	int
=	O
re_delim	int
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_RE_DELIMITER	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ram_set_re_len	function
(	O
dbp	pointer
,	O
re_len	int
)	O
DB	struct
*	O
dbp	pointer
;	O
u_int32_t	int
re_len	int
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
QUEUE	struct
*	O
q	struct
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_re_len"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_QUEUE	int
|	O
DB_OK_RECNO	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
t	pointer
->	O
re_len	int
=	O
re_len	int
;	O
q	struct
=	O
dbp	pointer
->	O
q_internal	pointer
;	O
q	struct
->	O
re_len	int
=	O
re_len	int
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_RE_FIXEDLEN	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ram_set_re_pad	function
(	O
dbp	pointer
,	O
re_pad	int
)	O
DB	struct
*	O
dbp	pointer
;	O
int	O
re_pad	int
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
QUEUE	struct
*	O
q	struct
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_re_pad"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_QUEUE	int
|	O
DB_OK_RECNO	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
t	pointer
->	O
re_pad	int
=	O
re_pad	int
;	O
q	struct
=	O
dbp	pointer
->	O
q_internal	pointer
;	O
q	struct
->	O
re_pad	int
=	O
re_pad	int
;	O
F_SET	O
(	O
dbp	pointer
,	O
DB_RE_PAD	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
int	O
__ram_set_re_source	function
(	O
dbp	pointer
,	O
re_source	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
const	O
char	O
*	O
re_source	pointer
;	O
{	O
BTREE	struct
*	O
t	pointer
;	O
DB_ILLEGAL_AFTER_OPEN	O
(	O
dbp	pointer
,	O
"set_re_source"	pointer
)	O
;	O
DB_ILLEGAL_METHOD	O
(	O
dbp	pointer
,	O
DB_OK_RECNO	int
)	O
;	O
t	pointer
=	O
dbp	pointer
->	O
bt_internal	pointer
;	O
return	O
(	O
CDB___os_strdup	function
(	O
dbp	pointer
->	O
dbenv	pointer
,	O
re_source	pointer
,	O
&	O
t	pointer
->	O
re_source	pointer
)	O
)	O
;	O
}	O
