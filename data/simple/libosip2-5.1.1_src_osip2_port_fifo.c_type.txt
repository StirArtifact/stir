void	O
osip_fifo_init	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
)	O
{	O
ff	pointer
->	O
qislocked	pointer
=	O
osip_mutex_init	function
(	O
)	O
;	O
ff	pointer
->	O
qisempty	pointer
=	O
osip_sem_init	function
(	O
0	int
)	O
;	O
osip_list_init	function
(	O
&	O
ff	pointer
->	O
queue	struct
)	O
;	O
ff	pointer
->	O
state	pointer
=	O
osip_empty	int
;	O
}	O
int	O
osip_fifo_add	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
,	O
void	O
*	O
el	pointer
)	O
{	O
osip_mutex_lock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
osip_list_add	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
el	pointer
,	O
-	O
1	int
)	O
;	O
ff	pointer
->	O
state	pointer
=	O
osip_ok	int
;	O
osip_sem_post	function
(	O
ff	pointer
->	O
qisempty	pointer
)	O
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_fifo_insert	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
,	O
void	O
*	O
el	pointer
)	O
{	O
osip_mutex_lock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
osip_list_add	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
el	pointer
,	O
0	int
)	O
;	O
ff	pointer
->	O
state	pointer
=	O
osip_ok	int
;	O
osip_sem_post	function
(	O
ff	pointer
->	O
qisempty	pointer
)	O
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_fifo_size	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
)	O
{	O
int	O
i	int
;	O
osip_mutex_lock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
i	int
=	O
osip_list_size	function
(	O
&	O
ff	pointer
->	O
queue	struct
)	O
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
i	int
;	O
}	O
void	O
*	O
osip_fifo_get	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
)	O
{	O
void	O
*	O
el	pointer
=	O
NULL	O
;	O
int	O
i	int
=	O
osip_sem_wait	function
(	O
ff	pointer
->	O
qisempty	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
NULL	O
;	O
osip_mutex_lock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
if	O
(	O
ff	pointer
->	O
state	pointer
!=	O
osip_empty	int
)	O
{	O
el	pointer
=	O
osip_list_get	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
0	int
)	O
;	O
osip_list_remove	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
0	int
)	O
;	O
}	O
else	O
{	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_ERROR	O
,	O
NULL	O
,	O
"no element in fifo.\n"	pointer
)	O
)	O
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
if	O
(	O
osip_list_size	function
(	O
&	O
ff	pointer
->	O
queue	struct
)	O
<=	O
0	int
)	O
ff	pointer
->	O
state	pointer
=	O
osip_empty	int
;	O
else	O
ff	pointer
->	O
state	pointer
=	O
osip_ok	int
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
el	pointer
;	O
}	O
void	O
*	O
osip_fifo_tryget	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
)	O
{	O
void	O
*	O
el	pointer
=	O
NULL	O
;	O
if	O
(	O
0	int
!=	O
osip_sem_trywait	function
(	O
ff	pointer
->	O
qisempty	pointer
)	O
)	O
{	O
return	O
NULL	O
;	O
}	O
osip_mutex_lock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
if	O
(	O
ff	pointer
->	O
state	pointer
!=	O
osip_empty	int
)	O
{	O
el	pointer
=	O
osip_list_get	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
0	int
)	O
;	O
osip_list_remove	function
(	O
&	O
ff	pointer
->	O
queue	struct
,	O
0	int
)	O
;	O
}	O
else	O
{	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO4	O
,	O
NULL	O
,	O
"no element in fifo.\n"	pointer
)	O
)	O
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
if	O
(	O
osip_list_size	function
(	O
&	O
ff	pointer
->	O
queue	struct
)	O
<=	O
0	int
)	O
ff	pointer
->	O
state	pointer
=	O
osip_empty	int
;	O
else	O
ff	pointer
->	O
state	pointer
=	O
osip_ok	int
;	O
osip_mutex_unlock	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
return	O
el	pointer
;	O
}	O
void	O
osip_fifo_free	function
(	O
osip_fifo_t	struct
*	O
ff	pointer
)	O
{	O
if	O
(	O
ff	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_mutex_destroy	function
(	O
ff	pointer
->	O
qislocked	pointer
)	O
;	O
osip_sem_destroy	function
(	O
ff	pointer
->	O
qisempty	pointer
)	O
;	O
osip_free	O
(	O
ff	pointer
)	O
;	O
}	O
