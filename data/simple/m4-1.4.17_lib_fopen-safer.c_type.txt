FILE	struct
*	O
fopen_safer	function
(	O
char	O
const	O
*	O
file	pointer
,	O
char	O
const	O
*	O
mode	pointer
)	O
{	O
FILE	struct
*	O
fp	pointer
=	O
fopen	function
(	O
file	pointer
,	O
mode	pointer
)	O
;	O
if	O
(	O
fp	pointer
)	O
{	O
int	O
fd	array
=	O
fileno	function
(	O
fp	pointer
)	O
;	O
if	O
(	O
0	int
<=	O
fd	array
&&	O
fd	array
<=	O
STDERR_FILENO	int
)	O
{	O
int	O
f	int
=	O
dup_safer	function
(	O
fd	array
)	O
;	O
if	O
(	O
f	int
<	O
0	int
)	O
{	O
int	O
e	int
=	O
errno	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
fclose	function
(	O
fp	pointer
)	O
!=	O
0	int
||	O
!	O
(	O
fp	pointer
=	O
fdopen	function
(	O
f	int
,	O
mode	pointer
)	O
)	O
)	O
{	O
int	O
e	int
=	O
errno	O
;	O
close	pointer
(	O
f	int
)	O
;	O
errno	O
=	O
e	int
;	O
return	O
NULL	O
;	O
}	O
}	O
}	O
return	O
fp	pointer
;	O
}	O
