extern	O
void	O
herror	function
(	O
const	O
char	O
*	O
pfx	pointer
)	O
;	O
int	O
set_address	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
char	O
*	O
address	pointer
)	O
{	O
char	O
*	O
addr	pointer
;	O
struct	O
hostent	struct
*	O
host	pointer
=	O
gethostbyname	function
(	O
address	pointer
)	O
;	O
if	O
(	O
!	O
host	pointer
)	O
{	O
error	function
(	O
0	int
,	O
0	int
,	O
"cannot resolve `%s': %s"	pointer
,	O
address	pointer
,	O
hstrerror	function
(	O
h_errno	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
host	pointer
->	O
h_addrtype	int
!=	O
AF_INET	O
)	O
{	O
error	function
(	O
0	int
,	O
0	int
,	O
"`%s' refers to an unknown address type"	pointer
,	O
address	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
addr	pointer
=	O
inet_ntoa	function
(	O
*	O
(	O
(	O
struct	O
in_addr	struct
*	O
)	O
host	pointer
->	O
h_addr	O
)	O
)	O
;	O
{	O
SIOCSIF	O
(	O
ADDR	O
,	O
addr	pointer
)	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set interface address of `%s' to %s.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
inet_ntoa	function
(	O
sin	pointer
->	O
sin_addr	struct
)	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
set_netmask	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
char	O
*	O
netmask	pointer
)	O
{	O
SIOCSIF	O
(	O
NETMASK	O
,	O
netmask	pointer
)	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set interface netmask of `%s' to %s.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
inet_ntoa	function
(	O
sin	pointer
->	O
sin_addr	struct
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
set_dstaddr	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
char	O
*	O
dstaddr	pointer
)	O
{	O
SIOCSIF	O
(	O
DSTADDR	O
,	O
dstaddr	pointer
)	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set interface peer address of `%s' to %s.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
inet_ntoa	function
(	O
sin	pointer
->	O
sin_addr	struct
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
set_brdaddr	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
char	O
*	O
brdaddr	pointer
)	O
{	O
SIOCSIF	O
(	O
BRDADDR	O
,	O
brdaddr	pointer
)	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set interface broadcast address of `%s' to %s.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
inet_ntoa	function
(	O
sin	pointer
->	O
sin_addr	struct
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
set_mtu	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
int	O
mtu	int
)	O
{	O
int	O
err	int
=	O
0	int
;	O
ifr	pointer
->	O
ifr_mtu	O
=	O
mtu	int
;	O
err	int
=	O
ioctl	function
(	O
sfd	int
,	O
SIOCSIFMTU	int
,	O
ifr	pointer
)	O
;	O
if	O
(	O
err	int
<	O
0	int
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
"SIOCSIFMTU failed"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set mtu value of `%s' to `%i'.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
ifr	pointer
->	O
ifr_mtu	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
set_metric	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
int	O
metric	int
)	O
{	O
int	O
err	int
=	O
0	int
;	O
ifr	pointer
->	O
ifr_metric	O
=	O
metric	int
;	O
err	int
=	O
ioctl	function
(	O
sfd	int
,	O
SIOCSIFMETRIC	int
,	O
ifr	pointer
)	O
;	O
if	O
(	O
err	int
<	O
0	int
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
"SIOCSIFMETRIC failed"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
verbose	int
)	O
printf	function
(	O
"Set metric value of `%s' to `%i'.\n"	pointer
,	O
ifr	pointer
->	O
ifr_name	O
,	O
ifr	pointer
->	O
ifr_metric	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
set_flags	function
(	O
int	O
sfd	int
,	O
struct	O
ifreq	struct
*	O
ifr	pointer
,	O
int	O
setflags	int
,	O
int	O
clrflags	int
)	O
{	O
struct	O
ifreq	struct
tifr	struct
=	O
*	O
ifr	pointer
;	O
if	O
(	O
ioctl	function
(	O
sfd	int
,	O
SIOCGIFFLAGS	int
,	O
&	O
tifr	struct
)	O
<	O
0	int
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
"SIOCGIFFLAGS failed"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
ifr	pointer
->	O
ifr_flags	O
=	O
(	O
tifr	struct
.	O
ifr_flags	O
|	O
setflags	int
)	O
&	O
~	O
clrflags	int
;	O
if	O
(	O
ioctl	function
(	O
sfd	int
,	O
SIOCSIFFLAGS	int
,	O
ifr	pointer
)	O
<	O
0	int
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
"SIOCSIFFLAGS failed"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
int	O
configure_if	function
(	O
int	O
sfd	int
,	O
struct	O
ifconfig	struct
*	O
ifp	pointer
)	O
{	O
int	O
err	int
=	O
0	int
;	O
struct	O
ifreq	struct
ifr	pointer
;	O
memset	function
(	O
&	O
ifr	pointer
,	O
0	int
,	O
sizeof	O
(	O
ifr	pointer
)	O
)	O
;	O
strncpy	function
(	O
ifr	pointer
.	O
ifr_name	O
,	O
ifp	pointer
->	O
name	pointer
,	O
IFNAMSIZ	O
)	O
;	O
ifr	pointer
.	O
ifr_name	O
[	O
IFNAMSIZ	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_ADDR	int
)	O
err	int
=	O
set_address	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
address	pointer
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_NETMASK	int
)	O
err	int
=	O
set_netmask	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
netmask	pointer
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_DSTADDR	int
)	O
err	int
=	O
set_dstaddr	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
dstaddr	pointer
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_BRDADDR	int
)	O
err	int
=	O
set_brdaddr	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
brdaddr	pointer
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_MTU	int
)	O
err	int
=	O
set_mtu	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
mtu	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_METRIC	int
)	O
err	int
=	O
set_metric	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
metric	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_SYSTEM	int
)	O
err	int
=	O
system_configure	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
system	pointer
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
(	O
ifp	pointer
->	O
setflags	int
||	O
ifp	pointer
->	O
clrflags	int
)	O
)	O
err	int
=	O
set_flags	function
(	O
sfd	int
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
setflags	int
,	O
ifp	pointer
->	O
clrflags	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
ifp	pointer
->	O
valid	int
&	O
IF_VALID_FORMAT	int
)	O
print_interface	function
(	O
sfd	int
,	O
ifp	pointer
->	O
name	pointer
,	O
&	O
ifr	pointer
,	O
ifp	pointer
->	O
format	pointer
)	O
;	O
return	O
err	int
;	O
}	O
