typedef	O
struct	O
Arg_t	struct
{	O
MainParam_t	struct
mp	pointer
;	O
off_t	long
offset	long
;	O
}	O
Arg_t	struct
;	O
static	O
int	O
dos_showfat	function
(	O
direntry_t	struct
*	O
entry	int
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
{	O
Stream_t	struct
*	O
File	pointer
=	O
mp	pointer
->	O
File	pointer
;	O
Arg_t	struct
*	O
arg	pointer
=	O
(	O
Arg_t	struct
*	O
)	O
mp	pointer
->	O
arg	pointer
;	O
fprintPwd	function
(	O
stdout	pointer
,	O
entry	int
,	O
0	int
)	O
;	O
putchar	function
(	O
' '	O
)	O
;	O
if	O
(	O
arg	pointer
->	O
offset	long
==	O
-	O
1	int
)	O
{	O
printFat	function
(	O
File	pointer
)	O
;	O
}	O
else	O
{	O
printFatWithOffset	function
(	O
File	pointer
,	O
arg	pointer
->	O
offset	long
)	O
;	O
}	O
printf	function
(	O
"\n"	pointer
)	O
;	O
return	O
GOT_ONE	int
;	O
}	O
static	O
int	O
unix_showfat	function
(	O
MainParam_t	struct
*	O
mp	pointer
UNUSEDP	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"File does not reside on a Dos fs\n"	pointer
)	O
;	O
return	O
ERROR_ONE	int
;	O
}	O
static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
NORETURN	O
;	O
static	O
void	O
usage	function
(	O
int	O
ret	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Mtools version %s, dated %s\n"	pointer
,	O
mversion	pointer
,	O
mdate	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s files\n"	pointer
,	O
progname	pointer
)	O
;	O
exit	function
(	O
ret	int
)	O
;	O
}	O
void	O
mshowfat	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
mtype	int
UNUSEDP	O
)	O
NORETURN	O
;	O
void	O
mshowfat	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
int	O
mtype	int
UNUSEDP	O
)	O
{	O
Arg_t	struct
arg	pointer
;	O
int	O
c	char
,	O
ret	int
;	O
if	O
(	O
helpFlag	function
(	O
argc	int
,	O
argv	pointer
)	O
)	O
usage	function
(	O
0	int
)	O
;	O
arg	pointer
.	O
offset	long
=	O
-	O
1	int
;	O
while	O
(	O
(	O
c	char
=	O
getopt	function
(	O
argc	int
,	O
argv	pointer
,	O
"i:ho:"	pointer
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
c	char
)	O
{	O
case	O
'o'	O
:	O
arg	pointer
.	O
offset	long
=	O
str_to_offset	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'i'	O
:	O
set_cmd_line_image	function
(	O
optarg	pointer
)	O
;	O
break	O
;	O
case	O
'h'	O
:	O
usage	function
(	O
0	int
)	O
;	O
case	O
'?'	O
:	O
usage	function
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
argc	int
-	O
optind	int
<	O
1	int
)	O
usage	function
(	O
1	int
)	O
;	O
init_mp	function
(	O
&	O
arg	pointer
.	O
mp	pointer
)	O
;	O
arg	pointer
.	O
mp	pointer
.	O
arg	pointer
=	O
(	O
void	O
*	O
)	O
&	O
arg	pointer
;	O
arg	pointer
.	O
mp	pointer
.	O
callback	pointer
=	O
dos_showfat	function
;	O
arg	pointer
.	O
mp	pointer
.	O
unixcallback	pointer
=	O
unix_showfat	function
;	O
arg	pointer
.	O
mp	pointer
.	O
lookupflags	int
=	O
ACCEPT_PLAIN	int
|	O
ACCEPT_DIR	int
|	O
DO_OPEN	int
;	O
ret	int
=	O
main_loop	function
(	O
&	O
arg	pointer
.	O
mp	pointer
,	O
argv	pointer
+	O
optind	int
,	O
argc	int
-	O
optind	int
)	O
;	O
exit	function
(	O
ret	int
)	O
;	O
}	O
