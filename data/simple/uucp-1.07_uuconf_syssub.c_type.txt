const	O
char	O
_uuconf_syssub_rcsid	array
[	O
]	O
=	O
"$Id: syssub.c,v 1.17 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
void	O
_uuconf_uclear_system	function
(	O
q	pointer
)	O
struct	O
uuconf_system	struct
*	O
q	pointer
;	O
{	O
SYSTEM_STRINGS	O
(	O
CLEAR	O
)	O
;	O
SYSTEM_STRING_ARRAYS	O
(	O
CLEAR	O
)	O
;	O
SYSTEM_TIMESPANS	O
(	O
CLEAR	O
)	O
;	O
SYSTEM_BOOLEANS	O
(	O
CLEAR	O
)	O
;	O
SYSTEM_INTEGERS	O
(	O
CLEAR	O
)	O
;	O
q	pointer
->	O
uuconf_qalternate	pointer
=	O
NULL	O
;	O
q	pointer
->	O
uuconf_zport	pointer
=	O
(	O
char	O
*	O
)	O
&	O
_uuconf_unset	pointer
;	O
q	pointer
->	O
uuconf_qport	pointer
=	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
&	O
_uuconf_unset	pointer
;	O
q	pointer
->	O
uuconf_qproto_params	pointer
=	O
(	O
struct	O
uuconf_proto_param	struct
*	O
)	O
&	O
_uuconf_unset	pointer
;	O
q	pointer
->	O
uuconf_palloc	pointer
=	O
NULL	O
;	O
}	O
int	O
_uuconf_isystem_default	function
(	O
qglobal	pointer
,	O
qset	pointer
,	O
qdefault	pointer
,	O
faddalternates	int
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
struct	O
uuconf_system	struct
*	O
qset	pointer
;	O
struct	O
uuconf_system	struct
*	O
qdefault	pointer
;	O
boolean	int
faddalternates	int
;	O
{	O
struct	O
uuconf_system	struct
*	O
qalt	pointer
;	O
if	O
(	O
qset	pointer
->	O
uuconf_palloc	pointer
!=	O
qdefault	pointer
->	O
uuconf_palloc	pointer
)	O
qset	pointer
->	O
uuconf_palloc	pointer
=	O
_uuconf_pmalloc_block_merge	function
(	O
qset	pointer
->	O
uuconf_palloc	pointer
,	O
qdefault	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
faddalternates	int
)	O
{	O
struct	O
uuconf_system	struct
*	O
*	O
pq	pointer
,	O
*	O
qdef	pointer
;	O
for	O
(	O
qdef	pointer
=	O
qdefault	pointer
,	O
pq	pointer
=	O
&	O
qset	pointer
;	O
qdef	pointer
!=	O
NULL	O
;	O
qdef	pointer
=	O
qdef	pointer
->	O
uuconf_qalternate	pointer
,	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qalternate	pointer
)	O
{	O
if	O
(	O
*	O
pq	pointer
==	O
NULL	O
)	O
{	O
*	O
pq	pointer
=	O
(	O
(	O
struct	O
uuconf_system	struct
*	O
)	O
uuconf_malloc	function
(	O
qset	pointer
->	O
uuconf_palloc	pointer
,	O
sizeof	O
(	O
struct	O
uuconf_system	struct
)	O
)	O
)	O
;	O
if	O
(	O
*	O
pq	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
*	O
*	O
pq	pointer
=	O
*	O
qset	pointer
;	O
(	O
*	O
pq	pointer
)	O
->	O
uuconf_qalternate	pointer
=	O
NULL	O
;	O
}	O
}	O
}	O
for	O
(	O
qalt	pointer
=	O
qset	pointer
;	O
qalt	pointer
!=	O
NULL	O
;	O
qalt	pointer
=	O
qalt	pointer
->	O
uuconf_qalternate	pointer
)	O
{	O
SYSTEM_STRINGS	O
(	O
DEFAULT	O
)	O
;	O
SYSTEM_STRING_ARRAYS	O
(	O
DEFAULT	O
)	O
;	O
SYSTEM_TIMESPANS	O
(	O
DEFAULT	O
)	O
;	O
SYSTEM_BOOLEANS	O
(	O
DEFAULT	O
)	O
;	O
SYSTEM_INTEGERS	O
(	O
DEFAULT	O
)	O
;	O
if	O
(	O
qalt	pointer
->	O
uuconf_zport	pointer
==	O
(	O
char	O
*	O
)	O
&	O
_uuconf_unset	pointer
&&	O
qalt	pointer
->	O
uuconf_qport	pointer
==	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
qalt	pointer
->	O
uuconf_zport	pointer
=	O
qdefault	pointer
->	O
uuconf_zport	pointer
;	O
if	O
(	O
qalt	pointer
->	O
uuconf_qport	pointer
==	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
qalt	pointer
->	O
uuconf_qport	pointer
=	O
qdefault	pointer
->	O
uuconf_qport	pointer
;	O
if	O
(	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
==	O
(	O
struct	O
uuconf_proto_param	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
=	O
qdefault	pointer
->	O
uuconf_qproto_params	pointer
;	O
else	O
if	O
(	O
qdefault	pointer
->	O
uuconf_qproto_params	pointer
!=	O
NULL	O
)	O
{	O
int	O
cnew	int
,	O
ca	int
;	O
struct	O
uuconf_proto_param	struct
*	O
qd	pointer
,	O
*	O
qa	pointer
;	O
ca	int
=	O
0	int
;	O
cnew	int
=	O
0	int
;	O
for	O
(	O
qd	pointer
=	O
qdefault	pointer
->	O
uuconf_qproto_params	pointer
;	O
qd	pointer
->	O
uuconf_bproto	int
!=	O
'\0'	O
;	O
qd	pointer
++	O
)	O
{	O
int	O
c	int
;	O
c	int
=	O
0	int
;	O
for	O
(	O
qa	pointer
=	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
;	O
(	O
qa	pointer
->	O
uuconf_bproto	int
!=	O
'\0'	O
&&	O
qa	pointer
->	O
uuconf_bproto	int
!=	O
qd	pointer
->	O
uuconf_bproto	int
)	O
;	O
qa	pointer
++	O
)	O
++	O
c	int
;	O
if	O
(	O
qa	pointer
->	O
uuconf_bproto	int
==	O
'\0'	O
)	O
{	O
++	O
cnew	int
;	O
ca	int
=	O
c	int
;	O
}	O
}	O
if	O
(	O
cnew	int
>	O
0	int
)	O
{	O
struct	O
uuconf_proto_param	struct
*	O
qnew	pointer
;	O
qnew	pointer
=	O
(	O
(	O
struct	O
uuconf_proto_param	struct
*	O
)	O
uuconf_malloc	function
(	O
qset	pointer
->	O
uuconf_palloc	pointer
,	O
(	O
(	O
ca	int
+	O
cnew	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
struct	O
uuconf_proto_param	struct
)	O
)	O
)	O
)	O
;	O
if	O
(	O
qnew	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
qnew	pointer
,	O
(	O
pointer	pointer
)	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
,	O
ca	int
*	O
sizeof	O
(	O
struct	O
uuconf_proto_param	struct
)	O
)	O
;	O
cnew	int
=	O
0	int
;	O
for	O
(	O
qd	pointer
=	O
qdefault	pointer
->	O
uuconf_qproto_params	pointer
;	O
qd	pointer
->	O
uuconf_bproto	int
!=	O
'\0'	O
;	O
qd	pointer
++	O
)	O
{	O
for	O
(	O
qa	pointer
=	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
;	O
(	O
qa	pointer
->	O
uuconf_bproto	int
!=	O
'\0'	O
&&	O
qa	pointer
->	O
uuconf_bproto	int
!=	O
qd	pointer
->	O
uuconf_bproto	int
)	O
;	O
qa	pointer
++	O
)	O
;	O
if	O
(	O
qa	pointer
->	O
uuconf_bproto	int
==	O
'\0'	O
)	O
{	O
qnew	pointer
[	O
ca	int
+	O
cnew	int
]	O
=	O
*	O
qd	pointer
;	O
++	O
cnew	int
;	O
}	O
}	O
qnew	pointer
[	O
ca	int
+	O
cnew	int
]	O
.	O
uuconf_bproto	int
=	O
'\0'	O
;	O
uuconf_free	function
(	O
qset	pointer
->	O
uuconf_palloc	pointer
,	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
)	O
;	O
qalt	pointer
->	O
uuconf_qproto_params	pointer
=	O
qnew	pointer
;	O
}	O
}	O
if	O
(	O
qdefault	pointer
->	O
uuconf_qalternate	pointer
!=	O
NULL	O
)	O
qdefault	pointer
=	O
qdefault	pointer
->	O
uuconf_qalternate	pointer
;	O
}	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
int	O
_uuconf_isystem_basic_default	function
(	O
qglobal	pointer
,	O
q	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
register	O
struct	O
uuconf_system	struct
*	O
q	pointer
;	O
{	O
int	O
iret	int
;	O
iret	int
=	O
UUCONF_SUCCESS	O
;	O
for	O
(	O
;	O
q	pointer
!=	O
NULL	O
&&	O
iret	int
==	O
UUCONF_SUCCESS	O
;	O
q	pointer
=	O
q	pointer
->	O
uuconf_qalternate	pointer
)	O
{	O
if	O
(	O
q	pointer
->	O
uuconf_cmax_retries	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_cmax_retries	int
=	O
26	int
;	O
if	O
(	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"\"\""	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"\\r\\c"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"ogin:"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"-BREAK"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"-ogin:"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"-BREAK"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"-ogin:"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"\\L"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"word:"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"\\P"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_pzchat	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_ctimeout	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_ctimeout	int
=	O
10	int
;	O
if	O
(	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_fstrip	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_schat	struct
.	O
uuconf_fstrip	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_scalled_chat	struct
.	O
uuconf_ctimeout	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_scalled_chat	struct
.	O
uuconf_ctimeout	int
=	O
60	int
;	O
if	O
(	O
q	pointer
->	O
uuconf_scalled_chat	struct
.	O
uuconf_fstrip	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_scalled_chat	struct
.	O
uuconf_fstrip	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_fsend_request	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_fsend_request	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_frec_request	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_frec_request	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_fcall_transfer	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_fcall_transfer	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_fcalled_transfer	int
<	O
0	int
)	O
q	pointer
->	O
uuconf_fcalled_transfer	int
=	O
TRUE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_pzlocal_send	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_pzlocal_send	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
ZROOTDIR	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_pzlocal_send	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_pzremote_send	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_pzremote_send	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"~"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_pzremote_send	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_pzlocal_receive	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_pzlocal_receive	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"~"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_pzlocal_receive	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_pzremote_receive	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_pzremote_receive	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
(	O
char	O
*	O
)	O
"~"	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
&	O
q	pointer
->	O
uuconf_pzremote_receive	pointer
,	O
q	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_pzpath	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
char	O
*	O
zdup	pointer
;	O
char	O
*	O
*	O
pz	pointer
;	O
size_t	long
csplit	pointer
;	O
int	O
c	int
;	O
zdup	pointer
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	function
(	O
q	pointer
->	O
uuconf_palloc	pointer
,	O
sizeof	O
CMDPATH	pointer
)	O
;	O
if	O
(	O
zdup	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zdup	pointer
,	O
(	O
pointer	pointer
)	O
CMDPATH	pointer
,	O
sizeof	O
CMDPATH	pointer
)	O
;	O
pz	pointer
=	O
NULL	O
;	O
csplit	pointer
=	O
0	int
;	O
if	O
(	O
(	O
c	int
=	O
_uuconf_istrsplit	function
(	O
zdup	pointer
,	O
'\0'	O
,	O
&	O
pz	pointer
,	O
&	O
csplit	pointer
)	O
)	O
<	O
0	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
q	pointer
->	O
uuconf_pzpath	pointer
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
q	pointer
->	O
uuconf_palloc	pointer
,	O
(	O
(	O
c	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
)	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_pzpath	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
q	pointer
->	O
uuconf_pzpath	pointer
,	O
(	O
pointer	pointer
)	O
pz	pointer
,	O
c	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
q	pointer
->	O
uuconf_pzpath	pointer
[	O
c	int
]	O
=	O
NULL	O
;	O
free	function
(	O
(	O
pointer	pointer
)	O
pz	pointer
)	O
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_pzcmds	pointer
==	O
(	O
char	O
*	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
{	O
q	pointer
->	O
uuconf_pzcmds	pointer
=	O
(	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
q	pointer
->	O
uuconf_palloc	pointer
,	O
3	int
*	O
sizeof	O
(	O
const	O
char	O
*	O
)	O
)	O
)	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_pzcmds	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
q	pointer
->	O
uuconf_pzcmds	pointer
[	O
0	int
]	O
=	O
(	O
char	O
*	O
)	O
"rnews"	pointer
;	O
q	pointer
->	O
uuconf_pzcmds	pointer
[	O
1	int
]	O
=	O
(	O
char	O
*	O
)	O
"rmail"	pointer
;	O
q	pointer
->	O
uuconf_pzcmds	pointer
[	O
2	int
]	O
=	O
NULL	O
;	O
}	O
if	O
(	O
q	pointer
->	O
uuconf_cfree_space	long
<	O
0	int
)	O
q	pointer
->	O
uuconf_cfree_space	long
=	O
DEFAULT_FREE_SPACE	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_zpubdir	pointer
==	O
(	O
const	O
char	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
q	pointer
->	O
uuconf_zpubdir	pointer
=	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zpubdir	pointer
;	O
SYSTEM_STRINGS	O
(	O
SET	O
)	O
;	O
SYSTEM_STRING_ARRAYS	O
(	O
SET	O
)	O
;	O
SYSTEM_TIMESPANS	O
(	O
SET	O
)	O
;	O
SYSTEM_BOOLEANS	O
(	O
SET	O
)	O
;	O
SYSTEM_INTEGERS	O
(	O
SET	O
)	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_zport	pointer
==	O
(	O
char	O
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
q	pointer
->	O
uuconf_zport	pointer
=	O
NULL	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_qport	pointer
==	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
q	pointer
->	O
uuconf_qport	pointer
=	O
NULL	O
;	O
if	O
(	O
q	pointer
->	O
uuconf_qproto_params	pointer
==	O
(	O
struct	O
uuconf_proto_param	struct
*	O
)	O
&	O
_uuconf_unset	pointer
)	O
q	pointer
->	O
uuconf_qproto_params	pointer
=	O
NULL	O
;	O
}	O
return	O
iret	int
;	O
}	O
