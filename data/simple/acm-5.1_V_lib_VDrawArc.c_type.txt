void	O
VDrawArc	function
(	O
Viewport	struct
*	O
v	struct
,	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
width	int
,	O
int	O
height	int
,	O
int	O
angle1	short
,	O
int	O
angle2	short
,	O
Color	short
color	pointer
)	O
{	O
register	O
ZInfo	struct
*	O
z	double
;	O
register	O
double	O
w	pointer
,	O
h	int
,	O
xc	double
,	O
yc	double
;	O
register	O
int	O
incr	int
,	O
x1	short
,	O
x2	short
,	O
y1	function
,	O
y2	short
;	O
if	O
(	O
v	struct
->	O
ztop	long
==	O
v	struct
->	O
zsize	long
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Z-information pool overflow\n"	pointer
)	O
;	O
return	O
;	O
}	O
z	double
=	O
&	O
(	O
v	struct
->	O
zpool	pointer
[	O
(	O
v	struct
->	O
ztop	long
)	O
++	O
]	O
)	O
;	O
z	double
->	O
depth	int
=	O
--	O
v	struct
->	O
depth	int
;	O
z	double
->	O
color	pointer
=	O
color	pointer
;	O
w	pointer
=	O
width	int
/	O
2.0	int
;	O
h	int
=	O
height	int
/	O
2.0	int
;	O
xc	double
=	O
x	double
+	O
width	int
/	O
2.0	int
;	O
yc	double
=	O
y	double
+	O
height	int
/	O
2.0	int
;	O
if	O
(	O
angle2	short
<	O
0	int
)	O
{	O
incr	int
=	O
-	O
INCR	O
;	O
angle2	short
=	O
-	O
angle2	short
;	O
}	O
else	O
incr	int
=	O
INCR	O
;	O
if	O
(	O
angle2	short
>	O
360	int
*	O
64	int
)	O
angle2	short
=	O
360	int
*	O
64	int
;	O
x1	short
=	O
(	O
int	O
)	O
(	O
xc	double
+	O
(	O
w	pointer
*	O
cos	function
(	O
TICKtoRAD	O
(	O
angle1	short
)	O
)	O
)	O
)	O
;	O
y1	function
=	O
(	O
int	O
)	O
(	O
yc	double
-	O
(	O
h	int
*	O
sin	function
(	O
TICKtoRAD	O
(	O
angle1	short
)	O
)	O
)	O
)	O
;	O
while	O
(	O
angle2	short
!=	O
0	int
)	O
{	O
angle1	short
+=	O
incr	int
;	O
angle2	short
-=	O
INCR	O
;	O
if	O
(	O
angle2	short
<	O
0	int
)	O
{	O
angle1	short
-=	O
angle2	short
;	O
angle2	short
=	O
0	int
;	O
}	O
x2	short
=	O
(	O
int	O
)	O
(	O
xc	double
+	O
(	O
w	pointer
*	O
cos	function
(	O
TICKtoRAD	O
(	O
angle1	short
)	O
)	O
)	O
)	O
;	O
y2	short
=	O
(	O
int	O
)	O
(	O
yc	double
-	O
(	O
h	int
*	O
sin	function
(	O
TICKtoRAD	O
(	O
angle1	short
)	O
)	O
)	O
)	O
;	O
v	struct
->	O
DrawLine	function
(	O
v	struct
,	O
x1	short
,	O
y1	function
,	O
x2	short
,	O
y2	short
,	O
z	double
->	O
color	pointer
)	O
;	O
x1	short
=	O
x2	short
;	O
y1	function
=	O
y2	short
;	O
}	O
}	O
