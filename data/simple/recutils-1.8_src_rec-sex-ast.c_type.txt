struct	O
rec_sex_ast_node_s	struct
{	O
enum	O
rec_sex_ast_node_type_e	enum
type	enum
;	O
union	O
{	O
int	O
integer	int
;	O
double	O
real	double
;	O
char	O
*	O
string	pointer
;	O
char	O
*	O
name	pointer
[	O
2	int
]	O
;	O
}	O
val	pointer
;	O
int	O
index	function
;	O
bool	bool
fixed	bool
;	O
char	O
*	O
fixed_val	pointer
;	O
rec_sex_ast_node_t	pointer
children	array
[	O
REC_SEX_AST_MAX_CHILDREN	int
]	O
;	O
size_t	long
num_children	long
;	O
}	O
;	O
struct	O
rec_sex_ast_s	struct
{	O
rec_sex_ast_node_t	pointer
top	pointer
;	O
}	O
;	O
rec_sex_ast_t	pointer
rec_sex_ast_new	function
(	O
)	O
{	O
rec_sex_ast_t	pointer
new	pointer
;	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
rec_sex_ast_s	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
{	O
new	pointer
->	O
top	pointer
=	O
NULL	O
;	O
}	O
return	O
new	pointer
;	O
}	O
void	O
rec_sex_ast_destroy	function
(	O
rec_sex_ast_t	pointer
ast	pointer
)	O
{	O
if	O
(	O
ast	pointer
->	O
top	pointer
)	O
{	O
rec_sex_ast_node_destroy	function
(	O
ast	pointer
->	O
top	pointer
)	O
;	O
}	O
free	function
(	O
ast	pointer
)	O
;	O
}	O
rec_sex_ast_node_t	pointer
rec_sex_ast_node_new	function
(	O
void	O
)	O
{	O
rec_sex_ast_node_t	pointer
new	pointer
;	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
rec_sex_ast_node_s	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
{	O
new	pointer
->	O
type	enum
=	O
REC_SEX_NOVAL	int
;	O
new	pointer
->	O
num_children	long
=	O
0	int
;	O
new	pointer
->	O
index	function
=	O
-	O
1	int
;	O
new	pointer
->	O
fixed	bool
=	O
false	int
;	O
new	pointer
->	O
fixed_val	pointer
=	O
NULL	O
;	O
}	O
return	O
new	pointer
;	O
}	O
void	O
rec_sex_ast_node_destroy	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
{	O
rec_sex_ast_node_destroy	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
)	O
;	O
}	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_STR	int
)	O
{	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
string	pointer
)	O
;	O
}	O
else	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_NAME	int
)	O
{	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
)	O
;	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
1	int
]	O
)	O
;	O
}	O
free	function
(	O
node	pointer
->	O
fixed_val	pointer
)	O
;	O
free	function
(	O
node	pointer
)	O
;	O
}	O
enum	O
rec_sex_ast_node_type_e	enum
rec_sex_ast_node_type	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
type	enum
;	O
}	O
void	O
rec_sex_ast_node_set_type	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
enum	O
rec_sex_ast_node_type_e	enum
type	enum
)	O
{	O
node	pointer
->	O
type	enum
=	O
type	enum
;	O
}	O
int	O
rec_sex_ast_node_int	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
val	pointer
.	O
integer	int
;	O
}	O
void	O
rec_sex_ast_node_set_int	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
int	O
num	int
)	O
{	O
node	pointer
->	O
type	enum
=	O
REC_SEX_INT	int
;	O
node	pointer
->	O
val	pointer
.	O
integer	int
=	O
num	int
;	O
}	O
double	O
rec_sex_ast_node_real	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
val	pointer
.	O
real	double
;	O
}	O
void	O
rec_sex_ast_node_set_real	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
double	O
num	int
)	O
{	O
node	pointer
->	O
type	enum
=	O
REC_SEX_REAL	int
;	O
node	pointer
->	O
val	pointer
.	O
real	double
=	O
num	int
;	O
}	O
char	O
*	O
rec_sex_ast_node_str	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
val	pointer
.	O
string	pointer
;	O
}	O
void	O
rec_sex_ast_node_set_str	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
char	O
*	O
str	pointer
)	O
{	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_STR	int
)	O
{	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
string	pointer
)	O
;	O
}	O
node	pointer
->	O
type	enum
=	O
REC_SEX_STR	int
;	O
node	pointer
->	O
val	pointer
.	O
string	pointer
=	O
strdup	function
(	O
str	pointer
)	O
;	O
}	O
const	O
char	O
*	O
rec_sex_ast_node_name	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
;	O
}	O
const	O
char	O
*	O
rec_sex_ast_node_subname	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
1	int
]	O
;	O
}	O
void	O
rec_sex_ast_node_set_name	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
const	O
char	O
*	O
subname	pointer
)	O
{	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_NAME	int
)	O
{	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
)	O
;	O
free	function
(	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
1	int
]	O
)	O
;	O
}	O
node	pointer
->	O
type	enum
=	O
REC_SEX_NAME	int
;	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
=	O
strdup	function
(	O
name	pointer
)	O
;	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
1	int
]	O
=	O
NULL	O
;	O
if	O
(	O
subname	pointer
)	O
{	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
1	int
]	O
=	O
strdup	function
(	O
subname	pointer
)	O
;	O
}	O
}	O
void	O
rec_sex_ast_node_link	function
(	O
rec_sex_ast_node_t	pointer
parent	pointer
,	O
rec_sex_ast_node_t	pointer
child	pointer
)	O
{	O
if	O
(	O
parent	pointer
->	O
num_children	long
<	O
REC_SEX_AST_MAX_CHILDREN	int
)	O
{	O
parent	pointer
->	O
children	array
[	O
parent	pointer
->	O
num_children	long
++	O
]	O
=	O
child	pointer
;	O
}	O
}	O
rec_sex_ast_node_t	pointer
rec_sex_ast_top	function
(	O
rec_sex_ast_t	pointer
ast	pointer
)	O
{	O
return	O
ast	pointer
->	O
top	pointer
;	O
}	O
void	O
rec_sex_ast_set_top	function
(	O
rec_sex_ast_t	pointer
ast	pointer
,	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
ast	pointer
->	O
top	pointer
=	O
node	pointer
;	O
}	O
void	O
rec_sex_ast_print_node	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
{	O
rec_sex_ast_print_node	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
)	O
;	O
}	O
printf	function
(	O
"------- node\n"	pointer
)	O
;	O
printf	function
(	O
"type: %d\n"	pointer
,	O
node	pointer
->	O
type	enum
)	O
;	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_INT	int
)	O
{	O
printf	function
(	O
"value: %d\n"	pointer
,	O
node	pointer
->	O
val	pointer
.	O
integer	int
)	O
;	O
}	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_NAME	int
)	O
{	O
printf	function
(	O
"value: %s\n"	pointer
,	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
)	O
;	O
}	O
if	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_STR	int
)	O
{	O
printf	function
(	O
"value: %s\n"	pointer
,	O
node	pointer
->	O
val	pointer
.	O
string	pointer
)	O
;	O
}	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
int	O
rec_sex_ast_node_num_children	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
num_children	long
;	O
}	O
rec_sex_ast_node_t	pointer
rec_sex_ast_node_child	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
int	O
n	int
)	O
{	O
rec_sex_ast_node_t	pointer
res	pointer
;	O
res	pointer
=	O
NULL	O
;	O
if	O
(	O
n	int
<	O
node	pointer
->	O
num_children	long
)	O
{	O
res	pointer
=	O
node	pointer
->	O
children	array
[	O
n	int
]	O
;	O
}	O
return	O
res	pointer
;	O
}	O
void	O
rec_sex_ast_node_reset	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
{	O
rec_sex_ast_node_reset	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
)	O
;	O
}	O
node	pointer
->	O
index	function
=	O
0	int
;	O
}	O
void	O
rec_sex_ast_node_fix	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
char	O
*	O
val	pointer
)	O
{	O
free	function
(	O
node	pointer
->	O
fixed_val	pointer
)	O
;	O
node	pointer
->	O
fixed	bool
=	O
true	int
;	O
node	pointer
->	O
fixed_val	pointer
=	O
strdup	function
(	O
val	pointer
)	O
;	O
}	O
void	O
rec_sex_ast_node_unfix	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
{	O
rec_sex_ast_node_unfix	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
)	O
;	O
}	O
node	pointer
->	O
fixed	bool
=	O
false	int
;	O
}	O
bool	bool
rec_sex_ast_node_fixed	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
fixed	bool
;	O
}	O
char	O
*	O
rec_sex_ast_node_fixed_val	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
fixed_val	pointer
;	O
}	O
int	O
rec_sex_ast_node_index	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
)	O
{	O
return	O
node	pointer
->	O
index	function
;	O
}	O
void	O
rec_sex_ast_node_set_index	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
int	O
index	function
)	O
{	O
node	pointer
->	O
index	function
=	O
index	function
;	O
}	O
void	O
rec_sex_ast_print	function
(	O
rec_sex_ast_t	pointer
ast	pointer
)	O
{	O
rec_sex_ast_print_node	function
(	O
ast	pointer
->	O
top	pointer
)	O
;	O
}	O
bool	bool
rec_sex_ast_name_p_1	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
size_t	long
idx	long
)	O
{	O
size_t	long
i	long
=	O
0	int
;	O
if	O
(	O
node	pointer
)	O
{	O
if	O
(	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_NAME	int
)	O
&&	O
(	O
(	O
node	pointer
->	O
index	function
==	O
-	O
1	int
)	O
||	O
(	O
node	pointer
->	O
index	function
<	O
idx	long
)	O
)	O
&&	O
(	O
strcmp	function
(	O
name	pointer
,	O
node	pointer
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
)	O
==	O
0	int
)	O
)	O
{	O
return	O
true	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
{	O
if	O
(	O
rec_sex_ast_name_p_1	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
,	O
name	pointer
,	O
idx	long
)	O
)	O
{	O
return	O
true	int
;	O
}	O
}	O
}	O
return	O
false	int
;	O
}	O
bool	bool
rec_sex_ast_name_p	function
(	O
rec_sex_ast_t	pointer
ast	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
size_t	long
idx	long
)	O
{	O
return	O
rec_sex_ast_name_p_1	function
(	O
ast	pointer
->	O
top	pointer
,	O
name	pointer
,	O
idx	long
)	O
;	O
}	O
static	O
bool	bool
rec_sex_ast_hash_name_p_1	function
(	O
rec_sex_ast_node_t	pointer
node	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
if	O
(	O
node	pointer
)	O
{	O
size_t	long
i	long
=	O
0	int
;	O
if	O
(	O
(	O
node	pointer
->	O
type	enum
==	O
REC_SEX_OP_SHA	int
)	O
&&	O
(	O
node	pointer
->	O
num_children	long
==	O
1	int
)	O
&&	O
(	O
node	pointer
->	O
children	array
[	O
0	int
]	O
->	O
type	enum
==	O
REC_SEX_NAME	int
)	O
&&	O
(	O
strcmp	function
(	O
name	pointer
,	O
node	pointer
->	O
children	array
[	O
0	int
]	O
->	O
val	pointer
.	O
name	pointer
[	O
0	int
]	O
)	O
==	O
0	int
)	O
)	O
return	O
true	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
node	pointer
->	O
num_children	long
;	O
i	long
++	O
)	O
if	O
(	O
rec_sex_ast_hash_name_p_1	function
(	O
node	pointer
->	O
children	array
[	O
i	long
]	O
,	O
name	pointer
)	O
)	O
return	O
true	int
;	O
}	O
return	O
false	int
;	O
}	O
bool	bool
rec_sex_ast_hash_name_p	function
(	O
rec_sex_ast_t	pointer
ast	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
return	O
rec_sex_ast_hash_name_p_1	function
(	O
ast	pointer
->	O
top	pointer
,	O
name	pointer
)	O
;	O
}	O
