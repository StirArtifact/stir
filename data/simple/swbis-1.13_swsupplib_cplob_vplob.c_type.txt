VPLOB	union
*	O
vplob_open	function
(	O
void	O
)	O
{	O
return	O
(	O
VPLOB	union
*	O
)	O
(	O
cplob_open	function
(	O
3	int
)	O
)	O
;	O
}	O
void	O
vplob_close	function
(	O
VPLOB	union
*	O
vplob	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
free	function
(	O
cplob	pointer
->	O
list	pointer
)	O
;	O
free	function
(	O
cplob	pointer
)	O
;	O
}	O
void	O
vplob_shallow_close	function
(	O
VPLOB	union
*	O
vplob	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
free	function
(	O
cplob	pointer
)	O
;	O
}	O
void	O
vplob_add	function
(	O
VPLOB	union
*	O
vplob	pointer
,	O
void	O
*	O
addr	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
cplob_add_nta	function
(	O
cplob	pointer
,	O
addr	pointer
)	O
;	O
}	O
void	O
*	O
*	O
vplob_get_list	function
(	O
VPLOB	union
*	O
vplob	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
return	O
(	O
void	O
*	O
*	O
)	O
(	O
cplob	pointer
->	O
list	pointer
)	O
;	O
}	O
void	O
*	O
vplob_val	function
(	O
VPLOB	union
*	O
vplob	pointer
,	O
int	O
index	function
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
return	O
(	O
void	O
*	O
)	O
cplob_val	function
(	O
cplob	pointer
,	O
index	function
)	O
;	O
}	O
int	O
vplob_get_nstore	function
(	O
VPLOB	union
*	O
vplob	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
int	O
i	int
;	O
int	O
ret	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cplob	pointer
->	O
nused	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
*	O
(	O
cplob	pointer
->	O
list	pointer
+	O
(	O
i	int
)	O
)	O
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
{	O
ret	int
++	O
;	O
}	O
}	O
return	O
ret	int
;	O
}	O
int	O
vplob_delete_store	function
(	O
VPLOB	union
*	O
vplob	pointer
,	O
void	O
(	O
*	O
f_delete	pointer
)	O
(	O
void	O
*	O
)	O
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
void	O
*	O
addr	pointer
;	O
int	O
i	int
;	O
int	O
n	int
=	O
vplob_get_nstore	function
(	O
vplob	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
addr	pointer
=	O
*	O
(	O
cplob	pointer
->	O
list	pointer
+	O
(	O
i	int
)	O
)	O
;	O
if	O
(	O
addr	pointer
!=	O
(	O
void	O
*	O
)	O
NULL	O
)	O
{	O
(	O
*	O
f_delete	pointer
)	O
(	O
addr	pointer
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
int	O
vplob_remove_from_list	function
(	O
VPLOB	union
*	O
vplob	pointer
,	O
void	O
*	O
addr_to_remove	pointer
)	O
{	O
CPLOB	struct
*	O
cplob	pointer
=	O
(	O
CPLOB	struct
*	O
)	O
vplob	pointer
;	O
int	O
i	int
;	O
int	O
n	int
;	O
void	O
*	O
addr	pointer
;	O
n	int
=	O
vplob_get_nstore	function
(	O
vplob	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	int
;	O
i	int
++	O
)	O
{	O
addr	pointer
=	O
*	O
(	O
cplob	pointer
->	O
list	pointer
+	O
(	O
i	int
)	O
)	O
;	O
if	O
(	O
addr	pointer
==	O
addr_to_remove	pointer
)	O
{	O
cplob_remove_index	function
(	O
cplob	pointer
,	O
i	int
)	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
