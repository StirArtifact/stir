static	O
gl_tls_key_t	union
buffer_key	union
;	O
static	O
gl_tls_key_t	union
bufmax_key	union
;	O
static	O
void	O
keys_init	function
(	O
void	O
)	O
{	O
gl_tls_key_init	O
(	O
buffer_key	union
,	O
free	function
)	O
;	O
gl_tls_key_init	O
(	O
bufmax_key	union
,	O
NULL	O
)	O
;	O
}	O
gl_once_define	O
(	O
static	O
,	O
keys_init_once	int
)	O
double	O
fstrcmp_bounded	function
(	O
const	O
char	O
*	O
string1	pointer
,	O
const	O
char	O
*	O
string2	pointer
,	O
double	O
lower_bound	double
)	O
{	O
struct	O
context	struct
ctxt	pointer
;	O
int	O
xvec_length	int
=	O
strlen	function
(	O
string1	pointer
)	O
;	O
int	O
yvec_length	int
=	O
strlen	function
(	O
string2	pointer
)	O
;	O
int	O
i	int
;	O
size_t	long
fdiag_len	long
;	O
int	O
*	O
buffer	pointer
;	O
size_t	long
bufmax	long
;	O
if	O
(	O
xvec_length	int
==	O
0	int
||	O
yvec_length	int
==	O
0	int
)	O
return	O
(	O
xvec_length	int
==	O
0	int
&&	O
yvec_length	int
==	O
0	int
?	O
1.0	int
:	O
0.0	int
)	O
;	O
if	O
(	O
lower_bound	double
>	O
0	int
)	O
{	O
volatile	O
double	O
upper_bound	double
=	O
(	O
double	O
)	O
(	O
2	int
*	O
MIN	O
(	O
xvec_length	int
,	O
yvec_length	int
)	O
)	O
/	O
(	O
xvec_length	int
+	O
yvec_length	int
)	O
;	O
if	O
(	O
upper_bound	double
<	O
lower_bound	double
)	O
return	O
0.0	int
;	O
if	O
(	O
xvec_length	int
+	O
yvec_length	int
>=	O
20	int
)	O
{	O
int	O
occ_diff	array
[	O
UCHAR_MAX	O
+	O
1	int
]	O
;	O
int	O
sum	int
;	O
memset	function
(	O
occ_diff	array
,	O
0	int
,	O
sizeof	O
(	O
occ_diff	array
)	O
)	O
;	O
for	O
(	O
i	int
=	O
xvec_length	int
-	O
1	int
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
occ_diff	array
[	O
(	O
unsigned	O
char	O
)	O
string1	pointer
[	O
i	int
]	O
]	O
++	O
;	O
for	O
(	O
i	int
=	O
yvec_length	int
-	O
1	int
;	O
i	int
>=	O
0	int
;	O
i	int
--	O
)	O
occ_diff	array
[	O
(	O
unsigned	O
char	O
)	O
string2	pointer
[	O
i	int
]	O
]	O
--	O
;	O
sum	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
UCHAR_MAX	O
;	O
i	int
++	O
)	O
{	O
int	O
d	int
=	O
occ_diff	array
[	O
i	int
]	O
;	O
sum	int
+=	O
(	O
d	int
>=	O
0	int
?	O
d	int
:	O
-	O
d	int
)	O
;	O
}	O
upper_bound	double
=	O
1.0	int
-	O
(	O
double	O
)	O
sum	int
/	O
(	O
xvec_length	int
+	O
yvec_length	int
)	O
;	O
if	O
(	O
upper_bound	double
<	O
lower_bound	double
)	O
return	O
0.0	int
;	O
}	O
}	O
ctxt	pointer
.	O
xvec	pointer
=	O
string1	pointer
;	O
ctxt	pointer
.	O
yvec	pointer
=	O
string2	pointer
;	O
ctxt	pointer
.	O
too_expensive	int
=	O
1	int
;	O
for	O
(	O
i	int
=	O
xvec_length	int
+	O
yvec_length	int
;	O
i	int
!=	O
0	int
;	O
i	int
>>=	O
2	int
)	O
ctxt	pointer
.	O
too_expensive	int
<<=	O
1	int
;	O
if	O
(	O
ctxt	pointer
.	O
too_expensive	int
<	O
256	int
)	O
ctxt	pointer
.	O
too_expensive	int
=	O
256	int
;	O
fdiag_len	long
=	O
xvec_length	int
+	O
yvec_length	int
+	O
3	int
;	O
gl_once	O
(	O
keys_init_once	int
,	O
keys_init	function
)	O
;	O
buffer	pointer
=	O
(	O
int	O
*	O
)	O
gl_tls_get	O
(	O
buffer_key	union
)	O
;	O
bufmax	long
=	O
(	O
size_t	long
)	O
(	O
uintptr_t	O
)	O
gl_tls_get	O
(	O
bufmax_key	union
)	O
;	O
if	O
(	O
fdiag_len	long
>	O
bufmax	long
)	O
{	O
bufmax	long
=	O
2	int
*	O
bufmax	long
;	O
if	O
(	O
fdiag_len	long
>	O
bufmax	long
)	O
bufmax	long
=	O
fdiag_len	long
;	O
if	O
(	O
buffer	pointer
!=	O
NULL	O
)	O
free	function
(	O
buffer	pointer
)	O
;	O
buffer	pointer
=	O
(	O
int	O
*	O
)	O
xnmalloc	function
(	O
bufmax	long
,	O
2	int
*	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
gl_tls_set	O
(	O
buffer_key	union
,	O
buffer	pointer
)	O
;	O
gl_tls_set	O
(	O
bufmax_key	union
,	O
(	O
void	O
*	O
)	O
(	O
uintptr_t	O
)	O
bufmax	long
)	O
;	O
}	O
ctxt	pointer
.	O
fdiag	pointer
=	O
buffer	pointer
+	O
yvec_length	int
+	O
1	int
;	O
ctxt	pointer
.	O
bdiag	pointer
=	O
ctxt	pointer
.	O
fdiag	pointer
+	O
fdiag_len	long
;	O
ctxt	pointer
.	O
edit_count_limit	int
=	O
(	O
lower_bound	double
<	O
1.0	int
?	O
(	O
int	O
)	O
(	O
(	O
xvec_length	int
+	O
yvec_length	int
)	O
*	O
(	O
1.0	int
-	O
lower_bound	double
+	O
0.000001	int
)	O
)	O
:	O
0	int
)	O
;	O
ctxt	pointer
.	O
edit_count	int
=	O
-	O
ctxt	pointer
.	O
edit_count_limit	int
;	O
if	O
(	O
compareseq	function
(	O
0	int
,	O
xvec_length	int
,	O
0	int
,	O
yvec_length	int
,	O
0	int
,	O
&	O
ctxt	pointer
)	O
)	O
return	O
0.0	int
;	O
ctxt	pointer
.	O
edit_count	int
+=	O
ctxt	pointer
.	O
edit_count_limit	int
;	O
return	O
(	O
(	O
double	O
)	O
(	O
xvec_length	int
+	O
yvec_length	int
-	O
ctxt	pointer
.	O
edit_count	int
)	O
/	O
(	O
xvec_length	int
+	O
yvec_length	int
)	O
)	O
;	O
}	O
