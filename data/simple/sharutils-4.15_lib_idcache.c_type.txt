struct	O
userid	struct
{	O
union	O
{	O
uid_t	int
u	int
;	O
gid_t	int
g	int
;	O
}	O
id	union
;	O
struct	O
userid	struct
*	O
next	pointer
;	O
char	O
name	array
[	O
FLEXIBLE_ARRAY_MEMBER	O
]	O
;	O
}	O
;	O
static	O
struct	O
userid	struct
*	O
user_alist	pointer
;	O
static	O
struct	O
userid	struct
*	O
nouser_alist	pointer
;	O
static	O
struct	O
userid	struct
*	O
group_alist	pointer
;	O
static	O
struct	O
userid	struct
*	O
nogroup_alist	pointer
;	O
char	O
*	O
getuser	function
(	O
uid_t	int
uid	int
)	O
{	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
userid	struct
*	O
match	pointer
=	O
NULL	O
;	O
for	O
(	O
tail	pointer
=	O
user_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
tail	pointer
->	O
id	union
.	O
u	int
==	O
uid	int
)	O
{	O
match	pointer
=	O
tail	pointer
;	O
break	O
;	O
}	O
}	O
if	O
(	O
match	pointer
==	O
NULL	O
)	O
{	O
struct	O
passwd	struct
*	O
pwent	pointer
=	O
getpwuid	function
(	O
uid	int
)	O
;	O
char	O
const	O
*	O
name	array
=	O
pwent	pointer
?	O
pwent	pointer
->	O
pw_name	pointer
:	O
""	pointer
;	O
match	pointer
=	O
xmalloc	function
(	O
offsetof	O
(	O
struct	O
userid	struct
,	O
name	array
)	O
+	O
strlen	function
(	O
name	array
)	O
+	O
1	int
)	O
;	O
match	pointer
->	O
id	union
.	O
u	int
=	O
uid	int
;	O
strcpy	function
(	O
match	pointer
->	O
name	array
,	O
name	array
)	O
;	O
match	pointer
->	O
next	pointer
=	O
user_alist	pointer
;	O
user_alist	pointer
=	O
match	pointer
;	O
}	O
return	O
match	pointer
->	O
name	array
[	O
0	int
]	O
?	O
match	pointer
->	O
name	array
:	O
NULL	O
;	O
}	O
uid_t	int
*	O
getuidbyname	function
(	O
const	O
char	O
*	O
user	pointer
)	O
{	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
passwd	struct
*	O
pwent	pointer
;	O
for	O
(	O
tail	pointer
=	O
user_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	array
==	O
*	O
user	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	array
,	O
user	pointer
)	O
)	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
u	int
;	O
for	O
(	O
tail	pointer
=	O
nouser_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	array
==	O
*	O
user	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	array
,	O
user	pointer
)	O
)	O
return	O
NULL	O
;	O
pwent	pointer
=	O
getpwnam	function
(	O
user	pointer
)	O
;	O
tail	pointer
=	O
xmalloc	function
(	O
offsetof	O
(	O
struct	O
userid	struct
,	O
name	array
)	O
+	O
strlen	function
(	O
user	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
tail	pointer
->	O
name	array
,	O
user	pointer
)	O
;	O
if	O
(	O
pwent	pointer
)	O
{	O
tail	pointer
->	O
id	union
.	O
u	int
=	O
pwent	pointer
->	O
pw_uid	int
;	O
tail	pointer
->	O
next	pointer
=	O
user_alist	pointer
;	O
user_alist	pointer
=	O
tail	pointer
;	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
u	int
;	O
}	O
tail	pointer
->	O
next	pointer
=	O
nouser_alist	pointer
;	O
nouser_alist	pointer
=	O
tail	pointer
;	O
return	O
NULL	O
;	O
}	O
char	O
*	O
getgroup	function
(	O
gid_t	int
gid	int
)	O
{	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
userid	struct
*	O
match	pointer
=	O
NULL	O
;	O
for	O
(	O
tail	pointer
=	O
group_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
tail	pointer
->	O
id	union
.	O
g	int
==	O
gid	int
)	O
{	O
match	pointer
=	O
tail	pointer
;	O
break	O
;	O
}	O
}	O
if	O
(	O
match	pointer
==	O
NULL	O
)	O
{	O
struct	O
group	pointer
*	O
grent	pointer
=	O
getgrgid	function
(	O
gid	int
)	O
;	O
char	O
const	O
*	O
name	array
=	O
grent	pointer
?	O
grent	pointer
->	O
gr_name	pointer
:	O
""	pointer
;	O
match	pointer
=	O
xmalloc	function
(	O
offsetof	O
(	O
struct	O
userid	struct
,	O
name	array
)	O
+	O
strlen	function
(	O
name	array
)	O
+	O
1	int
)	O
;	O
match	pointer
->	O
id	union
.	O
g	int
=	O
gid	int
;	O
strcpy	function
(	O
match	pointer
->	O
name	array
,	O
name	array
)	O
;	O
match	pointer
->	O
next	pointer
=	O
group_alist	pointer
;	O
group_alist	pointer
=	O
match	pointer
;	O
}	O
return	O
match	pointer
->	O
name	array
[	O
0	int
]	O
?	O
match	pointer
->	O
name	array
:	O
NULL	O
;	O
}	O
gid_t	int
*	O
getgidbyname	function
(	O
const	O
char	O
*	O
group	pointer
)	O
{	O
struct	O
userid	struct
*	O
tail	pointer
;	O
struct	O
group	pointer
*	O
grent	pointer
;	O
for	O
(	O
tail	pointer
=	O
group_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	array
==	O
*	O
group	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	array
,	O
group	pointer
)	O
)	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
g	int
;	O
for	O
(	O
tail	pointer
=	O
nogroup_alist	pointer
;	O
tail	pointer
;	O
tail	pointer
=	O
tail	pointer
->	O
next	pointer
)	O
if	O
(	O
*	O
tail	pointer
->	O
name	array
==	O
*	O
group	pointer
&&	O
!	O
strcmp	function
(	O
tail	pointer
->	O
name	array
,	O
group	pointer
)	O
)	O
return	O
NULL	O
;	O
grent	pointer
=	O
getgrnam	function
(	O
group	pointer
)	O
;	O
tail	pointer
=	O
xmalloc	function
(	O
offsetof	O
(	O
struct	O
userid	struct
,	O
name	array
)	O
+	O
strlen	function
(	O
group	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
tail	pointer
->	O
name	array
,	O
group	pointer
)	O
;	O
if	O
(	O
grent	pointer
)	O
{	O
tail	pointer
->	O
id	union
.	O
g	int
=	O
grent	pointer
->	O
gr_gid	int
;	O
tail	pointer
->	O
next	pointer
=	O
group_alist	pointer
;	O
group_alist	pointer
=	O
tail	pointer
;	O
return	O
&	O
tail	pointer
->	O
id	union
.	O
g	int
;	O
}	O
tail	pointer
->	O
next	pointer
=	O
nogroup_alist	pointer
;	O
nogroup_alist	pointer
=	O
tail	pointer
;	O
return	O
NULL	O
;	O
}	O
