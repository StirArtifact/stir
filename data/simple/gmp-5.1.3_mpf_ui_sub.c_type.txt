void	O
mpf_ui_sub	O
(	O
mpf_ptr	pointer
r	pointer
,	O
unsigned	O
long	O
int	O
u	array
,	O
mpf_srcptr	pointer
v	pointer
)	O
{	O
mp_srcptr	pointer
up	pointer
,	O
vp	pointer
;	O
mp_ptr	pointer
rp	pointer
,	O
tp	pointer
;	O
mp_size_t	long
usize	pointer
,	O
vsize	long
,	O
rsize	long
;	O
mp_size_t	long
prec	int
;	O
mp_exp_t	long
uexp	long
;	O
mp_size_t	long
ediff	long
;	O
int	O
negate	int
;	O
mp_limb_t	long
ulimb	long
;	O
TMP_DECL	O
;	O
vsize	long
=	O
v	pointer
->	O
_mp_size	int
;	O
if	O
(	O
u	array
==	O
0	int
)	O
{	O
mpf_neg	O
(	O
r	pointer
,	O
v	pointer
)	O
;	O
return	O
;	O
}	O
if	O
(	O
vsize	long
==	O
0	int
)	O
{	O
mpf_set_ui	O
(	O
r	pointer
,	O
u	array
)	O
;	O
return	O
;	O
}	O
if	O
(	O
vsize	long
<	O
0	int
)	O
{	O
__mpf_struct	struct
v_negated	struct
;	O
v_negated	struct
.	O
_mp_size	int
=	O
-	O
vsize	long
;	O
v_negated	struct
.	O
_mp_exp	long
=	O
v	pointer
->	O
_mp_exp	long
;	O
v_negated	struct
.	O
_mp_d	pointer
=	O
v	pointer
->	O
_mp_d	pointer
;	O
mpf_add_ui	O
(	O
r	pointer
,	O
&	O
v_negated	struct
,	O
u	array
)	O
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
ulimb	long
=	O
u	array
;	O
if	O
(	O
1	int
<	O
v	pointer
->	O
_mp_exp	long
)	O
{	O
negate	int
=	O
1	int
;	O
usize	pointer
=	O
ABS	O
(	O
vsize	long
)	O
;	O
vsize	long
=	O
1	int
;	O
up	pointer
=	O
v	pointer
->	O
_mp_d	pointer
;	O
vp	pointer
=	O
&	O
ulimb	long
;	O
rp	pointer
=	O
r	pointer
->	O
_mp_d	pointer
;	O
prec	int
=	O
r	pointer
->	O
_mp_prec	int
+	O
1	int
;	O
uexp	long
=	O
v	pointer
->	O
_mp_exp	long
;	O
ediff	long
=	O
uexp	long
-	O
1	int
;	O
}	O
else	O
{	O
negate	int
=	O
0	int
;	O
usize	pointer
=	O
1	int
;	O
vsize	long
=	O
ABS	O
(	O
vsize	long
)	O
;	O
up	pointer
=	O
&	O
ulimb	long
;	O
vp	pointer
=	O
v	pointer
->	O
_mp_d	pointer
;	O
rp	pointer
=	O
r	pointer
->	O
_mp_d	pointer
;	O
prec	int
=	O
r	pointer
->	O
_mp_prec	int
;	O
uexp	long
=	O
1	int
;	O
ediff	long
=	O
1	int
-	O
v	pointer
->	O
_mp_exp	long
;	O
}	O
if	O
(	O
ediff	long
==	O
0	int
)	O
{	O
for	O
(	O
;	O
;	O
)	O
{	O
usize	pointer
--	O
;	O
vsize	long
--	O
;	O
if	O
(	O
up	pointer
[	O
usize	pointer
]	O
!=	O
vp	pointer
[	O
vsize	long
]	O
)	O
break	O
;	O
uexp	long
--	O
;	O
if	O
(	O
usize	pointer
==	O
0	int
)	O
goto	O
Lu0	O
;	O
if	O
(	O
vsize	long
==	O
0	int
)	O
goto	O
Lv0	O
;	O
}	O
usize	pointer
++	O
;	O
vsize	long
++	O
;	O
if	O
(	O
vsize	long
==	O
0	int
)	O
Lv0	O
:	O
while	O
(	O
usize	pointer
!=	O
0	int
&&	O
up	pointer
[	O
usize	pointer
-	O
1	int
]	O
==	O
0	int
)	O
usize	pointer
--	O
,	O
uexp	long
--	O
;	O
if	O
(	O
usize	pointer
==	O
0	int
)	O
Lu0	O
:	O
while	O
(	O
vsize	long
!=	O
0	int
&&	O
vp	pointer
[	O
vsize	long
-	O
1	int
]	O
==	O
0	int
)	O
vsize	long
--	O
,	O
uexp	long
--	O
;	O
}	O
if	O
(	O
usize	pointer
>	O
prec	int
)	O
{	O
up	pointer
+=	O
usize	pointer
-	O
prec	int
;	O
usize	pointer
=	O
prec	int
;	O
}	O
if	O
(	O
vsize	long
+	O
ediff	long
>	O
prec	int
)	O
{	O
vp	pointer
+=	O
vsize	long
+	O
ediff	long
-	O
prec	int
;	O
vsize	long
=	O
prec	int
-	O
ediff	long
;	O
}	O
tp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
prec	int
)	O
;	O
if	O
(	O
ediff	long
>=	O
prec	int
)	O
{	O
if	O
(	O
tp	pointer
!=	O
up	pointer
)	O
MPN_COPY	O
(	O
rp	pointer
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
else	O
{	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
vsize	long
==	O
0	int
)	O
{	O
MPN_COPY	O
(	O
rp	pointer
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
rsize	long
=	O
usize	pointer
;	O
goto	O
done	O
;	O
}	O
if	O
(	O
vp	pointer
[	O
0	int
]	O
!=	O
0	int
)	O
break	O
;	O
vp	pointer
++	O
,	O
vsize	long
--	O
;	O
}	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
usize	pointer
==	O
0	int
)	O
{	O
MPN_COPY	O
(	O
rp	pointer
,	O
vp	pointer
,	O
vsize	long
)	O
;	O
rsize	long
=	O
vsize	long
;	O
negate	int
^=	O
1	int
;	O
goto	O
done	O
;	O
}	O
if	O
(	O
up	pointer
[	O
0	int
]	O
!=	O
0	int
)	O
break	O
;	O
up	pointer
++	O
,	O
usize	pointer
--	O
;	O
}	O
if	O
(	O
usize	pointer
>	O
ediff	long
)	O
{	O
if	O
(	O
ediff	long
==	O
0	int
)	O
{	O
if	O
(	O
usize	pointer
>	O
vsize	long
)	O
{	O
int	O
cmp	int
;	O
cmp	int
=	O
mpn_cmp	O
(	O
up	pointer
+	O
usize	pointer
-	O
vsize	long
,	O
vp	pointer
,	O
vsize	long
)	O
;	O
if	O
(	O
cmp	int
>=	O
0	int
)	O
{	O
mp_size_t	long
size	long
;	O
size	long
=	O
usize	pointer
-	O
vsize	long
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
up	pointer
,	O
size	long
)	O
;	O
mpn_sub_n	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
+	O
size	long
,	O
vp	pointer
,	O
vsize	long
)	O
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
else	O
{	O
mp_size_t	long
size	long
,	O
i	long
;	O
size	long
=	O
usize	pointer
-	O
vsize	long
;	O
tp	pointer
[	O
0	int
]	O
=	O
-	O
up	pointer
[	O
0	int
]	O
&	O
GMP_NUMB_MASK	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
size	long
;	O
i	long
++	O
)	O
tp	pointer
[	O
i	long
]	O
=	O
~	O
up	pointer
[	O
i	long
]	O
&	O
GMP_NUMB_MASK	O
;	O
mpn_sub_n	O
(	O
tp	pointer
+	O
size	long
,	O
vp	pointer
,	O
up	pointer
+	O
size	long
,	O
vsize	long
)	O
;	O
mpn_sub_1	O
(	O
tp	pointer
+	O
size	long
,	O
tp	pointer
+	O
size	long
,	O
vsize	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
negate	int
^=	O
1	int
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
}	O
else	O
if	O
(	O
usize	pointer
<	O
vsize	long
)	O
{	O
int	O
cmp	int
;	O
cmp	int
=	O
mpn_cmp	O
(	O
up	pointer
,	O
vp	pointer
+	O
vsize	long
-	O
usize	pointer
,	O
usize	pointer
)	O
;	O
if	O
(	O
cmp	int
>	O
0	int
)	O
{	O
mp_size_t	long
size	long
,	O
i	long
;	O
size	long
=	O
vsize	long
-	O
usize	pointer
;	O
tp	pointer
[	O
0	int
]	O
=	O
-	O
vp	pointer
[	O
0	int
]	O
&	O
GMP_NUMB_MASK	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
size	long
;	O
i	long
++	O
)	O
tp	pointer
[	O
i	long
]	O
=	O
~	O
vp	pointer
[	O
i	long
]	O
&	O
GMP_NUMB_MASK	O
;	O
mpn_sub_n	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
,	O
vp	pointer
+	O
size	long
,	O
usize	pointer
)	O
;	O
mpn_sub_1	O
(	O
tp	pointer
+	O
size	long
,	O
tp	pointer
+	O
size	long
,	O
usize	pointer
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
rsize	long
=	O
vsize	long
;	O
}	O
else	O
{	O
mp_size_t	long
size	long
;	O
size	long
=	O
vsize	long
-	O
usize	pointer
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
vp	pointer
,	O
size	long
)	O
;	O
mpn_sub_n	O
(	O
tp	pointer
+	O
size	long
,	O
vp	pointer
+	O
size	long
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
negate	int
^=	O
1	int
;	O
rsize	long
=	O
vsize	long
;	O
}	O
}	O
else	O
{	O
int	O
cmp	int
;	O
cmp	int
=	O
mpn_cmp	O
(	O
up	pointer
,	O
vp	pointer
+	O
vsize	long
-	O
usize	pointer
,	O
usize	pointer
)	O
;	O
if	O
(	O
cmp	int
>	O
0	int
)	O
{	O
mpn_sub_n	O
(	O
tp	pointer
,	O
up	pointer
,	O
vp	pointer
,	O
usize	pointer
)	O
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
else	O
{	O
mpn_sub_n	O
(	O
tp	pointer
,	O
vp	pointer
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
negate	int
^=	O
1	int
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
}	O
}	O
else	O
{	O
if	O
(	O
vsize	long
+	O
ediff	long
<=	O
usize	pointer
)	O
{	O
mp_size_t	long
size	long
;	O
size	long
=	O
usize	pointer
-	O
ediff	long
-	O
vsize	long
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
up	pointer
,	O
size	long
)	O
;	O
mpn_sub	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
+	O
size	long
,	O
usize	pointer
-	O
size	long
,	O
vp	pointer
,	O
vsize	long
)	O
;	O
rsize	long
=	O
usize	pointer
;	O
}	O
else	O
{	O
mp_size_t	long
size	long
,	O
i	long
;	O
size	long
=	O
vsize	long
+	O
ediff	long
-	O
usize	pointer
;	O
tp	pointer
[	O
0	int
]	O
=	O
-	O
vp	pointer
[	O
0	int
]	O
&	O
GMP_NUMB_MASK	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
size	long
;	O
i	long
++	O
)	O
tp	pointer
[	O
i	long
]	O
=	O
~	O
vp	pointer
[	O
i	long
]	O
&	O
GMP_NUMB_MASK	O
;	O
mpn_sub	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
,	O
usize	pointer
,	O
vp	pointer
+	O
size	long
,	O
usize	pointer
-	O
ediff	long
)	O
;	O
mpn_sub_1	O
(	O
tp	pointer
+	O
size	long
,	O
tp	pointer
+	O
size	long
,	O
usize	pointer
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
rsize	long
=	O
vsize	long
+	O
ediff	long
;	O
}	O
}	O
}	O
else	O
{	O
mp_size_t	long
size	long
,	O
i	long
;	O
size	long
=	O
vsize	long
+	O
ediff	long
-	O
usize	pointer
;	O
tp	pointer
[	O
0	int
]	O
=	O
-	O
vp	pointer
[	O
0	int
]	O
&	O
GMP_NUMB_MASK	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<	O
vsize	long
;	O
i	long
++	O
)	O
tp	pointer
[	O
i	long
]	O
=	O
~	O
vp	pointer
[	O
i	long
]	O
&	O
GMP_NUMB_MASK	O
;	O
for	O
(	O
i	long
=	O
vsize	long
;	O
i	long
<	O
size	long
;	O
i	long
++	O
)	O
tp	pointer
[	O
i	long
]	O
=	O
GMP_NUMB_MAX	O
;	O
mpn_sub_1	O
(	O
tp	pointer
+	O
size	long
,	O
up	pointer
,	O
usize	pointer
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
rsize	long
=	O
size	long
+	O
usize	pointer
;	O
}	O
while	O
(	O
rsize	long
!=	O
0	int
&&	O
tp	pointer
[	O
rsize	long
-	O
1	int
]	O
==	O
0	int
)	O
{	O
rsize	long
--	O
;	O
uexp	long
--	O
;	O
}	O
MPN_COPY	O
(	O
rp	pointer
,	O
tp	pointer
,	O
rsize	long
)	O
;	O
}	O
done	O
:	O
r	pointer
->	O
_mp_size	int
=	O
negate	int
?	O
-	O
rsize	long
:	O
rsize	long
;	O
r	pointer
->	O
_mp_exp	long
=	O
uexp	long
;	O
TMP_FREE	O
;	O
}	O
