error_t	int
store_set_runs	function
(	O
struct	O
store	struct
*	O
store	struct
,	O
const	O
struct	O
store_run	struct
*	O
runs	pointer
,	O
size_t	long
num_runs	long
)	O
{	O
unsigned	O
size	long
=	O
num_runs	long
*	O
sizeof	O
(	O
struct	O
store_run	struct
)	O
;	O
struct	O
store_run	struct
*	O
copy	pointer
=	O
malloc	function
(	O
size	long
)	O
;	O
if	O
(	O
!	O
copy	pointer
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
store	struct
->	O
runs	pointer
)	O
free	function
(	O
store	struct
->	O
runs	pointer
)	O
;	O
memcpy	function
(	O
copy	pointer
,	O
runs	pointer
,	O
size	long
)	O
;	O
store	struct
->	O
runs	pointer
=	O
copy	pointer
;	O
store	struct
->	O
num_runs	long
=	O
num_runs	long
;	O
if	O
(	O
store	struct
->	O
block_size	long
>	O
0	int
)	O
_store_derive	function
(	O
store	struct
)	O
;	O
return	O
0	int
;	O
}	O
error_t	int
store_set_name	function
(	O
struct	O
store	struct
*	O
store	struct
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
char	O
*	O
copy	pointer
=	O
strdup	function
(	O
name	pointer
)	O
;	O
if	O
(	O
!	O
copy	pointer
)	O
return	O
ENOMEM	int
;	O
if	O
(	O
store	struct
->	O
name	pointer
)	O
free	function
(	O
store	struct
->	O
name	pointer
)	O
;	O
store	struct
->	O
name	pointer
=	O
copy	pointer
;	O
return	O
0	int
;	O
}	O
void	O
store_close_source	function
(	O
struct	O
store	struct
*	O
store	struct
)	O
{	O
if	O
(	O
store	struct
->	O
source	int
!=	O
MACH_PORT_NULL	O
)	O
{	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
store	struct
->	O
source	int
)	O
;	O
store	struct
->	O
source	int
=	O
MACH_PORT_NULL	O
;	O
}	O
}	O
