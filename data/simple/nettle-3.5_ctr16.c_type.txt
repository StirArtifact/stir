void	O
_ctr_crypt16	O
(	O
const	O
void	O
*	O
ctx	pointer
,	O
nettle_cipher_func	function
*	O
f	pointer
,	O
nettle_fill16_func	function
*	O
fill	pointer
,	O
uint8_t	char
*	O
ctr	pointer
,	O
size_t	long
length	long
,	O
uint8_t	char
*	O
dst	pointer
,	O
const	O
uint8_t	char
*	O
src	pointer
)	O
{	O
if	O
(	O
dst	pointer
!=	O
src	pointer
&&	O
!	O
(	O
(	O
uintptr_t	long
)	O
dst	pointer
%	O
sizeof	O
(	O
uint64_t	long
)	O
)	O
)	O
{	O
size_t	long
blocks	long
=	O
length	long
/	O
16u	int
;	O
size_t	long
done	long
;	O
fill	pointer
(	O
ctr	pointer
,	O
blocks	long
,	O
(	O
union	O
nettle_block16	union
*	O
)	O
dst	pointer
)	O
;	O
done	long
=	O
blocks	long
*	O
16	int
;	O
f	pointer
(	O
ctx	pointer
,	O
done	long
,	O
dst	pointer
,	O
dst	pointer
)	O
;	O
memxor	O
(	O
dst	pointer
,	O
src	pointer
,	O
done	long
)	O
;	O
length	long
-=	O
done	long
;	O
if	O
(	O
length	long
>	O
0	int
)	O
{	O
union	O
nettle_block16	union
block	array
;	O
dst	pointer
+=	O
done	long
;	O
src	pointer
+=	O
done	long
;	O
assert	O
(	O
length	long
<	O
16	int
)	O
;	O
fill	pointer
(	O
ctr	pointer
,	O
1	int
,	O
&	O
block	array
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
16	int
,	O
block	array
.	O
b	array
,	O
block	array
.	O
b	array
)	O
;	O
memxor3	O
(	O
dst	pointer
,	O
src	pointer
,	O
block	array
.	O
b	array
,	O
length	long
)	O
;	O
}	O
}	O
else	O
{	O
TMP_DECL	O
(	O
buffer	pointer
,	O
union	O
nettle_block16	union
,	O
CTR_BUFFER_LIMIT	int
/	O
16	int
)	O
;	O
size_t	long
blocks	long
=	O
(	O
length	long
+	O
15	int
)	O
/	O
16u	int
;	O
size_t	long
i	long
;	O
TMP_ALLOC	O
(	O
buffer	pointer
,	O
MIN	O
(	O
blocks	long
,	O
CTR_BUFFER_LIMIT	int
/	O
16	int
)	O
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
blocks	long
>=	O
CTR_BUFFER_LIMIT	int
/	O
16	int
;	O
i	long
+=	O
CTR_BUFFER_LIMIT	int
,	O
blocks	long
-=	O
CTR_BUFFER_LIMIT	int
/	O
16	int
)	O
{	O
fill	pointer
(	O
ctr	pointer
,	O
CTR_BUFFER_LIMIT	int
/	O
16	int
,	O
buffer	pointer
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
CTR_BUFFER_LIMIT	int
,	O
buffer	pointer
->	O
b	array
,	O
buffer	pointer
->	O
b	array
)	O
;	O
if	O
(	O
length	long
-	O
i	long
<	O
CTR_BUFFER_LIMIT	int
)	O
goto	O
done	long
;	O
memxor3	O
(	O
dst	pointer
+	O
i	long
,	O
src	pointer
+	O
i	long
,	O
buffer	pointer
->	O
b	array
,	O
CTR_BUFFER_LIMIT	int
)	O
;	O
}	O
if	O
(	O
blocks	long
>	O
0	int
)	O
{	O
assert	O
(	O
length	long
-	O
i	long
<	O
CTR_BUFFER_LIMIT	int
)	O
;	O
fill	pointer
(	O
ctr	pointer
,	O
blocks	long
,	O
buffer	pointer
)	O
;	O
f	pointer
(	O
ctx	pointer
,	O
blocks	long
*	O
16	int
,	O
buffer	pointer
->	O
b	array
,	O
buffer	pointer
->	O
b	array
)	O
;	O
done	long
:	O
memxor3	O
(	O
dst	pointer
+	O
i	long
,	O
src	pointer
+	O
i	long
,	O
buffer	pointer
->	O
b	array
,	O
length	long
-	O
i	long
)	O
;	O
}	O
}	O
}	O
