unsigned	O
int	O
gsl_ran_poisson	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
double	O
mu	double
)	O
{	O
double	O
emu	double
;	O
double	O
prod	double
=	O
1.0	int
;	O
unsigned	O
int	O
k	long
=	O
0	int
;	O
while	O
(	O
mu	double
>	O
10	int
)	O
{	O
unsigned	O
int	O
m	int
=	O
mu	double
*	O
(	O
7.0	int
/	O
8.0	int
)	O
;	O
double	O
X	pointer
=	O
gsl_ran_gamma_int	function
(	O
r	pointer
,	O
m	int
)	O
;	O
if	O
(	O
X	pointer
>=	O
mu	double
)	O
{	O
return	O
k	long
+	O
gsl_ran_binomial	function
(	O
r	pointer
,	O
mu	double
/	O
X	pointer
,	O
m	int
-	O
1	int
)	O
;	O
}	O
else	O
{	O
k	long
+=	O
m	int
;	O
mu	double
-=	O
X	pointer
;	O
}	O
}	O
emu	double
=	O
exp	function
(	O
-	O
mu	double
)	O
;	O
do	O
{	O
prod	double
*=	O
gsl_rng_uniform	function
(	O
r	pointer
)	O
;	O
k	long
++	O
;	O
}	O
while	O
(	O
prod	double
>	O
emu	double
)	O
;	O
return	O
k	long
-	O
1	int
;	O
}	O
void	O
gsl_ran_poisson_array	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
size_t	long
n	int
,	O
unsigned	O
int	O
array	array
[	O
]	O
,	O
double	O
mu	double
)	O
{	O
size_t	long
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
i	long
++	O
)	O
{	O
array	array
[	O
i	long
]	O
=	O
gsl_ran_poisson	function
(	O
r	pointer
,	O
mu	double
)	O
;	O
}	O
return	O
;	O
}	O
double	O
gsl_ran_poisson_pdf	function
(	O
const	O
unsigned	O
int	O
k	long
,	O
const	O
double	O
mu	double
)	O
{	O
double	O
p	int
;	O
double	O
lf	double
=	O
gsl_sf_lnfact	function
(	O
k	long
)	O
;	O
p	int
=	O
exp	function
(	O
log	function
(	O
mu	double
)	O
*	O
k	long
-	O
lf	double
-	O
mu	double
)	O
;	O
return	O
p	int
;	O
}	O
