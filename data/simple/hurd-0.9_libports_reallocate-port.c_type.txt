void	O
ports_reallocate_port	function
(	O
void	O
*	O
portstruct	pointer
)	O
{	O
struct	O
port_info	struct
*	O
pi	pointer
=	O
portstruct	pointer
;	O
error_t	function
err	O
;	O
int	O
dropref	int
=	O
0	int
;	O
pthread_mutex_lock	function
(	O
&	O
_ports_lock	union
)	O
;	O
assert	function
(	O
pi	pointer
->	O
port_right	int
)	O
;	O
err	O
=	O
mach_port_mod_refs	function
(	O
mach_task_self	function
(	O
)	O
,	O
pi	pointer
->	O
port_right	int
,	O
MACH_PORT_RIGHT_RECEIVE	O
,	O
-	O
1	int
)	O
;	O
assert_perror	function
(	O
err	O
)	O
;	O
pthread_rwlock_wrlock	function
(	O
&	O
_ports_htable_lock	union
)	O
;	O
hurd_ihash_locp_remove	function
(	O
&	O
_ports_htable	struct
,	O
pi	pointer
->	O
ports_htable_entry	int
)	O
;	O
hurd_ihash_locp_remove	function
(	O
&	O
pi	pointer
->	O
bucket	pointer
->	O
htable	struct
,	O
pi	pointer
->	O
hentry	int
)	O
;	O
pthread_rwlock_unlock	function
(	O
&	O
_ports_htable_lock	union
)	O
;	O
err	O
=	O
mach_port_allocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
MACH_PORT_RIGHT_RECEIVE	O
,	O
&	O
pi	pointer
->	O
port_right	int
)	O
;	O
assert_perror	function
(	O
err	O
)	O
;	O
if	O
(	O
pi	pointer
->	O
flags	int
&	O
PORT_HAS_SENDRIGHTS	int
)	O
{	O
pi	pointer
->	O
flags	int
&=	O
~	O
PORT_HAS_SENDRIGHTS	int
;	O
dropref	int
=	O
1	int
;	O
}	O
pi	pointer
->	O
cancel_threshold	int
=	O
0	int
;	O
pi	pointer
->	O
mscount	int
=	O
0	int
;	O
pthread_rwlock_wrlock	function
(	O
&	O
_ports_htable_lock	union
)	O
;	O
err	O
=	O
hurd_ihash_add	function
(	O
&	O
_ports_htable	struct
,	O
pi	pointer
->	O
port_right	int
,	O
pi	pointer
)	O
;	O
assert_perror	function
(	O
err	O
)	O
;	O
err	O
=	O
hurd_ihash_add	function
(	O
&	O
pi	pointer
->	O
bucket	pointer
->	O
htable	struct
,	O
pi	pointer
->	O
port_right	int
,	O
pi	pointer
)	O
;	O
pthread_rwlock_unlock	function
(	O
&	O
_ports_htable_lock	union
)	O
;	O
pthread_mutex_unlock	function
(	O
&	O
_ports_lock	union
)	O
;	O
assert_perror	function
(	O
err	O
)	O
;	O
mach_port_set_protected_payload	function
(	O
mach_task_self	function
(	O
)	O
,	O
pi	pointer
->	O
port_right	int
,	O
(	O
unsigned	O
long	O
)	O
pi	pointer
)	O
;	O
err	O
=	O
mach_port_move_member	function
(	O
mach_task_self	function
(	O
)	O
,	O
pi	pointer
->	O
port_right	int
,	O
pi	pointer
->	O
bucket	pointer
->	O
portset	int
)	O
;	O
assert_perror	function
(	O
err	O
)	O
;	O
if	O
(	O
dropref	int
)	O
ports_port_deref	function
(	O
pi	pointer
)	O
;	O
}	O
