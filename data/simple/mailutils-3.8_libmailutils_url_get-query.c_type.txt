int	O
mu_url_sget_query	function
(	O
const	O
mu_url_t	pointer
url	pointer
,	O
size_t	long
*	O
qc	pointer
,	O
char	O
*	O
*	O
*	O
qv	pointer
)	O
{	O
if	O
(	O
url	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
*	O
qc	pointer
=	O
url	pointer
->	O
qargc	int
;	O
*	O
qv	pointer
=	O
url	pointer
->	O
qargv	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_url_aget_query	function
(	O
const	O
mu_url_t	pointer
url	pointer
,	O
size_t	long
*	O
qc	pointer
,	O
char	O
*	O
*	O
*	O
qv	pointer
)	O
{	O
size_t	long
qargc	int
,	O
i	long
;	O
char	O
*	O
*	O
qargv	pointer
;	O
char	O
*	O
*	O
qcopy	pointer
;	O
int	O
rc	int
=	O
mu_url_sget_fvpairs	function
(	O
url	pointer
,	O
&	O
qargc	int
,	O
&	O
qargv	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
qcopy	pointer
=	O
calloc	function
(	O
qargc	int
+	O
1	int
,	O
sizeof	O
(	O
qcopy	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
qcopy	pointer
)	O
return	O
errno	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
qargc	int
;	O
i	long
++	O
)	O
{	O
if	O
(	O
!	O
(	O
qcopy	pointer
[	O
i	long
]	O
=	O
strdup	function
(	O
qargv	pointer
[	O
i	long
]	O
)	O
)	O
)	O
{	O
mu_argcv_free	function
(	O
i	long
,	O
qcopy	pointer
)	O
;	O
return	O
errno	O
;	O
}	O
}	O
qcopy	pointer
[	O
i	long
]	O
=	O
NULL	O
;	O
*	O
qc	pointer
=	O
qargc	int
;	O
*	O
qv	pointer
=	O
qcopy	pointer
;	O
return	O
0	int
;	O
}	O
