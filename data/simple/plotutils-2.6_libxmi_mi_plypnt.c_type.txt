void	O
miDrawPoints_internal	O
(	O
miPaintedSet	struct
*	O
paintedSet	pointer
,	O
const	O
miGC	struct
*	O
pGC	pointer
,	O
miCoordMode	enum
mode	enum
,	O
int	O
npt	int
,	O
const	O
miPoint	struct
*	O
pPts	pointer
)	O
{	O
unsigned	O
int	O
*	O
pwidthInit	pointer
,	O
*	O
pwidth	pointer
;	O
int	O
i	int
;	O
miPoint	struct
*	O
ppt	pointer
=	O
(	O
miPoint	struct
*	O
)	O
NULL	O
;	O
if	O
(	O
npt	int
<=	O
0	int
)	O
return	O
;	O
ppt	pointer
=	O
(	O
miPoint	struct
*	O
)	O
mi_xmalloc	O
(	O
npt	int
*	O
sizeof	O
(	O
miPoint	struct
)	O
)	O
;	O
if	O
(	O
mode	enum
==	O
MI_COORD_MODE_PREVIOUS	int
)	O
{	O
ppt	pointer
[	O
0	int
]	O
=	O
pPts	pointer
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
npt	int
;	O
i	int
++	O
)	O
{	O
ppt	pointer
[	O
i	int
]	O
.	O
x	int
=	O
ppt	pointer
[	O
i	int
-	O
1	int
]	O
.	O
x	int
+	O
pPts	pointer
[	O
i	int
]	O
.	O
x	int
;	O
ppt	pointer
[	O
i	int
]	O
.	O
y	int
=	O
ppt	pointer
[	O
i	int
-	O
1	int
]	O
.	O
y	int
+	O
pPts	pointer
[	O
i	int
]	O
.	O
y	int
;	O
}	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
npt	int
;	O
i	int
++	O
)	O
ppt	pointer
[	O
i	int
]	O
=	O
pPts	pointer
[	O
i	int
]	O
;	O
}	O
pwidthInit	pointer
=	O
(	O
unsigned	O
int	O
*	O
)	O
mi_xmalloc	O
(	O
npt	int
*	O
sizeof	O
(	O
unsigned	O
int	O
)	O
)	O
;	O
pwidth	pointer
=	O
pwidthInit	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
npt	int
;	O
i	int
++	O
)	O
*	O
pwidth	pointer
++	O
=	O
1	int
;	O
if	O
(	O
npt	int
>	O
1	int
)	O
miQuickSortSpansY	O
(	O
ppt	pointer
,	O
pwidthInit	pointer
,	O
npt	int
)	O
;	O
MI_PAINT_SPANS	O
(	O
paintedSet	pointer
,	O
pGC	pointer
->	O
pixels	pointer
[	O
1	int
]	O
,	O
npt	int
,	O
ppt	pointer
,	O
pwidthInit	pointer
)	O
}	O
