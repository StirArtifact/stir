local	O
unsigned	O
long	O
crc32_little	function
OF	O
(	O
(	O
unsigned	O
long	O
,	O
const	O
unsigned	O
char	O
FAR	O
*	O
,	O
z_size_t	long
)	O
)	O
;	O
local	O
unsigned	O
long	O
crc32_big	function
OF	O
(	O
(	O
unsigned	O
long	O
,	O
const	O
unsigned	O
char	O
FAR	O
*	O
,	O
z_size_t	long
)	O
)	O
;	O
local	O
unsigned	O
long	O
gf2_matrix_times	function
OF	O
(	O
(	O
unsigned	O
long	O
*	O
mat	pointer
,	O
unsigned	O
long	O
vec	long
)	O
)	O
;	O
local	O
void	O
gf2_matrix_square	function
OF	O
(	O
(	O
unsigned	O
long	O
*	O
square	pointer
,	O
unsigned	O
long	O
*	O
mat	pointer
)	O
)	O
;	O
local	O
uLong	long
crc32_combine_	function
OF	O
(	O
(	O
uLong	long
crc1	long
,	O
uLong	long
crc2	long
,	O
z_off64_t	O
len2	long
)	O
)	O
;	O
const	O
z_crc_t	int
FAR	O
*	O
ZEXPORT	O
get_crc_table	function
(	O
)	O
{	O
return	O
(	O
const	O
z_crc_t	int
FAR	O
*	O
)	O
crc_table	array
;	O
}	O
unsigned	O
long	O
ZEXPORT	O
crc32_z	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
unsigned	O
long	O
crc	long
;	O
const	O
unsigned	O
char	O
FAR	O
*	O
buf	pointer
;	O
z_size_t	long
len	int
;	O
{	O
if	O
(	O
buf	pointer
==	O
Z_NULL	int
)	O
return	O
0UL	int
;	O
if	O
(	O
sizeof	O
(	O
void	O
*	O
)	O
==	O
sizeof	O
(	O
ptrdiff_t	long
)	O
)	O
{	O
z_crc_t	int
endian	int
;	O
endian	int
=	O
1	int
;	O
if	O
(	O
*	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
(	O
&	O
endian	int
)	O
)	O
)	O
return	O
crc32_little	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
;	O
else	O
return	O
crc32_big	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
;	O
}	O
crc	long
=	O
crc	long
^	O
0xffffffffUL	int
;	O
while	O
(	O
len	int
>=	O
8	int
)	O
{	O
DO8	O
;	O
len	int
-=	O
8	int
;	O
}	O
if	O
(	O
len	int
)	O
do	O
{	O
DO1	O
;	O
}	O
while	O
(	O
--	O
len	int
)	O
;	O
return	O
crc	long
^	O
0xffffffffUL	int
;	O
}	O
unsigned	O
long	O
ZEXPORT	O
crc32	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
unsigned	O
long	O
crc	long
;	O
const	O
unsigned	O
char	O
FAR	O
*	O
buf	pointer
;	O
uInt	int
len	int
;	O
{	O
return	O
crc32_z	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
;	O
}	O
local	O
unsigned	O
long	O
crc32_little	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
unsigned	O
long	O
crc	long
;	O
const	O
unsigned	O
char	O
FAR	O
*	O
buf	pointer
;	O
z_size_t	long
len	int
;	O
{	O
register	O
z_crc_t	int
c	int
;	O
register	O
const	O
z_crc_t	int
FAR	O
*	O
buf4	pointer
;	O
c	int
=	O
(	O
z_crc_t	int
)	O
crc	long
;	O
c	int
=	O
~	O
c	int
;	O
while	O
(	O
len	int
&&	O
(	O
(	O
ptrdiff_t	long
)	O
buf	pointer
&	O
3	int
)	O
)	O
{	O
c	int
=	O
crc_table	array
[	O
0	int
]	O
[	O
(	O
c	int
^	O
*	O
buf	pointer
++	O
)	O
&	O
0xff	int
]	O
^	O
(	O
c	int
>>	O
8	int
)	O
;	O
len	int
--	O
;	O
}	O
buf4	pointer
=	O
(	O
const	O
z_crc_t	int
FAR	O
*	O
)	O
(	O
const	O
void	O
FAR	O
*	O
)	O
buf	pointer
;	O
while	O
(	O
len	int
>=	O
32	int
)	O
{	O
DOLIT32	O
;	O
len	int
-=	O
32	int
;	O
}	O
while	O
(	O
len	int
>=	O
4	int
)	O
{	O
DOLIT4	O
;	O
len	int
-=	O
4	int
;	O
}	O
buf	pointer
=	O
(	O
const	O
unsigned	O
char	O
FAR	O
*	O
)	O
buf4	pointer
;	O
if	O
(	O
len	int
)	O
do	O
{	O
c	int
=	O
crc_table	array
[	O
0	int
]	O
[	O
(	O
c	int
^	O
*	O
buf	pointer
++	O
)	O
&	O
0xff	int
]	O
^	O
(	O
c	int
>>	O
8	int
)	O
;	O
}	O
while	O
(	O
--	O
len	int
)	O
;	O
c	int
=	O
~	O
c	int
;	O
return	O
(	O
unsigned	O
long	O
)	O
c	int
;	O
}	O
local	O
unsigned	O
long	O
crc32_big	function
(	O
crc	long
,	O
buf	pointer
,	O
len	int
)	O
unsigned	O
long	O
crc	long
;	O
const	O
unsigned	O
char	O
FAR	O
*	O
buf	pointer
;	O
z_size_t	long
len	int
;	O
{	O
register	O
z_crc_t	int
c	int
;	O
register	O
const	O
z_crc_t	int
FAR	O
*	O
buf4	pointer
;	O
c	int
=	O
ZSWAP32	O
(	O
(	O
z_crc_t	int
)	O
crc	long
)	O
;	O
c	int
=	O
~	O
c	int
;	O
while	O
(	O
len	int
&&	O
(	O
(	O
ptrdiff_t	long
)	O
buf	pointer
&	O
3	int
)	O
)	O
{	O
c	int
=	O
crc_table	array
[	O
4	int
]	O
[	O
(	O
c	int
>>	O
24	int
)	O
^	O
*	O
buf	pointer
++	O
]	O
^	O
(	O
c	int
<<	O
8	int
)	O
;	O
len	int
--	O
;	O
}	O
buf4	pointer
=	O
(	O
const	O
z_crc_t	int
FAR	O
*	O
)	O
(	O
const	O
void	O
FAR	O
*	O
)	O
buf	pointer
;	O
while	O
(	O
len	int
>=	O
32	int
)	O
{	O
DOBIG32	O
;	O
len	int
-=	O
32	int
;	O
}	O
while	O
(	O
len	int
>=	O
4	int
)	O
{	O
DOBIG4	O
;	O
len	int
-=	O
4	int
;	O
}	O
buf	pointer
=	O
(	O
const	O
unsigned	O
char	O
FAR	O
*	O
)	O
buf4	pointer
;	O
if	O
(	O
len	int
)	O
do	O
{	O
c	int
=	O
crc_table	array
[	O
4	int
]	O
[	O
(	O
c	int
>>	O
24	int
)	O
^	O
*	O
buf	pointer
++	O
]	O
^	O
(	O
c	int
<<	O
8	int
)	O
;	O
}	O
while	O
(	O
--	O
len	int
)	O
;	O
c	int
=	O
~	O
c	int
;	O
return	O
(	O
unsigned	O
long	O
)	O
(	O
ZSWAP32	O
(	O
c	int
)	O
)	O
;	O
}	O
local	O
unsigned	O
long	O
gf2_matrix_times	function
(	O
mat	pointer
,	O
vec	long
)	O
unsigned	O
long	O
*	O
mat	pointer
;	O
unsigned	O
long	O
vec	long
;	O
{	O
unsigned	O
long	O
sum	long
;	O
sum	long
=	O
0	int
;	O
while	O
(	O
vec	long
)	O
{	O
if	O
(	O
vec	long
&	O
1	int
)	O
sum	long
^=	O
*	O
mat	pointer
;	O
vec	long
>>=	O
1	int
;	O
mat	pointer
++	O
;	O
}	O
return	O
sum	long
;	O
}	O
local	O
void	O
gf2_matrix_square	function
(	O
square	pointer
,	O
mat	pointer
)	O
unsigned	O
long	O
*	O
square	pointer
;	O
unsigned	O
long	O
*	O
mat	pointer
;	O
{	O
int	O
n	int
;	O
for	O
(	O
n	int
=	O
0	int
;	O
n	int
<	O
GF2_DIM	int
;	O
n	int
++	O
)	O
square	pointer
[	O
n	int
]	O
=	O
gf2_matrix_times	function
(	O
mat	pointer
,	O
mat	pointer
[	O
n	int
]	O
)	O
;	O
}	O
local	O
uLong	long
crc32_combine_	function
(	O
crc1	long
,	O
crc2	long
,	O
len2	long
)	O
uLong	long
crc1	long
;	O
uLong	long
crc2	long
;	O
z_off64_t	O
len2	long
;	O
{	O
int	O
n	int
;	O
unsigned	O
long	O
row	long
;	O
unsigned	O
long	O
even	array
[	O
GF2_DIM	int
]	O
;	O
unsigned	O
long	O
odd	array
[	O
GF2_DIM	int
]	O
;	O
if	O
(	O
len2	long
<=	O
0	int
)	O
return	O
crc1	long
;	O
odd	array
[	O
0	int
]	O
=	O
0xedb88320UL	int
;	O
row	long
=	O
1	int
;	O
for	O
(	O
n	int
=	O
1	int
;	O
n	int
<	O
GF2_DIM	int
;	O
n	int
++	O
)	O
{	O
odd	array
[	O
n	int
]	O
=	O
row	long
;	O
row	long
<<=	O
1	int
;	O
}	O
gf2_matrix_square	function
(	O
even	array
,	O
odd	array
)	O
;	O
gf2_matrix_square	function
(	O
odd	array
,	O
even	array
)	O
;	O
do	O
{	O
gf2_matrix_square	function
(	O
even	array
,	O
odd	array
)	O
;	O
if	O
(	O
len2	long
&	O
1	int
)	O
crc1	long
=	O
gf2_matrix_times	function
(	O
even	array
,	O
crc1	long
)	O
;	O
len2	long
>>=	O
1	int
;	O
if	O
(	O
len2	long
==	O
0	int
)	O
break	O
;	O
gf2_matrix_square	function
(	O
odd	array
,	O
even	array
)	O
;	O
if	O
(	O
len2	long
&	O
1	int
)	O
crc1	long
=	O
gf2_matrix_times	function
(	O
odd	array
,	O
crc1	long
)	O
;	O
len2	long
>>=	O
1	int
;	O
}	O
while	O
(	O
len2	long
!=	O
0	int
)	O
;	O
crc1	long
^=	O
crc2	long
;	O
return	O
crc1	long
;	O
}	O
uLong	long
ZEXPORT	O
crc32_combine	function
(	O
crc1	long
,	O
crc2	long
,	O
len2	long
)	O
uLong	long
crc1	long
;	O
uLong	long
crc2	long
;	O
z_off_t	O
len2	long
;	O
{	O
return	O
crc32_combine_	function
(	O
crc1	long
,	O
crc2	long
,	O
len2	long
)	O
;	O
}	O
uLong	long
ZEXPORT	O
crc32_combine64	function
(	O
crc1	long
,	O
crc2	long
,	O
len2	long
)	O
uLong	long
crc1	long
;	O
uLong	long
crc2	long
;	O
z_off64_t	O
len2	long
;	O
{	O
return	O
crc32_combine_	function
(	O
crc1	long
,	O
crc2	long
,	O
len2	long
)	O
;	O
}	O
