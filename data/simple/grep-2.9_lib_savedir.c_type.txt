static	O
char	O
*	O
path	pointer
;	O
static	O
size_t	long
pathlen	long
;	O
extern	O
int	O
isdir	function
(	O
const	O
char	O
*	O
name	pointer
)	O
;	O
static	O
int	O
isdir1	function
(	O
const	O
char	O
*	O
dir	pointer
,	O
const	O
char	O
*	O
file	pointer
)	O
{	O
size_t	long
dirlen	long
=	O
strlen	function
(	O
dir	pointer
)	O
;	O
size_t	long
filelen	long
=	O
strlen	function
(	O
file	pointer
)	O
;	O
while	O
(	O
dirlen	long
&&	O
dir	pointer
[	O
dirlen	long
-	O
1	int
]	O
==	O
'/'	O
)	O
dirlen	long
--	O
;	O
if	O
(	O
(	O
dirlen	long
+	O
filelen	long
+	O
2	int
)	O
>	O
pathlen	long
)	O
{	O
pathlen	long
*=	O
2	int
;	O
if	O
(	O
(	O
dirlen	long
+	O
filelen	long
+	O
2	int
)	O
>	O
pathlen	long
)	O
pathlen	long
=	O
dirlen	long
+	O
filelen	long
+	O
2	int
;	O
path	pointer
=	O
xrealloc	function
(	O
path	pointer
,	O
pathlen	long
)	O
;	O
}	O
memcpy	function
(	O
path	pointer
,	O
dir	pointer
,	O
dirlen	long
)	O
;	O
path	pointer
[	O
dirlen	long
]	O
=	O
'/'	O
;	O
strcpy	function
(	O
path	pointer
+	O
dirlen	long
+	O
1	int
,	O
file	pointer
)	O
;	O
return	O
isdir	function
(	O
path	pointer
)	O
;	O
}	O
char	O
*	O
savedir	function
(	O
const	O
char	O
*	O
dir	pointer
,	O
off_t	long
name_size	long
,	O
struct	O
exclude	O
*	O
included_patterns	pointer
,	O
struct	O
exclude	O
*	O
excluded_patterns	pointer
,	O
struct	O
exclude	O
*	O
excluded_directory_patterns	pointer
)	O
{	O
DIR	struct
*	O
dirp	pointer
;	O
struct	O
dirent	struct
*	O
dp	pointer
;	O
char	O
*	O
name_space	pointer
;	O
char	O
*	O
namep	pointer
;	O
dirp	pointer
=	O
opendir	function
(	O
dir	pointer
)	O
;	O
if	O
(	O
dirp	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
if	O
(	O
name_size	long
<=	O
0	int
)	O
name_size	long
=	O
1	int
;	O
name_space	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
name_size	long
)	O
;	O
if	O
(	O
name_space	pointer
==	O
NULL	O
)	O
{	O
closedir	function
(	O
dirp	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
namep	pointer
=	O
name_space	pointer
;	O
while	O
(	O
(	O
dp	pointer
=	O
readdir	function
(	O
dirp	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
dp	pointer
->	O
d_name	array
[	O
0	int
]	O
!=	O
'.'	O
||	O
(	O
dp	pointer
->	O
d_name	array
[	O
1	int
]	O
!=	O
'\0'	O
&&	O
(	O
dp	pointer
->	O
d_name	array
[	O
1	int
]	O
!=	O
'.'	O
||	O
dp	pointer
->	O
d_name	array
[	O
2	int
]	O
!=	O
'\0'	O
)	O
)	O
)	O
{	O
size_t	long
namlen	long
=	O
strlen	function
(	O
dp	pointer
->	O
d_name	array
)	O
;	O
size_t	long
size_needed	long
=	O
(	O
namep	pointer
-	O
name_space	pointer
)	O
+	O
namlen	long
+	O
2	int
;	O
if	O
(	O
(	O
included_patterns	pointer
||	O
excluded_patterns	pointer
)	O
&&	O
!	O
isdir1	function
(	O
dir	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
)	O
{	O
if	O
(	O
included_patterns	pointer
&&	O
excluded_file_name	function
(	O
included_patterns	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
)	O
continue	O
;	O
if	O
(	O
excluded_patterns	pointer
&&	O
excluded_file_name	function
(	O
excluded_patterns	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
)	O
continue	O
;	O
}	O
if	O
(	O
excluded_directory_patterns	pointer
&&	O
isdir1	function
(	O
dir	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
)	O
{	O
if	O
(	O
excluded_directory_patterns	pointer
&&	O
excluded_file_name	function
(	O
excluded_directory_patterns	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
)	O
continue	O
;	O
}	O
if	O
(	O
size_needed	long
>	O
name_size	long
)	O
{	O
char	O
*	O
new_name_space	pointer
;	O
while	O
(	O
size_needed	long
>	O
name_size	long
)	O
name_size	long
+=	O
1024	int
;	O
new_name_space	pointer
=	O
realloc	function
(	O
name_space	pointer
,	O
name_size	long
)	O
;	O
if	O
(	O
new_name_space	pointer
==	O
NULL	O
)	O
{	O
closedir	function
(	O
dirp	pointer
)	O
;	O
goto	O
fail	O
;	O
}	O
namep	pointer
=	O
new_name_space	pointer
+	O
(	O
namep	pointer
-	O
name_space	pointer
)	O
;	O
name_space	pointer
=	O
new_name_space	pointer
;	O
}	O
strcpy	function
(	O
namep	pointer
,	O
dp	pointer
->	O
d_name	array
)	O
;	O
namep	pointer
+=	O
namlen	long
+	O
1	int
;	O
}	O
}	O
*	O
namep	pointer
=	O
'\0'	O
;	O
if	O
(	O
CLOSEDIR	O
(	O
dirp	pointer
)	O
)	O
{	O
fail	O
:	O
free	function
(	O
name_space	pointer
)	O
;	O
name_space	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
path	pointer
)	O
{	O
free	function
(	O
path	pointer
)	O
;	O
path	pointer
=	O
NULL	O
;	O
pathlen	long
=	O
0	int
;	O
}	O
return	O
name_space	pointer
;	O
}	O
