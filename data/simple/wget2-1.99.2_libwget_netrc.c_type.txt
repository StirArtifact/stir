struct	O
wget_netrc_db_st	struct
{	O
wget_hashmap	struct
*	O
machines	pointer
;	O
}	O
;	O
__attribute__	O
(	O
(	O
no_sanitize	O
(	O
"integer"	pointer
)	O
)	O
)	O
WGET_GCC_PURE	O
static	O
unsigned	O
int	O
hash_netrc	function
(	O
const	O
wget_netrc	struct
*	O
netrc	pointer
)	O
{	O
unsigned	O
int	O
hash	pointer
=	O
0	int
;	O
const	O
unsigned	O
char	O
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
netrc	pointer
->	O
host	pointer
;	O
*	O
p	pointer
;	O
p	pointer
++	O
)	O
hash	pointer
=	O
hash	pointer
*	O
101	int
+	O
*	O
p	pointer
;	O
return	O
hash	pointer
;	O
}	O
WGET_GCC_NONNULL_ALL	O
WGET_GCC_PURE	O
static	O
int	O
compare_netrc	function
(	O
const	O
wget_netrc	struct
*	O
h1	pointer
,	O
const	O
wget_netrc	struct
*	O
h2	pointer
)	O
{	O
return	O
wget_strcmp	function
(	O
h1	pointer
->	O
host	pointer
,	O
h2	pointer
->	O
host	pointer
)	O
;	O
}	O
wget_netrc	struct
*	O
wget_netrc_init	function
(	O
wget_netrc	struct
*	O
netrc	pointer
)	O
{	O
if	O
(	O
!	O
netrc	pointer
)	O
{	O
if	O
(	O
!	O
(	O
netrc	pointer
=	O
wget_calloc	function
(	O
1	int
,	O
sizeof	O
(	O
wget_netrc	struct
)	O
)	O
)	O
)	O
return	O
NULL	O
;	O
}	O
else	O
memset	function
(	O
netrc	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
netrc	pointer
)	O
)	O
;	O
return	O
netrc	pointer
;	O
}	O
void	O
wget_netrc_deinit	function
(	O
wget_netrc	struct
*	O
netrc	pointer
)	O
{	O
if	O
(	O
netrc	pointer
)	O
{	O
xfree	O
(	O
netrc	pointer
->	O
host	pointer
)	O
;	O
xfree	O
(	O
netrc	pointer
->	O
login	pointer
)	O
;	O
xfree	O
(	O
netrc	pointer
->	O
password	pointer
)	O
;	O
}	O
}	O
void	O
wget_netrc_free	function
(	O
wget_netrc	struct
*	O
netrc	pointer
)	O
{	O
if	O
(	O
netrc	pointer
)	O
{	O
wget_netrc_deinit	function
(	O
netrc	pointer
)	O
;	O
xfree	O
(	O
netrc	pointer
)	O
;	O
}	O
}	O
wget_netrc	struct
*	O
wget_netrc_new	function
(	O
const	O
char	O
*	O
machine	pointer
,	O
const	O
char	O
*	O
login	pointer
,	O
const	O
char	O
*	O
password	pointer
)	O
{	O
wget_netrc	struct
*	O
netrc	pointer
=	O
wget_netrc_init	function
(	O
NULL	O
)	O
;	O
if	O
(	O
netrc	pointer
)	O
{	O
netrc	pointer
->	O
host	pointer
=	O
wget_strdup	function
(	O
machine	pointer
)	O
;	O
netrc	pointer
->	O
login	pointer
=	O
wget_strdup	function
(	O
login	pointer
)	O
;	O
netrc	pointer
->	O
password	pointer
=	O
wget_strdup	function
(	O
password	pointer
)	O
;	O
}	O
return	O
netrc	pointer
;	O
}	O
wget_netrc	struct
*	O
wget_netrc_get	function
(	O
const	O
wget_netrc_db	struct
*	O
netrc_db	pointer
,	O
const	O
char	O
*	O
host	pointer
)	O
{	O
if	O
(	O
netrc_db	pointer
)	O
{	O
wget_netrc	struct
netrc	pointer
,	O
*	O
netrcp	pointer
;	O
netrc	pointer
.	O
host	pointer
=	O
host	pointer
;	O
if	O
(	O
wget_hashmap_get	function
(	O
netrc_db	pointer
->	O
machines	pointer
,	O
&	O
netrc	pointer
,	O
&	O
netrcp	pointer
)	O
)	O
return	O
netrcp	pointer
;	O
}	O
return	O
NULL	O
;	O
}	O
wget_netrc_db	struct
*	O
wget_netrc_db_init	function
(	O
wget_netrc_db	struct
*	O
netrc_db	pointer
)	O
{	O
wget_hashmap	struct
*	O
machines	pointer
=	O
wget_hashmap_create	function
(	O
16	int
,	O
(	O
wget_hashmap_hash_fn	function
*	O
)	O
hash_netrc	function
,	O
(	O
wget_hashmap_compare_fn	function
*	O
)	O
compare_netrc	function
)	O
;	O
if	O
(	O
!	O
machines	pointer
)	O
return	O
NULL	O
;	O
if	O
(	O
!	O
netrc_db	pointer
)	O
{	O
if	O
(	O
!	O
(	O
netrc_db	pointer
=	O
wget_calloc	function
(	O
1	int
,	O
sizeof	O
(	O
wget_netrc_db	struct
)	O
)	O
)	O
)	O
{	O
wget_hashmap_free	function
(	O
&	O
machines	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
else	O
memset	function
(	O
netrc_db	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
netrc_db	pointer
)	O
)	O
;	O
wget_hashmap_set_key_destructor	function
(	O
machines	pointer
,	O
(	O
wget_hashmap_key_destructor	function
*	O
)	O
wget_netrc_free	function
)	O
;	O
wget_hashmap_set_value_destructor	function
(	O
machines	pointer
,	O
(	O
wget_hashmap_value_destructor	function
*	O
)	O
wget_netrc_free	function
)	O
;	O
netrc_db	pointer
->	O
machines	pointer
=	O
machines	pointer
;	O
return	O
netrc_db	pointer
;	O
}	O
void	O
wget_netrc_db_deinit	function
(	O
wget_netrc_db	struct
*	O
netrc_db	pointer
)	O
{	O
if	O
(	O
netrc_db	pointer
)	O
{	O
wget_hashmap_free	function
(	O
&	O
netrc_db	pointer
->	O
machines	pointer
)	O
;	O
}	O
}	O
void	O
wget_netrc_db_free	function
(	O
wget_netrc_db	struct
*	O
*	O
netrc_db	pointer
)	O
{	O
if	O
(	O
netrc_db	pointer
)	O
{	O
wget_netrc_db_deinit	function
(	O
*	O
netrc_db	pointer
)	O
;	O
xfree	O
(	O
*	O
netrc_db	pointer
)	O
;	O
}	O
}	O
void	O
wget_netrc_db_add	function
(	O
wget_netrc_db	struct
*	O
netrc_db	pointer
,	O
wget_netrc	struct
*	O
netrc	pointer
)	O
{	O
if	O
(	O
!	O
netrc	pointer
)	O
return	O
;	O
if	O
(	O
!	O
netrc_db	pointer
)	O
{	O
wget_netrc_free	function
(	O
netrc	pointer
)	O
;	O
return	O
;	O
}	O
debug_printf	O
(	O
"add .netrc %s (login=%s, password=*)\n"	pointer
,	O
netrc	pointer
->	O
host	pointer
,	O
netrc	pointer
->	O
login	pointer
)	O
;	O
wget_hashmap_put	function
(	O
netrc_db	pointer
->	O
machines	pointer
,	O
netrc	pointer
,	O
netrc	pointer
)	O
;	O
}	O
int	O
wget_netrc_db_load	function
(	O
wget_netrc_db	struct
*	O
netrc_db	pointer
,	O
const	O
char	O
*	O
fname	pointer
)	O
{	O
FILE	struct
*	O
fp	pointer
;	O
if	O
(	O
!	O
netrc_db	pointer
||	O
!	O
fname	pointer
||	O
!	O
*	O
fname	pointer
)	O
return	O
WGET_E_INVALID	int
;	O
if	O
(	O
!	O
(	O
fp	pointer
=	O
fopen	function
(	O
fname	pointer
,	O
"r"	pointer
)	O
)	O
)	O
return	O
WGET_E_OPEN	int
;	O
wget_netrc	struct
netrc	pointer
;	O
char	O
*	O
buf	pointer
=	O
NULL	O
,	O
*	O
linep	pointer
,	O
*	O
p	pointer
,	O
*	O
key	int
=	O
NULL	O
;	O
size_t	long
bufsize	long
=	O
0	int
;	O
ssize_t	long
buflen	long
;	O
int	O
in_macdef	int
=	O
0	int
,	O
in_machine	int
=	O
0	int
,	O
nentries	int
=	O
0	int
;	O
while	O
(	O
(	O
buflen	long
=	O
wget_getline	function
(	O
&	O
buf	pointer
,	O
&	O
bufsize	long
,	O
fp	pointer
)	O
)	O
>=	O
0	int
)	O
{	O
linep	pointer
=	O
buf	pointer
;	O
while	O
(	O
isspace	function
(	O
*	O
linep	pointer
)	O
)	O
linep	pointer
++	O
;	O
if	O
(	O
*	O
linep	pointer
==	O
'#'	O
)	O
continue	O
;	O
while	O
(	O
buflen	long
>	O
0	int
&&	O
(	O
buf	pointer
[	O
buflen	long
]	O
==	O
'\n'	O
||	O
buf	pointer
[	O
buflen	long
]	O
==	O
'\r'	O
)	O
)	O
buf	pointer
[	O
--	O
buflen	long
]	O
=	O
0	int
;	O
if	O
(	O
!	O
*	O
linep	pointer
)	O
{	O
in_macdef	int
=	O
0	int
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
in_macdef	int
)	O
continue	O
;	O
do	O
{	O
xfree	O
(	O
key	int
)	O
;	O
while	O
(	O
isspace	function
(	O
*	O
linep	pointer
)	O
)	O
linep	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
linep	pointer
;	O
*	O
linep	pointer
&&	O
!	O
isspace	function
(	O
*	O
linep	pointer
)	O
;	O
)	O
linep	pointer
++	O
;	O
if	O
(	O
!	O
(	O
key	int
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
linep	pointer
-	O
p	pointer
)	O
)	O
)	O
{	O
xfree	O
(	O
buf	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
return	O
WGET_E_MEMORY	int
;	O
}	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"machine"	pointer
)	O
||	O
!	O
strcmp	function
(	O
key	int
,	O
"default"	pointer
)	O
)	O
{	O
if	O
(	O
in_machine	int
)	O
wget_netrc_db_add	function
(	O
netrc_db	pointer
,	O
wget_memdup	function
(	O
&	O
netrc	pointer
,	O
sizeof	O
(	O
netrc	pointer
)	O
)	O
)	O
;	O
wget_netrc_init	function
(	O
&	O
netrc	pointer
)	O
;	O
in_machine	int
=	O
1	int
;	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"default"	pointer
)	O
)	O
{	O
netrc	pointer
.	O
host	pointer
=	O
wget_strdup	function
(	O
"default"	pointer
)	O
;	O
continue	O
;	O
}	O
}	O
else	O
if	O
(	O
!	O
in_machine	int
)	O
continue	O
;	O
while	O
(	O
isspace	function
(	O
*	O
linep	pointer
)	O
)	O
linep	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
linep	pointer
;	O
*	O
linep	pointer
&&	O
!	O
isspace	function
(	O
*	O
linep	pointer
)	O
;	O
)	O
linep	pointer
++	O
;	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"machine"	pointer
)	O
)	O
{	O
if	O
(	O
!	O
netrc	pointer
.	O
host	pointer
)	O
netrc	pointer
.	O
host	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
linep	pointer
-	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"login"	pointer
)	O
)	O
{	O
if	O
(	O
!	O
netrc	pointer
.	O
login	pointer
)	O
netrc	pointer
.	O
login	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
linep	pointer
-	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"password"	pointer
)	O
)	O
{	O
if	O
(	O
!	O
netrc	pointer
.	O
password	pointer
)	O
netrc	pointer
.	O
password	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
linep	pointer
-	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"port"	pointer
)	O
)	O
{	O
netrc	pointer
.	O
port	short
=	O
(	O
uint16_t	short
)	O
atoi	function
(	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"force"	pointer
)	O
)	O
{	O
netrc	pointer
.	O
force	bool
=	O
!	O
wget_strncasecmp_ascii	function
(	O
"yes"	pointer
,	O
p	pointer
,	O
3	int
)	O
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
key	int
,	O
"macdef"	pointer
)	O
)	O
{	O
in_macdef	int
=	O
1	int
;	O
}	O
}	O
while	O
(	O
*	O
linep	pointer
)	O
;	O
xfree	O
(	O
key	int
)	O
;	O
}	O
if	O
(	O
in_machine	int
)	O
wget_netrc_db_add	function
(	O
netrc_db	pointer
,	O
wget_memdup	function
(	O
&	O
netrc	pointer
,	O
sizeof	O
(	O
netrc	pointer
)	O
)	O
)	O
;	O
xfree	O
(	O
buf	pointer
)	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
nentries	int
=	O
wget_hashmap_size	function
(	O
netrc_db	pointer
->	O
machines	pointer
)	O
;	O
debug_printf	O
(	O
"loaded %d .netrc %s\n"	pointer
,	O
nentries	int
,	O
nentries	int
!=	O
1	int
?	O
"entries"	pointer
:	O
"entry"	pointer
)	O
;	O
return	O
nentries	int
;	O
}	O
