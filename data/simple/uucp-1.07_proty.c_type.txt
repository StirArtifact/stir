const	O
char	O
proty_id	array
[	O
]	O
=	O
"$Id: proty.c,v 1.9 2003/05/29 06:00:49 ian Rel $"	pointer
;	O
static	O
size_t	long
iYlocal_packsize	long
=	O
IYPACKSIZE	O
;	O
static	O
size_t	long
iYremote_packsize	long
=	O
IYPACKSIZE	O
;	O
static	O
unsigned	O
short	O
iYlocal_pktnum	short
;	O
static	O
unsigned	O
short	O
iYremote_pktnum	short
;	O
static	O
int	O
cYtimeout	int
=	O
CYTIMEOUT	O
;	O
static	O
char	O
*	O
zYbuf	pointer
;	O
struct	O
uuconf_cmdtab	struct
asYproto_params	array
[	O
]	O
=	O
{	O
{	O
"timeout"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	pointer
)	O
&	O
cYtimeout	int
,	O
NULL	O
}	O
,	O
{	O
"packet-size"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
(	O
pointer	pointer
)	O
&	O
iYlocal_packsize	long
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
boolean	int
fyxchg_syncs	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fywait_for_packet	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
boolean	int
*	O
pfexit	pointer
)	O
)	O
;	O
static	O
unsigned	O
short	O
iychecksum	function
P	O
(	O
(	O
const	O
char	O
*	O
z	pointer
,	O
size_t	long
c	long
)	O
)	O
;	O
static	O
unsigned	O
short	O
iychecksum2	function
P	O
(	O
(	O
const	O
char	O
*	O
zfirst	pointer
,	O
size_t	long
cfirst	long
,	O
const	O
char	O
*	O
zsecond	pointer
,	O
size_t	long
csecond	long
)	O
)	O
;	O
static	O
boolean	int
fywait_for_header	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
unsigned	O
short	O
header	array
[	O
3	int
]	O
,	O
int	O
timeout	int
)	O
)	O
;	O
static	O
boolean	int
fysend_pkt	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
void	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
fysend_control	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
int	O
itype	int
)	O
)	O
;	O
static	O
boolean	int
fyread_data	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
size_t	long
clen	long
,	O
int	O
timeout	int
)	O
)	O
;	O
static	O
boolean	int
fyxchg_syncs	function
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
char	O
inithdr	array
[	O
Y_INIT_HDR_LEN	O
]	O
;	O
unsigned	O
short	O
header	array
[	O
3	int
]	O
;	O
unsigned	O
short	O
ichk	short
;	O
size_t	long
clen	long
,	O
cfirst	long
;	O
int	O
rpktsize	int
;	O
inithdr	array
[	O
Y_INIT_HDR_VERSION_OFF	O
]	O
=	O
Y_VERSION	O
;	O
inithdr	array
[	O
Y_INIT_HDR_PKTSIZE_OFF	O
]	O
=	O
iYlocal_packsize	long
>>	O
8	int
;	O
TOLITTLE	O
(	O
inithdr	array
+	O
Y_INIT_HDR_FLAGS_OFF	O
,	O
0	int
)	O
;	O
if	O
(	O
!	O
fysend_pkt	function
(	O
qdaemon	pointer
,	O
inithdr	array
,	O
Y_INIT_HDR_LEN	O
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
fywait_for_header	function
(	O
qdaemon	pointer
,	O
header	array
,	O
cYtimeout	int
)	O
)	O
return	O
FALSE	O
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fyxchg_syncs: Got sync header"	pointer
)	O
;	O
clen	long
=	O
header	array
[	O
YFRAME_LEN	O
]	O
;	O
if	O
(	O
clen	long
<	O
MIN_Y_SYNC	O
||	O
clen	long
>	O
MAX_Y_SYNC	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Bad 'y' protocol sync packet length"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fyread_data	function
(	O
qdaemon	pointer
,	O
clen	long
,	O
cYtimeout	int
)	O
)	O
return	O
FALSE	O
;	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
ichk	short
=	O
iychecksum2	function
(	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
cfirst	long
,	O
abPrecbuf	array
,	O
clen	long
-	O
cfirst	long
)	O
;	O
rpktsize	int
=	O
BUCHAR	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
]	O
)	O
;	O
if	O
(	O
rpktsize	int
==	O
0	int
||	O
header	array
[	O
YFRAME_CHK	O
]	O
!=	O
ichk	short
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Bad 'y' protocol sync packet"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
iYremote_packsize	long
=	O
rpktsize	int
<<	O
8	int
;	O
if	O
(	O
iYremote_packsize	long
>	O
iYlocal_packsize	long
)	O
iYremote_packsize	long
=	O
iYlocal_packsize	long
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
clen	long
)	O
%	O
CRECBUFLEN	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fystart	function
(	O
qdaemon	pointer
,	O
pzlog	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
*	O
pzlog	pointer
;	O
{	O
*	O
pzlog	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
fconn_set	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
PARITYSETTING_NONE	int
,	O
STRIPSETTING_EIGHTBITS	int
,	O
XONXOFF_OFF	int
)	O
)	O
return	O
FALSE	O
;	O
iYlocal_pktnum	short
=	O
iYremote_pktnum	short
=	O
0	int
;	O
iYlocal_packsize	long
&=	O
~	O
0xff	int
;	O
if	O
(	O
iYlocal_packsize	long
<	O
256	int
||	O
iYlocal_packsize	long
>	O
(	O
16	int
*	O
1024	int
)	O
)	O
iYlocal_packsize	long
=	O
IYPACKSIZE	O
;	O
if	O
(	O
!	O
fyxchg_syncs	function
(	O
qdaemon	pointer
)	O
)	O
{	O
cYtimeout	int
=	O
CYTIMEOUT	O
;	O
iYlocal_packsize	long
=	O
IYPACKSIZE	O
;	O
return	O
FALSE	O
;	O
}	O
zYbuf	pointer
=	O
(	O
char	O
*	O
)	O
xmalloc	function
(	O
CYBUFSIZE	O
+	O
CYFRAMELEN	O
)	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fyshutdown	function
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zYbuf	pointer
)	O
;	O
zYbuf	pointer
=	O
NULL	O
;	O
cYtimeout	int
=	O
CYTIMEOUT	O
;	O
iYlocal_packsize	long
=	O
IYPACKSIZE	O
;	O
return	O
TRUE	O
;	O
}	O
boolean	int
fysendcmd	function
(	O
qdaemon	pointer
,	O
z	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
z	pointer
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
{	O
size_t	long
clen	long
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fysendcmd: Sending command \"%s\""	pointer
,	O
z	pointer
)	O
;	O
clen	long
=	O
strlen	function
(	O
z	pointer
)	O
+	O
1	int
;	O
while	O
(	O
clen	long
>	O
0	int
)	O
{	O
size_t	long
csize	long
;	O
csize	long
=	O
clen	long
;	O
if	O
(	O
csize	long
>	O
iYremote_packsize	long
)	O
csize	long
=	O
iYremote_packsize	long
;	O
if	O
(	O
!	O
fysend_pkt	function
(	O
qdaemon	pointer
,	O
z	pointer
,	O
csize	long
)	O
)	O
return	O
FALSE	O
;	O
z	pointer
+=	O
csize	long
;	O
clen	long
-=	O
csize	long
;	O
}	O
return	O
TRUE	O
;	O
}	O
char	O
*	O
zygetspace	function
(	O
qdaemon	pointer
,	O
pclen	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	long
*	O
pclen	pointer
;	O
{	O
*	O
pclen	pointer
=	O
iYremote_packsize	long
;	O
return	O
zYbuf	pointer
+	O
CYFRAMELEN	O
;	O
}	O
boolean	int
fysenddata	function
(	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
,	O
ilocal	int
,	O
iremote	int
,	O
ipos	long
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
;	O
int	O
ilocal	int
ATTRIBUTE_UNUSED	O
;	O
int	O
iremote	int
ATTRIBUTE_UNUSED	O
;	O
long	O
ipos	long
ATTRIBUTE_UNUSED	O
;	O
{	O
if	O
(	O
cdata	long
>	O
iYremote_packsize	long
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"fysend_packet: Packet size too large"	pointer
)	O
;	O
TOLITTLE	O
(	O
zYbuf	pointer
+	O
YFRAME_SEQ_OFF	O
,	O
iYlocal_pktnum	short
)	O
;	O
++	O
iYlocal_pktnum	short
;	O
TOLITTLE	O
(	O
zYbuf	pointer
+	O
YFRAME_LEN_OFF	O
,	O
cdata	long
)	O
;	O
TOLITTLE	O
(	O
zYbuf	pointer
+	O
YFRAME_CHK_OFF	O
,	O
iychecksum	function
(	O
zdata	pointer
,	O
cdata	long
)	O
)	O
;	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zYbuf	pointer
,	O
cdata	long
+	O
CYFRAMELEN	O
,	O
FALSE	O
)	O
;	O
}	O
boolean	int
fywait	function
(	O
qdaemon	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
boolean	int
fexit	int
=	O
FALSE	O
;	O
while	O
(	O
!	O
fexit	int
)	O
{	O
if	O
(	O
!	O
fywait_for_packet	function
(	O
qdaemon	pointer
,	O
&	O
fexit	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fyfile	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
fstart	int
,	O
fsend	int
,	O
cbytes	long
,	O
pfhandled	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
ATTRIBUTE_UNUSED	O
;	O
boolean	int
fstart	int
;	O
boolean	int
fsend	int
;	O
long	O
cbytes	long
ATTRIBUTE_UNUSED	O
;	O
boolean	int
*	O
pfhandled	pointer
;	O
{	O
unsigned	O
short	O
header	array
[	O
3	int
]	O
;	O
*	O
pfhandled	pointer
=	O
FALSE	O
;	O
if	O
(	O
!	O
fstart	int
)	O
{	O
if	O
(	O
fsend	int
)	O
{	O
if	O
(	O
!	O
fywait_for_header	function
(	O
qdaemon	pointer
,	O
header	array
,	O
cYtimeout	int
*	O
2	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
header	array
[	O
YFRAME_CTL	O
]	O
!=	O
(	O
unsigned	O
short	O
)	O
YPKT_ACK	O
)	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fyfile: Error from remote: 0x%04X"	pointer
,	O
header	array
[	O
1	int
]	O
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Received 'y' protocol error from remote"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
else	O
{	O
return	O
fysend_control	function
(	O
qdaemon	pointer
,	O
YPKT_ACK	O
)	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fysend_control	function
(	O
qdaemon	pointer
,	O
itype	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
int	O
itype	int
;	O
{	O
char	O
header	array
[	O
CYFRAMELEN	O
]	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_SEQ_OFF	O
,	O
iYlocal_pktnum	short
)	O
;	O
iYlocal_pktnum	short
++	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_CTL_OFF	O
,	O
itype	int
)	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_CHK_OFF	O
,	O
0	int
)	O
;	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
header	array
,	O
CYFRAMELEN	O
,	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
fysend_pkt	function
(	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
void	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
;	O
{	O
char	O
header	array
[	O
CYFRAMELEN	O
]	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_SEQ_OFF	O
,	O
iYlocal_pktnum	short
)	O
;	O
iYlocal_pktnum	short
++	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_LEN_OFF	O
,	O
cdata	long
)	O
;	O
TOLITTLE	O
(	O
header	array
+	O
YFRAME_CHK_OFF	O
,	O
iychecksum	function
(	O
zdata	pointer
,	O
cdata	long
)	O
)	O
;	O
if	O
(	O
!	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
header	array
,	O
CYFRAMELEN	O
,	O
FALSE	O
)	O
)	O
return	O
FALSE	O
;	O
return	O
fsend_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
zdata	pointer
,	O
cdata	long
,	O
FALSE	O
)	O
;	O
}	O
static	O
boolean	int
fyread_data	function
(	O
qdaemon	pointer
,	O
clen	long
,	O
timeout	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
size_t	long
clen	long
;	O
int	O
timeout	int
;	O
{	O
int	O
cinbuf	int
;	O
size_t	long
crec	long
;	O
cinbuf	int
=	O
iPrecend	int
-	O
iPrecstart	int
;	O
if	O
(	O
cinbuf	int
<	O
0	int
)	O
cinbuf	int
+=	O
CRECBUFLEN	O
;	O
if	O
(	O
(	O
size_t	long
)	O
cinbuf	int
<	O
clen	long
)	O
{	O
if	O
(	O
!	O
freceive_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
clen	long
-	O
cinbuf	int
,	O
&	O
crec	long
,	O
timeout	int
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
cinbuf	int
+=	O
crec	long
;	O
if	O
(	O
(	O
size_t	long
)	O
cinbuf	int
<	O
clen	long
)	O
{	O
if	O
(	O
!	O
freceive_data	function
(	O
qdaemon	pointer
->	O
qconn	pointer
,	O
clen	long
-	O
cinbuf	int
,	O
&	O
crec	long
,	O
timeout	int
,	O
TRUE	O
)	O
)	O
return	O
FALSE	O
;	O
}	O
cinbuf	int
+=	O
crec	long
;	O
if	O
(	O
(	O
size_t	long
)	O
cinbuf	int
<	O
clen	long
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Timed out waiting for data"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fywait_for_header	function
(	O
qdaemon	pointer
,	O
header	array
,	O
timeout	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
unsigned	O
short	O
header	array
[	O
3	int
]	O
;	O
int	O
timeout	int
;	O
{	O
if	O
(	O
!	O
fyread_data	function
(	O
qdaemon	pointer
,	O
CYFRAMELEN	O
,	O
timeout	int
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
iPrecstart	int
<=	O
(	O
CRECBUFLEN	O
-	O
CYFRAMELEN	O
)	O
)	O
{	O
header	array
[	O
0	int
]	O
=	O
FROMLITTLE	O
(	O
abPrecbuf	array
+	O
iPrecstart	int
)	O
;	O
header	array
[	O
1	int
]	O
=	O
FROMLITTLE	O
(	O
abPrecbuf	array
+	O
iPrecstart	int
+	O
2	int
)	O
;	O
header	array
[	O
2	int
]	O
=	O
FROMLITTLE	O
(	O
abPrecbuf	array
+	O
iPrecstart	int
+	O
4	int
)	O
;	O
}	O
else	O
{	O
register	O
int	O
i	int
,	O
j	int
;	O
for	O
(	O
i	int
=	O
j	int
=	O
0	int
;	O
j	int
<	O
CYFRAMELEN	O
;	O
i	int
++	O
,	O
j	int
+=	O
2	int
)	O
{	O
header	array
[	O
i	int
]	O
=	O
(	O
(	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
j	int
+	O
1	int
)	O
%	O
CRECBUFLEN	O
]	O
&	O
0xff	int
)	O
<<	O
8	int
)	O
+	O
(	O
abPrecbuf	array
[	O
(	O
iPrecstart	int
+	O
j	int
)	O
%	O
CRECBUFLEN	O
]	O
&	O
0xff	int
)	O
)	O
;	O
}	O
}	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
CYFRAMELEN	O
)	O
%	O
CRECBUFLEN	O
;	O
DEBUG_MESSAGE3	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fywait_for_header: Got header: 0x%04X, 0x%04X, 0x%04X"	pointer
,	O
header	array
[	O
0	int
]	O
,	O
header	array
[	O
1	int
]	O
,	O
header	array
[	O
2	int
]	O
)	O
;	O
if	O
(	O
header	array
[	O
YFRAME_SEQ	O
]	O
!=	O
iYremote_pktnum	short
++	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Incorrect 'y' packet sequence"	pointer
)	O
;	O
fysend_control	function
(	O
qdaemon	pointer
,	O
YPKT_BAD	O
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fywait_for_packet	function
(	O
qdaemon	pointer
,	O
pfexit	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
boolean	int
*	O
pfexit	pointer
;	O
{	O
unsigned	O
short	O
header	array
[	O
3	int
]	O
,	O
ichk	short
;	O
size_t	long
clen	long
,	O
cfirst	long
;	O
if	O
(	O
!	O
fywait_for_header	function
(	O
qdaemon	pointer
,	O
header	array
,	O
cYtimeout	int
)	O
)	O
return	O
FALSE	O
;	O
clen	long
=	O
header	array
[	O
YFRAME_LEN	O
]	O
;	O
if	O
(	O
clen	long
==	O
0	int
&&	O
pfexit	pointer
!=	O
NULL	O
)	O
{	O
return	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
,	O
0	int
,	O
abPrecbuf	array
,	O
0	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
;	O
}	O
if	O
(	O
clen	long
&	O
0x8000	int
)	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fywait_for_packet: Error from remote: 0x%04X"	pointer
,	O
header	array
[	O
YFRAME_CTL	O
]	O
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Remote error packet"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
clen	long
>	O
iYlocal_packsize	long
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Packet too large"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fyread_data	function
(	O
qdaemon	pointer
,	O
clen	long
,	O
cYtimeout	int
)	O
)	O
return	O
FALSE	O
;	O
cfirst	long
=	O
CRECBUFLEN	O
-	O
iPrecstart	int
;	O
if	O
(	O
cfirst	long
>	O
clen	long
)	O
cfirst	long
=	O
clen	long
;	O
if	O
(	O
cfirst	long
==	O
clen	long
)	O
ichk	short
=	O
iychecksum	function
(	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
clen	long
)	O
;	O
else	O
ichk	short
=	O
iychecksum2	function
(	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
cfirst	long
,	O
abPrecbuf	array
,	O
clen	long
-	O
cfirst	long
)	O
;	O
if	O
(	O
header	array
[	O
YFRAME_CHK	O
]	O
!=	O
ichk	short
)	O
{	O
DEBUG_MESSAGE2	O
(	O
DEBUG_PROTO	O
|	O
DEBUG_ABNORMAL	O
,	O
"fywait_for_packet: Bad checksum 0x%x != 0x%x"	pointer
,	O
header	array
[	O
YFRAME_CHK	O
]	O
,	O
ichk	short
)	O
;	O
fysend_control	function
(	O
qdaemon	pointer
,	O
YPKT_ERR	O
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Checksum error"	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
pfexit	pointer
!=	O
NULL	O
&&	O
!	O
fgot_data	function
(	O
qdaemon	pointer
,	O
abPrecbuf	array
+	O
iPrecstart	int
,	O
cfirst	long
,	O
abPrecbuf	array
,	O
clen	long
-	O
cfirst	long
,	O
-	O
1	int
,	O
-	O
1	int
,	O
(	O
long	O
)	O
-	O
1	int
,	O
TRUE	O
,	O
pfexit	pointer
)	O
)	O
return	O
FALSE	O
;	O
iPrecstart	int
=	O
(	O
iPrecstart	int
+	O
clen	long
)	O
%	O
CRECBUFLEN	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
unsigned	O
short	O
iychecksum	function
(	O
z	pointer
,	O
c	long
)	O
register	O
const	O
char	O
*	O
z	pointer
;	O
register	O
size_t	long
c	long
;	O
{	O
register	O
unsigned	O
short	O
ichk	short
;	O
ichk	short
=	O
0xffff	int
;	O
while	O
(	O
c	long
--	O
>	O
0	int
)	O
{	O
ROTATE	O
(	O
ichk	short
)	O
;	O
ichk	short
+=	O
BUCHAR	O
(	O
*	O
z	pointer
++	O
)	O
;	O
}	O
return	O
ichk	short
;	O
}	O
static	O
unsigned	O
short	O
iychecksum2	function
(	O
zfirst	pointer
,	O
cfirst	long
,	O
zsecond	pointer
,	O
csecond	long
)	O
const	O
char	O
*	O
zfirst	pointer
;	O
size_t	long
cfirst	long
;	O
const	O
char	O
*	O
zsecond	pointer
;	O
size_t	long
csecond	long
;	O
{	O
register	O
unsigned	O
short	O
ichk	short
;	O
register	O
const	O
char	O
*	O
z	pointer
;	O
register	O
size_t	long
c	long
;	O
z	pointer
=	O
zfirst	pointer
;	O
c	long
=	O
cfirst	long
+	O
csecond	long
;	O
ichk	short
=	O
0xffff	int
;	O
while	O
(	O
c	long
--	O
>	O
0	int
)	O
{	O
ROTATE	O
(	O
ichk	short
)	O
;	O
ichk	short
+=	O
BUCHAR	O
(	O
*	O
z	pointer
++	O
)	O
;	O
if	O
(	O
--	O
cfirst	long
==	O
0	int
)	O
z	pointer
=	O
zsecond	pointer
;	O
}	O
return	O
ichk	short
;	O
}	O
