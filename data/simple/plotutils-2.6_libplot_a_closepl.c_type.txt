static	O
const	O
char	O
*	O
const	O
_ai_symbol_reencoding	pointer
=	O
"32/space\n/exclam\n/universal\n/numbersign\n/existential\n/percent\n/ampersand\n/suchthat\n/parenleft\n/parenright\n/asteriskmath\n/plus\n/comma\n/minus\n/period\n/slash\n/zero\n/one\n/two\n/three\n/four\n/five\n/six\n/seven\n/eight\n/nine\n/colon\n/semicolon\n/less\n/equal\n/greater\n/question\n/congruent\n/Alpha\n/Beta\n/Chi\n/Delta\n/Epsilon\n/Phi\n/Gamma\n/Eta\n/Iota\n/theta1\n/Kappa\n/Lambda\n/Mu\n/Nu\n/Omicron\n/Pi\n/Theta\n/Rho\n/Sigma\n/Tau\n/Upsilon\n/sigma1\n/Omega\n/Xi\n/Psi\n/Zeta\n/bracketleft\n/therefore\n/bracketright\n/perpendicular\n/underscore\n/radicalex\n/alpha\n/beta\n/chi\n/delta\n/epsilon\n/phi\n/gamma\n/eta\n/iota\n/phi1\n/kappa\n/lambda\n/mu\n/nu\n/omicron\n/pi\n/theta\n/rho\n/sigma\n/tau\n/upsilon\n/omega1\n/omega\n/xi\n/psi\n/zeta\n/braceleft\n/bar\n/braceright\n/similar\n161/Upsilon1\n/minute\n/lessequal\n/fraction\n/infinity\n/florin\n/club\n/diamond\n/heart\n/spade\n/arrowboth\n/arrowleft\n/arrowup\n/arrowright\n/arrowdown\n/degree\n/plusminus\n/second\n/greaterequal\n/multiply\n/proportional\n/partialdiff\n/bullet\n/divide\n/notequal\n/equivalence\n/approxequal\n/ellipsis\n/arrowvertex\n/arrowhorizex\n/carriagereturn\n/aleph\n/Ifraktur\n/Rfraktur\n/weierstrass\n/circlemultiply\n/circleplus\n/emptyset\n/intersection\n/union\n/propersuperset\n/reflexsuperset\n/notsubset\n/propersubset\n/reflexsubset\n/element\n/notelement\n/angle\n/gradient\n/registerserif\n/copyrightserif\n/trademarkserif\n/product\n/radical\n/dotmath\n/logicalnot\n/logicaland\n/logicalor\n/arrowdblboth\n/arrowdblleft\n/arrowdblup\n/arrowdblright\n/arrowdbldown\n/lozenge\n/angleleft\n/registersans\n/copyrightsans\n/trademarksans\n/summation\n/parenlefttp\n/parenleftex\n/parenleftbt\n/bracketlefttp\n/bracketleftex\n/bracketleftbt\n/bracelefttp\n/braceleftmid\n/braceleftbt\n/braceex\n241/angleright\n/integral\n/integraltp\n/integralex\n/integralbt\n/parenrighttp\n/parenrightex\n/parenrightbt\n/bracketrighttp\n/bracketrightex\n/bracketrightbt\n/bracerighttp\n/bracerightmid\n/bracerightbt\n"	pointer
;	O
static	O
const	O
char	O
*	O
const	O
_ai_zapf_dingbats_reencoding	pointer
=	O
"32/space\n/a1\n/a2\n/a202\n/a3\n/a4\n/a5\n/a119\n/a118\n/a117\n/a11\n/a12\n/a13\n/a14\n/a15\n/a16\n/a105\n/a17\n/a18\n/a19\n/a20\n/a21\n/a22\n/a23\n/a24\n/a25\n/a26\n/a27\n/a28\n/a6\n/a7\n/a8\n/a9\n/a10\n/a29\n/a30\n/a31\n/a32\n/a33\n/a34\n/a35\n/a36\n/a37\n/a38\n/a39\n/a40\n/a41\n/a42\n/a43\n/a44\n/a45\n/a46\n/a47\n/a48\n/a49\n/a50\n/a51\n/a52\n/a53\n/a54\n/a55\n/a56\n/a57\n/a58\n/a59\n/a60\n/a61\n/a62\n/a63\n/a64\n/a65\n/a66\n/a67\n/a68\n/a69\n/a70\n/a71\n/a72\n/a73\n/a74\n/a203\n/a75\n/a204\n/a76\n/a77\n/a78\n/a79\n/a81\n/a82\n/a83\n/a84\n/a97\n/a98\n/a99\n/a100\n160/space\n/a101\n/a102\n/a103\n/a104\n/a106\n/a107\n/a108\n/a112\n/a111\n/a110\n/a109\n/a120\n/a121\n/a122\n/a123\n/a124\n/a125\n/a126\n/a127\n/a128\n/a129\n/a130\n/a131\n/a132\n/a133\n/a134\n/a135\n/a136\n/a137\n/a138\n/a139\n/a140\n/a141\n/a142\n/a143\n/a144\n/a145\n/a146\n/a147\n/a148\n/a149\n/a150\n/a151\n/a152\n/a153\n/a154\n/a155\n/a156\n/a157\n/a158\n/a159\n/a160\n/a161\n/a163\n/a164\n/a196\n/a165\n/a192\n/a166\n/a167\n/a168\n/a169\n/a170\n/a171\n/a172\n/a173\n/a162\n/a174\n/a175\n/a176\n/a177\n/a178\n/a179\n/a193\n/a180\n/a199\n/a181\n/a200\n/a182\n241/a201\n/a183\n/a184\n/a197\n/a185\n/a194\n/a198\n/a186\n/a195\n/a187\n/a188\n/a189\n/a190\n/a191\n"	pointer
;	O
bool	enum
_pl_a_end_page	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
bool	enum
fonts_used	enum
=	O
false	int
;	O
int	O
i	int
;	O
{	O
char	O
*	O
time_s	pointer
;	O
double	O
x_min	double
,	O
x_max	double
,	O
y_min	double
,	O
y_max	double
;	O
double	O
xmid	double
,	O
ymid	double
;	O
int	O
ixmid	int
,	O
iymid	int
;	O
time_t	long
clock	function
;	O
plOutbuf	struct
*	O
page_header	pointer
;	O
page_header	pointer
=	O
_new_outbuf	function
(	O
)	O
;	O
xmid	double
=	O
0.5	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
)	O
;	O
ymid	double
=	O
0.5	int
*	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
ymin	double
+	O
_plotter	pointer
->	O
data	pointer
->	O
ymax	double
)	O
;	O
ixmid	int
=	O
IROUND	O
(	O
xmid	double
)	O
;	O
iymid	int
=	O
IROUND	O
(	O
ymid	double
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%!PS-Adobe-3.0\n%%%%Creator: GNU libplot drawing library %s\n%%%%For: (Unknown) (Unknown)\n%%%%Title: (Untitled)\n"	pointer
,	O
PL_LIBPLOT_VER_STRING	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
time	function
(	O
&	O
clock	function
)	O
;	O
time_s	pointer
=	O
ctime	function
(	O
&	O
clock	function
)	O
;	O
if	O
(	O
time_s	pointer
!=	O
NULL	O
)	O
{	O
char	O
weekday	array
[	O
32	int
]	O
,	O
month	array
[	O
32	int
]	O
,	O
day	array
[	O
32	int
]	O
,	O
hour_min_sec	array
[	O
32	int
]	O
,	O
year	array
[	O
32	int
]	O
;	O
int	O
num_matched	int
;	O
num_matched	int
=	O
sscanf	function
(	O
time_s	pointer
,	O
"%s %s %s %s %s"	pointer
,	O
weekday	array
,	O
month	array
,	O
day	array
,	O
hour_min_sec	array
,	O
year	array
)	O
;	O
if	O
(	O
num_matched	int
==	O
5	int
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%CreationDate: (%s %s %s) (%s)\n"	pointer
,	O
day	array
,	O
month	array
,	O
year	array
,	O
hour_min_sec	array
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
}	O
_bbox_of_outbuf	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
,	O
&	O
x_min	double
,	O
&	O
x_max	double
,	O
&	O
y_min	double
,	O
&	O
y_max	double
)	O
;	O
if	O
(	O
x_min	double
>	O
x_max	double
||	O
y_min	double
>	O
y_max	double
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%BoundingBox: %d %d %d %d\n"	pointer
,	O
ixmid	int
,	O
iymid	int
,	O
ixmid	int
,	O
iymid	int
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%BoundingBox: %d %d %d %d\n"	pointer
,	O
IROUND	O
(	O
x_min	double
-	O
0.5	int
)	O
,	O
IROUND	O
(	O
y_min	double
-	O
0.5	int
)	O
,	O
IROUND	O
(	O
x_max	double
+	O
0.5	int
)	O
,	O
IROUND	O
(	O
y_max	double
+	O
0.5	int
)	O
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
>=	O
AI_VERSION_5	int
)	O
{	O
if	O
(	O
x_min	double
>	O
x_max	double
||	O
y_min	double
>	O
y_max	double
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%HiResBoundingBox: %.4f %.4f %.4f %.4f\n"	pointer
,	O
xmid	double
,	O
ymid	double
,	O
xmid	double
,	O
ymid	double
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%HiResBoundingBox: %.4f %.4f %.4f %.4f\n"	pointer
,	O
x_min	double
,	O
y_min	double
,	O
x_max	double
,	O
y_max	double
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%DocumentProcessColors:"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_cyan_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
" Cyan"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_magenta_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
" Magenta"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_yellow_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
" Yellow"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_black_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
" Black"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%DocumentFonts: "	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PS_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
ps_font_used	array
[	O
i	int
]	O
)	O
{	O
if	O
(	O
fonts_used	enum
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%+ %s\n"	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%s\n"	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
fonts_used	enum
=	O
true	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PCL_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
pcl_font_used	array
[	O
i	int
]	O
)	O
{	O
if	O
(	O
fonts_used	enum
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%+ %s\n"	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%s\n"	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
fonts_used	enum
=	O
true	int
;	O
}	O
if	O
(	O
!	O
fonts_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
==	O
AI_VERSION_5	int
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%DocumentNeededResources: procset Adobe_level2_AI5 1.0 0\n%%%%+ procset Adobe_typography_AI5 1.0 0\n%%%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6\n%%%%+ procset Adobe_Illustrator_AI5 1.0 0\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI5_FileFormat 3\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
else	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%DocumentNeededResources: procset Adobe_packedarray 2.0 0\n%%%%+ procset Adobe_cmykcolor 1.1 0\n%%%%+ procset Adobe_cshow 1.1 0\n%%%%+ procset Adobe_customcolor 1.0 0\n%%%%+ procset Adobe_typography_AI3 1.0 1\n%%%%+ procset Adobe_pattern_AI3 1.0 0\n%%%%+ procset Adobe_Illustrator_AI3 1.0 1\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_ColorUsage: "	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_cyan_used	enum
||	O
_plotter	pointer
->	O
ai_magenta_used	enum
||	O
_plotter	pointer
->	O
ai_yellow_used	enum
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"Color\n"	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"Black&White\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI7_ImageSettings: 0\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_TemplateBox: %d %d %d %d\n"	pointer
,	O
ixmid	int
,	O
iymid	int
,	O
ixmid	int
,	O
iymid	int
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_TileBox: %d %d %d %d\n"	pointer
,	O
IROUND	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
)	O
,	O
0	int
,	O
IROUND	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
)	O
,	O
IROUND	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
ysize	double
)	O
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_DocumentPreview: None\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
>=	O
AI_VERSION_5	int
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI5_ArtSize: %d %d\n%%AI5_RulerUnits: %d\n%%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0\n%%AI5_TargetResolution: 800\n%%AI5_NumLayers: 1\n%%AI5_OpenViewLayers: 7\n"	pointer
,	O
IROUND	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
xsize	double
)	O
,	O
IROUND	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
ysize	double
)	O
,	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
metric	enum
?	O
4	int
:	O
0	int
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%PageOrigin:%d %d\n"	pointer
,	O
IROUND	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
)	O
,	O
0	int
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%AI3_PaperRect:%d %d %d %d\n"	pointer
,	O
-	O
IROUND	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
)	O
,	O
IROUND	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
ysize	double
)	O
,	O
IROUND	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
xsize	double
-	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
)	O
,	O
0	int
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%AI3_Margin:%d %d %d %d\n"	pointer
,	O
IROUND	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
)	O
,	O
0	int
,	O
IROUND	O
(	O
-	O
(	O
72	int
*	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
xsize	double
-	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
)	O
)	O
,	O
0	int
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
->	O
metric	enum
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI7_GridSettings: %.4f 3 %.4f 3 1 0 0.8 0.8 0.8 0.9 0.9 0.9\n"	pointer
,	O
72.0	int
/	O
2.54	int
,	O
72.0	int
/	O
2.54	int
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%EndComments\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
==	O
AI_VERSION_5	int
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%BeginProlog\n%%%%IncludeResource: procset Adobe_level2_AI5 1.0 0\n%%%%IncludeResource: procset Adobe_typography_AI5 1.0 0\n%%%%IncludeResource: procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6\n%%%%IncludeResource: procset Adobe_Illustrator_AI5 1.0 0\n%%%%EndProlog\n"	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%BeginProlog\n%%%%IncludeResource: procset Adobe_packedarray 2.0 0\nAdobe_packedarray /initialize get exec\n%%%%IncludeResource: procset Adobe_cmykcolor 1.1 0\n%%%%IncludeResource: procset Adobe_cshow 1.1 0\n%%%%IncludeResource: procset Adobe_customcolor 1.0 0\n%%%%IncludeResource: procset Adobe_typography_AI3 1.0 1\n%%%%IncludeResource: procset Adobe_pattern_AI3 1.0 0\n%%%%IncludeResource: procset Adobe_Illustrator_AI3 1.0 1\n%%%%EndProlog\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%BeginSetup\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
fonts_used	enum
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PS_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
ps_font_used	array
[	O
i	int
]	O
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%IncludeFont: %s\n"	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PCL_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
pcl_font_used	array
[	O
i	int
]	O
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%IncludeFont: %s\n"	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
==	O
AI_VERSION_5	int
)	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"Adobe_level2_AI5 /initialize get exec\nAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec\nAdobe_ColorImage_AI6 /initialize get exec\nAdobe_Illustrator_AI5 /initialize get exec\n"	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"Adobe_cmykcolor /initialize get exec\nAdobe_cshow /initialize get exec\nAdobe_customcolor /initialize get exec\nAdobe_typography_AI3 /initialize get exec\nAdobe_pattern_AI3 /initialize get exec\nAdobe_Illustrator_AI3 /initialize get exec\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
fonts_used	enum
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"[\nTE\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PS_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
ps_font_used	array
[	O
i	int
]	O
)	O
{	O
const	O
char	O
*	O
reencoding	pointer
;	O
if	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
iso8859_1	enum
)	O
reencoding	pointer
=	O
""	pointer
;	O
else	O
if	O
(	O
strcmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
"ZapfDingbats"	pointer
)	O
==	O
0	int
)	O
reencoding	pointer
=	O
_ai_zapf_dingbats_reencoding	pointer
;	O
else	O
if	O
(	O
strcmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
"Symbol"	pointer
)	O
==	O
0	int
)	O
reencoding	pointer
=	O
_ai_symbol_reencoding	pointer
;	O
else	O
reencoding	pointer
=	O
""	pointer
;	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_BeginEncoding: _%s %s\n[%s/_%s/%s 0 0 0 TZ\n%%AI3_EndEncoding AdobeType\n"	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
reencoding	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PCL_FONTS	int
;	O
i	int
++	O
)	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
pcl_font_used	array
[	O
i	int
]	O
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI3_BeginEncoding: _%s %s\n[/_%s/%s 0 0 0 TZ\n%%AI3_EndEncoding TrueType\n"	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
}	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%%%EndSetup\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
>=	O
AI_VERSION_5	int
)	O
{	O
sprintf	function
(	O
page_header	pointer
->	O
point	pointer
,	O
"%%AI5_BeginLayer\n1 1 1 1 0 0 0 79 128 255 Lb\n(Layer 1) Ln\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_header	pointer
)	O
;	O
}	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
header	pointer
=	O
page_header	pointer
;	O
}	O
{	O
plOutbuf	struct
*	O
page_trailer	pointer
;	O
page_trailer	pointer
=	O
_new_outbuf	function
(	O
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
>=	O
AI_VERSION_5	int
)	O
{	O
sprintf	function
(	O
page_trailer	pointer
->	O
point	pointer
,	O
"LB\n%%AI5_EndLayer--\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_trailer	pointer
)	O
;	O
}	O
sprintf	function
(	O
page_trailer	pointer
->	O
point	pointer
,	O
"%%%%PageTrailer\ngsave annotatepage grestore showpage\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_trailer	pointer
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
ai_version	int
==	O
AI_VERSION_5	int
)	O
sprintf	function
(	O
page_trailer	pointer
->	O
point	pointer
,	O
"%%%%Trailer\nAdobe_Illustrator_AI5 /terminate get exec\nAdobe_ColorImage_AI6 /terminate get exec\nAdobe_typography_AI5 /terminate get exec\nAdobe_level2_AI5 /terminate get exec\n%%%%EOF\n"	pointer
)	O
;	O
else	O
sprintf	function
(	O
page_trailer	pointer
->	O
point	pointer
,	O
"%%%%Trailer\nAdobe_Illustrator_AI3 /terminate get exec\nAdobe_pattern_AI3 /terminate get exec\nAdobe_typography_AI3 /terminate get exec\nAdobe_customcolor /terminate get exec\nAdobe_cshow /terminate get exec\nAdobe_cmykcolor /terminate get exec\nAdobe_packedarray /terminate get exec\n%%%%EOF\n"	pointer
)	O
;	O
_update_buffer	function
(	O
page_trailer	pointer
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
trailer	pointer
=	O
page_trailer	pointer
;	O
}	O
return	O
true	int
;	O
}	O
