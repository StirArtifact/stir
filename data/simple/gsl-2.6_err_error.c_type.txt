gsl_error_handler_t	function
*	O
gsl_error_handler	pointer
=	O
NULL	O
;	O
static	O
void	O
no_error_handler	function
(	O
const	O
char	O
*	O
reason	pointer
,	O
const	O
char	O
*	O
file	pointer
,	O
int	O
line	int
,	O
int	O
gsl_errno	int
)	O
;	O
void	O
gsl_error	function
(	O
const	O
char	O
*	O
reason	pointer
,	O
const	O
char	O
*	O
file	pointer
,	O
int	O
line	int
,	O
int	O
gsl_errno	int
)	O
{	O
if	O
(	O
gsl_error_handler	pointer
)	O
{	O
(	O
*	O
gsl_error_handler	pointer
)	O
(	O
reason	pointer
,	O
file	pointer
,	O
line	int
,	O
gsl_errno	int
)	O
;	O
return	O
;	O
}	O
gsl_stream_printf	function
(	O
"ERROR"	pointer
,	O
file	pointer
,	O
line	int
,	O
reason	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Default GSL error handler invoked.\n"	pointer
)	O
;	O
fflush	function
(	O
stderr	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
gsl_error_handler_t	function
*	O
gsl_set_error_handler	function
(	O
gsl_error_handler_t	function
*	O
new_handler	pointer
)	O
{	O
gsl_error_handler_t	function
*	O
previous_handler	pointer
=	O
gsl_error_handler	pointer
;	O
gsl_error_handler	pointer
=	O
new_handler	pointer
;	O
return	O
previous_handler	pointer
;	O
}	O
gsl_error_handler_t	function
*	O
gsl_set_error_handler_off	function
(	O
void	O
)	O
{	O
gsl_error_handler_t	function
*	O
previous_handler	pointer
=	O
gsl_error_handler	pointer
;	O
gsl_error_handler	pointer
=	O
no_error_handler	function
;	O
return	O
previous_handler	pointer
;	O
}	O
static	O
void	O
no_error_handler	function
(	O
const	O
char	O
*	O
reason	pointer
,	O
const	O
char	O
*	O
file	pointer
,	O
int	O
line	int
,	O
int	O
gsl_errno	int
)	O
{	O
reason	pointer
=	O
0	int
;	O
file	pointer
=	O
0	int
;	O
line	int
=	O
0	int
;	O
gsl_errno	int
=	O
0	int
;	O
return	O
;	O
}	O
