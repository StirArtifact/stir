int	O
mav_characterDraw	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_drawInfo	O
*	O
di	pointer
)	O
{	O
Character	struct
*	O
c	pointer
=	O
(	O
Character	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
MAV_vector	O
dr	O
;	O
float	O
dist	float
;	O
int	O
i	int
,	O
j	int
;	O
dr	O
=	O
mav_vectorSub	function
(	O
c	pointer
->	O
centre	int
,	O
mav_win_current	O
->	O
vp	O
->	O
eye	O
)	O
;	O
dist	float
=	O
sqrt	O
(	O
mav_vectorDotProduct	function
(	O
dr	O
,	O
dr	O
)	O
)	O
;	O
if	O
(	O
apply_lod	int
)	O
{	O
if	O
(	O
dist	float
<	O
fog_distance	float
)	O
{	O
mav_surfaceParamsUse	function
(	O
c	pointer
->	O
sp	pointer
)	O
;	O
mav_gfxMatrixPush	function
(	O
)	O
;	O
mav_gfxMatrixMult	function
(	O
c	pointer
->	O
matrix	int
)	O
;	O
if	O
(	O
dist	float
<	O
box_distance	float
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
c	pointer
->	O
character	pointer
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	function
(	O
)	O
;	O
mav_gfxNormal	function
(	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	function
(	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
verts	pointer
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	function
(	O
)	O
;	O
}	O
}	O
else	O
{	O
mav_BBDisplayWithSurfaceParams	function
(	O
mav_win_current	O
,	O
c	pointer
->	O
character	pointer
->	O
bb	int
,	O
c	pointer
->	O
sp	pointer
)	O
;	O
}	O
mav_gfxMatrixPop	function
(	O
)	O
;	O
}	O
}	O
else	O
{	O
mav_surfaceParamsUse	function
(	O
c	pointer
->	O
sp	pointer
)	O
;	O
mav_gfxMatrixPush	function
(	O
)	O
;	O
mav_gfxMatrixMult	function
(	O
c	pointer
->	O
matrix	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
c	pointer
->	O
character	pointer
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	function
(	O
)	O
;	O
mav_gfxNormal	function
(	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	function
(	O
c	pointer
->	O
character	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
verts	pointer
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	function
(	O
)	O
;	O
}	O
mav_gfxMatrixPop	function
(	O
)	O
;	O
}	O
return	O
1	int
;	O
}	O
int	O
mav_characterBBox	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Character	struct
*	O
c	pointer
=	O
(	O
Character	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
mav_BBAlign	function
(	O
c	pointer
->	O
character	pointer
->	O
bb	int
,	O
c	pointer
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_featureDraw	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_drawInfo	O
*	O
di	pointer
)	O
{	O
Feature	struct
*	O
f	pointer
=	O
(	O
Feature	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
int	O
i	int
,	O
j	int
;	O
mav_surfaceParamsUse	function
(	O
f	pointer
->	O
sp	pointer
)	O
;	O
mav_gfxMatrixPush	function
(	O
)	O
;	O
mav_gfxMatrixMult	function
(	O
f	pointer
->	O
matrix	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
f	pointer
->	O
num_polys	int
;	O
i	int
++	O
)	O
{	O
mav_gfxPolygonBegin	function
(	O
)	O
;	O
mav_gfxNormal	function
(	O
f	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
normal	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
f	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
num_verts	int
;	O
j	int
++	O
)	O
mav_gfxVertex	function
(	O
f	pointer
->	O
polys	pointer
[	O
i	int
]	O
.	O
verts	pointer
[	O
j	int
]	O
)	O
;	O
mav_gfxPolygonEnd	function
(	O
)	O
;	O
}	O
mav_gfxMatrixPop	function
(	O
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_featureBBox	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Feature	struct
*	O
f	pointer
=	O
(	O
Feature	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
mav_BBAlign	function
(	O
f	pointer
->	O
bb	int
,	O
f	pointer
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_vectorDraw	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_drawInfo	O
*	O
di	pointer
)	O
{	O
Vector	struct
*	O
v	pointer
=	O
(	O
Vector	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
mav_surfaceParamsUse	function
(	O
v	pointer
->	O
sp	pointer
)	O
;	O
mav_gfxMatrixPush	function
(	O
)	O
;	O
mav_gfxMatrixMult	function
(	O
v	pointer
->	O
matrix	int
)	O
;	O
mav_gfxLineBegin	function
(	O
)	O
;	O
mav_gfxVertex	function
(	O
v	pointer
->	O
start	int
)	O
;	O
mav_gfxVertex	function
(	O
v	pointer
->	O
end	int
)	O
;	O
mav_gfxLineEnd	function
(	O
)	O
;	O
mav_gfxMatrixPop	function
(	O
)	O
;	O
return	O
1	int
;	O
}	O
int	O
mav_vectorBBox	function
(	O
MAV_object	O
*	O
obj	pointer
,	O
MAV_BB	O
*	O
bb	int
)	O
{	O
Vector	struct
*	O
v	pointer
=	O
(	O
Vector	struct
*	O
)	O
mav_objectDataGet	function
(	O
obj	pointer
)	O
;	O
mav_BBAlign	function
(	O
v	pointer
->	O
bb	int
,	O
v	pointer
->	O
matrix	int
,	O
bb	int
)	O
;	O
return	O
1	int
;	O
}	O
