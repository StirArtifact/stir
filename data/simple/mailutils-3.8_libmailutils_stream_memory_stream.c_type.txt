static	O
void	O
_memory_done	function
(	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
mfs	pointer
&&	O
mfs	pointer
->	O
ptr	pointer
!=	O
NULL	O
)	O
free	function
(	O
mfs	pointer
->	O
ptr	pointer
)	O
;	O
}	O
static	O
int	O
_memory_read	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
char	O
*	O
optr	pointer
,	O
size_t	long
osize	long
,	O
size_t	long
*	O
nbytes	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
size_t	long
n	int
=	O
0	int
;	O
if	O
(	O
mfs	pointer
->	O
ptr	pointer
!=	O
NULL	O
&&	O
(	O
(	O
size_t	long
)	O
mfs	pointer
->	O
offset	long
<=	O
mfs	pointer
->	O
size	long
)	O
)	O
{	O
n	int
=	O
(	O
(	O
mfs	pointer
->	O
offset	long
+	O
osize	long
)	O
>	O
mfs	pointer
->	O
size	long
)	O
?	O
mfs	pointer
->	O
size	long
-	O
mfs	pointer
->	O
offset	long
:	O
osize	long
;	O
memcpy	function
(	O
optr	pointer
,	O
mfs	pointer
->	O
ptr	pointer
+	O
mfs	pointer
->	O
offset	long
,	O
n	int
)	O
;	O
mfs	pointer
->	O
offset	long
+=	O
n	int
;	O
}	O
if	O
(	O
nbytes	pointer
)	O
*	O
nbytes	pointer
=	O
n	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_write	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
const	O
char	O
*	O
iptr	pointer
,	O
size_t	long
isize	long
,	O
size_t	long
*	O
nbytes	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
mfs	pointer
->	O
capacity	long
<	O
mfs	pointer
->	O
offset	long
+	O
isize	long
)	O
{	O
size_t	long
newsize	long
=	O
MU_STREAM_MEMORY_BLOCKSIZE	int
*	O
(	O
(	O
(	O
mfs	pointer
->	O
offset	long
+	O
isize	long
)	O
/	O
MU_STREAM_MEMORY_BLOCKSIZE	int
)	O
+	O
1	int
)	O
;	O
char	O
*	O
tmp	pointer
=	O
mu_realloc	function
(	O
mfs	pointer
->	O
ptr	pointer
,	O
newsize	long
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
mfs	pointer
->	O
ptr	pointer
=	O
tmp	pointer
;	O
mfs	pointer
->	O
capacity	long
=	O
newsize	long
;	O
}	O
memcpy	function
(	O
mfs	pointer
->	O
ptr	pointer
+	O
mfs	pointer
->	O
offset	long
,	O
iptr	pointer
,	O
isize	long
)	O
;	O
mfs	pointer
->	O
offset	long
+=	O
isize	long
;	O
if	O
(	O
mfs	pointer
->	O
offset	long
>	O
mfs	pointer
->	O
size	long
)	O
mfs	pointer
->	O
size	long
=	O
mfs	pointer
->	O
offset	long
;	O
if	O
(	O
nbytes	pointer
)	O
*	O
nbytes	pointer
=	O
isize	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_fixed_size_memory_write	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
const	O
char	O
*	O
iptr	pointer
,	O
size_t	long
isize	long
,	O
size_t	long
*	O
nbytes	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
mfs	pointer
->	O
capacity	long
<	O
mfs	pointer
->	O
offset	long
+	O
isize	long
)	O
isize	long
=	O
mfs	pointer
->	O
capacity	long
-	O
mfs	pointer
->	O
offset	long
;	O
memcpy	function
(	O
mfs	pointer
->	O
ptr	pointer
+	O
mfs	pointer
->	O
offset	long
,	O
iptr	pointer
,	O
isize	long
)	O
;	O
mfs	pointer
->	O
offset	long
+=	O
isize	long
;	O
if	O
(	O
mfs	pointer
->	O
offset	long
>	O
mfs	pointer
->	O
size	long
)	O
mfs	pointer
->	O
size	long
=	O
mfs	pointer
->	O
offset	long
;	O
if	O
(	O
nbytes	pointer
)	O
*	O
nbytes	pointer
=	O
isize	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_truncate	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
mu_off_t	long
len	int
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
len	int
>	O
(	O
mu_off_t	long
)	O
mfs	pointer
->	O
size	long
)	O
{	O
char	O
*	O
tmp	pointer
=	O
mu_realloc	function
(	O
mfs	pointer
->	O
ptr	pointer
,	O
len	int
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
mfs	pointer
->	O
ptr	pointer
=	O
tmp	pointer
;	O
mfs	pointer
->	O
capacity	long
=	O
len	int
;	O
}	O
mfs	pointer
->	O
size	long
=	O
len	int
;	O
if	O
(	O
mfs	pointer
->	O
offset	long
>	O
mfs	pointer
->	O
size	long
)	O
mfs	pointer
->	O
offset	long
=	O
mfs	pointer
->	O
size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_size	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
mu_off_t	long
*	O
psize	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
psize	pointer
)	O
*	O
psize	pointer
=	O
mfs	pointer
->	O
size	long
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_close	function
(	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
mfs	pointer
->	O
ptr	pointer
)	O
free	function
(	O
mfs	pointer
->	O
ptr	pointer
)	O
;	O
mfs	pointer
->	O
ptr	pointer
=	O
NULL	O
;	O
mfs	pointer
->	O
size	long
=	O
0	int
;	O
mfs	pointer
->	O
capacity	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_open	function
(	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
mfs	pointer
->	O
ptr	pointer
)	O
free	function
(	O
mfs	pointer
->	O
ptr	pointer
)	O
;	O
mfs	pointer
->	O
ptr	pointer
=	O
NULL	O
;	O
mfs	pointer
->	O
size	long
=	O
0	int
;	O
mfs	pointer
->	O
offset	long
=	O
0	int
;	O
mfs	pointer
->	O
capacity	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_ioctl	function
(	O
struct	O
_mu_stream	struct
*	O
stream	pointer
,	O
int	O
code	int
,	O
int	O
opcode	int
,	O
void	O
*	O
ptr	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_TRANSPORT	int
:	O
if	O
(	O
!	O
ptr	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
mu_transport_t	pointer
*	O
ptrans	pointer
=	O
ptr	pointer
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
ptrans	pointer
[	O
0	int
]	O
=	O
(	O
mu_transport_t	pointer
)	O
mfs	pointer
->	O
ptr	pointer
;	O
ptrans	pointer
[	O
1	int
]	O
=	O
NULL	O
;	O
break	O
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
return	O
ENOSYS	int
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
}	O
break	O
;	O
case	O
MU_IOCTL_TRANSPORT_BUFFER	int
:	O
if	O
(	O
!	O
ptr	pointer
)	O
return	O
EINVAL	int
;	O
else	O
{	O
struct	O
mu_buffer_query	struct
*	O
qp	pointer
=	O
ptr	pointer
;	O
switch	O
(	O
code	int
)	O
{	O
case	O
MU_IOCTL_OP_GET	int
:	O
return	O
mu_stream_get_buffer	function
(	O
stream	pointer
,	O
qp	pointer
)	O
;	O
case	O
MU_IOCTL_OP_SET	int
:	O
return	O
mu_stream_set_buffer	function
(	O
stream	pointer
,	O
qp	pointer
->	O
buftype	enum
,	O
qp	pointer
->	O
bufsize	long
)	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
}	O
break	O
;	O
default	O
:	O
return	O
ENOSYS	int
;	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
_memory_seek	function
(	O
struct	O
_mu_stream	struct
*	O
stream	pointer
,	O
mu_off_t	long
off	long
,	O
mu_off_t	long
*	O
presult	pointer
)	O
{	O
struct	O
_mu_memory_stream	struct
*	O
mfs	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
stream	pointer
;	O
if	O
(	O
off	long
<	O
0	int
)	O
return	O
ESPIPE	int
;	O
mfs	pointer
->	O
offset	long
=	O
off	long
;	O
*	O
presult	pointer
=	O
off	long
;	O
return	O
0	int
;	O
}	O
int	O
mu_memory_stream_create	function
(	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	pointer
stream	pointer
;	O
struct	O
_mu_memory_stream	struct
*	O
str	pointer
;	O
if	O
(	O
!	O
flags	int
)	O
flags	int
=	O
MU_STREAM_RDWR	O
;	O
str	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
str	pointer
)	O
,	O
flags	int
|	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
ENOMEM	int
;	O
str	pointer
->	O
stream	pointer
.	O
open	function
=	O
_memory_open	function
;	O
str	pointer
->	O
stream	pointer
.	O
close	function
=	O
_memory_close	function
;	O
str	pointer
->	O
stream	pointer
.	O
read	function
=	O
_memory_read	function
;	O
str	pointer
->	O
stream	pointer
.	O
write	function
=	O
_memory_write	function
;	O
str	pointer
->	O
stream	pointer
.	O
truncate	function
=	O
_memory_truncate	function
;	O
str	pointer
->	O
stream	pointer
.	O
size	long
=	O
_memory_size	function
;	O
str	pointer
->	O
stream	pointer
.	O
done	pointer
=	O
_memory_done	function
;	O
str	pointer
->	O
stream	pointer
.	O
ctl	pointer
=	O
_memory_ioctl	function
;	O
str	pointer
->	O
stream	pointer
.	O
seek	pointer
=	O
_memory_seek	function
;	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
str	pointer
;	O
rc	int
=	O
mu_stream_open	function
(	O
stream	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_stream_destroy	function
(	O
&	O
stream	pointer
)	O
;	O
else	O
*	O
pstream	pointer
=	O
stream	pointer
;	O
return	O
rc	int
;	O
}	O
int	O
mu_static_memory_stream_create	function
(	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
const	O
void	O
*	O
mem	pointer
,	O
size_t	long
size	long
)	O
{	O
mu_stream_t	pointer
stream	pointer
;	O
struct	O
_mu_memory_stream	struct
*	O
str	pointer
;	O
str	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
str	pointer
)	O
,	O
MU_STREAM_READ	int
|	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
ENOMEM	int
;	O
str	pointer
->	O
ptr	pointer
=	O
(	O
void	O
*	O
)	O
mem	pointer
;	O
str	pointer
->	O
size	long
=	O
size	long
;	O
str	pointer
->	O
offset	long
=	O
0	int
;	O
str	pointer
->	O
capacity	long
=	O
size	long
;	O
str	pointer
->	O
stream	pointer
.	O
flags	int
|=	O
_MU_STR_OPEN	int
;	O
str	pointer
->	O
stream	pointer
.	O
read	function
=	O
_memory_read	function
;	O
str	pointer
->	O
stream	pointer
.	O
size	long
=	O
_memory_size	function
;	O
str	pointer
->	O
stream	pointer
.	O
ctl	pointer
=	O
_memory_ioctl	function
;	O
str	pointer
->	O
stream	pointer
.	O
seek	pointer
=	O
_memory_seek	function
;	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
str	pointer
;	O
*	O
pstream	pointer
=	O
stream	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_fixed_memory_stream_create	function
(	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
void	O
*	O
mem	pointer
,	O
size_t	long
size	long
,	O
int	O
flags	int
)	O
{	O
mu_stream_t	pointer
stream	pointer
;	O
struct	O
_mu_memory_stream	struct
*	O
str	pointer
;	O
flags	int
&=	O
(	O
MU_STREAM_READ	int
|	O
MU_STREAM_WRITE	int
)	O
;	O
if	O
(	O
!	O
flags	int
)	O
return	O
EINVAL	int
;	O
str	pointer
=	O
(	O
struct	O
_mu_memory_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
str	pointer
)	O
,	O
flags	int
|	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
!	O
str	pointer
)	O
return	O
ENOMEM	int
;	O
str	pointer
->	O
ptr	pointer
=	O
(	O
void	O
*	O
)	O
mem	pointer
;	O
str	pointer
->	O
size	long
=	O
size	long
;	O
str	pointer
->	O
offset	long
=	O
0	int
;	O
str	pointer
->	O
capacity	long
=	O
size	long
;	O
str	pointer
->	O
stream	pointer
.	O
flags	int
|=	O
_MU_STR_OPEN	int
;	O
if	O
(	O
flags	int
&	O
MU_STREAM_READ	int
)	O
str	pointer
->	O
stream	pointer
.	O
read	function
=	O
_memory_read	function
;	O
if	O
(	O
flags	int
&	O
MU_STREAM_WRITE	int
)	O
str	pointer
->	O
stream	pointer
.	O
write	function
=	O
_fixed_size_memory_write	function
;	O
str	pointer
->	O
stream	pointer
.	O
size	long
=	O
_memory_size	function
;	O
str	pointer
->	O
stream	pointer
.	O
ctl	pointer
=	O
_memory_ioctl	function
;	O
str	pointer
->	O
stream	pointer
.	O
seek	pointer
=	O
_memory_seek	function
;	O
stream	pointer
=	O
(	O
mu_stream_t	pointer
)	O
str	pointer
;	O
*	O
pstream	pointer
=	O
stream	pointer
;	O
return	O
0	int
;	O
}	O
