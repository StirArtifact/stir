static	O
inline	O
double	O
boltzmann	function
(	O
double	O
E	double
,	O
double	O
new_E	double
,	O
double	O
T	pointer
,	O
gsl_siman_params_t	struct
*	O
params	struct
)	O
{	O
double	O
x	double
=	O
-	O
(	O
new_E	double
-	O
E	double
)	O
/	O
(	O
params	struct
->	O
k	long
*	O
T	pointer
)	O
;	O
return	O
(	O
x	double
<	O
GSL_LOG_DBL_MIN	O
)	O
?	O
0.0	int
:	O
exp	function
(	O
x	double
)	O
;	O
}	O
static	O
inline	O
void	O
copy_state	function
(	O
void	O
*	O
src	pointer
,	O
void	O
*	O
dst	pointer
,	O
size_t	long
size	long
,	O
gsl_siman_copy_t	pointer
copyfunc	pointer
)	O
{	O
if	O
(	O
copyfunc	pointer
)	O
{	O
copyfunc	pointer
(	O
src	pointer
,	O
dst	pointer
)	O
;	O
}	O
else	O
{	O
memcpy	function
(	O
dst	pointer
,	O
src	pointer
,	O
size	long
)	O
;	O
}	O
}	O
void	O
gsl_siman_solve	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
void	O
*	O
x0_p	pointer
,	O
gsl_siman_Efunc_t	pointer
Ef	pointer
,	O
gsl_siman_step_t	pointer
take_step	pointer
,	O
gsl_siman_metric_t	pointer
distance	pointer
,	O
gsl_siman_print_t	pointer
print_position	pointer
,	O
gsl_siman_copy_t	pointer
copyfunc	pointer
,	O
gsl_siman_copy_construct_t	pointer
copy_constructor	pointer
,	O
gsl_siman_destroy_t	pointer
destructor	pointer
,	O
size_t	long
element_size	long
,	O
gsl_siman_params_t	struct
params	struct
)	O
{	O
void	O
*	O
x	double
,	O
*	O
new_x	pointer
,	O
*	O
best_x	pointer
;	O
double	O
E	double
,	O
new_E	double
,	O
best_E	double
;	O
int	O
i	int
;	O
double	O
T	pointer
,	O
T_factor	double
;	O
int	O
n_evals	int
=	O
1	int
,	O
n_iter	int
=	O
0	int
,	O
n_accepts	int
,	O
n_rejects	int
,	O
n_eless	int
;	O
assert	O
(	O
(	O
copyfunc	pointer
!=	O
NULL	O
&&	O
copy_constructor	pointer
!=	O
NULL	O
&&	O
destructor	pointer
!=	O
NULL	O
)	O
||	O
(	O
element_size	long
!=	O
0	int
)	O
)	O
;	O
distance	pointer
=	O
0	int
;	O
E	double
=	O
Ef	pointer
(	O
x0_p	pointer
)	O
;	O
if	O
(	O
copyfunc	pointer
)	O
{	O
x	double
=	O
copy_constructor	pointer
(	O
x0_p	pointer
)	O
;	O
new_x	pointer
=	O
copy_constructor	pointer
(	O
x0_p	pointer
)	O
;	O
best_x	pointer
=	O
copy_constructor	pointer
(	O
x0_p	pointer
)	O
;	O
}	O
else	O
{	O
x	double
=	O
(	O
void	O
*	O
)	O
malloc	function
(	O
element_size	long
)	O
;	O
memcpy	function
(	O
x	double
,	O
x0_p	pointer
,	O
element_size	long
)	O
;	O
new_x	pointer
=	O
(	O
void	O
*	O
)	O
malloc	function
(	O
element_size	long
)	O
;	O
best_x	pointer
=	O
(	O
void	O
*	O
)	O
malloc	function
(	O
element_size	long
)	O
;	O
memcpy	function
(	O
best_x	pointer
,	O
x0_p	pointer
,	O
element_size	long
)	O
;	O
}	O
best_E	double
=	O
E	double
;	O
T	pointer
=	O
params	struct
.	O
t_initial	double
;	O
T_factor	double
=	O
1.0	int
/	O
params	struct
.	O
mu_t	double
;	O
if	O
(	O
print_position	pointer
)	O
{	O
printf	function
(	O
"#-iter  #-evals   temperature     position   energy\n"	pointer
)	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
n_accepts	int
=	O
0	int
;	O
n_rejects	int
=	O
0	int
;	O
n_eless	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
params	struct
.	O
iters_fixed_T	int
;	O
++	O
i	int
)	O
{	O
copy_state	function
(	O
x	double
,	O
new_x	pointer
,	O
element_size	long
,	O
copyfunc	pointer
)	O
;	O
take_step	pointer
(	O
r	pointer
,	O
new_x	pointer
,	O
params	struct
.	O
step_size	double
)	O
;	O
new_E	double
=	O
Ef	pointer
(	O
new_x	pointer
)	O
;	O
if	O
(	O
new_E	double
<=	O
best_E	double
)	O
{	O
if	O
(	O
copyfunc	pointer
)	O
{	O
copyfunc	pointer
(	O
new_x	pointer
,	O
best_x	pointer
)	O
;	O
}	O
else	O
{	O
memcpy	function
(	O
best_x	pointer
,	O
new_x	pointer
,	O
element_size	long
)	O
;	O
}	O
best_E	double
=	O
new_E	double
;	O
}	O
++	O
n_evals	int
;	O
if	O
(	O
new_E	double
<	O
E	double
)	O
{	O
if	O
(	O
new_E	double
<	O
best_E	double
)	O
{	O
copy_state	function
(	O
new_x	pointer
,	O
best_x	pointer
,	O
element_size	long
,	O
copyfunc	pointer
)	O
;	O
best_E	double
=	O
new_E	double
;	O
}	O
copy_state	function
(	O
new_x	pointer
,	O
x	double
,	O
element_size	long
,	O
copyfunc	pointer
)	O
;	O
E	double
=	O
new_E	double
;	O
++	O
n_eless	int
;	O
}	O
else	O
if	O
(	O
gsl_rng_uniform	function
(	O
r	pointer
)	O
<	O
boltzmann	function
(	O
E	double
,	O
new_E	double
,	O
T	pointer
,	O
&	O
params	struct
)	O
)	O
{	O
copy_state	function
(	O
new_x	pointer
,	O
x	double
,	O
element_size	long
,	O
copyfunc	pointer
)	O
;	O
E	double
=	O
new_E	double
;	O
++	O
n_accepts	int
;	O
}	O
else	O
{	O
++	O
n_rejects	int
;	O
}	O
}	O
if	O
(	O
print_position	pointer
)	O
{	O
printf	function
(	O
"%5d   %7d  %12g"	pointer
,	O
n_iter	int
,	O
n_evals	int
,	O
T	pointer
)	O
;	O
print_position	pointer
(	O
x	double
)	O
;	O
printf	function
(	O
"  %12g  %12g\n"	pointer
,	O
E	double
,	O
best_E	double
)	O
;	O
}	O
T	pointer
*=	O
T_factor	double
;	O
++	O
n_iter	int
;	O
if	O
(	O
T	pointer
<	O
params	struct
.	O
t_min	double
)	O
{	O
break	O
;	O
}	O
}	O
copy_state	function
(	O
best_x	pointer
,	O
x0_p	pointer
,	O
element_size	long
,	O
copyfunc	pointer
)	O
;	O
if	O
(	O
copyfunc	pointer
)	O
{	O
destructor	pointer
(	O
x	double
)	O
;	O
destructor	pointer
(	O
new_x	pointer
)	O
;	O
destructor	pointer
(	O
best_x	pointer
)	O
;	O
}	O
else	O
{	O
free	function
(	O
x	double
)	O
;	O
free	function
(	O
new_x	pointer
)	O
;	O
free	function
(	O
best_x	pointer
)	O
;	O
}	O
}	O
void	O
gsl_siman_solve_many	function
(	O
const	O
gsl_rng	struct
*	O
r	pointer
,	O
void	O
*	O
x0_p	pointer
,	O
gsl_siman_Efunc_t	pointer
Ef	pointer
,	O
gsl_siman_step_t	pointer
take_step	pointer
,	O
gsl_siman_metric_t	pointer
distance	pointer
,	O
gsl_siman_print_t	pointer
print_position	pointer
,	O
size_t	long
element_size	long
,	O
gsl_siman_params_t	struct
params	struct
)	O
{	O
void	O
*	O
x	double
,	O
*	O
new_x	pointer
;	O
double	O
*	O
energies	pointer
,	O
*	O
probs	pointer
,	O
*	O
sum_probs	pointer
;	O
double	O
Ex	double
;	O
double	O
T	pointer
,	O
T_factor	double
;	O
int	O
i	int
;	O
double	O
u	double
;	O
int	O
n_iter	int
;	O
if	O
(	O
print_position	pointer
)	O
{	O
printf	function
(	O
"#-iter    temperature       position"	pointer
)	O
;	O
printf	function
(	O
"         delta_pos        energy\n"	pointer
)	O
;	O
}	O
x	double
=	O
(	O
void	O
*	O
)	O
malloc	function
(	O
params	struct
.	O
n_tries	int
*	O
element_size	long
)	O
;	O
new_x	pointer
=	O
(	O
void	O
*	O
)	O
malloc	function
(	O
params	struct
.	O
n_tries	int
*	O
element_size	long
)	O
;	O
energies	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
params	struct
.	O
n_tries	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
probs	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
params	struct
.	O
n_tries	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
sum_probs	pointer
=	O
(	O
double	O
*	O
)	O
malloc	function
(	O
params	struct
.	O
n_tries	int
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
T	pointer
=	O
params	struct
.	O
t_initial	double
;	O
T_factor	double
=	O
1.0	int
/	O
params	struct
.	O
mu_t	double
;	O
memcpy	function
(	O
x	double
,	O
x0_p	pointer
,	O
element_size	long
)	O
;	O
n_iter	int
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
Ex	double
=	O
Ef	pointer
(	O
x	double
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
params	struct
.	O
n_tries	int
-	O
1	int
;	O
++	O
i	int
)	O
{	O
sum_probs	pointer
[	O
i	int
]	O
=	O
0	int
;	O
memcpy	function
(	O
(	O
char	O
*	O
)	O
new_x	pointer
+	O
i	int
*	O
element_size	long
,	O
x	double
,	O
element_size	long
)	O
;	O
take_step	pointer
(	O
r	pointer
,	O
(	O
char	O
*	O
)	O
new_x	pointer
+	O
i	int
*	O
element_size	long
,	O
params	struct
.	O
step_size	double
)	O
;	O
energies	pointer
[	O
i	int
]	O
=	O
Ef	pointer
(	O
(	O
char	O
*	O
)	O
new_x	pointer
+	O
i	int
*	O
element_size	long
)	O
;	O
probs	pointer
[	O
i	int
]	O
=	O
boltzmann	function
(	O
Ex	double
,	O
energies	pointer
[	O
i	int
]	O
,	O
T	pointer
,	O
&	O
params	struct
)	O
;	O
}	O
memcpy	function
(	O
(	O
char	O
*	O
)	O
new_x	pointer
+	O
(	O
params	struct
.	O
n_tries	int
-	O
1	int
)	O
*	O
element_size	long
,	O
x	double
,	O
element_size	long
)	O
;	O
energies	pointer
[	O
params	struct
.	O
n_tries	int
-	O
1	int
]	O
=	O
Ex	double
;	O
probs	pointer
[	O
params	struct
.	O
n_tries	int
-	O
1	int
]	O
=	O
boltzmann	function
(	O
Ex	double
,	O
energies	pointer
[	O
i	int
]	O
,	O
T	pointer
,	O
&	O
params	struct
)	O
;	O
sum_probs	pointer
[	O
0	int
]	O
=	O
probs	pointer
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
params	struct
.	O
n_tries	int
;	O
++	O
i	int
)	O
{	O
sum_probs	pointer
[	O
i	int
]	O
=	O
sum_probs	pointer
[	O
i	int
-	O
1	int
]	O
+	O
probs	pointer
[	O
i	int
]	O
;	O
}	O
u	double
=	O
gsl_rng_uniform	function
(	O
r	pointer
)	O
*	O
sum_probs	pointer
[	O
params	struct
.	O
n_tries	int
-	O
1	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
params	struct
.	O
n_tries	int
;	O
++	O
i	int
)	O
{	O
if	O
(	O
u	double
<	O
sum_probs	pointer
[	O
i	int
]	O
)	O
{	O
memcpy	function
(	O
x	double
,	O
(	O
char	O
*	O
)	O
new_x	pointer
+	O
i	int
*	O
element_size	long
,	O
element_size	long
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
print_position	pointer
)	O
{	O
printf	function
(	O
"%5d\t%12g\t"	pointer
,	O
n_iter	int
,	O
T	pointer
)	O
;	O
print_position	pointer
(	O
x	double
)	O
;	O
printf	function
(	O
"\t%12g\t%12g\n"	pointer
,	O
distance	pointer
(	O
x	double
,	O
x0_p	pointer
)	O
,	O
Ex	double
)	O
;	O
}	O
T	pointer
*=	O
T_factor	double
;	O
++	O
n_iter	int
;	O
if	O
(	O
T	pointer
<	O
params	struct
.	O
t_min	double
)	O
{	O
break	O
;	O
}	O
}	O
memcpy	function
(	O
x0_p	pointer
,	O
x	double
,	O
element_size	long
)	O
;	O
free	function
(	O
x	double
)	O
;	O
free	function
(	O
new_x	pointer
)	O
;	O
free	function
(	O
energies	pointer
)	O
;	O
free	function
(	O
probs	pointer
)	O
;	O
free	function
(	O
sum_probs	pointer
)	O
;	O
}	O
