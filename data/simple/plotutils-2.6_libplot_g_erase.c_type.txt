int	O
_API_erase	O
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
bool	enum
retval1	enum
;	O
int	O
retval2	int
=	O
0	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"erase: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
switch	O
(	O
(	O
int	O
)	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	enum
)	O
{	O
case	O
(	O
int	O
)	O
PL_OUTPUT_NONE	int
:	O
break	O
;	O
case	O
(	O
int	O
)	O
PL_OUTPUT_ONE_PAGE	int
:	O
case	O
(	O
int	O
)	O
PL_OUTPUT_ONE_PAGE_AT_A_TIME	int
:	O
case	O
(	O
int	O
)	O
PL_OUTPUT_PAGES_ALL_AT_ONCE	int
:	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
)	O
_reset_outbuf	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
)	O
;	O
break	O
;	O
case	O
(	O
int	O
)	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES	int
:	O
case	O
(	O
int	O
)	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_IN_REAL_TIME	int
:	O
case	O
(	O
int	O
)	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_TO_NON_STREAM	int
:	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
retval1	enum
=	O
_plotter	pointer
->	O
erase_page	pointer
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	enum
==	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_IN_REAL_TIME	int
||	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	enum
==	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_TO_NON_STREAM	int
)	O
retval2	int
=	O
_API_flushpl	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
frame_number	int
++	O
;	O
return	O
(	O
retval1	enum
==	O
true	int
&&	O
retval2	int
==	O
0	int
?	O
0	int
:	O
-	O
1	int
)	O
;	O
}	O
bool	enum
_pl_g_erase_page	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
true	int
;	O
}	O
