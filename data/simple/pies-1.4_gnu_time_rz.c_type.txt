enum	O
{	O
DEFAULT_MXFAST	int
=	O
64	int
*	O
sizeof	O
(	O
size_t	long
)	O
/	O
4	int
}	O
;	O
enum	O
{	O
ABBR_SIZE_MIN	int
=	O
DEFAULT_MXFAST	int
-	O
offsetof	O
(	O
struct	O
tm_zone	pointer
,	O
abbrs	array
)	O
}	O
;	O
static	O
char	O
const	O
TZ	array
[	O
]	O
=	O
"TZ"	pointer
;	O
static	O
timezone_t	pointer
const	O
local_tz	pointer
=	O
(	O
timezone_t	pointer
)	O
1	int
;	O
static	O
bool	bool
isdst_differ	function
(	O
int	O
a	int
,	O
int	O
b	int
)	O
{	O
return	O
!	O
a	int
!=	O
!	O
b	int
&&	O
0	int
<=	O
a	int
&&	O
0	int
<=	O
b	int
;	O
}	O
static	O
int	O
equal_tm	function
(	O
const	O
struct	O
tm	struct
*	O
a	int
,	O
const	O
struct	O
tm	struct
*	O
b	int
)	O
{	O
return	O
!	O
(	O
(	O
a	int
->	O
tm_sec	int
^	O
b	int
->	O
tm_sec	int
)	O
|	O
(	O
a	int
->	O
tm_min	int
^	O
b	int
->	O
tm_min	int
)	O
|	O
(	O
a	int
->	O
tm_hour	int
^	O
b	int
->	O
tm_hour	int
)	O
|	O
(	O
a	int
->	O
tm_mday	int
^	O
b	int
->	O
tm_mday	int
)	O
|	O
(	O
a	int
->	O
tm_mon	int
^	O
b	int
->	O
tm_mon	int
)	O
|	O
(	O
a	int
->	O
tm_year	int
^	O
b	int
->	O
tm_year	int
)	O
|	O
isdst_differ	function
(	O
a	int
->	O
tm_isdst	int
,	O
b	int
->	O
tm_isdst	int
)	O
)	O
;	O
}	O
static	O
void	O
extend_abbrs	function
(	O
char	O
*	O
abbrs	array
,	O
char	O
const	O
*	O
abbr	pointer
,	O
size_t	long
abbr_size	long
)	O
{	O
memcpy	function
(	O
abbrs	array
,	O
abbr	pointer
,	O
abbr_size	long
)	O
;	O
abbrs	array
[	O
abbr_size	long
]	O
=	O
'\0'	O
;	O
}	O
timezone_t	pointer
tzalloc	function
(	O
char	O
const	O
*	O
name	pointer
)	O
{	O
size_t	long
name_size	long
=	O
name	pointer
?	O
strlen	function
(	O
name	pointer
)	O
+	O
1	int
:	O
0	int
;	O
size_t	long
abbr_size	long
=	O
name_size	long
<	O
ABBR_SIZE_MIN	int
?	O
ABBR_SIZE_MIN	int
:	O
name_size	long
+	O
1	int
;	O
timezone_t	pointer
tz	pointer
=	O
malloc	function
(	O
offsetof	O
(	O
struct	O
tm_zone	pointer
,	O
abbrs	array
)	O
+	O
abbr_size	long
)	O
;	O
if	O
(	O
tz	pointer
)	O
{	O
tz	pointer
->	O
next	pointer
=	O
NULL	O
;	O
tz	pointer
->	O
tz_is_set	char
=	O
!	O
!	O
name	pointer
;	O
tz	pointer
->	O
abbrs	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
name	pointer
)	O
extend_abbrs	function
(	O
tz	pointer
->	O
abbrs	array
,	O
name	pointer
,	O
name_size	long
)	O
;	O
}	O
return	O
tz	pointer
;	O
}	O
static	O
bool	bool
save_abbr	function
(	O
timezone_t	pointer
tz	pointer
,	O
struct	O
tm	struct
*	O
tm	struct
)	O
{	O
char	O
const	O
*	O
zone	pointer
=	O
NULL	O
;	O
char	O
*	O
zone_copy	pointer
=	O
(	O
char	O
*	O
)	O
""	pointer
;	O
zone	pointer
=	O
tm	struct
->	O
tm_zone	pointer
;	O
if	O
(	O
!	O
zone	pointer
||	O
(	O
(	O
char	O
*	O
)	O
tm	struct
<=	O
zone	pointer
&&	O
zone	pointer
<	O
(	O
char	O
*	O
)	O
(	O
tm	struct
+	O
1	int
)	O
)	O
)	O
return	O
true	int
;	O
if	O
(	O
*	O
zone	pointer
)	O
{	O
zone_copy	pointer
=	O
tz	pointer
->	O
abbrs	array
;	O
while	O
(	O
strcmp	function
(	O
zone_copy	pointer
,	O
zone	pointer
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
(	O
*	O
zone_copy	pointer
||	O
(	O
zone_copy	pointer
==	O
tz	pointer
->	O
abbrs	array
&&	O
tz	pointer
->	O
tz_is_set	char
)	O
)	O
)	O
{	O
size_t	long
zone_size	long
=	O
strlen	function
(	O
zone	pointer
)	O
+	O
1	int
;	O
if	O
(	O
zone_size	long
<	O
tz	pointer
->	O
abbrs	array
+	O
ABBR_SIZE_MIN	int
-	O
zone_copy	pointer
)	O
extend_abbrs	function
(	O
zone_copy	pointer
,	O
zone	pointer
,	O
zone_size	long
)	O
;	O
else	O
{	O
tz	pointer
=	O
tz	pointer
->	O
next	pointer
=	O
tzalloc	function
(	O
zone	pointer
)	O
;	O
if	O
(	O
!	O
tz	pointer
)	O
return	O
false	int
;	O
tz	pointer
->	O
tz_is_set	char
=	O
0	int
;	O
zone_copy	pointer
=	O
tz	pointer
->	O
abbrs	array
;	O
}	O
break	O
;	O
}	O
zone_copy	pointer
+=	O
strlen	function
(	O
zone_copy	pointer
)	O
+	O
1	int
;	O
if	O
(	O
!	O
*	O
zone_copy	pointer
&&	O
tz	pointer
->	O
next	pointer
)	O
{	O
tz	pointer
=	O
tz	pointer
->	O
next	pointer
;	O
zone_copy	pointer
=	O
tz	pointer
->	O
abbrs	array
;	O
}	O
}	O
}	O
tm	struct
->	O
tm_zone	pointer
=	O
zone_copy	pointer
;	O
return	O
true	int
;	O
}	O
void	O
tzfree	function
(	O
timezone_t	pointer
tz	pointer
)	O
{	O
if	O
(	O
tz	pointer
!=	O
local_tz	pointer
)	O
while	O
(	O
tz	pointer
)	O
{	O
timezone_t	pointer
next	pointer
=	O
tz	pointer
->	O
next	pointer
;	O
free	function
(	O
tz	pointer
)	O
;	O
tz	pointer
=	O
next	pointer
;	O
}	O
}	O
static	O
char	O
*	O
getenv_TZ	function
(	O
void	O
)	O
{	O
return	O
getenv	function
(	O
TZ	array
)	O
;	O
}	O
static	O
int	O
setenv_TZ	function
(	O
char	O
const	O
*	O
tz	pointer
)	O
{	O
return	O
tz	pointer
?	O
setenv	function
(	O
TZ	array
,	O
tz	pointer
,	O
1	int
)	O
:	O
unsetenv	function
(	O
TZ	array
)	O
;	O
}	O
static	O
bool	bool
change_env	function
(	O
timezone_t	pointer
tz	pointer
)	O
{	O
if	O
(	O
setenv_TZ	function
(	O
tz	pointer
->	O
tz_is_set	char
?	O
tz	pointer
->	O
abbrs	array
:	O
NULL	O
)	O
!=	O
0	int
)	O
return	O
false	int
;	O
tzset	function
(	O
)	O
;	O
return	O
true	int
;	O
}	O
static	O
timezone_t	pointer
set_tz	function
(	O
timezone_t	pointer
tz	pointer
)	O
{	O
char	O
*	O
env_tz	pointer
=	O
getenv_TZ	function
(	O
)	O
;	O
if	O
(	O
env_tz	pointer
?	O
tz	pointer
->	O
tz_is_set	char
&&	O
strcmp	function
(	O
tz	pointer
->	O
abbrs	array
,	O
env_tz	pointer
)	O
==	O
0	int
:	O
!	O
tz	pointer
->	O
tz_is_set	char
)	O
return	O
local_tz	pointer
;	O
else	O
{	O
timezone_t	pointer
old_tz	pointer
=	O
tzalloc	function
(	O
env_tz	pointer
)	O
;	O
if	O
(	O
!	O
old_tz	pointer
)	O
return	O
old_tz	pointer
;	O
if	O
(	O
!	O
change_env	function
(	O
tz	pointer
)	O
)	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
tzfree	function
(	O
old_tz	pointer
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
return	O
NULL	O
;	O
}	O
return	O
old_tz	pointer
;	O
}	O
}	O
static	O
bool	bool
revert_tz	function
(	O
timezone_t	pointer
tz	pointer
)	O
{	O
if	O
(	O
tz	pointer
==	O
local_tz	pointer
)	O
return	O
true	int
;	O
else	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
bool	bool
ok	bool
=	O
change_env	function
(	O
tz	pointer
)	O
;	O
if	O
(	O
!	O
ok	bool
)	O
saved_errno	int
=	O
errno	O
;	O
tzfree	function
(	O
tz	pointer
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
return	O
ok	bool
;	O
}	O
}	O
struct	O
tm	struct
*	O
localtime_rz	function
(	O
timezone_t	pointer
tz	pointer
,	O
time_t	long
const	O
*	O
t	pointer
,	O
struct	O
tm	struct
*	O
tm	struct
)	O
{	O
if	O
(	O
!	O
tz	pointer
)	O
return	O
gmtime_r	function
(	O
t	pointer
,	O
tm	struct
)	O
;	O
else	O
{	O
timezone_t	pointer
old_tz	pointer
=	O
set_tz	function
(	O
tz	pointer
)	O
;	O
if	O
(	O
old_tz	pointer
)	O
{	O
bool	bool
abbr_saved	bool
=	O
localtime_r	function
(	O
t	pointer
,	O
tm	struct
)	O
&&	O
save_abbr	function
(	O
tz	pointer
,	O
tm	struct
)	O
;	O
if	O
(	O
revert_tz	function
(	O
old_tz	pointer
)	O
&&	O
abbr_saved	bool
)	O
return	O
tm	struct
;	O
}	O
return	O
NULL	O
;	O
}	O
}	O
time_t	long
mktime_z	function
(	O
timezone_t	pointer
tz	pointer
,	O
struct	O
tm	struct
*	O
tm	struct
)	O
{	O
if	O
(	O
!	O
tz	pointer
)	O
return	O
timegm	function
(	O
tm	struct
)	O
;	O
else	O
{	O
timezone_t	pointer
old_tz	pointer
=	O
set_tz	function
(	O
tz	pointer
)	O
;	O
if	O
(	O
old_tz	pointer
)	O
{	O
time_t	long
t	pointer
=	O
mktime	function
(	O
tm	struct
)	O
;	O
time_t	long
badtime	long
=	O
-	O
1	int
;	O
struct	O
tm	struct
tm_1	struct
;	O
if	O
(	O
(	O
t	pointer
!=	O
badtime	long
||	O
(	O
localtime_r	function
(	O
&	O
t	pointer
,	O
&	O
tm_1	struct
)	O
&&	O
equal_tm	function
(	O
tm	struct
,	O
&	O
tm_1	struct
)	O
)	O
)	O
&&	O
!	O
save_abbr	function
(	O
tz	pointer
,	O
tm	struct
)	O
)	O
t	pointer
=	O
badtime	long
;	O
if	O
(	O
revert_tz	function
(	O
old_tz	pointer
)	O
)	O
return	O
t	pointer
;	O
}	O
return	O
-	O
1	int
;	O
}	O
}	O
