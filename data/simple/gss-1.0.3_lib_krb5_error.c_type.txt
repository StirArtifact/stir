struct	O
gss_status_codes	struct
{	O
gss_uint32	int
err	int
;	O
const	O
char	O
*	O
name	pointer
;	O
const	O
char	O
*	O
text	pointer
;	O
}	O
;	O
static	O
struct	O
gss_status_codes	struct
gss_krb5_errors	array
[	O
]	O
=	O
{	O
{	O
GSS_KRB5_S_G_BAD_SERVICE_NAME	O
,	O
"GSS_KRB5_S_G_BAD_SERVICE_NAME"	pointer
,	O
N_	O
(	O
"No @ in SERVICE-NAME name string"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_BAD_STRING_UID	O
,	O
"GSS_KRB5_S_G_BAD_STRING_UID"	pointer
,	O
N_	O
(	O
"STRING-UID-NAME contains nondigits"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_NOUSER	O
,	O
"GSS_KRB5_S_G_NOUSER"	pointer
,	O
N_	O
(	O
"UID does not resolve to username"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_VALIDATE_FAILED	O
,	O
"GSS_KRB5_S_G_VALIDATE_FAILED"	pointer
,	O
N_	O
(	O
"Validation error"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_BUFFER_ALLOC	O
,	O
"GSS_KRB5_S_G_BUFFER_ALLOC"	pointer
,	O
N_	O
(	O
"Couldn't allocate gss_buffer_t data"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_BAD_MSG_CTX	O
,	O
"GSS_KRB5_S_G_BAD_MSG_CTX"	pointer
,	O
N_	O
(	O
"Message context invalid"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_WRONG_SIZE	O
,	O
"GSS_KRB5_S_G_WRONG_SIZE"	pointer
,	O
N_	O
(	O
"Buffer is the wrong size"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_BAD_USAGE	O
,	O
"GSS_KRB5_S_G_BAD_USAGE"	pointer
,	O
N_	O
(	O
"Credential usage type is unknown"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_G_UNKNOWN_QOP	O
,	O
"GSS_KRB5_S_G_UNKNOWN_QOP"	pointer
,	O
N_	O
(	O
"Unknown quality of protection specified"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_CCACHE_NOMATCH	O
,	O
"GSS_KRB5_S_KG_CCACHE_NOMATCH"	pointer
,	O
N_	O
(	O
"Principal in credential cache does not match desired name"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_KEYTAB_NOMATCH	O
,	O
"GSS_KRB5_S_KG_KEYTAB_NOMATCH"	pointer
,	O
N_	O
(	O
"No principal in keytab matches desired name"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_TGT_MISSING	O
,	O
"GSS_KRB5_S_KG_TGT_MISSING"	pointer
,	O
N_	O
(	O
"Credential cache has no TGT"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_NO_SUBKEY	O
,	O
"GSS_KRB5_S_KG_NO_SUBKEY"	pointer
,	O
N_	O
(	O
"Authenticator has no subkey"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_CONTEXT_ESTABLISHED	O
,	O
"GSS_KRB5_S_KG_CONTEXT_ESTABLISHED"	pointer
,	O
N_	O
(	O
"Context is already fully established"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_BAD_SIGN_TYPE	O
,	O
"GSS_KRB5_S_KG_BAD_SIGN_TYPE"	pointer
,	O
N_	O
(	O
"Unknown signature type in token"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_BAD_LENGTH	O
,	O
"GSS_KRB5_S_KG_BAD_LENGTH"	pointer
,	O
N_	O
(	O
"Invalid field length in token"	pointer
)	O
}	O
,	O
{	O
GSS_KRB5_S_KG_CTX_INCOMPLETE	O
,	O
"GSS_KRB5_S_KG_CTX_INCOMPLETE"	pointer
,	O
N_	O
(	O
"Attempt to use incomplete security context"	pointer
)	O
}	O
}	O
;	O
OM_uint32	int
gss_krb5_display_status	function
(	O
OM_uint32	int
*	O
minor_status	pointer
,	O
OM_uint32	int
status_value	int
,	O
int	O
status_type	int
,	O
const	O
gss_OID	pointer
mech_type	pointer
,	O
OM_uint32	int
*	O
message_context	pointer
,	O
gss_buffer_t	pointer
status_string	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
0	int
;	O
switch	O
(	O
status_value	int
)	O
{	O
case	O
0	int
:	O
status_string	pointer
->	O
value	pointer
=	O
strdup	function
(	O
_	O
(	O
"No krb5 error"	pointer
)	O
)	O
;	O
if	O
(	O
!	O
status_string	pointer
->	O
value	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
status_string	pointer
->	O
length	int
=	O
strlen	function
(	O
status_string	pointer
->	O
value	pointer
)	O
;	O
break	O
;	O
case	O
GSS_KRB5_S_G_BAD_SERVICE_NAME	O
:	O
case	O
GSS_KRB5_S_G_BAD_STRING_UID	O
:	O
case	O
GSS_KRB5_S_G_NOUSER	O
:	O
case	O
GSS_KRB5_S_G_VALIDATE_FAILED	O
:	O
case	O
GSS_KRB5_S_G_BUFFER_ALLOC	O
:	O
case	O
GSS_KRB5_S_G_BAD_MSG_CTX	O
:	O
case	O
GSS_KRB5_S_G_WRONG_SIZE	O
:	O
case	O
GSS_KRB5_S_G_BAD_USAGE	O
:	O
case	O
GSS_KRB5_S_G_UNKNOWN_QOP	O
:	O
case	O
GSS_KRB5_S_KG_CCACHE_NOMATCH	O
:	O
case	O
GSS_KRB5_S_KG_KEYTAB_NOMATCH	O
:	O
case	O
GSS_KRB5_S_KG_TGT_MISSING	O
:	O
case	O
GSS_KRB5_S_KG_NO_SUBKEY	O
:	O
case	O
GSS_KRB5_S_KG_CONTEXT_ESTABLISHED	O
:	O
case	O
GSS_KRB5_S_KG_BAD_SIGN_TYPE	O
:	O
case	O
GSS_KRB5_S_KG_BAD_LENGTH	O
:	O
case	O
GSS_KRB5_S_KG_CTX_INCOMPLETE	O
:	O
status_string	pointer
->	O
value	pointer
=	O
strdup	function
(	O
_	O
(	O
gss_krb5_errors	array
[	O
status_value	int
-	O
1	int
]	O
.	O
text	pointer
)	O
)	O
;	O
if	O
(	O
!	O
status_string	pointer
->	O
value	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
status_string	pointer
->	O
length	int
=	O
strlen	function
(	O
status_string	pointer
->	O
value	pointer
)	O
;	O
break	O
;	O
default	O
:	O
status_string	pointer
->	O
value	pointer
=	O
strdup	function
(	O
_	O
(	O
"Unknown krb5 error"	pointer
)	O
)	O
;	O
if	O
(	O
!	O
status_string	pointer
->	O
value	pointer
)	O
{	O
if	O
(	O
minor_status	pointer
)	O
*	O
minor_status	pointer
=	O
ENOMEM	int
;	O
return	O
GSS_S_FAILURE	O
;	O
}	O
status_string	pointer
->	O
length	int
=	O
strlen	function
(	O
status_string	pointer
->	O
value	pointer
)	O
;	O
break	O
;	O
}	O
return	O
GSS_S_COMPLETE	int
;	O
}	O
