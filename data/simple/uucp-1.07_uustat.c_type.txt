const	O
char	O
uustat_rcsid	array
[	O
]	O
=	O
"$Id: uustat.c,v 1.61 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
struct	O
scmdlist	struct
{	O
struct	O
scmdlist	struct
*	O
qnext	pointer
;	O
struct	O
scmd	struct
s	struct
;	O
long	O
itime	long
;	O
}	O
;	O
static	O
void	O
ususage	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
ushelp	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
boolean	int
fsxqt_file_read	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
FILE	struct
*	O
)	O
)	O
;	O
static	O
void	O
usxqt_file_free	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
int	O
isxqt_cmd	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
isxqt_file	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
isxqt_user	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
boolean	int
fsworkfiles	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
icmd	int
,	O
int	O
csystems	int
,	O
char	O
*	O
*	O
pazsystems	pointer
,	O
boolean	int
fnotsystems	int
,	O
int	O
cusers	int
,	O
char	O
*	O
*	O
pazusers	pointer
,	O
boolean	int
fnotusers	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
,	O
int	O
ccommands	int
,	O
char	O
*	O
*	O
pazcommands	pointer
,	O
boolean	int
fnotcommands	int
,	O
const	O
char	O
*	O
zcomment	pointer
,	O
int	O
cstdin	int
)	O
)	O
;	O
static	O
boolean	int
fsworkfiles_system	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
icmd	int
,	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
int	O
cusers	int
,	O
char	O
*	O
*	O
pazusers	pointer
,	O
boolean	int
fnotusers	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
,	O
int	O
ccommands	int
,	O
char	O
*	O
*	O
pazcommands	pointer
,	O
boolean	int
fnotcommands	int
,	O
const	O
char	O
*	O
zcomment	pointer
,	O
int	O
cstdin	int
)	O
)	O
;	O
static	O
boolean	int
fsworkfile_show	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
icmd	int
,	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
,	O
long	O
itime	long
,	O
int	O
ccommands	int
,	O
char	O
*	O
*	O
pazcommands	pointer
,	O
boolean	int
fnotcommands	int
,	O
const	O
char	O
*	O
zcomment	pointer
,	O
int	O
cstdin	int
)	O
)	O
;	O
static	O
void	O
usworkfile_header	function
P	O
(	O
(	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
,	O
const	O
char	O
*	O
zjobid	pointer
,	O
long	O
itime	long
,	O
boolean	int
ffirst	int
)	O
)	O
;	O
static	O
boolean	int
fsexecutions	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
icmd	int
,	O
int	O
csystems	int
,	O
char	O
*	O
*	O
pazsystems	pointer
,	O
boolean	int
fnotsystems	int
,	O
int	O
cusers	int
,	O
char	O
*	O
*	O
pazusers	pointer
,	O
boolean	int
fnotusers	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
,	O
int	O
ccommands	int
,	O
char	O
*	O
*	O
pazcommands	pointer
,	O
boolean	int
fnotcommands	int
,	O
const	O
char	O
*	O
zcomment	pointer
,	O
int	O
cstdin	int
)	O
)	O
;	O
static	O
boolean	int
fsnotify	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
icmd	int
,	O
const	O
char	O
*	O
zcomment	pointer
,	O
int	O
cstdin	int
,	O
boolean	int
fkilled	int
,	O
const	O
char	O
*	O
zcmd	pointer
,	O
struct	O
scmdlist	struct
*	O
qcmd	pointer
,	O
const	O
char	O
*	O
zid	pointer
,	O
long	O
itime	long
,	O
const	O
char	O
*	O
zuser	pointer
,	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
const	O
char	O
*	O
zstdin	pointer
,	O
pointer	pointer
pstdinseq	pointer
,	O
const	O
char	O
*	O
zrequestor	pointer
)	O
)	O
;	O
static	O
boolean	int
fsquery	function
P	O
(	O
(	O
pointer	pointer
puuconf	pointer
,	O
int	O
csystems	int
,	O
char	O
*	O
*	O
pazsystems	pointer
,	O
boolean	int
fnotsystems	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
)	O
)	O
;	O
static	O
int	O
csunits_show	function
P	O
(	O
(	O
long	O
idiff	long
)	O
)	O
;	O
static	O
boolean	int
fsmachines	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
const	O
struct	O
option	struct
asSlongopts	array
[	O
]	O
=	O
{	O
{	O
"all"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'a'	O
}	O
,	O
{	O
"mail-lines"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'B'	O
}	O
,	O
{	O
"command"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'c'	O
}	O
,	O
{	O
"not-command"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'C'	O
}	O
,	O
{	O
"executions"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'e'	O
}	O
,	O
{	O
"prompt"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'i'	O
}	O
,	O
{	O
"kill"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'k'	O
}	O
,	O
{	O
"kill-all"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'K'	O
}	O
,	O
{	O
"status"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'm'	O
}	O
,	O
{	O
"mail"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'M'	O
}	O
,	O
{	O
"notify"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'N'	O
}	O
,	O
{	O
"older-than"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'o'	O
}	O
,	O
{	O
"ps"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'p'	O
}	O
,	O
{	O
"list"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'q'	O
}	O
,	O
{	O
"no-list"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'Q'	O
}	O
,	O
{	O
"rejuvenate"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'r'	O
}	O
,	O
{	O
"rejuvenate-all"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'R'	O
}	O
,	O
{	O
"system"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"not-system"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'S'	O
}	O
,	O
{	O
"user"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'u'	O
}	O
,	O
{	O
"not-user"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'U'	O
}	O
,	O
{	O
"comment"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'W'	O
}	O
,	O
{	O
"younger-than"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'y'	O
}	O
,	O
{	O
"config"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'I'	O
}	O
,	O
{	O
"debug"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
int	O
main	function
(	O
argc	int
,	O
argv	pointer
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
{	O
boolean	int
fall	int
=	O
FALSE	O
;	O
int	O
cstdin	int
=	O
100	int
;	O
int	O
ccommands	int
=	O
0	int
;	O
char	O
*	O
*	O
pazcommands	pointer
=	O
NULL	O
;	O
boolean	int
fnotcommands	int
=	O
FALSE	O
;	O
boolean	int
fexecute	int
=	O
FALSE	O
;	O
int	O
ckills	int
=	O
0	int
;	O
char	O
*	O
*	O
pazkills	pointer
=	O
NULL	O
;	O
boolean	int
fmachine	int
=	O
FALSE	O
;	O
int	O
ioldhours	int
=	O
-	O
1	int
;	O
boolean	int
fps	int
=	O
FALSE	O
;	O
boolean	int
fquery	int
=	O
FALSE	O
;	O
int	O
crejuvs	int
=	O
0	int
;	O
char	O
*	O
*	O
pazrejuvs	pointer
=	O
NULL	O
;	O
int	O
csystems	int
=	O
0	int
;	O
char	O
*	O
*	O
pazsystems	pointer
=	O
NULL	O
;	O
boolean	int
fnotsystems	int
=	O
FALSE	O
;	O
int	O
cusers	int
=	O
0	int
;	O
char	O
*	O
*	O
pazusers	pointer
=	O
NULL	O
;	O
boolean	int
fnotusers	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zcomment	pointer
=	O
NULL	O
;	O
int	O
iyounghours	int
=	O
-	O
1	int
;	O
const	O
char	O
*	O
zconfig	pointer
=	O
NULL	O
;	O
int	O
icmd	int
=	O
JOB_SHOW	O
;	O
int	O
ccmds	int
;	O
int	O
iopt	int
;	O
pointer	pointer
puuconf	pointer
;	O
int	O
iuuconf	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
const	O
char	O
*	O
azoneuser	array
[	O
1	int
]	O
;	O
boolean	int
fret	int
;	O
zProgram	pointer
=	O
argv	pointer
[	O
0	int
]	O
;	O
while	O
(	O
(	O
iopt	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	pointer
,	O
"aB:c:C:eiI:k:KmMNo:pqQr:Rs:S:u:U:vW:x:y:"	pointer
,	O
asSlongopts	array
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
iopt	int
)	O
{	O
case	O
'a'	O
:	O
fall	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'B'	O
:	O
cstdin	int
=	O
(	O
int	O
)	O
strtol	function
(	O
optarg	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
'C'	O
:	O
fnotcommands	int
=	O
TRUE	O
;	O
case	O
'c'	O
:	O
++	O
ccommands	int
;	O
pazcommands	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazcommands	pointer
,	O
ccommands	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazcommands	pointer
[	O
ccommands	int
-	O
1	int
]	O
=	O
optarg	O
;	O
break	O
;	O
case	O
'e'	O
:	O
fexecute	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'i'	O
:	O
icmd	int
|=	O
JOB_INQUIRE	O
;	O
break	O
;	O
case	O
'I'	O
:	O
if	O
(	O
fsysdep_other_config	function
(	O
optarg	O
)	O
)	O
zconfig	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'k'	O
:	O
++	O
ckills	int
;	O
pazkills	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazkills	pointer
,	O
ckills	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazkills	pointer
[	O
ckills	int
-	O
1	int
]	O
=	O
optarg	O
;	O
break	O
;	O
case	O
'K'	O
:	O
icmd	int
|=	O
JOB_KILL	O
;	O
break	O
;	O
case	O
'm'	O
:	O
fmachine	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'M'	O
:	O
icmd	int
|=	O
JOB_MAIL	O
;	O
break	O
;	O
case	O
'N'	O
:	O
icmd	int
|=	O
JOB_NOTIFY	O
;	O
break	O
;	O
case	O
'o'	O
:	O
ioldhours	int
=	O
(	O
int	O
)	O
strtol	function
(	O
optarg	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
fps	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'q'	O
:	O
fquery	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'Q'	O
:	O
icmd	int
&=	O
~	O
JOB_SHOW	O
;	O
break	O
;	O
case	O
'r'	O
:	O
++	O
crejuvs	int
;	O
pazrejuvs	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazrejuvs	pointer
,	O
crejuvs	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazrejuvs	pointer
[	O
crejuvs	int
-	O
1	int
]	O
=	O
optarg	O
;	O
break	O
;	O
case	O
'R'	O
:	O
icmd	int
|=	O
JOB_REJUVENATE	O
;	O
break	O
;	O
case	O
'S'	O
:	O
fnotsystems	int
=	O
TRUE	O
;	O
case	O
's'	O
:	O
++	O
csystems	int
;	O
pazsystems	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazsystems	pointer
,	O
csystems	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazsystems	pointer
[	O
csystems	int
-	O
1	int
]	O
=	O
optarg	O
;	O
break	O
;	O
case	O
'U'	O
:	O
fnotusers	int
=	O
TRUE	O
;	O
case	O
'u'	O
:	O
++	O
cusers	int
;	O
pazusers	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazusers	pointer
,	O
cusers	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazusers	pointer
[	O
cusers	int
-	O
1	int
]	O
=	O
optarg	O
;	O
break	O
;	O
case	O
'W'	O
:	O
zcomment	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'x'	O
:	O
iDebug	int
|=	O
idebug_parse	function
(	O
optarg	O
)	O
;	O
break	O
;	O
case	O
'y'	O
:	O
iyounghours	int
=	O
(	O
int	O
)	O
strtol	function
(	O
optarg	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
printf	function
(	O
"uustat (Taylor UUCP) %s\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
"Copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
)	O
;	O
printf	function
(	O
"This program is free software; you may redistribute it under the terms of\n"	pointer
)	O
;	O
printf	function
(	O
"the GNU General Public LIcense.  This program has ABSOLUTELY NO WARRANTY.\n"	pointer
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
1	int
:	O
ushelp	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
ususage	function
(	O
)	O
;	O
}	O
}	O
if	O
(	O
optind	O
!=	O
argc	int
)	O
ususage	function
(	O
)	O
;	O
ccmds	int
=	O
0	int
;	O
if	O
(	O
fall	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
ckills	int
>	O
0	int
||	O
crejuvs	int
>	O
0	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
fmachine	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
fps	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
fexecute	int
||	O
fquery	int
||	O
csystems	int
>	O
0	int
||	O
cusers	int
>	O
0	int
||	O
ioldhours	int
!=	O
-	O
1	int
||	O
iyounghours	int
!=	O
-	O
1	int
||	O
ccommands	int
>	O
0	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
fexecute	int
&&	O
fquery	int
)	O
++	O
ccmds	int
;	O
if	O
(	O
ccmds	int
>	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: too many options\n"	pointer
,	O
zProgram	pointer
)	O
;	O
ususage	function
(	O
)	O
;	O
}	O
if	O
(	O
(	O
icmd	int
&	O
JOB_KILL	O
)	O
!=	O
0	int
&&	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: can not both rejuvenate and kill jobs\n"	pointer
,	O
zProgram	pointer
)	O
;	O
ususage	function
(	O
)	O
;	O
}	O
iuuconf	int
=	O
uuconf_init	function
(	O
&	O
puuconf	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zconfig	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
{	O
const	O
char	O
*	O
zdebug	pointer
;	O
iuuconf	int
=	O
uuconf_debuglevel	function
(	O
puuconf	pointer
,	O
&	O
zdebug	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
if	O
(	O
zdebug	pointer
!=	O
NULL	O
)	O
iDebug	int
|=	O
idebug_parse	function
(	O
zdebug	pointer
)	O
;	O
}	O
usysdep_initialize	function
(	O
puuconf	pointer
,	O
INIT_SUID	O
)	O
;	O
if	O
(	O
ccmds	int
==	O
0	int
)	O
{	O
cusers	int
=	O
1	int
;	O
azoneuser	array
[	O
0	int
]	O
=	O
zsysdep_login_name	function
(	O
)	O
;	O
pazusers	pointer
=	O
(	O
char	O
*	O
*	O
)	O
azoneuser	array
;	O
}	O
if	O
(	O
csystems	int
>	O
0	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
csystems	int
;	O
i	int
++	O
)	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
pazsystems	pointer
[	O
i	int
]	O
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"%s: System not found"	pointer
,	O
pazsystems	pointer
[	O
i	int
]	O
)	O
;	O
else	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
pazsystems	pointer
[	O
i	int
]	O
,	O
ssys	struct
.	O
uuconf_zname	pointer
)	O
!=	O
0	int
)	O
pazsystems	pointer
[	O
i	int
]	O
=	O
zbufcpy	function
(	O
ssys	struct
.	O
uuconf_zname	pointer
)	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
}	O
}	O
if	O
(	O
ioldhours	int
==	O
-	O
1	int
)	O
iold	long
=	O
(	O
long	O
)	O
-	O
1	int
;	O
else	O
{	O
iold	long
=	O
(	O
ixsysdep_time	function
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
-	O
(	O
long	O
)	O
ioldhours	int
*	O
(	O
long	O
)	O
60	int
*	O
(	O
long	O
)	O
60	int
)	O
;	O
if	O
(	O
iold	long
<	O
0L	int
)	O
iold	long
=	O
0L	int
;	O
}	O
if	O
(	O
iyounghours	int
==	O
-	O
1	int
)	O
iyoung	long
=	O
(	O
long	O
)	O
-	O
1	int
;	O
else	O
{	O
iyoung	long
=	O
(	O
ixsysdep_time	function
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
-	O
(	O
long	O
)	O
iyounghours	int
*	O
(	O
long	O
)	O
60	int
*	O
(	O
long	O
)	O
60	int
)	O
;	O
if	O
(	O
iyoung	long
<	O
0L	int
)	O
iyoung	long
=	O
0L	int
;	O
}	O
if	O
(	O
!	O
fexecute	int
&&	O
!	O
fquery	int
&&	O
(	O
fall	int
||	O
csystems	int
>	O
0	int
||	O
cusers	int
>	O
0	int
||	O
ioldhours	int
!=	O
-	O
1	int
||	O
iyounghours	int
!=	O
-	O
1	int
||	O
ccommands	int
>	O
0	int
)	O
)	O
fret	int
=	O
fsworkfiles	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
;	O
else	O
if	O
(	O
fexecute	int
)	O
fret	int
=	O
fsexecutions	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
;	O
else	O
if	O
(	O
icmd	int
!=	O
JOB_SHOW	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"-i, -K, -M, -N, -Q, -R not supported with -k, -m, -p, -q, -r"	pointer
)	O
;	O
ususage	function
(	O
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
fquery	int
)	O
{	O
if	O
(	O
cusers	int
>	O
0	int
||	O
ccommands	int
>	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"-u, -c not supported with -q"	pointer
)	O
;	O
ususage	function
(	O
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
else	O
fret	int
=	O
fsquery	function
(	O
puuconf	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
;	O
}	O
else	O
if	O
(	O
fmachine	int
)	O
fret	int
=	O
fsmachines	function
(	O
)	O
;	O
else	O
if	O
(	O
ckills	int
>	O
0	int
||	O
crejuvs	int
>	O
0	int
)	O
{	O
int	O
i	int
;	O
fret	int
=	O
TRUE	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ckills	int
;	O
i	int
++	O
)	O
if	O
(	O
!	O
fsysdep_kill_job	function
(	O
puuconf	pointer
,	O
pazkills	pointer
[	O
i	int
]	O
)	O
)	O
fret	int
=	O
FALSE	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
crejuvs	int
;	O
i	int
++	O
)	O
if	O
(	O
!	O
fsysdep_rejuvenate_job	function
(	O
puuconf	pointer
,	O
pazrejuvs	pointer
[	O
i	int
]	O
)	O
)	O
fret	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
fps	int
)	O
fret	int
=	O
fsysdep_lock_status	function
(	O
)	O
;	O
else	O
{	O
ulog	function
(	O
LOG_FATAL	int
,	O
"Can't happen"	pointer
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
ulog_close	function
(	O
)	O
;	O
usysdep_exit	function
(	O
fret	int
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
ususage	function
(	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s [options]\n"	pointer
,	O
zProgram	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Use %s --help for help\n"	pointer
,	O
zProgram	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
ushelp	function
(	O
)	O
{	O
printf	function
(	O
"Taylor UUCP %s, copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
"Usage: %s [options]\n"	pointer
,	O
zProgram	pointer
)	O
;	O
printf	function
(	O
" -a,--all: list all UUCP jobs\n"	pointer
)	O
;	O
printf	function
(	O
" -B,--mail-lines num: number of lines to return in -M or -N mail message\n"	pointer
)	O
;	O
printf	function
(	O
" -c,--command command: list requests for named command\n"	pointer
)	O
;	O
printf	function
(	O
" -C,--not-command command: list requests for other than named command\n"	pointer
)	O
;	O
printf	function
(	O
" -e,--executions: list queued executions rather than job requests\n"	pointer
)	O
;	O
printf	function
(	O
" -i,--prompt: prompt for whether to kill each listed job\n"	pointer
)	O
;	O
printf	function
(	O
" -k,--kill job: kill specified UUCP job\n"	pointer
)	O
;	O
printf	function
(	O
" -K,--kill-all: kill each listed job\n"	pointer
)	O
;	O
printf	function
(	O
" -m,--status: report status for all remote machines\n"	pointer
)	O
;	O
printf	function
(	O
" -M,--mail: mail report on each listed job to UUCP administrator\n"	pointer
)	O
;	O
printf	function
(	O
" -N,--notify: mail report on each listed job to requestor\n"	pointer
)	O
;	O
printf	function
(	O
" -o,--older-than hours: list all jobs older than given number of hours\n"	pointer
)	O
;	O
printf	function
(	O
" -p,--ps: show status of all processes holding UUCP locks\n"	pointer
)	O
;	O
printf	function
(	O
" -q,--list: list number of jobs for each system\n"	pointer
)	O
;	O
printf	function
(	O
" -Q,--no-list: don't list jobs, just take actions (-i, -K, -M, -N)\n"	pointer
)	O
;	O
printf	function
(	O
" -r,--rejuvenate job: rejuvenate specified UUCP job\n"	pointer
)	O
;	O
printf	function
(	O
" -R,--rejuvenate-all: rejuvenate each listed job\n"	pointer
)	O
;	O
printf	function
(	O
" -s,--system system: list all jobs for specified system\n"	pointer
)	O
;	O
printf	function
(	O
" -S,--not-system system: list all jobs for other than specified system\n"	pointer
)	O
;	O
printf	function
(	O
" -u,--user user: list all jobs for specified user\n"	pointer
)	O
;	O
printf	function
(	O
" -U,--not-user user: list all jobs for other than specified user\n"	pointer
)	O
;	O
printf	function
(	O
" -W,--comment comment: comment to include in mail messages\n"	pointer
)	O
;	O
printf	function
(	O
" -y,--younger-than hours: list all jobs younger than given number of hours\n"	pointer
)	O
;	O
printf	function
(	O
" -x,--debug debug: Set debugging level\n"	pointer
)	O
;	O
printf	function
(	O
" -I,--config file: Set configuration file to use\n"	pointer
)	O
;	O
printf	function
(	O
" -v,--version: Print version and exit\n"	pointer
)	O
;	O
printf	function
(	O
" --help: Print help and exit\n"	pointer
)	O
;	O
printf	function
(	O
"Report bugs to taylor-uucp@gnu.org\n"	pointer
)	O
;	O
}	O
static	O
char	O
*	O
zSxqt_user	pointer
;	O
static	O
char	O
*	O
zSxqt_system	pointer
;	O
static	O
const	O
char	O
*	O
zSxqt_requestor	pointer
;	O
static	O
char	O
*	O
zSxqt_prog	pointer
;	O
static	O
char	O
*	O
zSxqt_cmd	pointer
;	O
static	O
int	O
cSxqt_files	int
;	O
static	O
char	O
*	O
*	O
pazSxqt_files	pointer
;	O
static	O
const	O
char	O
*	O
zSxqt_stdin	pointer
;	O
static	O
const	O
struct	O
uuconf_cmdtab	struct
asSxqt_cmds	array
[	O
]	O
=	O
{	O
{	O
"C"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
isxqt_cmd	function
}	O
,	O
{	O
"I"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	pointer
)	O
&	O
zSxqt_stdin	pointer
,	O
NULL	O
}	O
,	O
{	O
"F"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
NULL	O
,	O
isxqt_file	function
}	O
,	O
{	O
"R"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
(	O
pointer	pointer
)	O
&	O
zSxqt_requestor	pointer
,	O
NULL	O
}	O
,	O
{	O
"U"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
3	int
,	O
NULL	O
,	O
isxqt_user	function
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
static	O
boolean	int
fsxqt_file_read	function
(	O
puuconf	pointer
,	O
e	pointer
)	O
pointer	pointer
puuconf	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
{	O
int	O
iuuconf	int
;	O
boolean	int
fret	int
;	O
zSxqt_user	pointer
=	O
NULL	O
;	O
zSxqt_system	pointer
=	O
NULL	O
;	O
zSxqt_stdin	pointer
=	O
NULL	O
;	O
zSxqt_requestor	pointer
=	O
NULL	O
;	O
zSxqt_prog	pointer
=	O
NULL	O
;	O
zSxqt_cmd	pointer
=	O
NULL	O
;	O
cSxqt_files	int
=	O
0	int
;	O
pazSxqt_files	pointer
=	O
NULL	O
;	O
iuuconf	int
=	O
uuconf_cmd_file	function
(	O
puuconf	pointer
,	O
e	pointer
,	O
asSxqt_cmds	array
,	O
(	O
pointer	pointer
)	O
NULL	O
,	O
(	O
uuconf_cmdtabfn	pointer
)	O
NULL	O
,	O
UUCONF_CMDTABFLAG_CASE	O
,	O
(	O
pointer	pointer
)	O
NULL	O
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_SUCCESS	O
)	O
fret	int
=	O
TRUE	O
;	O
else	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
}	O
if	O
(	O
zSxqt_user	pointer
==	O
NULL	O
)	O
zSxqt_user	pointer
=	O
zbufcpy	function
(	O
"*unknown*"	pointer
)	O
;	O
if	O
(	O
zSxqt_system	pointer
==	O
NULL	O
)	O
zSxqt_system	pointer
=	O
zbufcpy	function
(	O
"*unknown*"	pointer
)	O
;	O
if	O
(	O
zSxqt_prog	pointer
==	O
NULL	O
)	O
{	O
zSxqt_prog	pointer
=	O
zbufcpy	function
(	O
"*none*"	pointer
)	O
;	O
zSxqt_cmd	pointer
=	O
zbufcpy	function
(	O
"*none*"	pointer
)	O
;	O
}	O
return	O
fret	int
;	O
}	O
static	O
void	O
usxqt_file_free	function
(	O
)	O
{	O
int	O
i	int
;	O
ubuffree	function
(	O
zSxqt_user	pointer
)	O
;	O
zSxqt_user	pointer
=	O
NULL	O
;	O
ubuffree	function
(	O
zSxqt_system	pointer
)	O
;	O
zSxqt_system	pointer
=	O
NULL	O
;	O
ubuffree	function
(	O
zSxqt_prog	pointer
)	O
;	O
zSxqt_prog	pointer
=	O
NULL	O
;	O
ubuffree	function
(	O
zSxqt_cmd	pointer
)	O
;	O
zSxqt_cmd	pointer
=	O
NULL	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cSxqt_files	int
;	O
i	int
++	O
)	O
ubuffree	function
(	O
pazSxqt_files	pointer
[	O
i	int
]	O
)	O
;	O
cSxqt_files	int
=	O
0	int
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
pazSxqt_files	pointer
)	O
;	O
pazSxqt_files	pointer
=	O
NULL	O
;	O
zSxqt_stdin	pointer
=	O
NULL	O
;	O
zSxqt_requestor	pointer
=	O
NULL	O
;	O
}	O
static	O
int	O
isxqt_cmd	function
(	O
puuconf	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
puuconf	pointer
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
size_t	long
clen	long
;	O
int	O
i	int
;	O
if	O
(	O
argc	int
<=	O
1	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
zSxqt_prog	pointer
=	O
zbufcpy	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
clen	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
clen	long
+=	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
+	O
1	int
;	O
zSxqt_cmd	pointer
=	O
zbufalc	function
(	O
clen	long
)	O
;	O
zSxqt_cmd	pointer
[	O
0	int
]	O
=	O
'\0'	O
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
-	O
1	int
;	O
i	int
++	O
)	O
{	O
strcat	function
(	O
zSxqt_cmd	pointer
,	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
strcat	function
(	O
zSxqt_cmd	pointer
,	O
" "	pointer
)	O
;	O
}	O
strcat	function
(	O
zSxqt_cmd	pointer
,	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
isxqt_file	function
(	O
puuconf	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
puuconf	pointer
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
if	O
(	O
argc	int
!=	O
2	int
&&	O
argc	int
!=	O
3	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
if	O
(	O
!	O
fspool_file	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
++	O
cSxqt_files	int
;	O
pazSxqt_files	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pazSxqt_files	pointer
,	O
cSxqt_files	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
pazSxqt_files	pointer
[	O
cSxqt_files	int
-	O
1	int
]	O
=	O
zbufcpy	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
isxqt_user	function
(	O
puuconf	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
puuconf	pointer
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
zSxqt_user	pointer
=	O
zbufcpy	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
zSxqt_system	pointer
=	O
zbufcpy	function
(	O
argv	pointer
[	O
2	int
]	O
)	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
boolean	int
fsworkfiles	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
icmd	int
;	O
int	O
csystems	int
;	O
char	O
*	O
*	O
pazsystems	pointer
;	O
boolean	int
fnotsystems	int
;	O
int	O
cusers	int
;	O
char	O
*	O
*	O
pazusers	pointer
;	O
boolean	int
fnotusers	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
int	O
ccommands	int
;	O
char	O
*	O
*	O
pazcommands	pointer
;	O
boolean	int
fnotcommands	int
;	O
const	O
char	O
*	O
zcomment	pointer
;	O
int	O
cstdin	int
;	O
{	O
boolean	int
fret	int
;	O
int	O
i	int
;	O
int	O
iuuconf	int
;	O
struct	O
uuconf_system	struct
ssys	struct
;	O
fret	int
=	O
TRUE	O
;	O
if	O
(	O
csystems	int
>	O
0	int
&&	O
!	O
fnotsystems	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
csystems	int
;	O
i	int
++	O
)	O
{	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
pazsystems	pointer
[	O
i	int
]	O
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: System not found"	pointer
,	O
pazsystems	pointer
[	O
i	int
]	O
)	O
;	O
else	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
fsworkfiles_system	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
&	O
ssys	struct
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
)	O
fret	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
}	O
}	O
else	O
{	O
char	O
*	O
*	O
pznames	pointer
,	O
*	O
*	O
pz	pointer
;	O
iuuconf	int
=	O
uuconf_system_names	function
(	O
puuconf	pointer
,	O
&	O
pznames	pointer
,	O
0	int
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
for	O
(	O
pz	pointer
=	O
pznames	pointer
;	O
*	O
pz	pointer
!=	O
NULL	O
;	O
pz	pointer
++	O
)	O
{	O
if	O
(	O
csystems	int
>	O
0	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
csystems	int
;	O
i	int
++	O
)	O
if	O
(	O
strcmp	function
(	O
*	O
pz	pointer
,	O
pazsystems	pointer
[	O
i	int
]	O
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	int
<	O
csystems	int
)	O
continue	O
;	O
}	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
*	O
pz	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
fsworkfiles_system	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
&	O
ssys	struct
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
)	O
fret	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
*	O
pz	pointer
)	O
;	O
}	O
xfree	function
(	O
(	O
pointer	pointer
)	O
pznames	pointer
)	O
;	O
}	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsworkfiles_system	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
qsys	pointer
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
icmd	int
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
int	O
cusers	int
;	O
char	O
*	O
*	O
pazusers	pointer
;	O
boolean	int
fnotusers	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
int	O
ccommands	int
;	O
char	O
*	O
*	O
pazcommands	pointer
;	O
boolean	int
fnotcommands	int
;	O
const	O
char	O
*	O
zcomment	pointer
;	O
int	O
cstdin	int
;	O
{	O
boolean	int
fret	int
;	O
if	O
(	O
!	O
fsysdep_get_work_init	function
(	O
qsys	pointer
,	O
UUCONF_GRADE_LOW	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
struct	O
scmd	struct
s	struct
;	O
long	O
itime	long
;	O
if	O
(	O
!	O
fsysdep_get_work	function
(	O
qsys	pointer
,	O
UUCONF_GRADE_LOW	O
,	O
0	int
,	O
&	O
s	struct
)	O
)	O
{	O
usysdep_get_work_free	function
(	O
qsys	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
s	struct
.	O
bcmd	char
==	O
'H'	O
)	O
break	O
;	O
if	O
(	O
cusers	int
>	O
0	int
)	O
{	O
boolean	int
fmatch	int
;	O
int	O
i	int
;	O
fmatch	int
=	O
fnotusers	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cusers	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
s	struct
.	O
zuser	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
pazusers	pointer
[	O
i	int
]	O
,	O
s	struct
.	O
zuser	pointer
)	O
==	O
0	int
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
fmatch	int
)	O
continue	O
;	O
}	O
itime	long
=	O
ixsysdep_work_time	function
(	O
qsys	pointer
,	O
s	struct
.	O
pseq	pointer
)	O
;	O
if	O
(	O
iold	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
itime	long
>	O
iold	long
)	O
continue	O
;	O
if	O
(	O
iyoung	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
itime	long
<	O
iyoung	long
)	O
continue	O
;	O
if	O
(	O
!	O
fsworkfile_show	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
qsys	pointer
,	O
&	O
s	struct
,	O
itime	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
)	O
{	O
usysdep_get_work_free	function
(	O
qsys	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
fret	int
=	O
fsworkfile_show	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
qsys	pointer
,	O
(	O
const	O
struct	O
scmd	struct
*	O
)	O
NULL	O
,	O
0L	int
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
;	O
usysdep_get_work_free	function
(	O
qsys	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsworkfile_show	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
qsys	pointer
,	O
qcmd	pointer
,	O
itime	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
icmd	int
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
long	O
itime	long
;	O
int	O
ccommands	int
;	O
char	O
*	O
*	O
pazcommands	pointer
;	O
boolean	int
fnotcommands	int
;	O
const	O
char	O
*	O
zcomment	pointer
;	O
int	O
cstdin	int
;	O
{	O
static	O
struct	O
scmdlist	struct
*	O
qlist	pointer
;	O
static	O
char	O
*	O
zlistid	pointer
;	O
char	O
*	O
zid	pointer
;	O
if	O
(	O
qcmd	pointer
==	O
NULL	O
)	O
zid	pointer
=	O
NULL	O
;	O
else	O
{	O
zid	pointer
=	O
zsysdep_jobid	function
(	O
qsys	pointer
,	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
if	O
(	O
zid	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
qcmd	pointer
!=	O
NULL	O
&&	O
qlist	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
zlistid	pointer
,	O
zid	pointer
)	O
==	O
0	int
)	O
{	O
struct	O
scmdlist	struct
*	O
qnew	pointer
,	O
*	O
*	O
pq	pointer
;	O
ubuffree	function
(	O
zid	pointer
)	O
;	O
qnew	pointer
=	O
(	O
struct	O
scmdlist	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
scmdlist	struct
)	O
)	O
;	O
qnew	pointer
->	O
qnext	pointer
=	O
NULL	O
;	O
qnew	pointer
->	O
s	struct
=	O
*	O
qcmd	pointer
;	O
qnew	pointer
->	O
itime	long
=	O
itime	long
;	O
for	O
(	O
pq	pointer
=	O
&	O
qlist	pointer
;	O
*	O
pq	pointer
!=	O
NULL	O
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
qnext	pointer
)	O
;	O
*	O
pq	pointer
=	O
qnew	pointer
;	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
qlist	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fmatch	int
;	O
const	O
char	O
*	O
zprog	pointer
,	O
*	O
zcmd	pointer
,	O
*	O
zrequestor	pointer
,	O
*	O
zstdin	pointer
;	O
char	O
*	O
zfree	pointer
;	O
struct	O
scmdlist	struct
*	O
qxqt	pointer
;	O
FILE	struct
*	O
exqt	pointer
=	O
NULL	O
;	O
struct	O
scmdlist	struct
*	O
qfree	pointer
;	O
fmatch	int
=	O
FALSE	O
;	O
zprog	pointer
=	O
zcmd	pointer
=	O
zrequestor	pointer
=	O
zstdin	pointer
=	O
NULL	O
;	O
zfree	pointer
=	O
NULL	O
;	O
for	O
(	O
qxqt	pointer
=	O
qlist	pointer
;	O
qxqt	pointer
!=	O
NULL	O
;	O
qxqt	pointer
=	O
qxqt	pointer
->	O
qnext	pointer
)	O
{	O
if	O
(	O
qxqt	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
break	O
;	O
if	O
(	O
qxqt	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'S'	O
&&	O
qxqt	pointer
->	O
s	struct
.	O
zto	pointer
[	O
0	int
]	O
==	O
'X'	O
&&	O
qxqt	pointer
->	O
s	struct
.	O
zto	pointer
[	O
1	int
]	O
==	O
'.'	O
&&	O
fspool_file	function
(	O
qxqt	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
)	O
{	O
char	O
*	O
zxqt	pointer
;	O
zxqt	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qxqt	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qxqt	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
if	O
(	O
zxqt	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
exqt	pointer
=	O
fopen	function
(	O
zxqt	pointer
,	O
"r"	pointer
)	O
;	O
ubuffree	function
(	O
zxqt	pointer
)	O
;	O
if	O
(	O
exqt	pointer
!=	O
NULL	O
)	O
break	O
;	O
}	O
}	O
if	O
(	O
qxqt	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
ccommands	int
==	O
0	int
||	O
(	O
fnotcommands	int
&&	O
strcmp	function
(	O
pazcommands	pointer
[	O
0	int
]	O
,	O
"ALL"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
fmatch	int
=	O
TRUE	O
;	O
if	O
(	O
(	O
icmd	int
&	O
JOB_SHOW	O
)	O
!=	O
0	int
)	O
{	O
struct	O
scmdlist	struct
*	O
qshow	pointer
;	O
for	O
(	O
qshow	pointer
=	O
qlist	pointer
;	O
qshow	pointer
!=	O
NULL	O
;	O
qshow	pointer
=	O
qshow	pointer
->	O
qnext	pointer
)	O
{	O
char	O
*	O
zfile	pointer
;	O
long	O
cbytes	long
;	O
usworkfile_header	function
(	O
qsys	pointer
,	O
&	O
qshow	pointer
->	O
s	struct
,	O
zlistid	pointer
,	O
qshow	pointer
->	O
itime	long
,	O
qshow	pointer
==	O
qlist	pointer
)	O
;	O
switch	O
(	O
qshow	pointer
->	O
s	struct
.	O
bcmd	char
)	O
{	O
case	O
'S'	O
:	O
if	O
(	O
strchr	function
(	O
qshow	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'C'	O
)	O
!=	O
NULL	O
||	O
fspool_file	function
(	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
)	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
ztemp	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
else	O
zfile	pointer
=	O
zbufcpy	function
(	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
cbytes	long
=	O
-	O
1	int
;	O
else	O
cbytes	long
=	O
csysdep_size	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
>=	O
0	int
)	O
printf	function
(	O
"Sending %s (%ld bytes) to %s"	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
cbytes	long
,	O
qshow	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
break	O
;	O
case	O
'R'	O
:	O
printf	function
(	O
"Requesting %s to %s"	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
break	O
;	O
case	O
'X'	O
:	O
printf	function
(	O
"Requesting %s to %s"	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
break	O
;	O
case	O
'P'	O
:	O
printf	function
(	O
"(poll file)"	pointer
)	O
;	O
break	O
;	O
default	O
:	O
printf	function
(	O
"Bad line %d"	pointer
,	O
qshow	pointer
->	O
s	struct
.	O
bcmd	char
)	O
;	O
break	O
;	O
}	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
}	O
}	O
}	O
else	O
{	O
long	O
csize	long
;	O
struct	O
scmdlist	struct
*	O
qsize	pointer
;	O
if	O
(	O
qxqt	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
{	O
zfree	pointer
=	O
zbufcpy	function
(	O
qxqt	pointer
->	O
s	struct
.	O
zcmd	pointer
)	O
;	O
zfree	pointer
[	O
strcspn	function
(	O
zfree	pointer
,	O
" \t"	pointer
)	O
]	O
=	O
'\0'	O
;	O
zprog	pointer
=	O
zfree	pointer
;	O
zcmd	pointer
=	O
qxqt	pointer
->	O
s	struct
.	O
zcmd	pointer
;	O
if	O
(	O
strchr	function
(	O
qxqt	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'R'	O
)	O
!=	O
NULL	O
)	O
zrequestor	pointer
=	O
qxqt	pointer
->	O
s	struct
.	O
znotify	pointer
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fsxqt_file_read	function
(	O
puuconf	pointer
,	O
exqt	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fclose	function
(	O
exqt	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
exqt	pointer
)	O
;	O
zprog	pointer
=	O
zSxqt_prog	pointer
;	O
zcmd	pointer
=	O
zSxqt_cmd	pointer
;	O
zrequestor	pointer
=	O
zSxqt_requestor	pointer
;	O
}	O
csize	long
=	O
0L	int
;	O
for	O
(	O
qsize	pointer
=	O
qlist	pointer
;	O
qsize	pointer
!=	O
NULL	O
;	O
qsize	pointer
=	O
qsize	pointer
->	O
qnext	pointer
)	O
{	O
if	O
(	O
qsize	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'S'	O
||	O
qsize	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
{	O
char	O
*	O
zfile	pointer
;	O
if	O
(	O
strchr	function
(	O
qsize	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'C'	O
)	O
!=	O
NULL	O
||	O
fspool_file	function
(	O
qsize	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
)	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qsize	pointer
->	O
s	struct
.	O
ztemp	pointer
,	O
qsize	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
else	O
zfile	pointer
=	O
zbufcpy	function
(	O
qsize	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
;	O
if	O
(	O
zfile	pointer
!=	O
NULL	O
)	O
{	O
long	O
cbytes	long
;	O
cbytes	long
=	O
csysdep_size	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
>	O
0	int
)	O
csize	long
+=	O
cbytes	long
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
}	O
}	O
}	O
if	O
(	O
ccommands	int
==	O
0	int
)	O
fmatch	int
=	O
TRUE	O
;	O
else	O
{	O
int	O
i	int
;	O
fmatch	int
=	O
fnotcommands	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ccommands	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
pazcommands	pointer
[	O
i	int
]	O
,	O
"ALL"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
pazcommands	pointer
[	O
i	int
]	O
,	O
zprog	pointer
)	O
==	O
0	int
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
fmatch	int
)	O
{	O
struct	O
scmdlist	struct
*	O
qstdin	pointer
;	O
if	O
(	O
qxqt	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
qstdin	pointer
=	O
qxqt	pointer
;	O
else	O
if	O
(	O
zSxqt_stdin	pointer
!=	O
NULL	O
)	O
{	O
for	O
(	O
qstdin	pointer
=	O
qlist	pointer
;	O
qstdin	pointer
!=	O
NULL	O
;	O
qstdin	pointer
=	O
qstdin	pointer
->	O
qnext	pointer
)	O
if	O
(	O
qstdin	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'S'	O
&&	O
strcmp	function
(	O
qstdin	pointer
->	O
s	struct
.	O
zto	pointer
,	O
zSxqt_stdin	pointer
)	O
==	O
0	int
)	O
break	O
;	O
}	O
else	O
qstdin	pointer
=	O
NULL	O
;	O
if	O
(	O
qstdin	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
strchr	function
(	O
qstdin	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'C'	O
)	O
!=	O
NULL	O
||	O
fspool_file	function
(	O
qstdin	pointer
->	O
s	struct
.	O
zfrom	pointer
)	O
)	O
zstdin	pointer
=	O
qstdin	pointer
->	O
s	struct
.	O
ztemp	pointer
;	O
else	O
zstdin	pointer
=	O
qstdin	pointer
->	O
s	struct
.	O
zfrom	pointer
;	O
}	O
}	O
if	O
(	O
fmatch	int
&&	O
(	O
icmd	int
&	O
JOB_SHOW	O
)	O
!=	O
0	int
)	O
{	O
usworkfile_header	function
(	O
qsys	pointer
,	O
&	O
qxqt	pointer
->	O
s	struct
,	O
zlistid	pointer
,	O
qxqt	pointer
->	O
itime	long
,	O
TRUE	O
)	O
;	O
printf	function
(	O
"Executing %s (sending %ld bytes)\n"	pointer
,	O
zcmd	pointer
,	O
csize	long
)	O
;	O
}	O
}	O
if	O
(	O
fmatch	int
)	O
{	O
boolean	int
fkill_or_rejuv	int
;	O
fkill_or_rejuv	int
=	O
FALSE	O
;	O
if	O
(	O
(	O
icmd	int
&	O
JOB_INQUIRE	O
)	O
!=	O
0	int
)	O
{	O
int	O
b	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %s %s? "	pointer
,	O
zProgram	pointer
,	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
?	O
"Rejuvenate"	pointer
:	O
"Kill"	pointer
,	O
zlistid	pointer
)	O
;	O
(	O
void	O
)	O
fflush	function
(	O
stderr	pointer
)	O
;	O
b	int
=	O
getchar	function
(	O
)	O
;	O
fkill_or_rejuv	int
=	O
b	int
==	O
'y'	O
||	O
b	int
==	O
'Y'	O
;	O
while	O
(	O
b	int
!=	O
EOF	O
&&	O
b	int
!=	O
'\n'	O
)	O
b	int
=	O
getchar	function
(	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
icmd	int
&	O
JOB_KILL	O
)	O
!=	O
0	int
||	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
)	O
fkill_or_rejuv	int
=	O
TRUE	O
;	O
if	O
(	O
fkill_or_rejuv	int
&&	O
(	O
qlist	pointer
->	O
s	struct
.	O
zuser	pointer
==	O
NULL	O
||	O
strcmp	function
(	O
zsysdep_login_name	function
(	O
)	O
,	O
qlist	pointer
->	O
s	struct
.	O
zuser	pointer
)	O
!=	O
0	int
)	O
&&	O
!	O
fsysdep_privileged	function
(	O
)	O
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: Not submitted by you"	pointer
,	O
zlistid	pointer
)	O
;	O
else	O
{	O
if	O
(	O
(	O
icmd	int
&	O
(	O
JOB_MAIL	O
|	O
JOB_NOTIFY	O
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
fsnotify	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
zcomment	pointer
,	O
cstdin	int
,	O
(	O
fkill_or_rejuv	int
&&	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
==	O
0	int
)	O
,	O
zcmd	pointer
,	O
qlist	pointer
,	O
zlistid	pointer
,	O
qlist	pointer
->	O
itime	long
,	O
qlist	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qsys	pointer
,	O
zstdin	pointer
,	O
qlist	pointer
->	O
s	struct
.	O
pseq	pointer
,	O
zrequestor	pointer
)	O
)	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fkill_or_rejuv	int
)	O
{	O
if	O
(	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
fsysdep_kill_job	function
(	O
puuconf	pointer
,	O
zlistid	pointer
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
fsysdep_rejuvenate_job	function
(	O
puuconf	pointer
,	O
zlistid	pointer
)	O
)	O
return	O
FALSE	O
;	O
}	O
}	O
}	O
}	O
if	O
(	O
qxqt	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
qxqt	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
)	O
ubuffree	function
(	O
zfree	pointer
)	O
;	O
else	O
usxqt_file_free	function
(	O
)	O
;	O
}	O
qfree	pointer
=	O
qlist	pointer
;	O
while	O
(	O
qfree	pointer
!=	O
NULL	O
)	O
{	O
struct	O
scmdlist	struct
*	O
qnext	pointer
;	O
qnext	pointer
=	O
qfree	pointer
->	O
qnext	pointer
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qfree	pointer
)	O
;	O
qfree	pointer
=	O
qnext	pointer
;	O
}	O
ubuffree	function
(	O
zlistid	pointer
)	O
;	O
qlist	pointer
=	O
NULL	O
;	O
zlistid	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
qcmd	pointer
!=	O
NULL	O
)	O
{	O
qlist	pointer
=	O
(	O
struct	O
scmdlist	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
scmdlist	struct
)	O
)	O
;	O
qlist	pointer
->	O
qnext	pointer
=	O
NULL	O
;	O
qlist	pointer
->	O
s	struct
=	O
*	O
qcmd	pointer
;	O
qlist	pointer
->	O
itime	long
=	O
itime	long
;	O
zlistid	pointer
=	O
zid	pointer
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
void	O
usworkfile_header	function
(	O
qsys	pointer
,	O
qcmd	pointer
,	O
zjobid	pointer
,	O
itime	long
,	O
ffirst	int
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
const	O
char	O
*	O
zjobid	pointer
;	O
long	O
itime	long
;	O
boolean	int
ffirst	int
;	O
{	O
const	O
char	O
*	O
zshowid	pointer
;	O
struct	O
tm	struct
stime	struct
;	O
if	O
(	O
ffirst	int
)	O
zshowid	pointer
=	O
zjobid	pointer
;	O
else	O
zshowid	pointer
=	O
"-"	pointer
;	O
printf	function
(	O
"%s %s %s "	pointer
,	O
zshowid	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
!=	O
NULL	O
?	O
qcmd	pointer
->	O
zuser	pointer
:	O
OWNER	pointer
)	O
;	O
usysdep_localtime	function
(	O
itime	long
,	O
&	O
stime	struct
)	O
;	O
printf	function
(	O
"%02d-%02d %02d:%02d "	pointer
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
)	O
;	O
}	O
static	O
boolean	int
fsexecutions	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
cusers	int
,	O
pazusers	pointer
,	O
fnotusers	int
,	O
iold	long
,	O
iyoung	long
,	O
ccommands	int
,	O
pazcommands	pointer
,	O
fnotcommands	int
,	O
zcomment	pointer
,	O
cstdin	int
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
icmd	int
;	O
int	O
csystems	int
;	O
char	O
*	O
*	O
pazsystems	pointer
;	O
boolean	int
fnotsystems	int
;	O
int	O
cusers	int
;	O
char	O
*	O
*	O
pazusers	pointer
;	O
boolean	int
fnotusers	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
int	O
ccommands	int
;	O
char	O
*	O
*	O
pazcommands	pointer
;	O
boolean	int
fnotcommands	int
;	O
const	O
char	O
*	O
zcomment	pointer
;	O
int	O
cstdin	int
;	O
{	O
const	O
char	O
*	O
zlocalname	pointer
;	O
int	O
iuuconf	int
;	O
char	O
*	O
zfile	pointer
;	O
char	O
*	O
zsystem	pointer
;	O
boolean	int
ferr	int
;	O
iuuconf	int
=	O
uuconf_localname	function
(	O
puuconf	pointer
,	O
&	O
zlocalname	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zlocalname	pointer
=	O
zsysdep_localname	function
(	O
)	O
;	O
if	O
(	O
zlocalname	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fsysdep_get_xqt_init	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
return	O
FALSE	O
;	O
while	O
(	O
(	O
zfile	pointer
=	O
zsysdep_get_xqt	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
&	O
zsystem	pointer
,	O
&	O
ferr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
boolean	int
fmatch	int
;	O
int	O
i	int
;	O
long	O
itime	long
;	O
FILE	struct
*	O
e	pointer
;	O
if	O
(	O
csystems	int
>	O
0	int
)	O
{	O
fmatch	int
=	O
fnotsystems	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
csystems	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
pazsystems	pointer
[	O
i	int
]	O
,	O
zsystem	pointer
)	O
==	O
0	int
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
fmatch	int
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
continue	O
;	O
}	O
}	O
itime	long
=	O
ixsysdep_file_time	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
(	O
iold	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
itime	long
>	O
iold	long
)	O
||	O
(	O
iyoung	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
itime	long
<	O
iyoung	long
)	O
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
continue	O
;	O
}	O
e	pointer
=	O
fopen	function
(	O
zfile	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
continue	O
;	O
}	O
if	O
(	O
!	O
fsxqt_file_read	function
(	O
puuconf	pointer
,	O
e	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
continue	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
cusers	int
==	O
0	int
)	O
fmatch	int
=	O
TRUE	O
;	O
else	O
{	O
fmatch	int
=	O
fnotusers	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cusers	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
zSxqt_user	pointer
,	O
pazusers	pointer
[	O
i	int
]	O
)	O
==	O
0	int
||	O
(	O
zSxqt_requestor	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
zSxqt_requestor	pointer
,	O
pazusers	pointer
[	O
i	int
]	O
)	O
==	O
0	int
)	O
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
fmatch	int
&&	O
ccommands	int
>	O
0	int
)	O
{	O
fmatch	int
=	O
fnotcommands	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ccommands	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
pazcommands	pointer
[	O
i	int
]	O
,	O
"ALL"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
pazcommands	pointer
[	O
i	int
]	O
,	O
zSxqt_prog	pointer
)	O
==	O
0	int
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
}	O
if	O
(	O
fmatch	int
)	O
{	O
boolean	int
fbad	int
,	O
fkill_or_rejuv	int
;	O
struct	O
uuconf_system	struct
ssys	struct
;	O
fbad	int
=	O
FALSE	O
;	O
if	O
(	O
(	O
icmd	int
&	O
JOB_SHOW	O
)	O
!=	O
0	int
)	O
{	O
struct	O
tm	struct
stime	struct
;	O
printf	function
(	O
"%s %s!"	pointer
,	O
zsystem	pointer
,	O
zSxqt_system	pointer
)	O
;	O
if	O
(	O
zSxqt_requestor	pointer
!=	O
NULL	O
)	O
printf	function
(	O
"%s"	pointer
,	O
zSxqt_requestor	pointer
)	O
;	O
else	O
printf	function
(	O
"%s"	pointer
,	O
zSxqt_user	pointer
)	O
;	O
usysdep_localtime	function
(	O
itime	long
,	O
&	O
stime	struct
)	O
;	O
printf	function
(	O
" %02d-%02d %02d:%02d "	pointer
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
)	O
;	O
printf	function
(	O
"%s\n"	pointer
,	O
zSxqt_cmd	pointer
)	O
;	O
}	O
fkill_or_rejuv	int
=	O
FALSE	O
;	O
if	O
(	O
(	O
icmd	int
&	O
JOB_INQUIRE	O
)	O
!=	O
0	int
)	O
{	O
int	O
b	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %s %s? "	pointer
,	O
zProgram	pointer
,	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
?	O
"Rejuvenate"	pointer
:	O
"Kill"	pointer
,	O
zSxqt_cmd	pointer
)	O
;	O
(	O
void	O
)	O
fflush	function
(	O
stderr	pointer
)	O
;	O
b	int
=	O
getchar	function
(	O
)	O
;	O
fkill_or_rejuv	int
=	O
b	int
==	O
'y'	O
||	O
b	int
==	O
'Y'	O
;	O
while	O
(	O
b	int
!=	O
EOF	O
&&	O
b	int
!=	O
'\n'	O
)	O
b	int
=	O
getchar	function
(	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
icmd	int
&	O
JOB_KILL	O
)	O
!=	O
0	int
||	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
)	O
fkill_or_rejuv	int
=	O
TRUE	O
;	O
if	O
(	O
fkill_or_rejuv	int
)	O
{	O
if	O
(	O
(	O
strcmp	function
(	O
zSxqt_user	pointer
,	O
zsysdep_login_name	function
(	O
)	O
)	O
!=	O
0	int
||	O
strcmp	function
(	O
zsystem	pointer
,	O
zlocalname	pointer
)	O
!=	O
0	int
)	O
&&	O
!	O
fsysdep_privileged	function
(	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Job not submitted by you\n"	pointer
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
}	O
if	O
(	O
!	O
fbad	int
)	O
{	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
zsystem	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
zsystem	pointer
,	O
zlocalname	pointer
)	O
==	O
0	int
)	O
{	O
iuuconf	int
=	O
uuconf_system_local	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
ssys	struct
.	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
zlocalname	pointer
;	O
}	O
else	O
if	O
(	O
!	O
funknown_system	function
(	O
puuconf	pointer
,	O
zsystem	pointer
,	O
&	O
ssys	struct
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Job for unknown system %s"	pointer
,	O
zsystem	pointer
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
}	O
}	O
if	O
(	O
!	O
fbad	int
&&	O
(	O
icmd	int
&	O
(	O
JOB_MAIL	O
|	O
JOB_NOTIFY	O
)	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
fsnotify	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
zcomment	pointer
,	O
cstdin	int
,	O
fkill_or_rejuv	int
&&	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
==	O
0	int
,	O
zSxqt_cmd	pointer
,	O
(	O
struct	O
scmdlist	struct
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
itime	long
,	O
zSxqt_user	pointer
,	O
&	O
ssys	struct
,	O
zSxqt_stdin	pointer
,	O
(	O
pointer	pointer
)	O
NULL	O
,	O
zSxqt_requestor	pointer
)	O
)	O
{	O
ferr	int
=	O
TRUE	O
;	O
usxqt_file_free	function
(	O
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
fbad	int
&&	O
fkill_or_rejuv	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cSxqt_files	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
z	pointer
;	O
z	pointer
=	O
zsysdep_spool_file_name	function
(	O
&	O
ssys	struct
,	O
pazSxqt_files	pointer
[	O
i	int
]	O
,	O
(	O
pointer	pointer
)	O
NULL	O
)	O
;	O
if	O
(	O
z	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
)	O
(	O
void	O
)	O
fsysdep_touch_file	function
(	O
z	pointer
)	O
;	O
else	O
(	O
void	O
)	O
remove	function
(	O
z	pointer
)	O
;	O
ubuffree	function
(	O
z	pointer
)	O
;	O
}	O
}	O
if	O
(	O
(	O
icmd	int
&	O
JOB_REJUVENATE	O
)	O
!=	O
0	int
)	O
(	O
void	O
)	O
fsysdep_touch_file	function
(	O
zfile	pointer
)	O
;	O
else	O
{	O
if	O
(	O
remove	function
(	O
zfile	pointer
)	O
!=	O
0	int
)	O
ulog	function
(	O
LOG_ERROR	int
,	O
"remove (%s): %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
}	O
if	O
(	O
!	O
fbad	int
)	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
}	O
usxqt_file_free	function
(	O
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
}	O
usysdep_get_xqt_free	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
return	O
ferr	int
;	O
}	O
static	O
boolean	int
fsnotify	function
(	O
puuconf	pointer
,	O
icmd	int
,	O
zcomment	pointer
,	O
cstdin	int
,	O
fkilled	int
,	O
zcmd	pointer
,	O
qcmd	pointer
,	O
zid	pointer
,	O
itime	long
,	O
zuser	pointer
,	O
qsys	pointer
,	O
zstdin	pointer
,	O
pstdinseq	pointer
,	O
zrequestor	pointer
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
icmd	int
;	O
const	O
char	O
*	O
zcomment	pointer
;	O
int	O
cstdin	int
;	O
boolean	int
fkilled	int
;	O
const	O
char	O
*	O
zcmd	pointer
;	O
struct	O
scmdlist	struct
*	O
qcmd	pointer
;	O
const	O
char	O
*	O
zid	pointer
;	O
long	O
itime	long
;	O
const	O
char	O
*	O
zuser	pointer
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zstdin	pointer
;	O
pointer	pointer
pstdinseq	pointer
;	O
const	O
char	O
*	O
zrequestor	pointer
;	O
{	O
const	O
char	O
*	O
*	O
pz	pointer
;	O
int	O
cgot	int
;	O
int	O
i	int
,	O
istdin	int
;	O
struct	O
tm	struct
stime	struct
;	O
char	O
ab	array
[	O
sizeof	O
"1991-12-31 12:00:00"	pointer
]	O
;	O
const	O
char	O
*	O
zsubject	pointer
;	O
boolean	int
fret	int
;	O
pz	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xmalloc	function
(	O
20	int
*	O
sizeof	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
cgot	int
=	O
20	int
;	O
i	int
=	O
0	int
;	O
if	O
(	O
zid	pointer
==	O
NULL	O
)	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"A UUCP execution request"	pointer
;	O
else	O
{	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"UUCP job\n\t"	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zid	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\nfor system\n\t"	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
qsys	pointer
->	O
uuconf_zname	pointer
;	O
}	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\nrequested by\n\t"	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zuser	pointer
!=	O
NULL	O
?	O
zuser	pointer
:	O
OWNER	pointer
;	O
if	O
(	O
zid	pointer
==	O
NULL	O
)	O
{	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\non system\n\t"	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
qsys	pointer
->	O
uuconf_zname	pointer
;	O
}	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\n"	pointer
;	O
if	O
(	O
fkilled	int
)	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"has been killed.\n"	pointer
;	O
if	O
(	O
zcomment	pointer
!=	O
NULL	O
)	O
{	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zcomment	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\n"	pointer
;	O
}	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"The job was queued at "	pointer
;	O
usysdep_localtime	function
(	O
itime	long
,	O
&	O
stime	struct
)	O
;	O
sprintf	function
(	O
ab	array
,	O
"%04d-%02d-%02d %02d:%02d:%02d"	pointer
,	O
stime	struct
.	O
tm_year	int
+	O
1900	int
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
,	O
stime	struct
.	O
tm_sec	int
)	O
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
ab	array
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
".\nIt "	pointer
;	O
if	O
(	O
fkilled	int
)	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"was\n"	pointer
;	O
else	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"is\n"	pointer
;	O
if	O
(	O
zcmd	pointer
!=	O
NULL	O
)	O
{	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\t"	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zcmd	pointer
;	O
}	O
else	O
{	O
struct	O
scmdlist	struct
*	O
qshow	pointer
;	O
for	O
(	O
qshow	pointer
=	O
qcmd	pointer
;	O
qshow	pointer
!=	O
NULL	O
;	O
qshow	pointer
=	O
qshow	pointer
->	O
qnext	pointer
)	O
{	O
if	O
(	O
i	int
+	O
10	int
>	O
cgot	int
)	O
{	O
cgot	int
+=	O
20	int
;	O
pz	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pz	pointer
,	O
cgot	int
*	O
sizeof	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
}	O
switch	O
(	O
qshow	pointer
->	O
s	struct
.	O
bcmd	char
)	O
{	O
case	O
'S'	O
:	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\tsend "	pointer
;	O
break	O
;	O
default	O
:	O
case	O
'R'	O
:	O
case	O
'X'	O
:	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\trequest "	pointer
;	O
break	O
;	O
case	O
'P'	O
:	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\tpoll "	pointer
;	O
break	O
;	O
case	O
'E'	O
:	O
ulog	function
(	O
LOG_FATAL	int
,	O
"fsnotify: Can't happen"	pointer
)	O
;	O
break	O
;	O
}	O
if	O
(	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
!=	O
NULL	O
&&	O
qshow	pointer
->	O
s	struct
.	O
zto	pointer
!=	O
NULL	O
)	O
{	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
qshow	pointer
->	O
s	struct
.	O
zfrom	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
" to "	pointer
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
qshow	pointer
->	O
s	struct
.	O
zto	pointer
;	O
}	O
}	O
}	O
istdin	int
=	O
i	int
;	O
if	O
(	O
cstdin	int
>	O
0	int
&&	O
zstdin	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fspool	int
;	O
char	O
*	O
zfile	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
fspool	int
=	O
fspool_file	function
(	O
zstdin	pointer
)	O
;	O
if	O
(	O
fspool	int
)	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
zstdin	pointer
,	O
pstdinseq	pointer
)	O
;	O
else	O
zfile	pointer
=	O
zsysdep_local_file	function
(	O
zstdin	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
zfile	pointer
!=	O
NULL	O
&&	O
(	O
fspool	int
||	O
fin_directory_list	function
(	O
zfile	pointer
,	O
qsys	pointer
->	O
uuconf_pzremote_send	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
TRUE	O
,	O
TRUE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
)	O
{	O
e	pointer
=	O
fopen	function
(	O
zfile	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
!=	O
NULL	O
)	O
{	O
int	O
clines	int
,	O
clen	long
;	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
"\n"	pointer
;	O
istdin	int
=	O
i	int
;	O
clines	int
=	O
0	int
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
while	O
(	O
(	O
clen	long
=	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
)	O
>	O
0	int
)	O
{	O
if	O
(	O
memchr	function
(	O
zline	pointer
,	O
'\0'	O
,	O
(	O
size_t	long
)	O
clen	long
)	O
!=	O
NULL	O
)	O
{	O
int	O
ifree	int
;	O
for	O
(	O
ifree	int
=	O
istdin	int
;	O
ifree	int
<	O
i	int
;	O
ifree	int
++	O
)	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
pz	pointer
[	O
ifree	int
]	O
)	O
;	O
i	int
=	O
istdin	int
-	O
1	int
;	O
break	O
;	O
}	O
++	O
clines	int
;	O
if	O
(	O
clines	int
>	O
cstdin	int
)	O
break	O
;	O
if	O
(	O
i	int
>=	O
cgot	int
)	O
{	O
cgot	int
+=	O
20	int
;	O
pz	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
(	O
pointer	pointer
)	O
pz	pointer
,	O
(	O
cgot	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
)	O
;	O
}	O
if	O
(	O
strncmp	function
(	O
zline	pointer
,	O
"From "	pointer
,	O
sizeof	O
"From "	pointer
-	O
1	int
)	O
!=	O
0	int
)	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zbufcpy	function
(	O
zline	pointer
)	O
;	O
else	O
{	O
char	O
*	O
zalc	pointer
;	O
zalc	pointer
=	O
zbufalc	function
(	O
strlen	function
(	O
zline	pointer
)	O
+	O
2	int
)	O
;	O
zalc	pointer
[	O
0	int
]	O
=	O
'>'	O
;	O
strcpy	function
(	O
zalc	pointer
+	O
1	int
,	O
zline	pointer
)	O
;	O
pz	pointer
[	O
i	int
++	O
]	O
=	O
zalc	pointer
;	O
}	O
}	O
xfree	function
(	O
(	O
pointer	pointer
)	O
zline	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
}	O
}	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
}	O
if	O
(	O
fkilled	int
)	O
zsubject	pointer
=	O
"UUCP job killed"	pointer
;	O
else	O
zsubject	pointer
=	O
"UUCP notification"	pointer
;	O
fret	int
=	O
TRUE	O
;	O
if	O
(	O
(	O
icmd	int
&	O
JOB_MAIL	O
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
!	O
fsysdep_mail	function
(	O
OWNER	pointer
,	O
zsubject	pointer
,	O
i	int
,	O
pz	pointer
)	O
)	O
fret	int
=	O
FALSE	O
;	O
}	O
if	O
(	O
(	O
icmd	int
&	O
JOB_NOTIFY	O
)	O
!=	O
0	int
&&	O
(	O
zrequestor	pointer
!=	O
NULL	O
||	O
zuser	pointer
!=	O
NULL	O
)	O
)	O
{	O
const	O
char	O
*	O
zmail	pointer
;	O
char	O
*	O
zfree	pointer
;	O
if	O
(	O
zrequestor	pointer
!=	O
NULL	O
)	O
zmail	pointer
=	O
zrequestor	pointer
;	O
else	O
zmail	pointer
=	O
zuser	pointer
;	O
zfree	pointer
=	O
NULL	O
;	O
if	O
(	O
zid	pointer
==	O
NULL	O
)	O
{	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zloc	pointer
;	O
iuuconf	int
=	O
uuconf_localname	function
(	O
puuconf	pointer
,	O
&	O
zloc	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zloc	pointer
=	O
zsysdep_localname	function
(	O
)	O
;	O
if	O
(	O
zloc	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
if	O
(	O
strcmp	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
zloc	pointer
)	O
!=	O
0	int
&&	O
strchr	function
(	O
zmail	pointer
,	O
'@'	O
)	O
==	O
NULL	O
)	O
{	O
zfree	pointer
=	O
zbufalc	function
(	O
strlen	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
+	O
strlen	function
(	O
zmail	pointer
)	O
+	O
sizeof	O
"!"	pointer
)	O
;	O
sprintf	function
(	O
zfree	pointer
,	O
"%s!%s"	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
zmail	pointer
)	O
;	O
zmail	pointer
=	O
zfree	pointer
;	O
}	O
}	O
if	O
(	O
!	O
fsysdep_mail	function
(	O
zmail	pointer
,	O
zsubject	pointer
,	O
i	int
,	O
pz	pointer
)	O
)	O
fret	int
=	O
FALSE	O
;	O
ubuffree	function
(	O
zfree	pointer
)	O
;	O
}	O
while	O
(	O
istdin	int
<	O
i	int
)	O
{	O
ubuffree	function
(	O
(	O
char	O
*	O
)	O
pz	pointer
[	O
istdin	int
]	O
)	O
;	O
istdin	int
++	O
;	O
}	O
xfree	function
(	O
(	O
pointer	pointer
)	O
pz	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
struct	O
sxqtlist	struct
{	O
struct	O
sxqtlist	struct
*	O
qnext	pointer
;	O
char	O
*	O
zsystem	pointer
;	O
int	O
cxqts	int
;	O
long	O
ifirst	long
;	O
}	O
;	O
static	O
boolean	int
fsquery_system	function
P	O
(	O
(	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
struct	O
sxqtlist	struct
*	O
*	O
pq	pointer
,	O
long	O
inow	long
,	O
const	O
char	O
*	O
zlocalname	pointer
,	O
int	O
csystems	int
,	O
char	O
*	O
*	O
pazsystems	pointer
,	O
boolean	int
fnotsystems	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
)	O
)	O
;	O
static	O
boolean	int
fsquery_show	function
P	O
(	O
(	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
int	O
cwork	int
,	O
long	O
ifirstwork	long
,	O
struct	O
sxqtlist	struct
*	O
qxqt	pointer
,	O
long	O
inow	long
,	O
const	O
char	O
*	O
zlocalname	pointer
,	O
int	O
csystems	int
,	O
char	O
*	O
*	O
pazsystems	pointer
,	O
boolean	int
fnotsystems	int
,	O
long	O
iold	long
,	O
long	O
iyoung	long
)	O
)	O
;	O
static	O
boolean	int
fsquery	function
(	O
puuconf	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
pointer	pointer
puuconf	pointer
;	O
int	O
csystems	int
;	O
char	O
*	O
*	O
pazsystems	pointer
;	O
boolean	int
fnotsystems	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
{	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
struct	O
sxqtlist	struct
*	O
qlist	pointer
;	O
char	O
*	O
zfile	pointer
,	O
*	O
zsystem	pointer
;	O
boolean	int
ferr	int
;	O
long	O
inow	long
;	O
char	O
*	O
*	O
pznames	pointer
,	O
*	O
*	O
pz	pointer
;	O
boolean	int
fret	int
;	O
iuuconf	int
=	O
uuconf_localname	function
(	O
puuconf	pointer
,	O
&	O
zlocalname	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zlocalname	pointer
=	O
zsysdep_localname	function
(	O
)	O
;	O
if	O
(	O
zlocalname	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fsysdep_get_xqt_init	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
return	O
FALSE	O
;	O
qlist	pointer
=	O
NULL	O
;	O
while	O
(	O
(	O
zfile	pointer
=	O
zsysdep_get_xqt	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
&	O
zsystem	pointer
,	O
&	O
ferr	int
)	O
)	O
!=	O
NULL	O
)	O
{	O
struct	O
sxqtlist	struct
*	O
qlook	pointer
;	O
for	O
(	O
qlook	pointer
=	O
qlist	pointer
;	O
qlook	pointer
!=	O
NULL	O
;	O
qlook	pointer
=	O
qlook	pointer
->	O
qnext	pointer
)	O
if	O
(	O
strcmp	function
(	O
zsystem	pointer
,	O
qlook	pointer
->	O
zsystem	pointer
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
qlook	pointer
!=	O
NULL	O
)	O
{	O
long	O
itime	long
;	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
++	O
qlook	pointer
->	O
cxqts	int
;	O
itime	long
=	O
ixsysdep_file_time	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
itime	long
<	O
qlook	pointer
->	O
ifirst	long
)	O
qlook	pointer
->	O
ifirst	long
=	O
itime	long
;	O
}	O
else	O
{	O
struct	O
sxqtlist	struct
*	O
qnew	pointer
;	O
qnew	pointer
=	O
(	O
struct	O
sxqtlist	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
sxqtlist	struct
)	O
)	O
;	O
qnew	pointer
->	O
qnext	pointer
=	O
qlist	pointer
;	O
qnew	pointer
->	O
zsystem	pointer
=	O
zsystem	pointer
;	O
qnew	pointer
->	O
cxqts	int
=	O
1	int
;	O
qnew	pointer
->	O
ifirst	long
=	O
ixsysdep_file_time	function
(	O
zfile	pointer
)	O
;	O
qlist	pointer
=	O
qnew	pointer
;	O
}	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
}	O
usysdep_get_xqt_free	function
(	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
ferr	int
)	O
return	O
FALSE	O
;	O
inow	long
=	O
ixsysdep_time	function
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
;	O
iuuconf	int
=	O
uuconf_system_names	function
(	O
puuconf	pointer
,	O
&	O
pznames	pointer
,	O
0	int
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
fret	int
=	O
TRUE	O
;	O
for	O
(	O
pz	pointer
=	O
pznames	pointer
;	O
*	O
pz	pointer
!=	O
NULL	O
;	O
pz	pointer
++	O
)	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
*	O
pz	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
continue	O
;	O
}	O
if	O
(	O
!	O
fsquery_system	function
(	O
&	O
ssys	struct
,	O
&	O
qlist	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
)	O
fret	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
*	O
pz	pointer
)	O
;	O
}	O
if	O
(	O
qlist	pointer
!=	O
NULL	O
)	O
{	O
struct	O
sxqtlist	struct
*	O
*	O
pq	pointer
;	O
for	O
(	O
pq	pointer
=	O
&	O
qlist	pointer
;	O
*	O
pq	pointer
!=	O
NULL	O
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
qnext	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
(	O
*	O
pq	pointer
)	O
->	O
zsystem	pointer
,	O
zlocalname	pointer
)	O
==	O
0	int
)	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
struct	O
sxqtlist	struct
*	O
qfree	pointer
;	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
zlocalname	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_NOT_FOUND	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
iuuconf	int
=	O
uuconf_system_local	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
ssys	struct
.	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
zlocalname	pointer
;	O
}	O
if	O
(	O
!	O
fsquery_show	function
(	O
&	O
ssys	struct
,	O
0	int
,	O
0L	int
,	O
*	O
pq	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
)	O
fret	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
qfree	pointer
=	O
*	O
pq	pointer
;	O
*	O
pq	pointer
=	O
qfree	pointer
->	O
qnext	pointer
;	O
ubuffree	function
(	O
qfree	pointer
->	O
zsystem	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qfree	pointer
)	O
;	O
break	O
;	O
}	O
}	O
}	O
while	O
(	O
qlist	pointer
!=	O
NULL	O
)	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
struct	O
sxqtlist	struct
*	O
qnext	pointer
;	O
if	O
(	O
!	O
funknown_system	function
(	O
puuconf	pointer
,	O
qlist	pointer
->	O
zsystem	pointer
,	O
&	O
ssys	struct
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"Executions queued up for unknown systems"	pointer
)	O
;	O
fret	int
=	O
FALSE	O
;	O
break	O
;	O
}	O
if	O
(	O
!	O
fsquery_show	function
(	O
&	O
ssys	struct
,	O
0	int
,	O
0L	int
,	O
qlist	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
)	O
fret	int
=	O
FALSE	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
qnext	pointer
=	O
qlist	pointer
->	O
qnext	pointer
;	O
ubuffree	function
(	O
qlist	pointer
->	O
zsystem	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qlist	pointer
)	O
;	O
qlist	pointer
=	O
qnext	pointer
;	O
}	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsquery_system	function
(	O
qsys	pointer
,	O
pq	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
struct	O
sxqtlist	struct
*	O
*	O
pq	pointer
;	O
long	O
inow	long
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
int	O
csystems	int
;	O
char	O
*	O
*	O
pazsystems	pointer
;	O
boolean	int
fnotsystems	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
{	O
int	O
cwork	int
;	O
long	O
ifirstwork	long
;	O
char	O
*	O
zid	pointer
;	O
boolean	int
fret	int
;	O
if	O
(	O
!	O
fsysdep_get_work_init	function
(	O
qsys	pointer
,	O
UUCONF_GRADE_LOW	O
,	O
0	int
)	O
)	O
return	O
FALSE	O
;	O
cwork	int
=	O
0	int
;	O
ifirstwork	long
=	O
0L	int
;	O
zid	pointer
=	O
NULL	O
;	O
while	O
(	O
TRUE	O
)	O
{	O
struct	O
scmd	struct
s	struct
;	O
long	O
itime	long
;	O
char	O
*	O
zthisid	pointer
;	O
if	O
(	O
!	O
fsysdep_get_work	function
(	O
qsys	pointer
,	O
UUCONF_GRADE_LOW	O
,	O
0	int
,	O
&	O
s	struct
)	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
s	struct
.	O
bcmd	char
==	O
'H'	O
)	O
break	O
;	O
zthisid	pointer
=	O
zsysdep_jobid	function
(	O
qsys	pointer
,	O
s	struct
.	O
pseq	pointer
)	O
;	O
if	O
(	O
zid	pointer
!=	O
NULL	O
&&	O
strcmp	function
(	O
zid	pointer
,	O
zthisid	pointer
)	O
==	O
0	int
)	O
ubuffree	function
(	O
zthisid	pointer
)	O
;	O
else	O
{	O
++	O
cwork	int
;	O
ubuffree	function
(	O
zid	pointer
)	O
;	O
zid	pointer
=	O
zthisid	pointer
;	O
}	O
itime	long
=	O
ixsysdep_work_time	function
(	O
qsys	pointer
,	O
s	struct
.	O
pseq	pointer
)	O
;	O
if	O
(	O
ifirstwork	long
==	O
0L	int
||	O
ifirstwork	long
>	O
itime	long
)	O
ifirstwork	long
=	O
itime	long
;	O
}	O
usysdep_get_work_free	function
(	O
qsys	pointer
)	O
;	O
ubuffree	function
(	O
zid	pointer
)	O
;	O
while	O
(	O
*	O
pq	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
(	O
*	O
pq	pointer
)	O
->	O
zsystem	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
==	O
0	int
)	O
break	O
;	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
qnext	pointer
;	O
}	O
if	O
(	O
cwork	int
==	O
0	int
&&	O
*	O
pq	pointer
==	O
NULL	O
)	O
return	O
TRUE	O
;	O
fret	int
=	O
fsquery_show	function
(	O
qsys	pointer
,	O
cwork	int
,	O
ifirstwork	long
,	O
*	O
pq	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
;	O
if	O
(	O
*	O
pq	pointer
!=	O
NULL	O
)	O
{	O
struct	O
sxqtlist	struct
*	O
qfree	pointer
;	O
qfree	pointer
=	O
*	O
pq	pointer
;	O
*	O
pq	pointer
=	O
qfree	pointer
->	O
qnext	pointer
;	O
ubuffree	function
(	O
qfree	pointer
->	O
zsystem	pointer
)	O
;	O
xfree	function
(	O
(	O
pointer	pointer
)	O
qfree	pointer
)	O
;	O
}	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
fsquery_show	function
(	O
qsys	pointer
,	O
cwork	int
,	O
ifirstwork	long
,	O
qxqt	pointer
,	O
inow	long
,	O
zlocalname	pointer
,	O
csystems	int
,	O
pazsystems	pointer
,	O
fnotsystems	int
,	O
iold	long
,	O
iyoung	long
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
int	O
cwork	int
;	O
long	O
ifirstwork	long
;	O
struct	O
sxqtlist	struct
*	O
qxqt	pointer
;	O
long	O
inow	long
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
int	O
csystems	int
;	O
char	O
*	O
*	O
pazsystems	pointer
;	O
boolean	int
fnotsystems	int
;	O
long	O
iold	long
;	O
long	O
iyoung	long
;	O
{	O
boolean	int
flocal	int
;	O
struct	O
sstatus	struct
sstat	struct
;	O
boolean	int
fnostatus	int
;	O
struct	O
tm	struct
stime	struct
;	O
int	O
cpad	int
;	O
if	O
(	O
csystems	int
>	O
0	int
)	O
{	O
boolean	int
fmatch	int
;	O
int	O
i	int
;	O
fmatch	int
=	O
fnotsystems	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
csystems	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
strcmp	function
(	O
pazsystems	pointer
[	O
i	int
]	O
,	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
==	O
0	int
)	O
{	O
fmatch	int
=	O
!	O
fmatch	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
!	O
fmatch	int
)	O
return	O
TRUE	O
;	O
}	O
if	O
(	O
(	O
iold	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
(	O
cwork	int
==	O
0	int
||	O
ifirstwork	long
>	O
iold	long
)	O
&&	O
(	O
qxqt	pointer
==	O
NULL	O
||	O
qxqt	pointer
->	O
ifirst	long
>	O
iold	long
)	O
)	O
||	O
(	O
iyoung	long
!=	O
(	O
long	O
)	O
-	O
1	int
&&	O
(	O
cwork	int
==	O
0	int
||	O
ifirstwork	long
<	O
iyoung	long
)	O
&&	O
(	O
qxqt	pointer
==	O
NULL	O
||	O
qxqt	pointer
->	O
ifirst	long
<	O
iyoung	long
)	O
)	O
)	O
return	O
TRUE	O
;	O
flocal	int
=	O
strcmp	function
(	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
zlocalname	pointer
)	O
==	O
0	int
;	O
if	O
(	O
!	O
flocal	int
)	O
{	O
if	O
(	O
!	O
fsysdep_get_status	function
(	O
qsys	pointer
,	O
&	O
sstat	struct
,	O
&	O
fnostatus	int
)	O
)	O
return	O
FALSE	O
;	O
}	O
printf	function
(	O
"%-10s %3dC ("	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
cwork	int
)	O
;	O
if	O
(	O
cwork	int
==	O
0	int
)	O
{	O
printf	function
(	O
"0 secs"	pointer
)	O
;	O
cpad	int
=	O
3	int
;	O
}	O
else	O
cpad	int
=	O
csunits_show	function
(	O
inow	long
-	O
ifirstwork	long
)	O
;	O
printf	function
(	O
") "	pointer
)	O
;	O
while	O
(	O
cpad	int
--	O
!=	O
0	int
)	O
printf	function
(	O
" "	pointer
)	O
;	O
if	O
(	O
qxqt	pointer
==	O
NULL	O
)	O
printf	function
(	O
"  0X (0 secs)   "	pointer
)	O
;	O
else	O
{	O
printf	function
(	O
"%3dX ("	pointer
,	O
qxqt	pointer
->	O
cxqts	int
)	O
;	O
cpad	int
=	O
csunits_show	function
(	O
inow	long
-	O
qxqt	pointer
->	O
ifirst	long
)	O
;	O
printf	function
(	O
")"	pointer
)	O
;	O
while	O
(	O
cpad	int
--	O
!=	O
0	int
)	O
printf	function
(	O
" "	pointer
)	O
;	O
}	O
if	O
(	O
flocal	int
||	O
fnostatus	int
)	O
{	O
printf	function
(	O
"\n"	pointer
)	O
;	O
if	O
(	O
!	O
flocal	int
)	O
ubuffree	function
(	O
sstat	struct
.	O
zstring	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
usysdep_localtime	function
(	O
sstat	struct
.	O
ilast	long
,	O
&	O
stime	struct
)	O
;	O
printf	function
(	O
" %02d-%02d %02d:%02d "	pointer
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
)	O
;	O
if	O
(	O
sstat	struct
.	O
zstring	pointer
==	O
NULL	O
)	O
printf	function
(	O
"%s\n"	pointer
,	O
azStatus	array
[	O
(	O
int	O
)	O
sstat	struct
.	O
ttype	enum
]	O
)	O
;	O
else	O
{	O
printf	function
(	O
"%s\n"	pointer
,	O
sstat	struct
.	O
zstring	pointer
)	O
;	O
ubuffree	function
(	O
sstat	struct
.	O
zstring	pointer
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
int	O
csunits_show	function
(	O
idiff	long
)	O
long	O
idiff	long
;	O
{	O
const	O
char	O
*	O
zunit	pointer
;	O
long	O
iunits	long
;	O
int	O
cpad	int
;	O
if	O
(	O
idiff	long
>	O
(	O
long	O
)	O
24	int
*	O
(	O
long	O
)	O
60	int
*	O
(	O
long	O
)	O
60	int
)	O
{	O
iunits	long
=	O
idiff	long
/	O
(	O
(	O
long	O
)	O
24	int
*	O
(	O
long	O
)	O
60	int
*	O
(	O
long	O
)	O
60	int
)	O
;	O
zunit	pointer
=	O
"day"	pointer
;	O
cpad	int
=	O
4	int
;	O
}	O
else	O
if	O
(	O
idiff	long
>	O
(	O
long	O
)	O
60	int
*	O
60	int
)	O
{	O
iunits	long
=	O
idiff	long
/	O
(	O
long	O
)	O
(	O
60	int
*	O
60	int
)	O
;	O
zunit	pointer
=	O
"hour"	pointer
;	O
cpad	int
=	O
3	int
;	O
}	O
else	O
if	O
(	O
idiff	long
>	O
(	O
long	O
)	O
60	int
)	O
{	O
iunits	long
=	O
idiff	long
/	O
(	O
long	O
)	O
60	int
;	O
zunit	pointer
=	O
"min"	pointer
;	O
cpad	int
=	O
4	int
;	O
}	O
else	O
{	O
iunits	long
=	O
idiff	long
;	O
zunit	pointer
=	O
"sec"	pointer
;	O
cpad	int
=	O
4	int
;	O
}	O
printf	function
(	O
"%ld %s%s"	pointer
,	O
iunits	long
,	O
zunit	pointer
,	O
iunits	long
==	O
1	int
?	O
""	pointer
:	O
"s"	pointer
)	O
;	O
if	O
(	O
iunits	long
!=	O
1	int
)	O
--	O
cpad	int
;	O
if	O
(	O
iunits	long
>	O
99	int
)	O
--	O
cpad	int
;	O
if	O
(	O
iunits	long
>	O
9	int
)	O
--	O
cpad	int
;	O
return	O
cpad	int
;	O
}	O
static	O
boolean	int
fsmachines	function
(	O
)	O
{	O
pointer	pointer
phold	pointer
;	O
char	O
*	O
zsystem	pointer
;	O
boolean	int
ferr	int
;	O
struct	O
sstatus	struct
sstat	struct
;	O
if	O
(	O
!	O
fsysdep_all_status_init	function
(	O
&	O
phold	pointer
)	O
)	O
return	O
FALSE	O
;	O
while	O
(	O
(	O
zsystem	pointer
=	O
zsysdep_all_status	function
(	O
phold	pointer
,	O
&	O
ferr	int
,	O
&	O
sstat	struct
)	O
)	O
!=	O
NULL	O
)	O
{	O
struct	O
tm	struct
stime	struct
;	O
usysdep_localtime	function
(	O
sstat	struct
.	O
ilast	long
,	O
&	O
stime	struct
)	O
;	O
printf	function
(	O
"%-14s %02d-%02d %02d:%02d "	pointer
,	O
zsystem	pointer
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
)	O
;	O
if	O
(	O
sstat	struct
.	O
zstring	pointer
==	O
NULL	O
)	O
printf	function
(	O
"%s"	pointer
,	O
azStatus	array
[	O
(	O
int	O
)	O
sstat	struct
.	O
ttype	enum
]	O
)	O
;	O
else	O
{	O
printf	function
(	O
"%s"	pointer
,	O
sstat	struct
.	O
zstring	pointer
)	O
;	O
ubuffree	function
(	O
sstat	struct
.	O
zstring	pointer
)	O
;	O
}	O
ubuffree	function
(	O
zsystem	pointer
)	O
;	O
if	O
(	O
sstat	struct
.	O
ttype	enum
!=	O
STATUS_TALKING	int
&&	O
sstat	struct
.	O
cwait	int
>	O
0	int
)	O
{	O
printf	function
(	O
" (%d %s"	pointer
,	O
sstat	struct
.	O
cretries	int
,	O
sstat	struct
.	O
cretries	int
==	O
1	int
?	O
"try"	pointer
:	O
"tries"	pointer
)	O
;	O
if	O
(	O
sstat	struct
.	O
ilast	long
+	O
sstat	struct
.	O
cwait	int
>	O
ixsysdep_time	function
(	O
(	O
long	O
*	O
)	O
NULL	O
)	O
)	O
{	O
usysdep_localtime	function
(	O
sstat	struct
.	O
ilast	long
+	O
sstat	struct
.	O
cwait	int
,	O
&	O
stime	struct
)	O
;	O
printf	function
(	O
", next after %02d-%02d %02d:%02d"	pointer
,	O
stime	struct
.	O
tm_mon	int
+	O
1	int
,	O
stime	struct
.	O
tm_mday	int
,	O
stime	struct
.	O
tm_hour	int
,	O
stime	struct
.	O
tm_min	int
)	O
;	O
}	O
printf	function
(	O
")"	pointer
)	O
;	O
}	O
printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
usysdep_all_status_free	function
(	O
phold	pointer
)	O
;	O
return	O
!	O
ferr	int
;	O
}	O
