void	O
mpf_div_ui	O
(	O
mpf_ptr	pointer
r	pointer
,	O
mpf_srcptr	pointer
u	array
,	O
unsigned	O
long	O
int	O
v	long
)	O
{	O
mp_srcptr	pointer
up	pointer
;	O
mp_ptr	pointer
rp	pointer
,	O
tp	pointer
,	O
rtp	pointer
;	O
mp_size_t	long
usize	pointer
;	O
mp_size_t	long
rsize	long
,	O
tsize	long
;	O
mp_size_t	long
sign_quotient	long
;	O
mp_size_t	long
prec	int
;	O
mp_limb_t	long
q_limb	long
;	O
mp_exp_t	long
rexp	long
;	O
TMP_DECL	O
;	O
if	O
(	O
UNLIKELY	O
(	O
v	long
==	O
0	int
)	O
)	O
DIVIDE_BY_ZERO	O
;	O
usize	pointer
=	O
u	array
->	O
_mp_size	int
;	O
if	O
(	O
usize	pointer
==	O
0	int
)	O
{	O
r	pointer
->	O
_mp_size	int
=	O
0	int
;	O
r	pointer
->	O
_mp_exp	long
=	O
0	int
;	O
return	O
;	O
}	O
sign_quotient	long
=	O
usize	pointer
;	O
usize	pointer
=	O
ABS	O
(	O
usize	pointer
)	O
;	O
prec	int
=	O
r	pointer
->	O
_mp_prec	int
;	O
TMP_MARK	O
;	O
rp	pointer
=	O
r	pointer
->	O
_mp_d	pointer
;	O
up	pointer
=	O
u	array
->	O
_mp_d	pointer
;	O
tsize	long
=	O
1	int
+	O
prec	int
;	O
tp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
tsize	long
+	O
1	int
)	O
;	O
if	O
(	O
usize	pointer
>	O
tsize	long
)	O
{	O
up	pointer
+=	O
usize	pointer
-	O
tsize	long
;	O
usize	pointer
=	O
tsize	long
;	O
rtp	pointer
=	O
tp	pointer
;	O
}	O
else	O
{	O
MPN_ZERO	O
(	O
tp	pointer
,	O
tsize	long
-	O
usize	pointer
)	O
;	O
rtp	pointer
=	O
tp	pointer
+	O
(	O
tsize	long
-	O
usize	pointer
)	O
;	O
}	O
MPN_COPY	O
(	O
rtp	pointer
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
mpn_divmod_1	O
(	O
rp	pointer
,	O
tp	pointer
,	O
tsize	long
,	O
(	O
mp_limb_t	long
)	O
v	long
)	O
;	O
q_limb	long
=	O
rp	pointer
[	O
tsize	long
-	O
1	int
]	O
;	O
rsize	long
=	O
tsize	long
-	O
(	O
q_limb	long
==	O
0	int
)	O
;	O
rexp	long
=	O
u	array
->	O
_mp_exp	long
-	O
(	O
q_limb	long
==	O
0	int
)	O
;	O
r	pointer
->	O
_mp_size	int
=	O
sign_quotient	long
>=	O
0	int
?	O
rsize	long
:	O
-	O
rsize	long
;	O
r	pointer
->	O
_mp_exp	long
=	O
rexp	long
;	O
TMP_FREE	O
;	O
}	O
