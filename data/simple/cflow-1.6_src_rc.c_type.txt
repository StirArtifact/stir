static	O
void	O
expand_argcv	function
(	O
int	O
*	O
argc_ptr	pointer
,	O
char	O
*	O
*	O
*	O
argv_ptr	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
i	long
;	O
*	O
argv_ptr	pointer
=	O
xrealloc	function
(	O
*	O
argv_ptr	pointer
,	O
(	O
*	O
argc_ptr	pointer
+	O
argc	int
+	O
1	int
)	O
*	O
sizeof	O
*	O
*	O
argv_ptr	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	int
;	O
i	long
++	O
)	O
(	O
*	O
argv_ptr	pointer
)	O
[	O
*	O
argc_ptr	pointer
+	O
i	long
]	O
=	O
xstrdup	function
(	O
argv	pointer
[	O
i	long
]	O
)	O
;	O
(	O
*	O
argv_ptr	pointer
)	O
[	O
*	O
argc_ptr	pointer
+	O
i	long
]	O
=	O
NULL	O
;	O
*	O
argc_ptr	pointer
+=	O
argc	int
;	O
}	O
void	O
parse_rc	function
(	O
int	O
*	O
argc_ptr	pointer
,	O
char	O
*	O
*	O
*	O
argv_ptr	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
struct	O
stat	struct
st	struct
;	O
FILE	struct
*	O
rcfile	pointer
;	O
int	O
size	int
;	O
char	O
*	O
buf	pointer
,	O
*	O
p	pointer
;	O
struct	O
wordsplit	struct
ws	pointer
;	O
int	O
wsflags	int
;	O
int	O
line	int
;	O
if	O
(	O
stat	struct
(	O
name	pointer
,	O
&	O
st	struct
)	O
)	O
return	O
;	O
buf	pointer
=	O
xmalloc	function
(	O
st	struct
.	O
st_size	long
+	O
1	int
)	O
;	O
rcfile	pointer
=	O
fopen	function
(	O
name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
rcfile	pointer
)	O
{	O
error	function
(	O
EX_FATAL	int
,	O
errno	O
,	O
_	O
(	O
"cannot open `%s'"	pointer
)	O
,	O
name	pointer
)	O
;	O
return	O
;	O
}	O
size	int
=	O
fread	function
(	O
buf	pointer
,	O
1	int
,	O
st	struct
.	O
st_size	long
,	O
rcfile	pointer
)	O
;	O
buf	pointer
[	O
size	int
]	O
=	O
0	int
;	O
fclose	function
(	O
rcfile	pointer
)	O
;	O
ws	pointer
.	O
ws_comment	pointer
=	O
"#"	pointer
;	O
wsflags	int
=	O
WRDSF_DEFFLAGS	O
|	O
WRDSF_COMMENT	int
;	O
line	int
=	O
0	int
;	O
for	O
(	O
p	pointer
=	O
strtok	function
(	O
buf	pointer
,	O
"\n"	pointer
)	O
;	O
p	pointer
;	O
p	pointer
=	O
strtok	function
(	O
NULL	O
,	O
"\n"	pointer
)	O
)	O
{	O
++	O
line	int
;	O
if	O
(	O
wordsplit	struct
(	O
p	pointer
,	O
&	O
ws	pointer
,	O
wsflags	int
)	O
)	O
error	function
(	O
EX_FATAL	int
,	O
0	int
,	O
"%s:%d: %s"	pointer
,	O
name	pointer
,	O
line	int
,	O
wordsplit_strerror	function
(	O
&	O
ws	pointer
)	O
)	O
;	O
wsflags	int
|=	O
WRDSF_REUSE	int
;	O
if	O
(	O
ws	pointer
.	O
ws_wordc	long
)	O
expand_argcv	function
(	O
argc_ptr	pointer
,	O
argv_ptr	pointer
,	O
ws	pointer
.	O
ws_wordc	long
,	O
ws	pointer
.	O
ws_wordv	pointer
)	O
;	O
}	O
if	O
(	O
wsflags	int
&	O
WRDSF_REUSE	int
)	O
wordsplit_free	function
(	O
&	O
ws	pointer
)	O
;	O
free	function
(	O
buf	pointer
)	O
;	O
}	O
void	O
sourcerc	function
(	O
int	O
*	O
argc_ptr	pointer
,	O
char	O
*	O
*	O
*	O
argv_ptr	pointer
)	O
{	O
char	O
*	O
env	pointer
;	O
int	O
xargc	int
=	O
1	int
;	O
char	O
*	O
*	O
xargv	pointer
;	O
xargv	pointer
=	O
xmalloc	function
(	O
2	int
*	O
sizeof	O
*	O
xargv	pointer
)	O
;	O
xargv	pointer
[	O
0	int
]	O
=	O
*	O
*	O
argv_ptr	pointer
;	O
xargv	pointer
[	O
1	int
]	O
=	O
NULL	O
;	O
env	pointer
=	O
getenv	function
(	O
"CFLOW_OPTIONS"	pointer
)	O
;	O
if	O
(	O
env	pointer
)	O
{	O
struct	O
wordsplit	struct
ws	pointer
;	O
ws	pointer
.	O
ws_comment	pointer
=	O
"#"	pointer
;	O
if	O
(	O
wordsplit	struct
(	O
env	pointer
,	O
&	O
ws	pointer
,	O
WRDSF_DEFFLAGS	O
|	O
WRDSF_COMMENT	int
)	O
)	O
error	function
(	O
EX_FATAL	int
,	O
0	int
,	O
"failed to parse CFLOW_OPTIONS: %s"	pointer
,	O
wordsplit_strerror	function
(	O
&	O
ws	pointer
)	O
)	O
;	O
if	O
(	O
ws	pointer
.	O
ws_wordc	long
)	O
expand_argcv	function
(	O
&	O
xargc	int
,	O
&	O
xargv	pointer
,	O
ws	pointer
.	O
ws_wordc	long
,	O
ws	pointer
.	O
ws_wordv	pointer
)	O
;	O
wordsplit_free	function
(	O
&	O
ws	pointer
)	O
;	O
}	O
env	pointer
=	O
getenv	function
(	O
"CFLOWRC"	pointer
)	O
;	O
if	O
(	O
env	pointer
)	O
parse_rc	function
(	O
&	O
xargc	int
,	O
&	O
xargv	pointer
,	O
env	pointer
)	O
;	O
else	O
{	O
char	O
*	O
home	pointer
=	O
getenv	function
(	O
"HOME"	pointer
)	O
;	O
if	O
(	O
home	pointer
)	O
{	O
int	O
len	long
=	O
strlen	function
(	O
home	pointer
)	O
;	O
char	O
*	O
buf	pointer
=	O
malloc	function
(	O
len	long
+	O
sizeof	O
(	O
LOCAL_RC	pointer
)	O
+	O
(	O
home	pointer
[	O
len	long
-	O
1	int
]	O
!=	O
'/'	O
)	O
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
return	O
;	O
strcpy	function
(	O
buf	pointer
,	O
home	pointer
)	O
;	O
if	O
(	O
home	pointer
[	O
len	long
-	O
1	int
]	O
!=	O
'/'	O
)	O
buf	pointer
[	O
len	long
++	O
]	O
=	O
'/'	O
;	O
strcpy	function
(	O
buf	pointer
+	O
len	long
,	O
LOCAL_RC	pointer
)	O
;	O
parse_rc	function
(	O
&	O
xargc	int
,	O
&	O
xargv	pointer
,	O
buf	pointer
)	O
;	O
free	function
(	O
buf	pointer
)	O
;	O
}	O
}	O
if	O
(	O
xargc	int
>	O
1	int
)	O
{	O
expand_argcv	function
(	O
&	O
xargc	int
,	O
&	O
xargv	pointer
,	O
*	O
argc_ptr	pointer
-	O
1	int
,	O
*	O
argv_ptr	pointer
+	O
1	int
)	O
;	O
*	O
argc_ptr	pointer
=	O
xargc	int
;	O
*	O
argv_ptr	pointer
=	O
xargv	pointer
;	O
}	O
}	O
