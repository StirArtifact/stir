int	O
vfs_timeout	int
=	O
60	int
;	O
static	O
struct	O
vfs_stamping	struct
*	O
stamps	pointer
;	O
static	O
void	O
vfs_addstamp	function
(	O
struct	O
vfs_class	struct
*	O
v	pointer
,	O
vfsid	pointer
id	int
)	O
{	O
if	O
(	O
!	O
(	O
v	pointer
->	O
flags	enum
&	O
VFSF_LOCAL	int
)	O
&&	O
id	int
!=	O
NULL	O
)	O
{	O
struct	O
vfs_stamping	struct
*	O
stamp	long
;	O
struct	O
vfs_stamping	struct
*	O
last_stamp	pointer
=	O
NULL	O
;	O
for	O
(	O
stamp	long
=	O
stamps	pointer
;	O
stamp	long
!=	O
NULL	O
;	O
stamp	long
=	O
stamp	long
->	O
next	pointer
)	O
{	O
if	O
(	O
stamp	long
->	O
v	pointer
==	O
v	pointer
&&	O
stamp	long
->	O
id	int
==	O
id	int
)	O
{	O
gettimeofday	function
(	O
&	O
(	O
stamp	long
->	O
time	long
)	O
,	O
NULL	O
)	O
;	O
return	O
;	O
}	O
last_stamp	pointer
=	O
stamp	long
;	O
}	O
stamp	long
=	O
g_new	O
(	O
struct	O
vfs_stamping	struct
,	O
1	int
)	O
;	O
stamp	long
->	O
v	pointer
=	O
v	pointer
;	O
stamp	long
->	O
id	int
=	O
id	int
;	O
gettimeofday	function
(	O
&	O
(	O
stamp	long
->	O
time	long
)	O
,	O
NULL	O
)	O
;	O
stamp	long
->	O
next	pointer
=	O
0	int
;	O
if	O
(	O
stamps	pointer
)	O
{	O
last_stamp	pointer
->	O
next	pointer
=	O
stamp	long
;	O
}	O
else	O
{	O
stamps	pointer
=	O
stamp	long
;	O
}	O
}	O
}	O
void	O
vfs_stamp	function
(	O
struct	O
vfs_class	struct
*	O
v	pointer
,	O
vfsid	pointer
id	int
)	O
{	O
struct	O
vfs_stamping	struct
*	O
stamp	long
;	O
for	O
(	O
stamp	long
=	O
stamps	pointer
;	O
stamp	long
!=	O
NULL	O
;	O
stamp	long
=	O
stamp	long
->	O
next	pointer
)	O
if	O
(	O
stamp	long
->	O
v	pointer
==	O
v	pointer
&&	O
stamp	long
->	O
id	int
==	O
id	int
)	O
{	O
gettimeofday	function
(	O
&	O
(	O
stamp	long
->	O
time	long
)	O
,	O
NULL	O
)	O
;	O
return	O
;	O
}	O
}	O
void	O
vfs_rmstamp	function
(	O
struct	O
vfs_class	struct
*	O
v	pointer
,	O
vfsid	pointer
id	int
)	O
{	O
struct	O
vfs_stamping	struct
*	O
stamp	long
,	O
*	O
st1	pointer
;	O
for	O
(	O
stamp	long
=	O
stamps	pointer
,	O
st1	pointer
=	O
NULL	O
;	O
stamp	long
!=	O
NULL	O
;	O
st1	pointer
=	O
stamp	long
,	O
stamp	long
=	O
stamp	long
->	O
next	pointer
)	O
if	O
(	O
stamp	long
->	O
v	pointer
==	O
v	pointer
&&	O
stamp	long
->	O
id	int
==	O
id	int
)	O
{	O
if	O
(	O
st1	pointer
==	O
NULL	O
)	O
{	O
stamps	pointer
=	O
stamp	long
->	O
next	pointer
;	O
}	O
else	O
{	O
st1	pointer
->	O
next	pointer
=	O
stamp	long
->	O
next	pointer
;	O
}	O
g_free	function
(	O
stamp	long
)	O
;	O
return	O
;	O
}	O
}	O
vfsid	pointer
vfs_getid	function
(	O
struct	O
vfs_class	struct
*	O
vclass	pointer
,	O
const	O
char	O
*	O
dir	pointer
)	O
{	O
char	O
*	O
dir1	pointer
;	O
vfsid	pointer
id	int
=	O
NULL	O
;	O
dir1	pointer
=	O
concat_dir_and_file	function
(	O
dir	pointer
,	O
""	pointer
)	O
;	O
if	O
(	O
vclass	pointer
->	O
getid	pointer
)	O
id	int
=	O
(	O
*	O
vclass	pointer
->	O
getid	pointer
)	O
(	O
vclass	pointer
,	O
dir1	pointer
)	O
;	O
g_free	function
(	O
dir1	pointer
)	O
;	O
return	O
id	int
;	O
}	O
static	O
void	O
vfs_stamp_path	function
(	O
char	O
*	O
path	pointer
)	O
{	O
struct	O
vfs_class	struct
*	O
vfs	pointer
;	O
vfsid	pointer
id	int
;	O
vfs	pointer
=	O
vfs_get_class	function
(	O
path	pointer
)	O
;	O
id	int
=	O
vfs_getid	function
(	O
vfs	pointer
,	O
path	pointer
)	O
;	O
vfs_addstamp	function
(	O
vfs	pointer
,	O
id	int
)	O
;	O
}	O
void	O
vfs_stamp_create	function
(	O
struct	O
vfs_class	struct
*	O
oldvfs	pointer
,	O
vfsid	pointer
oldvfsid	pointer
)	O
{	O
struct	O
vfs_class	struct
*	O
nvfs	pointer
,	O
*	O
n2vfs	pointer
,	O
*	O
n3vfs	pointer
;	O
vfsid	pointer
nvfsid	pointer
,	O
n2vfsid	pointer
,	O
n3vfsid	pointer
;	O
if	O
(	O
!	O
current_panel	pointer
)	O
return	O
;	O
nvfs	pointer
=	O
vfs_get_class	function
(	O
vfs_get_current_dir	function
(	O
)	O
)	O
;	O
nvfsid	pointer
=	O
vfs_getid	function
(	O
nvfs	pointer
,	O
vfs_get_current_dir	function
(	O
)	O
)	O
;	O
vfs_rmstamp	function
(	O
nvfs	pointer
,	O
nvfsid	pointer
)	O
;	O
if	O
(	O
(	O
nvfs	pointer
==	O
oldvfs	pointer
&&	O
nvfsid	pointer
==	O
oldvfsid	pointer
)	O
||	O
oldvfsid	pointer
==	O
NULL	O
)	O
{	O
return	O
;	O
}	O
if	O
(	O
get_current_type	function
(	O
)	O
==	O
view_listing	int
)	O
{	O
n2vfs	pointer
=	O
vfs_get_class	function
(	O
current_panel	pointer
->	O
cwd	short
)	O
;	O
n2vfsid	pointer
=	O
vfs_getid	function
(	O
n2vfs	pointer
,	O
current_panel	pointer
->	O
cwd	short
)	O
;	O
if	O
(	O
n2vfs	pointer
==	O
oldvfs	pointer
&&	O
n2vfsid	pointer
==	O
oldvfsid	pointer
)	O
return	O
;	O
}	O
else	O
{	O
n2vfs	pointer
=	O
NULL	O
;	O
n2vfsid	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
get_other_type	function
(	O
)	O
==	O
view_listing	int
)	O
{	O
n3vfs	pointer
=	O
vfs_get_class	function
(	O
other_panel	O
->	O
cwd	short
)	O
;	O
n3vfsid	pointer
=	O
vfs_getid	function
(	O
n3vfs	pointer
,	O
other_panel	O
->	O
cwd	short
)	O
;	O
if	O
(	O
n3vfs	pointer
==	O
oldvfs	pointer
&&	O
n3vfsid	pointer
==	O
oldvfsid	pointer
)	O
return	O
;	O
}	O
else	O
{	O
n3vfs	pointer
=	O
NULL	O
;	O
n3vfsid	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
!	O
oldvfs	pointer
->	O
nothingisopen	pointer
||	O
!	O
(	O
*	O
oldvfs	pointer
->	O
nothingisopen	pointer
)	O
(	O
oldvfsid	pointer
)	O
)	O
return	O
;	O
vfs_addstamp	function
(	O
oldvfs	pointer
,	O
oldvfsid	pointer
)	O
;	O
}	O
void	O
vfs_add_current_stamps	function
(	O
void	O
)	O
{	O
vfs_stamp_path	function
(	O
vfs_get_current_dir	function
(	O
)	O
)	O
;	O
if	O
(	O
current_panel	pointer
)	O
{	O
if	O
(	O
get_current_type	function
(	O
)	O
==	O
view_listing	int
)	O
vfs_stamp_path	function
(	O
current_panel	pointer
->	O
cwd	short
)	O
;	O
}	O
if	O
(	O
other_panel	O
)	O
{	O
if	O
(	O
get_other_type	function
(	O
)	O
==	O
view_listing	int
)	O
vfs_stamp_path	function
(	O
other_panel	O
->	O
cwd	short
)	O
;	O
}	O
}	O
static	O
inline	O
int	O
timeoutcmp	function
(	O
struct	O
timeval	struct
*	O
t1	pointer
,	O
struct	O
timeval	struct
*	O
t2	pointer
)	O
{	O
return	O
(	O
(	O
t1	pointer
->	O
tv_sec	long
<	O
t2	pointer
->	O
tv_sec	long
)	O
||	O
(	O
(	O
t1	pointer
->	O
tv_sec	long
==	O
t2	pointer
->	O
tv_sec	long
)	O
&&	O
(	O
t1	pointer
->	O
tv_usec	long
<=	O
t2	pointer
->	O
tv_usec	long
)	O
)	O
)	O
;	O
}	O
void	O
vfs_expire	function
(	O
int	O
now	int
)	O
{	O
static	O
int	O
locked	int
=	O
0	int
;	O
struct	O
timeval	struct
time	long
;	O
struct	O
vfs_stamping	struct
*	O
stamp	long
,	O
*	O
st	pointer
;	O
if	O
(	O
locked	int
)	O
return	O
;	O
locked	int
=	O
1	int
;	O
gettimeofday	function
(	O
&	O
time	long
,	O
NULL	O
)	O
;	O
time	long
.	O
tv_sec	long
-=	O
vfs_timeout	int
;	O
for	O
(	O
stamp	long
=	O
stamps	pointer
;	O
stamp	long
!=	O
NULL	O
;	O
)	O
{	O
if	O
(	O
now	int
||	O
(	O
timeoutcmp	function
(	O
&	O
stamp	long
->	O
time	long
,	O
&	O
time	long
)	O
)	O
)	O
{	O
st	pointer
=	O
stamp	long
->	O
next	pointer
;	O
if	O
(	O
stamp	long
->	O
v	pointer
->	O
free	function
)	O
(	O
*	O
stamp	long
->	O
v	pointer
->	O
free	function
)	O
(	O
stamp	long
->	O
id	int
)	O
;	O
vfs_rmstamp	function
(	O
stamp	long
->	O
v	pointer
,	O
stamp	long
->	O
id	int
)	O
;	O
stamp	long
=	O
st	pointer
;	O
}	O
else	O
stamp	long
=	O
stamp	long
->	O
next	pointer
;	O
}	O
locked	int
=	O
0	int
;	O
}	O
int	O
vfs_timeouts	function
(	O
)	O
{	O
return	O
stamps	pointer
?	O
10	int
:	O
0	int
;	O
}	O
void	O
vfs_timeout_handler	function
(	O
void	O
)	O
{	O
vfs_expire	function
(	O
0	int
)	O
;	O
}	O
void	O
vfs_release_path	function
(	O
const	O
char	O
*	O
dir	pointer
)	O
{	O
struct	O
vfs_class	struct
*	O
oldvfs	pointer
;	O
vfsid	pointer
oldvfsid	pointer
;	O
oldvfs	pointer
=	O
vfs_get_class	function
(	O
dir	pointer
)	O
;	O
oldvfsid	pointer
=	O
vfs_getid	function
(	O
oldvfs	pointer
,	O
dir	pointer
)	O
;	O
vfs_stamp_create	function
(	O
oldvfs	pointer
,	O
oldvfsid	pointer
)	O
;	O
}	O
void	O
vfs_gc_done	function
(	O
void	O
)	O
{	O
struct	O
vfs_stamping	struct
*	O
stamp	long
,	O
*	O
st	pointer
;	O
for	O
(	O
stamp	long
=	O
stamps	pointer
,	O
stamps	pointer
=	O
0	int
;	O
stamp	long
!=	O
NULL	O
;	O
)	O
{	O
if	O
(	O
stamp	long
->	O
v	pointer
->	O
free	function
)	O
(	O
*	O
stamp	long
->	O
v	pointer
->	O
free	function
)	O
(	O
stamp	long
->	O
id	int
)	O
;	O
st	pointer
=	O
stamp	long
->	O
next	pointer
;	O
g_free	function
(	O
stamp	long
)	O
;	O
stamp	long
=	O
st	pointer
;	O
}	O
if	O
(	O
stamps	pointer
)	O
vfs_rmstamp	function
(	O
stamps	pointer
->	O
v	pointer
,	O
stamps	pointer
->	O
id	int
)	O
;	O
}	O
