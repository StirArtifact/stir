static	O
int	O
_socket_open	function
(	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
struct	O
_mu_file_stream	struct
*	O
s	pointer
=	O
(	O
struct	O
_mu_file_stream	struct
*	O
)	O
stream	pointer
;	O
int	O
fd	int
;	O
struct	O
sockaddr_un	struct
addr	struct
;	O
if	O
(	O
!	O
s	pointer
)	O
return	O
EINVAL	int
;	O
fd	int
=	O
socket	function
(	O
PF_UNIX	O
,	O
SOCK_STREAM	int
,	O
0	int
)	O
;	O
if	O
(	O
fd	int
<	O
0	int
)	O
return	O
errno	O
;	O
memset	function
(	O
&	O
addr	struct
,	O
0	int
,	O
sizeof	O
addr	struct
)	O
;	O
addr	struct
.	O
sun_family	short
=	O
AF_UNIX	O
;	O
strncpy	function
(	O
addr	struct
.	O
sun_path	array
,	O
s	pointer
->	O
filename	pointer
,	O
sizeof	O
addr	struct
.	O
sun_path	array
-	O
1	int
)	O
;	O
addr	struct
.	O
sun_path	array
[	O
sizeof	O
addr	struct
.	O
sun_path	array
-	O
1	int
]	O
=	O
0	int
;	O
if	O
(	O
connect	function
(	O
fd	int
,	O
(	O
struct	O
sockaddr	struct
*	O
)	O
&	O
addr	struct
,	O
sizeof	O
(	O
addr	struct
)	O
)	O
)	O
{	O
close	function
(	O
fd	int
)	O
;	O
return	O
errno	O
;	O
}	O
s	pointer
->	O
fd	int
=	O
fd	int
;	O
return	O
0	int
;	O
}	O
int	O
_socket_shutdown	function
(	O
mu_stream_t	pointer
stream	pointer
,	O
int	O
how	int
)	O
{	O
struct	O
_mu_file_stream	struct
*	O
s	pointer
=	O
(	O
struct	O
_mu_file_stream	struct
*	O
)	O
stream	pointer
;	O
int	O
flag	int
;	O
switch	O
(	O
how	int
)	O
{	O
case	O
MU_STREAM_READ	int
:	O
flag	int
=	O
SHUT_RD	int
;	O
break	O
;	O
case	O
MU_STREAM_WRITE	int
:	O
flag	int
=	O
SHUT_WR	int
;	O
}	O
if	O
(	O
shutdown	function
(	O
s	pointer
->	O
fd	int
,	O
flag	int
)	O
)	O
return	O
errno	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_socket_stream_create	function
(	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
const	O
char	O
*	O
filename	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
rc	int
;	O
mu_stream_t	pointer
transport	pointer
;	O
int	O
need_cache	int
;	O
struct	O
_mu_file_stream	struct
*	O
fstr	pointer
;	O
need_cache	int
=	O
flags	int
&	O
MU_STREAM_SEEK	int
;	O
if	O
(	O
need_cache	int
&&	O
(	O
flags	int
&	O
MU_STREAM_WRITE	int
)	O
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
_mu_file_stream_create	function
(	O
&	O
fstr	pointer
,	O
sizeof	O
(	O
*	O
fstr	pointer
)	O
,	O
filename	pointer
,	O
-	O
1	int
,	O
flags	int
&	O
~	O
MU_STREAM_SEEK	int
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
fstr	pointer
->	O
stream	pointer
.	O
open	function
=	O
_socket_open	function
;	O
fstr	pointer
->	O
stream	pointer
.	O
shutdown	function
=	O
_socket_shutdown	function
;	O
transport	pointer
=	O
(	O
mu_stream_t	pointer
)	O
fstr	pointer
;	O
if	O
(	O
need_cache	int
)	O
{	O
mu_stream_t	pointer
str	pointer
;	O
rc	int
=	O
mu_rdcache_stream_create	function
(	O
&	O
str	pointer
,	O
transport	pointer
,	O
flags	int
)	O
;	O
mu_stream_unref	function
(	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
transport	pointer
=	O
str	pointer
;	O
}	O
rc	int
=	O
mu_stream_open	function
(	O
transport	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_stream_unref	function
(	O
transport	pointer
)	O
;	O
else	O
*	O
pstream	pointer
=	O
transport	pointer
;	O
return	O
rc	int
;	O
}	O
