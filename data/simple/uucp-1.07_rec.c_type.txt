const	O
char	O
rec_rcsid	array
[	O
]	O
=	O
"$Id: rec.c,v 1.48 2002/03/05 19:10:41 ian Rel $"	pointer
;	O
struct	O
srecinfo	struct
{	O
char	O
*	O
zmail	pointer
;	O
char	O
*	O
zfile	pointer
;	O
char	O
*	O
ztemp	pointer
;	O
boolean	int
fspool	int
;	O
boolean	int
flocal	int
;	O
boolean	int
freceived	int
;	O
boolean	int
freplied	int
;	O
boolean	int
fmoved	int
;	O
}	O
;	O
struct	O
srecfailinfo	struct
{	O
enum	O
tfailure	enum
twhy	enum
;	O
boolean	int
fsent	int
;	O
boolean	int
freceived	int
;	O
}	O
;	O
static	O
void	O
urrec_free	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_rec_fail	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
scmd	struct
*	O
qcmd	pointer
,	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
,	O
const	O
char	O
*	O
zwhy	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_rec_send_request	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
flocal_rec_await_reply	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
fremote_send_reply	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fremote_send_fail	function
P	O
(	O
(	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
struct	O
scmd	struct
*	O
qcmd	pointer
,	O
enum	O
tfailure	enum
twhy	enum
,	O
int	O
iremote	int
)	O
)	O
;	O
static	O
boolean	int
fremote_send_fail_send	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
boolean	int
fremote_discard	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
frec_file_end	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
,	O
const	O
char	O
*	O
zdata	pointer
,	O
size_t	long
cdata	long
)	O
)	O
;	O
static	O
boolean	int
frec_file_send_confirm	function
P	O
(	O
(	O
struct	O
stransfer	struct
*	O
qtrans	pointer
,	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
)	O
)	O
;	O
static	O
void	O
urrec_free	function
(	O
qtrans	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
if	O
(	O
qinfo	pointer
!=	O
NULL	O
)	O
{	O
ubuffree	function
(	O
qinfo	pointer
->	O
zmail	pointer
)	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
xfree	function
(	O
qtrans	pointer
->	O
pinfo	pointer
)	O
;	O
}	O
utransfree	function
(	O
qtrans	pointer
)	O
;	O
}	O
boolean	int
flocal_rec_file_init	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
{	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
boolean	int
fspool	int
;	O
char	O
*	O
zfile	pointer
;	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
qsys	pointer
=	O
qdaemon	pointer
->	O
qsys	pointer
;	O
if	O
(	O
qdaemon	pointer
->	O
fcaller	int
?	O
!	O
qsys	pointer
->	O
uuconf_fcall_transfer	int
:	O
!	O
qsys	pointer
->	O
uuconf_fcalled_transfer	int
)	O
{	O
if	O
(	O
!	O
qsys	pointer
->	O
uuconf_fcall_transfer	int
&&	O
!	O
qsys	pointer
->	O
uuconf_fcalled_transfer	int
)	O
return	O
flocal_rec_fail	function
(	O
(	O
struct	O
stransfer	struct
*	O
)	O
NULL	O
,	O
qcmd	pointer
,	O
qsys	pointer
,	O
"not permitted to request files"	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
fspool	int
=	O
fspool_file	function
(	O
qcmd	pointer
->	O
zto	pointer
)	O
;	O
if	O
(	O
fspool	int
)	O
{	O
pointer	pointer
puuconf	pointer
;	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zlocalname	pointer
;	O
struct	O
uuconf_system	struct
slocalsys	struct
;	O
if	O
(	O
qcmd	pointer
->	O
zto	pointer
[	O
0	int
]	O
!=	O
'D'	O
||	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'9'	O
)	O
==	O
NULL	O
)	O
return	O
flocal_rec_fail	function
(	O
(	O
struct	O
stransfer	struct
*	O
)	O
NULL	O
,	O
qcmd	pointer
,	O
qsys	pointer
,	O
"not permitted to receive"	pointer
)	O
;	O
puuconf	pointer
=	O
qdaemon	pointer
->	O
puuconf	pointer
;	O
iuuconf	int
=	O
uuconf_localname	function
(	O
puuconf	pointer
,	O
&	O
zlocalname	pointer
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
zlocalname	pointer
=	O
zsysdep_localname	function
(	O
)	O
;	O
if	O
(	O
zlocalname	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
zlocalname	pointer
,	O
&	O
slocalsys	struct
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_NOT_FOUND	O
)	O
{	O
iuuconf	int
=	O
uuconf_system_local	function
(	O
puuconf	pointer
,	O
&	O
slocalsys	struct
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
slocalsys	struct
.	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
zlocalname	pointer
;	O
}	O
else	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
ulog_uuconf	function
(	O
LOG_ERROR	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
return	O
FALSE	O
;	O
}	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
&	O
slocalsys	struct
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
slocalsys	struct
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
zfile	pointer
=	O
zsysdep_add_base	function
(	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
fin_directory_list	function
(	O
zfile	pointer
,	O
qsys	pointer
->	O
uuconf_pzlocal_receive	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
qcmd	pointer
->	O
zuser	pointer
)	O
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
flocal_rec_fail	function
(	O
(	O
struct	O
stransfer	struct
*	O
)	O
NULL	O
,	O
qcmd	pointer
,	O
qsys	pointer
,	O
"not permitted to receive"	pointer
)	O
;	O
}	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'f'	O
)	O
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zfile	pointer
,	O
TRUE	O
)	O
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
flocal_rec_fail	function
(	O
(	O
struct	O
stransfer	struct
*	O
)	O
NULL	O
,	O
qcmd	pointer
,	O
qsys	pointer
,	O
"cannot create directories"	pointer
)	O
;	O
}	O
}	O
}	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
srecinfo	struct
)	O
)	O
;	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'm'	O
)	O
==	O
NULL	O
)	O
qinfo	pointer
->	O
zmail	pointer
=	O
NULL	O
;	O
else	O
qinfo	pointer
->	O
zmail	pointer
=	O
zbufcpy	function
(	O
qcmd	pointer
->	O
zuser	pointer
)	O
;	O
qinfo	pointer
->	O
zfile	pointer
=	O
zfile	pointer
;	O
qinfo	pointer
->	O
ztemp	pointer
=	O
NULL	O
;	O
qinfo	pointer
->	O
fspool	int
=	O
fspool	int
;	O
qinfo	pointer
->	O
flocal	int
=	O
TRUE	O
;	O
qinfo	pointer
->	O
freceived	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
freplied	int
=	O
TRUE	O
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
qcmd	pointer
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
flocal_rec_send_request	function
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
qinfo	pointer
;	O
return	O
fqueue_local	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
flocal_rec_fail	function
(	O
qtrans	pointer
,	O
qcmd	pointer
,	O
qsys	pointer
,	O
zwhy	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
const	O
char	O
*	O
zwhy	pointer
;	O
{	O
if	O
(	O
zwhy	pointer
!=	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
zwhy	pointer
)	O
;	O
(	O
void	O
)	O
fmail_transfer	function
(	O
FALSE	O
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zwhy	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qcmd	pointer
->	O
pseq	pointer
)	O
;	O
}	O
if	O
(	O
qtrans	pointer
!=	O
NULL	O
)	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
flocal_rec_send_request	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
long	O
cbytes	long
,	O
cbytes2	long
;	O
boolean	int
fquote	int
;	O
const	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
struct	O
scmd	struct
squoted	struct
;	O
size_t	long
clen	long
;	O
char	O
*	O
zsend	pointer
;	O
boolean	int
fret	int
;	O
qinfo	pointer
->	O
ztemp	pointer
=	O
zsysdep_receive_temp	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
frestart	int
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_RESTART	O
)	O
!=	O
0	int
)	O
)	O
;	O
if	O
(	O
qinfo	pointer
->	O
ztemp	pointer
==	O
NULL	O
)	O
{	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
qtrans	pointer
->	O
fcmd	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
flocal_rec_await_reply	function
;	O
if	O
(	O
!	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
)	O
return	O
FALSE	O
;	O
cbytes	long
=	O
csysdep_bytes_free	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
cbytes2	long
=	O
csysdep_bytes_free	function
(	O
qinfo	pointer
->	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
<	O
cbytes2	long
)	O
cbytes	long
=	O
cbytes2	long
;	O
if	O
(	O
cbytes	long
!=	O
-	O
1	int
)	O
{	O
cbytes	long
-=	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_cfree_space	long
;	O
if	O
(	O
cbytes	long
<	O
0	int
)	O
cbytes	long
=	O
0	int
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
clocal_size	long
!=	O
-	O
1	int
&&	O
(	O
cbytes	long
==	O
-	O
1	int
||	O
qdaemon	pointer
->	O
clocal_size	long
<	O
cbytes	long
)	O
)	O
cbytes	long
=	O
qdaemon	pointer
->	O
clocal_size	long
;	O
fquote	int
=	O
fcmd_needs_quotes	function
(	O
&	O
qtrans	pointer
->	O
s	struct
)	O
;	O
if	O
(	O
!	O
fquote	int
)	O
qcmd	pointer
=	O
&	O
qtrans	pointer
->	O
s	struct
;	O
else	O
{	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_QUOTES	O
)	O
==	O
0	int
)	O
return	O
flocal_rec_fail	function
(	O
qtrans	pointer
,	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
->	O
qsys	pointer
,	O
"remote system does not support required quoting"	pointer
)	O
;	O
uquote_cmd	function
(	O
&	O
qtrans	pointer
->	O
s	struct
,	O
&	O
squoted	struct
)	O
;	O
qcmd	pointer
=	O
&	O
squoted	struct
;	O
}	O
clen	long
=	O
(	O
strlen	function
(	O
qcmd	pointer
->	O
zfrom	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zto	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zuser	pointer
)	O
+	O
strlen	function
(	O
qcmd	pointer
->	O
zoptions	pointer
)	O
+	O
30	int
)	O
;	O
zsend	pointer
=	O
zbufalc	function
(	O
clen	long
)	O
;	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_SIZES	O
)	O
==	O
0	int
)	O
sprintf	function
(	O
zsend	pointer
,	O
"R %s %s %s -%s"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
qcmd	pointer
->	O
zoptions	pointer
)	O
;	O
else	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_V103	O
)	O
==	O
0	int
)	O
sprintf	function
(	O
zsend	pointer
,	O
"R %s %s %s -%s 0x%lx"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
qcmd	pointer
->	O
zoptions	pointer
,	O
(	O
unsigned	O
long	O
)	O
cbytes	long
)	O
;	O
else	O
sprintf	function
(	O
zsend	pointer
,	O
"R %s %s %s -%s %ld"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
zuser	pointer
,	O
qcmd	pointer
->	O
zoptions	pointer
,	O
cbytes	long
)	O
;	O
fret	int
=	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
zsend	pointer
,	O
qtrans	pointer
->	O
ilocal	int
,	O
qtrans	pointer
->	O
iremote	int
)	O
;	O
ubuffree	function
(	O
zsend	pointer
)	O
;	O
if	O
(	O
fquote	int
)	O
ufree_quoted_cmd	function
(	O
&	O
squoted	struct
)	O
;	O
return	O
fret	int
;	O
}	O
static	O
boolean	int
flocal_rec_await_reply	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
zdata	pointer
;	O
size_t	long
cdata	long
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
const	O
char	O
*	O
zlog	pointer
;	O
char	O
*	O
zend	pointer
;	O
if	O
(	O
zdata	pointer
[	O
0	int
]	O
!=	O
'R'	O
||	O
(	O
zdata	pointer
[	O
1	int
]	O
!=	O
'Y'	O
&&	O
zdata	pointer
[	O
1	int
]	O
!=	O
'N'	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: bad response to receive request: \"%s\""	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zdata	pointer
)	O
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
zdata	pointer
[	O
1	int
]	O
==	O
'N'	O
)	O
{	O
boolean	int
fnever	int
;	O
const	O
char	O
*	O
zerr	pointer
;	O
fnever	int
=	O
TRUE	O
;	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'2'	O
)	O
zerr	pointer
=	O
"no such file"	pointer
;	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'6'	O
)	O
{	O
zerr	pointer
=	O
"too large to receive now"	pointer
;	O
fnever	int
=	O
FALSE	O
;	O
}	O
else	O
if	O
(	O
zdata	pointer
[	O
2	int
]	O
==	O
'9'	O
)	O
{	O
zerr	pointer
=	O
"too many channels for remote"	pointer
;	O
fnever	int
=	O
FALSE	O
;	O
if	O
(	O
qdaemon	pointer
->	O
cchans	int
>	O
2	int
)	O
--	O
qdaemon	pointer
->	O
cchans	int
;	O
}	O
else	O
zerr	pointer
=	O
"unknown reason"	pointer
;	O
if	O
(	O
fnever	int
)	O
return	O
flocal_rec_fail	function
(	O
qtrans	pointer
,	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
->	O
qsys	pointer
,	O
zerr	pointer
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
zerr	pointer
)	O
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
=	O
(	O
unsigned	O
int	O
)	O
strtol	function
(	O
(	O
char	O
*	O
)	O
(	O
zdata	pointer
+	O
2	int
)	O
,	O
&	O
zend	pointer
,	O
8	int
)	O
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
==	O
0	int
)	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
=	O
0666	int
;	O
if	O
(	O
*	O
zend	pointer
==	O
'M'	O
&&	O
qdaemon	pointer
->	O
fmaster	int
)	O
{	O
DEBUG_MESSAGE0	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"flocal_rec_await_reply: Remote has requested transfer of control"	pointer
)	O
;	O
qdaemon	pointer
->	O
fhangup_requested	int
=	O
TRUE	O
;	O
}	O
qtrans	pointer
->	O
e	pointer
=	O
esysdep_open_receive	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qinfo	pointer
->	O
ztemp	pointer
,	O
(	O
long	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
)	O
return	O
flocal_rec_fail	function
(	O
qtrans	pointer
,	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
->	O
qsys	pointer
,	O
"cannot open file"	pointer
)	O
;	O
if	O
(	O
qinfo	pointer
->	O
fspool	int
)	O
zlog	pointer
=	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
;	O
else	O
zlog	pointer
=	O
qinfo	pointer
->	O
zfile	pointer
;	O
qtrans	pointer
->	O
zlog	pointer
=	O
zbufalc	function
(	O
sizeof	O
"Receiving "	pointer
+	O
strlen	function
(	O
zlog	pointer
)	O
)	O
;	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
"Receiving %s"	pointer
,	O
zlog	pointer
)	O
;	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
(	O
long	O
)	O
-	O
1	int
,	O
&	O
fhandled	int
)	O
)	O
return	O
flocal_rec_fail	function
(	O
qtrans	pointer
,	O
&	O
qtrans	pointer
->	O
s	struct
,	O
qdaemon	pointer
->	O
qsys	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
fhandled	int
)	O
return	O
TRUE	O
;	O
}	O
qtrans	pointer
->	O
frecfile	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
frec_file_send_confirm	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
frec_file_end	function
;	O
return	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
boolean	int
frec_check_free	function
(	O
qtrans	pointer
,	O
cfree_space	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
long	O
cfree_space	long
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
long	O
cfree1	long
,	O
cfree2	long
;	O
cfree1	long
=	O
csysdep_bytes_free	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
cfree2	long
=	O
csysdep_bytes_free	function
(	O
qinfo	pointer
->	O
zfile	pointer
)	O
;	O
if	O
(	O
cfree1	long
<	O
cfree2	long
)	O
cfree1	long
=	O
cfree2	long
;	O
if	O
(	O
cfree1	long
!=	O
-	O
1	int
&&	O
cfree1	long
<	O
cfree_space	long
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: too big to receive now"	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
boolean	int
fremote_send_file_init	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
int	O
iremote	int
;	O
{	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
boolean	int
fspool	int
;	O
char	O
*	O
zfile	pointer
;	O
openfile_t	pointer
e	pointer
;	O
char	O
*	O
ztemp	pointer
;	O
long	O
cbytes	long
,	O
cbytes2	long
;	O
long	O
crestart	long
;	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
const	O
char	O
*	O
zlog	pointer
;	O
qsys	pointer
=	O
qdaemon	pointer
->	O
qsys	pointer
;	O
if	O
(	O
!	O
qsys	pointer
->	O
uuconf_frec_request	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to receive files from remote"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
fspool	int
=	O
fspool_file	function
(	O
qcmd	pointer
->	O
zto	pointer
)	O
;	O
if	O
(	O
(	O
fspool	int
&&	O
qcmd	pointer
->	O
zto	pointer
[	O
0	int
]	O
==	O
'C'	O
)	O
||	O
(	O
qcmd	pointer
->	O
bcmd	char
==	O
'E'	O
&&	O
(	O
!	O
fspool	int
||	O
qcmd	pointer
->	O
zto	pointer
[	O
0	int
]	O
!=	O
'D'	O
)	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to receive"	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
fsysdep_already_received	function
(	O
qsys	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
)	O
)	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_RECEIVED	int
,	O
iremote	int
)	O
;	O
if	O
(	O
fspool	int
)	O
{	O
zfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qsys	pointer
,	O
qcmd	pointer
->	O
zto	pointer
,	O
(	O
pointer	pointer
)	O
NULL	O
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
boolean	int
fbadname	int
;	O
zfile	pointer
=	O
zsysdep_local_file	function
(	O
qcmd	pointer
->	O
zto	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
&	O
fbadname	int
)	O
;	O
if	O
(	O
zfile	pointer
==	O
NULL	O
&&	O
fbadname	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: bad local file name"	pointer
,	O
qcmd	pointer
->	O
zto	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
zfile	pointer
!=	O
NULL	O
)	O
{	O
char	O
*	O
zadd	pointer
;	O
zadd	pointer
=	O
zsysdep_add_base	function
(	O
zfile	pointer
,	O
qcmd	pointer
->	O
zfrom	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
zfile	pointer
=	O
zadd	pointer
;	O
}	O
if	O
(	O
zfile	pointer
==	O
NULL	O
)	O
return	O
FALSE	O
;	O
if	O
(	O
!	O
fin_directory_list	function
(	O
zfile	pointer
,	O
qsys	pointer
->	O
uuconf_pzremote_receive	pointer
,	O
qsys	pointer
->	O
uuconf_zpubdir	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: not permitted to receive"	pointer
,	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_PERM	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'f'	O
)	O
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fsysdep_make_dirs	function
(	O
zfile	pointer
,	O
TRUE	O
)	O
)	O
{	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_OPEN	int
,	O
iremote	int
)	O
;	O
}	O
}	O
}	O
ztemp	pointer
=	O
zsysdep_receive_temp	function
(	O
qsys	pointer
,	O
zfile	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
frestart	int
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_RESTART	O
)	O
!=	O
0	int
)	O
)	O
;	O
cbytes	long
=	O
csysdep_bytes_free	function
(	O
ztemp	pointer
)	O
;	O
cbytes2	long
=	O
csysdep_bytes_free	function
(	O
zfile	pointer
)	O
;	O
if	O
(	O
cbytes	long
<	O
cbytes2	long
)	O
cbytes	long
=	O
cbytes2	long
;	O
if	O
(	O
cbytes	long
!=	O
-	O
1	int
)	O
{	O
cbytes	long
-=	O
qsys	pointer
->	O
uuconf_cfree_space	long
;	O
if	O
(	O
cbytes	long
<	O
0	int
)	O
cbytes	long
=	O
0	int
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
cremote_size	long
!=	O
-	O
1	int
&&	O
(	O
cbytes	long
==	O
-	O
1	int
||	O
qdaemon	pointer
->	O
cremote_size	long
<	O
cbytes	long
)	O
)	O
cbytes	long
=	O
qdaemon	pointer
->	O
cremote_size	long
;	O
if	O
(	O
cbytes	long
!=	O
-	O
1	int
)	O
{	O
long	O
csize	long
;	O
csize	long
=	O
qcmd	pointer
->	O
cbytes	long
;	O
if	O
(	O
csize	long
==	O
-	O
1	int
)	O
csize	long
=	O
CASSUMED_FILE_SIZE	O
;	O
if	O
(	O
cbytes	long
<	O
csize	long
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: too big to receive"	pointer
,	O
zfile	pointer
)	O
;	O
ubuffree	function
(	O
ztemp	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_SIZE	int
,	O
iremote	int
)	O
;	O
}	O
}	O
crestart	long
=	O
-	O
1	int
;	O
e	pointer
=	O
esysdep_open_receive	function
(	O
qsys	pointer
,	O
zfile	pointer
,	O
qcmd	pointer
->	O
ztemp	pointer
,	O
ztemp	pointer
,	O
(	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
frestart	int
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_RESTART	O
)	O
!=	O
0	int
)	O
?	O
&	O
crestart	long
:	O
(	O
long	O
*	O
)	O
NULL	O
)	O
)	O
;	O
if	O
(	O
!	O
ffileisopen	O
(	O
e	pointer
)	O
)	O
{	O
ubuffree	function
(	O
ztemp	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
FAILURE_OPEN	int
,	O
iremote	int
)	O
;	O
}	O
if	O
(	O
crestart	long
>	O
0	int
)	O
{	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fremote_send_file_init: Restarting receive from %ld"	pointer
,	O
crestart	long
)	O
;	O
if	O
(	O
!	O
ffileseek	O
(	O
e	pointer
,	O
crestart	long
)	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"seek: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
ffileclose	O
(	O
e	pointer
)	O
;	O
ubuffree	function
(	O
ztemp	pointer
)	O
;	O
ubuffree	function
(	O
zfile	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
srecinfo	struct
)	O
)	O
;	O
if	O
(	O
strchr	function
(	O
qcmd	pointer
->	O
zoptions	pointer
,	O
'n'	O
)	O
==	O
NULL	O
)	O
qinfo	pointer
->	O
zmail	pointer
=	O
NULL	O
;	O
else	O
qinfo	pointer
->	O
zmail	pointer
=	O
zbufcpy	function
(	O
qcmd	pointer
->	O
znotify	pointer
)	O
;	O
qinfo	pointer
->	O
zfile	pointer
=	O
zfile	pointer
;	O
qinfo	pointer
->	O
ztemp	pointer
=	O
ztemp	pointer
;	O
qinfo	pointer
->	O
fspool	int
=	O
fspool	int
;	O
qinfo	pointer
->	O
flocal	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
freceived	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
freplied	int
=	O
FALSE	O
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
qcmd	pointer
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fremote_send_reply	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
frec_file_end	function
;	O
qtrans	pointer
->	O
iremote	int
=	O
iremote	int
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
qinfo	pointer
;	O
qtrans	pointer
->	O
frecfile	int
=	O
TRUE	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
e	pointer
;	O
if	O
(	O
crestart	long
>	O
0	int
)	O
qtrans	pointer
->	O
ipos	long
=	O
crestart	long
;	O
if	O
(	O
qcmd	pointer
->	O
bcmd	char
==	O
'E'	O
)	O
zlog	pointer
=	O
qcmd	pointer
->	O
zcmd	pointer
;	O
else	O
{	O
if	O
(	O
qinfo	pointer
->	O
fspool	int
)	O
zlog	pointer
=	O
qcmd	pointer
->	O
zto	pointer
;	O
else	O
zlog	pointer
=	O
qinfo	pointer
->	O
zfile	pointer
;	O
}	O
qtrans	pointer
->	O
zlog	pointer
=	O
zbufalc	function
(	O
sizeof	O
"Receiving ( bytes resume at )"	pointer
+	O
strlen	function
(	O
zlog	pointer
)	O
+	O
50	int
)	O
;	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
"Receiving %s"	pointer
,	O
zlog	pointer
)	O
;	O
if	O
(	O
crestart	long
>	O
0	int
||	O
qcmd	pointer
->	O
cbytes	long
>	O
0	int
)	O
{	O
strcat	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
" ("	pointer
)	O
;	O
if	O
(	O
qcmd	pointer
->	O
cbytes	long
>	O
0	int
)	O
{	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
+	O
strlen	function
(	O
qtrans	pointer
->	O
zlog	pointer
)	O
,	O
"%ld bytes"	pointer
,	O
qcmd	pointer
->	O
cbytes	long
)	O
;	O
if	O
(	O
crestart	long
>	O
0	int
)	O
strcat	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
" "	pointer
)	O
;	O
}	O
if	O
(	O
crestart	long
>	O
0	int
)	O
sprintf	function
(	O
qtrans	pointer
->	O
zlog	pointer
+	O
strlen	function
(	O
qtrans	pointer
->	O
zlog	pointer
)	O
,	O
"resume at %ld"	pointer
,	O
crestart	long
)	O
;	O
strcat	function
(	O
qtrans	pointer
->	O
zlog	pointer
,	O
")"	pointer
)	O
;	O
}	O
return	O
fqueue_remote	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
fremote_send_reply	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
boolean	int
fret	int
;	O
char	O
ab	array
[	O
50	int
]	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
frec_file_send_confirm	function
;	O
if	O
(	O
qinfo	pointer
->	O
freceived	int
)	O
fret	int
=	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
else	O
fret	int
=	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
if	O
(	O
!	O
fret	int
)	O
return	O
FALSE	O
;	O
ab	array
[	O
0	int
]	O
=	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
;	O
ab	array
[	O
1	int
]	O
=	O
'Y'	O
;	O
if	O
(	O
qtrans	pointer
->	O
ipos	long
<=	O
0	int
)	O
ab	array
[	O
2	int
]	O
=	O
'\0'	O
;	O
else	O
sprintf	function
(	O
ab	array
+	O
2	int
,	O
" 0x%lx"	pointer
,	O
(	O
unsigned	O
long	O
)	O
qtrans	pointer
->	O
ipos	long
)	O
;	O
qinfo	pointer
->	O
freplied	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
ab	array
,	O
qtrans	pointer
->	O
ilocal	int
,	O
qtrans	pointer
->	O
iremote	int
)	O
)	O
{	O
(	O
void	O
)	O
ffileclose	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
(	O
long	O
)	O
-	O
1	int
,	O
&	O
fhandled	int
)	O
)	O
{	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
fremote_send_fail	function
(	O
qdaemon	pointer
,	O
qcmd	pointer
,	O
twhy	enum
,	O
iremote	int
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
scmd	struct
*	O
qcmd	pointer
;	O
enum	O
tfailure	enum
twhy	enum
;	O
int	O
iremote	int
;	O
{	O
struct	O
srecfailinfo	struct
*	O
qinfo	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
qinfo	pointer
=	O
(	O
struct	O
srecfailinfo	struct
*	O
)	O
xmalloc	function
(	O
sizeof	O
(	O
struct	O
srecfailinfo	struct
)	O
)	O
;	O
qinfo	pointer
->	O
twhy	enum
=	O
twhy	enum
;	O
qinfo	pointer
->	O
fsent	int
=	O
FALSE	O
;	O
qinfo	pointer
->	O
freceived	int
=	O
qdaemon	pointer
->	O
cchans	int
<=	O
1	int
;	O
qtrans	pointer
=	O
qtransalc	function
(	O
qcmd	pointer
)	O
;	O
qtrans	pointer
->	O
psendfn	pointer
=	O
fremote_send_fail_send	function
;	O
qtrans	pointer
->	O
precfn	pointer
=	O
fremote_discard	function
;	O
qtrans	pointer
->	O
iremote	int
=	O
iremote	int
;	O
qtrans	pointer
->	O
pinfo	pointer
=	O
(	O
pointer	pointer
)	O
qinfo	pointer
;	O
return	O
fqueue_remote	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
}	O
static	O
boolean	int
fremote_send_fail_send	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
srecfailinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecfailinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
ab	array
[	O
4	int
]	O
;	O
int	O
ilocal	int
,	O
iremote	int
;	O
ab	array
[	O
0	int
]	O
=	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
;	O
ab	array
[	O
1	int
]	O
=	O
'N'	O
;	O
switch	O
(	O
qinfo	pointer
->	O
twhy	enum
)	O
{	O
case	O
FAILURE_PERM	int
:	O
ab	array
[	O
2	int
]	O
=	O
'2'	O
;	O
break	O
;	O
case	O
FAILURE_OPEN	int
:	O
ab	array
[	O
2	int
]	O
=	O
'4'	O
;	O
break	O
;	O
case	O
FAILURE_SIZE	int
:	O
ab	array
[	O
2	int
]	O
=	O
'6'	O
;	O
break	O
;	O
case	O
FAILURE_RECEIVED	int
:	O
usent_receive_ack	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
ab	array
[	O
2	int
]	O
=	O
'8'	O
;	O
break	O
;	O
default	O
:	O
ab	array
[	O
2	int
]	O
=	O
'\0'	O
;	O
break	O
;	O
}	O
ab	array
[	O
3	int
]	O
=	O
'\0'	O
;	O
ilocal	int
=	O
qtrans	pointer
->	O
ilocal	int
;	O
iremote	int
=	O
qtrans	pointer
->	O
iremote	int
;	O
if	O
(	O
!	O
qinfo	pointer
->	O
freceived	int
)	O
{	O
qinfo	pointer
->	O
fsent	int
=	O
TRUE	O
;	O
if	O
(	O
!	O
fqueue_receive	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
)	O
return	O
FALSE	O
;	O
}	O
else	O
{	O
xfree	function
(	O
qtrans	pointer
->	O
pinfo	pointer
)	O
;	O
utransfree	function
(	O
qtrans	pointer
)	O
;	O
}	O
return	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
ab	array
,	O
ilocal	int
,	O
iremote	int
)	O
;	O
}	O
static	O
boolean	int
fremote_discard	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
ATTRIBUTE_UNUSED	O
;	O
const	O
char	O
*	O
zdata	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	long
cdata	long
;	O
{	O
struct	O
srecfailinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecfailinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
DEBUG_MESSAGE1	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"fremote_discard: Discarding %lu bytes"	pointer
,	O
(	O
unsigned	O
long	O
)	O
cdata	long
)	O
;	O
if	O
(	O
cdata	long
!=	O
0	int
)	O
return	O
TRUE	O
;	O
qinfo	pointer
->	O
freceived	int
=	O
TRUE	O
;	O
if	O
(	O
qinfo	pointer
->	O
fsent	int
)	O
{	O
xfree	function
(	O
qtrans	pointer
->	O
pinfo	pointer
)	O
;	O
utransfree	function
(	O
qtrans	pointer
)	O
;	O
}	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
frec_file_end	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
,	O
zdata	pointer
,	O
cdata	long
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
const	O
char	O
*	O
zdata	pointer
ATTRIBUTE_UNUSED	O
;	O
size_t	long
cdata	long
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
char	O
*	O
zalc	pointer
;	O
const	O
char	O
*	O
zerr	pointer
;	O
boolean	int
fnever	int
;	O
DEBUG_MESSAGE3	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"frec_file_end: %s to %s (freplied %s)"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
qinfo	pointer
->	O
freplied	int
?	O
"TRUE"	pointer
:	O
"FALSE"	pointer
)	O
;	O
if	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
!=	O
NULL	O
)	O
{	O
boolean	int
fhandled	int
;	O
if	O
(	O
!	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pffile	pointer
)	O
(	O
qdaemon	pointer
,	O
qtrans	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
(	O
long	O
)	O
-	O
1	int
,	O
&	O
fhandled	int
)	O
)	O
{	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
fhandled	int
)	O
return	O
TRUE	O
;	O
}	O
qinfo	pointer
->	O
freceived	int
=	O
TRUE	O
;	O
fnever	int
=	O
FALSE	O
;	O
zalc	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
fsysdep_sync	function
(	O
qtrans	pointer
->	O
e	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
)	O
)	O
{	O
zerr	pointer
=	O
strerror	function
(	O
errno	O
)	O
;	O
(	O
void	O
)	O
ffileclose	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
ffileclose	O
(	O
qtrans	pointer
->	O
e	pointer
)	O
)	O
{	O
zerr	pointer
=	O
strerror	function
(	O
errno	O
)	O
;	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: close: %s"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
zerr	pointer
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
}	O
else	O
{	O
qtrans	pointer
->	O
e	pointer
=	O
EFILECLOSED	O
;	O
if	O
(	O
!	O
fsysdep_move_file	function
(	O
qinfo	pointer
->	O
ztemp	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
,	O
qinfo	pointer
->	O
fspool	int
,	O
FALSE	O
,	O
!	O
qinfo	pointer
->	O
fspool	int
,	O
(	O
qinfo	pointer
->	O
flocal	int
?	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
:	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
)	O
{	O
long	O
cspace	long
;	O
cspace	long
=	O
csysdep_bytes_free	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
if	O
(	O
cspace	long
==	O
-	O
1	int
)	O
cspace	long
=	O
FREE_SPACE_DELTA	O
;	O
cspace	long
-=	O
(	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_cfree_space	long
+	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_cfree_space	long
/	O
2	int
)	O
;	O
if	O
(	O
cspace	long
<	O
0	int
)	O
{	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
zerr	pointer
=	O
"could not move to final location"	pointer
;	O
}	O
else	O
{	O
const	O
char	O
*	O
az	array
[	O
20	int
]	O
;	O
int	O
i	int
;	O
zalc	pointer
=	O
zbufalc	function
(	O
sizeof	O
"could not move to final location (left as )"	pointer
+	O
strlen	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
)	O
;	O
sprintf	function
(	O
zalc	pointer
,	O
"could not move to final location (left as %s)"	pointer
,	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
zerr	pointer
=	O
zalc	pointer
;	O
i	int
=	O
0	int
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"The file\n\t"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
qinfo	pointer
->	O
ztemp	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"\nwas saved because the move to the final location failed.\n"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"See the UUCP logs for more details.\n"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"The file transfer was from\n\t"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"!"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"\nto\n\t"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"\nand was requested by\n\t"	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
;	O
az	array
[	O
i	int
++	O
]	O
=	O
"\n"	pointer
;	O
(	O
void	O
)	O
fsysdep_mail	function
(	O
OWNER	pointer
,	O
"UUCP temporary file saved"	pointer
,	O
i	int
,	O
az	array
)	O
;	O
}	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s: %s"	pointer
,	O
qinfo	pointer
->	O
zfile	pointer
,	O
zerr	pointer
)	O
;	O
fnever	int
=	O
TRUE	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
qinfo	pointer
->	O
fspool	int
)	O
{	O
unsigned	O
int	O
imode	int
;	O
if	O
(	O
(	O
qtrans	pointer
->	O
s	struct
.	O
imode	int
&	O
0111	int
)	O
!=	O
0	int
)	O
imode	int
=	O
0777	int
;	O
else	O
imode	int
=	O
0666	int
;	O
(	O
void	O
)	O
fsysdep_change_mode	function
(	O
qinfo	pointer
->	O
zfile	pointer
,	O
imode	int
)	O
;	O
}	O
zerr	pointer
=	O
NULL	O
;	O
}	O
}	O
ustats	function
(	O
zerr	pointer
==	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
FALSE	O
,	O
qtrans	pointer
->	O
cbytes	long
,	O
qtrans	pointer
->	O
isecs	long
,	O
qtrans	pointer
->	O
imicros	long
,	O
qdaemon	pointer
->	O
fcaller	int
)	O
;	O
qdaemon	pointer
->	O
creceived	long
+=	O
qtrans	pointer
->	O
cbytes	long
;	O
if	O
(	O
zerr	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
qinfo	pointer
->	O
zmail	pointer
!=	O
NULL	O
&&	O
*	O
qinfo	pointer
->	O
zmail	pointer
!=	O
'\0'	O
)	O
(	O
void	O
)	O
fmail_transfer	function
(	O
TRUE	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qinfo	pointer
->	O
zmail	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
!=	O
NULL	O
)	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
if	O
(	O
!	O
qinfo	pointer
->	O
flocal	int
)	O
{	O
(	O
void	O
)	O
fsysdep_remember_reception	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
qinfo	pointer
->	O
flocal	int
&&	O
fnever	int
)	O
{	O
(	O
void	O
)	O
fmail_transfer	function
(	O
FALSE	O
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qinfo	pointer
->	O
zmail	pointer
,	O
zerr	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zfrom	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
;	O
(	O
void	O
)	O
fsysdep_did_work	function
(	O
qtrans	pointer
->	O
s	struct
.	O
pseq	pointer
)	O
;	O
}	O
}	O
ubuffree	function
(	O
zalc	pointer
)	O
;	O
if	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
&&	O
zerr	pointer
==	O
NULL	O
)	O
{	O
char	O
*	O
zxqt	pointer
,	O
*	O
zxqtfile	pointer
,	O
*	O
ztemp	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
boolean	int
fbad	int
;	O
zxqt	pointer
=	O
zbufcpy	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
zxqt	pointer
[	O
0	int
]	O
=	O
'X'	O
;	O
zxqtfile	pointer
=	O
zsysdep_spool_file_name	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
zxqt	pointer
,	O
(	O
pointer	pointer
)	O
NULL	O
)	O
;	O
ubuffree	function
(	O
zxqt	pointer
)	O
;	O
if	O
(	O
zxqtfile	pointer
==	O
NULL	O
)	O
{	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
e	pointer
=	O
NULL	O
;	O
ztemp	pointer
=	O
zsysdep_receive_temp	function
(	O
qdaemon	pointer
->	O
qsys	pointer
,	O
zxqtfile	pointer
,	O
"D.0"	pointer
,	O
(	O
qdaemon	pointer
->	O
qproto	pointer
->	O
frestart	int
&&	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_RESTART	O
)	O
!=	O
0	int
)	O
)	O
;	O
if	O
(	O
ztemp	pointer
!=	O
NULL	O
)	O
e	pointer
=	O
esysdep_fopen	function
(	O
ztemp	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
TRUE	O
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
ubuffree	function
(	O
zxqtfile	pointer
)	O
;	O
ubuffree	function
(	O
ztemp	pointer
)	O
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
if	O
(	O
!	O
fcmd_needs_quotes	function
(	O
&	O
qtrans	pointer
->	O
s	struct
)	O
)	O
{	O
fprintf	function
(	O
e	pointer
,	O
"U %s %s\n"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"F %s\n"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"I %s\n"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'R'	O
)	O
!=	O
NULL	O
)	O
fprintf	function
(	O
e	pointer
,	O
"R %s\n"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
znotify	pointer
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"C %s\n"	pointer
,	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
)	O
;	O
}	O
else	O
{	O
char	O
*	O
z1	pointer
;	O
char	O
*	O
z2	pointer
;	O
fprintf	function
(	O
e	pointer
,	O
"Q\n"	pointer
)	O
;	O
z1	pointer
=	O
zquote_cmd_string	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zuser	pointer
,	O
FALSE	O
)	O
;	O
z2	pointer
=	O
zquote_cmd_string	function
(	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
FALSE	O
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"U %s %s\n"	pointer
,	O
z1	pointer
,	O
z2	pointer
)	O
;	O
ubuffree	function
(	O
z1	pointer
)	O
;	O
ubuffree	function
(	O
z2	pointer
)	O
;	O
z1	pointer
=	O
zquote_cmd_string	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
,	O
FALSE	O
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"F %s\n"	pointer
,	O
z1	pointer
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"I %s\n"	pointer
,	O
z1	pointer
)	O
;	O
ubuffree	function
(	O
z1	pointer
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'R'	O
)	O
!=	O
NULL	O
)	O
{	O
z1	pointer
=	O
zquote_cmd_string	function
(	O
qtrans	pointer
->	O
s	struct
.	O
znotify	pointer
,	O
FALSE	O
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"R %s\n"	pointer
,	O
z1	pointer
)	O
;	O
ubuffree	function
(	O
z1	pointer
)	O
;	O
}	O
z1	pointer
=	O
zquote_cmd_string	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zcmd	pointer
,	O
TRUE	O
)	O
;	O
fprintf	function
(	O
e	pointer
,	O
"C %s\n"	pointer
,	O
z1	pointer
)	O
;	O
ubuffree	function
(	O
z1	pointer
)	O
;	O
}	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'N'	O
)	O
!=	O
NULL	O
)	O
fprintf	function
(	O
e	pointer
,	O
"N\n"	pointer
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'Z'	O
)	O
!=	O
NULL	O
)	O
fprintf	function
(	O
e	pointer
,	O
"Z\n"	pointer
)	O
;	O
if	O
(	O
strchr	function
(	O
qtrans	pointer
->	O
s	struct
.	O
zoptions	pointer
,	O
'e'	O
)	O
!=	O
NULL	O
)	O
fprintf	function
(	O
e	pointer
,	O
"e\n"	pointer
)	O
;	O
fbad	int
=	O
FALSE	O
;	O
if	O
(	O
!	O
fstdiosync	O
(	O
e	pointer
,	O
ztemp	pointer
)	O
)	O
{	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
ztemp	pointer
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
if	O
(	O
!	O
fbad	int
)	O
{	O
if	O
(	O
fclose	function
(	O
e	pointer
)	O
==	O
EOF	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fclose: %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
remove	function
(	O
ztemp	pointer
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
}	O
if	O
(	O
!	O
fbad	int
)	O
{	O
if	O
(	O
!	O
fsysdep_move_file	function
(	O
ztemp	pointer
,	O
zxqtfile	pointer
,	O
TRUE	O
,	O
FALSE	O
,	O
FALSE	O
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
)	O
)	O
{	O
(	O
void	O
)	O
remove	function
(	O
ztemp	pointer
)	O
;	O
fbad	int
=	O
TRUE	O
;	O
}	O
}	O
ubuffree	function
(	O
zxqtfile	pointer
)	O
;	O
ubuffree	function
(	O
ztemp	pointer
)	O
;	O
if	O
(	O
fbad	int
)	O
{	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
FALSE	O
;	O
}	O
}	O
if	O
(	O
zerr	pointer
==	O
NULL	O
&&	O
(	O
qtrans	pointer
->	O
s	struct
.	O
bcmd	char
==	O
'E'	O
||	O
(	O
qinfo	pointer
->	O
fspool	int
&&	O
qtrans	pointer
->	O
s	struct
.	O
zto	pointer
[	O
0	int
]	O
==	O
'X'	O
)	O
)	O
)	O
{	O
++	O
qdaemon	pointer
->	O
cxfiles_received	long
;	O
if	O
(	O
qdaemon	pointer
->	O
irunuuxqt	int
>	O
0	int
&&	O
qdaemon	pointer
->	O
cxfiles_received	long
>=	O
qdaemon	pointer
->	O
irunuuxqt	int
)	O
{	O
if	O
(	O
fspawn_uuxqt	function
(	O
TRUE	O
,	O
qdaemon	pointer
->	O
qsys	pointer
->	O
uuconf_zname	pointer
,	O
qdaemon	pointer
->	O
zconfig	pointer
)	O
)	O
qdaemon	pointer
->	O
cxfiles_received	long
=	O
0	int
;	O
}	O
}	O
qinfo	pointer
->	O
fmoved	int
=	O
zerr	pointer
==	O
NULL	O
;	O
if	O
(	O
qinfo	pointer
->	O
freplied	int
)	O
return	O
fqueue_send	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
static	O
boolean	int
frec_file_send_confirm	function
(	O
qtrans	pointer
,	O
qdaemon	pointer
)	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
const	O
char	O
*	O
zsend	pointer
;	O
int	O
ilocal	int
,	O
iremote	int
;	O
if	O
(	O
!	O
qinfo	pointer
->	O
fmoved	int
)	O
zsend	pointer
=	O
"CN5"	pointer
;	O
else	O
if	O
(	O
!	O
qdaemon	pointer
->	O
frequest_hangup	int
)	O
zsend	pointer
=	O
"CY"	pointer
;	O
else	O
{	O
if	O
(	O
qdaemon	pointer
->	O
fmaster	int
)	O
ulog	function
(	O
LOG_FATAL	int
,	O
"frec_file_send_confirm: Can't happen"	pointer
)	O
;	O
DEBUG_MESSAGE0	O
(	O
DEBUG_UUCP_PROTO	O
,	O
"frec_send_file_confirm: Requesting remote to transfer control"	pointer
)	O
;	O
zsend	pointer
=	O
"CYM"	pointer
;	O
}	O
if	O
(	O
!	O
qinfo	pointer
->	O
flocal	int
&&	O
qinfo	pointer
->	O
fmoved	int
)	O
usent_receive_ack	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
;	O
ilocal	int
=	O
qtrans	pointer
->	O
ilocal	int
;	O
iremote	int
=	O
qtrans	pointer
->	O
iremote	int
;	O
urrec_free	function
(	O
qtrans	pointer
)	O
;	O
return	O
(	O
*	O
qdaemon	pointer
->	O
qproto	pointer
->	O
pfsendcmd	pointer
)	O
(	O
qdaemon	pointer
,	O
zsend	pointer
,	O
ilocal	int
,	O
iremote	int
)	O
;	O
}	O
boolean	int
frec_discard_temp	function
(	O
qdaemon	pointer
,	O
qtrans	pointer
)	O
struct	O
sdaemon	struct
*	O
qdaemon	pointer
;	O
struct	O
stransfer	struct
*	O
qtrans	pointer
;	O
{	O
struct	O
srecinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
srecinfo	struct
*	O
)	O
qtrans	pointer
->	O
pinfo	pointer
;	O
if	O
(	O
(	O
qdaemon	pointer
->	O
ifeatures	int
&	O
FEATURE_RESTART	O
)	O
==	O
0	int
||	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
==	O
NULL	O
||	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
[	O
0	int
]	O
!=	O
'D'	O
||	O
strcmp	function
(	O
qtrans	pointer
->	O
s	struct
.	O
ztemp	pointer
,	O
"D.0"	pointer
)	O
==	O
0	int
)	O
(	O
void	O
)	O
remove	function
(	O
qinfo	pointer
->	O
ztemp	pointer
)	O
;	O
return	O
TRUE	O
;	O
}	O
