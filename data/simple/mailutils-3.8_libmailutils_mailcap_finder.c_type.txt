static	O
int	O
finder_init	function
(	O
mu_mailcap_finder_t	pointer
finder	pointer
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct
*	O
sc	pointer
,	O
struct	O
mu_mailcap_error_closure	struct
*	O
ec	pointer
,	O
char	O
*	O
*	O
file_names	pointer
)	O
;	O
int	O
mu_mailcap_finder_create	function
(	O
mu_mailcap_finder_t	pointer
*	O
pfinder	pointer
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct
*	O
sc	pointer
,	O
struct	O
mu_mailcap_error_closure	struct
*	O
ec	pointer
,	O
char	O
*	O
*	O
file_names	pointer
)	O
{	O
int	O
rc	int
;	O
mu_mailcap_finder_t	pointer
finder	pointer
;	O
if	O
(	O
!	O
pfinder	pointer
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
!	O
file_names	pointer
)	O
return	O
EINVAL	int
;	O
finder	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
*	O
finder	pointer
)	O
;	O
if	O
(	O
!	O
finder	pointer
)	O
return	O
ENOMEM	int
;	O
rc	int
=	O
finder_init	function
(	O
finder	pointer
,	O
flags	int
,	O
sc	pointer
,	O
ec	pointer
,	O
file_names	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_mailcap_finder_destroy	function
(	O
&	O
finder	pointer
)	O
;	O
else	O
*	O
pfinder	pointer
=	O
finder	pointer
;	O
return	O
rc	int
;	O
}	O
static	O
int	O
finder_init	function
(	O
mu_mailcap_finder_t	pointer
finder	pointer
,	O
int	O
flags	int
,	O
struct	O
mu_mailcap_selector_closure	struct
*	O
sc	pointer
,	O
struct	O
mu_mailcap_error_closure	struct
*	O
ec	pointer
,	O
char	O
*	O
*	O
file_names	pointer
)	O
{	O
int	O
rc	int
;	O
size_t	long
i	long
;	O
rc	int
=	O
mu_mailcap_create	function
(	O
&	O
finder	pointer
->	O
mcp	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_mailcap_set_flags	function
(	O
finder	pointer
->	O
mcp	pointer
,	O
flags	int
)	O
;	O
if	O
(	O
sc	pointer
)	O
{	O
rc	int
=	O
mu_mailcap_set_selector	function
(	O
finder	pointer
->	O
mcp	pointer
,	O
sc	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
if	O
(	O
ec	pointer
)	O
{	O
rc	int
=	O
mu_mailcap_set_error	function
(	O
finder	pointer
->	O
mcp	pointer
,	O
ec	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
file_names	pointer
[	O
i	long
]	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
access	function
(	O
file_names	pointer
[	O
i	long
]	O
,	O
F_OK	int
)	O
)	O
continue	O
;	O
mu_mailcap_parse_file	function
(	O
finder	pointer
->	O
mcp	pointer
,	O
file_names	pointer
[	O
i	long
]	O
)	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
mu_mailcap_finder_destroy	function
(	O
mu_mailcap_finder_t	pointer
*	O
pfinder	pointer
)	O
{	O
if	O
(	O
pfinder	pointer
&&	O
*	O
pfinder	pointer
)	O
{	O
mu_mailcap_finder_t	pointer
finder	pointer
=	O
*	O
pfinder	pointer
;	O
mu_iterator_destroy	function
(	O
&	O
finder	pointer
->	O
itr	pointer
)	O
;	O
mu_mailcap_destroy	function
(	O
&	O
finder	pointer
->	O
mcp	pointer
)	O
;	O
free	function
(	O
finder	pointer
)	O
;	O
*	O
pfinder	pointer
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_mailcap_finder_next_match	function
(	O
mu_mailcap_finder_t	pointer
finder	pointer
,	O
mu_mailcap_entry_t	pointer
*	O
ret_entry	pointer
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
finder	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
ret_entry	pointer
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
!	O
finder	pointer
->	O
itr	pointer
)	O
{	O
rc	int
=	O
mu_mailcap_get_iterator	function
(	O
finder	pointer
->	O
mcp	pointer
,	O
&	O
finder	pointer
->	O
itr	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
rc	int
=	O
mu_iterator_first	function
(	O
finder	pointer
->	O
itr	pointer
)	O
;	O
}	O
else	O
rc	int
=	O
mu_iterator_next	function
(	O
finder	pointer
->	O
itr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
mu_iterator_is_done	function
(	O
finder	pointer
->	O
itr	pointer
)	O
)	O
return	O
MU_ERR_NOENT	O
;	O
return	O
mu_iterator_current	function
(	O
finder	pointer
->	O
itr	pointer
,	O
(	O
void	O
*	O
*	O
)	O
ret_entry	pointer
)	O
;	O
}	O
