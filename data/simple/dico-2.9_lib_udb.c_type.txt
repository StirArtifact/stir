struct	O
dico_udb	struct
{	O
void	O
*	O
handle	pointer
;	O
dico_url_t	pointer
url	pointer
;	O
const	O
char	O
*	O
qpw	pointer
;	O
const	O
char	O
*	O
qgrp	pointer
;	O
const	O
char	O
*	O
options	pointer
;	O
int	O
(	O
*	O
_db_open	pointer
)	O
(	O
void	O
*	O
*	O
,	O
dico_url_t	pointer
,	O
const	O
char	O
*	O
)	O
;	O
int	O
(	O
*	O
_db_close	pointer
)	O
(	O
void	O
*	O
)	O
;	O
int	O
(	O
*	O
_db_check_password	pointer
)	O
(	O
void	O
*	O
,	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
)	O
;	O
int	O
(	O
*	O
_db_get_password	pointer
)	O
(	O
void	O
*	O
,	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
,	O
char	O
*	O
*	O
)	O
;	O
int	O
(	O
*	O
_db_get_groups	pointer
)	O
(	O
void	O
*	O
,	O
const	O
char	O
*	O
,	O
const	O
char	O
*	O
,	O
dico_list_t	pointer
*	O
)	O
;	O
}	O
;	O
int	O
dico_udb_open	function
(	O
dico_udb_t	pointer
db	pointer
)	O
{	O
if	O
(	O
!	O
db	pointer
)	O
return	O
1	int
;	O
if	O
(	O
!	O
db	pointer
->	O
_db_open	pointer
)	O
return	O
0	int
;	O
return	O
db	pointer
->	O
_db_open	pointer
(	O
&	O
db	pointer
->	O
handle	pointer
,	O
db	pointer
->	O
url	pointer
,	O
db	pointer
->	O
options	pointer
)	O
;	O
}	O
int	O
dico_udb_close	function
(	O
dico_udb_t	pointer
db	pointer
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
!	O
db	pointer
->	O
_db_close	pointer
)	O
rc	int
=	O
0	int
;	O
else	O
rc	int
=	O
db	pointer
->	O
_db_close	pointer
(	O
db	pointer
->	O
handle	pointer
)	O
;	O
db	pointer
->	O
handle	pointer
=	O
NULL	O
;	O
return	O
rc	int
;	O
}	O
int	O
dico_udb_check_password	function
(	O
dico_udb_t	pointer
db	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
const	O
char	O
*	O
pass	pointer
)	O
{	O
if	O
(	O
!	O
db	pointer
->	O
_db_check_password	pointer
)	O
return	O
ENOSYS	int
;	O
return	O
db	pointer
->	O
_db_check_password	pointer
(	O
db	pointer
->	O
handle	pointer
,	O
db	pointer
->	O
qpw	pointer
,	O
key	pointer
,	O
pass	pointer
)	O
;	O
}	O
int	O
dico_udb_get_password	function
(	O
dico_udb_t	pointer
db	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
char	O
*	O
*	O
pass	pointer
)	O
{	O
return	O
db	pointer
->	O
_db_get_password	pointer
(	O
db	pointer
->	O
handle	pointer
,	O
db	pointer
->	O
qpw	pointer
,	O
key	pointer
,	O
pass	pointer
)	O
;	O
}	O
int	O
dico_udb_get_groups	function
(	O
dico_udb_t	pointer
db	pointer
,	O
const	O
char	O
*	O
key	pointer
,	O
dico_list_t	pointer
*	O
groups	pointer
)	O
{	O
return	O
db	pointer
->	O
_db_get_groups	pointer
(	O
db	pointer
->	O
handle	pointer
,	O
db	pointer
->	O
qgrp	pointer
,	O
key	pointer
,	O
groups	pointer
)	O
;	O
}	O
dico_list_t	pointer
dico_udb_def_list	pointer
;	O
static	O
int	O
udb_def_cmp	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
void	O
*	O
data	pointer
,	O
void	O
*	O
ignore	pointer
)	O
{	O
const	O
struct	O
dico_udb_def	struct
*	O
def	pointer
=	O
item	pointer
;	O
const	O
char	O
*	O
proto	pointer
=	O
data	pointer
;	O
return	O
strcmp	function
(	O
def	pointer
->	O
proto	pointer
,	O
proto	pointer
)	O
;	O
}	O
int	O
dico_udb_define	function
(	O
struct	O
dico_udb_def	struct
*	O
dptr	pointer
)	O
{	O
if	O
(	O
!	O
dico_udb_def_list	pointer
)	O
{	O
dico_udb_def_list	pointer
=	O
dico_list_create	function
(	O
)	O
;	O
if	O
(	O
!	O
dico_udb_def_list	pointer
)	O
{	O
errno	O
=	O
ENOMEM	int
;	O
return	O
1	int
;	O
}	O
dico_list_set_comparator	function
(	O
dico_udb_def_list	pointer
,	O
udb_def_cmp	function
,	O
NULL	O
)	O
;	O
}	O
return	O
dico_list_append	function
(	O
dico_udb_def_list	pointer
,	O
dptr	pointer
)	O
;	O
}	O
int	O
dico_udb_create	function
(	O
dico_udb_t	pointer
*	O
pdb	pointer
,	O
const	O
char	O
*	O
urlstr	pointer
,	O
const	O
char	O
*	O
qpw	pointer
,	O
const	O
char	O
*	O
qgrp	pointer
,	O
const	O
char	O
*	O
options	pointer
)	O
{	O
dico_url_t	pointer
url	pointer
;	O
int	O
rc	int
;	O
struct	O
dico_udb_def	struct
*	O
def	pointer
;	O
struct	O
dico_udb	struct
*	O
uptr	pointer
;	O
rc	int
=	O
dico_url_parse	function
(	O
&	O
url	pointer
,	O
urlstr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
1	int
;	O
}	O
def	pointer
=	O
dico_list_locate	function
(	O
dico_udb_def_list	pointer
,	O
url	pointer
->	O
proto	pointer
)	O
;	O
if	O
(	O
!	O
def	pointer
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
dico_url_destroy	function
(	O
&	O
url	pointer
)	O
;	O
return	O
1	int
;	O
}	O
uptr	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
uptr	pointer
)	O
)	O
;	O
if	O
(	O
!	O
uptr	pointer
)	O
return	O
1	int
;	O
uptr	pointer
->	O
url	pointer
=	O
url	pointer
;	O
uptr	pointer
->	O
qpw	pointer
=	O
qpw	pointer
;	O
uptr	pointer
->	O
qgrp	pointer
=	O
qgrp	pointer
;	O
uptr	pointer
->	O
options	pointer
=	O
options	pointer
;	O
uptr	pointer
->	O
_db_open	pointer
=	O
def	pointer
->	O
_db_open	pointer
;	O
uptr	pointer
->	O
_db_close	pointer
=	O
def	pointer
->	O
_db_close	pointer
;	O
uptr	pointer
->	O
_db_check_password	pointer
=	O
def	pointer
->	O
_db_check_password	pointer
;	O
uptr	pointer
->	O
_db_get_password	pointer
=	O
def	pointer
->	O
_db_get_password	pointer
;	O
uptr	pointer
->	O
_db_get_groups	pointer
=	O
def	pointer
->	O
_db_get_groups	pointer
;	O
*	O
pdb	pointer
=	O
uptr	pointer
;	O
return	O
0	int
;	O
}	O
