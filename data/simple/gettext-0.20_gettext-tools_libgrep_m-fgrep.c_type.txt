struct	O
compiled_kwset	struct
{	O
kwset_t	pointer
kwset	pointer
;	O
char	O
*	O
trans	pointer
;	O
bool	bool
match_words	bool
;	O
bool	bool
match_lines	bool
;	O
char	O
eolbyte	char
;	O
}	O
;	O
static	O
void	O
kwsinit	function
(	O
struct	O
compiled_kwset	struct
*	O
ckwset	pointer
,	O
bool	bool
match_icase	bool
,	O
bool	bool
match_words	bool
,	O
bool	bool
match_lines	bool
,	O
char	O
eolbyte	char
)	O
{	O
if	O
(	O
match_icase	bool
)	O
{	O
int	O
i	int
;	O
ckwset	pointer
->	O
trans	pointer
=	O
XNMALLOC	O
(	O
NCHAR	O
,	O
char	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
NCHAR	O
;	O
i	int
++	O
)	O
ckwset	pointer
->	O
trans	pointer
[	O
i	int
]	O
=	O
TOLOWER	O
(	O
i	int
)	O
;	O
ckwset	pointer
->	O
kwset	pointer
=	O
kwsalloc	function
(	O
ckwset	pointer
->	O
trans	pointer
)	O
;	O
}	O
else	O
{	O
ckwset	pointer
->	O
trans	pointer
=	O
NULL	O
;	O
ckwset	pointer
->	O
kwset	pointer
=	O
kwsalloc	function
(	O
NULL	O
)	O
;	O
}	O
if	O
(	O
ckwset	pointer
->	O
kwset	pointer
==	O
NULL	O
)	O
error	function
(	O
exit_failure	int
,	O
0	int
,	O
_	O
(	O
"memory exhausted"	pointer
)	O
)	O
;	O
ckwset	pointer
->	O
match_words	bool
=	O
match_words	bool
;	O
ckwset	pointer
->	O
match_lines	bool
=	O
match_lines	bool
;	O
ckwset	pointer
->	O
eolbyte	char
=	O
eolbyte	char
;	O
}	O
static	O
void	O
*	O
Fcompile	function
(	O
const	O
char	O
*	O
pattern	pointer
,	O
size_t	long
pattern_size	long
,	O
bool	bool
match_icase	bool
,	O
bool	bool
match_words	bool
,	O
bool	bool
match_lines	bool
,	O
char	O
eolbyte	char
)	O
{	O
struct	O
compiled_kwset	struct
*	O
ckwset	pointer
;	O
const	O
char	O
*	O
beg	pointer
;	O
const	O
char	O
*	O
err	pointer
;	O
ckwset	pointer
=	O
XMALLOC	O
(	O
struct	O
compiled_kwset	struct
)	O
;	O
kwsinit	function
(	O
ckwset	pointer
,	O
match_icase	bool
,	O
match_words	bool
,	O
match_lines	bool
,	O
eolbyte	char
)	O
;	O
beg	pointer
=	O
pattern	pointer
;	O
do	O
{	O
const	O
char	O
*	O
lim	pointer
;	O
for	O
(	O
lim	pointer
=	O
beg	pointer
;	O
lim	pointer
<	O
pattern	pointer
+	O
pattern_size	long
&&	O
*	O
lim	pointer
!=	O
'\n'	O
;	O
++	O
lim	pointer
)	O
;	O
if	O
(	O
(	O
err	pointer
=	O
kwsincr	function
(	O
ckwset	pointer
->	O
kwset	pointer
,	O
beg	pointer
,	O
lim	pointer
-	O
beg	pointer
)	O
)	O
!=	O
NULL	O
)	O
error	function
(	O
exit_failure	int
,	O
0	int
,	O
"%s"	pointer
,	O
err	pointer
)	O
;	O
if	O
(	O
lim	pointer
<	O
pattern	pointer
+	O
pattern_size	long
)	O
++	O
lim	pointer
;	O
beg	pointer
=	O
lim	pointer
;	O
}	O
while	O
(	O
beg	pointer
<	O
pattern	pointer
+	O
pattern_size	long
)	O
;	O
if	O
(	O
(	O
err	pointer
=	O
kwsprep	function
(	O
ckwset	pointer
->	O
kwset	pointer
)	O
)	O
!=	O
NULL	O
)	O
error	function
(	O
exit_failure	int
,	O
0	int
,	O
"%s"	pointer
,	O
err	pointer
)	O
;	O
return	O
ckwset	pointer
;	O
}	O
static	O
char	O
*	O
check_multibyte_string	function
(	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
buf_size	long
)	O
{	O
char	O
*	O
mb_properties	pointer
=	O
(	O
char	O
*	O
)	O
malloc	function
(	O
buf_size	long
)	O
;	O
mbstate_t	struct
cur_state	struct
;	O
int	O
i	int
;	O
memset	function
(	O
&	O
cur_state	struct
,	O
0	int
,	O
sizeof	O
(	O
mbstate_t	struct
)	O
)	O
;	O
memset	function
(	O
mb_properties	pointer
,	O
0	int
,	O
sizeof	O
(	O
char	O
)	O
*	O
buf_size	long
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
buf_size	long
;	O
)	O
{	O
size_t	long
mbclen	long
;	O
mbclen	long
=	O
mbrlen	function
(	O
buf	pointer
+	O
i	int
,	O
buf_size	long
-	O
i	int
,	O
&	O
cur_state	struct
)	O
;	O
if	O
(	O
mbclen	long
==	O
(	O
size_t	long
)	O
-	O
1	int
||	O
mbclen	long
==	O
(	O
size_t	long
)	O
-	O
2	int
||	O
mbclen	long
==	O
0	int
)	O
{	O
mbclen	long
=	O
1	int
;	O
}	O
mb_properties	pointer
[	O
i	int
]	O
=	O
mbclen	long
;	O
i	int
+=	O
mbclen	long
;	O
}	O
return	O
mb_properties	pointer
;	O
}	O
static	O
size_t	long
Fexecute	function
(	O
const	O
void	O
*	O
compiled_pattern	pointer
,	O
const	O
char	O
*	O
buf	pointer
,	O
size_t	long
buf_size	long
,	O
size_t	long
*	O
match_size	pointer
,	O
bool	bool
exact	bool
)	O
{	O
struct	O
compiled_kwset	struct
*	O
ckwset	pointer
=	O
(	O
struct	O
compiled_kwset	struct
*	O
)	O
compiled_pattern	pointer
;	O
char	O
eol	char
=	O
ckwset	pointer
->	O
eolbyte	char
;	O
register	O
const	O
char	O
*	O
buflim	pointer
=	O
buf	pointer
+	O
buf_size	long
;	O
register	O
const	O
char	O
*	O
beg	pointer
;	O
register	O
size_t	long
len	long
;	O
char	O
*	O
mb_properties	pointer
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
mb_properties	pointer
=	O
check_multibyte_string	function
(	O
buf	pointer
,	O
buf_size	long
)	O
;	O
for	O
(	O
beg	pointer
=	O
buf	pointer
;	O
beg	pointer
<=	O
buflim	pointer
;	O
++	O
beg	pointer
)	O
{	O
struct	O
kwsmatch	struct
kwsmatch	struct
;	O
size_t	long
offset	long
=	O
kwsexec	function
(	O
ckwset	pointer
->	O
kwset	pointer
,	O
beg	pointer
,	O
buflim	pointer
-	O
beg	pointer
,	O
&	O
kwsmatch	struct
)	O
;	O
if	O
(	O
offset	long
==	O
(	O
size_t	long
)	O
-	O
1	int
)	O
{	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
free	pointer
(	O
mb_properties	pointer
)	O
;	O
return	O
offset	long
;	O
}	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
&&	O
mb_properties	pointer
[	O
offset	long
+	O
beg	pointer
-	O
buf	pointer
]	O
==	O
0	int
)	O
continue	O
;	O
beg	pointer
+=	O
offset	long
;	O
len	long
=	O
kwsmatch	struct
.	O
size	long
[	O
0	int
]	O
;	O
if	O
(	O
exact	bool
)	O
{	O
*	O
match_size	pointer
=	O
len	long
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
free	pointer
(	O
mb_properties	pointer
)	O
;	O
return	O
beg	pointer
-	O
buf	pointer
;	O
}	O
if	O
(	O
ckwset	pointer
->	O
match_lines	bool
)	O
{	O
if	O
(	O
beg	pointer
>	O
buf	pointer
&&	O
beg	pointer
[	O
-	O
1	int
]	O
!=	O
eol	char
)	O
continue	O
;	O
if	O
(	O
beg	pointer
+	O
len	long
<	O
buflim	pointer
&&	O
beg	pointer
[	O
len	long
]	O
!=	O
eol	char
)	O
continue	O
;	O
goto	O
success	O
;	O
}	O
else	O
if	O
(	O
ckwset	pointer
->	O
match_words	bool
)	O
{	O
register	O
const	O
char	O
*	O
curr	pointer
;	O
for	O
(	O
curr	pointer
=	O
beg	pointer
;	O
len	long
;	O
)	O
{	O
if	O
(	O
curr	pointer
>	O
buf	pointer
&&	O
IS_WORD_CONSTITUENT	O
(	O
(	O
unsigned	O
char	O
)	O
curr	pointer
[	O
-	O
1	int
]	O
)	O
)	O
break	O
;	O
if	O
(	O
curr	pointer
+	O
len	long
<	O
buflim	pointer
&&	O
IS_WORD_CONSTITUENT	O
(	O
(	O
unsigned	O
char	O
)	O
curr	pointer
[	O
len	long
]	O
)	O
)	O
{	O
offset	long
=	O
kwsexec	function
(	O
ckwset	pointer
->	O
kwset	pointer
,	O
beg	pointer
,	O
--	O
len	long
,	O
&	O
kwsmatch	struct
)	O
;	O
if	O
(	O
offset	long
==	O
(	O
size_t	long
)	O
-	O
1	int
)	O
{	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
free	pointer
(	O
mb_properties	pointer
)	O
;	O
return	O
offset	long
;	O
}	O
curr	pointer
=	O
beg	pointer
+	O
offset	long
;	O
len	long
=	O
kwsmatch	struct
.	O
size	long
[	O
0	int
]	O
;	O
}	O
else	O
goto	O
success	O
;	O
}	O
}	O
else	O
goto	O
success	O
;	O
}	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
free	pointer
(	O
mb_properties	pointer
)	O
;	O
return	O
-	O
1	int
;	O
success	O
:	O
{	O
register	O
const	O
char	O
*	O
end	pointer
;	O
end	pointer
=	O
(	O
const	O
char	O
*	O
)	O
memchr	function
(	O
beg	pointer
+	O
len	long
,	O
eol	char
,	O
buflim	pointer
-	O
(	O
beg	pointer
+	O
len	long
)	O
)	O
;	O
if	O
(	O
end	pointer
!=	O
NULL	O
)	O
end	pointer
++	O
;	O
else	O
end	pointer
=	O
buflim	pointer
;	O
while	O
(	O
buf	pointer
<	O
beg	pointer
&&	O
beg	pointer
[	O
-	O
1	int
]	O
!=	O
eol	char
)	O
--	O
beg	pointer
;	O
*	O
match_size	pointer
=	O
end	pointer
-	O
beg	pointer
;	O
if	O
(	O
MB_CUR_MAX	O
>	O
1	int
)	O
free	pointer
(	O
mb_properties	pointer
)	O
;	O
return	O
beg	pointer
-	O
buf	pointer
;	O
}	O
}	O
static	O
void	O
Ffree	function
(	O
void	O
*	O
compiled_pattern	pointer
)	O
{	O
struct	O
compiled_kwset	struct
*	O
ckwset	pointer
=	O
(	O
struct	O
compiled_kwset	struct
*	O
)	O
compiled_pattern	pointer
;	O
free	pointer
(	O
ckwset	pointer
->	O
trans	pointer
)	O
;	O
free	pointer
(	O
ckwset	pointer
)	O
;	O
}	O
matcher_t	struct
matcher_fgrep	struct
=	O
{	O
Fcompile	function
,	O
Fexecute	function
,	O
Ffree	function
}	O
;	O
