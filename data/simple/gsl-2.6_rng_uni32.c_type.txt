static	O
inline	O
unsigned	O
long	O
int	O
uni32_get	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
double	O
uni32_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
;	O
static	O
void	O
uni32_set	function
(	O
void	O
*	O
state	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
;	O
static	O
const	O
unsigned	O
long	O
int	O
MDIG	long
=	O
32	int
;	O
static	O
const	O
unsigned	O
long	O
int	O
m1	long
=	O
2147483647	int
;	O
static	O
const	O
unsigned	O
long	O
int	O
m2	long
=	O
65536	int
;	O
typedef	O
struct	O
{	O
int	O
i	int
,	O
j	int
;	O
unsigned	O
long	O
m	array
[	O
17	int
]	O
;	O
}	O
uni32_state_t	struct
;	O
static	O
inline	O
unsigned	O
long	O
uni32_get	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
uni32_state_t	struct
*	O
state	pointer
=	O
(	O
uni32_state_t	struct
*	O
)	O
vstate	pointer
;	O
const	O
long	O
int	O
i	int
=	O
state	pointer
->	O
i	int
;	O
const	O
long	O
int	O
j	int
=	O
state	pointer
->	O
j	int
;	O
long	O
int	O
k	long
=	O
state	pointer
->	O
m	array
[	O
i	int
]	O
-	O
state	pointer
->	O
m	array
[	O
j	int
]	O
;	O
if	O
(	O
k	long
<	O
0	int
)	O
k	long
+=	O
m1	long
;	O
state	pointer
->	O
m	array
[	O
j	int
]	O
=	O
k	long
;	O
if	O
(	O
i	int
==	O
0	int
)	O
{	O
state	pointer
->	O
i	int
=	O
16	int
;	O
}	O
else	O
{	O
(	O
state	pointer
->	O
i	int
)	O
--	O
;	O
}	O
if	O
(	O
j	int
==	O
0	int
)	O
{	O
state	pointer
->	O
j	int
=	O
16	int
;	O
}	O
else	O
{	O
(	O
state	pointer
->	O
j	int
)	O
--	O
;	O
}	O
return	O
k	long
;	O
}	O
static	O
double	O
uni32_get_double	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
return	O
uni32_get	function
(	O
vstate	pointer
)	O
/	O
2147483647.0	int
;	O
}	O
static	O
void	O
uni32_set	function
(	O
void	O
*	O
vstate	pointer
,	O
unsigned	O
long	O
int	O
s	long
)	O
{	O
long	O
int	O
seed	long
,	O
k0	long
,	O
k1	long
,	O
j0	long
,	O
j1	long
;	O
int	O
i	int
;	O
uni32_state_t	struct
*	O
state	pointer
=	O
(	O
uni32_state_t	struct
*	O
)	O
vstate	pointer
;	O
seed	long
=	O
(	O
s	long
<	O
m1	long
?	O
s	long
:	O
m1	long
)	O
;	O
seed	long
-=	O
(	O
seed	long
%	O
2	int
==	O
0	int
?	O
1	int
:	O
0	int
)	O
;	O
k0	long
=	O
9069	int
%	O
m2	long
;	O
k1	long
=	O
9069	int
/	O
m2	long
;	O
j0	long
=	O
seed	long
%	O
m2	long
;	O
j1	long
=	O
seed	long
/	O
m2	long
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
17	int
;	O
i	int
++	O
)	O
{	O
seed	long
=	O
j0	long
*	O
k0	long
;	O
j1	long
=	O
(	O
seed	long
/	O
m2	long
+	O
j0	long
*	O
k1	long
+	O
j1	long
*	O
k0	long
)	O
%	O
(	O
m2	long
/	O
2	int
)	O
;	O
j0	long
=	O
seed	long
%	O
m2	long
;	O
state	pointer
->	O
m	array
[	O
i	int
]	O
=	O
j0	long
+	O
m2	long
*	O
j1	long
;	O
}	O
state	pointer
->	O
i	int
=	O
4	int
;	O
state	pointer
->	O
j	int
=	O
16	int
;	O
return	O
;	O
}	O
static	O
const	O
gsl_rng_type	struct
uni32_type	struct
=	O
{	O
"uni32"	pointer
,	O
2147483646	int
,	O
0	int
,	O
sizeof	O
(	O
uni32_state_t	struct
)	O
,	O
&	O
uni32_set	function
,	O
&	O
uni32_get	function
,	O
&	O
uni32_get_double	function
}	O
;	O
const	O
gsl_rng_type	struct
*	O
gsl_rng_uni32	pointer
=	O
&	O
uni32_type	struct
;	O
