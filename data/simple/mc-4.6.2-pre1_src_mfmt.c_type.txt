enum	O
states	enum
{	O
header	int
,	O
definition	int
,	O
plain	int
,	O
newline	int
,	O
seen_f	int
,	O
seen_r	int
,	O
seen_o	int
,	O
header_new	int
,	O
seen_m	int
}	O
;	O
int	O
main	function
(	O
void	O
)	O
{	O
int	O
c	int
;	O
int	O
state	int
=	O
newline	int
;	O
int	O
space_seen	int
=	O
0	int
;	O
while	O
(	O
(	O
c	int
=	O
getchar	function
(	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
state	int
)	O
{	O
case	O
plain	int
:	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
state	int
=	O
newline	int
;	O
putchar	function
(	O
c	int
)	O
;	O
break	O
;	O
case	O
newline	int
:	O
if	O
(	O
c	int
==	O
'F'	O
)	O
state	int
=	O
seen_f	int
;	O
else	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
putchar	function
(	O
'\n'	O
)	O
;	O
else	O
{	O
state	int
=	O
plain	int
;	O
putchar	function
(	O
c	int
)	O
;	O
}	O
break	O
;	O
case	O
seen_f	int
:	O
if	O
(	O
c	int
==	O
'r'	O
)	O
state	int
=	O
seen_r	int
;	O
else	O
{	O
printf	function
(	O
"F%c"	pointer
,	O
c	int
)	O
;	O
state	int
=	O
plain	int
;	O
}	O
break	O
;	O
case	O
seen_r	int
:	O
if	O
(	O
c	int
==	O
'o'	O
)	O
state	int
=	O
seen_o	int
;	O
else	O
{	O
state	int
=	O
plain	int
;	O
printf	function
(	O
"Fr%c"	pointer
,	O
c	int
)	O
;	O
}	O
break	O
;	O
case	O
seen_o	int
:	O
if	O
(	O
c	int
==	O
'm'	O
)	O
{	O
state	int
=	O
seen_m	int
;	O
}	O
else	O
{	O
state	int
=	O
plain	int
;	O
printf	function
(	O
"Fro%c"	pointer
,	O
c	int
)	O
;	O
}	O
break	O
;	O
case	O
seen_m	int
:	O
if	O
(	O
c	int
==	O
' '	O
)	O
{	O
state	int
=	O
definition	int
;	O
printf	function
(	O
"_\bF_\br_\bo_\bm "	pointer
)	O
;	O
}	O
else	O
{	O
state	int
=	O
plain	int
;	O
printf	function
(	O
"From%c"	pointer
,	O
c	int
)	O
;	O
}	O
break	O
;	O
case	O
header_new	int
:	O
space_seen	int
=	O
0	int
;	O
if	O
(	O
c	int
==	O
' '	O
||	O
c	int
==	O
'\t'	O
)	O
{	O
state	int
=	O
definition	int
;	O
putchar	function
(	O
c	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
{	O
state	int
=	O
plain	int
;	O
putchar	function
(	O
c	int
)	O
;	O
break	O
;	O
}	O
case	O
header	int
:	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
{	O
putchar	function
(	O
c	int
)	O
;	O
state	int
=	O
header_new	int
;	O
break	O
;	O
}	O
printf	function
(	O
"_\b%c"	pointer
,	O
c	int
)	O
;	O
if	O
(	O
c	int
==	O
' '	O
)	O
space_seen	int
=	O
1	int
;	O
if	O
(	O
c	int
==	O
':'	O
&&	O
!	O
space_seen	int
)	O
state	int
=	O
definition	int
;	O
break	O
;	O
case	O
definition	int
:	O
if	O
(	O
c	int
==	O
'\n'	O
)	O
{	O
putchar	function
(	O
c	int
)	O
;	O
state	int
=	O
header_new	int
;	O
break	O
;	O
}	O
printf	function
(	O
"%c\b%c"	pointer
,	O
c	int
,	O
c	int
)	O
;	O
break	O
;	O
}	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
