struct	O
dwarf1_debug	struct
{	O
bfd	struct
*	O
abfd	pointer
;	O
asymbol	struct
*	O
*	O
syms	pointer
;	O
struct	O
dwarf1_unit	struct
*	O
lastUnit	pointer
;	O
bfd_byte	char
*	O
debug_section	pointer
;	O
bfd_byte	char
*	O
debug_section_end	pointer
;	O
bfd_byte	char
*	O
line_section	pointer
;	O
bfd_byte	char
*	O
line_section_end	pointer
;	O
bfd_byte	char
*	O
currentDie	pointer
;	O
}	O
;	O
struct	O
dwarf1_unit	struct
{	O
struct	O
dwarf1_unit	struct
*	O
prev	pointer
;	O
char	O
*	O
name	pointer
;	O
unsigned	O
long	O
low_pc	long
;	O
unsigned	O
long	O
high_pc	long
;	O
int	O
has_stmt_list	int
;	O
unsigned	O
long	O
stmt_list_offset	long
;	O
bfd_byte	char
*	O
first_child	pointer
;	O
unsigned	O
long	O
line_count	long
;	O
struct	O
linenumber	struct
*	O
linenumber_table	pointer
;	O
struct	O
dwarf1_func	struct
*	O
func_list	pointer
;	O
}	O
;	O
struct	O
dwarf1_func	struct
{	O
struct	O
dwarf1_func	struct
*	O
prev	pointer
;	O
char	O
*	O
name	pointer
;	O
unsigned	O
long	O
low_pc	long
;	O
unsigned	O
long	O
high_pc	long
;	O
}	O
;	O
struct	O
die_info	struct
{	O
unsigned	O
long	O
length	long
;	O
unsigned	O
long	O
sibling	long
;	O
unsigned	O
long	O
low_pc	long
;	O
unsigned	O
long	O
high_pc	long
;	O
unsigned	O
long	O
stmt_list_offset	long
;	O
char	O
*	O
name	pointer
;	O
int	O
has_stmt_list	int
;	O
unsigned	O
short	O
tag	int
;	O
}	O
;	O
struct	O
linenumber	struct
{	O
unsigned	O
long	O
addr	pointer
;	O
unsigned	O
long	O
linenumber	struct
;	O
}	O
;	O
static	O
struct	O
dwarf1_unit	struct
*	O
alloc_dwarf1_unit	function
(	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
)	O
{	O
bfd_size_type	long
amt	long
=	O
sizeof	O
(	O
struct	O
dwarf1_unit	struct
)	O
;	O
struct	O
dwarf1_unit	struct
*	O
x	long
=	O
(	O
struct	O
dwarf1_unit	struct
*	O
)	O
bfd_zalloc	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
amt	long
)	O
;	O
if	O
(	O
x	long
)	O
{	O
x	long
->	O
prev	pointer
=	O
stash	pointer
->	O
lastUnit	pointer
;	O
stash	pointer
->	O
lastUnit	pointer
=	O
x	long
;	O
}	O
return	O
x	long
;	O
}	O
static	O
struct	O
dwarf1_func	struct
*	O
alloc_dwarf1_func	function
(	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
,	O
struct	O
dwarf1_unit	struct
*	O
aUnit	pointer
)	O
{	O
bfd_size_type	long
amt	long
=	O
sizeof	O
(	O
struct	O
dwarf1_func	struct
)	O
;	O
struct	O
dwarf1_func	struct
*	O
x	long
=	O
(	O
struct	O
dwarf1_func	struct
*	O
)	O
bfd_zalloc	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
amt	long
)	O
;	O
if	O
(	O
x	long
)	O
{	O
x	long
->	O
prev	pointer
=	O
aUnit	pointer
->	O
func_list	pointer
;	O
aUnit	pointer
->	O
func_list	pointer
=	O
x	long
;	O
}	O
return	O
x	long
;	O
}	O
static	O
bfd_boolean	int
parse_die	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
die_info	struct
*	O
aDieInfo	pointer
,	O
bfd_byte	char
*	O
aDiePtr	pointer
,	O
bfd_byte	char
*	O
aDiePtrEnd	pointer
)	O
{	O
bfd_byte	char
*	O
this_die	pointer
=	O
aDiePtr	pointer
;	O
bfd_byte	char
*	O
xptr	pointer
=	O
this_die	pointer
;	O
memset	function
(	O
aDieInfo	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
aDieInfo	pointer
)	O
)	O
;	O
if	O
(	O
xptr	pointer
+	O
4	int
>	O
aDiePtrEnd	pointer
)	O
return	O
FALSE	int
;	O
aDieInfo	pointer
->	O
length	long
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
4	int
;	O
if	O
(	O
aDieInfo	pointer
->	O
length	long
==	O
0	int
||	O
this_die	pointer
+	O
aDieInfo	pointer
->	O
length	long
>	O
aDiePtrEnd	pointer
)	O
return	O
FALSE	int
;	O
aDiePtrEnd	pointer
=	O
this_die	pointer
+	O
aDieInfo	pointer
->	O
length	long
;	O
if	O
(	O
aDieInfo	pointer
->	O
length	long
<	O
6	int
)	O
{	O
aDieInfo	pointer
->	O
tag	int
=	O
TAG_padding	int
;	O
return	O
TRUE	int
;	O
}	O
if	O
(	O
xptr	pointer
+	O
2	int
>	O
aDiePtrEnd	pointer
)	O
return	O
FALSE	int
;	O
aDieInfo	pointer
->	O
tag	int
=	O
bfd_get_16	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
2	int
;	O
while	O
(	O
xptr	pointer
+	O
2	int
<=	O
aDiePtrEnd	pointer
)	O
{	O
unsigned	O
int	O
block_len	int
;	O
unsigned	O
short	O
attr	long
;	O
attr	long
=	O
bfd_get_16	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
2	int
;	O
switch	O
(	O
FORM_FROM_ATTR	O
(	O
attr	long
)	O
)	O
{	O
case	O
FORM_DATA2	int
:	O
xptr	pointer
+=	O
2	int
;	O
break	O
;	O
case	O
FORM_DATA4	int
:	O
case	O
FORM_REF	int
:	O
if	O
(	O
xptr	pointer
+	O
4	int
<=	O
aDiePtrEnd	pointer
)	O
{	O
if	O
(	O
attr	long
==	O
AT_sibling	int
)	O
aDieInfo	pointer
->	O
sibling	long
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
else	O
if	O
(	O
attr	long
==	O
AT_stmt_list	int
)	O
{	O
aDieInfo	pointer
->	O
stmt_list_offset	long
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
aDieInfo	pointer
->	O
has_stmt_list	int
=	O
1	int
;	O
}	O
}	O
xptr	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
FORM_DATA8	int
:	O
xptr	pointer
+=	O
8	int
;	O
break	O
;	O
case	O
FORM_ADDR	int
:	O
if	O
(	O
xptr	pointer
+	O
4	int
<=	O
aDiePtrEnd	pointer
)	O
{	O
if	O
(	O
attr	long
==	O
AT_low_pc	int
)	O
aDieInfo	pointer
->	O
low_pc	long
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
else	O
if	O
(	O
attr	long
==	O
AT_high_pc	int
)	O
aDieInfo	pointer
->	O
high_pc	long
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
}	O
xptr	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
FORM_BLOCK2	int
:	O
if	O
(	O
xptr	pointer
+	O
2	int
<=	O
aDiePtrEnd	pointer
)	O
{	O
block_len	int
=	O
bfd_get_16	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
if	O
(	O
xptr	pointer
+	O
block_len	int
>	O
aDiePtrEnd	pointer
||	O
xptr	pointer
+	O
block_len	int
<	O
xptr	pointer
)	O
return	O
FALSE	int
;	O
xptr	pointer
+=	O
block_len	int
;	O
}	O
xptr	pointer
+=	O
2	int
;	O
break	O
;	O
case	O
FORM_BLOCK4	int
:	O
if	O
(	O
xptr	pointer
+	O
4	int
<=	O
aDiePtrEnd	pointer
)	O
{	O
block_len	int
=	O
bfd_get_32	O
(	O
abfd	pointer
,	O
xptr	pointer
)	O
;	O
if	O
(	O
xptr	pointer
+	O
block_len	int
>	O
aDiePtrEnd	pointer
||	O
xptr	pointer
+	O
block_len	int
<	O
xptr	pointer
)	O
return	O
FALSE	int
;	O
xptr	pointer
+=	O
block_len	int
;	O
}	O
xptr	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
FORM_STRING	int
:	O
if	O
(	O
attr	long
==	O
AT_name	int
)	O
aDieInfo	pointer
->	O
name	pointer
=	O
(	O
char	O
*	O
)	O
xptr	pointer
;	O
xptr	pointer
+=	O
strnlen	function
(	O
(	O
char	O
*	O
)	O
xptr	pointer
,	O
aDiePtrEnd	pointer
-	O
xptr	pointer
)	O
+	O
1	int
;	O
break	O
;	O
}	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
bfd_boolean	int
parse_line_table	function
(	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
,	O
struct	O
dwarf1_unit	struct
*	O
aUnit	pointer
)	O
{	O
bfd_byte	char
*	O
xptr	pointer
;	O
if	O
(	O
stash	pointer
->	O
line_section	pointer
==	O
0	int
)	O
{	O
asection	struct
*	O
msec	pointer
;	O
bfd_size_type	long
size	long
;	O
msec	pointer
=	O
bfd_get_section_by_name	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
".line"	pointer
)	O
;	O
if	O
(	O
!	O
msec	pointer
)	O
return	O
FALSE	int
;	O
size	long
=	O
msec	pointer
->	O
rawsize	long
?	O
msec	pointer
->	O
rawsize	long
:	O
msec	pointer
->	O
size	long
;	O
stash	pointer
->	O
line_section	pointer
=	O
bfd_simple_get_relocated_section_contents	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
msec	pointer
,	O
NULL	O
,	O
stash	pointer
->	O
syms	pointer
)	O
;	O
if	O
(	O
!	O
stash	pointer
->	O
line_section	pointer
)	O
return	O
FALSE	int
;	O
stash	pointer
->	O
line_section_end	pointer
=	O
stash	pointer
->	O
line_section	pointer
+	O
size	long
;	O
}	O
xptr	pointer
=	O
stash	pointer
->	O
line_section	pointer
+	O
aUnit	pointer
->	O
stmt_list_offset	long
;	O
if	O
(	O
xptr	pointer
+	O
8	int
<=	O
stash	pointer
->	O
line_section_end	pointer
)	O
{	O
unsigned	O
long	O
eachLine	long
;	O
bfd_byte	char
*	O
tblend	pointer
;	O
unsigned	O
long	O
base	int
;	O
bfd_size_type	long
amt	long
;	O
tblend	pointer
=	O
bfd_get_32	O
(	O
stash	pointer
->	O
abfd	pointer
,	O
(	O
bfd_byte	char
*	O
)	O
xptr	pointer
)	O
+	O
xptr	pointer
;	O
xptr	pointer
+=	O
4	int
;	O
base	int
=	O
bfd_get_32	O
(	O
stash	pointer
->	O
abfd	pointer
,	O
(	O
bfd_byte	char
*	O
)	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
4	int
;	O
aUnit	pointer
->	O
line_count	long
=	O
(	O
tblend	pointer
-	O
xptr	pointer
)	O
/	O
10	int
;	O
amt	long
=	O
sizeof	O
(	O
struct	O
linenumber	struct
)	O
*	O
aUnit	pointer
->	O
line_count	long
;	O
aUnit	pointer
->	O
linenumber_table	pointer
=	O
(	O
struct	O
linenumber	struct
*	O
)	O
bfd_alloc	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
amt	long
)	O
;	O
if	O
(	O
!	O
aUnit	pointer
->	O
linenumber_table	pointer
)	O
return	O
FALSE	int
;	O
for	O
(	O
eachLine	long
=	O
0	int
;	O
eachLine	long
<	O
aUnit	pointer
->	O
line_count	long
;	O
eachLine	long
++	O
)	O
{	O
if	O
(	O
xptr	pointer
+	O
10	int
>	O
stash	pointer
->	O
line_section_end	pointer
)	O
{	O
aUnit	pointer
->	O
line_count	long
=	O
eachLine	long
;	O
break	O
;	O
}	O
aUnit	pointer
->	O
linenumber_table	pointer
[	O
eachLine	long
]	O
.	O
linenumber	struct
=	O
bfd_get_32	O
(	O
stash	pointer
->	O
abfd	pointer
,	O
(	O
bfd_byte	char
*	O
)	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
4	int
;	O
xptr	pointer
+=	O
2	int
;	O
aUnit	pointer
->	O
linenumber_table	pointer
[	O
eachLine	long
]	O
.	O
addr	pointer
=	O
base	int
+	O
bfd_get_32	O
(	O
stash	pointer
->	O
abfd	pointer
,	O
(	O
bfd_byte	char
*	O
)	O
xptr	pointer
)	O
;	O
xptr	pointer
+=	O
4	int
;	O
}	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
bfd_boolean	int
parse_functions_in_unit	function
(	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
,	O
struct	O
dwarf1_unit	struct
*	O
aUnit	pointer
)	O
{	O
bfd_byte	char
*	O
eachDie	pointer
;	O
if	O
(	O
aUnit	pointer
->	O
first_child	pointer
)	O
for	O
(	O
eachDie	pointer
=	O
aUnit	pointer
->	O
first_child	pointer
;	O
eachDie	pointer
<	O
stash	pointer
->	O
debug_section_end	pointer
;	O
)	O
{	O
struct	O
die_info	struct
eachDieInfo	struct
;	O
if	O
(	O
!	O
parse_die	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
&	O
eachDieInfo	struct
,	O
eachDie	pointer
,	O
stash	pointer
->	O
debug_section_end	pointer
)	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
eachDieInfo	struct
.	O
tag	int
==	O
TAG_global_subroutine	int
||	O
eachDieInfo	struct
.	O
tag	int
==	O
TAG_subroutine	int
||	O
eachDieInfo	struct
.	O
tag	int
==	O
TAG_inlined_subroutine	int
||	O
eachDieInfo	struct
.	O
tag	int
==	O
TAG_entry_point	int
)	O
{	O
struct	O
dwarf1_func	struct
*	O
aFunc	pointer
=	O
alloc_dwarf1_func	function
(	O
stash	pointer
,	O
aUnit	pointer
)	O
;	O
if	O
(	O
!	O
aFunc	pointer
)	O
return	O
FALSE	int
;	O
aFunc	pointer
->	O
name	pointer
=	O
eachDieInfo	struct
.	O
name	pointer
;	O
aFunc	pointer
->	O
low_pc	long
=	O
eachDieInfo	struct
.	O
low_pc	long
;	O
aFunc	pointer
->	O
high_pc	long
=	O
eachDieInfo	struct
.	O
high_pc	long
;	O
}	O
if	O
(	O
eachDieInfo	struct
.	O
sibling	long
)	O
eachDie	pointer
=	O
stash	pointer
->	O
debug_section	pointer
+	O
eachDieInfo	struct
.	O
sibling	long
;	O
else	O
break	O
;	O
}	O
return	O
TRUE	int
;	O
}	O
static	O
bfd_boolean	int
dwarf1_unit_find_nearest_line	function
(	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
,	O
struct	O
dwarf1_unit	struct
*	O
aUnit	pointer
,	O
unsigned	O
long	O
addr	pointer
,	O
const	O
char	O
*	O
*	O
filename_ptr	pointer
,	O
const	O
char	O
*	O
*	O
functionname_ptr	pointer
,	O
unsigned	O
int	O
*	O
linenumber_ptr	pointer
)	O
{	O
int	O
line_p	int
=	O
FALSE	int
;	O
int	O
func_p	int
=	O
FALSE	int
;	O
if	O
(	O
aUnit	pointer
->	O
low_pc	long
<=	O
addr	pointer
&&	O
addr	pointer
<	O
aUnit	pointer
->	O
high_pc	long
)	O
{	O
if	O
(	O
aUnit	pointer
->	O
has_stmt_list	int
)	O
{	O
unsigned	O
long	O
i	pointer
;	O
struct	O
dwarf1_func	struct
*	O
eachFunc	pointer
;	O
if	O
(	O
!	O
aUnit	pointer
->	O
linenumber_table	pointer
)	O
{	O
if	O
(	O
!	O
parse_line_table	function
(	O
stash	pointer
,	O
aUnit	pointer
)	O
)	O
return	O
FALSE	int
;	O
}	O
if	O
(	O
!	O
aUnit	pointer
->	O
func_list	pointer
)	O
{	O
if	O
(	O
!	O
parse_functions_in_unit	function
(	O
stash	pointer
,	O
aUnit	pointer
)	O
)	O
return	O
FALSE	int
;	O
}	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
aUnit	pointer
->	O
line_count	long
;	O
i	pointer
++	O
)	O
{	O
if	O
(	O
aUnit	pointer
->	O
linenumber_table	pointer
[	O
i	pointer
]	O
.	O
addr	pointer
<=	O
addr	pointer
&&	O
addr	pointer
<	O
aUnit	pointer
->	O
linenumber_table	pointer
[	O
i	pointer
+	O
1	int
]	O
.	O
addr	pointer
)	O
{	O
*	O
filename_ptr	pointer
=	O
aUnit	pointer
->	O
name	pointer
;	O
*	O
linenumber_ptr	pointer
=	O
aUnit	pointer
->	O
linenumber_table	pointer
[	O
i	pointer
]	O
.	O
linenumber	struct
;	O
line_p	int
=	O
TRUE	int
;	O
break	O
;	O
}	O
}	O
for	O
(	O
eachFunc	pointer
=	O
aUnit	pointer
->	O
func_list	pointer
;	O
eachFunc	pointer
;	O
eachFunc	pointer
=	O
eachFunc	pointer
->	O
prev	pointer
)	O
{	O
if	O
(	O
eachFunc	pointer
->	O
low_pc	long
<=	O
addr	pointer
&&	O
addr	pointer
<	O
eachFunc	pointer
->	O
high_pc	long
)	O
{	O
*	O
functionname_ptr	pointer
=	O
eachFunc	pointer
->	O
name	pointer
;	O
func_p	int
=	O
TRUE	int
;	O
break	O
;	O
}	O
}	O
}	O
}	O
return	O
line_p	int
||	O
func_p	int
;	O
}	O
bfd_boolean	int
_bfd_dwarf1_find_nearest_line	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
asymbol	struct
*	O
*	O
symbols	pointer
,	O
asection	struct
*	O
section	pointer
,	O
bfd_vma	long
offset	long
,	O
const	O
char	O
*	O
*	O
filename_ptr	pointer
,	O
const	O
char	O
*	O
*	O
functionname_ptr	pointer
,	O
unsigned	O
int	O
*	O
linenumber_ptr	pointer
)	O
{	O
struct	O
dwarf1_debug	struct
*	O
stash	pointer
=	O
elf_tdata	O
(	O
abfd	pointer
)	O
->	O
dwarf1_find_line_info	pointer
;	O
struct	O
dwarf1_unit	struct
*	O
eachUnit	pointer
;	O
unsigned	O
long	O
addr	pointer
=	O
(	O
unsigned	O
long	O
)	O
(	O
offset	long
+	O
section	pointer
->	O
vma	long
)	O
;	O
*	O
filename_ptr	pointer
=	O
NULL	O
;	O
*	O
functionname_ptr	pointer
=	O
NULL	O
;	O
*	O
linenumber_ptr	pointer
=	O
0	int
;	O
if	O
(	O
!	O
stash	pointer
)	O
{	O
asection	struct
*	O
msec	pointer
;	O
bfd_size_type	long
size	long
=	O
sizeof	O
(	O
struct	O
dwarf1_debug	struct
)	O
;	O
stash	pointer
=	O
elf_tdata	O
(	O
abfd	pointer
)	O
->	O
dwarf1_find_line_info	pointer
=	O
(	O
struct	O
dwarf1_debug	struct
*	O
)	O
bfd_zalloc	function
(	O
abfd	pointer
,	O
size	long
)	O
;	O
if	O
(	O
!	O
stash	pointer
)	O
return	O
FALSE	int
;	O
msec	pointer
=	O
bfd_get_section_by_name	function
(	O
abfd	pointer
,	O
".debug"	pointer
)	O
;	O
if	O
(	O
!	O
msec	pointer
)	O
return	O
FALSE	int
;	O
size	long
=	O
msec	pointer
->	O
rawsize	long
?	O
msec	pointer
->	O
rawsize	long
:	O
msec	pointer
->	O
size	long
;	O
stash	pointer
->	O
debug_section	pointer
=	O
bfd_simple_get_relocated_section_contents	function
(	O
abfd	pointer
,	O
msec	pointer
,	O
NULL	O
,	O
symbols	pointer
)	O
;	O
if	O
(	O
!	O
stash	pointer
->	O
debug_section	pointer
)	O
return	O
FALSE	int
;	O
stash	pointer
->	O
debug_section_end	pointer
=	O
stash	pointer
->	O
debug_section	pointer
+	O
size	long
;	O
stash	pointer
->	O
currentDie	pointer
=	O
stash	pointer
->	O
debug_section	pointer
;	O
stash	pointer
->	O
abfd	pointer
=	O
abfd	pointer
;	O
stash	pointer
->	O
syms	pointer
=	O
symbols	pointer
;	O
}	O
if	O
(	O
!	O
stash	pointer
->	O
debug_section	pointer
)	O
return	O
FALSE	int
;	O
for	O
(	O
eachUnit	pointer
=	O
stash	pointer
->	O
lastUnit	pointer
;	O
eachUnit	pointer
;	O
eachUnit	pointer
=	O
eachUnit	pointer
->	O
prev	pointer
)	O
if	O
(	O
eachUnit	pointer
->	O
low_pc	long
<=	O
addr	pointer
&&	O
addr	pointer
<	O
eachUnit	pointer
->	O
high_pc	long
)	O
return	O
dwarf1_unit_find_nearest_line	function
(	O
stash	pointer
,	O
eachUnit	pointer
,	O
addr	pointer
,	O
filename_ptr	pointer
,	O
functionname_ptr	pointer
,	O
linenumber_ptr	pointer
)	O
;	O
while	O
(	O
stash	pointer
->	O
currentDie	pointer
<	O
stash	pointer
->	O
debug_section_end	pointer
)	O
{	O
struct	O
die_info	struct
aDieInfo	pointer
;	O
if	O
(	O
!	O
parse_die	function
(	O
stash	pointer
->	O
abfd	pointer
,	O
&	O
aDieInfo	pointer
,	O
stash	pointer
->	O
currentDie	pointer
,	O
stash	pointer
->	O
debug_section_end	pointer
)	O
)	O
return	O
FALSE	int
;	O
if	O
(	O
aDieInfo	pointer
.	O
tag	int
==	O
TAG_compile_unit	int
)	O
{	O
struct	O
dwarf1_unit	struct
*	O
aUnit	pointer
=	O
alloc_dwarf1_unit	function
(	O
stash	pointer
)	O
;	O
if	O
(	O
!	O
aUnit	pointer
)	O
return	O
FALSE	int
;	O
aUnit	pointer
->	O
name	pointer
=	O
aDieInfo	pointer
.	O
name	pointer
;	O
aUnit	pointer
->	O
low_pc	long
=	O
aDieInfo	pointer
.	O
low_pc	long
;	O
aUnit	pointer
->	O
high_pc	long
=	O
aDieInfo	pointer
.	O
high_pc	long
;	O
aUnit	pointer
->	O
has_stmt_list	int
=	O
aDieInfo	pointer
.	O
has_stmt_list	int
;	O
aUnit	pointer
->	O
stmt_list_offset	long
=	O
aDieInfo	pointer
.	O
stmt_list_offset	long
;	O
if	O
(	O
aDieInfo	pointer
.	O
sibling	long
&&	O
stash	pointer
->	O
currentDie	pointer
+	O
aDieInfo	pointer
.	O
length	long
<	O
stash	pointer
->	O
debug_section_end	pointer
&&	O
stash	pointer
->	O
currentDie	pointer
+	O
aDieInfo	pointer
.	O
length	long
!=	O
stash	pointer
->	O
debug_section	pointer
+	O
aDieInfo	pointer
.	O
sibling	long
)	O
aUnit	pointer
->	O
first_child	pointer
=	O
stash	pointer
->	O
currentDie	pointer
+	O
aDieInfo	pointer
.	O
length	long
;	O
else	O
aUnit	pointer
->	O
first_child	pointer
=	O
0	int
;	O
if	O
(	O
aUnit	pointer
->	O
low_pc	long
<=	O
addr	pointer
&&	O
addr	pointer
<	O
aUnit	pointer
->	O
high_pc	long
)	O
return	O
dwarf1_unit_find_nearest_line	function
(	O
stash	pointer
,	O
aUnit	pointer
,	O
addr	pointer
,	O
filename_ptr	pointer
,	O
functionname_ptr	pointer
,	O
linenumber_ptr	pointer
)	O
;	O
}	O
if	O
(	O
aDieInfo	pointer
.	O
sibling	long
!=	O
0	int
)	O
stash	pointer
->	O
currentDie	pointer
=	O
stash	pointer
->	O
debug_section	pointer
+	O
aDieInfo	pointer
.	O
sibling	long
;	O
else	O
stash	pointer
->	O
currentDie	pointer
+=	O
aDieInfo	pointer
.	O
length	long
;	O
}	O
return	O
FALSE	int
;	O
}	O
