int	O
mu_sid	function
(	O
char	O
*	O
*	O
res	pointer
)	O
{	O
static	O
int	O
init	int
;	O
static	O
unsigned	O
int	O
seqno	int
=	O
0	int
;	O
static	O
char	O
abc	array
[	O
]	O
=	O
SID_ABC	pointer
;	O
struct	O
timeval	struct
t	struct
;	O
struct	O
tm	struct
*	O
tm	struct
;	O
unsigned	O
int	O
n	int
;	O
char	O
sidbuf	array
[	O
9	int
]	O
;	O
char	O
*	O
p	pointer
;	O
if	O
(	O
!	O
res	pointer
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
gettimeofday	function
(	O
&	O
t	struct
,	O
NULL	O
)	O
;	O
if	O
(	O
!	O
init	int
)	O
{	O
seqno	int
=	O
getpid	function
(	O
)	O
+	O
t	struct
.	O
tv_sec	long
+	O
t	struct
.	O
tv_usec	long
;	O
init	int
=	O
1	int
;	O
}	O
n	int
=	O
seqno	int
++	O
%	O
SID_LEN_SQR	O
;	O
tm	struct
=	O
gmtime	function
(	O
&	O
t	struct
.	O
tv_sec	long
)	O
;	O
sidbuf	array
[	O
0	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_year	int
%	O
SID_LEN	O
]	O
;	O
sidbuf	array
[	O
1	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_mon	int
]	O
;	O
sidbuf	array
[	O
2	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_mday	int
]	O
;	O
sidbuf	array
[	O
3	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_hour	int
]	O
;	O
sidbuf	array
[	O
4	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_min	int
%	O
SID_LEN	O
]	O
;	O
sidbuf	array
[	O
5	int
]	O
=	O
abc	array
[	O
tm	struct
->	O
tm_sec	int
%	O
SID_LEN	O
]	O
;	O
sidbuf	array
[	O
6	int
]	O
=	O
abc	array
[	O
n	int
/	O
SID_LEN	O
]	O
;	O
sidbuf	array
[	O
7	int
]	O
=	O
abc	array
[	O
n	int
%	O
SID_LEN	O
]	O
;	O
sidbuf	array
[	O
8	int
]	O
=	O
0	int
;	O
p	pointer
=	O
strdup	function
(	O
sidbuf	array
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
errno	O
;	O
*	O
res	pointer
=	O
p	pointer
;	O
return	O
0	int
;	O
}	O
