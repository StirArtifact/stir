static	O
char	O
*	O
header_charset	pointer
;	O
static	O
void	O
extract_add_message	function
(	O
default_catalog_reader_ty	struct
*	O
this	pointer
,	O
char	O
*	O
msgctxt	pointer
,	O
char	O
*	O
msgid	pointer
,	O
lex_pos_ty	struct
*	O
msgid_pos	pointer
,	O
char	O
*	O
msgid_plural	pointer
,	O
char	O
*	O
msgstr	pointer
,	O
size_t	long
msgstr_len	long
,	O
lex_pos_ty	struct
*	O
msgstr_pos	pointer
,	O
char	O
*	O
prev_msgctxt	pointer
,	O
char	O
*	O
prev_msgid	pointer
,	O
char	O
*	O
prev_msgid_plural	pointer
,	O
bool	bool
force_fuzzy	bool
,	O
bool	bool
obsolete	bool
)	O
{	O
if	O
(	O
exclude	pointer
!=	O
NULL	O
&&	O
message_list_search	function
(	O
exclude	pointer
,	O
msgctxt	pointer
,	O
msgid	pointer
)	O
!=	O
NULL	O
)	O
goto	O
discard	O
;	O
if	O
(	O
msgctxt	pointer
==	O
NULL	O
&&	O
*	O
msgid	pointer
==	O
'\0'	O
&&	O
!	O
xgettext_omit_header	int
)	O
{	O
{	O
const	O
char	O
*	O
charsetstr	pointer
=	O
strstr	function
(	O
msgstr	pointer
,	O
"charset="	pointer
)	O
;	O
if	O
(	O
charsetstr	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
charset	pointer
;	O
charsetstr	pointer
+=	O
strlen	function
(	O
"charset="	pointer
)	O
;	O
len	long
=	O
strcspn	function
(	O
charsetstr	pointer
,	O
" \t\n"	pointer
)	O
;	O
charset	pointer
=	O
XNMALLOC	O
(	O
len	long
+	O
1	int
,	O
char	O
)	O
;	O
memcpy	function
(	O
charset	pointer
,	O
charsetstr	pointer
,	O
len	long
)	O
;	O
charset	pointer
[	O
len	long
]	O
=	O
'\0'	O
;	O
if	O
(	O
header_charset	pointer
!=	O
NULL	O
)	O
free	function
(	O
header_charset	pointer
)	O
;	O
header_charset	pointer
=	O
charset	pointer
;	O
}	O
}	O
discard	O
:	O
if	O
(	O
msgctxt	pointer
!=	O
NULL	O
)	O
free	function
(	O
msgctxt	pointer
)	O
;	O
free	function
(	O
msgid	pointer
)	O
;	O
if	O
(	O
msgid_plural	pointer
!=	O
NULL	O
)	O
free	function
(	O
msgid_plural	pointer
)	O
;	O
free	function
(	O
msgstr	pointer
)	O
;	O
if	O
(	O
prev_msgctxt	pointer
!=	O
NULL	O
)	O
free	function
(	O
prev_msgctxt	pointer
)	O
;	O
if	O
(	O
prev_msgid	pointer
!=	O
NULL	O
)	O
free	function
(	O
prev_msgid	pointer
)	O
;	O
if	O
(	O
prev_msgid_plural	pointer
!=	O
NULL	O
)	O
free	function
(	O
prev_msgid_plural	pointer
)	O
;	O
return	O
;	O
}	O
default_add_message	function
(	O
this	pointer
,	O
msgctxt	pointer
,	O
msgid	pointer
,	O
msgid_pos	pointer
,	O
msgid_plural	pointer
,	O
msgstr	pointer
,	O
msgstr_len	long
,	O
msgstr_pos	pointer
,	O
prev_msgctxt	pointer
,	O
prev_msgid	pointer
,	O
prev_msgid_plural	pointer
,	O
force_fuzzy	bool
,	O
obsolete	bool
)	O
;	O
}	O
static	O
default_catalog_reader_class_ty	struct
extract_methods	struct
=	O
{	O
{	O
sizeof	O
(	O
default_catalog_reader_ty	struct
)	O
,	O
default_constructor	function
,	O
default_destructor	function
,	O
default_parse_brief	function
,	O
default_parse_debrief	function
,	O
default_directive_domain	function
,	O
default_directive_message	function
,	O
default_comment	function
,	O
default_comment_dot	function
,	O
default_comment_filepos	function
,	O
default_comment_special	function
}	O
,	O
default_set_domain	function
,	O
extract_add_message	function
,	O
NULL	O
}	O
;	O
static	O
void	O
extract	function
(	O
FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
real_filename	pointer
,	O
const	O
char	O
*	O
logical_filename	pointer
,	O
catalog_input_format_ty	pointer
input_syntax	pointer
,	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
)	O
{	O
default_catalog_reader_ty	struct
*	O
pop	pointer
;	O
header_charset	pointer
=	O
NULL	O
;	O
pop	pointer
=	O
default_catalog_reader_alloc	function
(	O
&	O
extract_methods	struct
)	O
;	O
pop	pointer
->	O
handle_comments	bool
=	O
true	int
;	O
pop	pointer
->	O
allow_domain_directives	bool
=	O
false	int
;	O
pop	pointer
->	O
allow_duplicates	bool
=	O
false	int
;	O
pop	pointer
->	O
allow_duplicates_if_same_msgstr	bool
=	O
true	int
;	O
pop	pointer
->	O
file_name	pointer
=	O
real_filename	pointer
;	O
pop	pointer
->	O
mdlp	pointer
=	O
NULL	O
;	O
pop	pointer
->	O
mlp	pointer
=	O
mdlp	pointer
->	O
item	pointer
[	O
0	int
]	O
->	O
messages	pointer
;	O
catalog_reader_parse	function
(	O
(	O
abstract_catalog_reader_ty	struct
*	O
)	O
pop	pointer
,	O
fp	pointer
,	O
real_filename	pointer
,	O
logical_filename	pointer
,	O
input_syntax	pointer
)	O
;	O
catalog_reader_free	function
(	O
(	O
abstract_catalog_reader_ty	struct
*	O
)	O
pop	pointer
)	O
;	O
if	O
(	O
header_charset	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
!	O
xgettext_omit_header	int
)	O
{	O
message_ty	struct
*	O
mp	pointer
=	O
message_list_search	function
(	O
mdlp	pointer
->	O
item	pointer
[	O
0	int
]	O
->	O
messages	pointer
,	O
NULL	O
,	O
""	pointer
)	O
;	O
if	O
(	O
mp	pointer
!=	O
NULL	O
&&	O
!	O
mp	pointer
->	O
obsolete	bool
)	O
{	O
const	O
char	O
*	O
header	pointer
=	O
mp	pointer
->	O
msgstr	pointer
;	O
if	O
(	O
header	pointer
!=	O
NULL	O
)	O
{	O
const	O
char	O
*	O
charsetstr	pointer
=	O
strstr	function
(	O
header	pointer
,	O
"charset="	pointer
)	O
;	O
if	O
(	O
charsetstr	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
len	long
,	O
len1	long
,	O
len2	long
,	O
len3	long
;	O
char	O
*	O
new_header	pointer
;	O
charsetstr	pointer
+=	O
strlen	function
(	O
"charset="	pointer
)	O
;	O
len	long
=	O
strcspn	function
(	O
charsetstr	pointer
,	O
" \t\n"	pointer
)	O
;	O
len1	long
=	O
charsetstr	pointer
-	O
header	pointer
;	O
len2	long
=	O
strlen	function
(	O
header_charset	pointer
)	O
;	O
len3	long
=	O
(	O
header	pointer
+	O
strlen	function
(	O
header	pointer
)	O
)	O
-	O
(	O
charsetstr	pointer
+	O
len	long
)	O
;	O
new_header	pointer
=	O
XNMALLOC	O
(	O
len1	long
+	O
len2	long
+	O
len3	long
+	O
1	int
,	O
char	O
)	O
;	O
memcpy	function
(	O
new_header	pointer
,	O
header	pointer
,	O
len1	long
)	O
;	O
memcpy	function
(	O
new_header	pointer
+	O
len1	long
,	O
header_charset	pointer
,	O
len2	long
)	O
;	O
memcpy	function
(	O
new_header	pointer
+	O
len1	long
+	O
len2	long
,	O
charsetstr	pointer
+	O
len	long
,	O
len3	long
+	O
1	int
)	O
;	O
mp	pointer
->	O
msgstr	pointer
=	O
new_header	pointer
;	O
mp	pointer
->	O
msgstr_len	long
=	O
len1	long
+	O
len2	long
+	O
len3	long
+	O
1	int
;	O
}	O
}	O
}	O
}	O
free	function
(	O
header_charset	pointer
)	O
;	O
}	O
}	O
void	O
extract_po	function
(	O
FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
real_filename	pointer
,	O
const	O
char	O
*	O
logical_filename	pointer
,	O
flag_context_list_table_ty	struct
*	O
flag_table	pointer
,	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
)	O
{	O
extract	function
(	O
fp	pointer
,	O
real_filename	pointer
,	O
logical_filename	pointer
,	O
&	O
input_format_po	struct
,	O
mdlp	pointer
)	O
;	O
}	O
void	O
extract_properties	function
(	O
FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
real_filename	pointer
,	O
const	O
char	O
*	O
logical_filename	pointer
,	O
flag_context_list_table_ty	struct
*	O
flag_table	pointer
,	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
)	O
{	O
extract	function
(	O
fp	pointer
,	O
real_filename	pointer
,	O
logical_filename	pointer
,	O
&	O
input_format_properties	struct
,	O
mdlp	pointer
)	O
;	O
}	O
void	O
extract_stringtable	function
(	O
FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
real_filename	pointer
,	O
const	O
char	O
*	O
logical_filename	pointer
,	O
flag_context_list_table_ty	struct
*	O
flag_table	pointer
,	O
msgdomain_list_ty	struct
*	O
mdlp	pointer
)	O
{	O
extract	function
(	O
fp	pointer
,	O
real_filename	pointer
,	O
logical_filename	pointer
,	O
&	O
input_format_stringtable	struct
,	O
mdlp	pointer
)	O
;	O
}	O
