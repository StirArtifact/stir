typedef	O
int8_t	char
flex_int8_t	char
;	O
typedef	O
uint8_t	char
flex_uint8_t	char
;	O
typedef	O
int16_t	short
flex_int16_t	short
;	O
typedef	O
uint16_t	short
flex_uint16_t	short
;	O
typedef	O
int32_t	int
flex_int32_t	int
;	O
typedef	O
uint32_t	int
flex_uint32_t	int
;	O
typedef	O
struct	O
yy_buffer_state	struct
*	O
YY_BUFFER_STATE	pointer
;	O
typedef	O
size_t	long
yy_size_t	long
;	O
extern	O
yy_size_t	long
yyleng	long
;	O
extern	O
FILE	struct
*	O
yyin	pointer
,	O
*	O
yyout	pointer
;	O
struct	O
yy_buffer_state	struct
{	O
FILE	struct
*	O
yy_input_file	pointer
;	O
char	O
*	O
yy_ch_buf	pointer
;	O
char	O
*	O
yy_buf_pos	pointer
;	O
yy_size_t	long
yy_buf_size	long
;	O
yy_size_t	long
yy_n_chars	long
;	O
int	O
yy_is_our_buffer	int
;	O
int	O
yy_is_interactive	int
;	O
int	O
yy_at_bol	int
;	O
int	O
yy_bs_lineno	int
;	O
int	O
yy_bs_column	int
;	O
int	O
yy_fill_buffer	int
;	O
int	O
yy_buffer_status	int
;	O
}	O
;	O
static	O
size_t	long
yy_buffer_stack_top	long
=	O
0	int
;	O
static	O
size_t	long
yy_buffer_stack_max	long
=	O
0	int
;	O
static	O
YY_BUFFER_STATE	pointer
*	O
yy_buffer_stack	pointer
=	O
0	int
;	O
static	O
char	O
yy_hold_char	char
;	O
static	O
yy_size_t	long
yy_n_chars	long
;	O
yy_size_t	long
yyleng	long
;	O
static	O
char	O
*	O
yy_c_buf_p	pointer
=	O
(	O
char	O
*	O
)	O
0	int
;	O
static	O
int	O
yy_init	int
=	O
0	int
;	O
static	O
int	O
yy_start	int
=	O
0	int
;	O
static	O
int	O
yy_did_buffer_switch_on_eof	int
;	O
void	O
yyrestart	function
(	O
FILE	struct
*	O
input_file	pointer
)	O
;	O
void	O
yy_switch_to_buffer	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
yy_create_buffer	function
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
;	O
void	O
yy_delete_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
;	O
void	O
yy_flush_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
;	O
void	O
yypush_buffer_state	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
;	O
void	O
yypop_buffer_state	function
(	O
void	O
)	O
;	O
static	O
void	O
yyensure_buffer_stack	function
(	O
void	O
)	O
;	O
static	O
void	O
yy_load_buffer_state	function
(	O
void	O
)	O
;	O
static	O
void	O
yy_init_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_buffer	function
(	O
char	O
*	O
base	int
,	O
yy_size_t	long
size	int
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_string	function
(	O
yyconst	O
char	O
*	O
yy_str	pointer
)	O
;	O
YY_BUFFER_STATE	pointer
yy_scan_bytes	function
(	O
yyconst	O
char	O
*	O
bytes	pointer
,	O
yy_size_t	long
len	long
)	O
;	O
void	O
*	O
yyalloc	function
(	O
yy_size_t	long
)	O
;	O
void	O
*	O
yyrealloc	function
(	O
void	O
*	O
,	O
yy_size_t	long
)	O
;	O
void	O
yyfree	function
(	O
void	O
*	O
)	O
;	O
typedef	O
unsigned	O
char	O
YY_CHAR	char
;	O
FILE	struct
*	O
yyin	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
,	O
*	O
yyout	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
typedef	O
int	O
yy_state_type	int
;	O
extern	O
int	O
yylineno	int
;	O
int	O
yylineno	int
=	O
1	int
;	O
extern	O
char	O
*	O
yytext	pointer
;	O
static	O
yy_state_type	int
yy_get_previous_state	function
(	O
void	O
)	O
;	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
(	O
yy_state_type	int
current_state	int
)	O
;	O
static	O
int	O
yy_get_next_buffer	function
(	O
void	O
)	O
;	O
static	O
void	O
yy_fatal_error	function
(	O
yyconst	O
char	O
msg	array
[	O
]	O
)	O
;	O
struct	O
yy_trans_info	struct
{	O
flex_int32_t	int
yy_verify	int
;	O
flex_int32_t	int
yy_nxt	int
;	O
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_acclist	array
[	O
132	int
]	O
=	O
{	O
0	int
,	O
30	int
,	O
28	int
,	O
29	int
,	O
6	int
,	O
28	int
,	O
29	int
,	O
27	int
,	O
29	int
,	O
3	int
,	O
28	int
,	O
29	int
,	O
4	int
,	O
28	int
,	O
29	int
,	O
5	int
,	O
28	int
,	O
29	int
,	O
6	int
,	O
28	int
,	O
29	int
,	O
3	int
,	O
28	int
,	O
29	int
,	O
18	int
,	O
28	int
,	O
29	int
,	O
23	int
,	O
28	int
,	O
29	int
,	O
28	int
,	O
29	int
,	O
22	int
,	O
28	int
,	O
29	int
,	O
17	int
,	O
18	int
,	O
28	int
,	O
29	int
,	O
29	int
,	O
24	int
,	O
29	int
,	O
29	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
15	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
14	int
,	O
27	int
,	O
29	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
11	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
11	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
12	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
12	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
12	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
6	int
,	O
3	int
,	O
2	int
,	O
5	int
,	O
6	int
,	O
3	int
,	O
3	int
,	O
18	int
,	O
23	int
,	O
19	int
,	O
17	int
,	O
18	int
,	O
24	int
,	O
26	int
,	O
25	int
,	O
13	int
,	O
15	int
,	O
10	int
,	O
13	int
,	O
13	int
,	O
11	int
,	O
13	int
,	O
12	int
,	O
13	int
,	O
12	int
,	O
13	int
,	O
12	int
,	O
13	int
,	O
3	int
,	O
21	int
,	O
20	int
,	O
10	int
,	O
13	int
,	O
9	int
,	O
13	int
,	O
7	int
,	O
12	int
,	O
13	int
,	O
8	int
,	O
12	int
,	O
13	int
,	O
3	int
,	O
9	int
,	O
13	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
1	int
,	O
2	int
,	O
1	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_accept	array
[	O
87	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
4	int
,	O
7	int
,	O
9	int
,	O
12	int
,	O
15	int
,	O
18	int
,	O
21	int
,	O
24	int
,	O
27	int
,	O
30	int
,	O
32	int
,	O
35	int
,	O
39	int
,	O
40	int
,	O
42	int
,	O
43	int
,	O
47	int
,	O
51	int
,	O
54	int
,	O
57	int
,	O
62	int
,	O
67	int
,	O
72	int
,	O
77	int
,	O
82	int
,	O
83	int
,	O
84	int
,	O
85	int
,	O
86	int
,	O
87	int
,	O
87	int
,	O
88	int
,	O
89	int
,	O
90	int
,	O
91	int
,	O
91	int
,	O
92	int
,	O
92	int
,	O
94	int
,	O
94	int
,	O
95	int
,	O
95	int
,	O
96	int
,	O
97	int
,	O
98	int
,	O
99	int
,	O
101	int
,	O
102	int
,	O
104	int
,	O
106	int
,	O
108	int
,	O
110	int
,	O
110	int
,	O
110	int
,	O
111	int
,	O
112	int
,	O
113	int
,	O
115	int
,	O
117	int
,	O
120	int
,	O
123	int
,	O
123	int
,	O
124	int
,	O
126	int
,	O
126	int
,	O
127	int
,	O
127	int
,	O
128	int
,	O
128	int
,	O
129	int
,	O
131	int
,	O
131	int
,	O
132	int
,	O
132	int
}	O
;	O
static	O
yyconst	O
flex_int32_t	int
yy_ec	array
[	O
256	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
4	int
,	O
5	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
6	int
,	O
7	int
,	O
1	int
,	O
1	int
,	O
8	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
10	int
,	O
10	int
,	O
1	int
,	O
11	int
,	O
1	int
,	O
6	int
,	O
1	int
,	O
12	int
,	O
1	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
13	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
15	int
,	O
14	int
,	O
14	int
,	O
6	int
,	O
16	int
,	O
6	int
,	O
1	int
,	O
14	int
,	O
1	int
,	O
17	int
,	O
13	int
,	O
13	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
14	int
,	O
14	int
,	O
21	int
,	O
14	int
,	O
14	int
,	O
22	int
,	O
14	int
,	O
23	int
,	O
24	int
,	O
25	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
14	int
,	O
15	int
,	O
14	int
,	O
14	int
,	O
6	int
,	O
1	int
,	O
6	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
}	O
;	O
static	O
yyconst	O
flex_int32_t	int
yy_meta	array
[	O
26	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
2	int
,	O
1	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
1	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
,	O
4	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_base	array
[	O
99	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
24	int
,	O
29	int
,	O
0	int
,	O
52	int
,	O
54	int
,	O
56	int
,	O
58	int
,	O
74	int
,	O
0	int
,	O
175	int
,	O
263	int
,	O
172	int
,	O
263	int
,	O
168	int
,	O
263	int
,	O
0	int
,	O
61	int
,	O
98	int
,	O
0	int
,	O
168	int
,	O
98	int
,	O
263	int
,	O
120	int
,	O
99	int
,	O
263	int
,	O
166	int
,	O
0	int
,	O
165	int
,	O
263	int
,	O
263	int
,	O
56	int
,	O
96	int
,	O
136	int
,	O
152	int
,	O
90	int
,	O
164	int
,	O
162	int
,	O
263	int
,	O
0	int
,	O
106	int
,	O
107	int
,	O
116	int
,	O
109	int
,	O
0	int
,	O
161	int
,	O
112	int
,	O
263	int
,	O
159	int
,	O
172	int
,	O
118	int
,	O
263	int
,	O
158	int
,	O
263	int
,	O
263	int
,	O
0	int
,	O
158	int
,	O
19	int
,	O
181	int
,	O
134	int
,	O
139	int
,	O
138	int
,	O
49	int
,	O
111	int
,	O
135	int
,	O
123	int
,	O
263	int
,	O
263	int
,	O
115	int
,	O
194	int
,	O
135	int
,	O
134	int
,	O
128	int
,	O
128	int
,	O
0	int
,	O
131	int
,	O
137	int
,	O
147	int
,	O
142	int
,	O
132	int
,	O
124	int
,	O
263	int
,	O
114	int
,	O
263	int
,	O
263	int
,	O
214	int
,	O
218	int
,	O
69	int
,	O
222	int
,	O
226	int
,	O
230	int
,	O
234	int
,	O
238	int
,	O
242	int
,	O
246	int
,	O
250	int
,	O
254	int
,	O
258	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_def	array
[	O
99	int
]	O
=	O
{	O
0	int
,	O
85	int
,	O
1	int
,	O
85	int
,	O
3	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
85	int
,	O
9	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
87	int
,	O
85	int
,	O
88	int
,	O
85	int
,	O
87	int
,	O
89	int
,	O
85	int
,	O
90	int
,	O
85	int
,	O
91	int
,	O
92	int
,	O
85	int
,	O
93	int
,	O
94	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
94	int
,	O
94	int
,	O
95	int
,	O
95	int
,	O
35	int
,	O
85	int
,	O
87	int
,	O
85	int
,	O
88	int
,	O
85	int
,	O
85	int
,	O
87	int
,	O
87	int
,	O
89	int
,	O
85	int
,	O
90	int
,	O
85	int
,	O
96	int
,	O
91	int
,	O
92	int
,	O
85	int
,	O
93	int
,	O
85	int
,	O
85	int
,	O
94	int
,	O
85	int
,	O
94	int
,	O
94	int
,	O
94	int
,	O
35	int
,	O
35	int
,	O
35	int
,	O
85	int
,	O
85	int
,	O
87	int
,	O
85	int
,	O
85	int
,	O
94	int
,	O
94	int
,	O
35	int
,	O
35	int
,	O
85	int
,	O
87	int
,	O
70	int
,	O
85	int
,	O
87	int
,	O
85	int
,	O
97	int
,	O
98	int
,	O
97	int
,	O
85	int
,	O
98	int
,	O
85	int
,	O
0	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_nxt	int
[	O
289	int
]	O
=	O
{	O
0	int
,	O
12	int
,	O
13	int
,	O
14	int
,	O
12	int
,	O
15	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
12	int
,	O
16	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
12	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
18	int
,	O
69	int
,	O
69	int
,	O
19	int
,	O
20	int
,	O
21	int
,	O
14	int
,	O
22	int
,	O
20	int
,	O
12	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
23	int
,	O
20	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
20	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
24	int
,	O
14	int
,	O
26	int
,	O
14	int
,	O
26	int
,	O
14	int
,	O
26	int
,	O
14	int
,	O
26	int
,	O
41	int
,	O
58	int
,	O
58	int
,	O
42	int
,	O
72	int
,	O
27	int
,	O
61	int
,	O
27	int
,	O
59	int
,	O
27	int
,	O
40	int
,	O
27	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
31	int
,	O
28	int
,	O
31	int
,	O
28	int
,	O
32	int
,	O
33	int
,	O
33	int
,	O
31	int
,	O
28	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
28	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
34	int
,	O
35	int
,	O
36	int
,	O
43	int
,	O
39	int
,	O
48	int
,	O
52	int
,	O
60	int
,	O
60	int
,	O
60	int
,	O
63	int
,	O
41	int
,	O
64	int
,	O
61	int
,	O
42	int
,	O
39	int
,	O
64	int
,	O
49	int
,	O
53	int
,	O
48	int
,	O
84	int
,	O
43	int
,	O
39	int
,	O
44	int
,	O
45	int
,	O
52	int
,	O
69	int
,	O
69	int
,	O
45	int
,	O
39	int
,	O
82	int
,	O
49	int
,	O
65	int
,	O
66	int
,	O
39	int
,	O
45	int
,	O
65	int
,	O
53	int
,	O
84	int
,	O
45	int
,	O
56	int
,	O
44	int
,	O
79	int
,	O
39	int
,	O
56	int
,	O
60	int
,	O
60	int
,	O
60	int
,	O
82	int
,	O
74	int
,	O
77	int
,	O
56	int
,	O
80	int
,	O
78	int
,	O
76	int
,	O
56	int
,	O
56	int
,	O
61	int
,	O
61	int
,	O
73	int
,	O
56	int
,	O
71	int
,	O
61	int
,	O
57	int
,	O
55	int
,	O
68	int
,	O
46	int
,	O
56	int
,	O
39	int
,	O
37	int
,	O
57	int
,	O
56	int
,	O
55	int
,	O
46	int
,	O
39	int
,	O
62	int
,	O
45	int
,	O
37	int
,	O
85	int
,	O
85	int
,	O
45	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
45	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
45	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
85	int
,	O
85	int
,	O
70	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
75	int
,	O
75	int
,	O
75	int
,	O
85	int
,	O
85	int
,	O
75	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
75	int
,	O
75	int
,	O
75	int
,	O
75	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
38	int
,	O
45	int
,	O
85	int
,	O
85	int
,	O
45	int
,	O
47	int
,	O
47	int
,	O
85	int
,	O
47	int
,	O
50	int
,	O
85	int
,	O
85	int
,	O
50	int
,	O
51	int
,	O
51	int
,	O
85	int
,	O
51	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
54	int
,	O
56	int
,	O
85	int
,	O
85	int
,	O
56	int
,	O
61	int
,	O
85	int
,	O
85	int
,	O
61	int
,	O
67	int
,	O
67	int
,	O
67	int
,	O
67	int
,	O
81	int
,	O
81	int
,	O
81	int
,	O
81	int
,	O
83	int
,	O
83	int
,	O
83	int
,	O
83	int
,	O
11	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
}	O
;	O
static	O
yyconst	O
flex_int16_t	short
yy_chk	array
[	O
289	int
]	O
=	O
{	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
58	int
,	O
58	int
,	O
2	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
3	int
,	O
5	int
,	O
5	int
,	O
6	int
,	O
6	int
,	O
7	int
,	O
7	int
,	O
8	int
,	O
8	int
,	O
18	int
,	O
32	int
,	O
32	int
,	O
18	int
,	O
63	int
,	O
5	int
,	O
63	int
,	O
6	int
,	O
32	int
,	O
7	int
,	O
88	int
,	O
8	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
9	int
,	O
19	int
,	O
19	int
,	O
22	int
,	O
25	int
,	O
33	int
,	O
33	int
,	O
33	int
,	O
36	int
,	O
41	int
,	O
42	int
,	O
36	int
,	O
41	int
,	O
44	int
,	O
64	int
,	O
22	int
,	O
25	int
,	O
47	int
,	O
83	int
,	O
43	int
,	O
43	int
,	O
19	int
,	O
24	int
,	O
51	int
,	O
69	int
,	O
69	int
,	O
24	int
,	O
66	int
,	O
81	int
,	O
47	int
,	O
42	int
,	O
44	int
,	O
74	int
,	O
24	int
,	O
64	int
,	O
51	int
,	O
80	int
,	O
24	int
,	O
34	int
,	O
43	int
,	O
77	int
,	O
77	int
,	O
34	int
,	O
60	int
,	O
60	int
,	O
60	int
,	O
79	int
,	O
66	int
,	O
74	int
,	O
34	int
,	O
78	int
,	O
76	int
,	O
73	int
,	O
34	int
,	O
35	int
,	O
72	int
,	O
71	int
,	O
65	int
,	O
35	int
,	O
62	int
,	O
61	int
,	O
57	int
,	O
53	int
,	O
49	int
,	O
46	int
,	O
35	int
,	O
38	int
,	O
37	int
,	O
29	int
,	O
35	int
,	O
27	int
,	O
21	int
,	O
15	int
,	O
35	int
,	O
50	int
,	O
13	int
,	O
11	int
,	O
0	int
,	O
50	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
50	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
50	int
,	O
59	int
,	O
59	int
,	O
59	int
,	O
0	int
,	O
0	int
,	O
59	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
59	int
,	O
59	int
,	O
59	int
,	O
59	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
0	int
,	O
0	int
,	O
70	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
70	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
86	int
,	O
87	int
,	O
87	int
,	O
87	int
,	O
87	int
,	O
89	int
,	O
0	int
,	O
0	int
,	O
89	int
,	O
90	int
,	O
90	int
,	O
0	int
,	O
90	int
,	O
91	int
,	O
0	int
,	O
0	int
,	O
91	int
,	O
92	int
,	O
92	int
,	O
0	int
,	O
92	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
93	int
,	O
94	int
,	O
0	int
,	O
0	int
,	O
94	int
,	O
95	int
,	O
0	int
,	O
0	int
,	O
95	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
96	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
97	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
98	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
,	O
85	int
}	O
;	O
extern	O
int	O
yy_flex_debug	int
;	O
int	O
yy_flex_debug	int
=	O
0	int
;	O
static	O
yy_state_type	int
*	O
yy_state_buf	pointer
=	O
0	int
,	O
*	O
yy_state_ptr	pointer
=	O
0	int
;	O
static	O
char	O
*	O
yy_full_match	pointer
;	O
static	O
int	O
yy_lp	int
;	O
char	O
*	O
yytext	pointer
;	O
struct	O
context	struct
{	O
struct	O
context	struct
*	O
parent	pointer
;	O
struct	O
locus	struct
locus	struct
;	O
struct	O
point	struct
point	struct
;	O
YY_BUFFER_STATE	pointer
buf	pointer
;	O
instream_t	pointer
input	pointer
;	O
}	O
;	O
static	O
struct	O
context	struct
*	O
context_tos	pointer
;	O
void	O
advance_line	function
(	O
void	O
)	O
{	O
++	O
context_tos	pointer
->	O
point	struct
.	O
line	pointer
;	O
context_tos	pointer
->	O
point	struct
.	O
col	int
=	O
0	int
;	O
}	O
void	O
string_begin	function
(	O
void	O
)	O
;	O
void	O
string_add	function
(	O
const	O
char	O
*	O
s	pointer
,	O
int	O
l	long
)	O
;	O
void	O
string_addc	function
(	O
int	O
c	int
)	O
;	O
char	O
*	O
string_end	function
(	O
void	O
)	O
;	O
int	O
unescape	function
(	O
int	O
c	int
)	O
;	O
int	O
interactive	function
(	O
void	O
)	O
{	O
return	O
context_tos	pointer
&&	O
instream_interactive	function
(	O
context_tos	pointer
->	O
input	pointer
)	O
;	O
}	O
static	O
struct	O
context	struct
*	O
input_context_lookup	function
(	O
instream_t	pointer
istr	pointer
)	O
{	O
struct	O
context	struct
*	O
cp	pointer
;	O
for	O
(	O
cp	pointer
=	O
context_tos	pointer
;	O
cp	pointer
;	O
cp	pointer
=	O
cp	pointer
->	O
parent	pointer
)	O
if	O
(	O
instream_eq	function
(	O
cp	pointer
->	O
input	pointer
,	O
istr	pointer
)	O
)	O
break	O
;	O
return	O
cp	pointer
;	O
}	O
int	O
input_context_push	function
(	O
instream_t	pointer
input	pointer
)	O
{	O
struct	O
context	struct
*	O
cp	pointer
;	O
cp	pointer
=	O
input_context_lookup	function
(	O
input	pointer
)	O
;	O
if	O
(	O
cp	pointer
)	O
{	O
terror	function
(	O
_	O
(	O
"recursive sourcing"	pointer
)	O
)	O
;	O
if	O
(	O
cp	pointer
->	O
parent	pointer
)	O
lerror	function
(	O
&	O
cp	pointer
->	O
locus	struct
,	O
_	O
(	O
"%s already sourced here"	pointer
)	O
,	O
instream_name	function
(	O
input	pointer
)	O
)	O
;	O
return	O
1	int
;	O
}	O
yy_switch_to_buffer	function
(	O
yy_create_buffer	function
(	O
NULL	O
,	O
YY_BUF_SIZE	int
)	O
)	O
;	O
cp	pointer
=	O
ecalloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
cp	pointer
)	O
)	O
;	O
cp	pointer
->	O
locus	struct
=	O
yylloc	struct
;	O
cp	pointer
->	O
point	struct
.	O
file	pointer
=	O
estrdup	function
(	O
instream_name	function
(	O
input	pointer
)	O
)	O
;	O
cp	pointer
->	O
point	struct
.	O
line	pointer
=	O
1	int
;	O
cp	pointer
->	O
point	struct
.	O
col	int
=	O
0	int
;	O
cp	pointer
->	O
input	pointer
=	O
input	pointer
;	O
cp	pointer
->	O
buf	pointer
=	O
YY_CURRENT_BUFFER	O
;	O
cp	pointer
->	O
parent	pointer
=	O
context_tos	pointer
;	O
context_tos	pointer
=	O
cp	pointer
;	O
return	O
0	int
;	O
}	O
void	O
lex_trace	function
(	O
int	O
n	int
)	O
{	O
yy_flex_debug	int
=	O
n	int
;	O
}	O
int	O
input_context_pop	function
(	O
void	O
)	O
{	O
struct	O
context	struct
*	O
cp	pointer
;	O
if	O
(	O
!	O
context_tos	pointer
)	O
return	O
1	int
;	O
instream_close	function
(	O
context_tos	pointer
->	O
input	pointer
)	O
;	O
free	function
(	O
context_tos	pointer
->	O
point	struct
.	O
file	pointer
)	O
;	O
memset	function
(	O
&	O
yylloc	struct
,	O
0	int
,	O
sizeof	O
(	O
yylloc	struct
)	O
)	O
;	O
cp	pointer
=	O
context_tos	pointer
->	O
parent	pointer
;	O
free	function
(	O
context_tos	pointer
)	O
;	O
context_tos	pointer
=	O
cp	pointer
;	O
if	O
(	O
!	O
cp	pointer
)	O
return	O
1	int
;	O
yylloc	struct
=	O
cp	pointer
->	O
locus	struct
;	O
yy_delete_buffer	function
(	O
YY_CURRENT_BUFFER	O
)	O
;	O
yy_switch_to_buffer	function
(	O
cp	pointer
->	O
buf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
t_num	function
(	O
int	O
base	int
)	O
{	O
long	O
n	int
;	O
errno	O
=	O
0	int
;	O
n	int
=	O
strtol	function
(	O
yytext	pointer
,	O
NULL	O
,	O
base	int
)	O
;	O
if	O
(	O
errno	O
)	O
{	O
lerror	function
(	O
&	O
yylloc	struct
,	O
"%s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
T_BOGUS	int
;	O
}	O
if	O
(	O
n	int
<	O
INT_MIN	O
||	O
n	int
>	O
INT_MAX	O
)	O
{	O
lerror	function
(	O
&	O
yylloc	struct
,	O
"value out of range"	pointer
)	O
;	O
return	O
T_BOGUS	int
;	O
}	O
yylval	union
.	O
num	int
=	O
n	int
;	O
return	O
T_NUM	int
;	O
}	O
static	O
int	O
yy_init_globals	function
(	O
void	O
)	O
;	O
int	O
yylex_destroy	function
(	O
void	O
)	O
;	O
int	O
yyget_debug	function
(	O
void	O
)	O
;	O
void	O
yyset_debug	function
(	O
int	O
debug_flag	int
)	O
;	O
YY_EXTRA_TYPE	O
yyget_extra	function
(	O
void	O
)	O
;	O
void	O
yyset_extra	function
(	O
YY_EXTRA_TYPE	O
user_defined	pointer
)	O
;	O
FILE	struct
*	O
yyget_in	function
(	O
void	O
)	O
;	O
void	O
yyset_in	function
(	O
FILE	struct
*	O
in_str	pointer
)	O
;	O
FILE	struct
*	O
yyget_out	function
(	O
void	O
)	O
;	O
void	O
yyset_out	function
(	O
FILE	struct
*	O
out_str	pointer
)	O
;	O
yy_size_t	long
yyget_leng	function
(	O
void	O
)	O
;	O
char	O
*	O
yyget_text	function
(	O
void	O
)	O
;	O
int	O
yyget_lineno	function
(	O
void	O
)	O
;	O
void	O
yyset_lineno	function
(	O
int	O
line_number	int
)	O
;	O
extern	O
int	O
yywrap	function
(	O
void	O
)	O
;	O
extern	O
int	O
yylex	function
(	O
void	O
)	O
;	O
YY_DECL	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
,	O
*	O
yy_bp	pointer
;	O
register	O
int	O
yy_act	int
;	O
if	O
(	O
!	O
(	O
yy_init	int
)	O
)	O
{	O
(	O
yy_init	int
)	O
=	O
1	int
;	O
if	O
(	O
!	O
(	O
yy_state_buf	pointer
)	O
)	O
(	O
yy_state_buf	pointer
)	O
=	O
(	O
yy_state_type	int
*	O
)	O
yyalloc	function
(	O
YY_STATE_BUF_SIZE	O
)	O
;	O
if	O
(	O
!	O
(	O
yy_state_buf	pointer
)	O
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yylex()"	pointer
)	O
;	O
if	O
(	O
!	O
(	O
yy_start	int
)	O
)	O
(	O
yy_start	int
)	O
=	O
1	int
;	O
if	O
(	O
!	O
yyin	pointer
)	O
yyin	pointer
=	O
stdin	pointer
;	O
if	O
(	O
!	O
yyout	pointer
)	O
yyout	pointer
=	O
stdout	pointer
;	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
yy_create_buffer	function
(	O
yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
}	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
while	O
(	O
1	int
)	O
{	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
yy_bp	pointer
=	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
(	O
yy_start	int
)	O
;	O
yy_current_state	int
+=	O
YY_AT_BOL	O
(	O
)	O
;	O
(	O
yy_state_ptr	pointer
)	O
=	O
(	O
yy_state_buf	pointer
)	O
;	O
*	O
(	O
yy_state_ptr	pointer
)	O
++	O
=	O
yy_current_state	int
;	O
yy_match	O
:	O
do	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
;	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
86	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
*	O
(	O
yy_state_ptr	pointer
)	O
++	O
=	O
yy_current_state	int
;	O
++	O
yy_cp	pointer
;	O
}	O
while	O
(	O
yy_base	array
[	O
yy_current_state	int
]	O
!=	O
263	int
)	O
;	O
yy_find_action	O
:	O
yy_current_state	int
=	O
*	O
--	O
(	O
yy_state_ptr	pointer
)	O
;	O
(	O
yy_lp	int
)	O
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
find_rule	O
:	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
(	O
yy_lp	int
)	O
&&	O
(	O
yy_lp	int
)	O
<	O
yy_accept	array
[	O
yy_current_state	int
+	O
1	int
]	O
)	O
{	O
yy_act	int
=	O
yy_acclist	array
[	O
(	O
yy_lp	int
)	O
]	O
;	O
{	O
(	O
yy_full_match	pointer
)	O
=	O
yy_cp	pointer
;	O
break	O
;	O
}	O
}	O
--	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
*	O
--	O
(	O
yy_state_ptr	pointer
)	O
;	O
(	O
yy_lp	int
)	O
=	O
yy_accept	array
[	O
yy_current_state	int
]	O
;	O
}	O
YY_DO_BEFORE_ACTION	O
;	O
do_action	O
:	O
switch	O
(	O
yy_act	int
)	O
{	O
case	O
1	int
:	O
YY_RULE_SETUP	O
{	O
char	O
*	O
p	pointer
;	O
char	O
*	O
file	pointer
=	O
NULL	O
;	O
int	O
line	pointer
,	O
len	long
;	O
for	O
(	O
p	pointer
=	O
strchr	function
(	O
yytext	pointer
,	O
'#'	O
)	O
+	O
1	int
;	O
*	O
p	pointer
==	O
' '	O
||	O
*	O
p	pointer
==	O
'\t'	O
;	O
p	pointer
++	O
)	O
;	O
p	pointer
+=	O
4	int
;	O
for	O
(	O
;	O
*	O
p	pointer
==	O
' '	O
||	O
*	O
p	pointer
==	O
'\t'	O
;	O
p	pointer
++	O
)	O
;	O
line	pointer
=	O
strtol	function
(	O
p	pointer
,	O
&	O
p	pointer
,	O
10	int
)	O
;	O
for	O
(	O
;	O
*	O
p	pointer
==	O
' '	O
||	O
*	O
p	pointer
==	O
'\t'	O
;	O
p	pointer
++	O
)	O
;	O
if	O
(	O
*	O
p	pointer
==	O
'"'	O
)	O
{	O
p	pointer
++	O
;	O
len	long
=	O
strcspn	function
(	O
p	pointer
,	O
"\""	pointer
)	O
;	O
if	O
(	O
p	pointer
[	O
len	long
]	O
==	O
0	int
)	O
{	O
yyerror	function
(	O
_	O
(	O
"invalid #line statement"	pointer
)	O
)	O
;	O
REJECT	O
;	O
}	O
file	pointer
=	O
emalloc	function
(	O
len	long
+	O
1	int
)	O
;	O
memcpy	function
(	O
file	pointer
,	O
p	pointer
,	O
len	long
)	O
;	O
file	pointer
[	O
len	long
]	O
=	O
0	int
;	O
for	O
(	O
p	pointer
+=	O
len	long
+	O
1	int
;	O
*	O
p	pointer
==	O
' '	O
||	O
*	O
p	pointer
==	O
'\t'	O
;	O
p	pointer
++	O
)	O
;	O
}	O
if	O
(	O
*	O
p	pointer
!=	O
'\n'	O
)	O
{	O
yyerror	function
(	O
_	O
(	O
"invalid #line statement"	pointer
)	O
)	O
;	O
free	function
(	O
file	pointer
)	O
;	O
REJECT	O
;	O
}	O
if	O
(	O
file	pointer
)	O
context_tos	pointer
->	O
point	struct
.	O
file	pointer
=	O
file	pointer
;	O
context_tos	pointer
->	O
point	struct
.	O
line	pointer
=	O
line	pointer
;	O
context_tos	pointer
->	O
point	struct
.	O
col	int
=	O
0	int
;	O
}	O
YY_BREAK	O
case	O
2	int
:	O
YY_RULE_SETUP	O
advance_line	function
(	O
)	O
;	O
YY_BREAK	O
case	O
3	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
4	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
CMD	int
)	O
;	O
return	O
command_lookup	function
(	O
"help"	pointer
,	O
&	O
yylloc	struct
,	O
&	O
yylval	union
.	O
cmd	pointer
)	O
;	O
}	O
YY_BREAK	O
case	O
5	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
CMD	int
)	O
;	O
return	O
command_lookup	function
(	O
yytext	pointer
,	O
&	O
yylloc	struct
,	O
&	O
yylval	union
.	O
cmd	pointer
)	O
;	O
}	O
YY_BREAK	O
case	O
6	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
7	int
:	O
YY_RULE_SETUP	O
{	O
return	O
T_OFF	int
;	O
}	O
YY_BREAK	O
case	O
8	int
:	O
YY_RULE_SETUP	O
{	O
return	O
T_PAD	int
;	O
}	O
YY_BREAK	O
case	O
9	int
:	O
YY_RULE_SETUP	O
{	O
return	O
t_num	function
(	O
8	int
)	O
;	O
}	O
;	O
YY_BREAK	O
case	O
10	int
:	O
YY_RULE_SETUP	O
{	O
return	O
t_num	function
(	O
16	int
)	O
;	O
}	O
;	O
YY_BREAK	O
case	O
11	int
:	O
YY_RULE_SETUP	O
{	O
return	O
t_num	function
(	O
10	int
)	O
;	O
}	O
;	O
YY_BREAK	O
case	O
12	int
:	O
YY_RULE_SETUP	O
{	O
if	O
(	O
(	O
yylval	union
.	O
type	int
=	O
datadef_lookup	function
(	O
yytext	pointer
)	O
)	O
)	O
return	O
T_TYPE	int
;	O
else	O
{	O
yylval	union
.	O
string	pointer
=	O
estrdup	function
(	O
yytext	pointer
)	O
;	O
return	O
T_IDENT	int
;	O
}	O
}	O
YY_BREAK	O
case	O
13	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
string	pointer
=	O
estrdup	function
(	O
yytext	pointer
)	O
;	O
return	O
T_WORD	int
;	O
}	O
YY_BREAK	O
case	O
14	int
:	O
YY_RULE_SETUP	O
{	O
advance_line	function
(	O
)	O
;	O
}	O
YY_BREAK	O
case	O
15	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
16	int
:	O
YY_RULE_SETUP	O
return	O
yytext	pointer
[	O
0	int
]	O
;	O
YY_BREAK	O
case	O
17	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
string	pointer
=	O
estrdup	function
(	O
yytext	pointer
)	O
;	O
return	O
T_IDENT	int
;	O
}	O
YY_BREAK	O
case	O
18	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
string	pointer
=	O
estrdup	function
(	O
yytext	pointer
)	O
;	O
return	O
T_WORD	int
;	O
}	O
YY_BREAK	O
case	O
19	int
:	O
YY_RULE_SETUP	O
{	O
yylval	union
.	O
string	pointer
=	O
emalloc	function
(	O
yyleng	long
-	O
1	int
)	O
;	O
memcpy	function
(	O
yylval	union
.	O
string	pointer
,	O
yytext	pointer
+	O
1	int
,	O
yyleng	long
-	O
2	int
)	O
;	O
yylval	union
.	O
string	pointer
[	O
yyleng	long
-	O
2	int
]	O
=	O
0	int
;	O
return	O
T_WORD	int
;	O
}	O
YY_BREAK	O
case	O
20	int
:	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
yy_cp	pointer
-=	O
1	int
;	O
YY_DO_BEFORE_ACTION	O
;	O
YY_RULE_SETUP	O
{	O
string_begin	function
(	O
)	O
;	O
string_add	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	long
-	O
2	int
)	O
;	O
BEGIN	O
(	O
MLSTR	int
)	O
;	O
}	O
YY_BREAK	O
case	O
21	int
:	O
YY_RULE_SETUP	O
{	O
string_begin	function
(	O
)	O
;	O
string_add	function
(	O
yytext	pointer
+	O
1	int
,	O
yyleng	long
-	O
3	int
)	O
;	O
string_addc	function
(	O
unescape	function
(	O
yytext	pointer
[	O
yyleng	long
-	O
1	int
]	O
)	O
)	O
;	O
BEGIN	O
(	O
STR	int
)	O
;	O
}	O
YY_BREAK	O
case	O
22	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
return	O
';'	O
;	O
}	O
YY_BREAK	O
case	O
23	int
:	O
YY_RULE_SETUP	O
;	O
YY_BREAK	O
case	O
24	int
:	O
YY_RULE_SETUP	O
{	O
if	O
(	O
yyleng	long
>	O
1	int
)	O
string_add	function
(	O
yytext	pointer
,	O
yyleng	long
-	O
1	int
)	O
;	O
yylval	union
.	O
string	pointer
=	O
string_end	function
(	O
)	O
;	O
BEGIN	O
(	O
CMD	int
)	O
;	O
return	O
T_WORD	int
;	O
}	O
YY_BREAK	O
case	O
25	int
:	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
yy_cp	pointer
-=	O
1	int
;	O
YY_DO_BEFORE_ACTION	O
;	O
YY_RULE_SETUP	O
{	O
string_add	function
(	O
yytext	pointer
,	O
yyleng	long
-	O
1	int
)	O
;	O
}	O
YY_BREAK	O
case	O
26	int
:	O
YY_RULE_SETUP	O
{	O
string_add	function
(	O
yytext	pointer
,	O
yyleng	long
-	O
2	int
)	O
;	O
string_addc	function
(	O
unescape	function
(	O
yytext	pointer
[	O
yyleng	long
-	O
1	int
]	O
)	O
)	O
;	O
}	O
YY_BREAK	O
case	O
27	int
:	O
YY_RULE_SETUP	O
{	O
BEGIN	O
(	O
INITIAL	int
)	O
;	O
advance_line	function
(	O
)	O
;	O
return	O
'\n'	O
;	O
}	O
YY_BREAK	O
case	O
28	int
:	O
YY_RULE_SETUP	O
return	O
yytext	pointer
[	O
0	int
]	O
;	O
YY_BREAK	O
case	O
29	int
:	O
YY_RULE_SETUP	O
YY_FATAL_ERROR	O
(	O
"flex scanner jammed"	pointer
)	O
;	O
YY_BREAK	O
case	O
YY_STATE_EOF	O
(	O
INITIAL	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
CMD	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
STR	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
MLSTR	int
)	O
:	O
case	O
YY_STATE_EOF	O
(	O
DEF	int
)	O
:	O
yyterminate	O
(	O
)	O
;	O
case	O
YY_END_OF_BUFFER	int
:	O
{	O
int	O
yy_amount_of_matched_text	int
=	O
(	O
int	O
)	O
(	O
yy_cp	pointer
-	O
(	O
yytext_ptr	O
)	O
)	O
-	O
1	int
;	O
*	O
yy_cp	pointer
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_RESTORE_YY_MORE_OFFSET	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
==	O
YY_BUFFER_NEW	int
)	O
{	O
(	O
yy_n_chars	long
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_input_file	pointer
=	O
yyin	pointer
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NORMAL	int
;	O
}	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
<=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
)	O
{	O
yy_state_type	int
yy_next_state	int
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_next_state	int
=	O
yy_try_NUL_trans	function
(	O
yy_current_state	int
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
if	O
(	O
yy_next_state	int
)	O
{	O
yy_cp	pointer
=	O
++	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_current_state	int
=	O
yy_next_state	int
;	O
goto	O
yy_match	O
;	O
}	O
else	O
{	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
goto	O
yy_find_action	O
;	O
}	O
}	O
else	O
switch	O
(	O
yy_get_next_buffer	function
(	O
)	O
)	O
{	O
case	O
EOB_ACT_END_OF_FILE	int
:	O
{	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
0	int
;	O
if	O
(	O
yywrap	function
(	O
)	O
)	O
{	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
yy_act	int
=	O
YY_STATE_EOF	O
(	O
YY_START	O
)	O
;	O
goto	O
do_action	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
)	O
YY_NEW_FILE	O
;	O
}	O
break	O
;	O
}	O
case	O
EOB_ACT_CONTINUE_SCAN	int
:	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yytext_ptr	O
)	O
+	O
yy_amount_of_matched_text	int
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_match	O
;	O
case	O
EOB_ACT_LAST_MATCH	int
:	O
(	O
yy_c_buf_p	pointer
)	O
=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
;	O
yy_current_state	int
=	O
yy_get_previous_state	function
(	O
)	O
;	O
yy_cp	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
yy_bp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
goto	O
yy_find_action	O
;	O
}	O
break	O
;	O
}	O
default	O
:	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--no action found"	pointer
)	O
;	O
}	O
}	O
}	O
static	O
int	O
yy_get_next_buffer	function
(	O
void	O
)	O
{	O
register	O
char	O
*	O
dest	pointer
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
;	O
register	O
char	O
*	O
source	pointer
=	O
(	O
yytext_ptr	O
)	O
;	O
register	O
int	O
number_to_move	int
,	O
i	int
;	O
int	O
ret_val	int
;	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
>	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
+	O
1	int
]	O
)	O
YY_FATAL_ERROR	O
(	O
"fatal flex scanner internal error--end of buffer missed"	pointer
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_fill_buffer	int
==	O
0	int
)	O
{	O
if	O
(	O
(	O
yy_c_buf_p	pointer
)	O
-	O
(	O
yytext_ptr	O
)	O
-	O
YY_MORE_ADJ	int
==	O
1	int
)	O
{	O
return	O
EOB_ACT_END_OF_FILE	int
;	O
}	O
else	O
{	O
return	O
EOB_ACT_LAST_MATCH	int
;	O
}	O
}	O
number_to_move	int
=	O
(	O
int	O
)	O
(	O
(	O
yy_c_buf_p	pointer
)	O
-	O
(	O
yytext_ptr	O
)	O
)	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
number_to_move	int
;	O
++	O
i	int
)	O
*	O
(	O
dest	pointer
++	O
)	O
=	O
*	O
(	O
source	pointer
++	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
==	O
YY_BUFFER_EOF_PENDING	int
)	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
=	O
0	int
;	O
else	O
{	O
yy_size_t	long
num_to_read	long
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_size	long
-	O
number_to_move	int
-	O
1	int
;	O
while	O
(	O
num_to_read	long
<=	O
0	int
)	O
{	O
YY_FATAL_ERROR	O
(	O
"input buffer overflow, can't enlarge buffer because scanner uses REJECT"	pointer
)	O
;	O
}	O
if	O
(	O
num_to_read	long
>	O
YY_READ_BUF_SIZE	int
)	O
num_to_read	long
=	O
YY_READ_BUF_SIZE	int
;	O
YY_INPUT	O
(	O
(	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
number_to_move	int
]	O
)	O
,	O
(	O
yy_n_chars	long
)	O
,	O
num_to_read	long
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
if	O
(	O
(	O
yy_n_chars	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
number_to_move	int
==	O
YY_MORE_ADJ	int
)	O
{	O
ret_val	int
=	O
EOB_ACT_END_OF_FILE	int
;	O
yyrestart	function
(	O
yyin	pointer
)	O
;	O
}	O
else	O
{	O
ret_val	int
=	O
EOB_ACT_LAST_MATCH	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buffer_status	int
=	O
YY_BUFFER_EOF_PENDING	int
;	O
}	O
}	O
else	O
ret_val	int
=	O
EOB_ACT_CONTINUE_SCAN	int
;	O
if	O
(	O
(	O
yy_size_t	long
)	O
(	O
(	O
yy_n_chars	long
)	O
+	O
number_to_move	int
)	O
>	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_size	long
)	O
{	O
yy_size_t	long
new_size	long
=	O
(	O
yy_n_chars	long
)	O
+	O
number_to_move	int
+	O
(	O
(	O
yy_n_chars	long
)	O
>>	O
1	int
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
yyrealloc	function
(	O
(	O
void	O
*	O
)	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
,	O
new_size	long
)	O
;	O
if	O
(	O
!	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_get_next_buffer()"	pointer
)	O
;	O
}	O
(	O
yy_n_chars	long
)	O
+=	O
number_to_move	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
(	O
yy_n_chars	long
)	O
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
(	O
yytext_ptr	O
)	O
=	O
&	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
return	O
ret_val	int
;	O
}	O
static	O
yy_state_type	int
yy_get_previous_state	function
(	O
void	O
)	O
{	O
register	O
yy_state_type	int
yy_current_state	int
;	O
register	O
char	O
*	O
yy_cp	pointer
;	O
yy_current_state	int
=	O
(	O
yy_start	int
)	O
;	O
yy_current_state	int
+=	O
YY_AT_BOL	O
(	O
)	O
;	O
(	O
yy_state_ptr	pointer
)	O
=	O
(	O
yy_state_buf	pointer
)	O
;	O
*	O
(	O
yy_state_ptr	pointer
)	O
++	O
=	O
yy_current_state	int
;	O
for	O
(	O
yy_cp	pointer
=	O
(	O
yytext_ptr	O
)	O
+	O
YY_MORE_ADJ	int
;	O
yy_cp	pointer
<	O
(	O
yy_c_buf_p	pointer
)	O
;	O
++	O
yy_cp	pointer
)	O
{	O
register	O
YY_CHAR	char
yy_c	char
=	O
(	O
*	O
yy_cp	pointer
?	O
yy_ec	array
[	O
YY_SC_TO_UI	O
(	O
*	O
yy_cp	pointer
)	O
]	O
:	O
1	int
)	O
;	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
86	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
*	O
(	O
yy_state_ptr	pointer
)	O
++	O
=	O
yy_current_state	int
;	O
}	O
return	O
yy_current_state	int
;	O
}	O
static	O
yy_state_type	int
yy_try_NUL_trans	function
(	O
yy_state_type	int
yy_current_state	int
)	O
{	O
register	O
int	O
yy_is_jam	int
;	O
register	O
YY_CHAR	char
yy_c	char
=	O
1	int
;	O
while	O
(	O
yy_chk	array
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
yy_c	char
]	O
!=	O
yy_current_state	int
)	O
{	O
yy_current_state	int
=	O
(	O
int	O
)	O
yy_def	array
[	O
yy_current_state	int
]	O
;	O
if	O
(	O
yy_current_state	int
>=	O
86	int
)	O
yy_c	char
=	O
yy_meta	array
[	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
}	O
yy_current_state	int
=	O
yy_nxt	int
[	O
yy_base	array
[	O
yy_current_state	int
]	O
+	O
(	O
unsigned	O
int	O
)	O
yy_c	char
]	O
;	O
yy_is_jam	int
=	O
(	O
yy_current_state	int
==	O
85	int
)	O
;	O
if	O
(	O
!	O
yy_is_jam	int
)	O
*	O
(	O
yy_state_ptr	pointer
)	O
++	O
=	O
yy_current_state	int
;	O
return	O
yy_is_jam	int
?	O
0	int
:	O
yy_current_state	int
;	O
}	O
void	O
yyrestart	function
(	O
FILE	struct
*	O
input_file	pointer
)	O
{	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
yy_create_buffer	function
(	O
yyin	pointer
,	O
YY_BUF_SIZE	int
)	O
;	O
}	O
yy_init_buffer	function
(	O
YY_CURRENT_BUFFER	O
,	O
input_file	pointer
)	O
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
void	O
yy_switch_to_buffer	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
{	O
yyensure_buffer_stack	function
(	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
==	O
new_buffer	pointer
)	O
return	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
*	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
new_buffer	pointer
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
static	O
void	O
yy_load_buffer_state	function
(	O
void	O
)	O
{	O
(	O
yy_n_chars	long
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
;	O
(	O
yytext_ptr	O
)	O
=	O
(	O
yy_c_buf_p	pointer
)	O
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
;	O
yyin	pointer
=	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_input_file	pointer
;	O
(	O
yy_hold_char	char
)	O
=	O
*	O
(	O
yy_c_buf_p	pointer
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
yy_create_buffer	function
(	O
FILE	struct
*	O
file	pointer
,	O
int	O
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
yyalloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	long
=	O
size	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
(	O
char	O
*	O
)	O
yyalloc	function
(	O
b	pointer
->	O
yy_buf_size	long
+	O
2	int
)	O
;	O
if	O
(	O
!	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_create_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
yy_init_buffer	function
(	O
b	pointer
,	O
file	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
void	O
yy_delete_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
if	O
(	O
b	pointer
==	O
YY_CURRENT_BUFFER	O
)	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
0	int
;	O
if	O
(	O
b	pointer
->	O
yy_is_our_buffer	int
)	O
yyfree	function
(	O
(	O
void	O
*	O
)	O
b	pointer
->	O
yy_ch_buf	pointer
)	O
;	O
yyfree	function
(	O
(	O
void	O
*	O
)	O
b	pointer
)	O
;	O
}	O
static	O
void	O
yy_init_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
,	O
FILE	struct
*	O
file	pointer
)	O
{	O
int	O
oerrno	int
=	O
errno	O
;	O
yy_flush_buffer	function
(	O
b	pointer
)	O
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
file	pointer
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
1	int
;	O
if	O
(	O
b	pointer
!=	O
YY_CURRENT_BUFFER	O
)	O
{	O
b	pointer
->	O
yy_bs_lineno	int
=	O
1	int
;	O
b	pointer
->	O
yy_bs_column	int
=	O
0	int
;	O
}	O
b	pointer
->	O
yy_is_interactive	int
=	O
file	pointer
?	O
(	O
isatty	function
(	O
fileno	function
(	O
file	pointer
)	O
)	O
>	O
0	int
)	O
:	O
0	int
;	O
errno	O
=	O
oerrno	int
;	O
}	O
void	O
yy_flush_buffer	function
(	O
YY_BUFFER_STATE	pointer
b	pointer
)	O
{	O
if	O
(	O
!	O
b	pointer
)	O
return	O
;	O
b	pointer
->	O
yy_n_chars	long
=	O
0	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
&	O
b	pointer
->	O
yy_ch_buf	pointer
[	O
0	int
]	O
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
if	O
(	O
b	pointer
==	O
YY_CURRENT_BUFFER	O
)	O
yy_load_buffer_state	function
(	O
)	O
;	O
}	O
void	O
yypush_buffer_state	function
(	O
YY_BUFFER_STATE	pointer
new_buffer	pointer
)	O
{	O
if	O
(	O
new_buffer	pointer
==	O
NULL	O
)	O
return	O
;	O
yyensure_buffer_stack	function
(	O
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
*	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
yy_hold_char	char
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_buf_pos	pointer
=	O
(	O
yy_c_buf_p	pointer
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
->	O
yy_n_chars	long
=	O
(	O
yy_n_chars	long
)	O
;	O
}	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
(	O
yy_buffer_stack_top	long
)	O
++	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
new_buffer	pointer
;	O
yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
void	O
yypop_buffer_state	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
YY_CURRENT_BUFFER	O
)	O
return	O
;	O
yy_delete_buffer	function
(	O
YY_CURRENT_BUFFER	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
NULL	O
;	O
if	O
(	O
(	O
yy_buffer_stack_top	long
)	O
>	O
0	int
)	O
--	O
(	O
yy_buffer_stack_top	long
)	O
;	O
if	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
yy_load_buffer_state	function
(	O
)	O
;	O
(	O
yy_did_buffer_switch_on_eof	int
)	O
=	O
1	int
;	O
}	O
}	O
static	O
void	O
yyensure_buffer_stack	function
(	O
void	O
)	O
{	O
yy_size_t	long
num_to_alloc	long
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
{	O
num_to_alloc	long
=	O
1	int
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
(	O
struct	O
yy_buffer_state	struct
*	O
*	O
)	O
yyalloc	function
(	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yyensure_buffer_stack()"	pointer
)	O
;	O
memset	function
(	O
(	O
yy_buffer_stack	pointer
)	O
,	O
0	int
,	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
num_to_alloc	long
;	O
(	O
yy_buffer_stack_top	long
)	O
=	O
0	int
;	O
return	O
;	O
}	O
if	O
(	O
(	O
yy_buffer_stack_top	long
)	O
>=	O
(	O
(	O
yy_buffer_stack_max	long
)	O
)	O
-	O
1	int
)	O
{	O
int	O
grow_size	int
=	O
8	int
;	O
num_to_alloc	long
=	O
(	O
yy_buffer_stack_max	long
)	O
+	O
grow_size	int
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
(	O
struct	O
yy_buffer_state	struct
*	O
*	O
)	O
yyrealloc	function
(	O
(	O
yy_buffer_stack	pointer
)	O
,	O
num_to_alloc	long
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
if	O
(	O
!	O
(	O
yy_buffer_stack	pointer
)	O
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yyensure_buffer_stack()"	pointer
)	O
;	O
memset	function
(	O
(	O
yy_buffer_stack	pointer
)	O
+	O
(	O
yy_buffer_stack_max	long
)	O
,	O
0	int
,	O
grow_size	int
*	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
*	O
)	O
)	O
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
num_to_alloc	long
;	O
}	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_buffer	function
(	O
char	O
*	O
base	int
,	O
yy_size_t	long
size	int
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
if	O
(	O
size	int
<	O
2	int
||	O
base	int
[	O
size	int
-	O
2	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
||	O
base	int
[	O
size	int
-	O
1	int
]	O
!=	O
YY_END_OF_BUFFER_CHAR	int
)	O
return	O
0	int
;	O
b	pointer
=	O
(	O
YY_BUFFER_STATE	pointer
)	O
yyalloc	function
(	O
sizeof	O
(	O
struct	O
yy_buffer_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_scan_buffer()"	pointer
)	O
;	O
b	pointer
->	O
yy_buf_size	long
=	O
size	int
-	O
2	int
;	O
b	pointer
->	O
yy_buf_pos	pointer
=	O
b	pointer
->	O
yy_ch_buf	pointer
=	O
base	int
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_input_file	pointer
=	O
0	int
;	O
b	pointer
->	O
yy_n_chars	long
=	O
b	pointer
->	O
yy_buf_size	long
;	O
b	pointer
->	O
yy_is_interactive	int
=	O
0	int
;	O
b	pointer
->	O
yy_at_bol	int
=	O
1	int
;	O
b	pointer
->	O
yy_fill_buffer	int
=	O
0	int
;	O
b	pointer
->	O
yy_buffer_status	int
=	O
YY_BUFFER_NEW	int
;	O
yy_switch_to_buffer	function
(	O
b	pointer
)	O
;	O
return	O
b	pointer
;	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_string	function
(	O
yyconst	O
char	O
*	O
yystr	pointer
)	O
{	O
return	O
yy_scan_bytes	function
(	O
yystr	pointer
,	O
strlen	function
(	O
yystr	pointer
)	O
)	O
;	O
}	O
YY_BUFFER_STATE	pointer
yy_scan_bytes	function
(	O
yyconst	O
char	O
*	O
yybytes	pointer
,	O
yy_size_t	long
_yybytes_len	long
)	O
{	O
YY_BUFFER_STATE	pointer
b	pointer
;	O
char	O
*	O
buf	pointer
;	O
yy_size_t	long
n	int
;	O
int	O
i	int
;	O
n	int
=	O
_yybytes_len	long
+	O
2	int
;	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
yyalloc	function
(	O
n	int
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
YY_FATAL_ERROR	O
(	O
"out of dynamic memory in yy_scan_bytes()"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_yybytes_len	long
;	O
++	O
i	int
)	O
buf	pointer
[	O
i	int
]	O
=	O
yybytes	pointer
[	O
i	int
]	O
;	O
buf	pointer
[	O
_yybytes_len	long
]	O
=	O
buf	pointer
[	O
_yybytes_len	long
+	O
1	int
]	O
=	O
YY_END_OF_BUFFER_CHAR	int
;	O
b	pointer
=	O
yy_scan_buffer	function
(	O
buf	pointer
,	O
n	int
)	O
;	O
if	O
(	O
!	O
b	pointer
)	O
YY_FATAL_ERROR	O
(	O
"bad buffer in yy_scan_bytes()"	pointer
)	O
;	O
b	pointer
->	O
yy_is_our_buffer	int
=	O
1	int
;	O
return	O
b	pointer
;	O
}	O
static	O
void	O
yy_fatal_error	function
(	O
yyconst	O
char	O
*	O
msg	array
)	O
{	O
(	O
void	O
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s\n"	pointer
,	O
msg	array
)	O
;	O
exit	function
(	O
YY_EXIT_FAILURE	int
)	O
;	O
}	O
int	O
yyget_lineno	function
(	O
void	O
)	O
{	O
return	O
yylineno	int
;	O
}	O
FILE	struct
*	O
yyget_in	function
(	O
void	O
)	O
{	O
return	O
yyin	pointer
;	O
}	O
FILE	struct
*	O
yyget_out	function
(	O
void	O
)	O
{	O
return	O
yyout	pointer
;	O
}	O
yy_size_t	long
yyget_leng	function
(	O
void	O
)	O
{	O
return	O
yyleng	long
;	O
}	O
char	O
*	O
yyget_text	function
(	O
void	O
)	O
{	O
return	O
yytext	pointer
;	O
}	O
void	O
yyset_lineno	function
(	O
int	O
line_number	int
)	O
{	O
yylineno	int
=	O
line_number	int
;	O
}	O
void	O
yyset_in	function
(	O
FILE	struct
*	O
in_str	pointer
)	O
{	O
yyin	pointer
=	O
in_str	pointer
;	O
}	O
void	O
yyset_out	function
(	O
FILE	struct
*	O
out_str	pointer
)	O
{	O
yyout	pointer
=	O
out_str	pointer
;	O
}	O
int	O
yyget_debug	function
(	O
void	O
)	O
{	O
return	O
yy_flex_debug	int
;	O
}	O
void	O
yyset_debug	function
(	O
int	O
bdebug	int
)	O
{	O
yy_flex_debug	int
=	O
bdebug	int
;	O
}	O
static	O
int	O
yy_init_globals	function
(	O
void	O
)	O
{	O
(	O
yy_buffer_stack	pointer
)	O
=	O
0	int
;	O
(	O
yy_buffer_stack_top	long
)	O
=	O
0	int
;	O
(	O
yy_buffer_stack_max	long
)	O
=	O
0	int
;	O
(	O
yy_c_buf_p	pointer
)	O
=	O
(	O
char	O
*	O
)	O
0	int
;	O
(	O
yy_init	int
)	O
=	O
0	int
;	O
(	O
yy_start	int
)	O
=	O
0	int
;	O
(	O
yy_state_buf	pointer
)	O
=	O
0	int
;	O
(	O
yy_state_ptr	pointer
)	O
=	O
0	int
;	O
(	O
yy_full_match	pointer
)	O
=	O
0	int
;	O
(	O
yy_lp	int
)	O
=	O
0	int
;	O
yyin	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
yyout	pointer
=	O
(	O
FILE	struct
*	O
)	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
yylex_destroy	function
(	O
void	O
)	O
{	O
while	O
(	O
YY_CURRENT_BUFFER	O
)	O
{	O
yy_delete_buffer	function
(	O
YY_CURRENT_BUFFER	O
)	O
;	O
YY_CURRENT_BUFFER_LVALUE	O
=	O
NULL	O
;	O
yypop_buffer_state	function
(	O
)	O
;	O
}	O
yyfree	function
(	O
(	O
yy_buffer_stack	pointer
)	O
)	O
;	O
(	O
yy_buffer_stack	pointer
)	O
=	O
NULL	O
;	O
yyfree	function
(	O
(	O
yy_state_buf	pointer
)	O
)	O
;	O
(	O
yy_state_buf	pointer
)	O
=	O
NULL	O
;	O
yy_init_globals	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
void	O
*	O
yyalloc	function
(	O
yy_size_t	long
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
malloc	function
(	O
size	int
)	O
;	O
}	O
void	O
*	O
yyrealloc	function
(	O
void	O
*	O
ptr	pointer
,	O
yy_size_t	long
size	int
)	O
{	O
return	O
(	O
void	O
*	O
)	O
realloc	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
,	O
size	int
)	O
;	O
}	O
void	O
yyfree	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
)	O
;	O
}	O
int	O
yywrap	function
(	O
void	O
)	O
{	O
return	O
input_context_pop	function
(	O
)	O
;	O
}	O
void	O
begin_def	function
(	O
void	O
)	O
{	O
BEGIN	O
(	O
DEF	int
)	O
;	O
}	O
void	O
end_def	function
(	O
void	O
)	O
{	O
BEGIN	O
(	O
CMD	int
)	O
;	O
}	O
void	O
print_prompt_at_bol	function
(	O
void	O
)	O
{	O
if	O
(	O
YY_AT_BOL	O
(	O
)	O
)	O
{	O
char	O
*	O
s	pointer
=	O
make_prompt	function
(	O
)	O
;	O
fputs	function
(	O
s	pointer
,	O
stdout	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
}	O
}	O
struct	O
strseg	struct
{	O
struct	O
strseg	struct
*	O
next	pointer
;	O
int	O
len	long
;	O
char	O
ptr	pointer
[	O
1	int
]	O
;	O
}	O
;	O
static	O
struct	O
strseg	struct
*	O
strseg_head	pointer
,	O
*	O
strseg_tail	pointer
;	O
void	O
string_begin	function
(	O
void	O
)	O
{	O
strseg_head	pointer
=	O
strseg_tail	pointer
=	O
NULL	O
;	O
}	O
void	O
strseg_attach	function
(	O
struct	O
strseg	struct
*	O
seg	pointer
)	O
{	O
seg	pointer
->	O
next	pointer
=	O
NULL	O
;	O
if	O
(	O
strseg_tail	pointer
)	O
strseg_tail	pointer
->	O
next	pointer
=	O
seg	pointer
;	O
else	O
strseg_head	pointer
=	O
seg	pointer
;	O
strseg_tail	pointer
=	O
seg	pointer
;	O
}	O
void	O
string_add	function
(	O
const	O
char	O
*	O
s	pointer
,	O
int	O
l	long
)	O
{	O
struct	O
strseg	struct
*	O
seg	pointer
=	O
emalloc	function
(	O
sizeof	O
(	O
*	O
seg	pointer
)	O
+	O
l	long
)	O
;	O
memcpy	function
(	O
seg	pointer
->	O
ptr	pointer
,	O
s	pointer
,	O
l	long
)	O
;	O
seg	pointer
->	O
len	long
=	O
l	long
;	O
strseg_attach	function
(	O
seg	pointer
)	O
;	O
}	O
void	O
string_addc	function
(	O
int	O
c	int
)	O
{	O
struct	O
strseg	struct
*	O
seg	pointer
=	O
emalloc	function
(	O
sizeof	O
(	O
*	O
seg	pointer
)	O
)	O
;	O
seg	pointer
->	O
ptr	pointer
[	O
0	int
]	O
=	O
c	int
;	O
seg	pointer
->	O
len	long
=	O
1	int
;	O
strseg_attach	function
(	O
seg	pointer
)	O
;	O
}	O
char	O
*	O
string_end	function
(	O
void	O
)	O
{	O
int	O
len	long
=	O
1	int
;	O
struct	O
strseg	struct
*	O
seg	pointer
;	O
char	O
*	O
ret	pointer
,	O
*	O
p	pointer
;	O
for	O
(	O
seg	pointer
=	O
strseg_head	pointer
;	O
seg	pointer
;	O
seg	pointer
=	O
seg	pointer
->	O
next	pointer
)	O
len	long
+=	O
seg	pointer
->	O
len	long
;	O
ret	pointer
=	O
emalloc	function
(	O
len	long
)	O
;	O
p	pointer
=	O
ret	pointer
;	O
for	O
(	O
seg	pointer
=	O
strseg_head	pointer
;	O
seg	pointer
;	O
)	O
{	O
struct	O
strseg	struct
*	O
next	pointer
=	O
seg	pointer
->	O
next	pointer
;	O
memcpy	function
(	O
p	pointer
,	O
seg	pointer
->	O
ptr	pointer
,	O
seg	pointer
->	O
len	long
)	O
;	O
p	pointer
+=	O
seg	pointer
->	O
len	long
;	O
free	function
(	O
seg	pointer
)	O
;	O
seg	pointer
=	O
next	pointer
;	O
}	O
*	O
p	pointer
=	O
0	int
;	O
strseg_head	pointer
=	O
strseg_tail	pointer
=	O
NULL	O
;	O
return	O
ret	pointer
;	O
}	O
static	O
char	O
transtab	array
[	O
]	O
=	O
"\\\\\"\"a\ab\bf\fn\nr\rt\tv\v"	pointer
;	O
int	O
unescape	function
(	O
int	O
c	int
)	O
{	O
char	O
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
transtab	array
;	O
*	O
p	pointer
;	O
p	pointer
+=	O
2	int
)	O
{	O
if	O
(	O
*	O
p	pointer
==	O
c	int
)	O
return	O
p	pointer
[	O
1	int
]	O
;	O
}	O
return	O
c	int
;	O
}	O
int	O
escape	function
(	O
int	O
c	int
)	O
{	O
char	O
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
transtab	array
+	O
sizeof	O
(	O
transtab	array
)	O
-	O
2	int
;	O
p	pointer
>	O
transtab	array
;	O
p	pointer
-=	O
2	int
)	O
{	O
if	O
(	O
*	O
p	pointer
==	O
c	int
)	O
return	O
p	pointer
[	O
-	O
1	int
]	O
;	O
}	O
return	O
0	int
;	O
}	O
void	O
vlerror	function
(	O
struct	O
locus	struct
*	O
loc	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
va_list	array
ap	array
)	O
{	O
if	O
(	O
!	O
interactive	function
(	O
)	O
)	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: "	pointer
,	O
progname	pointer
)	O
;	O
if	O
(	O
loc	pointer
&&	O
loc	pointer
->	O
beg	struct
.	O
file	pointer
)	O
{	O
YY_LOCATION_PRINT	O
(	O
stderr	pointer
,	O
*	O
loc	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
": "	pointer
)	O
;	O
}	O
vfprintf	function
(	O
stderr	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
fputc	function
(	O
'\n'	O
,	O
stderr	pointer
)	O
;	O
}	O
void	O
lerror	function
(	O
struct	O
locus	struct
*	O
loc	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
vlerror	function
(	O
loc	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
}	O
static	O
struct	O
slist	struct
*	O
pe_file_name	function
(	O
void	O
)	O
{	O
return	O
file_name	pointer
?	O
slist_new	function
(	O
file_name	pointer
)	O
:	O
NULL	O
;	O
}	O
static	O
struct	O
slist	struct
*	O
pe_program_name	function
(	O
void	O
)	O
{	O
return	O
slist_new	function
(	O
progname	pointer
)	O
;	O
}	O
static	O
struct	O
slist	struct
*	O
pe_package_name	function
(	O
void	O
)	O
{	O
return	O
slist_new	function
(	O
PACKAGE_NAME	pointer
)	O
;	O
}	O
static	O
struct	O
slist	struct
*	O
pe_program_version	function
(	O
void	O
)	O
{	O
return	O
slist_new	function
(	O
PACKAGE_VERSION	pointer
)	O
;	O
}	O
static	O
struct	O
slist	struct
*	O
pe_space	function
(	O
void	O
)	O
{	O
return	O
slist_new	function
(	O
" "	pointer
)	O
;	O
}	O
struct	O
prompt_exp	struct
{	O
int	O
ch	int
;	O
struct	O
slist	struct
*	O
(	O
*	O
fun	pointer
)	O
(	O
void	O
)	O
;	O
}	O
;	O
struct	O
prompt_exp	struct
prompt_exp	struct
[	O
]	O
=	O
{	O
{	O
'f'	O
,	O
pe_file_name	function
}	O
,	O
{	O
'p'	O
,	O
pe_program_name	function
}	O
,	O
{	O
'P'	O
,	O
pe_package_name	function
}	O
,	O
{	O
'v'	O
,	O
pe_program_version	function
}	O
,	O
{	O
'_'	O
,	O
pe_space	function
}	O
,	O
{	O
0	int
}	O
}	O
;	O
static	O
int	O
expand_char	function
(	O
int	O
c	int
,	O
struct	O
slist	struct
*	O
*	O
tailp	pointer
)	O
{	O
struct	O
prompt_exp	struct
*	O
p	pointer
;	O
if	O
(	O
c	int
&&	O
c	int
!=	O
'%'	O
)	O
{	O
for	O
(	O
p	pointer
=	O
prompt_exp	struct
;	O
p	pointer
->	O
ch	int
;	O
p	pointer
++	O
)	O
{	O
if	O
(	O
c	int
==	O
p	pointer
->	O
ch	int
)	O
{	O
struct	O
slist	struct
*	O
s	pointer
=	O
p	pointer
->	O
fun	pointer
(	O
)	O
;	O
if	O
(	O
s	pointer
)	O
slist_insert	function
(	O
tailp	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
}	O
}	O
return	O
1	int
;	O
}	O
char	O
const	O
*	O
psname	function
(	O
void	O
)	O
{	O
if	O
(	O
YYSTATE	O
==	O
DEF	int
||	O
YYSTATE	O
==	O
MLSTR	int
)	O
return	O
"ps2"	pointer
;	O
return	O
"ps1"	pointer
;	O
}	O
char	O
*	O
make_prompt	function
(	O
void	O
)	O
{	O
const	O
char	O
*	O
s	pointer
;	O
const	O
char	O
*	O
prompt	pointer
;	O
struct	O
slist	struct
*	O
head	pointer
=	O
NULL	O
,	O
*	O
tail	pointer
=	O
NULL	O
,	O
*	O
p	pointer
;	O
char	O
*	O
ret	pointer
,	O
*	O
end	struct
;	O
size_t	long
len	long
;	O
switch	O
(	O
variable_get	function
(	O
psname	function
(	O
)	O
,	O
VART_STRING	int
,	O
(	O
void	O
*	O
)	O
&	O
prompt	pointer
)	O
)	O
{	O
case	O
VAR_OK	int
:	O
break	O
;	O
case	O
VAR_ERR_NOTSET	int
:	O
return	O
NULL	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
for	O
(	O
s	pointer
=	O
prompt	pointer
;	O
*	O
s	pointer
;	O
)	O
{	O
if	O
(	O
*	O
s	pointer
==	O
'%'	O
&&	O
s	pointer
[	O
1	int
]	O
)	O
{	O
if	O
(	O
s	pointer
>	O
prompt	pointer
)	O
{	O
slist_insert	function
(	O
&	O
tail	pointer
,	O
slist_new_l	function
(	O
prompt	pointer
,	O
s	pointer
-	O
prompt	pointer
)	O
)	O
;	O
if	O
(	O
!	O
head	pointer
)	O
head	pointer
=	O
tail	pointer
;	O
}	O
if	O
(	O
expand_char	function
(	O
s	pointer
[	O
1	int
]	O
,	O
&	O
tail	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
head	pointer
)	O
head	pointer
=	O
tail	pointer
;	O
prompt	pointer
=	O
s	pointer
+	O
2	int
;	O
}	O
else	O
prompt	pointer
=	O
s	pointer
;	O
s	pointer
+=	O
2	int
;	O
}	O
else	O
++	O
s	pointer
;	O
}	O
if	O
(	O
s	pointer
>	O
prompt	pointer
)	O
{	O
slist_insert	function
(	O
&	O
tail	pointer
,	O
slist_new_l	function
(	O
prompt	pointer
,	O
s	pointer
-	O
prompt	pointer
)	O
)	O
;	O
if	O
(	O
!	O
head	pointer
)	O
head	pointer
=	O
tail	pointer
;	O
}	O
len	long
=	O
0	int
;	O
for	O
(	O
p	pointer
=	O
head	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
len	long
+=	O
strlen	function
(	O
p	pointer
->	O
str	pointer
)	O
;	O
ret	pointer
=	O
emalloc	function
(	O
len	long
+	O
1	int
)	O
;	O
end	struct
=	O
ret	pointer
;	O
for	O
(	O
p	pointer
=	O
head	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
{	O
s	pointer
=	O
p	pointer
->	O
str	pointer
;	O
while	O
(	O
*	O
s	pointer
)	O
*	O
end	struct
++	O
=	O
*	O
s	pointer
++	O
;	O
}	O
*	O
end	struct
=	O
0	int
;	O
slist_free	function
(	O
head	pointer
)	O
;	O
return	O
ret	pointer
;	O
}	O
