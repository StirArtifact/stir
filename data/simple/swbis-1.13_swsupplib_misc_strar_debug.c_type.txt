static	O
STROB	struct
*	O
buf1	pointer
=	O
NULL	O
;	O
char	O
*	O
strar_dump_string_s	function
(	O
STRAR	struct
*	O
strar	pointer
,	O
char	O
*	O
prefix	pointer
)	O
{	O
char	O
*	O
p	pointer
;	O
int	O
i	int
;	O
STROB	struct
*	O
buf	pointer
;	O
if	O
(	O
buf1	pointer
==	O
(	O
STROB	struct
*	O
)	O
NULL	O
)	O
buf1	pointer
=	O
strob_open	function
(	O
100	int
)	O
;	O
buf	pointer
=	O
buf1	pointer
;	O
strob_sprintf	function
(	O
buf	pointer
,	O
0	int
,	O
"%s%p (STRAR*)\n"	pointer
,	O
prefix	pointer
,	O
(	O
void	O
*	O
)	O
strar	pointer
)	O
;	O
strob_sprintf	function
(	O
buf	pointer
,	O
1	int
,	O
"%s%p->nsM                = [%s]\n"	pointer
,	O
prefix	pointer
,	O
(	O
void	O
*	O
)	O
strar	pointer
,	O
strar	pointer
->	O
nsM	int
)	O
;	O
strob_sprintf	function
(	O
buf	pointer
,	O
1	int
,	O
"%s%p->lenM               = [%s]\n"	pointer
,	O
prefix	pointer
,	O
(	O
void	O
*	O
)	O
strar	pointer
,	O
strar	pointer
->	O
lenM	int
)	O
;	O
i	int
=	O
0	int
;	O
p	pointer
=	O
strar_get	function
(	O
strar	pointer
,	O
i	int
)	O
;	O
while	O
(	O
p	pointer
)	O
{	O
strob_sprintf	function
(	O
buf	pointer
,	O
1	int
,	O
"%s%p->listM[%d]            = [%s]\n"	pointer
,	O
prefix	pointer
,	O
(	O
void	O
*	O
)	O
strar	pointer
,	O
i	int
,	O
p	pointer
)	O
;	O
i	int
++	O
;	O
p	pointer
=	O
strar_get	function
(	O
strar	pointer
,	O
i	int
)	O
;	O
}	O
return	O
strob_str	function
(	O
buf	pointer
)	O
;	O
}	O
