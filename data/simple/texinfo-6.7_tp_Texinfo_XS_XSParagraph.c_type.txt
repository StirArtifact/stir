XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_init	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_init	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"unused, unused2"	pointer
)	O
;	O
{	O
int	O
unused	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
ST	O
(	O
0	int
)	O
)	O
;	O
char	O
*	O
unused2	pointer
=	O
(	O
char	O
*	O
)	O
SvPV_nolen	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
int	O
RETVAL	int
;	O
dXSTARG	O
;	O
RETVAL	int
=	O
xspara_init	function
(	O
unused	int
,	O
unused2	pointer
)	O
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	int
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_state	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_state	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"state"	pointer
)	O
;	O
{	O
SV	struct
*	O
state	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	function
(	O
state	pointer
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_new	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_new	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"class, ..."	pointer
)	O
;	O
{	O
SV	struct
*	O
class	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
HV	struct
*	O
pkg	pointer
;	O
HV	struct
*	O
conf	pointer
=	O
0	int
;	O
int	O
id	int
;	O
SV	struct
*	O
RETVAL	int
;	O
items	int
--	O
;	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
if	O
(	O
SvROK	O
(	O
ST	O
(	O
1	int
)	O
)	O
&&	O
SvTYPE	O
(	O
SvRV	O
(	O
ST	O
(	O
1	int
)	O
)	O
)	O
==	O
SVt_PVHV	int
)	O
conf	pointer
=	O
(	O
HV	struct
*	O
)	O
SvRV	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
}	O
id	int
=	O
xspara_new	function
(	O
conf	pointer
)	O
;	O
pkg	pointer
=	O
gv_stashpv	O
(	O
"Texinfo::Convert::XSParagraph::XSParagraph"	pointer
,	O
0	int
)	O
;	O
RETVAL	int
=	O
newSViv	O
(	O
id	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line_count	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line_count	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
int	O
RETVAL	int
;	O
dXSTARG	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
RETVAL	int
=	O
xspara_end_line_count	function
(	O
)	O
;	O
XSprePUSH	O
;	O
PUSHi	O
(	O
(	O
IV	long
)	O
RETVAL	int
)	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph__end_line	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph__end_line	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
xspara__end_line	function
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end_line	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
RETVAL	int
;	O
dXSTARG	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
RETVAL	int
=	O
xspara_end_line	function
(	O
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	int
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_get_pending	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_get_pending	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
RETVAL	int
;	O
dXSTARG	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
RETVAL	int
=	O
xspara_get_pending	function
(	O
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	int
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_pending_word	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_pending_word	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph, ..."	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
int	O
add_spaces	int
=	O
0	int
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
RETVAL	int
;	O
items	int
-=	O
1	int
;	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
if	O
(	O
SvOK	O
(	O
ST	O
(	O
1	int
)	O
)	O
)	O
{	O
add_spaces	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
ST	O
(	O
1	int
)	O
)	O
;	O
;	O
}	O
}	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
retval	pointer
=	O
xspara_add_pending_word	function
(	O
add_spaces	int
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_end	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
RETVAL	int
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
retval	pointer
=	O
xspara_end	function
(	O
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_text	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_text	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph, text_in"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
text_in	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
char	O
*	O
text	pointer
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
RETVAL	int
;	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	pointer
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	pointer
)	O
;	O
text	pointer
=	O
SvPV_nolen	O
(	O
text_in	pointer
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
retval	pointer
=	O
xspara_add_text	function
(	O
text	pointer
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_next	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_next	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph, text_in, ..."	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
text_in	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
char	O
*	O
text	pointer
;	O
STRLEN	long
text_len	long
;	O
char	O
*	O
retval	pointer
;	O
SV	struct
*	O
arg_in	pointer
;	O
int	O
transparent	int
=	O
0	int
;	O
SV	struct
*	O
RETVAL	int
;	O
items	int
-=	O
2	int
;	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
items	int
--	O
;	O
arg_in	pointer
=	O
ST	O
(	O
2	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	pointer
)	O
)	O
transparent	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	pointer
)	O
;	O
}	O
if	O
(	O
!	O
SvUTF8	O
(	O
text_in	pointer
)	O
)	O
sv_utf8_upgrade	O
(	O
text_in	pointer
)	O
;	O
text	pointer
=	O
SvPV	O
(	O
text_in	pointer
,	O
text_len	long
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
retval	pointer
=	O
xspara_add_next	function
(	O
text	pointer
,	O
text_len	long
,	O
transparent	int
)	O
;	O
RETVAL	int
=	O
newSVpv	O
(	O
retval	pointer
,	O
0	int
)	O
;	O
SvUTF8_on	O
(	O
RETVAL	int
)	O
;	O
RETVAL	int
=	O
sv_2mortal	O
(	O
RETVAL	int
)	O
;	O
ST	O
(	O
0	int
)	O
=	O
RETVAL	int
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
xspara_remove_end_sentence	function
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph, value"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
value	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
int	O
intvalue	int
=	O
0	int
;	O
if	O
(	O
SvOK	O
(	O
value	pointer
)	O
)	O
intvalue	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
value	pointer
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
xspara_add_end_sentence	function
(	O
intvalue	int
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
!=	O
1	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph"	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
xspara_allow_end_sentence	function
(	O
)	O
;	O
}	O
XSRETURN_EMPTY	O
;	O
}	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_space_protection	function
)	O
;	O
XS_EUPXS	O
(	O
XS_Texinfo__XS__XSParagraph_set_space_protection	function
)	O
{	O
dVAR	O
;	O
dXSARGS	O
;	O
if	O
(	O
items	int
<	O
2	int
)	O
croak_xs_usage	O
(	O
cv	struct
,	O
"paragraph, space_protection_in, ..."	pointer
)	O
;	O
{	O
SV	struct
*	O
paragraph	pointer
=	O
ST	O
(	O
0	int
)	O
;	O
SV	struct
*	O
space_protection_in	pointer
=	O
ST	O
(	O
1	int
)	O
;	O
int	O
space_protection	int
=	O
-	O
1	int
;	O
int	O
ignore_columns	int
=	O
-	O
1	int
;	O
int	O
keep_end_lines	int
=	O
-	O
1	int
;	O
int	O
french_spacing	int
=	O
-	O
1	int
;	O
int	O
double_width_no_break	int
=	O
-	O
1	int
;	O
SV	struct
*	O
arg_in	pointer
;	O
char	O
*	O
RETVAL	int
;	O
dXSTARG	O
;	O
if	O
(	O
SvOK	O
(	O
space_protection_in	pointer
)	O
)	O
space_protection	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
space_protection_in	pointer
)	O
;	O
items	int
-=	O
2	int
;	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
items	int
--	O
;	O
arg_in	pointer
=	O
ST	O
(	O
2	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	pointer
)	O
)	O
ignore_columns	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	pointer
)	O
;	O
}	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
items	int
--	O
;	O
arg_in	pointer
=	O
ST	O
(	O
3	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	pointer
)	O
)	O
keep_end_lines	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	pointer
)	O
;	O
}	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
items	int
--	O
;	O
arg_in	pointer
=	O
ST	O
(	O
4	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	pointer
)	O
)	O
french_spacing	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	pointer
)	O
;	O
}	O
if	O
(	O
items	int
>	O
0	int
)	O
{	O
items	int
--	O
;	O
arg_in	pointer
=	O
ST	O
(	O
5	int
)	O
;	O
if	O
(	O
SvOK	O
(	O
arg_in	pointer
)	O
)	O
double_width_no_break	int
=	O
(	O
int	O
)	O
SvIV	O
(	O
arg_in	pointer
)	O
;	O
}	O
xspara_set_state	function
(	O
paragraph	pointer
)	O
;	O
RETVAL	int
=	O
xspara_set_space_protection	function
(	O
space_protection	int
,	O
ignore_columns	int
,	O
keep_end_lines	int
,	O
french_spacing	int
,	O
double_width_no_break	int
)	O
;	O
sv_setpv	O
(	O
TARG	O
,	O
RETVAL	int
)	O
;	O
XSprePUSH	O
;	O
PUSHTARG	O
;	O
}	O
XSRETURN	O
(	O
1	int
)	O
;	O
}	O
XS_EXTERNAL	O
(	O
boot_Texinfo__XS__XSParagraph	function
)	O
;	O
XS_EXTERNAL	O
(	O
boot_Texinfo__XS__XSParagraph	function
)	O
{	O
dVAR	O
;	O
dXSBOOTARGSXSAPIVERCHK	O
;	O
const	O
char	O
*	O
file	pointer
=	O
__FILE__	O
;	O
PERL_UNUSED_VAR	O
(	O
file	pointer
)	O
;	O
PERL_UNUSED_VAR	O
(	O
cv	struct
)	O
;	O
PERL_UNUSED_VAR	O
(	O
items	int
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::init"	pointer
,	O
XS_Texinfo__XS__XSParagraph_init	function
,	O
file	pointer
,	O
"$$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::set_state"	pointer
,	O
XS_Texinfo__XS__XSParagraph_set_state	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::new"	pointer
,	O
XS_Texinfo__XS__XSParagraph_new	function
,	O
file	pointer
,	O
"$;@"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end_line_count"	pointer
,	O
XS_Texinfo__XS__XSParagraph_end_line_count	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::_end_line"	pointer
,	O
XS_Texinfo__XS__XSParagraph__end_line	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end_line"	pointer
,	O
XS_Texinfo__XS__XSParagraph_end_line	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::get_pending"	pointer
,	O
XS_Texinfo__XS__XSParagraph_get_pending	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_pending_word"	pointer
,	O
XS_Texinfo__XS__XSParagraph_add_pending_word	function
,	O
file	pointer
,	O
"$;@"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::end"	pointer
,	O
XS_Texinfo__XS__XSParagraph_end	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_text"	pointer
,	O
XS_Texinfo__XS__XSParagraph_add_text	function
,	O
file	pointer
,	O
"$$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_next"	pointer
,	O
XS_Texinfo__XS__XSParagraph_add_next	function
,	O
file	pointer
,	O
"$$;@"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::remove_end_sentence"	pointer
,	O
XS_Texinfo__XS__XSParagraph_remove_end_sentence	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::add_end_sentence"	pointer
,	O
XS_Texinfo__XS__XSParagraph_add_end_sentence	function
,	O
file	pointer
,	O
"$$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::allow_end_sentence"	pointer
,	O
XS_Texinfo__XS__XSParagraph_allow_end_sentence	function
,	O
file	pointer
,	O
"$"	pointer
)	O
;	O
(	O
void	O
)	O
newXSproto_portable	O
(	O
"Texinfo::XS::XSParagraph::set_space_protection"	pointer
,	O
XS_Texinfo__XS__XSParagraph_set_space_protection	function
,	O
file	pointer
,	O
"$$;@"	pointer
)	O
;	O
Perl_xs_boot_epilog	function
(	O
aTHX_	O
ax	int
)	O
;	O
}	O
