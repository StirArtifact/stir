static	O
FILE	struct
*	O
try_open_catalog_file	function
(	O
const	O
char	O
*	O
input_name	pointer
,	O
char	O
*	O
*	O
real_file_name_p	pointer
)	O
{	O
static	O
const	O
char	O
*	O
extension	array
[	O
]	O
=	O
{	O
""	pointer
,	O
".po"	pointer
,	O
".pot"	pointer
,	O
}	O
;	O
char	O
*	O
file_name	pointer
;	O
FILE	struct
*	O
ret_val	pointer
;	O
int	O
j	int
;	O
size_t	long
k	long
;	O
const	O
char	O
*	O
dir	pointer
;	O
if	O
(	O
strcmp	function
(	O
input_name	pointer
,	O
"-"	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
input_name	pointer
,	O
"/dev/stdin"	pointer
)	O
==	O
0	int
)	O
{	O
*	O
real_file_name_p	pointer
=	O
xstrdup	function
(	O
_	O
(	O
"<stdin>"	pointer
)	O
)	O
;	O
return	O
stdin	pointer
;	O
}	O
if	O
(	O
IS_ABSOLUTE_PATH	O
(	O
input_name	pointer
)	O
)	O
{	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
SIZEOF	O
(	O
extension	array
)	O
;	O
++	O
k	long
)	O
{	O
file_name	pointer
=	O
xconcatenated_filename	function
(	O
""	pointer
,	O
input_name	pointer
,	O
extension	array
[	O
k	long
]	O
)	O
;	O
ret_val	pointer
=	O
fopen	function
(	O
file_name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
ret_val	pointer
!=	O
NULL	O
||	O
errno	O
!=	O
ENOENT	int
)	O
{	O
*	O
real_file_name_p	pointer
=	O
file_name	pointer
;	O
return	O
ret_val	pointer
;	O
}	O
free	function
(	O
file_name	pointer
)	O
;	O
}	O
}	O
else	O
{	O
for	O
(	O
j	int
=	O
0	int
;	O
(	O
dir	pointer
=	O
dir_list_nth	function
(	O
j	int
)	O
)	O
!=	O
NULL	O
;	O
++	O
j	int
)	O
for	O
(	O
k	long
=	O
0	int
;	O
k	long
<	O
SIZEOF	O
(	O
extension	array
)	O
;	O
++	O
k	long
)	O
{	O
file_name	pointer
=	O
xconcatenated_filename	function
(	O
dir	pointer
,	O
input_name	pointer
,	O
extension	array
[	O
k	long
]	O
)	O
;	O
ret_val	pointer
=	O
fopen	function
(	O
file_name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
ret_val	pointer
!=	O
NULL	O
||	O
errno	O
!=	O
ENOENT	int
)	O
{	O
*	O
real_file_name_p	pointer
=	O
file_name	pointer
;	O
return	O
ret_val	pointer
;	O
}	O
free	function
(	O
file_name	pointer
)	O
;	O
}	O
}	O
*	O
real_file_name_p	pointer
=	O
xstrdup	function
(	O
input_name	pointer
)	O
;	O
errno	O
=	O
ENOENT	int
;	O
return	O
NULL	O
;	O
}	O
FILE	struct
*	O
open_catalog_file	function
(	O
const	O
char	O
*	O
input_name	pointer
,	O
char	O
*	O
*	O
real_file_name_p	pointer
,	O
bool	bool
exit_on_error	bool
)	O
{	O
FILE	struct
*	O
fp	pointer
=	O
try_open_catalog_file	function
(	O
input_name	pointer
,	O
real_file_name_p	pointer
)	O
;	O
if	O
(	O
fp	pointer
==	O
NULL	O
&&	O
exit_on_error	bool
)	O
{	O
const	O
char	O
*	O
errno_description	pointer
=	O
strerror	function
(	O
errno	O
)	O
;	O
po_xerror	pointer
(	O
PO_SEVERITY_FATAL_ERROR	int
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
0	int
,	O
false	int
,	O
xasprintf	function
(	O
"%s: %s"	pointer
,	O
xasprintf	function
(	O
_	O
(	O
"error while opening \"%s\" for reading"	pointer
)	O
,	O
*	O
real_file_name_p	pointer
)	O
,	O
errno_description	pointer
)	O
)	O
;	O
}	O
return	O
fp	pointer
;	O
}	O
