int	O
mu_url_set_host	function
(	O
mu_url_t	pointer
url	pointer
,	O
const	O
char	O
*	O
host	pointer
)	O
{	O
char	O
*	O
copy	pointer
;	O
if	O
(	O
!	O
url	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
host	pointer
)	O
{	O
size_t	long
len	long
;	O
int	O
flag	int
=	O
MU_URL_HOST	int
;	O
len	long
=	O
strlen	function
(	O
host	pointer
)	O
;	O
if	O
(	O
len	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
host	pointer
[	O
0	int
]	O
==	O
'['	O
&&	O
host	pointer
[	O
len	long
-	O
1	int
]	O
==	O
']'	O
)	O
{	O
flag	int
|=	O
MU_URL_IPV6	int
;	O
host	pointer
++	O
;	O
len	long
-=	O
2	int
;	O
}	O
copy	pointer
=	O
malloc	function
(	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
copy	pointer
)	O
return	O
ENOMEM	int
;	O
memcpy	function
(	O
copy	pointer
,	O
host	pointer
,	O
len	long
)	O
;	O
copy	pointer
[	O
len	long
]	O
=	O
0	int
;	O
url	pointer
->	O
flags	int
|=	O
flag	int
;	O
}	O
else	O
{	O
url	pointer
->	O
flags	int
&=	O
~	O
(	O
MU_URL_HOST	int
|	O
MU_URL_IPV6	int
)	O
;	O
copy	pointer
=	O
NULL	O
;	O
}	O
url	pointer
->	O
_get_host	pointer
=	O
NULL	O
;	O
free	function
(	O
url	pointer
->	O
host	pointer
)	O
;	O
url	pointer
->	O
host	pointer
=	O
copy	pointer
;	O
mu_url_invalidate	function
(	O
url	pointer
)	O
;	O
return	O
0	int
;	O
}	O
