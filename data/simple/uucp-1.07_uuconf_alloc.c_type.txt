const	O
char	O
_uuconf_alloc_rcsid	array
[	O
]	O
=	O
"$Id: alloc.c,v 1.6 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
pointer	pointer
uuconf_malloc	function
(	O
pblock	pointer
,	O
c	long
)	O
pointer	pointer
pblock	pointer
;	O
size_t	long
c	long
;	O
{	O
struct	O
sblock	struct
*	O
q	pointer
=	O
(	O
struct	O
sblock	struct
*	O
)	O
pblock	pointer
;	O
pointer	pointer
pret	pointer
;	O
if	O
(	O
c	long
==	O
0	int
)	O
return	O
NULL	O
;	O
if	O
(	O
q	pointer
==	O
NULL	O
)	O
return	O
malloc	function
(	O
c	long
)	O
;	O
c	long
=	O
(	O
(	O
c	long
+	O
sizeof	O
(	O
double	O
)	O
-	O
1	int
)	O
/	O
sizeof	O
(	O
double	O
)	O
)	O
*	O
sizeof	O
(	O
double	O
)	O
;	O
while	O
(	O
q	pointer
->	O
ifree	long
+	O
c	long
>	O
CALLOC_SIZE	O
)	O
{	O
if	O
(	O
q	pointer
->	O
qnext	pointer
!=	O
NULL	O
)	O
q	pointer
=	O
q	pointer
->	O
qnext	pointer
;	O
else	O
{	O
if	O
(	O
c	long
>	O
CALLOC_SIZE	O
)	O
q	pointer
->	O
qnext	pointer
=	O
(	O
struct	O
sblock	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
sblock	struct
)	O
+	O
c	long
-	O
CALLOC_SIZE	O
)	O
;	O
else	O
q	pointer
->	O
qnext	pointer
=	O
(	O
struct	O
sblock	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
struct	O
sblock	struct
)	O
)	O
;	O
if	O
(	O
q	pointer
->	O
qnext	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
q	pointer
=	O
q	pointer
->	O
qnext	pointer
;	O
q	pointer
->	O
qnext	pointer
=	O
NULL	O
;	O
q	pointer
->	O
ifree	long
=	O
0	int
;	O
q	pointer
->	O
qadded	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
}	O
pret	pointer
=	O
q	pointer
->	O
u	union
.	O
ab	array
+	O
q	pointer
->	O
ifree	long
;	O
q	pointer
->	O
ifree	long
+=	O
c	long
;	O
q	pointer
->	O
plast	pointer
=	O
pret	pointer
;	O
return	O
pret	pointer
;	O
}	O
