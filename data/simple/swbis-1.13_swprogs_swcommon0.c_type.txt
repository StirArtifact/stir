static	O
void	O
close_stdio	function
(	O
void	O
)	O
{	O
close	pointer
(	O
STDOUT_FILENO	int
)	O
;	O
close	pointer
(	O
STDERR_FILENO	int
)	O
;	O
}	O
void	O
swc0_create_parser_buffer	function
(	O
)	O
{	O
yylval	union
.	O
strb	pointer
=	O
strob_open	function
(	O
128	int
)	O
;	O
if	O
(	O
!	O
yylval	union
.	O
strb	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"out of memory.\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
int	O
swc0_process_w_option	function
(	O
STROB	struct
*	O
tmp	pointer
,	O
CPLOB	struct
*	O
w_arglist	pointer
,	O
char	O
*	O
i_optarg	pointer
,	O
int	O
*	O
w_argc_p	pointer
)	O
{	O
char	O
*	O
np	pointer
;	O
char	O
*	O
t	pointer
;	O
STROB	struct
*	O
wtmp	pointer
=	O
strob_open	function
(	O
10	int
)	O
;	O
char	O
*	O
w_option_arg	pointer
;	O
char	O
*	O
w_option_value	pointer
;	O
w_option_arg	pointer
=	O
strdup	function
(	O
i_optarg	pointer
)	O
;	O
t	pointer
=	O
strob_strtok	function
(	O
wtmp	pointer
,	O
w_option_arg	pointer
,	O
","	pointer
)	O
;	O
while	O
(	O
t	pointer
)	O
{	O
w_option_value	pointer
=	O
strchr	function
(	O
t	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
!	O
w_option_value	pointer
)	O
{	O
np	pointer
=	O
NULL	O
;	O
w_option_value	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
np	pointer
=	O
w_option_value	pointer
;	O
*	O
w_option_value	pointer
=	O
'\0'	O
;	O
w_option_value	pointer
++	O
;	O
}	O
strob_strcpy	function
(	O
tmp	pointer
,	O
"--"	pointer
)	O
;	O
strob_strcat	function
(	O
tmp	pointer
,	O
t	pointer
)	O
;	O
if	O
(	O
w_option_value	pointer
)	O
{	O
strob_strcat	function
(	O
tmp	pointer
,	O
"="	pointer
)	O
;	O
strob_strcat	function
(	O
tmp	pointer
,	O
w_option_value	pointer
)	O
;	O
}	O
cplob_add_nta	function
(	O
w_arglist	pointer
,	O
strdup	function
(	O
strob_str	function
(	O
tmp	pointer
)	O
)	O
)	O
;	O
(	O
*	O
w_argc_p	pointer
)	O
++	O
;	O
if	O
(	O
np	pointer
)	O
*	O
np	pointer
=	O
'='	O
;	O
t	pointer
=	O
strob_strtok	function
(	O
wtmp	pointer
,	O
NULL	O
,	O
","	pointer
)	O
;	O
}	O
strob_close	function
(	O
wtmp	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
swc0_set_arf_format	function
(	O
char	O
*	O
user_optarg	pointer
,	O
int	O
*	O
format_arf	pointer
,	O
int	O
*	O
do_oldgnutar	pointer
,	O
int	O
*	O
do_bsdpax3	pointer
,	O
int	O
*	O
do_oldgnuposix	pointer
,	O
int	O
*	O
do_gnutar	pointer
,	O
int	O
*	O
do_paxexthdr	pointer
)	O
{	O
if	O
(	O
user_optarg	pointer
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
return	O
0	int
;	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"ustar"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_gnutar	pointer
=	O
0	int
;	O
*	O
do_oldgnuposix	pointer
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcasecmp	function
(	O
user_optarg	pointer
,	O
"posix"	pointer
)	O
||	O
!	O
strcasecmp	function
(	O
user_optarg	pointer
,	O
"pax"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_paxexthdr	pointer
=	O
1	int
;	O
*	O
do_gnutar	pointer
=	O
0	int
;	O
*	O
do_oldgnuposix	pointer
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"newc"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_newascii	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"gnutar"	pointer
)	O
||	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"gnu"	pointer
)	O
||	O
0	int
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_gnutar	pointer
=	O
1	int
;	O
*	O
do_oldgnutar	pointer
=	O
0	int
;	O
*	O
do_bsdpax3	pointer
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"oldgnu"	pointer
)	O
||	O
0	int
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_gnutar	pointer
=	O
0	int
;	O
*	O
do_oldgnutar	pointer
=	O
1	int
;	O
*	O
do_bsdpax3	pointer
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"ustar0"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_gnutar	pointer
=	O
0	int
;	O
*	O
do_oldgnuposix	pointer
=	O
1	int
;	O
*	O
do_bsdpax3	pointer
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"bsdpax3"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_ustar	int
;	O
*	O
do_gnutar	pointer
=	O
0	int
;	O
*	O
do_bsdpax3	pointer
=	O
1	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"crc"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_crcascii	int
;	O
}	O
else	O
if	O
(	O
!	O
strcmp	function
(	O
user_optarg	pointer
,	O
"odc"	pointer
)	O
)	O
{	O
*	O
format_arf	pointer
=	O
arf_oldascii	int
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"unrecognized format: %s\n"	pointer
,	O
user_optarg	pointer
)	O
;	O
close_stdio	function
(	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
