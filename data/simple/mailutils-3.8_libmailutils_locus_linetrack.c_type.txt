struct	O
source	struct
{	O
char	O
const	O
*	O
file_name	pointer
;	O
size_t	long
idx	long
;	O
unsigned	O
line	int
;	O
struct	O
source	struct
*	O
next	pointer
,	O
*	O
prev	pointer
;	O
}	O
;	O
struct	O
mu_linetrack	struct
{	O
struct	O
source	struct
*	O
s_head	pointer
,	O
*	O
s_tail	pointer
;	O
size_t	long
max_lines	long
;	O
size_t	long
head	long
;	O
size_t	long
tos	long
;	O
unsigned	O
*	O
cols	pointer
;	O
}	O
;	O
static	O
inline	O
size_t	long
trk_incr	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
size_t	long
a	pointer
)	O
{	O
return	O
(	O
a	pointer
+	O
1	int
)	O
%	O
trk	pointer
->	O
max_lines	long
;	O
}	O
static	O
inline	O
size_t	long
trk_decr	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
size_t	long
a	pointer
)	O
{	O
return	O
(	O
a	pointer
+	O
trk	pointer
->	O
max_lines	long
-	O
1	int
)	O
%	O
trk	pointer
->	O
max_lines	long
;	O
}	O
static	O
inline	O
unsigned	O
count_lines	function
(	O
mu_linetrack_t	pointer
trk	pointer
,	O
size_t	long
from	long
)	O
{	O
return	O
(	O
trk	pointer
->	O
tos	long
+	O
trk	pointer
->	O
max_lines	long
-	O
from	long
)	O
%	O
trk	pointer
->	O
max_lines	long
+	O
1	int
;	O
}	O
static	O
int	O
count_chars	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
size_t	long
i	long
,	O
size_t	long
*	O
ret	pointer
)	O
{	O
size_t	long
nch	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
unsigned	O
n	long
=	O
trk	pointer
->	O
cols	pointer
[	O
i	long
]	O
;	O
if	O
(	O
SIZE_MAX	O
-	O
nch	long
<	O
n	long
)	O
return	O
ERANGE	int
;	O
nch	long
+=	O
n	long
;	O
if	O
(	O
i	long
==	O
trk	pointer
->	O
tos	long
)	O
break	O
;	O
i	long
=	O
trk_incr	function
(	O
trk	pointer
,	O
i	long
)	O
;	O
}	O
*	O
ret	pointer
=	O
nch	long
;	O
return	O
0	int
;	O
}	O
static	O
size_t	long
count_files	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
)	O
{	O
struct	O
source	struct
*	O
sp	pointer
;	O
size_t	long
n	long
=	O
0	int
;	O
for	O
(	O
sp	pointer
=	O
trk	pointer
->	O
s_head	pointer
;	O
sp	pointer
;	O
sp	pointer
=	O
sp	pointer
->	O
next	pointer
)	O
n	long
++	O
;	O
return	O
n	long
;	O
}	O
static	O
void	O
del_source	function
(	O
mu_linetrack_t	pointer
trk	pointer
,	O
struct	O
source	struct
*	O
sp	pointer
)	O
{	O
if	O
(	O
sp	pointer
->	O
prev	pointer
)	O
sp	pointer
->	O
prev	pointer
->	O
next	pointer
=	O
sp	pointer
->	O
next	pointer
;	O
else	O
trk	pointer
->	O
s_head	pointer
=	O
sp	pointer
->	O
next	pointer
;	O
if	O
(	O
sp	pointer
->	O
next	pointer
)	O
sp	pointer
->	O
next	pointer
->	O
prev	pointer
=	O
sp	pointer
->	O
prev	pointer
;	O
else	O
trk	pointer
->	O
s_tail	pointer
=	O
sp	pointer
->	O
prev	pointer
;	O
mu_ident_deref	function
(	O
sp	pointer
->	O
file_name	pointer
)	O
;	O
free	function
(	O
sp	pointer
)	O
;	O
}	O
static	O
inline	O
unsigned	O
*	O
push	function
(	O
mu_linetrack_t	pointer
trk	pointer
)	O
{	O
trk	pointer
->	O
tos	long
=	O
trk_incr	function
(	O
trk	pointer
,	O
trk	pointer
->	O
tos	long
)	O
;	O
if	O
(	O
trk	pointer
->	O
tos	long
==	O
trk	pointer
->	O
head	long
)	O
{	O
trk	pointer
->	O
head	long
=	O
trk_incr	function
(	O
trk	pointer
,	O
trk	pointer
->	O
head	long
)	O
;	O
trk	pointer
->	O
s_tail	pointer
->	O
idx	long
=	O
trk	pointer
->	O
head	long
;	O
trk	pointer
->	O
s_tail	pointer
->	O
line	int
++	O
;	O
}	O
if	O
(	O
trk	pointer
->	O
s_tail	pointer
->	O
prev	pointer
&&	O
trk	pointer
->	O
s_tail	pointer
->	O
idx	long
==	O
trk	pointer
->	O
s_tail	pointer
->	O
prev	pointer
->	O
idx	long
)	O
del_source	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_tail	pointer
)	O
;	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
=	O
0	int
;	O
return	O
&	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
;	O
}	O
static	O
inline	O
unsigned	O
*	O
pop	function
(	O
mu_linetrack_t	pointer
trk	pointer
)	O
{	O
if	O
(	O
trk	pointer
->	O
tos	long
==	O
trk	pointer
->	O
head	long
)	O
return	O
NULL	O
;	O
if	O
(	O
trk	pointer
->	O
tos	long
==	O
trk	pointer
->	O
s_head	pointer
->	O
idx	long
)	O
del_source	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_head	pointer
)	O
;	O
trk	pointer
->	O
tos	long
=	O
trk_decr	function
(	O
trk	pointer
,	O
trk	pointer
->	O
tos	long
)	O
;	O
return	O
&	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
;	O
}	O
int	O
mu_linetrack_origin	function
(	O
mu_linetrack_t	pointer
trk	pointer
,	O
struct	O
mu_locus_point	struct
const	O
*	O
pt	pointer
)	O
{	O
int	O
rc	int
;	O
struct	O
source	struct
*	O
sp	pointer
;	O
char	O
const	O
*	O
file_name	pointer
;	O
if	O
(	O
!	O
trk	pointer
||	O
!	O
pt	pointer
||	O
pt	pointer
->	O
mu_line	int
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pt	pointer
->	O
mu_file	pointer
)	O
file_name	pointer
=	O
pt	pointer
->	O
mu_file	pointer
;	O
else	O
if	O
(	O
trk	pointer
->	O
s_head	pointer
)	O
file_name	pointer
=	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
;	O
else	O
return	O
EINVAL	int
;	O
sp	pointer
=	O
malloc	function
(	O
sizeof	O
*	O
sp	pointer
)	O
;	O
if	O
(	O
!	O
sp	pointer
)	O
return	O
errno	O
;	O
rc	int
=	O
mu_ident_ref	function
(	O
file_name	pointer
,	O
&	O
sp	pointer
->	O
file_name	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	function
(	O
sp	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
)	O
push	function
(	O
trk	pointer
)	O
;	O
sp	pointer
->	O
idx	long
=	O
trk	pointer
->	O
tos	long
;	O
sp	pointer
->	O
line	int
=	O
pt	pointer
->	O
mu_line	int
;	O
trk	pointer
->	O
cols	pointer
[	O
sp	pointer
->	O
idx	long
]	O
=	O
pt	pointer
->	O
mu_col	int
;	O
sp	pointer
->	O
prev	pointer
=	O
NULL	O
;	O
sp	pointer
->	O
next	pointer
=	O
trk	pointer
->	O
s_head	pointer
;	O
if	O
(	O
trk	pointer
->	O
s_head	pointer
)	O
trk	pointer
->	O
s_head	pointer
->	O
prev	pointer
=	O
sp	pointer
;	O
else	O
trk	pointer
->	O
s_tail	pointer
=	O
sp	pointer
;	O
trk	pointer
->	O
s_head	pointer
=	O
sp	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_create	function
(	O
mu_linetrack_t	pointer
*	O
ret	pointer
,	O
char	O
const	O
*	O
file_name	pointer
,	O
size_t	long
max_lines	long
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
;	O
struct	O
mu_locus_point	struct
pt	pointer
;	O
trk	pointer
=	O
malloc	function
(	O
sizeof	O
*	O
trk	pointer
)	O
;	O
if	O
(	O
!	O
trk	pointer
)	O
return	O
errno	O
;	O
trk	pointer
->	O
cols	pointer
=	O
calloc	function
(	O
max_lines	long
,	O
sizeof	O
(	O
trk	pointer
->	O
cols	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
trk	pointer
->	O
cols	pointer
)	O
{	O
rc	int
=	O
errno	O
;	O
free	function
(	O
trk	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
trk	pointer
->	O
s_head	pointer
=	O
trk	pointer
->	O
s_tail	pointer
=	O
NULL	O
;	O
if	O
(	O
max_lines	long
<	O
2	int
)	O
max_lines	long
=	O
2	int
;	O
trk	pointer
->	O
max_lines	long
=	O
max_lines	long
;	O
trk	pointer
->	O
head	long
=	O
0	int
;	O
trk	pointer
->	O
tos	long
=	O
0	int
;	O
trk	pointer
->	O
cols	pointer
[	O
0	int
]	O
=	O
0	int
;	O
pt	pointer
.	O
mu_file	pointer
=	O
file_name	pointer
;	O
pt	pointer
.	O
mu_line	int
=	O
1	int
;	O
pt	pointer
.	O
mu_col	int
=	O
0	int
;	O
rc	int
=	O
mu_linetrack_origin	function
(	O
trk	pointer
,	O
&	O
pt	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	function
(	O
trk	pointer
->	O
cols	pointer
)	O
;	O
free	function
(	O
trk	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
*	O
ret	pointer
=	O
trk	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_rebase	function
(	O
mu_linetrack_t	pointer
trk	pointer
,	O
struct	O
mu_locus_point	struct
const	O
*	O
pt	pointer
)	O
{	O
char	O
const	O
*	O
file_name	pointer
;	O
int	O
rc	int
=	O
mu_ident_ref	function
(	O
pt	pointer
->	O
mu_file	pointer
,	O
&	O
file_name	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
mu_ident_deref	function
(	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
)	O
;	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
=	O
file_name	pointer
;	O
trk	pointer
->	O
s_head	pointer
->	O
line	int
=	O
pt	pointer
->	O
mu_line	int
;	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
s_head	pointer
->	O
idx	long
]	O
=	O
pt	pointer
->	O
mu_col	int
;	O
return	O
0	int
;	O
}	O
void	O
mu_linetrack_free	function
(	O
mu_linetrack_t	pointer
trk	pointer
)	O
{	O
if	O
(	O
trk	pointer
)	O
{	O
while	O
(	O
trk	pointer
->	O
s_head	pointer
)	O
del_source	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_head	pointer
)	O
;	O
free	function
(	O
trk	pointer
->	O
cols	pointer
)	O
;	O
free	function
(	O
trk	pointer
)	O
;	O
}	O
}	O
void	O
mu_linetrack_destroy	function
(	O
mu_linetrack_t	pointer
*	O
trk	pointer
)	O
{	O
if	O
(	O
trk	pointer
)	O
{	O
mu_linetrack_free	function
(	O
*	O
trk	pointer
)	O
;	O
*	O
trk	pointer
=	O
NULL	O
;	O
}	O
}	O
int	O
mu_linetrack_stat	struct
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
struct	O
mu_linetrack_stat	struct
*	O
st	pointer
)	O
{	O
if	O
(	O
count_chars	function
(	O
trk	pointer
,	O
trk	pointer
->	O
head	long
,	O
&	O
st	pointer
->	O
n_chars	long
)	O
)	O
return	O
ERANGE	int
;	O
st	pointer
->	O
n_files	long
=	O
count_files	function
(	O
trk	pointer
)	O
;	O
st	pointer
->	O
n_lines	long
=	O
count_lines	function
(	O
trk	pointer
,	O
trk	pointer
->	O
head	long
)	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_linetrack_at_bol	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
)	O
{	O
return	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
==	O
0	int
;	O
}	O
void	O
mu_linetrack_advance	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
struct	O
mu_locus_range	struct
*	O
loc	pointer
,	O
char	O
const	O
*	O
text	pointer
,	O
size_t	long
leng	long
)	O
{	O
unsigned	O
*	O
ptr	pointer
;	O
if	O
(	O
text	pointer
==	O
NULL	O
||	O
leng	long
==	O
0	int
)	O
return	O
;	O
mu_locus_point_set_file	function
(	O
&	O
loc	pointer
->	O
beg	struct
,	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
)	O
;	O
mu_locus_point_set_file	function
(	O
&	O
loc	pointer
->	O
end	struct
,	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
)	O
;	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
=	O
trk	pointer
->	O
s_head	pointer
->	O
line	int
+	O
count_lines	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_head	pointer
->	O
idx	long
)	O
-	O
1	int
;	O
ptr	pointer
=	O
&	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
;	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
=	O
*	O
ptr	pointer
+	O
1	int
;	O
while	O
(	O
leng	long
--	O
)	O
{	O
(	O
*	O
ptr	pointer
)	O
++	O
;	O
if	O
(	O
*	O
text	pointer
==	O
'\n'	O
)	O
ptr	pointer
=	O
push	function
(	O
trk	pointer
)	O
;	O
text	pointer
++	O
;	O
}	O
loc	pointer
->	O
end	struct
.	O
mu_line	int
=	O
trk	pointer
->	O
s_head	pointer
->	O
line	int
+	O
count_lines	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_head	pointer
->	O
idx	long
)	O
-	O
1	int
;	O
if	O
(	O
*	O
ptr	pointer
)	O
{	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
=	O
*	O
ptr	pointer
;	O
}	O
else	O
{	O
loc	pointer
->	O
end	struct
.	O
mu_line	int
--	O
;	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
=	O
trk	pointer
->	O
cols	pointer
[	O
trk_decr	function
(	O
trk	pointer
,	O
trk	pointer
->	O
tos	long
)	O
]	O
-	O
1	int
;	O
if	O
(	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
+	O
1	int
==	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
)	O
{	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
=	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
;	O
}	O
}	O
}	O
int	O
mu_linetrack_locus	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
struct	O
mu_locus_point	struct
*	O
lp	pointer
)	O
{	O
int	O
rc	int
=	O
mu_locus_point_set_file	function
(	O
lp	pointer
,	O
trk	pointer
->	O
s_head	pointer
->	O
file_name	pointer
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
lp	pointer
->	O
mu_line	int
=	O
trk	pointer
->	O
s_head	pointer
->	O
line	int
+	O
count_lines	function
(	O
trk	pointer
,	O
trk	pointer
->	O
s_head	pointer
->	O
idx	long
)	O
-	O
1	int
;	O
lp	pointer
->	O
mu_col	int
=	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_linetrack_retreat	function
(	O
struct	O
mu_linetrack	struct
*	O
trk	pointer
,	O
size_t	long
n	long
)	O
{	O
size_t	long
nch	long
;	O
if	O
(	O
count_chars	function
(	O
trk	pointer
,	O
trk	pointer
->	O
head	long
,	O
&	O
nch	long
)	O
)	O
return	O
ERANGE	int
;	O
if	O
(	O
n	long
>	O
nch	long
)	O
return	O
ERANGE	int
;	O
else	O
{	O
unsigned	O
*	O
ptr	pointer
=	O
&	O
trk	pointer
->	O
cols	pointer
[	O
trk	pointer
->	O
tos	long
]	O
;	O
while	O
(	O
n	long
--	O
)	O
{	O
if	O
(	O
*	O
ptr	pointer
==	O
0	int
)	O
{	O
ptr	pointer
=	O
pop	function
(	O
trk	pointer
)	O
;	O
if	O
(	O
!	O
ptr	pointer
||	O
*	O
ptr	pointer
==	O
0	int
)	O
{	O
mu_error	function
(	O
"%s:%d: INTERNAL ERROR: out of pop back\n"	pointer
,	O
__FILE__	O
,	O
__LINE__	O
)	O
;	O
return	O
ERANGE	int
;	O
}	O
}	O
--	O
*	O
ptr	pointer
;	O
}	O
}	O
return	O
0	int
;	O
}	O
