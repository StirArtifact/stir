struct	O
timespec	struct
cgt_start	struct
;	O
static	O
void	O
NORETURN	O
PRINTF_STYLE	O
(	O
1	int
,	O
2	int
)	O
die	function
(	O
const	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
va_list	array
args	array
;	O
va_start	O
(	O
args	array
,	O
format	pointer
)	O
;	O
vfprintf	function
(	O
stderr	pointer
,	O
format	pointer
,	O
args	array
)	O
;	O
va_end	O
(	O
args	array
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
int	O
cgt_works_p	function
(	O
void	O
)	O
{	O
struct	O
timespec	struct
now	struct
;	O
return	O
clock_gettime	function
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
now	struct
)	O
==	O
0	int
;	O
}	O
static	O
void	O
cgt_time_start	function
(	O
void	O
)	O
{	O
if	O
(	O
clock_gettime	function
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
cgt_start	struct
)	O
<	O
0	int
)	O
die	function
(	O
"clock_gettime failed: %s\n"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
}	O
static	O
double	O
cgt_time_end	function
(	O
void	O
)	O
{	O
struct	O
timespec	struct
end	struct
;	O
if	O
(	O
clock_gettime	function
(	O
CLOCK_PROCESS_CPUTIME_ID	int
,	O
&	O
end	struct
)	O
<	O
0	int
)	O
die	function
(	O
"clock_gettime failed: %s\n"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
end	struct
.	O
tv_sec	long
-	O
cgt_start	struct
.	O
tv_sec	long
+	O
1e-9	int
*	O
(	O
end	struct
.	O
tv_nsec	long
-	O
cgt_start	struct
.	O
tv_nsec	long
)	O
;	O
}	O
static	O
clock_t	long
clock_start	long
;	O
static	O
void	O
clock_time_start	function
(	O
void	O
)	O
{	O
clock_start	long
=	O
clock	function
(	O
)	O
;	O
}	O
static	O
double	O
clock_time_end	function
(	O
void	O
)	O
{	O
return	O
(	O
double	O
)	O
(	O
clock	function
(	O
)	O
-	O
(	O
clock_start	long
)	O
)	O
/	O
CLOCKS_PER_SEC	O
;	O
}	O
void	O
(	O
*	O
time_start	pointer
)	O
(	O
void	O
)	O
=	O
clock_time_start	function
;	O
double	O
(	O
*	O
time_end	pointer
)	O
(	O
void	O
)	O
=	O
clock_time_end	function
;	O
void	O
time_init	function
(	O
void	O
)	O
{	O
if	O
(	O
cgt_works_p	function
(	O
)	O
)	O
{	O
time_start	pointer
=	O
cgt_time_start	function
;	O
time_end	pointer
=	O
cgt_time_end	function
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"clock_gettime not working, falling back to clock\n"	pointer
)	O
;	O
time_start	pointer
=	O
clock_time_start	function
;	O
time_end	pointer
=	O
clock_time_end	function
;	O
}	O
}	O
