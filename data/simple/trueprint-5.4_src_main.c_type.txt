unsigned	O
int	O
no_of_files	int
;	O
char	O
*	O
current_filename	pointer
;	O
short	O
pass	short
;	O
unsigned	O
int	O
file_number	int
;	O
long	O
total_pages	long
;	O
int	O
page_width	int
;	O
int	O
page_length	int
;	O
boolean	enum
use_environment	enum
;	O
static	O
boolean	enum
no_print_body	enum
;	O
static	O
boolean	enum
no_print_file_index	enum
;	O
static	O
boolean	enum
no_print_function_index	enum
;	O
static	O
char	O
*	O
destination	pointer
;	O
static	O
char	O
*	O
printer_destination	pointer
;	O
static	O
short	O
no_of_copies	short
;	O
static	O
char	O
*	O
*	O
file_names	pointer
;	O
static	O
char	O
*	O
output_filename	pointer
;	O
static	O
boolean	enum
redirect_output	enum
;	O
int	O
main	function
(	O
int	O
,	O
char	O
*	O
*	O
)	O
;	O
static	O
void	O
setup_main	function
(	O
void	O
)	O
;	O
static	O
void	O
print_files	function
(	O
void	O
)	O
;	O
static	O
void	O
set_dest	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
,	O
char	O
*	O
value	pointer
)	O
;	O
static	O
void	O
set_dest_default	function
(	O
char	O
*	O
value	pointer
)	O
;	O
static	O
void	O
print_help	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
,	O
char	O
*	O
value	pointer
)	O
;	O
static	O
void	O
print_version	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
)	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
unsigned	O
int	O
last_param_used	int
;	O
int	O
pipe_handle	int
=	O
-	O
1	int
;	O
use_environment	enum
=	O
TRUE	int
;	O
setup_options	function
(	O
)	O
;	O
setup_debug	function
(	O
)	O
;	O
setup_input	function
(	O
)	O
;	O
setup_diffs	function
(	O
)	O
;	O
setup_headers	function
(	O
)	O
;	O
setup_index	function
(	O
)	O
;	O
setup_language	function
(	O
)	O
;	O
setup_output	function
(	O
)	O
;	O
setup_postscript	function
(	O
)	O
;	O
setup_printers_fl	function
(	O
)	O
;	O
setup_print_prompter	function
(	O
)	O
;	O
setup_main	function
(	O
)	O
;	O
use_environment	enum
=	O
1	int
;	O
last_param_used	int
=	O
handle_options	function
(	O
argc	int
,	O
argv	pointer
)	O
;	O
dm	function
(	O
'o'	O
,	O
1	int
,	O
"Looking at TP_OPTS options\n"	pointer
)	O
;	O
handle_string_options	function
(	O
getenv	function
(	O
"TP_OPTS"	pointer
)	O
)	O
;	O
write_log	O
(	O
)	O
;	O
dm	function
(	O
'P'	O
,	O
1	int
,	O
"Checking parameters\n"	pointer
)	O
;	O
if	O
(	O
last_param_used	int
<	O
(	O
unsigned	O
int	O
)	O
argc	int
)	O
{	O
file_names	pointer
=	O
&	O
(	O
argv	pointer
[	O
last_param_used	int
]	O
)	O
;	O
no_of_files	int
=	O
(	O
unsigned	O
int	O
)	O
argc	int
-	O
last_param_used	int
;	O
dm	function
(	O
'P'	O
,	O
1	int
,	O
"Got %d file names\n"	pointer
,	O
no_of_files	int
)	O
;	O
}	O
else	O
{	O
static	O
char	O
*	O
stdin_filenames	array
[	O
]	O
=	O
{	O
"-"	pointer
,	O
0	int
}	O
;	O
file_names	pointer
=	O
stdin_filenames	array
;	O
no_of_files	int
=	O
1	int
;	O
dm	function
(	O
'P'	O
,	O
1	int
,	O
"No filenames - reading stdin\n"	pointer
)	O
;	O
}	O
dm	function
(	O
'l'	O
,	O
1	int
,	O
"Setting language for filename %s\n"	pointer
,	O
file_names	pointer
[	O
0	int
]	O
)	O
;	O
handle_string_options	function
(	O
language_defaults	function
(	O
file_names	pointer
[	O
0	int
]	O
)	O
)	O
;	O
dm	function
(	O
'o'	O
,	O
1	int
,	O
"Setting default options\n"	pointer
)	O
;	O
if	O
(	O
use_environment	enum
)	O
handle_string_options	function
(	O
DEFAULT_OPTS	pointer
)	O
;	O
set_option_defaults	function
(	O
)	O
;	O
PS_pagesize	function
(	O
destination	pointer
,	O
&	O
page_width	int
,	O
&	O
page_length	int
)	O
;	O
dm	function
(	O
'O'	O
,	O
1	int
,	O
"Page width is  %d, page length is %d\n"	pointer
,	O
page_width	int
,	O
page_length	int
)	O
;	O
if	O
(	O
redirect_output	enum
)	O
{	O
if	O
(	O
strcmp	function
(	O
file_names	pointer
[	O
0	int
]	O
,	O
"-"	pointer
)	O
==	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot use redirect-output option with stdin\n"	pointer
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
output_filename	pointer
=	O
xmalloc	function
(	O
strlen	function
(	O
file_names	pointer
[	O
0	int
]	O
)	O
+	O
4	int
)	O
;	O
strcpy	function
(	O
output_filename	pointer
,	O
file_names	pointer
[	O
0	int
]	O
)	O
;	O
{	O
char	O
*	O
suffix	pointer
;	O
suffix	pointer
=	O
strrchr	function
(	O
output_filename	pointer
,	O
'.'	O
)	O
;	O
if	O
(	O
suffix	pointer
==	O
NULL	O
)	O
{	O
suffix	pointer
=	O
output_filename	pointer
+	O
strlen	function
(	O
output_filename	pointer
)	O
;	O
}	O
*	O
(	O
suffix	pointer
++	O
)	O
=	O
'.'	O
;	O
*	O
(	O
suffix	pointer
++	O
)	O
=	O
'p'	O
;	O
*	O
(	O
suffix	pointer
++	O
)	O
=	O
's'	O
;	O
*	O
(	O
suffix	pointer
++	O
)	O
=	O
'\0'	O
;	O
}	O
dm	function
(	O
'O'	O
,	O
1	int
,	O
"main.c:main() Redirecting output to %s\n"	pointer
,	O
output_filename	pointer
)	O
;	O
}	O
dm	function
(	O
'p'	O
,	O
1	int
,	O
"Starting first pass\n"	pointer
)	O
;	O
pass	short
=	O
0	int
;	O
init_postscript	function
(	O
)	O
;	O
print_files	function
(	O
)	O
;	O
total_pages	long
=	O
page_number	long
;	O
if	O
(	O
!	O
got_some_input	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": empty input, not submitting print job\n"	pointer
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
dm	function
(	O
'p'	O
,	O
1	int
,	O
"Starting second pass\n"	pointer
)	O
;	O
pass	short
=	O
1	int
;	O
init_postscript	function
(	O
)	O
;	O
if	O
(	O
(	O
strlen	function
(	O
output_filename	pointer
)	O
>	O
0	int
)	O
&&	O
(	O
strcmp	function
(	O
output_filename	pointer
,	O
"-"	pointer
)	O
!=	O
0	int
)	O
)	O
{	O
pipe_handle	int
=	O
creat	function
(	O
output_filename	pointer
,	O
0666	int
)	O
;	O
if	O
(	O
pipe_handle	int
==	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot open %s for writing, %s\n"	pointer
)	O
,	O
output_filename	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
!	O
(	O
(	O
close	function
(	O
1	int
)	O
==	O
0	int
)	O
&&	O
(	O
dup	function
(	O
pipe_handle	int
)	O
==	O
1	int
)	O
)	O
)	O
abort	function
(	O
)	O
;	O
dm	function
(	O
'O'	O
,	O
1	int
,	O
"Sending output to %s\n"	pointer
,	O
output_filename	pointer
)	O
;	O
}	O
else	O
{	O
}	O
dm	function
(	O
'P'	O
,	O
1	int
,	O
"Print out postscript header\n"	pointer
)	O
;	O
PS_header	function
(	O
use_environment	enum
?	O
VERSION	pointer
:	O
"3.6.5"	pointer
,	O
!	O
no_print_body	enum
)	O
;	O
dm	function
(	O
'i'	O
,	O
1	int
,	O
"sort function names & print indices if necessary\n"	pointer
)	O
;	O
sort_function_names	function
(	O
)	O
;	O
if	O
(	O
(	O
no_print_function_index	enum
==	O
FALSE	int
)	O
&&	O
(	O
print_prompt	function
(	O
PAGE_SPECIAL	int
,	O
0	int
,	O
"function index"	pointer
)	O
==	O
TRUE	int
)	O
)	O
print_index	function
(	O
)	O
;	O
if	O
(	O
(	O
no_of_files	int
>	O
1	int
)	O
&&	O
(	O
no_print_file_index	enum
==	O
FALSE	int
)	O
&&	O
(	O
print_prompt	function
(	O
PAGE_SPECIAL	int
,	O
0	int
,	O
"file index"	pointer
)	O
==	O
TRUE	int
)	O
)	O
print_out_file_index	function
(	O
)	O
;	O
if	O
(	O
no_print_body	enum
==	O
FALSE	int
)	O
{	O
print_files	function
(	O
)	O
;	O
}	O
PS_end_output	function
(	O
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
close	function
(	O
1	int
)	O
;	O
if	O
(	O
pipe_handle	int
!=	O
-	O
1	int
)	O
closepipe	function
(	O
pipe_handle	int
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
void	O
print_files	function
(	O
void	O
)	O
{	O
int	O
stream	int
;	O
static	O
int	O
stdin_stream	int
=	O
-	O
1	int
;	O
init_input	function
(	O
)	O
;	O
init_output	function
(	O
)	O
;	O
for	O
(	O
file_number	int
=	O
0	int
;	O
file_names	pointer
[	O
file_number	int
]	O
;	O
file_number	int
++	O
)	O
{	O
current_filename	pointer
=	O
file_names	pointer
[	O
file_number	int
]	O
;	O
dm	function
(	O
'p'	O
,	O
3	int
,	O
"Looking at file %s\n"	pointer
,	O
current_filename	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
current_filename	pointer
,	O
"-"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
pass	short
==	O
0	int
)	O
{	O
char	O
input_buffer	array
[	O
BUFFER_SIZE	int
]	O
;	O
int	O
buffer_size	int
;	O
if	O
(	O
stdin_stream	int
!=	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot specify stdin twice on command line\n"	pointer
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
stdin_stream	int
=	O
fileno	function
(	O
tmpfile	function
(	O
)	O
)	O
;	O
while	O
(	O
(	O
buffer_size	int
=	O
read	function
(	O
fileno	function
(	O
stdin	pointer
)	O
,	O
input_buffer	array
,	O
BUFFER_SIZE	int
)	O
)	O
>	O
0	int
)	O
{	O
if	O
(	O
write	function
(	O
stdin_stream	int
,	O
input_buffer	array
,	O
buffer_size	int
)	O
<=	O
0	int
)	O
{	O
perror	function
(	O
CMD_NAME	pointer
": cannot write to tmp file"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
}	O
if	O
(	O
lseek	function
(	O
stdin_stream	int
,	O
0	int
,	O
SEEK_SET	int
)	O
==	O
(	O
off_t	long
)	O
-	O
1	int
)	O
perror	function
(	O
CMD_NAME	pointer
": cannot seek to start of tmp file"	pointer
)	O
;	O
stream	int
=	O
stdin_stream	int
;	O
}	O
else	O
if	O
(	O
(	O
stream	int
=	O
open	function
(	O
file_names	pointer
[	O
file_number	int
]	O
,	O
O_RDONLY	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot open file %s, %s\n"	pointer
)	O
,	O
current_filename	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
dm	function
(	O
'f'	O
,	O
3	int
,	O
"Opened stream %d to read file %s\n"	pointer
,	O
stream	int
,	O
file_names	pointer
[	O
file_number	int
]	O
)	O
;	O
if	O
(	O
pass	short
==	O
0	int
)	O
{	O
dm	function
(	O
'i'	O
,	O
3	int
,	O
"Pass file %s to index module\n"	pointer
,	O
current_filename	pointer
)	O
;	O
add_file	function
(	O
current_filename	pointer
,	O
file_number	int
,	O
page_number	long
+	O
1	int
)	O
;	O
}	O
if	O
(	O
set_input_stream	function
(	O
stream	int
)	O
)	O
{	O
dm	function
(	O
'd'	O
,	O
3	int
,	O
"Init diffs for pass %d, file %s\n"	pointer
,	O
pass	short
,	O
current_filename	pointer
)	O
;	O
init_diffs	function
(	O
current_filename	pointer
)	O
;	O
print_file	function
(	O
)	O
;	O
dm	function
(	O
'd'	O
,	O
3	int
,	O
"Ending diffs for pass %d, file %s\n"	pointer
,	O
pass	short
,	O
current_filename	pointer
)	O
;	O
end_diffs	function
(	O
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot read %s - possibly an empty file\n"	pointer
)	O
,	O
current_filename	pointer
)	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
file_names	pointer
[	O
file_number	int
]	O
,	O
"-"	pointer
)	O
!=	O
0	int
)	O
{	O
if	O
(	O
close	function
(	O
stream	int
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
gettext	function
(	O
CMD_NAME	pointer
": cannot close %s, %s\n"	pointer
)	O
,	O
file_names	pointer
[	O
file_number	int
]	O
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
if	O
(	O
pass	short
==	O
0	int
)	O
{	O
dm	function
(	O
'i'	O
,	O
3	int
,	O
"End file for index module\n"	pointer
)	O
;	O
end_file	function
(	O
file_number	int
,	O
page_number	long
)	O
;	O
}	O
}	O
if	O
(	O
pass	short
==	O
1	int
)	O
{	O
file_number	int
--	O
;	O
fill_sheet_with_blank_pages	function
(	O
)	O
;	O
}	O
}	O
void	O
setup_main	function
(	O
void	O
)	O
{	O
page_width	int
=	O
-	O
1	int
;	O
page_length	int
=	O
-	O
1	int
;	O
destination	pointer
=	O
NULL	O
;	O
printer_destination	pointer
=	O
""	pointer
;	O
no_of_copies	short
=	O
-	O
1	int
;	O
string_option	function
(	O
"d"	pointer
,	O
"printer"	pointer
,	O
""	pointer
,	O
NULL	O
,	O
&	O
set_dest	function
,	O
&	O
set_dest_default	function
,	O
OPT_OUTPUT	int
,	O
"use printer <string>"	pointer
)	O
;	O
string_option	function
(	O
"P"	pointer
,	O
"printer"	pointer
,	O
""	pointer
,	O
NULL	O
,	O
&	O
set_dest	function
,	O
&	O
set_dest_default	function
,	O
OPT_OUTPUT	int
,	O
"use printer <string>"	pointer
)	O
;	O
string_option	function
(	O
"s"	pointer
,	O
"output"	pointer
,	O
""	pointer
,	O
&	O
output_filename	pointer
,	O
NULL	O
,	O
NULL	O
,	O
OPT_OUTPUT	int
,	O
"send output to filename <string>; use - for stdout"	pointer
)	O
;	O
boolean_option	function
(	O
"r"	pointer
,	O
"redirect-output"	pointer
,	O
"no-redirect-output"	pointer
,	O
FALSE	int
,	O
&	O
redirect_output	enum
,	O
NULL	O
,	O
NULL	O
,	O
OPT_OUTPUT	int
,	O
"redirect output to .ps file named after first filename"	pointer
,	O
"don't redirect output"	pointer
)	O
;	O
short_option	function
(	O
"c"	pointer
,	O
"copies"	pointer
,	O
1	int
,	O
NULL	O
,	O
0	int
,	O
1	int
,	O
200	int
,	O
&	O
no_of_copies	short
,	O
NULL	O
,	O
NULL	O
,	O
OPT_OUTPUT	int
,	O
"specify number of copies to be printed"	pointer
,	O
NULL	O
)	O
;	O
boolean_option	function
(	O
"F"	pointer
,	O
"no-file-index"	pointer
,	O
"file-index"	pointer
,	O
FALSE	int
,	O
&	O
no_print_file_index	enum
,	O
NULL	O
,	O
NULL	O
,	O
OPT_PRINT	int
,	O
"don't print file index"	pointer
,	O
"print file index"	pointer
)	O
;	O
boolean_option	function
(	O
"f"	pointer
,	O
"no-function-index"	pointer
,	O
"function-index"	pointer
,	O
FALSE	int
,	O
&	O
no_print_function_index	enum
,	O
NULL	O
,	O
NULL	O
,	O
OPT_PRINT	int
,	O
"don't print function index"	pointer
,	O
"print function index"	pointer
)	O
;	O
optional_string_option	function
(	O
"H"	pointer
,	O
"help"	pointer
,	O
&	O
print_help	function
,	O
OPT_MISC	int
,	O
"Type help information\n"	pointer
"    --help=all-options - list all options\n"	pointer
"    --help=misc-options - list miscellaneous options\n"	pointer
"    --help=page-furniture-options - list page furniture options\n"	pointer
"    --help=text-format-options - list text formatting options\n"	pointer
"    --help=print-options - list options that select what to print\n"	pointer
"    --help=page-format-options - list page format options\n"	pointer
"    --help=output-options - list options that affect where output goes\n"	pointer
"    --help=language - list languages\n"	pointer
"    --help=prompt - format for --print-pages string\n"	pointer
"    --help=debug - format for --debug string\n"	pointer
"    --help=header - format for header & footer strings\n"	pointer
"    --help=report - file format for --language=report input\n"	pointer
"    --help=environment - list environment vars used"	pointer
)	O
;	O
noparm_option	function
(	O
"V"	pointer
,	O
"version"	pointer
,	O
FALSE	int
,	O
&	O
print_version	function
,	O
NULL	O
,	O
OPT_MISC	int
,	O
"Type version information"	pointer
)	O
;	O
boolean_option	function
(	O
"B"	pointer
,	O
"no-print-body"	pointer
,	O
"print-body"	pointer
,	O
FALSE	int
,	O
&	O
no_print_body	enum
,	O
NULL	O
,	O
NULL	O
,	O
OPT_PRINT	int
,	O
"don't print body of text"	pointer
,	O
"print body of text"	pointer
)	O
;	O
boolean_option	function
(	O
"N"	pointer
,	O
"use-environment"	pointer
,	O
"ignore-environment"	pointer
,	O
TRUE	int
,	O
&	O
use_environment	enum
,	O
NULL	O
,	O
NULL	O
,	O
OPT_MISC	int
,	O
"use environment variables"	pointer
,	O
"don't use values from environment, such as time,\n"	pointer
"    $USER, etc.  This is for test purposes, to make test results\n"	pointer
"    more reproducible"	pointer
)	O
;	O
int_option	function
(	O
"w"	pointer
,	O
"line-wrap"	pointer
,	O
-	O
1	int
,	O
"no-line-wrap"	pointer
,	O
0	int
,	O
-	O
1	int
,	O
200	int
,	O
&	O
page_width	int
,	O
NULL	O
,	O
NULL	O
,	O
OPT_TEXT_FORMAT	int
,	O
"specify the line-wrap column."	pointer
,	O
"turn off line-wrap"	pointer
)	O
;	O
int_option	function
(	O
"l"	pointer
,	O
"page-length"	pointer
,	O
-	O
1	int
,	O
NULL	O
,	O
0	int
,	O
5	int
,	O
200	int
,	O
&	O
page_length	int
,	O
NULL	O
,	O
NULL	O
,	O
OPT_TEXT_FORMAT	int
,	O
"specify number of lines on a page, point size is\n"	pointer
"    calculated appropriately"	pointer
,	O
NULL	O
)	O
;	O
}	O
void	O
set_dest_default	function
(	O
char	O
*	O
value	pointer
)	O
{	O
set_dest	function
(	O
NULL	O
,	O
NULL	O
,	O
value	pointer
)	O
;	O
}	O
void	O
set_dest	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
,	O
char	O
*	O
value	pointer
)	O
{	O
return	O
;	O
}	O
void	O
print_help	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
,	O
char	O
*	O
value	pointer
)	O
{	O
if	O
(	O
value	pointer
)	O
{	O
printf	function
(	O
gettext	function
(	O
"Help for %s:\n"	pointer
)	O
,	O
value	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"all-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_MISC	int
)	O
;	O
print_usage_msgs	function
(	O
OPT_PAGE_FURNITURE	int
)	O
;	O
print_usage_msgs	function
(	O
OPT_TEXT_FORMAT	int
)	O
;	O
print_usage_msgs	function
(	O
OPT_PRINT	int
)	O
;	O
print_usage_msgs	function
(	O
OPT_PAGE_FORMAT	int
)	O
;	O
print_usage_msgs	function
(	O
OPT_OUTPUT	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"misc-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_MISC	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"page-furniture-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_PAGE_FURNITURE	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"text-format-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_TEXT_FORMAT	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"print-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_PRINT	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"page-format-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_PAGE_FORMAT	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"output-options"	pointer
)	O
==	O
0	int
)	O
{	O
print_usage_msgs	function
(	O
OPT_OUTPUT	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"language"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
language_list	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"environment"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
"  Environment variables used by trueprint:\n"	pointer
"    TP_DIFF_CMD:  command used to generate diffs, devault is diff\n"	pointer
"    USER:         username for headers, footers, coversheet, etc.\n"	pointer
"    TP_OPTS:      default trueprint options, overridden by command line opts\n"	pointer
"    TP_PRINT_CMD: command used to print output, default is lp or lpr\n"	pointer
"    PRINTER:      name of printer to send output to\n"	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"prompt"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
"--print-pages <pagelist>\n"	pointer
" Format for <pagelist>:\n"	pointer
"      <pagelist> is a comma separated list of specifiers.  A specifier can be\n"	pointer
"      a single page number, a range of page numbers, a function name, or a\n"	pointer
"      special letter:\n"	pointer
"      A range of pages is specified by the lower number, then a dash, then the\n"	pointer
"      upper number\n"	pointer
"      A special letter can be d, D, f, F or c for\n"	pointer
"	changed pages, changed functions, function index, file index or cross\n"	pointer
"      reference information respectively - note that the page will only be printed\n"	pointer
"      if it would have been printed without the -A option\n"	pointer
"      For example: trueprint --print-pages 1-5,main,f main.c\n"	pointer
"           will print out pages 1-5, all pages for function main, and the function index\n"	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"header"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
" Format for <string>:\n"	pointer
"	<string> is used to specify header and footer contents, and can contain the\n"	pointer
"	following sequences:\n"	pointer
"	%% a percent character\n"	pointer
"	%m month of year\n"	pointer
"	%d day of month\n"	pointer
"	%y year e.g. 1993\n"	pointer
"	%D date mm/dd/yy\n"	pointer
"	%L long date e.g. Fri Oct 8 11:49:51 1993\n"	pointer
"	%c file modification date mm/dd/yy\n"	pointer
"	%C file modification date in long format\n"	pointer
"	%H hour\n"	pointer
"	%M minute\n"	pointer
"	%S second\n"	pointer
"	%T time HH:MM:SS\n"	pointer
"	%j day of year ddd\n"	pointer
"	%w day of week (Sunday = 0)\n"	pointer
"	%a abbreviated weekday\n"	pointer
"	%h abbreviated month\n"	pointer
"	%r time in am/pm notation\n"	pointer
"	%p page number in current file\n"	pointer
"	%P overall page number\n"	pointer
"	%f number of pages in current file\n"	pointer
"	%F final overall page number\n"	pointer
"	%n current filename\n"	pointer
"	%N current functionname\n"	pointer
"	%l login name\n"	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"debug"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
" Format for <debug-string>:	series of char/digit pairs where char\n"	pointer
"	specifies information, digit specifies level of detail, in\n"	pointer
"	general 1=stuff that happens once, 2=per-pass, 3=per-file,\n"	pointer
"	4=per-page, 8=per-line - but this is not fully implemented...\n"	pointer
"	Current chars are: o=options, i=index, O=output, P=parameters\n"	pointer
"	l=language, p=pass, h=headers/footers, I=input,\n"	pointer
"	d=diffs, f=file/stream handling, D=destination/printer\n"	pointer
"	@=all of the above\n"	pointer
)	O
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
value	pointer
,	O
"report"	pointer
)	O
==	O
0	int
)	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
" Format for files when using --language=report:\n"	pointer
"   Strings between ^B amd ^E are printed in bold and\n"	pointer
"   are indexed as function names.\n"	pointer
"   Strings between ^C and ^C are printed in italics\n"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
gettext	function
(	O
CMD_NAME	pointer
": Unrecognized help option:%s\nUse --help for valid options\n"	pointer
)	O
,	O
value	pointer
)	O
;	O
}	O
}	O
else	O
{	O
printf	function
(	O
"%s"	pointer
,	O
gettext	function
(	O
"Usage: trueprint <options> <filenames>\n"	pointer
"For details see:\n"	pointer
"    --help=all-options - list all options\n"	pointer
"    --help=misc-options - list miscellaneous options\n"	pointer
"    --help=page-furniture-options - list page furniture options\n"	pointer
"    --help=text-format-options - list text formatting options\n"	pointer
"    --help=print-options - list options that select what to print\n"	pointer
"    --help=page-format-options - list page format options\n"	pointer
"    --help=output-options - list options that affect where output goes\n"	pointer
"    --help=language - list languages\n"	pointer
"    --help=prompt - format for --print-pages string\n"	pointer
"    --help=debug - format for --debug string\n"	pointer
"    --help=header - format for header & footer strings\n"	pointer
"    --help=report - file format for --language=report input\n"	pointer
"    --help=environment - list environment vars used\n"	pointer
)	O
)	O
;	O
}	O
printf	function
(	O
gettext	function
(	O
"Report bugs to bug-trueprint@gnu.org\n"	pointer
)	O
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
void	O
print_version	function
(	O
const	O
char	O
*	O
p	pointer
,	O
const	O
char	O
*	O
o	pointer
)	O
{	O
printf	function
(	O
"GNU Trueprint %s\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
gettext	function
(	O
"Copyright (C) 1999 Free Software Foundation, Inc.\n"	pointer
"GNU Trueprint comes with NO WARRANTY,\n"	pointer
"to the extent permitted by law.\n"	pointer
"You may redistribute copies of GNU Trueprint\n"	pointer
"under the terms of the GNU General Public License.\n"	pointer
"For more information about these matters,\n"	pointer
"see the file named COPYING.\n"	pointer
)	O
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
