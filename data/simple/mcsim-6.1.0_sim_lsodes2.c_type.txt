int	O
nsfc_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
r	pointer
,	O
long	O
*	O
ic	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
long	O
*	O
jlmax	pointer
,	O
long	O
*	O
il	pointer
,	O
long	O
*	O
jl	pointer
,	O
long	O
*	O
ijl	pointer
,	O
long	O
*	O
jumax	pointer
,	O
long	O
*	O
iu	pointer
,	O
long	O
*	O
ju	pointer
,	O
long	O
*	O
iju	pointer
,	O
long	O
*	O
q	pointer
,	O
long	O
*	O
ira	pointer
,	O
long	O
*	O
jra	pointer
,	O
long	O
*	O
irac	pointer
,	O
long	O
*	O
irl	pointer
,	O
long	O
*	O
jrl	pointer
,	O
long	O
*	O
iru	pointer
,	O
long	O
*	O
jru	pointer
,	O
long	O
*	O
flag_	pointer
)	O
{	O
long	O
i__2	long
,	O
i__3	long
;	O
long	O
cend	long
,	O
irai	long
,	O
rend	long
,	O
jmin	long
,	O
jmax	long
,	O
long_	long
,	O
irll	long
,	O
jtmp	long
,	O
irul	long
,	O
i	long
,	O
j	long
,	O
k	pointer
,	O
m	long
,	O
jaiak	long
,	O
jlmin	long
,	O
lasti	long
,	O
jumin	long
,	O
i1	long
,	O
jlptr	long
,	O
juptr	long
,	O
qm	long
,	O
vj	long
,	O
jairai	long
,	O
lastid	long
,	O
np1	long
,	O
iak	long
,	O
luk	long
;	O
long	O
rk	long
=	O
0	int
;	O
--	O
jru	pointer
;	O
--	O
iru	pointer
;	O
--	O
jrl	pointer
;	O
--	O
irl	pointer
;	O
--	O
irac	pointer
;	O
--	O
jra	pointer
;	O
--	O
ira	pointer
;	O
--	O
q	pointer
;	O
--	O
iju	pointer
;	O
--	O
ju	pointer
;	O
--	O
iu	pointer
;	O
--	O
ijl	pointer
;	O
--	O
jl	pointer
;	O
--	O
il	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
--	O
ic	pointer
;	O
--	O
r	pointer
;	O
np1	long
=	O
*	O
n	pointer
+	O
1	int
;	O
jlmin	long
=	O
1	int
;	O
jlptr	long
=	O
0	int
;	O
il	pointer
[	O
1	int
]	O
=	O
1	int
;	O
jumin	long
=	O
1	int
;	O
juptr	long
=	O
0	int
;	O
iu	pointer
[	O
1	int
]	O
=	O
1	int
;	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
*	O
n	pointer
;	O
++	O
k	pointer
)	O
{	O
irac	pointer
[	O
k	pointer
]	O
=	O
0	int
;	O
jra	pointer
[	O
k	pointer
]	O
=	O
0	int
;	O
jrl	pointer
[	O
k	pointer
]	O
=	O
0	int
;	O
jru	pointer
[	O
k	pointer
]	O
=	O
0	int
;	O
}	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
*	O
n	pointer
;	O
++	O
k	pointer
)	O
{	O
rk	long
=	O
r	pointer
[	O
k	pointer
]	O
;	O
iak	long
=	O
ia	pointer
[	O
rk	long
]	O
;	O
if	O
(	O
iak	long
>=	O
ia	pointer
[	O
rk	long
+	O
1	int
]	O
)	O
goto	O
L101	O
;	O
jaiak	long
=	O
ic	pointer
[	O
ja	pointer
[	O
iak	long
]	O
]	O
;	O
if	O
(	O
jaiak	long
>	O
k	pointer
)	O
goto	O
L105	O
;	O
jra	pointer
[	O
k	pointer
]	O
=	O
irac	pointer
[	O
jaiak	long
]	O
;	O
irac	pointer
[	O
jaiak	long
]	O
=	O
k	pointer
;	O
ira	pointer
[	O
k	pointer
]	O
=	O
iak	long
;	O
}	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
*	O
n	pointer
;	O
++	O
k	pointer
)	O
{	O
q	pointer
[	O
np1	long
]	O
=	O
np1	long
;	O
luk	long
=	O
-	O
1	int
;	O
vj	long
=	O
irac	pointer
[	O
k	pointer
]	O
;	O
if	O
(	O
vj	long
==	O
0	int
)	O
goto	O
L5	O
;	O
L3	O
:	O
qm	long
=	O
np1	long
;	O
L4	O
:	O
m	long
=	O
qm	long
;	O
qm	long
=	O
q	pointer
[	O
m	long
]	O
;	O
if	O
(	O
qm	long
<	O
vj	long
)	O
goto	O
L4	O
;	O
if	O
(	O
qm	long
==	O
vj	long
)	O
goto	O
L102	O
;	O
++	O
luk	long
;	O
q	pointer
[	O
m	long
]	O
=	O
vj	long
;	O
q	pointer
[	O
vj	long
]	O
=	O
qm	long
;	O
vj	long
=	O
jra	pointer
[	O
vj	long
]	O
;	O
if	O
(	O
vj	long
!=	O
0	int
)	O
goto	O
L3	O
;	O
L5	O
:	O
lastid	long
=	O
0	int
;	O
lasti	long
=	O
0	int
;	O
ijl	pointer
[	O
k	pointer
]	O
=	O
jlptr	long
;	O
i	long
=	O
k	pointer
;	O
L6	O
:	O
i	long
=	O
jru	pointer
[	O
i	long
]	O
;	O
if	O
(	O
i	long
==	O
0	int
)	O
goto	O
L10	O
;	O
qm	long
=	O
np1	long
;	O
jmin	long
=	O
irl	pointer
[	O
i	long
]	O
;	O
jmax	long
=	O
ijl	pointer
[	O
i	long
]	O
+	O
il	pointer
[	O
i	long
+	O
1	int
]	O
-	O
il	pointer
[	O
i	long
]	O
-	O
1	int
;	O
long_	long
=	O
jmax	long
-	O
jmin	long
;	O
if	O
(	O
long_	long
<	O
0	int
)	O
goto	O
L6	O
;	O
jtmp	long
=	O
jl	pointer
[	O
jmin	long
]	O
;	O
if	O
(	O
jtmp	long
!=	O
k	pointer
)	O
++	O
long_	long
;	O
if	O
(	O
jtmp	long
==	O
k	pointer
)	O
r	pointer
[	O
i	long
]	O
=	O
-	O
r	pointer
[	O
i	long
]	O
;	O
if	O
(	O
lastid	long
<	O
long_	long
)	O
{	O
lasti	long
=	O
i	long
;	O
lastid	long
=	O
long_	long
;	O
}	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
jmax	long
;	O
++	O
j	long
)	O
{	O
vj	long
=	O
jl	pointer
[	O
j	long
]	O
;	O
do	O
{	O
m	long
=	O
qm	long
;	O
qm	long
=	O
q	pointer
[	O
m	long
]	O
;	O
}	O
while	O
(	O
qm	long
<	O
vj	long
)	O
;	O
if	O
(	O
qm	long
!=	O
vj	long
)	O
{	O
++	O
luk	long
;	O
q	pointer
[	O
m	long
]	O
=	O
vj	long
;	O
q	pointer
[	O
vj	long
]	O
=	O
qm	long
;	O
qm	long
=	O
vj	long
;	O
}	O
}	O
goto	O
L6	O
;	O
L10	O
:	O
qm	long
=	O
q	pointer
[	O
np1	long
]	O
;	O
if	O
(	O
qm	long
!=	O
k	pointer
)	O
goto	O
L105	O
;	O
if	O
(	O
luk	long
==	O
0	int
)	O
goto	O
L17	O
;	O
if	O
(	O
lastid	long
!=	O
luk	long
)	O
goto	O
L11	O
;	O
irll	long
=	O
irl	pointer
[	O
lasti	long
]	O
;	O
ijl	pointer
[	O
k	pointer
]	O
=	O
irll	long
+	O
1	int
;	O
if	O
(	O
jl	pointer
[	O
irll	long
]	O
!=	O
k	pointer
)	O
--	O
ijl	pointer
[	O
k	pointer
]	O
;	O
goto	O
L17	O
;	O
L11	O
:	O
if	O
(	O
jlmin	long
>	O
jlptr	long
)	O
goto	O
L15	O
;	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
for	O
(	O
j	long
=	O
jlmin	long
;	O
j	long
<=	O
jlptr	long
;	O
++	O
j	long
)	O
{	O
if	O
(	O
(	O
i__3	long
=	O
jl	pointer
[	O
j	long
]	O
-	O
qm	long
)	O
>=	O
0	int
)	O
{	O
if	O
(	O
i__3	long
==	O
0	int
)	O
goto	O
L13	O
;	O
else	O
goto	O
L15	O
;	O
}	O
}	O
goto	O
L15	O
;	O
L13	O
:	O
ijl	pointer
[	O
k	pointer
]	O
=	O
j	long
;	O
for	O
(	O
i	long
=	O
j	long
;	O
i	long
<=	O
jlptr	long
;	O
++	O
i	long
)	O
{	O
if	O
(	O
jl	pointer
[	O
i	long
]	O
!=	O
qm	long
)	O
goto	O
L15	O
;	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
if	O
(	O
qm	long
>	O
*	O
n	pointer
)	O
goto	O
L17	O
;	O
}	O
jlptr	long
=	O
j	long
-	O
1	int
;	O
L15	O
:	O
jlmin	long
=	O
jlptr	long
+	O
1	int
;	O
ijl	pointer
[	O
k	pointer
]	O
=	O
jlmin	long
;	O
if	O
(	O
luk	long
==	O
0	int
)	O
{	O
goto	O
L17	O
;	O
}	O
jlptr	long
+=	O
luk	long
;	O
if	O
(	O
jlptr	long
>	O
*	O
jlmax	pointer
)	O
{	O
goto	O
L103	O
;	O
}	O
qm	long
=	O
q	pointer
[	O
np1	long
]	O
;	O
i__2	long
=	O
jlptr	long
;	O
for	O
(	O
j	long
=	O
jlmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
jl	pointer
[	O
j	long
]	O
=	O
qm	long
;	O
}	O
L17	O
:	O
irl	pointer
[	O
k	pointer
]	O
=	O
ijl	pointer
[	O
k	pointer
]	O
;	O
il	pointer
[	O
k	pointer
+	O
1	int
]	O
=	O
il	pointer
[	O
k	pointer
]	O
+	O
luk	long
;	O
q	pointer
[	O
np1	long
]	O
=	O
np1	long
;	O
luk	long
=	O
-	O
1	int
;	O
rk	long
=	O
r	pointer
[	O
k	pointer
]	O
;	O
jmin	long
=	O
ira	pointer
[	O
k	pointer
]	O
;	O
jmax	long
=	O
ia	pointer
[	O
rk	long
+	O
1	int
]	O
-	O
1	int
;	O
if	O
(	O
jmin	long
>	O
jmax	long
)	O
{	O
goto	O
L20	O
;	O
}	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
vj	long
=	O
ic	pointer
[	O
ja	pointer
[	O
j	long
]	O
]	O
;	O
qm	long
=	O
np1	long
;	O
L18	O
:	O
m	long
=	O
qm	long
;	O
qm	long
=	O
q	pointer
[	O
m	long
]	O
;	O
if	O
(	O
qm	long
<	O
vj	long
)	O
{	O
goto	O
L18	O
;	O
}	O
if	O
(	O
qm	long
==	O
vj	long
)	O
{	O
goto	O
L102	O
;	O
}	O
++	O
luk	long
;	O
q	pointer
[	O
m	long
]	O
=	O
vj	long
;	O
q	pointer
[	O
vj	long
]	O
=	O
qm	long
;	O
}	O
L20	O
:	O
lastid	long
=	O
0	int
;	O
lasti	long
=	O
0	int
;	O
iju	pointer
[	O
k	pointer
]	O
=	O
juptr	long
;	O
i	long
=	O
k	pointer
;	O
i1	long
=	O
jrl	pointer
[	O
k	pointer
]	O
;	O
L21	O
:	O
i	long
=	O
i1	long
;	O
if	O
(	O
i	long
==	O
0	int
)	O
{	O
goto	O
L26	O
;	O
}	O
i1	long
=	O
jrl	pointer
[	O
i	long
]	O
;	O
qm	long
=	O
np1	long
;	O
jmin	long
=	O
iru	pointer
[	O
i	long
]	O
;	O
jmax	long
=	O
iju	pointer
[	O
i	long
]	O
+	O
iu	pointer
[	O
i	long
+	O
1	int
]	O
-	O
iu	pointer
[	O
i	long
]	O
-	O
1	int
;	O
long_	long
=	O
jmax	long
-	O
jmin	long
;	O
if	O
(	O
long_	long
<	O
0	int
)	O
{	O
goto	O
L21	O
;	O
}	O
jtmp	long
=	O
ju	pointer
[	O
jmin	long
]	O
;	O
if	O
(	O
jtmp	long
==	O
k	pointer
)	O
{	O
goto	O
L22	O
;	O
}	O
++	O
long_	long
;	O
cend	long
=	O
ijl	pointer
[	O
i	long
]	O
+	O
il	pointer
[	O
i	long
+	O
1	int
]	O
-	O
il	pointer
[	O
i	long
]	O
;	O
++	O
irl	pointer
[	O
i	long
]	O
;	O
if	O
(	O
irl	pointer
[	O
i	long
]	O
>=	O
cend	long
)	O
{	O
goto	O
L22	O
;	O
}	O
j	long
=	O
jl	pointer
[	O
irl	pointer
[	O
i	long
]	O
]	O
;	O
jrl	pointer
[	O
i	long
]	O
=	O
jrl	pointer
[	O
j	long
]	O
;	O
jrl	pointer
[	O
j	long
]	O
=	O
i	long
;	O
L22	O
:	O
if	O
(	O
lastid	long
>=	O
long_	long
)	O
{	O
goto	O
L23	O
;	O
}	O
lasti	long
=	O
i	long
;	O
lastid	long
=	O
long_	long
;	O
L23	O
:	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
vj	long
=	O
ju	pointer
[	O
j	long
]	O
;	O
L24	O
:	O
m	long
=	O
qm	long
;	O
qm	long
=	O
q	pointer
[	O
m	long
]	O
;	O
if	O
(	O
qm	long
<	O
vj	long
)	O
{	O
goto	O
L24	O
;	O
}	O
if	O
(	O
qm	long
==	O
vj	long
)	O
{	O
goto	O
L25	O
;	O
}	O
++	O
luk	long
;	O
q	pointer
[	O
m	long
]	O
=	O
vj	long
;	O
q	pointer
[	O
vj	long
]	O
=	O
qm	long
;	O
qm	long
=	O
vj	long
;	O
L25	O
:	O
;	O
}	O
goto	O
L21	O
;	O
L26	O
:	O
if	O
(	O
il	pointer
[	O
k	pointer
+	O
1	int
]	O
<=	O
il	pointer
[	O
k	pointer
]	O
)	O
{	O
goto	O
L27	O
;	O
}	O
j	long
=	O
jl	pointer
[	O
irl	pointer
[	O
k	pointer
]	O
]	O
;	O
jrl	pointer
[	O
k	pointer
]	O
=	O
jrl	pointer
[	O
j	long
]	O
;	O
jrl	pointer
[	O
j	long
]	O
=	O
k	pointer
;	O
L27	O
:	O
qm	long
=	O
q	pointer
[	O
np1	long
]	O
;	O
if	O
(	O
qm	long
!=	O
k	pointer
)	O
{	O
goto	O
L105	O
;	O
}	O
if	O
(	O
luk	long
==	O
0	int
)	O
{	O
goto	O
L34	O
;	O
}	O
if	O
(	O
lastid	long
!=	O
luk	long
)	O
{	O
goto	O
L28	O
;	O
}	O
irul	long
=	O
iru	pointer
[	O
lasti	long
]	O
;	O
iju	pointer
[	O
k	pointer
]	O
=	O
irul	long
+	O
1	int
;	O
if	O
(	O
ju	pointer
[	O
irul	long
]	O
!=	O
k	pointer
)	O
{	O
--	O
iju	pointer
[	O
k	pointer
]	O
;	O
}	O
goto	O
L34	O
;	O
L28	O
:	O
if	O
(	O
jumin	long
>	O
juptr	long
)	O
goto	O
L32	O
;	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
for	O
(	O
j	long
=	O
jumin	long
;	O
j	long
<=	O
juptr	long
;	O
++	O
j	long
)	O
{	O
if	O
(	O
(	O
i__3	long
=	O
ju	pointer
[	O
j	long
]	O
-	O
qm	long
)	O
<	O
0	int
)	O
goto	O
L29	O
;	O
else	O
if	O
(	O
i__3	long
==	O
0	int
)	O
goto	O
L30	O
;	O
else	O
goto	O
L32	O
;	O
L29	O
:	O
;	O
}	O
goto	O
L32	O
;	O
L30	O
:	O
iju	pointer
[	O
k	pointer
]	O
=	O
j	long
;	O
for	O
(	O
i	long
=	O
j	long
;	O
i	long
<=	O
juptr	long
;	O
++	O
i	long
)	O
{	O
if	O
(	O
ju	pointer
[	O
i	long
]	O
!=	O
qm	long
)	O
goto	O
L32	O
;	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
if	O
(	O
qm	long
>	O
*	O
n	pointer
)	O
goto	O
L34	O
;	O
}	O
juptr	long
=	O
j	long
-	O
1	int
;	O
L32	O
:	O
jumin	long
=	O
juptr	long
+	O
1	int
;	O
iju	pointer
[	O
k	pointer
]	O
=	O
jumin	long
;	O
if	O
(	O
luk	long
==	O
0	int
)	O
goto	O
L34	O
;	O
juptr	long
+=	O
luk	long
;	O
if	O
(	O
juptr	long
>	O
*	O
jumax	pointer
)	O
goto	O
L106	O
;	O
qm	long
=	O
q	pointer
[	O
np1	long
]	O
;	O
for	O
(	O
j	long
=	O
jumin	long
;	O
j	long
<=	O
juptr	long
;	O
++	O
j	long
)	O
{	O
qm	long
=	O
q	pointer
[	O
qm	long
]	O
;	O
ju	pointer
[	O
j	long
]	O
=	O
qm	long
;	O
}	O
L34	O
:	O
iru	pointer
[	O
k	pointer
]	O
=	O
iju	pointer
[	O
k	pointer
]	O
;	O
iu	pointer
[	O
k	pointer
+	O
1	int
]	O
=	O
iu	pointer
[	O
k	pointer
]	O
+	O
luk	long
;	O
i	long
=	O
k	pointer
;	O
L35	O
:	O
i1	long
=	O
jru	pointer
[	O
i	long
]	O
;	O
if	O
(	O
r	pointer
[	O
i	long
]	O
<	O
0	int
)	O
goto	O
L36	O
;	O
rend	long
=	O
iju	pointer
[	O
i	long
]	O
+	O
iu	pointer
[	O
i	long
+	O
1	int
]	O
-	O
iu	pointer
[	O
i	long
]	O
;	O
if	O
(	O
iru	pointer
[	O
i	long
]	O
>=	O
rend	long
)	O
goto	O
L37	O
;	O
j	long
=	O
ju	pointer
[	O
iru	pointer
[	O
i	long
]	O
]	O
;	O
jru	pointer
[	O
i	long
]	O
=	O
jru	pointer
[	O
j	long
]	O
;	O
jru	pointer
[	O
j	long
]	O
=	O
i	long
;	O
goto	O
L37	O
;	O
L36	O
:	O
r	pointer
[	O
i	long
]	O
=	O
-	O
r	pointer
[	O
i	long
]	O
;	O
L37	O
:	O
i	long
=	O
i1	long
;	O
if	O
(	O
i	long
==	O
0	int
)	O
goto	O
L38	O
;	O
++	O
iru	pointer
[	O
i	long
]	O
;	O
goto	O
L35	O
;	O
L38	O
:	O
i	long
=	O
irac	pointer
[	O
k	pointer
]	O
;	O
if	O
(	O
i	long
==	O
0	int
)	O
goto	O
L41	O
;	O
L39	O
:	O
i1	long
=	O
jra	pointer
[	O
i	long
]	O
;	O
++	O
ira	pointer
[	O
i	long
]	O
;	O
if	O
(	O
ira	pointer
[	O
i	long
]	O
>=	O
ia	pointer
[	O
r	pointer
[	O
i	long
]	O
+	O
1	int
]	O
)	O
goto	O
L40	O
;	O
irai	long
=	O
ira	pointer
[	O
i	long
]	O
;	O
jairai	long
=	O
ic	pointer
[	O
ja	pointer
[	O
irai	long
]	O
]	O
;	O
if	O
(	O
jairai	long
>	O
i	long
)	O
goto	O
L40	O
;	O
jra	pointer
[	O
i	long
]	O
=	O
irac	pointer
[	O
jairai	long
]	O
;	O
irac	pointer
[	O
jairai	long
]	O
=	O
i	long
;	O
L40	O
:	O
i	long
=	O
i1	long
;	O
if	O
(	O
i	long
!=	O
0	int
)	O
goto	O
L39	O
;	O
L41	O
:	O
;	O
}	O
ijl	pointer
[	O
*	O
n	pointer
]	O
=	O
jlptr	long
;	O
iju	pointer
[	O
*	O
n	pointer
]	O
=	O
juptr	long
;	O
*	O
flag_	pointer
=	O
0	int
;	O
return	O
0	int
;	O
L101	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
+	O
rk	long
;	O
return	O
0	int
;	O
L102	O
:	O
*	O
flag_	pointer
=	O
(	O
*	O
n	pointer
<<	O
1	int
)	O
+	O
rk	long
;	O
return	O
0	int
;	O
L103	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
3	int
+	O
k	pointer
;	O
return	O
0	int
;	O
L105	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
5	int
+	O
k	pointer
;	O
return	O
0	int
;	O
L106	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
6	int
+	O
k	pointer
;	O
return	O
0	int
;	O
}	O
int	O
nroc_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ic	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
double	O
*	O
a	pointer
,	O
long	O
*	O
jar	pointer
,	O
double	O
*	O
ar	pointer
,	O
long	O
*	O
p	pointer
,	O
long	O
*	O
flag_	pointer
)	O
{	O
long	O
i__1	long
,	O
i__2	long
;	O
long	O
jmin	long
,	O
jmax	long
,	O
newj	long
,	O
i	long
,	O
j	long
,	O
k	pointer
;	O
--	O
p	pointer
;	O
--	O
ar	pointer
;	O
--	O
jar	pointer
;	O
--	O
a	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
--	O
ic	pointer
;	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
i__1	long
;	O
++	O
k	pointer
)	O
{	O
jmin	long
=	O
ia	pointer
[	O
k	pointer
]	O
;	O
jmax	long
=	O
ia	pointer
[	O
k	pointer
+	O
1	int
]	O
-	O
1	int
;	O
if	O
(	O
jmin	long
>	O
jmax	long
)	O
{	O
goto	O
L5	O
;	O
}	O
p	pointer
[	O
*	O
n	pointer
+	O
1	int
]	O
=	O
*	O
n	pointer
+	O
1	int
;	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
newj	long
=	O
ic	pointer
[	O
ja	pointer
[	O
j	long
]	O
]	O
;	O
i	long
=	O
*	O
n	pointer
+	O
1	int
;	O
L1	O
:	O
if	O
(	O
p	pointer
[	O
i	long
]	O
>=	O
newj	long
)	O
{	O
goto	O
L2	O
;	O
}	O
i	long
=	O
p	pointer
[	O
i	long
]	O
;	O
goto	O
L1	O
;	O
L2	O
:	O
if	O
(	O
p	pointer
[	O
i	long
]	O
==	O
newj	long
)	O
{	O
goto	O
L102	O
;	O
}	O
p	pointer
[	O
newj	long
]	O
=	O
p	pointer
[	O
i	long
]	O
;	O
p	pointer
[	O
i	long
]	O
=	O
newj	long
;	O
jar	pointer
[	O
newj	long
]	O
=	O
ja	pointer
[	O
j	long
]	O
;	O
ar	pointer
[	O
newj	long
]	O
=	O
a	pointer
[	O
j	long
]	O
;	O
}	O
i	long
=	O
*	O
n	pointer
+	O
1	int
;	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
i	long
=	O
p	pointer
[	O
i	long
]	O
;	O
ja	pointer
[	O
j	long
]	O
=	O
jar	pointer
[	O
i	long
]	O
;	O
a	pointer
[	O
j	long
]	O
=	O
ar	pointer
[	O
i	long
]	O
;	O
}	O
L5	O
:	O
;	O
}	O
*	O
flag_	pointer
=	O
0	int
;	O
return	O
0	int
;	O
L102	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
+	O
k	pointer
;	O
return	O
0	int
;	O
}	O
int	O
odrv_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
double	O
*	O
a	pointer
,	O
long	O
*	O
p	pointer
,	O
long	O
*	O
ip	pointer
,	O
long	O
*	O
nsp	pointer
,	O
long	O
*	O
isp	pointer
,	O
long	O
path	long
,	O
long	O
*	O
flag_	pointer
)	O
{	O
long	O
head	pointer
,	O
l	pointer
;	O
long	O
dflag	long
;	O
long	O
q	pointer
,	O
v	pointer
;	O
extern	O
int	O
md_	function
(	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
)	O
;	O
long	O
max_	pointer
,	O
tmp	pointer
;	O
extern	O
int	O
sro_	function
(	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
double	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
,	O
long	O
*	O
)	O
;	O
--	O
isp	pointer
;	O
--	O
ip	pointer
;	O
--	O
p	pointer
;	O
--	O
a	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
*	O
flag_	pointer
=	O
0	int
;	O
if	O
(	O
path	long
<	O
1	int
||	O
5	int
<	O
path	long
)	O
{	O
goto	O
L111	O
;	O
}	O
if	O
(	O
(	O
path	long
-	O
1	int
)	O
*	O
(	O
path	long
-	O
2	int
)	O
*	O
(	O
path	long
-	O
4	int
)	O
!=	O
0	int
)	O
{	O
goto	O
L1	O
;	O
}	O
max_	pointer
=	O
(	O
*	O
nsp	pointer
-	O
*	O
n	pointer
)	O
/	O
2	int
;	O
v	pointer
=	O
1	int
;	O
l	pointer
=	O
v	pointer
+	O
max_	pointer
;	O
head	pointer
=	O
l	pointer
+	O
max_	pointer
;	O
if	O
(	O
max_	pointer
<	O
*	O
n	pointer
)	O
goto	O
L110	O
;	O
md_	function
(	O
n	pointer
,	O
&	O
ia	pointer
[	O
1	int
]	O
,	O
&	O
ja	pointer
[	O
1	int
]	O
,	O
&	O
max_	pointer
,	O
&	O
isp	pointer
[	O
v	pointer
]	O
,	O
&	O
isp	pointer
[	O
l	pointer
]	O
,	O
&	O
isp	pointer
[	O
head	pointer
]	O
,	O
&	O
p	pointer
[	O
1	int
]	O
,	O
&	O
ip	pointer
[	O
1	int
]	O
,	O
&	O
isp	pointer
[	O
v	pointer
]	O
,	O
flag_	pointer
)	O
;	O
if	O
(	O
*	O
flag_	pointer
!=	O
0	int
)	O
goto	O
L100	O
;	O
L1	O
:	O
if	O
(	O
(	O
path	long
-	O
2	int
)	O
*	O
(	O
path	long
-	O
3	int
)	O
*	O
(	O
path	long
-	O
4	int
)	O
*	O
(	O
path	long
-	O
5	int
)	O
!=	O
0	int
)	O
{	O
goto	O
L2	O
;	O
}	O
tmp	pointer
=	O
*	O
nsp	pointer
+	O
1	int
-	O
*	O
n	pointer
;	O
q	pointer
=	O
tmp	pointer
-	O
(	O
ia	pointer
[	O
*	O
n	pointer
+	O
1	int
]	O
-	O
1	int
)	O
;	O
if	O
(	O
q	pointer
<	O
1	int
)	O
{	O
goto	O
L110	O
;	O
}	O
dflag	long
=	O
path	long
==	O
4	int
||	O
path	long
==	O
5	int
;	O
sro_	function
(	O
n	pointer
,	O
&	O
ip	pointer
[	O
1	int
]	O
,	O
&	O
ia	pointer
[	O
1	int
]	O
,	O
&	O
ja	pointer
[	O
1	int
]	O
,	O
&	O
a	pointer
[	O
1	int
]	O
,	O
&	O
isp	pointer
[	O
tmp	pointer
]	O
,	O
&	O
isp	pointer
[	O
q	pointer
]	O
,	O
&	O
dflag	long
)	O
;	O
L2	O
:	O
return	O
0	int
;	O
L100	O
:	O
return	O
0	int
;	O
L110	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
10	int
+	O
1	int
;	O
return	O
0	int
;	O
L111	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
11	int
+	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
sro_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ip	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
double	O
*	O
a	pointer
,	O
long	O
*	O
q	pointer
,	O
long	O
*	O
r	pointer
,	O
long	O
*	O
dflag	long
)	O
{	O
long	O
i__1	long
,	O
i__2	long
;	O
long	O
jmin	long
,	O
jmax	long
,	O
i	long
,	O
j	long
,	O
k	pointer
,	O
ilast	long
;	O
double	O
ak	double
;	O
long	O
jdummy	long
,	O
jak	long
;	O
--	O
r	pointer
;	O
--	O
q	pointer
;	O
--	O
a	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
--	O
ip	pointer
;	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
i__1	long
;	O
++	O
i	long
)	O
{	O
q	pointer
[	O
i	long
]	O
=	O
0	int
;	O
}	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
i__1	long
;	O
++	O
i	long
)	O
{	O
jmin	long
=	O
ia	pointer
[	O
i	long
]	O
;	O
jmax	long
=	O
ia	pointer
[	O
i	long
+	O
1	int
]	O
-	O
1	int
;	O
if	O
(	O
jmin	long
>	O
jmax	long
)	O
{	O
goto	O
L3	O
;	O
}	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
k	pointer
=	O
ja	pointer
[	O
j	long
]	O
;	O
if	O
(	O
ip	pointer
[	O
k	pointer
]	O
<	O
ip	pointer
[	O
i	long
]	O
)	O
{	O
ja	pointer
[	O
j	long
]	O
=	O
i	long
;	O
}	O
if	O
(	O
ip	pointer
[	O
k	pointer
]	O
>=	O
ip	pointer
[	O
i	long
]	O
)	O
{	O
k	pointer
=	O
i	long
;	O
}	O
r	pointer
[	O
j	long
]	O
=	O
k	pointer
;	O
++	O
q	pointer
[	O
k	pointer
]	O
;	O
}	O
L3	O
:	O
;	O
}	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
i__1	long
;	O
++	O
i	long
)	O
{	O
ia	pointer
[	O
i	long
+	O
1	int
]	O
=	O
ia	pointer
[	O
i	long
]	O
+	O
q	pointer
[	O
i	long
]	O
;	O
q	pointer
[	O
i	long
]	O
=	O
ia	pointer
[	O
i	long
+	O
1	int
]	O
;	O
}	O
ilast	long
=	O
0	int
;	O
jmin	long
=	O
ia	pointer
[	O
1	int
]	O
;	O
jmax	long
=	O
ia	pointer
[	O
*	O
n	pointer
+	O
1	int
]	O
-	O
1	int
;	O
j	long
=	O
jmax	long
;	O
i__1	long
=	O
jmax	long
;	O
for	O
(	O
jdummy	long
=	O
jmin	long
;	O
jdummy	long
<=	O
i__1	long
;	O
++	O
jdummy	long
)	O
{	O
i	long
=	O
r	pointer
[	O
j	long
]	O
;	O
if	O
(	O
!	O
(	O
*	O
dflag	long
)	O
||	O
ja	pointer
[	O
j	long
]	O
!=	O
i	long
||	O
i	long
==	O
ilast	long
)	O
{	O
goto	O
L5	O
;	O
}	O
r	pointer
[	O
j	long
]	O
=	O
ia	pointer
[	O
i	long
]	O
;	O
ilast	long
=	O
i	long
;	O
goto	O
L6	O
;	O
L5	O
:	O
--	O
q	pointer
[	O
i	long
]	O
;	O
r	pointer
[	O
j	long
]	O
=	O
q	pointer
[	O
i	long
]	O
;	O
L6	O
:	O
--	O
j	long
;	O
}	O
i__1	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__1	long
;	O
++	O
j	long
)	O
{	O
L7	O
:	O
if	O
(	O
r	pointer
[	O
j	long
]	O
==	O
j	long
)	O
{	O
goto	O
L8	O
;	O
}	O
k	pointer
=	O
r	pointer
[	O
j	long
]	O
;	O
r	pointer
[	O
j	long
]	O
=	O
r	pointer
[	O
k	pointer
]	O
;	O
r	pointer
[	O
k	pointer
]	O
=	O
k	pointer
;	O
jak	long
=	O
ja	pointer
[	O
k	pointer
]	O
;	O
ja	pointer
[	O
k	pointer
]	O
=	O
ja	pointer
[	O
j	long
]	O
;	O
ja	pointer
[	O
j	long
]	O
=	O
jak	long
;	O
ak	double
=	O
a	pointer
[	O
k	pointer
]	O
;	O
a	pointer
[	O
k	pointer
]	O
=	O
a	pointer
[	O
j	long
]	O
;	O
a	pointer
[	O
j	long
]	O
=	O
ak	double
;	O
goto	O
L7	O
;	O
L8	O
:	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
md_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
long	O
*	O
max_	pointer
,	O
long	O
*	O
v	pointer
,	O
long	O
*	O
l	pointer
,	O
long	O
*	O
head	pointer
,	O
long	O
*	O
last	pointer
,	O
long	O
*	O
next	pointer
,	O
long	O
*	O
mark	pointer
,	O
long	O
*	O
flag_	pointer
)	O
{	O
long	O
i__1	long
;	O
static	O
long	O
equiv_0	array
[	O
1	int
]	O
;	O
long	O
dmin_	pointer
,	O
tail	pointer
,	O
k	pointer
;	O
long	O
tag	pointer
;	O
--	O
mark	pointer
;	O
--	O
next	pointer
;	O
--	O
last	pointer
;	O
--	O
head	pointer
;	O
--	O
l	pointer
;	O
--	O
v	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
tag	pointer
=	O
0	int
;	O
mdi_	function
(	O
n	pointer
,	O
&	O
ia	pointer
[	O
1	int
]	O
,	O
&	O
ja	pointer
[	O
1	int
]	O
,	O
max_	pointer
,	O
&	O
v	pointer
[	O
1	int
]	O
,	O
&	O
l	pointer
[	O
1	int
]	O
,	O
&	O
head	pointer
[	O
1	int
]	O
,	O
&	O
last	pointer
[	O
1	int
]	O
,	O
&	O
next	pointer
[	O
1	int
]	O
,	O
&	O
mark	pointer
[	O
1	int
]	O
,	O
&	O
tag	pointer
,	O
flag_	pointer
)	O
;	O
if	O
(	O
*	O
flag_	pointer
!=	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
k	pointer
=	O
0	int
;	O
dmin_	pointer
=	O
1	int
;	O
L1	O
:	O
if	O
(	O
k	pointer
>=	O
*	O
n	pointer
)	O
{	O
goto	O
L4	O
;	O
}	O
L2	O
:	O
if	O
(	O
head	pointer
[	O
dmin_	pointer
]	O
>	O
0	int
)	O
{	O
goto	O
L3	O
;	O
}	O
++	O
dmin_	pointer
;	O
goto	O
L2	O
;	O
L3	O
:	O
*	O
vk	pointer
=	O
head	pointer
[	O
dmin_	pointer
]	O
;	O
head	pointer
[	O
dmin_	pointer
]	O
=	O
next	pointer
[	O
*	O
vk	pointer
]	O
;	O
if	O
(	O
head	pointer
[	O
dmin_	pointer
]	O
>	O
0	int
)	O
{	O
last	pointer
[	O
head	pointer
[	O
dmin_	pointer
]	O
]	O
=	O
-	O
dmin_	pointer
;	O
}	O
++	O
k	pointer
;	O
next	pointer
[	O
*	O
vk	pointer
]	O
=	O
-	O
k	pointer
;	O
last	pointer
[	O
*	O
ek	pointer
]	O
=	O
dmin_	pointer
-	O
1	int
;	O
tag	pointer
+=	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
mark	pointer
[	O
*	O
vk	pointer
]	O
=	O
tag	pointer
;	O
mdm_	function
(	O
vk	pointer
,	O
&	O
tail	pointer
,	O
&	O
v	pointer
[	O
1	int
]	O
,	O
&	O
l	pointer
[	O
1	int
]	O
,	O
&	O
last	pointer
[	O
1	int
]	O
,	O
&	O
next	pointer
[	O
1	int
]	O
,	O
&	O
mark	pointer
[	O
1	int
]	O
)	O
;	O
mdp_	function
(	O
&	O
k	pointer
,	O
ek	pointer
,	O
&	O
tail	pointer
,	O
&	O
v	pointer
[	O
1	int
]	O
,	O
&	O
l	pointer
[	O
1	int
]	O
,	O
&	O
head	pointer
[	O
1	int
]	O
,	O
&	O
last	pointer
[	O
1	int
]	O
,	O
&	O
next	pointer
[	O
1	int
]	O
,	O
&	O
mark	pointer
[	O
1	int
]	O
)	O
;	O
mdu_	function
(	O
ek	pointer
,	O
&	O
dmin_	pointer
,	O
&	O
v	pointer
[	O
1	int
]	O
,	O
&	O
l	pointer
[	O
1	int
]	O
,	O
&	O
head	pointer
[	O
1	int
]	O
,	O
&	O
last	pointer
[	O
1	int
]	O
,	O
&	O
next	pointer
[	O
1	int
]	O
,	O
&	O
mark	pointer
[	O
1	int
]	O
)	O
;	O
goto	O
L1	O
;	O
L4	O
:	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
i__1	long
;	O
++	O
k	pointer
)	O
{	O
next	pointer
[	O
k	pointer
]	O
=	O
-	O
next	pointer
[	O
k	pointer
]	O
;	O
last	pointer
[	O
next	pointer
[	O
k	pointer
]	O
]	O
=	O
k	pointer
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mdu_	function
(	O
long	O
*	O
ek	pointer
,	O
long	O
*	O
dmin_	pointer
,	O
long	O
*	O
v	pointer
,	O
long	O
*	O
l	pointer
,	O
long	O
*	O
head	pointer
,	O
long	O
*	O
last	pointer
,	O
long	O
*	O
next	pointer
,	O
long	O
*	O
mark	pointer
)	O
{	O
long	O
i__1	long
,	O
i__2	long
;	O
static	O
long	O
equiv_0	array
[	O
1	int
]	O
;	O
long	O
b	pointer
,	O
i	long
,	O
s	long
;	O
long	O
vb	long
,	O
vi	long
;	O
long	O
blpmax	long
,	O
ilpmax	long
,	O
tag	pointer
,	O
blp	long
,	O
dvi	long
,	O
evi	long
,	O
ilp	long
;	O
--	O
mark	pointer
;	O
--	O
next	pointer
;	O
--	O
last	pointer
;	O
--	O
head	pointer
;	O
--	O
l	pointer
;	O
--	O
v	pointer
;	O
tag	pointer
=	O
mark	pointer
[	O
*	O
ek	pointer
]	O
-	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
i	long
=	O
*	O
ek	pointer
;	O
ilpmax	long
=	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
if	O
(	O
ilpmax	long
<=	O
0	int
)	O
{	O
goto	O
L11	O
;	O
}	O
i__1	long
=	O
ilpmax	long
;	O
for	O
(	O
ilp	long
=	O
1	int
;	O
ilp	long
<=	O
i__1	long
;	O
++	O
ilp	long
)	O
{	O
i	long
=	O
l	pointer
[	O
i	long
]	O
;	O
vi	long
=	O
v	pointer
[	O
i	long
]	O
;	O
if	O
(	O
(	O
i__2	long
=	O
last	pointer
[	O
vi	long
]	O
)	O
<	O
0	int
)	O
{	O
goto	O
L1	O
;	O
}	O
else	O
if	O
(	O
i__2	long
==	O
0	int
)	O
{	O
goto	O
L10	O
;	O
}	O
else	O
goto	O
L8	O
;	O
L1	O
:	O
++	O
tag	pointer
;	O
dvi	long
=	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
s	long
=	O
l	pointer
[	O
vi	long
]	O
;	O
L2	O
:	O
s	long
=	O
l	pointer
[	O
s	long
]	O
;	O
if	O
(	O
s	long
==	O
0	int
)	O
{	O
goto	O
L9	O
;	O
}	O
*	O
vs	O
=	O
v	pointer
[	O
s	long
]	O
;	O
if	O
(	O
next	pointer
[	O
*	O
vs	O
]	O
<	O
0	int
)	O
{	O
goto	O
L3	O
;	O
}	O
mark	pointer
[	O
*	O
vs	O
]	O
=	O
tag	pointer
;	O
++	O
dvi	long
;	O
goto	O
L5	O
;	O
L3	O
:	O
if	O
(	O
mark	pointer
[	O
*	O
es	long
]	O
<	O
0	int
)	O
{	O
goto	O
L6	O
;	O
}	O
b	pointer
=	O
*	O
es	long
;	O
blpmax	long
=	O
last	pointer
[	O
*	O
es	long
]	O
;	O
i__2	long
=	O
blpmax	long
;	O
for	O
(	O
blp	long
=	O
1	int
;	O
blp	long
<=	O
i__2	long
;	O
++	O
blp	long
)	O
{	O
b	pointer
=	O
l	pointer
[	O
b	pointer
]	O
;	O
vb	long
=	O
v	pointer
[	O
b	pointer
]	O
;	O
if	O
(	O
mark	pointer
[	O
vb	long
]	O
>=	O
tag	pointer
)	O
{	O
goto	O
L4	O
;	O
}	O
mark	pointer
[	O
vb	long
]	O
=	O
tag	pointer
;	O
++	O
dvi	long
;	O
L4	O
:	O
;	O
}	O
L5	O
:	O
goto	O
L2	O
;	O
L6	O
:	O
last	pointer
[	O
vi	long
]	O
=	O
0	int
;	O
--	O
mark	pointer
[	O
*	O
es	long
]	O
;	O
L7	O
:	O
s	long
=	O
l	pointer
[	O
s	long
]	O
;	O
if	O
(	O
s	long
==	O
0	int
)	O
{	O
goto	O
L10	O
;	O
}	O
*	O
es	long
=	O
v	pointer
[	O
s	long
]	O
;	O
if	O
(	O
mark	pointer
[	O
*	O
es	long
]	O
<	O
0	int
)	O
{	O
--	O
mark	pointer
[	O
*	O
es	long
]	O
;	O
}	O
goto	O
L7	O
;	O
L8	O
:	O
evi	long
=	O
last	pointer
[	O
vi	long
]	O
;	O
dvi	long
=	O
last	pointer
[	O
*	O
ek	pointer
]	O
+	O
last	pointer
[	O
evi	long
]	O
+	O
mark	pointer
[	O
evi	long
]	O
;	O
mark	pointer
[	O
evi	long
]	O
=	O
0	int
;	O
L9	O
:	O
next	pointer
[	O
vi	long
]	O
=	O
head	pointer
[	O
dvi	long
]	O
;	O
head	pointer
[	O
dvi	long
]	O
=	O
vi	long
;	O
last	pointer
[	O
vi	long
]	O
=	O
-	O
dvi	long
;	O
if	O
(	O
next	pointer
[	O
vi	long
]	O
>	O
0	int
)	O
{	O
last	pointer
[	O
next	pointer
[	O
vi	long
]	O
]	O
=	O
vi	long
;	O
}	O
if	O
(	O
dvi	long
<	O
*	O
dmin_	pointer
)	O
{	O
*	O
dmin_	pointer
=	O
dvi	long
;	O
}	O
L10	O
:	O
;	O
}	O
L11	O
:	O
return	O
0	int
;	O
}	O
int	O
mdp_	function
(	O
long	O
*	O
k	pointer
,	O
long	O
*	O
ek	pointer
,	O
long	O
*	O
tail	pointer
,	O
long	O
*	O
v	pointer
,	O
long	O
*	O
l	pointer
,	O
long	O
*	O
head	pointer
,	O
long	O
*	O
last	pointer
,	O
long	O
*	O
next	pointer
,	O
long	O
*	O
mark	pointer
)	O
{	O
long	O
i__1	long
;	O
long	O
i	long
,	O
s	long
,	O
li	long
,	O
es	long
,	O
vi	long
,	O
ls	long
,	O
ilpmax	long
,	O
tag	pointer
,	O
evi	long
,	O
ilp	long
,	O
lvi	long
;	O
long	O
free	function
=	O
0	int
;	O
--	O
mark	pointer
;	O
--	O
next	pointer
;	O
--	O
last	pointer
;	O
--	O
head	pointer
;	O
--	O
l	pointer
;	O
--	O
v	pointer
;	O
tag	pointer
=	O
mark	pointer
[	O
*	O
ek	pointer
]	O
;	O
li	long
=	O
*	O
ek	pointer
;	O
ilpmax	long
=	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
if	O
(	O
ilpmax	long
<=	O
0	int
)	O
{	O
goto	O
L12	O
;	O
}	O
i__1	long
=	O
ilpmax	long
;	O
for	O
(	O
ilp	long
=	O
1	int
;	O
ilp	long
<=	O
i__1	long
;	O
++	O
ilp	long
)	O
{	O
i	long
=	O
li	long
;	O
li	long
=	O
l	pointer
[	O
i	long
]	O
;	O
vi	long
=	O
v	pointer
[	O
li	long
]	O
;	O
if	O
(	O
last	pointer
[	O
vi	long
]	O
==	O
0	int
)	O
{	O
goto	O
L3	O
;	O
}	O
if	O
(	O
last	pointer
[	O
vi	long
]	O
>	O
0	int
)	O
{	O
goto	O
L1	O
;	O
}	O
head	pointer
[	O
-	O
last	pointer
[	O
vi	long
]	O
]	O
=	O
next	pointer
[	O
vi	long
]	O
;	O
goto	O
L2	O
;	O
L1	O
:	O
next	pointer
[	O
last	pointer
[	O
vi	long
]	O
]	O
=	O
next	pointer
[	O
vi	long
]	O
;	O
L2	O
:	O
if	O
(	O
next	pointer
[	O
vi	long
]	O
>	O
0	int
)	O
{	O
last	pointer
[	O
next	pointer
[	O
vi	long
]	O
]	O
=	O
last	pointer
[	O
vi	long
]	O
;	O
}	O
L3	O
:	O
ls	long
=	O
vi	long
;	O
L4	O
:	O
s	long
=	O
ls	long
;	O
ls	long
=	O
l	pointer
[	O
s	long
]	O
;	O
if	O
(	O
ls	long
==	O
0	int
)	O
{	O
goto	O
L6	O
;	O
}	O
es	long
=	O
v	pointer
[	O
ls	long
]	O
;	O
if	O
(	O
mark	pointer
[	O
es	long
]	O
<	O
tag	pointer
)	O
{	O
goto	O
L5	O
;	O
}	O
free	function
=	O
ls	long
;	O
l	pointer
[	O
s	long
]	O
=	O
l	pointer
[	O
ls	long
]	O
;	O
ls	long
=	O
s	long
;	O
L5	O
:	O
goto	O
L4	O
;	O
L6	O
:	O
lvi	long
=	O
l	pointer
[	O
vi	long
]	O
;	O
if	O
(	O
lvi	long
!=	O
0	int
)	O
{	O
goto	O
L7	O
;	O
}	O
l	pointer
[	O
i	long
]	O
=	O
l	pointer
[	O
li	long
]	O
;	O
li	long
=	O
i	long
;	O
++	O
(	O
*	O
k	pointer
)	O
;	O
next	pointer
[	O
vi	long
]	O
=	O
-	O
(	O
*	O
k	pointer
)	O
;	O
--	O
last	pointer
[	O
*	O
ek	pointer
]	O
;	O
goto	O
L11	O
;	O
L7	O
:	O
if	O
(	O
l	pointer
[	O
lvi	long
]	O
!=	O
0	int
)	O
{	O
goto	O
L9	O
;	O
}	O
evi	long
=	O
v	pointer
[	O
lvi	long
]	O
;	O
if	O
(	O
next	pointer
[	O
evi	long
]	O
>=	O
0	int
)	O
{	O
goto	O
L9	O
;	O
}	O
if	O
(	O
mark	pointer
[	O
evi	long
]	O
<	O
0	int
)	O
{	O
goto	O
L8	O
;	O
}	O
last	pointer
[	O
vi	long
]	O
=	O
evi	long
;	O
mark	pointer
[	O
evi	long
]	O
=	O
-	O
1	int
;	O
l	pointer
[	O
*	O
tail	pointer
]	O
=	O
li	long
;	O
*	O
tail	pointer
=	O
li	long
;	O
l	pointer
[	O
i	long
]	O
=	O
l	pointer
[	O
li	long
]	O
;	O
li	long
=	O
i	long
;	O
goto	O
L10	O
;	O
L8	O
:	O
last	pointer
[	O
vi	long
]	O
=	O
0	int
;	O
--	O
mark	pointer
[	O
evi	long
]	O
;	O
goto	O
L10	O
;	O
L9	O
:	O
last	pointer
[	O
vi	long
]	O
=	O
-	O
(	O
*	O
ek	pointer
)	O
;	O
L10	O
:	O
v	pointer
[	O
free	function
]	O
=	O
*	O
ek	pointer
;	O
l	pointer
[	O
free	function
]	O
=	O
l	pointer
[	O
vi	long
]	O
;	O
l	pointer
[	O
vi	long
]	O
=	O
free	function
;	O
L11	O
:	O
;	O
}	O
L12	O
:	O
l	pointer
[	O
*	O
tail	pointer
]	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mdm_	function
(	O
long	O
*	O
vk	pointer
,	O
long	O
*	O
tail	pointer
,	O
long	O
*	O
v	pointer
,	O
long	O
*	O
l	pointer
,	O
long	O
*	O
last	pointer
,	O
long	O
*	O
next	pointer
,	O
long	O
*	O
mark	pointer
)	O
{	O
long	O
i__1	long
;	O
static	O
long	O
equiv_0	array
[	O
1	int
]	O
;	O
long	O
b	pointer
,	O
s	long
,	O
lb	long
;	O
long	O
vb	long
,	O
ls	long
;	O
long	O
blpmax	long
,	O
tag	pointer
,	O
blp	long
;	O
--	O
mark	pointer
;	O
--	O
next	pointer
;	O
--	O
last	pointer
;	O
--	O
l	pointer
;	O
--	O
v	pointer
;	O
tag	pointer
=	O
mark	pointer
[	O
*	O
vk	pointer
]	O
;	O
*	O
tail	pointer
=	O
*	O
vk	pointer
;	O
ls	long
=	O
l	pointer
[	O
*	O
vk	pointer
]	O
;	O
L1	O
:	O
s	long
=	O
ls	long
;	O
if	O
(	O
s	long
==	O
0	int
)	O
{	O
goto	O
L5	O
;	O
}	O
ls	long
=	O
l	pointer
[	O
s	long
]	O
;	O
*	O
vs	O
=	O
v	pointer
[	O
s	long
]	O
;	O
if	O
(	O
next	pointer
[	O
*	O
vs	O
]	O
<	O
0	int
)	O
{	O
goto	O
L2	O
;	O
}	O
mark	pointer
[	O
*	O
vs	O
]	O
=	O
tag	pointer
;	O
l	pointer
[	O
*	O
tail	pointer
]	O
=	O
s	long
;	O
*	O
tail	pointer
=	O
s	long
;	O
goto	O
L4	O
;	O
L2	O
:	O
lb	long
=	O
l	pointer
[	O
*	O
es	long
]	O
;	O
blpmax	long
=	O
last	pointer
[	O
*	O
es	long
]	O
;	O
i__1	long
=	O
blpmax	long
;	O
for	O
(	O
blp	long
=	O
1	int
;	O
blp	long
<=	O
i__1	long
;	O
++	O
blp	long
)	O
{	O
b	pointer
=	O
lb	long
;	O
lb	long
=	O
l	pointer
[	O
b	pointer
]	O
;	O
vb	long
=	O
v	pointer
[	O
b	pointer
]	O
;	O
if	O
(	O
mark	pointer
[	O
vb	long
]	O
>=	O
tag	pointer
)	O
{	O
goto	O
L3	O
;	O
}	O
mark	pointer
[	O
vb	long
]	O
=	O
tag	pointer
;	O
l	pointer
[	O
*	O
tail	pointer
]	O
=	O
b	pointer
;	O
*	O
tail	pointer
=	O
b	pointer
;	O
L3	O
:	O
;	O
}	O
mark	pointer
[	O
*	O
es	long
]	O
=	O
tag	pointer
;	O
L4	O
:	O
goto	O
L1	O
;	O
L5	O
:	O
l	pointer
[	O
*	O
tail	pointer
]	O
=	O
0	int
;	O
return	O
0	int
;	O
}	O
int	O
mdi_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
long	O
*	O
max_	pointer
,	O
long	O
*	O
v	pointer
,	O
long	O
*	O
l	pointer
,	O
long	O
*	O
head	pointer
,	O
long	O
*	O
last	pointer
,	O
long	O
*	O
next	pointer
,	O
long	O
*	O
mark	pointer
,	O
long	O
*	O
tag	pointer
,	O
long	O
*	O
flag_	pointer
)	O
{	O
long	O
i__1	long
,	O
i__2	long
,	O
i__3	long
;	O
long	O
jmin	long
,	O
jmax	long
,	O
kmax	long
,	O
j	long
,	O
k	pointer
,	O
vi	long
,	O
vj	long
,	O
nextvi	long
,	O
dvi	long
,	O
sfs	long
,	O
lvk	long
;	O
--	O
mark	pointer
;	O
--	O
next	pointer
;	O
--	O
last	pointer
;	O
--	O
head	pointer
;	O
--	O
l	pointer
;	O
--	O
v	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
vi	long
=	O
1	int
;	O
vi	long
<=	O
i__1	long
;	O
++	O
vi	long
)	O
{	O
mark	pointer
[	O
vi	long
]	O
=	O
1	int
;	O
l	pointer
[	O
vi	long
]	O
=	O
0	int
;	O
head	pointer
[	O
vi	long
]	O
=	O
0	int
;	O
}	O
sfs	long
=	O
*	O
n	pointer
+	O
1	int
;	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
vi	long
=	O
1	int
;	O
vi	long
<=	O
i__1	long
;	O
++	O
vi	long
)	O
{	O
jmin	long
=	O
ia	pointer
[	O
vi	long
]	O
;	O
jmax	long
=	O
ia	pointer
[	O
vi	long
+	O
1	int
]	O
-	O
1	int
;	O
if	O
(	O
jmin	long
>	O
jmax	long
)	O
{	O
goto	O
L6	O
;	O
}	O
i__2	long
=	O
jmax	long
;	O
for	O
(	O
j	long
=	O
jmin	long
;	O
j	long
<=	O
i__2	long
;	O
++	O
j	long
)	O
{	O
vj	long
=	O
ja	pointer
[	O
j	long
]	O
;	O
if	O
(	O
(	O
i__3	long
=	O
vj	long
-	O
vi	long
)	O
<	O
0	int
)	O
{	O
goto	O
L2	O
;	O
}	O
else	O
if	O
(	O
i__3	long
==	O
0	int
)	O
{	O
goto	O
L5	O
;	O
}	O
else	O
{	O
goto	O
L4	O
;	O
}	O
L2	O
:	O
lvk	long
=	O
vi	long
;	O
kmax	long
=	O
mark	pointer
[	O
vi	long
]	O
-	O
1	int
;	O
if	O
(	O
kmax	long
==	O
0	int
)	O
{	O
goto	O
L4	O
;	O
}	O
i__3	long
=	O
kmax	long
;	O
for	O
(	O
k	pointer
=	O
1	int
;	O
k	pointer
<=	O
i__3	long
;	O
++	O
k	pointer
)	O
{	O
lvk	long
=	O
l	pointer
[	O
lvk	long
]	O
;	O
if	O
(	O
v	pointer
[	O
lvk	long
]	O
==	O
vj	long
)	O
{	O
goto	O
L5	O
;	O
}	O
}	O
L4	O
:	O
if	O
(	O
sfs	long
>=	O
*	O
max_	pointer
)	O
{	O
goto	O
L101	O
;	O
}	O
++	O
mark	pointer
[	O
vi	long
]	O
;	O
v	pointer
[	O
sfs	long
]	O
=	O
vj	long
;	O
l	pointer
[	O
sfs	long
]	O
=	O
l	pointer
[	O
vi	long
]	O
;	O
l	pointer
[	O
vi	long
]	O
=	O
sfs	long
;	O
++	O
sfs	long
;	O
++	O
mark	pointer
[	O
vj	long
]	O
;	O
v	pointer
[	O
sfs	long
]	O
=	O
vi	long
;	O
l	pointer
[	O
sfs	long
]	O
=	O
l	pointer
[	O
vj	long
]	O
;	O
l	pointer
[	O
vj	long
]	O
=	O
sfs	long
;	O
++	O
sfs	long
;	O
L5	O
:	O
;	O
}	O
L6	O
:	O
;	O
}	O
i__1	long
=	O
*	O
n	pointer
;	O
for	O
(	O
vi	long
=	O
1	int
;	O
vi	long
<=	O
i__1	long
;	O
++	O
vi	long
)	O
{	O
dvi	long
=	O
mark	pointer
[	O
vi	long
]	O
;	O
next	pointer
[	O
vi	long
]	O
=	O
head	pointer
[	O
dvi	long
]	O
;	O
head	pointer
[	O
dvi	long
]	O
=	O
vi	long
;	O
last	pointer
[	O
vi	long
]	O
=	O
-	O
dvi	long
;	O
nextvi	long
=	O
next	pointer
[	O
vi	long
]	O
;	O
if	O
(	O
nextvi	long
>	O
0	int
)	O
{	O
last	pointer
[	O
nextvi	long
]	O
=	O
vi	long
;	O
}	O
mark	pointer
[	O
vi	long
]	O
=	O
*	O
tag	pointer
;	O
}	O
return	O
0	int
;	O
L101	O
:	O
*	O
flag_	pointer
=	O
*	O
n	pointer
*	O
9	int
+	O
vi	long
;	O
return	O
0	int
;	O
}	O
int	O
jgroup_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
ia	pointer
,	O
long	O
*	O
ja	pointer
,	O
long	O
*	O
maxg	pointer
,	O
long	O
*	O
ngrp	pointer
,	O
long	O
*	O
igp	pointer
,	O
long	O
*	O
jgp	pointer
,	O
long	O
*	O
incl	pointer
,	O
long	O
*	O
jdone	pointer
,	O
long	O
*	O
ier	pointer
)	O
{	O
long	O
ncol	long
,	O
kmin	long
,	O
kmax	long
,	O
i	long
,	O
j	long
,	O
k	pointer
,	O
ng	long
;	O
--	O
jdone	pointer
;	O
--	O
incl	pointer
;	O
--	O
jgp	pointer
;	O
--	O
igp	pointer
;	O
--	O
ja	pointer
;	O
--	O
ia	pointer
;	O
*	O
ier	pointer
=	O
0	int
;	O
for	O
(	O
j	long
=	O
1	int
;	O
j	long
<=	O
*	O
n	pointer
;	O
++	O
j	long
)	O
jdone	pointer
[	O
j	long
]	O
=	O
0	int
;	O
ncol	long
=	O
1	int
;	O
for	O
(	O
ng	long
=	O
1	int
;	O
ng	long
<=	O
*	O
maxg	pointer
;	O
++	O
ng	long
)	O
{	O
igp	pointer
[	O
ng	long
]	O
=	O
ncol	long
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
*	O
n	pointer
;	O
++	O
i	long
)	O
incl	pointer
[	O
i	long
]	O
=	O
0	int
;	O
for	O
(	O
j	long
=	O
1	int
;	O
j	long
<=	O
*	O
n	pointer
;	O
++	O
j	long
)	O
{	O
if	O
(	O
jdone	pointer
[	O
j	long
]	O
==	O
1	int
)	O
goto	O
L50	O
;	O
kmin	long
=	O
ia	pointer
[	O
j	long
]	O
;	O
kmax	long
=	O
ia	pointer
[	O
j	long
+	O
1	int
]	O
-	O
1	int
;	O
for	O
(	O
k	pointer
=	O
kmin	long
;	O
k	pointer
<=	O
kmax	long
;	O
++	O
k	pointer
)	O
{	O
i	long
=	O
ja	pointer
[	O
k	pointer
]	O
;	O
if	O
(	O
incl	pointer
[	O
i	long
]	O
==	O
1	int
)	O
goto	O
L50	O
;	O
}	O
jgp	pointer
[	O
ncol	long
]	O
=	O
j	long
;	O
++	O
ncol	long
;	O
jdone	pointer
[	O
j	long
]	O
=	O
1	int
;	O
for	O
(	O
k	pointer
=	O
kmin	long
;	O
k	pointer
<=	O
kmax	long
;	O
++	O
k	pointer
)	O
{	O
i	long
=	O
ja	pointer
[	O
k	pointer
]	O
;	O
incl	pointer
[	O
i	long
]	O
=	O
1	int
;	O
}	O
L50	O
:	O
;	O
}	O
if	O
(	O
ncol	long
==	O
igp	pointer
[	O
ng	long
]	O
)	O
goto	O
L70	O
;	O
}	O
if	O
(	O
ncol	long
<=	O
*	O
n	pointer
)	O
goto	O
L80	O
;	O
ng	long
=	O
*	O
maxg	pointer
;	O
L70	O
:	O
*	O
ngrp	pointer
=	O
ng	long
-	O
1	int
;	O
return	O
0	int
;	O
L80	O
:	O
*	O
ier	pointer
=	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
ewset_	function
(	O
long	O
*	O
n	pointer
,	O
long	O
*	O
itol	pointer
,	O
double	O
*	O
rtol	pointer
,	O
double	O
*	O
atol	function
,	O
double	O
*	O
ycur	pointer
,	O
double	O
*	O
ewt	pointer
)	O
{	O
long	O
i	long
;	O
switch	O
(	O
*	O
itol	pointer
)	O
{	O
case	O
1	int
:	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
*	O
n	pointer
;	O
++	O
i	long
)	O
ewt	pointer
[	O
i	long
]	O
=	O
rtol	pointer
[	O
0	int
]	O
*	O
fabs	function
(	O
ycur	pointer
[	O
i	long
]	O
)	O
+	O
atol	function
[	O
0	int
]	O
;	O
break	O
;	O
case	O
2	int
:	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
*	O
n	pointer
;	O
++	O
i	long
)	O
ewt	pointer
[	O
i	long
]	O
=	O
rtol	pointer
[	O
0	int
]	O
*	O
fabs	function
(	O
ycur	pointer
[	O
i	long
]	O
)	O
+	O
atol	function
[	O
i	long
]	O
;	O
break	O
;	O
case	O
3	int
:	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
*	O
n	pointer
;	O
++	O
i	long
)	O
ewt	pointer
[	O
i	long
]	O
=	O
rtol	pointer
[	O
i	long
]	O
*	O
fabs	function
(	O
ycur	pointer
[	O
i	long
]	O
)	O
+	O
atol	function
[	O
0	int
]	O
;	O
break	O
;	O
case	O
4	int
:	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
*	O
n	pointer
;	O
++	O
i	long
)	O
ewt	pointer
[	O
i	long
]	O
=	O
rtol	pointer
[	O
i	long
]	O
*	O
fabs	function
(	O
ycur	pointer
[	O
i	long
]	O
)	O
+	O
atol	function
[	O
i	long
]	O
;	O
break	O
;	O
}	O
return	O
0	int
;	O
}	O
