int	O
_API_farc	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
int	O
prev_num_segments	int
;	O
plPoint	struct
p0	struct
,	O
p1	struct
,	O
pc	struct
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"farc: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
!=	O
(	O
plPath	struct
*	O
)	O
NULL	O
&&	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
!=	O
PATH_SEGMENT_LIST	int
||	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
==	O
PATH_SEGMENT_LIST	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
primitive	enum
)	O
)	O
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
x0	double
!=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
||	O
y0	function
!=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
)	O
{	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
=	O
x0	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
=	O
y0	function
;	O
}	O
p0	struct
.	O
x	double
=	O
x0	double
;	O
p0	struct
.	O
y	double
=	O
y0	function
;	O
p1	struct
.	O
x	double
=	O
x1	double
;	O
p1	struct
.	O
y	double
=	O
y1	function
;	O
pc	struct
.	O
x	double
=	O
xc	int
;	O
pc	struct
.	O
y	double
=	O
yc	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
==	O
(	O
plPath	struct
*	O
)	O
NULL	O
)	O
{	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
=	O
_new_plPath	function
(	O
)	O
;	O
prev_num_segments	int
=	O
0	int
;	O
_add_moveto	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p0	struct
)	O
;	O
}	O
else	O
prev_num_segments	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
points_are_connected	enum
)	O
_add_line	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p1	struct
)	O
;	O
else	O
if	O
(	O
x0	double
==	O
x1	double
&&	O
y0	function
==	O
y1	function
)	O
_add_line	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p1	struct
)	O
;	O
else	O
{	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
==	O
2	int
)	O
{	O
_pl_g_maybe_replace_arc	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
>	O
2	int
)	O
prev_num_segments	int
=	O
0	int
;	O
}	O
pc	struct
=	O
_truecenter	function
(	O
p0	struct
,	O
p1	struct
,	O
pc	struct
)	O
;	O
if	O
(	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
==	O
1	int
)	O
||	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
true	int
)	O
&&	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	enum
==	O
AS_ANY	int
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	enum
==	O
AS_UNIFORM	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
uniform	enum
)	O
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	enum
==	O
AS_AXES_PRESERVED	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
axes_preserved	enum
)	O
)	O
)	O
_add_arc	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
else	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	enum
==	O
AS_ANY	int
)	O
_add_arc_as_bezier3	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
else	O
_add_arc_as_lines	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
}	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
=	O
p1	struct
;	O
_plotter	pointer
->	O
maybe_prepaint_segments	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
prev_num_segments	int
)	O
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
>=	O
_plotter	pointer
->	O
data	pointer
->	O
max_unfilled_path_length	int
)	O
&&	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fill_type	int
==	O
0	int
)	O
&&	O
_plotter	pointer
->	O
path_is_flushable	pointer
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
_API_fellarc	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
int	O
prev_num_segments	int
;	O
plPoint	struct
pc	struct
,	O
p0	struct
,	O
p1	struct
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"fellarc: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
!=	O
(	O
plPath	struct
*	O
)	O
NULL	O
&&	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
!=	O
PATH_SEGMENT_LIST	int
||	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
==	O
PATH_SEGMENT_LIST	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
primitive	enum
)	O
)	O
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
x0	double
!=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
||	O
y0	function
!=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
)	O
{	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
=	O
x0	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
=	O
y0	function
;	O
}	O
p0	struct
.	O
x	double
=	O
x0	double
;	O
p0	struct
.	O
y	double
=	O
y0	function
;	O
p1	struct
.	O
x	double
=	O
x1	double
;	O
p1	struct
.	O
y	double
=	O
y1	function
;	O
pc	struct
.	O
x	double
=	O
xc	int
;	O
pc	struct
.	O
y	double
=	O
yc	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
==	O
(	O
plPath	struct
*	O
)	O
NULL	O
)	O
{	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
=	O
_new_plPath	function
(	O
)	O
;	O
prev_num_segments	int
=	O
0	int
;	O
_add_moveto	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p0	struct
)	O
;	O
}	O
else	O
prev_num_segments	int
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
points_are_connected	enum
)	O
_add_line	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p1	struct
)	O
;	O
else	O
if	O
(	O
x0	double
==	O
x1	double
&&	O
y0	function
==	O
y1	function
)	O
_add_line	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p1	struct
)	O
;	O
else	O
if	O
(	O
COLLINEAR	O
(	O
p0	struct
,	O
p1	struct
,	O
pc	struct
)	O
)	O
_add_line	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p1	struct
)	O
;	O
else	O
{	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
==	O
2	int
)	O
{	O
_pl_g_maybe_replace_arc	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
>	O
2	int
)	O
prev_num_segments	int
=	O
0	int
;	O
}	O
if	O
(	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
==	O
1	int
)	O
||	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
==	O
true	int
)	O
&&	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
==	O
AS_ANY	int
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
==	O
AS_UNIFORM	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
uniform	enum
)	O
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
==	O
AS_AXES_PRESERVED	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
axes_preserved	enum
&&	O
(	O
(	O
y0	function
==	O
yc	int
&&	O
x1	double
==	O
xc	int
)	O
||	O
(	O
x0	double
==	O
xc	int
&&	O
y1	function
==	O
yc	int
)	O
)	O
)	O
)	O
)	O
_add_ellarc	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
else	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	enum
==	O
AS_ANY	int
)	O
_add_ellarc_as_bezier3	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
else	O
_add_ellarc_as_lines	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
p1	struct
)	O
;	O
}	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
=	O
p1	struct
;	O
_plotter	pointer
->	O
maybe_prepaint_segments	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
prev_num_segments	int
)	O
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
num_segments	int
>=	O
_plotter	pointer
->	O
data	pointer
->	O
max_unfilled_path_length	int
)	O
&&	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fill_type	int
==	O
0	int
)	O
&&	O
_plotter	pointer
->	O
path_is_flushable	pointer
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
return	O
0	int
;	O
}	O
