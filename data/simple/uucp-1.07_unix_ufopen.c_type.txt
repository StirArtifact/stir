openfile_t	pointer
esysdep_user_fopen	function
(	O
zfile	pointer
,	O
frd	int
,	O
fbinary	int
)	O
const	O
char	O
*	O
zfile	pointer
;	O
boolean	int
frd	int
;	O
boolean	int
fbinary	int
ATTRIBUTE_UNUSED	O
;	O
{	O
uid_t	int
ieuid	int
;	O
gid_t	int
iegid	int
;	O
openfile_t	pointer
e	pointer
;	O
const	O
char	O
*	O
zerr	pointer
;	O
int	O
o	int
=	O
0	int
;	O
if	O
(	O
!	O
fsuser_perms	function
(	O
&	O
ieuid	int
,	O
&	O
iegid	int
)	O
)	O
return	O
EFILECLOSED	O
;	O
zerr	pointer
=	O
NULL	O
;	O
e	pointer
=	O
fopen	function
(	O
zfile	pointer
,	O
frd	int
?	O
"r"	pointer
:	O
"w"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
zerr	pointer
=	O
"fopen"	pointer
;	O
else	O
o	int
=	O
fileno	function
(	O
e	pointer
)	O
;	O
if	O
(	O
!	O
fsuucp_perms	function
(	O
(	O
long	O
)	O
ieuid	int
,	O
(	O
long	O
)	O
iegid	int
)	O
)	O
{	O
if	O
(	O
ffileisopen	O
(	O
e	pointer
)	O
)	O
(	O
void	O
)	O
ffileclose	O
(	O
e	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
if	O
(	O
zerr	pointer
!=	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"%s (%s): %s"	pointer
,	O
zerr	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
if	O
(	O
fcntl	function
(	O
o	int
,	O
F_SETFD	int
,	O
fcntl	function
(	O
o	int
,	O
F_GETFD	int
,	O
0	int
)	O
|	O
FD_CLOEXEC	int
)	O
<	O
0	int
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fcntl (FD_CLOEXEC): %s"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
(	O
void	O
)	O
ffileclose	O
(	O
e	pointer
)	O
;	O
return	O
EFILECLOSED	O
;	O
}	O
return	O
e	pointer
;	O
}	O
