void	O
mpn_invert	O
(	O
mp_ptr	pointer
ip	pointer
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
n	long
,	O
mp_ptr	pointer
scratch	pointer
)	O
{	O
ASSERT	O
(	O
n	long
>	O
0	int
)	O
;	O
ASSERT	O
(	O
dp	pointer
[	O
n	long
-	O
1	int
]	O
&	O
GMP_NUMB_HIGHBIT	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
ip	pointer
,	O
n	long
,	O
dp	pointer
,	O
n	long
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
ip	pointer
,	O
n	long
,	O
scratch	pointer
,	O
mpn_invertappr_itch	O
(	O
n	long
)	O
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
dp	pointer
,	O
n	long
,	O
scratch	pointer
,	O
mpn_invertappr_itch	O
(	O
n	long
)	O
)	O
)	O
;	O
if	O
(	O
n	long
==	O
1	int
)	O
invert_limb	O
(	O
*	O
ip	pointer
,	O
*	O
dp	pointer
)	O
;	O
else	O
{	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
n	long
,	O
INV_APPR_THRESHOLD	int
)	O
)	O
{	O
mp_size_t	long
i	long
;	O
mp_ptr	pointer
xp	pointer
;	O
xp	pointer
=	O
scratch	pointer
;	O
for	O
(	O
i	long
=	O
n	long
-	O
1	int
;	O
i	long
>=	O
0	int
;	O
i	long
--	O
)	O
xp	pointer
[	O
i	long
]	O
=	O
GMP_NUMB_MAX	O
;	O
mpn_com	O
(	O
xp	pointer
+	O
n	long
,	O
dp	pointer
,	O
n	long
)	O
;	O
if	O
(	O
n	long
==	O
2	int
)	O
{	O
mpn_divrem_2	O
(	O
ip	pointer
,	O
0	int
,	O
xp	pointer
,	O
4	int
,	O
dp	pointer
)	O
;	O
}	O
else	O
{	O
gmp_pi1_t	struct
inv	struct
;	O
invert_pi1	O
(	O
inv	struct
,	O
dp	pointer
[	O
n	long
-	O
1	int
]	O
,	O
dp	pointer
[	O
n	long
-	O
2	int
]	O
)	O
;	O
mpn_sbpi1_div_q	O
(	O
ip	pointer
,	O
xp	pointer
,	O
2	int
*	O
n	long
,	O
dp	pointer
,	O
n	long
,	O
inv	struct
.	O
inv32	long
)	O
;	O
}	O
}	O
else	O
{	O
mp_limb_t	long
e	long
;	O
ASSERT	O
(	O
mpn_invert_itch	O
(	O
n	long
)	O
>=	O
mpn_invertappr_itch	O
(	O
n	long
)	O
)	O
;	O
e	long
=	O
mpn_ni_invertappr	O
(	O
ip	pointer
,	O
dp	pointer
,	O
n	long
,	O
scratch	pointer
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
e	long
)	O
)	O
{	O
mpn_mul_n	O
(	O
scratch	pointer
,	O
ip	pointer
,	O
dp	pointer
,	O
n	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_add_n	O
(	O
scratch	pointer
+	O
n	long
,	O
scratch	pointer
+	O
n	long
,	O
dp	pointer
,	O
n	long
)	O
)	O
;	O
if	O
(	O
!	O
mpn_add	O
(	O
scratch	pointer
,	O
scratch	pointer
,	O
2	int
*	O
n	long
,	O
dp	pointer
,	O
n	long
)	O
)	O
MPN_INCR_U	O
(	O
ip	pointer
,	O
n	long
,	O
1	int
)	O
;	O
}	O
}	O
TMP_FREE	O
;	O
}	O
}	O
