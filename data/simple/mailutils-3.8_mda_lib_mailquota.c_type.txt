static	O
char	O
*	O
quotadbname	pointer
;	O
static	O
int	O
ex_quota_tempfail	int
;	O
int	O
ex_quota	function
(	O
)	O
{	O
return	O
(	O
ex_quota_tempfail	int
?	O
EX_TEMPFAIL	int
:	O
EX_UNAVAILABLE	int
)	O
;	O
}	O
struct	O
mu_cfg_param	struct
mda_mailquota_cfg	array
[	O
]	O
=	O
{	O
{	O
"database"	pointer
,	O
mu_c_string	int
,	O
&	O
quotadbname	pointer
,	O
0	int
,	O
NULL	O
,	O
N_	O
(	O
"Name of DBM quota database file."	pointer
)	O
,	O
N_	O
(	O
"file"	pointer
)	O
}	O
,	O
{	O
"exit-tempfail"	pointer
,	O
mu_c_bool	int
,	O
&	O
ex_quota_tempfail	int
,	O
0	int
,	O
NULL	O
,	O
N_	O
(	O
"Indicate temporary failure if the recipient is over his mail quota."	pointer
)	O
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
mu_off_t	long
groupquota	long
=	O
5	int
*	O
1024	int
*	O
1024UL	int
;	O
static	O
int	O
get_size	function
(	O
char	O
*	O
str	pointer
,	O
mu_off_t	long
*	O
size	long
,	O
char	O
*	O
*	O
endp	pointer
)	O
{	O
mu_off_t	long
s	pointer
;	O
s	pointer
=	O
strtol	function
(	O
str	pointer
,	O
&	O
str	pointer
,	O
0	int
)	O
;	O
switch	O
(	O
*	O
str	pointer
)	O
{	O
case	O
0	int
:	O
break	O
;	O
case	O
'k'	O
:	O
case	O
'K'	O
:	O
s	pointer
*=	O
1024	int
;	O
break	O
;	O
case	O
'm'	O
:	O
case	O
'M'	O
:	O
s	pointer
*=	O
1024	int
*	O
1024	int
;	O
break	O
;	O
default	O
:	O
*	O
endp	pointer
=	O
str	pointer
;	O
return	O
-	O
1	int
;	O
}	O
*	O
size	long
=	O
s	pointer
;	O
return	O
0	int
;	O
}	O
enum	O
{	O
RETR_OK	int
,	O
RETR_UNLIMITED	int
,	O
RETR_FAILURE	int
}	O
;	O
static	O
int	O
default_retrieve_quota	function
(	O
char	O
*	O
name	pointer
,	O
mu_off_t	long
*	O
quota	long
)	O
{	O
mu_error	function
(	O
_	O
(	O
"no quota retrieving mechanism"	pointer
)	O
)	O
;	O
return	O
RETR_FAILURE	int
;	O
}	O
static	O
int	O
retrieve_quota	function
(	O
struct	O
mu_auth_data	struct
*	O
auth	pointer
,	O
mu_off_t	long
*	O
quota	long
)	O
{	O
if	O
(	O
MU_HAS_QUOTA	O
(	O
auth	pointer
)	O
)	O
{	O
if	O
(	O
auth	pointer
->	O
quota	long
==	O
0	int
)	O
return	O
RETR_UNLIMITED	int
;	O
*	O
quota	long
=	O
auth	pointer
->	O
quota	long
;	O
return	O
RETR_OK	int
;	O
}	O
return	O
default_retrieve_quota	function
(	O
auth	pointer
->	O
name	pointer
,	O
quota	long
)	O
;	O
}	O
int	O
mda_check_quota	function
(	O
struct	O
mu_auth_data	struct
*	O
auth	pointer
,	O
mu_off_t	long
size	long
,	O
mu_off_t	long
*	O
rest	pointer
)	O
{	O
mu_off_t	long
quota	long
;	O
if	O
(	O
!	O
auth	pointer
)	O
return	O
MQUOTA_OK	int
;	O
switch	O
(	O
retrieve_quota	function
(	O
auth	pointer
,	O
&	O
quota	long
)	O
)	O
{	O
case	O
RETR_FAILURE	int
:	O
return	O
DEFRETVAL	O
;	O
case	O
RETR_UNLIMITED	int
:	O
return	O
MQUOTA_UNLIMITED	int
;	O
case	O
RETR_OK	int
:	O
if	O
(	O
quota	long
<	O
size	long
)	O
return	O
MQUOTA_EXCEEDED	int
;	O
if	O
(	O
rest	pointer
)	O
*	O
rest	pointer
=	O
quota	long
-	O
size	long
;	O
}	O
return	O
MQUOTA_OK	int
;	O
}	O
