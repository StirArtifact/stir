typedef	O
struct	O
{	O
const	O
char	O
*	O
*	O
encoding	pointer
;	O
wget_vector	struct
*	O
uris	pointer
;	O
}	O
_CSS_CONTEXT	struct
;	O
static	O
void	O
url_free	function
(	O
void	O
*	O
url	pointer
)	O
{	O
wget_css_parsed_url	struct
*	O
u	pointer
=	O
url	pointer
;	O
xfree	O
(	O
u	pointer
->	O
url	pointer
)	O
;	O
xfree	O
(	O
u	pointer
->	O
abs_url	pointer
)	O
;	O
xfree	O
(	O
u	pointer
)	O
;	O
}	O
static	O
void	O
_css_get_encoding	function
(	O
void	O
*	O
context	pointer
,	O
const	O
char	O
*	O
encoding	pointer
,	O
size_t	long
len	long
)	O
{	O
_CSS_CONTEXT	struct
*	O
ctx	pointer
=	O
context	pointer
;	O
if	O
(	O
!	O
*	O
ctx	pointer
->	O
encoding	pointer
)	O
{	O
*	O
ctx	pointer
->	O
encoding	pointer
=	O
wget_strmemdup	function
(	O
encoding	pointer
,	O
len	long
)	O
;	O
debug_printf	O
(	O
"URI content encoding = '%s'\n"	pointer
,	O
*	O
ctx	pointer
->	O
encoding	pointer
)	O
;	O
}	O
}	O
static	O
void	O
_css_get_url	function
(	O
void	O
*	O
context	pointer
,	O
const	O
char	O
*	O
url	pointer
,	O
size_t	long
len	long
,	O
size_t	long
pos	int
)	O
{	O
_CSS_CONTEXT	struct
*	O
ctx	pointer
=	O
context	pointer
;	O
wget_css_parsed_url	struct
*	O
parsed_url	pointer
;	O
if	O
(	O
!	O
(	O
parsed_url	pointer
=	O
wget_calloc	function
(	O
1	int
,	O
sizeof	O
(	O
wget_css_parsed_url	struct
)	O
)	O
)	O
)	O
return	O
;	O
if	O
(	O
!	O
(	O
parsed_url	pointer
->	O
url	pointer
=	O
wget_strmemdup	function
(	O
url	pointer
,	O
len	long
)	O
)	O
)	O
{	O
xfree	O
(	O
parsed_url	pointer
)	O
;	O
return	O
;	O
}	O
parsed_url	pointer
->	O
len	long
=	O
len	long
;	O
parsed_url	pointer
->	O
pos	int
=	O
pos	int
;	O
if	O
(	O
!	O
ctx	pointer
->	O
uris	pointer
)	O
{	O
ctx	pointer
->	O
uris	pointer
=	O
wget_vector_create	function
(	O
16	int
,	O
NULL	O
)	O
;	O
wget_vector_set_destructor	function
(	O
ctx	pointer
->	O
uris	pointer
,	O
url_free	function
)	O
;	O
}	O
wget_vector_add	function
(	O
ctx	pointer
->	O
uris	pointer
,	O
parsed_url	pointer
)	O
;	O
}	O
static	O
void	O
_urls_to_absolute	function
(	O
wget_vector	struct
*	O
urls	pointer
,	O
wget_iri	struct
*	O
base	pointer
)	O
{	O
if	O
(	O
base	pointer
&&	O
urls	pointer
)	O
{	O
wget_buffer	struct
buf	pointer
;	O
wget_buffer_init	function
(	O
&	O
buf	pointer
,	O
NULL	O
,	O
1024	int
)	O
;	O
for	O
(	O
int	O
it	int
=	O
0	int
;	O
it	int
<	O
wget_vector_size	function
(	O
urls	pointer
)	O
;	O
it	int
++	O
)	O
{	O
wget_css_parsed_url	struct
*	O
url	pointer
=	O
wget_vector_get	function
(	O
urls	pointer
,	O
it	int
)	O
;	O
if	O
(	O
wget_iri_relative_to_abs	function
(	O
base	pointer
,	O
url	pointer
->	O
url	pointer
,	O
url	pointer
->	O
len	long
,	O
&	O
buf	pointer
)	O
)	O
url	pointer
->	O
abs_url	pointer
=	O
wget_strmemdup	function
(	O
buf	pointer
.	O
data	pointer
,	O
buf	pointer
.	O
length	long
)	O
;	O
else	O
error_printf	O
(	O
_	O
(	O
"Cannot resolve relative URI '%s'\n"	pointer
)	O
,	O
url	pointer
->	O
url	pointer
)	O
;	O
}	O
wget_buffer_deinit	function
(	O
&	O
buf	pointer
)	O
;	O
}	O
}	O
wget_vector	struct
*	O
wget_css_get_urls	function
(	O
const	O
char	O
*	O
css	pointer
,	O
size_t	long
len	long
,	O
wget_iri	struct
*	O
base	pointer
,	O
const	O
char	O
*	O
*	O
encoding	pointer
)	O
{	O
_CSS_CONTEXT	struct
context	pointer
=	O
{	O
.	O
encoding	pointer
=	O
encoding	pointer
}	O
;	O
wget_css_parse_buffer	function
(	O
css	pointer
,	O
len	long
,	O
_css_get_url	function
,	O
encoding	pointer
?	O
_css_get_encoding	function
:	O
NULL	O
,	O
&	O
context	pointer
)	O
;	O
_urls_to_absolute	function
(	O
context	pointer
.	O
uris	pointer
,	O
base	pointer
)	O
;	O
return	O
context	pointer
.	O
uris	pointer
;	O
}	O
wget_vector	struct
*	O
wget_css_get_urls_from_localfile	function
(	O
const	O
char	O
*	O
fname	pointer
,	O
wget_iri	struct
*	O
base	pointer
,	O
const	O
char	O
*	O
*	O
encoding	pointer
)	O
{	O
_CSS_CONTEXT	struct
context	pointer
=	O
{	O
.	O
encoding	pointer
=	O
encoding	pointer
}	O
;	O
wget_css_parse_file	function
(	O
fname	pointer
,	O
_css_get_url	function
,	O
encoding	pointer
?	O
_css_get_encoding	function
:	O
NULL	O
,	O
&	O
context	pointer
)	O
;	O
_urls_to_absolute	function
(	O
context	pointer
.	O
uris	pointer
,	O
base	pointer
)	O
;	O
return	O
context	pointer
.	O
uris	pointer
;	O
}	O
