int	O
mu_msgset_add_range	function
(	O
mu_msgset_t	pointer
mset	pointer
,	O
size_t	long
beg	long
,	O
size_t	long
end	long
,	O
int	O
mode	int
)	O
{	O
int	O
rc	int
;	O
struct	O
mu_msgrange	struct
*	O
range	pointer
;	O
if	O
(	O
!	O
mset	pointer
||	O
beg	long
==	O
0	int
)	O
return	O
EINVAL	int
;	O
if	O
(	O
end	long
&&	O
beg	long
>	O
end	long
)	O
{	O
size_t	long
t	long
=	O
end	long
;	O
end	long
=	O
beg	long
;	O
beg	long
=	O
t	long
;	O
}	O
range	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
range	pointer
)	O
)	O
;	O
if	O
(	O
!	O
range	pointer
)	O
return	O
ENOMEM	int
;	O
range	pointer
->	O
msg_beg	long
=	O
beg	long
;	O
range	pointer
->	O
msg_end	long
=	O
end	long
;	O
if	O
(	O
mode	int
!=	O
_MU_MSGSET_MODE	O
(	O
mset	pointer
->	O
flags	int
)	O
)	O
{	O
rc	int
=	O
_mu_msgset_translate_range	function
(	O
mset	pointer
,	O
_MU_MSGSET_MODE	O
(	O
mset	pointer
->	O
flags	int
)	O
,	O
range	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
free	function
(	O
range	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
}	O
rc	int
=	O
mu_list_append	function
(	O
mset	pointer
->	O
list	pointer
,	O
range	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
free	function
(	O
range	pointer
)	O
;	O
mset	pointer
->	O
flags	int
&=	O
~	O
_MU_MSGSET_AGGREGATED	int
;	O
return	O
rc	int
;	O
}	O
