static	O
bool	enum
_match_hershey_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
;	O
static	O
bool	enum
_match_ps_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
;	O
static	O
bool	enum
_match_pcl_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
;	O
static	O
bool	enum
_match_stick_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
,	O
bool	enum
have_extra_stick_fonts	int
)	O
;	O
void	O
_pl_g_set_font	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
plDrawState	struct
*	O
drawstate	pointer
=	O
_plotter	pointer
->	O
drawstate	pointer
;	O
plPlotterData	struct
*	O
data	pointer
=	O
_plotter	pointer
->	O
data	pointer
;	O
const	O
char	O
*	O
default_font_name	pointer
;	O
bool	enum
matched	enum
;	O
if	O
(	O
_match_hershey_font	function
(	O
drawstate	pointer
)	O
)	O
return	O
;	O
matched	enum
=	O
false	int
;	O
if	O
(	O
data	pointer
->	O
pcl_before_ps	enum
)	O
{	O
if	O
(	O
(	O
data	pointer
->	O
have_pcl_fonts	int
&&	O
_match_pcl_font	function
(	O
drawstate	pointer
)	O
)	O
||	O
(	O
data	pointer
->	O
have_ps_fonts	int
&&	O
_match_ps_font	function
(	O
drawstate	pointer
)	O
)	O
)	O
matched	enum
=	O
true	int
;	O
}	O
else	O
{	O
if	O
(	O
(	O
data	pointer
->	O
have_ps_fonts	int
&&	O
_match_ps_font	function
(	O
drawstate	pointer
)	O
)	O
||	O
(	O
data	pointer
->	O
have_pcl_fonts	int
&&	O
_match_pcl_font	function
(	O
drawstate	pointer
)	O
)	O
)	O
matched	enum
=	O
true	int
;	O
}	O
if	O
(	O
matched	enum
==	O
false	int
&&	O
data	pointer
->	O
have_stick_fonts	int
&&	O
_match_stick_font	function
(	O
drawstate	pointer
,	O
data	pointer
->	O
have_extra_stick_fonts	int
?	O
true	int
:	O
false	int
)	O
)	O
matched	enum
=	O
true	int
;	O
if	O
(	O
matched	enum
==	O
false	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_name	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
drawstate	pointer
->	O
font_name	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
font_type	int
=	O
PL_F_OTHER	int
;	O
drawstate	pointer
->	O
typeface_index	int
=	O
0	int
;	O
drawstate	pointer
->	O
font_index	int
=	O
1	int
;	O
}	O
if	O
(	O
matched	enum
||	O
(	O
!	O
matched	enum
&&	O
data	pointer
->	O
have_other_fonts	int
)	O
)	O
{	O
if	O
(	O
_plotter	pointer
->	O
retrieve_font	pointer
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
)	O
return	O
;	O
}	O
switch	O
(	O
data	pointer
->	O
default_font_type	int
)	O
{	O
case	O
PL_F_POSTSCRIPT	int
:	O
default_font_name	pointer
=	O
PL_DEFAULT_POSTSCRIPT_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_PCL	int
:	O
default_font_name	pointer
=	O
PL_DEFAULT_PCL_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_STICK	int
:	O
default_font_name	pointer
=	O
PL_DEFAULT_STICK_FONT	pointer
;	O
break	O
;	O
case	O
PL_F_HERSHEY	int
:	O
default	O
:	O
default_font_name	pointer
=	O
PL_DEFAULT_HERSHEY_FONT	pointer
;	O
break	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
drawstate	pointer
->	O
font_name	pointer
,	O
default_font_name	pointer
)	O
==	O
0	int
||	O
strcmp	function
(	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
default_font_name	pointer
)	O
==	O
0	int
)	O
default_font_name	pointer
=	O
PL_DEFAULT_HERSHEY_FONT	pointer
;	O
{	O
const	O
char	O
*	O
saved_font_name	pointer
;	O
bool	enum
saved_font_warning_issued	enum
;	O
saved_font_name	pointer
=	O
drawstate	pointer
->	O
font_name	pointer
;	O
drawstate	pointer
->	O
font_name	pointer
=	O
default_font_name	pointer
;	O
saved_font_warning_issued	enum
=	O
_plotter	pointer
->	O
data	pointer
->	O
font_warning_issued	enum
;	O
_plotter	pointer
->	O
data	pointer
->	O
font_warning_issued	enum
=	O
true	int
;	O
_pl_g_set_font	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
font_warning_issued	enum
=	O
saved_font_warning_issued	enum
;	O
drawstate	pointer
->	O
font_name	pointer
=	O
saved_font_name	pointer
;	O
}	O
if	O
(	O
data	pointer
->	O
issue_font_warning	enum
&&	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
font_warning_issued	enum
)	O
{	O
char	O
*	O
buf	pointer
;	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
drawstate	pointer
->	O
font_name	pointer
)	O
+	O
strlen	function
(	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
+	O
100	int
)	O
;	O
sprintf	function
(	O
buf	pointer
,	O
"cannot retrieve font \"%s\", using default \"%s\""	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
,	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
_plotter	pointer
->	O
warning	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
buf	pointer
)	O
;	O
free	function
(	O
buf	pointer
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
font_warning_issued	enum
=	O
true	int
;	O
}	O
}	O
static	O
bool	enum
_match_hershey_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
{	O
int	O
i	int
;	O
i	int
=	O
-	O
1	int
;	O
while	O
(	O
_pl_g_hershey_font_info	array
[	O
++	O
i	int
]	O
.	O
name	pointer
)	O
{	O
if	O
(	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
visible	enum
)	O
if	O
(	O
strcasecmp	function
(	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
||	O
(	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
othername	pointer
&&	O
strcasecmp	function
(	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
othername	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_name	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
name	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
font_type	int
=	O
PL_F_HERSHEY	int
;	O
drawstate	pointer
->	O
typeface_index	int
=	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
typeface_index	int
;	O
drawstate	pointer
->	O
font_index	int
=	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
font_index	int
;	O
drawstate	pointer
->	O
font_is_iso8859_1	enum
=	O
_pl_g_hershey_font_info	array
[	O
i	int
]	O
.	O
iso8859_1	enum
;	O
drawstate	pointer
->	O
font_cap_height	double
=	O
MAP_HERSHEY_UNITS_TO_USER_UNITS	O
(	O
HERSHEY_CAPHEIGHT	O
,	O
drawstate	pointer
)	O
;	O
drawstate	pointer
->	O
font_ascent	double
=	O
MAP_HERSHEY_UNITS_TO_USER_UNITS	O
(	O
HERSHEY_ASCENT	O
,	O
drawstate	pointer
)	O
;	O
drawstate	pointer
->	O
font_descent	double
=	O
MAP_HERSHEY_UNITS_TO_USER_UNITS	O
(	O
HERSHEY_DESCENT	O
,	O
drawstate	pointer
)	O
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
static	O
bool	enum
_match_pcl_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
{	O
int	O
i	int
=	O
-	O
1	int
;	O
while	O
(	O
_pl_g_pcl_font_info	array
[	O
++	O
i	int
]	O
.	O
ps_name	pointer
)	O
{	O
if	O
(	O
strcasecmp	function
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
||	O
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt	pointer
!=	O
NULL	O
&&	O
strcasecmp	function
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
||	O
strcasecmp	function
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
x_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_name	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
font_type	int
=	O
PL_F_PCL	int
;	O
drawstate	pointer
->	O
typeface_index	int
=	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
typeface_index	int
;	O
drawstate	pointer
->	O
font_index	int
=	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
font_index	int
;	O
drawstate	pointer
->	O
font_is_iso8859_1	enum
=	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
iso8859_1	enum
;	O
drawstate	pointer
->	O
font_ascent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
font_ascent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_descent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
font_descent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_cap_height	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_pcl_font_info	array
[	O
i	int
]	O
.	O
font_cap_height	double
)	O
/	O
1000.0	int
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
static	O
bool	enum
_match_ps_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
)	O
{	O
int	O
i	int
=	O
-	O
1	int
;	O
while	O
(	O
_pl_g_ps_font_info	array
[	O
++	O
i	int
]	O
.	O
ps_name	pointer
)	O
{	O
if	O
(	O
strcasecmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
||	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt	pointer
!=	O
NULL	O
&&	O
strcasecmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
||	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt2	pointer
!=	O
NULL	O
&&	O
strcasecmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name_alt2	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
||	O
strcasecmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
x_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
||	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
x_name_alt	pointer
!=	O
NULL	O
&&	O
strcasecmp	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
x_name_alt	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_name	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
font_type	int
=	O
PL_F_POSTSCRIPT	int
;	O
drawstate	pointer
->	O
typeface_index	int
=	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
typeface_index	int
;	O
drawstate	pointer
->	O
font_index	int
=	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
font_index	int
;	O
drawstate	pointer
->	O
font_is_iso8859_1	enum
=	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
iso8859_1	enum
;	O
drawstate	pointer
->	O
font_ascent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
font_ascent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_descent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
font_descent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_cap_height	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_ps_font_info	array
[	O
i	int
]	O
.	O
font_cap_height	double
)	O
/	O
1000.0	int
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
static	O
bool	enum
_match_stick_font	function
(	O
plDrawState	struct
*	O
drawstate	pointer
,	O
bool	enum
have_extra_stick_fonts	int
)	O
{	O
int	O
i	int
=	O
-	O
1	int
;	O
while	O
(	O
_pl_g_stick_font_info	array
[	O
++	O
i	int
]	O
.	O
ps_name	pointer
)	O
{	O
if	O
(	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
basic	enum
==	O
false	int
&&	O
!	O
have_extra_stick_fonts	int
)	O
continue	O
;	O
if	O
(	O
strcasecmp	function
(	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
,	O
drawstate	pointer
->	O
font_name	pointer
)	O
==	O
0	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_name	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
(	O
char	O
*	O
)	O
drawstate	pointer
->	O
true_font_name	pointer
,	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
ps_name	pointer
)	O
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
true_font_size	double
=	O
drawstate	pointer
->	O
font_size	double
;	O
drawstate	pointer
->	O
font_type	int
=	O
PL_F_STICK	int
;	O
drawstate	pointer
->	O
typeface_index	int
=	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
typeface_index	int
;	O
drawstate	pointer
->	O
font_index	int
=	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
font_index	int
;	O
drawstate	pointer
->	O
font_is_iso8859_1	enum
=	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
iso8859_1	enum
;	O
drawstate	pointer
->	O
font_ascent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
font_ascent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_descent	double
=	O
drawstate	pointer
->	O
true_font_size	double
*	O
(	O
double	O
)	O
(	O
_pl_g_stick_font_info	array
[	O
i	int
]	O
.	O
font_descent	double
)	O
/	O
1000.0	int
;	O
drawstate	pointer
->	O
font_cap_height	double
=	O
0.7	int
*	O
drawstate	pointer
->	O
true_font_size	double
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
bool	enum
_pl_g_retrieve_font	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
return	O
true	int
;	O
}	O
