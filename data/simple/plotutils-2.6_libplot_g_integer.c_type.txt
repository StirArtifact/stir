int	O
_API_arc	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_farc	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
xc	int
,	O
(	O
double	O
)	O
yc	int
,	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_arcrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dxc	int
,	O
int	O
dyc	int
,	O
int	O
dx0	int
,	O
int	O
dy0	int
,	O
int	O
dx1	int
,	O
int	O
dy1	int
)	O
{	O
return	O
_API_farcrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dxc	int
,	O
(	O
double	O
)	O
dyc	int
,	O
(	O
double	O
)	O
dx0	int
,	O
(	O
double	O
)	O
dy0	int
,	O
(	O
double	O
)	O
dx1	int
,	O
(	O
double	O
)	O
dy1	int
)	O
;	O
}	O
int	O
_API_bezier2	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_fbezier2	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
xc	int
,	O
(	O
double	O
)	O
yc	int
,	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_bezier2rel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dxc	int
,	O
int	O
dyc	int
,	O
int	O
dx0	int
,	O
int	O
dy0	int
,	O
int	O
dx1	int
,	O
int	O
dy1	int
)	O
{	O
return	O
_API_fbezier2rel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dxc	int
,	O
(	O
double	O
)	O
dyc	int
,	O
(	O
double	O
)	O
dx0	int
,	O
(	O
double	O
)	O
dy0	int
,	O
(	O
double	O
)	O
dx1	int
,	O
(	O
double	O
)	O
dy1	int
)	O
;	O
}	O
int	O
_API_bezier3	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
,	O
int	O
x3	double
,	O
int	O
y3	double
)	O
{	O
return	O
_API_fbezier3	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
,	O
(	O
double	O
)	O
x2	double
,	O
(	O
double	O
)	O
y2	double
,	O
(	O
double	O
)	O
x3	double
,	O
(	O
double	O
)	O
y3	double
)	O
;	O
}	O
int	O
_API_bezier3rel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
,	O
int	O
x3	double
,	O
int	O
y3	double
)	O
{	O
return	O
_API_fbezier3rel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
,	O
(	O
double	O
)	O
x2	double
,	O
(	O
double	O
)	O
y2	double
,	O
(	O
double	O
)	O
x3	double
,	O
(	O
double	O
)	O
y3	double
)	O
;	O
}	O
int	O
_API_box	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_fbox	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_boxrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx0	int
,	O
int	O
dy0	int
,	O
int	O
dx1	int
,	O
int	O
dy1	int
)	O
{	O
return	O
_API_fboxrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx0	int
,	O
(	O
double	O
)	O
dy0	int
,	O
(	O
double	O
)	O
dx1	int
,	O
(	O
double	O
)	O
dy1	int
)	O
;	O
}	O
int	O
_API_circle	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
r	int
)	O
{	O
return	O
_API_fcircle	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
,	O
(	O
double	O
)	O
r	int
)	O
;	O
}	O
int	O
_API_circlerel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx	int
,	O
int	O
dy	int
,	O
int	O
r	int
)	O
{	O
return	O
_API_fcirclerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx	int
,	O
(	O
double	O
)	O
dy	int
,	O
(	O
double	O
)	O
r	int
)	O
;	O
}	O
int	O
_API_cont	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
return	O
_API_fcont	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
)	O
;	O
}	O
int	O
_API_contrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx	int
,	O
int	O
dy	int
)	O
{	O
return	O
_API_fcontrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx	int
,	O
(	O
double	O
)	O
dy	int
)	O
;	O
}	O
int	O
_API_ellarc	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_fellarc	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
xc	int
,	O
(	O
double	O
)	O
yc	int
,	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_ellarcrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dxc	int
,	O
int	O
dyc	int
,	O
int	O
dx0	int
,	O
int	O
dy0	int
,	O
int	O
dx1	int
,	O
int	O
dy1	int
)	O
{	O
return	O
_API_fellarcrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dxc	int
,	O
(	O
double	O
)	O
dyc	int
,	O
(	O
double	O
)	O
dx0	int
,	O
(	O
double	O
)	O
dy0	int
,	O
(	O
double	O
)	O
dx1	int
,	O
(	O
double	O
)	O
dy1	int
)	O
;	O
}	O
int	O
_API_ellipse	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
rx	double
,	O
int	O
ry	double
,	O
int	O
angle	double
)	O
{	O
return	O
_API_fellipse	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
,	O
(	O
double	O
)	O
rx	double
,	O
(	O
double	O
)	O
ry	double
,	O
(	O
double	O
)	O
angle	double
)	O
;	O
}	O
int	O
_API_ellipserel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx	int
,	O
int	O
dy	int
,	O
int	O
rx	double
,	O
int	O
ry	double
,	O
int	O
angle	double
)	O
{	O
return	O
_API_fellipserel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx	int
,	O
(	O
double	O
)	O
dy	int
,	O
(	O
double	O
)	O
rx	double
,	O
(	O
double	O
)	O
ry	double
,	O
(	O
double	O
)	O
angle	double
)	O
;	O
}	O
int	O
_API_fontname	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
const	O
char	O
*	O
s	pointer
)	O
{	O
double	O
new_size	double
=	O
_API_ffontname	O
(	O
R___	O
(	O
_plotter	pointer
)	O
s	pointer
)	O
;	O
return	O
IROUND	O
(	O
new_size	double
)	O
;	O
}	O
int	O
_API_fontsize	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
size	double
)	O
{	O
double	O
new_size	double
=	O
_API_ffontsize	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
size	double
)	O
;	O
return	O
IROUND	O
(	O
new_size	double
)	O
;	O
}	O
int	O
_API_line	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_fline	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_linedash	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
n	array
,	O
const	O
int	O
*	O
dashes	pointer
,	O
int	O
offset	array
)	O
{	O
double	O
*	O
idashes	pointer
;	O
int	O
i	int
,	O
retval	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"linedash: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
n	array
<	O
0	int
||	O
(	O
n	array
>	O
0	int
&&	O
dashes	pointer
==	O
NULL	O
)	O
)	O
return	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	array
;	O
i	int
++	O
)	O
if	O
(	O
dashes	pointer
[	O
i	int
]	O
<	O
0	int
)	O
return	O
-	O
1	int
;	O
idashes	pointer
=	O
(	O
double	O
*	O
)	O
_pl_xmalloc	function
(	O
(	O
unsigned	O
int	O
)	O
n	array
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	array
;	O
i	int
++	O
)	O
idashes	pointer
[	O
i	int
]	O
=	O
dashes	pointer
[	O
i	int
]	O
;	O
retval	int
=	O
_API_flinedash	O
(	O
R___	O
(	O
_plotter	pointer
)	O
n	array
,	O
idashes	pointer
,	O
(	O
double	O
)	O
offset	array
)	O
;	O
free	function
(	O
idashes	pointer
)	O
;	O
return	O
retval	int
;	O
}	O
int	O
_API_linerel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx0	int
,	O
int	O
dy0	int
,	O
int	O
dx1	int
,	O
int	O
dy1	int
)	O
{	O
return	O
_API_flinerel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx0	int
,	O
(	O
double	O
)	O
dy0	int
,	O
(	O
double	O
)	O
dx1	int
,	O
(	O
double	O
)	O
dy1	int
)	O
;	O
}	O
int	O
_API_labelwidth	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
const	O
char	O
*	O
s	pointer
)	O
{	O
double	O
width	array
=	O
_API_flabelwidth	O
(	O
R___	O
(	O
_plotter	pointer
)	O
s	pointer
)	O
;	O
return	O
IROUND	O
(	O
width	array
)	O
;	O
}	O
int	O
_API_linewidth	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
new_line_width	int
)	O
{	O
return	O
_API_flinewidth	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
new_line_width	int
)	O
;	O
}	O
int	O
_API_marker	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
type	enum
,	O
int	O
size	double
)	O
{	O
return	O
_API_fmarker	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
,	O
type	enum
,	O
(	O
double	O
)	O
size	double
)	O
;	O
}	O
int	O
_API_markerrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx	int
,	O
int	O
dy	int
,	O
int	O
type	enum
,	O
int	O
size	double
)	O
{	O
return	O
_API_fmarkerrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx	int
,	O
(	O
double	O
)	O
dy	int
,	O
type	enum
,	O
(	O
double	O
)	O
size	double
)	O
;	O
}	O
int	O
_API_move	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
return	O
_API_fmove	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
)	O
;	O
}	O
int	O
_API_moverel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
return	O
_API_fmoverel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
)	O
;	O
}	O
int	O
_API_point	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
return	O
_API_fpoint	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x	double
,	O
(	O
double	O
)	O
y	double
)	O
;	O
}	O
int	O
_API_pointrel	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
dx	int
,	O
int	O
dy	int
)	O
{	O
return	O
_API_fpointrel	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
dx	int
,	O
(	O
double	O
)	O
dy	int
)	O
;	O
}	O
int	O
_API_space	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
return	O
_API_fspace	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
)	O
;	O
}	O
int	O
_API_space2	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
)	O
{	O
return	O
_API_fspace2	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
x0	double
,	O
(	O
double	O
)	O
y0	function
,	O
(	O
double	O
)	O
x1	double
,	O
(	O
double	O
)	O
y1	function
,	O
(	O
double	O
)	O
x2	double
,	O
(	O
double	O
)	O
y2	double
)	O
;	O
}	O
int	O
_API_textangle	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
angle	double
)	O
{	O
double	O
new_size	double
=	O
_API_ftextangle	O
(	O
R___	O
(	O
_plotter	pointer
)	O
(	O
double	O
)	O
angle	double
)	O
;	O
return	O
IROUND	O
(	O
new_size	double
)	O
;	O
}	O
