void	O
iohelp_fetch_shared_data	function
(	O
void	O
*	O
arg	pointer
)	O
{	O
struct	O
protid	O
*	O
cred	pointer
=	O
arg	pointer
;	O
int	O
mod	int
=	O
0	int
;	O
if	O
(	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
>	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
allocsize	O
)	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
=	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
allocsize	O
;	O
if	O
(	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
<	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_stat	O
.	O
st_size	O
)	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
=	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_stat	O
.	O
st_size	O
;	O
else	O
if	O
(	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_stat	O
.	O
st_size	O
!=	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
)	O
{	O
if	O
(	O
diskfs_check_readonly	function
(	O
)	O
)	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
=	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_stat	O
.	O
st_size	O
;	O
else	O
{	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_stat	O
.	O
st_size	O
=	O
cred	pointer
->	O
mapped	O
->	O
file_size	O
;	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_set_ctime	O
=	O
1	int
;	O
mod	int
=	O
1	int
;	O
}	O
}	O
cred	pointer
->	O
po	O
->	O
filepointer	O
=	O
cred	pointer
->	O
mapped	O
->	O
xx_file_pointer	O
;	O
if	O
(	O
!	O
diskfs_check_readonly	function
(	O
)	O
)	O
{	O
if	O
(	O
cred	pointer
->	O
mapped	O
->	O
written	O
)	O
{	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_set_mtime	O
=	O
1	int
;	O
mod	int
=	O
1	int
;	O
}	O
if	O
(	O
cred	pointer
->	O
mapped	O
->	O
accessed	O
&&	O
!	O
_diskfs_noatime	int
)	O
{	O
cred	pointer
->	O
po	O
->	O
np	pointer
->	O
dn_set_atime	O
=	O
1	int
;	O
mod	int
=	O
1	int
;	O
}	O
}	O
cred	pointer
->	O
mapped	O
->	O
written	O
=	O
0	int
;	O
cred	pointer
->	O
mapped	O
->	O
accessed	O
=	O
0	int
;	O
if	O
(	O
diskfs_synchronous	O
&&	O
mod	int
)	O
diskfs_node_update	function
(	O
cred	pointer
->	O
po	O
->	O
np	pointer
,	O
1	int
)	O
;	O
}	O
