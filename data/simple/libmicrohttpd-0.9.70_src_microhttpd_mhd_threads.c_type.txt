static	O
int	O
MHD_set_thread_name_	function
(	O
const	O
MHD_thread_ID_	long
thread_id	long
,	O
const	O
char	O
*	O
thread_name	pointer
)	O
{	O
if	O
(	O
NULL	O
==	O
thread_name	pointer
)	O
return	O
0	int
;	O
return	O
!	O
pthread_setname_np	function
(	O
thread_id	long
,	O
thread_name	pointer
)	O
;	O
}	O
int	O
MHD_create_thread_	function
(	O
MHD_thread_handle_ID_	struct
*	O
thread	pointer
,	O
size_t	long
stack_size	long
,	O
MHD_THREAD_START_ROUTINE_	pointer
start_routine	pointer
,	O
void	O
*	O
arg	pointer
)	O
{	O
int	O
res	int
;	O
if	O
(	O
0	int
!=	O
stack_size	long
)	O
{	O
pthread_attr_t	union
attr	union
;	O
res	int
=	O
pthread_attr_init	function
(	O
&	O
attr	union
)	O
;	O
if	O
(	O
0	int
==	O
res	int
)	O
{	O
res	int
=	O
pthread_attr_setstacksize	function
(	O
&	O
attr	union
,	O
stack_size	long
)	O
;	O
if	O
(	O
0	int
==	O
res	int
)	O
res	int
=	O
pthread_create	function
(	O
&	O
(	O
thread	pointer
->	O
handle	long
)	O
,	O
&	O
attr	union
,	O
start_routine	pointer
,	O
arg	pointer
)	O
;	O
pthread_attr_destroy	function
(	O
&	O
attr	union
)	O
;	O
}	O
}	O
else	O
res	int
=	O
pthread_create	function
(	O
&	O
(	O
thread	pointer
->	O
handle	long
)	O
,	O
NULL	O
,	O
start_routine	pointer
,	O
arg	pointer
)	O
;	O
if	O
(	O
0	int
!=	O
res	int
)	O
errno	O
=	O
res	int
;	O
return	O
!	O
res	int
;	O
}	O
struct	O
MHD_named_helper_param_	struct
{	O
MHD_THREAD_START_ROUTINE_	pointer
start_routine	pointer
;	O
void	O
*	O
arg	pointer
;	O
const	O
char	O
*	O
name	pointer
;	O
}	O
;	O
static	O
MHD_THRD_RTRN_TYPE_	O
MHD_THRD_CALL_SPEC_	O
named_thread_starter	function
(	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
MHD_named_helper_param_	struct
*	O
const	O
param	pointer
=	O
(	O
struct	O
MHD_named_helper_param_	struct
*	O
)	O
data	pointer
;	O
void	O
*	O
arg	pointer
;	O
MHD_THREAD_START_ROUTINE_	pointer
thr_func	pointer
;	O
if	O
(	O
NULL	O
==	O
data	pointer
)	O
return	O
(	O
MHD_THRD_RTRN_TYPE_	O
)	O
0	int
;	O
MHD_set_cur_thread_name_	O
(	O
param	pointer
->	O
name	pointer
)	O
;	O
arg	pointer
=	O
param	pointer
->	O
arg	pointer
;	O
thr_func	pointer
=	O
param	pointer
->	O
start_routine	pointer
;	O
free	function
(	O
data	pointer
)	O
;	O
return	O
thr_func	pointer
(	O
arg	pointer
)	O
;	O
}	O
int	O
MHD_create_named_thread_	function
(	O
MHD_thread_handle_ID_	struct
*	O
thread	pointer
,	O
const	O
char	O
*	O
thread_name	pointer
,	O
size_t	long
stack_size	long
,	O
MHD_THREAD_START_ROUTINE_	pointer
start_routine	pointer
,	O
void	O
*	O
arg	pointer
)	O
{	O
struct	O
MHD_named_helper_param_	struct
*	O
param	pointer
;	O
if	O
(	O
NULL	O
==	O
thread_name	pointer
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
return	O
0	int
;	O
}	O
param	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
MHD_named_helper_param_	struct
)	O
)	O
;	O
if	O
(	O
NULL	O
==	O
param	pointer
)	O
return	O
0	int
;	O
param	pointer
->	O
start_routine	pointer
=	O
start_routine	pointer
;	O
param	pointer
->	O
arg	pointer
=	O
arg	pointer
;	O
param	pointer
->	O
name	pointer
=	O
thread_name	pointer
;	O
if	O
(	O
!	O
MHD_create_thread_	function
(	O
thread	pointer
,	O
stack_size	long
,	O
&	O
named_thread_starter	function
,	O
(	O
void	O
*	O
)	O
param	pointer
)	O
)	O
{	O
free	function
(	O
param	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
!	O
0	int
;	O
}	O
