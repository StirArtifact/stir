struct	O
locals	struct
{	O
char	O
*	O
line	pointer
;	O
}	O
;	O
static	O
bool	bool
execute_and_read_line	function
(	O
const	O
char	O
*	O
progname	pointer
,	O
const	O
char	O
*	O
prog_path	pointer
,	O
char	O
*	O
*	O
prog_argv	pointer
,	O
void	O
*	O
private_data	pointer
)	O
{	O
struct	O
locals	struct
*	O
l	pointer
=	O
(	O
struct	O
locals	struct
*	O
)	O
private_data	pointer
;	O
pid_t	int
child	int
;	O
int	O
fd	array
[	O
1	int
]	O
;	O
FILE	struct
*	O
fp	pointer
;	O
char	O
*	O
line	pointer
;	O
size_t	long
linesize	long
;	O
size_t	long
linelen	long
;	O
int	O
exitstatus	int
;	O
child	int
=	O
create_pipe_in	function
(	O
progname	pointer
,	O
prog_path	pointer
,	O
prog_argv	pointer
,	O
DEV_NULL	pointer
,	O
false	int
,	O
true	int
,	O
false	int
,	O
fd	array
)	O
;	O
if	O
(	O
child	int
==	O
-	O
1	int
)	O
return	O
false	int
;	O
fp	pointer
=	O
fdopen	function
(	O
fd	array
[	O
0	int
]	O
,	O
"r"	pointer
)	O
;	O
if	O
(	O
fp	pointer
==	O
NULL	O
)	O
{	O
error	function
(	O
0	int
,	O
errno	O
,	O
_	O
(	O
"fdopen() failed"	pointer
)	O
)	O
;	O
return	O
false	int
;	O
}	O
line	pointer
=	O
NULL	O
;	O
linesize	long
=	O
0	int
;	O
linelen	long
=	O
getline	function
(	O
&	O
line	pointer
,	O
&	O
linesize	long
,	O
fp	pointer
)	O
;	O
if	O
(	O
linelen	long
==	O
(	O
size_t	long
)	O
(	O
-	O
1	int
)	O
)	O
{	O
error	function
(	O
0	int
,	O
0	int
,	O
_	O
(	O
"%s subprocess I/O error"	pointer
)	O
,	O
progname	pointer
)	O
;	O
return	O
false	int
;	O
}	O
if	O
(	O
linelen	long
>	O
0	int
&&	O
line	pointer
[	O
linelen	long
-	O
1	int
]	O
==	O
'\n'	O
)	O
line	pointer
[	O
linelen	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
exitstatus	int
=	O
wait_subprocess	function
(	O
child	int
,	O
progname	pointer
,	O
true	int
,	O
false	int
,	O
true	int
,	O
false	int
,	O
NULL	O
)	O
;	O
if	O
(	O
exitstatus	int
!=	O
0	int
)	O
{	O
free	function
(	O
line	pointer
)	O
;	O
return	O
false	int
;	O
}	O
l	pointer
->	O
line	pointer
=	O
line	pointer
;	O
return	O
false	int
;	O
}	O
char	O
*	O
javaexec_version	function
(	O
void	O
)	O
{	O
const	O
char	O
*	O
class_name	pointer
=	O
"javaversion"	pointer
;	O
char	O
*	O
malloc_pkgdatadir	pointer
;	O
const	O
char	O
*	O
pkgdatadir	pointer
=	O
relocate2	O
(	O
PKGDATADIR	pointer
,	O
&	O
malloc_pkgdatadir	pointer
)	O
;	O
const	O
char	O
*	O
args	pointer
[	O
1	int
]	O
;	O
struct	O
locals	struct
locals	struct
;	O
args	pointer
[	O
0	int
]	O
=	O
NULL	O
;	O
locals	struct
.	O
line	pointer
=	O
NULL	O
;	O
execute_java_class	function
(	O
class_name	pointer
,	O
&	O
pkgdatadir	pointer
,	O
1	int
,	O
true	int
,	O
NULL	O
,	O
args	pointer
,	O
false	int
,	O
false	int
,	O
execute_and_read_line	function
,	O
&	O
locals	struct
)	O
;	O
free	function
(	O
malloc_pkgdatadir	pointer
)	O
;	O
return	O
locals	struct
.	O
line	pointer
;	O
}	O
