int	O
_API_fcircle	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
r	int
)	O
{	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"fcircle: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
points_are_connected	enum
)	O
{	O
}	O
else	O
{	O
plPoint	struct
pc	struct
;	O
bool	enum
clockwise	enum
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
=	O
_new_plPath	function
(	O
)	O
;	O
pc	struct
.	O
x	double
=	O
x	double
;	O
pc	struct
.	O
y	double
=	O
y	double
;	O
clockwise	enum
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
orientation	int
<	O
0	int
?	O
true	int
:	O
false	int
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_circle_scaling	enum
==	O
AS_ANY	int
)	O
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_circle_scaling	enum
==	O
AS_UNIFORM	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
uniform	enum
)	O
)	O
_add_circle	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
r	int
,	O
clockwise	enum
)	O
;	O
else	O
if	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellipse_scaling	enum
==	O
AS_ANY	int
)	O
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellipse_scaling	enum
==	O
AS_AXES_PRESERVED	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
axes_preserved	enum
)	O
)	O
_add_ellipse	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
r	int
,	O
r	int
,	O
0.0	int
,	O
clockwise	enum
)	O
;	O
else	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
==	O
AS_ANY	int
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
==	O
AS_AXES_PRESERVED	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
axes_preserved	enum
)	O
)	O
_add_circle_as_ellarcs	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
r	int
,	O
clockwise	enum
)	O
;	O
else	O
if	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	enum
==	O
AS_ANY	int
)	O
_add_circle_as_bezier3s	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
r	int
,	O
clockwise	enum
)	O
;	O
else	O
_add_circle_as_lines	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
pc	struct
,	O
r	int
,	O
clockwise	enum
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
==	O
PATH_SEGMENT_LIST	int
)	O
_plotter	pointer
->	O
maybe_prepaint_segments	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
}	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
=	O
x	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
=	O
y	double
;	O
return	O
0	int
;	O
}	O
