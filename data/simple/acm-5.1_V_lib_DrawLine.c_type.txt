void	O
DrawLine	function
(	O
AWindow	struct
*	O
w	pointer
,	O
int	O
x1	short
,	O
int	O
y1	short
,	O
int	O
x2	short
,	O
int	O
y2	short
,	O
ZInfo	struct
*	O
zinfo	pointer
)	O
{	O
register	O
int	O
t	int
;	O
register	O
Edge	struct
*	O
e	pointer
,	O
*	O
e1	pointer
;	O
zinfo	pointer
->	O
next	pointer
=	O
NotAnElement	O
;	O
if	O
(	O
ClipLine	function
(	O
w	pointer
,	O
&	O
x1	short
,	O
&	O
y1	short
,	O
&	O
x2	short
,	O
&	O
y2	short
)	O
)	O
return	O
;	O
if	O
(	O
y1	short
>	O
y2	short
)	O
{	O
t	int
=	O
x1	short
;	O
x1	short
=	O
x2	short
;	O
x2	short
=	O
t	int
;	O
t	int
=	O
y1	short
;	O
y1	short
=	O
y2	short
;	O
y2	short
=	O
t	int
;	O
}	O
if	O
(	O
(	O
x1	short
==	O
x2	short
)	O
||	O
(	O
y1	short
==	O
y2	short
)	O
)	O
{	O
if	O
(	O
w	pointer
->	O
EPTop	int
>=	O
w	pointer
->	O
EPSize	int
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Edge Pool Overflow\n"	pointer
)	O
;	O
return	O
;	O
}	O
e	pointer
=	O
&	O
(	O
w	pointer
->	O
edgePool	pointer
[	O
(	O
w	pointer
->	O
EPTop	int
)	O
++	O
]	O
)	O
;	O
e1	pointer
=	O
&	O
(	O
w	pointer
->	O
edgePool	pointer
[	O
(	O
w	pointer
->	O
EPTop	int
)	O
++	O
]	O
)	O
;	O
e	pointer
->	O
y2	short
=	O
e1	pointer
->	O
y2	short
=	O
y2	short
+	O
1	int
;	O
if	O
(	O
x1	short
==	O
x2	short
)	O
e	pointer
->	O
x1	short
=	O
e1	pointer
->	O
x1	short
=	O
x1	short
<<	O
16	int
;	O
else	O
{	O
e	pointer
->	O
x1	short
=	O
x1	short
<<	O
16	int
;	O
e1	pointer
->	O
x1	short
=	O
x2	short
<<	O
16	int
;	O
}	O
e	pointer
->	O
Dx	long
=	O
e1	pointer
->	O
Dx	long
=	O
0	int
;	O
e	pointer
->	O
p	pointer
=	O
e1	pointer
->	O
p	pointer
=	O
zinfo	pointer
;	O
e1	pointer
->	O
nexte	pointer
=	O
w	pointer
->	O
edges	pointer
[	O
y1	short
]	O
.	O
head	pointer
;	O
e	pointer
->	O
nexte	pointer
=	O
e1	pointer
;	O
w	pointer
->	O
edges	pointer
[	O
y1	short
]	O
.	O
head	pointer
=	O
e	pointer
;	O
}	O
else	O
{	O
if	O
(	O
w	pointer
->	O
EPTop	int
>=	O
w	pointer
->	O
EPSize	int
-	O
2	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Edge Pool Overflow\n"	pointer
)	O
;	O
return	O
;	O
}	O
e	pointer
=	O
&	O
(	O
w	pointer
->	O
edgePool	pointer
[	O
(	O
w	pointer
->	O
EPTop	int
)	O
++	O
]	O
)	O
;	O
w	pointer
->	O
EPTop	int
+=	O
2	int
;	O
e	pointer
->	O
y2	short
=	O
y2	short
;	O
e	pointer
->	O
x1	short
=	O
x1	short
<<	O
16	int
;	O
e	pointer
->	O
Dx	long
=	O
(	O
(	O
x2	short
-	O
x1	short
)	O
<<	O
16	int
)	O
/	O
(	O
y2	short
-	O
y1	short
)	O
;	O
e	pointer
->	O
p	pointer
=	O
(	O
e	pointer
+	O
1	int
)	O
->	O
p	pointer
=	O
(	O
e	pointer
+	O
2	int
)	O
->	O
p	pointer
=	O
zinfo	pointer
;	O
e	pointer
->	O
nexte	pointer
=	O
w	pointer
->	O
lines	pointer
[	O
y1	short
]	O
.	O
head	pointer
;	O
w	pointer
->	O
lines	pointer
[	O
y1	short
]	O
.	O
head	pointer
=	O
e	pointer
;	O
}	O
if	O
(	O
y1	short
<	O
w	pointer
->	O
ymin	short
)	O
w	pointer
->	O
ymin	short
=	O
y1	short
;	O
if	O
(	O
y2	short
>	O
w	pointer
->	O
ymax	short
)	O
w	pointer
->	O
ymax	short
=	O
y2	short
;	O
}	O
