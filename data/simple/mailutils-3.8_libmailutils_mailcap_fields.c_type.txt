void	O
mu_mailcap_entry_field_deallocate	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
struct	O
mailcap_field	struct
*	O
flg	pointer
=	O
ptr	pointer
;	O
if	O
(	O
flg	pointer
->	O
type	pointer
==	O
fld_string	int
)	O
free	function
(	O
flg	pointer
->	O
strval	pointer
)	O
;	O
free	function
(	O
flg	pointer
)	O
;	O
}	O
int	O
mu_mailcap_entry_set_bool	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
char	O
const	O
*	O
name	pointer
)	O
{	O
struct	O
mailcap_field	struct
*	O
fp	pointer
,	O
*	O
*	O
fpp	pointer
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
ent	pointer
||	O
!	O
name	pointer
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
mu_assoc_install_ref	function
(	O
ent	pointer
->	O
fields	pointer
,	O
name	pointer
,	O
(	O
void	O
*	O
)	O
&	O
fpp	pointer
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
fp	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
fp	pointer
)	O
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
return	O
ENOMEM	int
;	O
fp	pointer
->	O
type	pointer
=	O
fld_bool	int
;	O
*	O
fpp	pointer
=	O
fp	pointer
;	O
break	O
;	O
case	O
MU_ERR_EXISTS	O
:	O
fp	pointer
=	O
*	O
fpp	pointer
;	O
if	O
(	O
fp	pointer
->	O
type	pointer
==	O
fld_string	int
)	O
{	O
free	function
(	O
fp	pointer
->	O
strval	pointer
)	O
;	O
fp	pointer
->	O
strval	pointer
=	O
NULL	O
;	O
fp	pointer
->	O
type	pointer
=	O
fld_bool	int
;	O
}	O
break	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_mailcap_entry_set_string	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
char	O
const	O
*	O
name	pointer
,	O
char	O
const	O
*	O
value	pointer
)	O
{	O
struct	O
mailcap_field	struct
*	O
fp	pointer
,	O
*	O
*	O
fpp	pointer
;	O
int	O
rc	int
;	O
char	O
*	O
copy	pointer
;	O
if	O
(	O
!	O
ent	pointer
||	O
!	O
name	pointer
||	O
!	O
value	pointer
)	O
return	O
EINVAL	int
;	O
rc	int
=	O
mu_assoc_install_ref	function
(	O
ent	pointer
->	O
fields	pointer
,	O
name	pointer
,	O
(	O
void	O
*	O
)	O
&	O
fpp	pointer
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
0	int
:	O
fp	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
fp	pointer
)	O
)	O
;	O
if	O
(	O
!	O
fp	pointer
)	O
return	O
ENOMEM	int
;	O
fp	pointer
->	O
strval	pointer
=	O
strdup	function
(	O
value	pointer
)	O
;	O
if	O
(	O
!	O
fp	pointer
->	O
strval	pointer
)	O
{	O
free	function
(	O
fp	pointer
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
fp	pointer
->	O
type	pointer
=	O
fld_string	int
;	O
*	O
fpp	pointer
=	O
fp	pointer
;	O
break	O
;	O
case	O
MU_ERR_EXISTS	O
:	O
copy	pointer
=	O
strdup	function
(	O
value	pointer
)	O
;	O
if	O
(	O
!	O
copy	pointer
)	O
return	O
ENOMEM	int
;	O
fp	pointer
=	O
*	O
fpp	pointer
;	O
if	O
(	O
fp	pointer
->	O
type	pointer
==	O
fld_string	int
)	O
free	function
(	O
fp	pointer
->	O
strval	pointer
)	O
;	O
else	O
fp	pointer
->	O
type	pointer
=	O
fld_string	int
;	O
fp	pointer
->	O
strval	pointer
=	O
copy	pointer
;	O
break	O
;	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_mailcap_entry_field_unset	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
char	O
const	O
*	O
name	pointer
)	O
{	O
if	O
(	O
!	O
ent	pointer
||	O
!	O
name	pointer
)	O
return	O
EINVAL	int
;	O
return	O
mu_assoc_remove	function
(	O
ent	pointer
->	O
fields	pointer
,	O
name	pointer
)	O
;	O
}	O
int	O
mu_mailcap_entry_fields_count	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
size_t	long
*	O
pcount	pointer
)	O
{	O
if	O
(	O
!	O
ent	pointer
)	O
return	O
EINVAL	int
;	O
return	O
mu_assoc_count	function
(	O
ent	pointer
->	O
fields	pointer
,	O
pcount	pointer
)	O
;	O
}	O
struct	O
fields_iter_closure	struct
{	O
int	O
(	O
*	O
action	pointer
)	O
(	O
char	O
const	O
*	O
,	O
char	O
const	O
*	O
,	O
void	O
*	O
)	O
;	O
void	O
*	O
data	pointer
;	O
}	O
;	O
static	O
int	O
fields_iter_action	function
(	O
char	O
const	O
*	O
name	pointer
,	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
mailcap_field	struct
*	O
flg	pointer
=	O
item	pointer
;	O
struct	O
fields_iter_closure	struct
*	O
clos	pointer
=	O
data	pointer
;	O
return	O
clos	pointer
->	O
action	pointer
(	O
name	pointer
,	O
flg	pointer
->	O
type	pointer
==	O
fld_string	int
?	O
flg	pointer
->	O
strval	pointer
:	O
NULL	O
,	O
clos	pointer
->	O
data	pointer
)	O
;	O
}	O
int	O
mu_mailcap_entry_fields_foreach	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
int	O
(	O
*	O
action	pointer
)	O
(	O
char	O
const	O
*	O
,	O
char	O
const	O
*	O
,	O
void	O
*	O
)	O
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
fields_iter_closure	struct
clos	pointer
;	O
if	O
(	O
!	O
ent	pointer
||	O
!	O
action	pointer
)	O
return	O
EINVAL	int
;	O
clos	pointer
.	O
action	pointer
=	O
action	pointer
;	O
clos	pointer
.	O
data	pointer
=	O
data	pointer
;	O
return	O
mu_assoc_foreach	function
(	O
ent	pointer
->	O
fields	pointer
,	O
fields_iter_action	function
,	O
&	O
clos	pointer
)	O
;	O
}	O
int	O
mu_mailcap_entry_fields_get_iterator	function
(	O
mu_mailcap_entry_t	pointer
ent	pointer
,	O
mu_iterator_t	pointer
*	O
pitr	pointer
)	O
{	O
if	O
(	O
!	O
ent	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
pitr	pointer
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
return	O
mu_assoc_get_iterator	function
(	O
ent	pointer
->	O
fields	pointer
,	O
pitr	pointer
)	O
;	O
}	O
