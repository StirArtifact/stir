struct	O
rec_aggregate_reg_elem_s	struct
{	O
char	O
*	O
name	pointer
;	O
rec_aggregate_t	pointer
function	pointer
;	O
}	O
;	O
struct	O
rec_aggregate_reg_s	struct
{	O
struct	O
rec_aggregate_reg_elem_s	struct
functions	array
[	O
MAX_FUNCTIONS	int
]	O
;	O
size_t	long
num_functions	long
;	O
}	O
;	O
static	O
char	O
*	O
rec_aggregate_std_count	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
char	O
*	O
rec_aggregate_std_avg	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
double	O
rec_aggregate_std_avg_record	function
(	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
char	O
*	O
rec_aggregate_std_sum	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
double	O
rec_aggregate_std_sum_record	function
(	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
char	O
*	O
rec_aggregate_std_min	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
double	O
rec_aggregate_std_min_record	function
(	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
char	O
*	O
rec_aggregate_std_max	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
static	O
double	O
rec_aggregate_std_max_record	function
(	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
;	O
struct	O
rec_aggregate_descriptor_s	struct
{	O
const	O
char	O
*	O
name	pointer
;	O
rec_aggregate_t	pointer
func	pointer
;	O
}	O
;	O
static	O
struct	O
rec_aggregate_descriptor_s	struct
std_aggregates	array
[	O
]	O
=	O
{	O
{	O
"count"	pointer
,	O
&	O
rec_aggregate_std_count	function
}	O
,	O
{	O
"avg"	pointer
,	O
&	O
rec_aggregate_std_avg	function
}	O
,	O
{	O
"sum"	pointer
,	O
&	O
rec_aggregate_std_sum	function
}	O
,	O
{	O
"min"	pointer
,	O
&	O
rec_aggregate_std_min	function
}	O
,	O
{	O
"max"	pointer
,	O
&	O
rec_aggregate_std_max	function
}	O
}	O
;	O
rec_aggregate_reg_t	pointer
rec_aggregate_reg_new	function
(	O
void	O
)	O
{	O
rec_aggregate_reg_t	pointer
new	pointer
;	O
new	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
rec_aggregate_reg_s	struct
)	O
)	O
;	O
if	O
(	O
new	pointer
)	O
new	pointer
->	O
num_functions	long
=	O
0	int
;	O
return	O
new	pointer
;	O
}	O
void	O
rec_aggregate_reg_destroy	function
(	O
rec_aggregate_reg_t	pointer
func_reg	pointer
)	O
{	O
if	O
(	O
func_reg	pointer
)	O
{	O
size_t	long
i	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
func_reg	pointer
->	O
num_functions	long
;	O
i	long
++	O
)	O
free	function
(	O
func_reg	pointer
->	O
functions	array
[	O
i	long
]	O
.	O
name	pointer
)	O
;	O
free	function
(	O
func_reg	pointer
)	O
;	O
}	O
}	O
bool	bool
rec_aggregate_reg_add	function
(	O
rec_aggregate_reg_t	pointer
func_reg	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
rec_aggregate_t	pointer
function	pointer
)	O
{	O
bool	bool
function_replaced	bool
=	O
false	int
;	O
size_t	long
i	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
func_reg	pointer
->	O
num_functions	long
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
func_reg	pointer
->	O
functions	array
[	O
i	long
]	O
.	O
name	pointer
)	O
==	O
0	int
)	O
{	O
func_reg	pointer
->	O
functions	array
[	O
i	long
]	O
.	O
function	pointer
=	O
function	pointer
;	O
function_replaced	bool
=	O
true	int
;	O
break	O
;	O
}	O
if	O
(	O
!	O
function_replaced	bool
)	O
{	O
if	O
(	O
func_reg	pointer
->	O
num_functions	long
==	O
MAX_FUNCTIONS	int
)	O
return	O
false	int
;	O
func_reg	pointer
->	O
functions	array
[	O
func_reg	pointer
->	O
num_functions	long
]	O
.	O
name	pointer
=	O
strdup	function
(	O
name	pointer
)	O
;	O
func_reg	pointer
->	O
functions	array
[	O
func_reg	pointer
->	O
num_functions	long
]	O
.	O
function	pointer
=	O
function	pointer
;	O
func_reg	pointer
->	O
num_functions	long
++	O
;	O
}	O
return	O
true	int
;	O
}	O
rec_aggregate_t	pointer
rec_aggregate_reg_get	function
(	O
rec_aggregate_reg_t	pointer
func_reg	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
size_t	long
i	long
=	O
0	int
;	O
rec_aggregate_t	pointer
res	pointer
=	O
NULL	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
func_reg	pointer
->	O
num_functions	long
;	O
i	long
++	O
)	O
if	O
(	O
strcasecmp	function
(	O
func_reg	pointer
->	O
functions	array
[	O
i	long
]	O
.	O
name	pointer
,	O
name	pointer
)	O
==	O
0	int
)	O
{	O
res	pointer
=	O
func_reg	pointer
->	O
functions	array
[	O
i	long
]	O
.	O
function	pointer
;	O
break	O
;	O
}	O
return	O
res	pointer
;	O
}	O
void	O
rec_aggregate_reg_add_standard	function
(	O
rec_aggregate_reg_t	pointer
func_reg	pointer
)	O
{	O
size_t	long
i	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
NUM_STD_AGGREGATES	int
;	O
i	long
++	O
)	O
rec_aggregate_reg_add	function
(	O
func_reg	pointer
,	O
std_aggregates	array
[	O
i	long
]	O
.	O
name	pointer
,	O
std_aggregates	array
[	O
i	long
]	O
.	O
func	pointer
)	O
;	O
}	O
bool	bool
rec_aggregate_std_p	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
bool	bool
found	bool
=	O
false	int
;	O
size_t	long
i	long
=	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
NUM_STD_AGGREGATES	int
;	O
i	long
++	O
)	O
if	O
(	O
strcasecmp	function
(	O
name	pointer
,	O
std_aggregates	array
[	O
i	long
]	O
.	O
name	pointer
)	O
==	O
0	int
)	O
{	O
found	bool
=	O
true	int
;	O
break	O
;	O
}	O
return	O
found	bool
;	O
}	O
static	O
char	O
*	O
rec_aggregate_std_count	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
{	O
char	O
*	O
result	pointer
=	O
NULL	O
;	O
size_t	long
count	long
=	O
0	int
;	O
if	O
(	O
record	pointer
)	O
count	long
=	O
rec_record_get_num_fields_by_name	function
(	O
record	pointer
,	O
field_name	pointer
)	O
;	O
else	O
if	O
(	O
rset	pointer
)	O
{	O
rec_record_t	pointer
rec	pointer
=	O
NULL	O
;	O
rec_mset_iterator_t	struct
iter	struct
=	O
rec_mset_iterator	function
(	O
rec_rset_mset	function
(	O
rset	pointer
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	function
(	O
&	O
iter	struct
,	O
MSET_RECORD	int
,	O
(	O
void	O
*	O
)	O
&	O
rec	pointer
,	O
NULL	O
)	O
)	O
count	long
=	O
count	long
+	O
rec_record_get_num_fields_by_name	function
(	O
rec	pointer
,	O
field_name	pointer
)	O
;	O
rec_mset_iterator_free	function
(	O
&	O
iter	struct
)	O
;	O
}	O
asprintf	function
(	O
&	O
result	pointer
,	O
"%zu"	pointer
,	O
count	long
)	O
;	O
return	O
result	pointer
;	O
}	O
static	O
char	O
*	O
rec_aggregate_std_avg	function
(	O
rec_rset_t	pointer
rset	pointer
,	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
{	O
char	O
*	O
result	pointer
=	O
NULL	O
;	O
double	O
avg	double
=	O
0	int
;	O
if	O
(	O
record	pointer
)	O
avg	double
=	O
rec_aggregate_std_avg_record	function
(	O
record	pointer
,	O
field_name	pointer
)	O
;	O
else	O
if	O
(	O
rset	pointer
)	O
{	O
size_t	long
num_records	long
=	O
0	int
;	O
rec_record_t	pointer
rec	pointer
=	O
NULL	O
;	O
rec_mset_iterator_t	struct
iter	struct
=	O
rec_mset_iterator	function
(	O
rec_rset_mset	function
(	O
rset	pointer
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	function
(	O
&	O
iter	struct
,	O
MSET_RECORD	int
,	O
(	O
void	O
*	O
)	O
&	O
rec	pointer
,	O
NULL	O
)	O
)	O
{	O
avg	double
=	O
avg	double
+	O
rec_aggregate_std_avg_record	function
(	O
rec	pointer
,	O
field_name	pointer
)	O
;	O
num_records	long
++	O
;	O
}	O
rec_mset_iterator_free	function
(	O
&	O
iter	struct
)	O
;	O
if	O
(	O
num_records	long
!=	O
0	int
)	O
avg	double
=	O
avg	double
/	O
num_records	long
;	O
}	O
asprintf	function
(	O
&	O
result	pointer
,	O
"%g"	pointer
,	O
avg	double
)	O
;	O
return	O
result	pointer
;	O
}	O
static	O
double	O
rec_aggregate_std_avg_record	function
(	O
rec_record_t	pointer
record	pointer
,	O
const	O
char	O
*	O
field_name	pointer
)	O
{	O
double	O
avg	double
=	O
0	int
;	O
rec_field_t	pointer
field	pointer
;	O
size_t	long
num_fields	long
=	O
0	int
;	O
rec_mset_iterator_t	struct
iter	struct
=	O
rec_mset_iterator	function
(	O
rec_record_mset	function
(	O
record	pointer
)	O
)	O
;	O
while	O
(	O
rec_mset_iterator_next	function
(	O
&	O
iter	struct
,	O
MSET_FIELD	int
,	O
(	O
void	O
*	O
)	O
&	O
field	pointer
,	O
NULL	O
)	O
)	O
{	O
double	O
field_value_double	double
=	O
0	int
;	O
const	O
char	O
*	O
field_value	pointer
=	O
rec_field_value	function
(	O
field	pointer
)	O
;	O
if	O
(	O
rec_field_name_equal_p	function
(	O
rec_field_name	function
(	O
field	pointer
)	O
,	O
field_name	pointer
)	O
&&	O
rec_atod	function
(	O
field_value	pointer
,	O
&	O
field_value_double	double
)	O
)	O
{	O
avg	double
=	O
avg	double
+	O
field_value_double	double
;	O
num_fields	long
++	O
;	O
}	O
}	O
rec_mset_iterator_free	function
(	O
&	O
iter	struct
)	O
;	O
if	O
(	O
num_fields	long
!=	O
0	int
)	O
avg	double
=	O
avg	double
/	O
num_fields	long
;	O
return	O
avg	double
;	O
}	O
static	O
inline	O
double	O
op_sum	function
(	O
double	O
op1	double
,	O
double	O
op2	double
)	O
{	O
return	O
op1	double
+	O
op2	double
;	O
}	O
REC_AGGREGATE_ACCUM_FUNC	O
(	O
sum	O
,	O
op_sum	function
,	O
0	int
)	O
;	O
REC_AGGREGATE_ACCUM_FUNC	O
(	O
min	int
,	O
MIN	O
,	O
DBL_MAX	O
)	O
;	O
REC_AGGREGATE_ACCUM_FUNC	O
(	O
max	int
,	O
MAX	O
,	O
DBL_MIN	O
)	O
;	O
