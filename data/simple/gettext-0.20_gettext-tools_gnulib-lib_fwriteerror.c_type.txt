static	O
int	O
do_fwriteerror	function
(	O
FILE	struct
*	O
fp	pointer
,	O
bool	bool
ignore_ebadf	bool
)	O
{	O
static	O
bool	bool
stdout_closed	bool
=	O
false	int
;	O
if	O
(	O
fp	pointer
==	O
stdout	pointer
)	O
{	O
if	O
(	O
stdout_closed	bool
)	O
return	O
0	int
;	O
stdout_closed	bool
=	O
true	int
;	O
}	O
errno	O
=	O
0	int
;	O
if	O
(	O
ferror	function
(	O
fp	pointer
)	O
)	O
{	O
if	O
(	O
fflush	function
(	O
fp	pointer
)	O
)	O
goto	O
close_preserving_errno	O
;	O
if	O
(	O
fputc	function
(	O
'\0'	O
,	O
fp	pointer
)	O
==	O
EOF	O
)	O
goto	O
close_preserving_errno	O
;	O
if	O
(	O
fflush	function
(	O
fp	pointer
)	O
)	O
goto	O
close_preserving_errno	O
;	O
errno	O
=	O
0	int
;	O
goto	O
close_preserving_errno	O
;	O
}	O
if	O
(	O
ignore_ebadf	bool
)	O
{	O
if	O
(	O
fflush	function
(	O
fp	pointer
)	O
)	O
goto	O
close_preserving_errno	O
;	O
if	O
(	O
fclose	function
(	O
fp	pointer
)	O
&&	O
errno	O
!=	O
EBADF	int
)	O
goto	O
got_errno	O
;	O
}	O
else	O
{	O
if	O
(	O
fclose	function
(	O
fp	pointer
)	O
)	O
goto	O
got_errno	O
;	O
}	O
return	O
0	int
;	O
close_preserving_errno	O
:	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
fclose	function
(	O
fp	pointer
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
}	O
got_errno	O
:	O
if	O
(	O
errno	O
==	O
EPIPE	int
)	O
return	O
0	int
;	O
else	O
return	O
-	O
1	int
;	O
}	O
int	O
fwriteerror	function
(	O
FILE	struct
*	O
fp	pointer
)	O
{	O
return	O
do_fwriteerror	function
(	O
fp	pointer
,	O
false	int
)	O
;	O
}	O
int	O
fwriteerror_no_ebadf	function
(	O
FILE	struct
*	O
fp	pointer
)	O
{	O
return	O
do_fwriteerror	function
(	O
fp	pointer
,	O
true	int
)	O
;	O
}	O
