const	O
char	O
unz_copyright	array
[	O
]	O
=	O
" unzip 1.01 Copyright 1998-2004 Gilles Vollant - http://www.winimage.com/zLibDll"	pointer
;	O
typedef	O
struct	O
unz_file_info64_internal_s	struct
{	O
ZPOS64_T	long long
offset_curfile	long long
;	O
}	O
unz_file_info64_internal	struct
;	O
typedef	O
struct	O
{	O
char	O
*	O
read_buffer	pointer
;	O
z_stream	struct
stream	pointer
;	O
ZPOS64_T	long long
pos_in_zipfile	long long
;	O
uLong	long
stream_initialised	long
;	O
ZPOS64_T	long long
offset_local_extrafield	long long
;	O
uInt	int
size_local_extrafield	int
;	O
ZPOS64_T	long long
pos_local_extrafield	long long
;	O
ZPOS64_T	long long
total_out_64	long long
;	O
uLong	long
crc32	function
;	O
uLong	long
crc32_wait	long
;	O
ZPOS64_T	long long
rest_read_compressed	long long
;	O
ZPOS64_T	long long
rest_read_uncompressed	long long
;	O
zlib_filefunc64_32_def	struct
z_filefunc	struct
;	O
voidpf	pointer
filestream	pointer
;	O
uLong	long
compression_method	long
;	O
ZPOS64_T	long long
byte_before_the_zipfile	long long
;	O
int	O
raw	int
;	O
}	O
file_in_zip64_read_info_s	struct
;	O
typedef	O
struct	O
{	O
zlib_filefunc64_32_def	struct
z_filefunc	struct
;	O
int	O
is64bitOpenFunction	int
;	O
voidpf	pointer
filestream	pointer
;	O
unz_global_info64	struct
gi	struct
;	O
ZPOS64_T	long long
byte_before_the_zipfile	long long
;	O
ZPOS64_T	long long
num_file	long long
;	O
ZPOS64_T	long long
pos_in_central_dir	long long
;	O
ZPOS64_T	long long
current_file_ok	long long
;	O
ZPOS64_T	long long
central_pos	long long
;	O
ZPOS64_T	long long
size_central_dir	long long
;	O
ZPOS64_T	long long
offset_central_dir	long long
;	O
unz_file_info64	struct
cur_file_info	struct
;	O
unz_file_info64_internal	struct
cur_file_info_internal	struct
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read	pointer
;	O
int	O
encrypted	int
;	O
int	O
isZip64	int
;	O
}	O
unz64_s	struct
;	O
local	O
int	O
unz64local_getByte	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
int	O
*	O
pi	pointer
)	O
)	O
;	O
local	O
int	O
unz64local_getByte	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
int	O
*	O
pi	pointer
)	O
{	O
unsigned	O
char	O
c	int
;	O
int	O
err	int
=	O
(	O
int	O
)	O
ZREAD64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
c	int
,	O
1	int
)	O
;	O
if	O
(	O
err	int
==	O
1	int
)	O
{	O
*	O
pi	pointer
=	O
(	O
int	O
)	O
c	int
;	O
return	O
UNZ_OK	O
;	O
}	O
else	O
{	O
if	O
(	O
ZERROR64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
)	O
)	O
return	O
UNZ_ERRNO	O
;	O
else	O
return	O
UNZ_EOF	O
;	O
}	O
}	O
local	O
int	O
unz64local_getShort	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
uLong	long
*	O
pX	pointer
)	O
)	O
;	O
local	O
int	O
unz64local_getShort	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
uLong	long
*	O
pX	pointer
)	O
{	O
uLong	long
x	long
;	O
int	O
i	int
=	O
0	int
;	O
int	O
err	int
;	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
=	O
(	O
uLong	long
)	O
i	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
uLong	long
)	O
i	int
)	O
<<	O
8	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
*	O
pX	pointer
=	O
x	long
;	O
else	O
*	O
pX	pointer
=	O
0	int
;	O
return	O
err	int
;	O
}	O
local	O
int	O
unz64local_getLong	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
uLong	long
*	O
pX	pointer
)	O
)	O
;	O
local	O
int	O
unz64local_getLong	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
uLong	long
*	O
pX	pointer
)	O
{	O
uLong	long
x	long
;	O
int	O
i	int
=	O
0	int
;	O
int	O
err	int
;	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
=	O
(	O
uLong	long
)	O
i	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
uLong	long
)	O
i	int
)	O
<<	O
8	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
uLong	long
)	O
i	int
)	O
<<	O
16	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
+=	O
(	O
(	O
uLong	long
)	O
i	int
)	O
<<	O
24	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
*	O
pX	pointer
=	O
x	long
;	O
else	O
*	O
pX	pointer
=	O
0	int
;	O
return	O
err	int
;	O
}	O
local	O
int	O
unz64local_getLong64	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
ZPOS64_T	long long
*	O
pX	pointer
)	O
)	O
;	O
local	O
int	O
unz64local_getLong64	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
,	O
ZPOS64_T	long long
*	O
pX	pointer
)	O
{	O
ZPOS64_T	long long
x	long
;	O
int	O
i	int
=	O
0	int
;	O
int	O
err	int
;	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
=	O
(	O
ZPOS64_T	long long
)	O
i	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
8	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
16	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
24	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
32	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
40	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
48	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
err	int
=	O
unz64local_getByte	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
i	int
)	O
;	O
x	long
|=	O
(	O
(	O
ZPOS64_T	long long
)	O
i	int
)	O
<<	O
56	int
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
*	O
pX	pointer
=	O
x	long
;	O
else	O
*	O
pX	pointer
=	O
0	int
;	O
return	O
err	int
;	O
}	O
local	O
int	O
strcmpcasenosensitive_internal	function
(	O
const	O
char	O
*	O
fileName1	pointer
,	O
const	O
char	O
*	O
fileName2	pointer
)	O
{	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
c1	char
=	O
*	O
(	O
fileName1	pointer
++	O
)	O
;	O
char	O
c2	char
=	O
*	O
(	O
fileName2	pointer
++	O
)	O
;	O
if	O
(	O
(	O
c1	char
>=	O
'a'	O
)	O
&&	O
(	O
c1	char
<=	O
'z'	O
)	O
)	O
c1	char
-=	O
0x20	int
;	O
if	O
(	O
(	O
c2	char
>=	O
'a'	O
)	O
&&	O
(	O
c2	char
<=	O
'z'	O
)	O
)	O
c2	char
-=	O
0x20	int
;	O
if	O
(	O
c1	char
==	O
'\0'	O
)	O
return	O
(	O
(	O
c2	char
==	O
'\0'	O
)	O
?	O
0	int
:	O
-	O
1	int
)	O
;	O
if	O
(	O
c2	char
==	O
'\0'	O
)	O
return	O
1	int
;	O
if	O
(	O
c1	char
<	O
c2	char
)	O
return	O
-	O
1	int
;	O
if	O
(	O
c1	char
>	O
c2	char
)	O
return	O
1	int
;	O
}	O
}	O
extern	O
int	O
ZEXPORT	O
unzStringFileNameCompare	function
(	O
const	O
char	O
*	O
fileName1	pointer
,	O
const	O
char	O
*	O
fileName2	pointer
,	O
int	O
iCaseSensitivity	int
)	O
{	O
if	O
(	O
iCaseSensitivity	int
==	O
0	int
)	O
iCaseSensitivity	int
=	O
CASESENSITIVITYDEFAULTVALUE	int
;	O
if	O
(	O
iCaseSensitivity	int
==	O
1	int
)	O
return	O
strcmp	function
(	O
fileName1	pointer
,	O
fileName2	pointer
)	O
;	O
return	O
STRCMPCASENOSENTIVEFUNCTION	O
(	O
fileName1	pointer
,	O
fileName2	pointer
)	O
;	O
}	O
local	O
ZPOS64_T	long long
unz64local_SearchCentralDir	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
)	O
)	O
;	O
local	O
ZPOS64_T	long long
unz64local_SearchCentralDir	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
)	O
{	O
unsigned	O
char	O
*	O
buf	pointer
;	O
ZPOS64_T	long long
uSizeFile	long long
;	O
ZPOS64_T	long long
uBackRead	long long
;	O
ZPOS64_T	long long
uMaxBack	long long
=	O
0xffff	int
;	O
ZPOS64_T	long long
uPosFound	long long
=	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
0	int
,	O
ZLIB_FILEFUNC_SEEK_END	O
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
uSizeFile	long long
=	O
ZTELL64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
)	O
;	O
if	O
(	O
uMaxBack	long long
>	O
uSizeFile	long long
)	O
uMaxBack	long long
=	O
uSizeFile	long long
;	O
buf	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
ALLOC	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
;	O
if	O
(	O
buf	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
uBackRead	long long
=	O
4	int
;	O
while	O
(	O
uBackRead	long long
<	O
uMaxBack	long long
)	O
{	O
uLong	long
uReadSize	long
;	O
ZPOS64_T	long long
uReadPos	long long
;	O
int	O
i	int
;	O
if	O
(	O
uBackRead	long long
+	O
BUFREADCOMMENT	O
>	O
uMaxBack	long long
)	O
uBackRead	long long
=	O
uMaxBack	long long
;	O
else	O
uBackRead	long long
+=	O
BUFREADCOMMENT	O
;	O
uReadPos	long long
=	O
uSizeFile	long long
-	O
uBackRead	long long
;	O
uReadSize	long
=	O
(	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
<	O
(	O
uSizeFile	long long
-	O
uReadPos	long long
)	O
)	O
?	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
:	O
(	O
uLong	long
)	O
(	O
uSizeFile	long long
-	O
uReadPos	long long
)	O
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
uReadPos	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
break	O
;	O
if	O
(	O
ZREAD64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
buf	pointer
,	O
uReadSize	long
)	O
!=	O
uReadSize	long
)	O
break	O
;	O
for	O
(	O
i	int
=	O
(	O
int	O
)	O
uReadSize	long
-	O
3	int
;	O
(	O
i	int
--	O
)	O
>	O
0	int
;	O
)	O
if	O
(	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
)	O
)	O
==	O
0x50	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
1	int
)	O
)	O
==	O
0x4b	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
2	int
)	O
)	O
==	O
0x05	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
3	int
)	O
)	O
==	O
0x06	int
)	O
)	O
{	O
uPosFound	long long
=	O
uReadPos	long long
+	O
i	int
;	O
break	O
;	O
}	O
if	O
(	O
uPosFound	long long
!=	O
0	int
)	O
break	O
;	O
}	O
TRYFREE	O
(	O
buf	pointer
)	O
;	O
return	O
uPosFound	long long
;	O
}	O
local	O
ZPOS64_T	long long
unz64local_SearchCentralDir64	function
OF	O
(	O
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
)	O
)	O
;	O
local	O
ZPOS64_T	long long
unz64local_SearchCentralDir64	function
(	O
const	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc_def	pointer
,	O
voidpf	pointer
filestream	pointer
)	O
{	O
unsigned	O
char	O
*	O
buf	pointer
;	O
ZPOS64_T	long long
uSizeFile	long long
;	O
ZPOS64_T	long long
uBackRead	long long
;	O
ZPOS64_T	long long
uMaxBack	long long
=	O
0xffff	int
;	O
ZPOS64_T	long long
uPosFound	long long
=	O
0	int
;	O
uLong	long
uL	long
;	O
ZPOS64_T	long long
relativeOffset	long long
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
0	int
,	O
ZLIB_FILEFUNC_SEEK_END	O
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
uSizeFile	long long
=	O
ZTELL64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
)	O
;	O
if	O
(	O
uMaxBack	long long
>	O
uSizeFile	long long
)	O
uMaxBack	long long
=	O
uSizeFile	long long
;	O
buf	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
ALLOC	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
;	O
if	O
(	O
buf	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
uBackRead	long long
=	O
4	int
;	O
while	O
(	O
uBackRead	long long
<	O
uMaxBack	long long
)	O
{	O
uLong	long
uReadSize	long
;	O
ZPOS64_T	long long
uReadPos	long long
;	O
int	O
i	int
;	O
if	O
(	O
uBackRead	long long
+	O
BUFREADCOMMENT	O
>	O
uMaxBack	long long
)	O
uBackRead	long long
=	O
uMaxBack	long long
;	O
else	O
uBackRead	long long
+=	O
BUFREADCOMMENT	O
;	O
uReadPos	long long
=	O
uSizeFile	long long
-	O
uBackRead	long long
;	O
uReadSize	long
=	O
(	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
<	O
(	O
uSizeFile	long long
-	O
uReadPos	long long
)	O
)	O
?	O
(	O
BUFREADCOMMENT	O
+	O
4	int
)	O
:	O
(	O
uLong	long
)	O
(	O
uSizeFile	long long
-	O
uReadPos	long long
)	O
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
uReadPos	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
break	O
;	O
if	O
(	O
ZREAD64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
buf	pointer
,	O
uReadSize	long
)	O
!=	O
uReadSize	long
)	O
break	O
;	O
for	O
(	O
i	int
=	O
(	O
int	O
)	O
uReadSize	long
-	O
3	int
;	O
(	O
i	int
--	O
)	O
>	O
0	int
;	O
)	O
if	O
(	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
)	O
)	O
==	O
0x50	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
1	int
)	O
)	O
==	O
0x4b	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
2	int
)	O
)	O
==	O
0x06	int
)	O
&&	O
(	O
(	O
*	O
(	O
buf	pointer
+	O
i	int
+	O
3	int
)	O
)	O
==	O
0x07	int
)	O
)	O
{	O
uPosFound	long long
=	O
uReadPos	long long
+	O
i	int
;	O
break	O
;	O
}	O
if	O
(	O
uPosFound	long long
!=	O
0	int
)	O
break	O
;	O
}	O
TRYFREE	O
(	O
buf	pointer
)	O
;	O
if	O
(	O
uPosFound	long long
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
uPosFound	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
unz64local_getLong	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
return	O
0	int
;	O
if	O
(	O
unz64local_getLong	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
return	O
0	int
;	O
if	O
(	O
uL	long
!=	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
unz64local_getLong64	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
relativeOffset	long long
)	O
!=	O
UNZ_OK	O
)	O
return	O
0	int
;	O
if	O
(	O
unz64local_getLong	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
return	O
0	int
;	O
if	O
(	O
uL	long
!=	O
1	int
)	O
return	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
*	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
relativeOffset	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
unz64local_getLong	function
(	O
pzlib_filefunc_def	pointer
,	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
return	O
0	int
;	O
if	O
(	O
uL	long
!=	O
0x06064b50	int
)	O
return	O
0	int
;	O
return	O
relativeOffset	long long
;	O
}	O
local	O
unzFile	pointer
unzOpenInternal	function
(	O
const	O
void	O
*	O
path	pointer
,	O
zlib_filefunc64_32_def	struct
*	O
pzlib_filefunc64_32_def	pointer
,	O
int	O
is64bitOpenFunction	int
)	O
{	O
unz64_s	struct
us	struct
;	O
unz64_s	struct
*	O
s	pointer
;	O
ZPOS64_T	long long
central_pos	long long
;	O
uLong	long
uL	long
;	O
uLong	long
number_disk	long
;	O
uLong	long
number_disk_with_CD	long
;	O
ZPOS64_T	long long
number_entry_CD	long long
;	O
int	O
err	int
=	O
UNZ_OK	O
;	O
if	O
(	O
unz_copyright	array
[	O
0	int
]	O
!=	O
' '	O
)	O
return	O
NULL	O
;	O
us	struct
.	O
z_filefunc	struct
.	O
zseek32_file	pointer
=	O
NULL	O
;	O
us	struct
.	O
z_filefunc	struct
.	O
ztell32_file	pointer
=	O
NULL	O
;	O
if	O
(	O
pzlib_filefunc64_32_def	pointer
==	O
NULL	O
)	O
fill_fopen64_filefunc	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
.	O
zfile_func64	struct
)	O
;	O
else	O
us	struct
.	O
z_filefunc	struct
=	O
*	O
pzlib_filefunc64_32_def	pointer
;	O
us	struct
.	O
is64bitOpenFunction	int
=	O
is64bitOpenFunction	int
;	O
us	struct
.	O
filestream	pointer
=	O
ZOPEN64	O
(	O
us	struct
.	O
z_filefunc	struct
,	O
path	pointer
,	O
ZLIB_FILEFUNC_MODE_READ	O
|	O
ZLIB_FILEFUNC_MODE_EXISTING	O
)	O
;	O
if	O
(	O
us	struct
.	O
filestream	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
central_pos	long long
=	O
unz64local_SearchCentralDir64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
)	O
;	O
if	O
(	O
central_pos	long long
)	O
{	O
uLong	long
uS	long
;	O
ZPOS64_T	long long
uL64	long long
;	O
us	struct
.	O
isZip64	int
=	O
1	int
;	O
if	O
(	O
ZSEEK64	O
(	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
central_pos	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL64	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uS	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uS	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
number_disk	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
number_disk_with_CD	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
us	struct
.	O
gi	struct
.	O
number_entry	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
number_entry_CD	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
(	O
number_entry_CD	long long
!=	O
us	struct
.	O
gi	struct
.	O
number_entry	long long
)	O
||	O
(	O
number_disk_with_CD	long
!=	O
0	int
)	O
||	O
(	O
number_disk	long
!=	O
0	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
us	struct
.	O
size_central_dir	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
us	struct
.	O
offset_central_dir	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
us	struct
.	O
gi	struct
.	O
size_comment	long
=	O
0	int
;	O
}	O
else	O
{	O
central_pos	long long
=	O
unz64local_SearchCentralDir	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
)	O
;	O
if	O
(	O
central_pos	long long
==	O
0	int
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
us	struct
.	O
isZip64	int
=	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
central_pos	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
number_disk	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
number_disk_with_CD	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
us	struct
.	O
gi	struct
.	O
number_entry	long long
=	O
uL	long
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
number_entry_CD	long long
=	O
uL	long
;	O
if	O
(	O
(	O
number_entry_CD	long long
!=	O
us	struct
.	O
gi	struct
.	O
number_entry	long long
)	O
||	O
(	O
number_disk_with_CD	long
!=	O
0	int
)	O
||	O
(	O
number_disk	long
!=	O
0	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
us	struct
.	O
size_central_dir	long long
=	O
uL	long
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
us	struct
.	O
offset_central_dir	long long
=	O
uL	long
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
,	O
&	O
us	struct
.	O
gi	struct
.	O
size_comment	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
(	O
central_pos	long long
<	O
us	struct
.	O
offset_central_dir	long long
+	O
us	struct
.	O
size_central_dir	long long
)	O
&&	O
(	O
err	int
==	O
UNZ_OK	O
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
err	int
!=	O
UNZ_OK	O
)	O
{	O
ZCLOSE64	O
(	O
us	struct
.	O
z_filefunc	struct
,	O
us	struct
.	O
filestream	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
us	struct
.	O
byte_before_the_zipfile	long long
=	O
central_pos	long long
-	O
(	O
us	struct
.	O
offset_central_dir	long long
+	O
us	struct
.	O
size_central_dir	long long
)	O
;	O
us	struct
.	O
central_pos	long long
=	O
central_pos	long long
;	O
us	struct
.	O
pfile_in_zip_read	pointer
=	O
NULL	O
;	O
us	struct
.	O
encrypted	int
=	O
0	int
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
ALLOC	O
(	O
sizeof	O
(	O
unz64_s	struct
)	O
)	O
;	O
if	O
(	O
s	pointer
!=	O
NULL	O
)	O
{	O
*	O
s	pointer
=	O
us	struct
;	O
unzGoToFirstFile	function
(	O
(	O
unzFile	pointer
)	O
s	pointer
)	O
;	O
}	O
return	O
(	O
unzFile	pointer
)	O
s	pointer
;	O
}	O
extern	O
unzFile	pointer
ZEXPORT	O
unzOpen2	function
(	O
const	O
char	O
*	O
path	pointer
,	O
zlib_filefunc_def	struct
*	O
pzlib_filefunc32_def	pointer
)	O
{	O
if	O
(	O
pzlib_filefunc32_def	pointer
!=	O
NULL	O
)	O
{	O
zlib_filefunc64_32_def	struct
zlib_filefunc64_32_def_fill	struct
;	O
fill_zlib_filefunc64_32_def_from_filefunc32	function
(	O
&	O
zlib_filefunc64_32_def_fill	struct
,	O
pzlib_filefunc32_def	pointer
)	O
;	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
&	O
zlib_filefunc64_32_def_fill	struct
,	O
0	int
)	O
;	O
}	O
else	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
extern	O
unzFile	pointer
ZEXPORT	O
unzOpen2_64	function
(	O
const	O
void	O
*	O
path	pointer
,	O
zlib_filefunc64_def	struct
*	O
pzlib_filefunc_def	pointer
)	O
{	O
if	O
(	O
pzlib_filefunc_def	pointer
!=	O
NULL	O
)	O
{	O
zlib_filefunc64_32_def	struct
zlib_filefunc64_32_def_fill	struct
;	O
zlib_filefunc64_32_def_fill	struct
.	O
zfile_func64	struct
=	O
*	O
pzlib_filefunc_def	pointer
;	O
zlib_filefunc64_32_def_fill	struct
.	O
ztell32_file	pointer
=	O
NULL	O
;	O
zlib_filefunc64_32_def_fill	struct
.	O
zseek32_file	pointer
=	O
NULL	O
;	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
&	O
zlib_filefunc64_32_def_fill	struct
,	O
1	int
)	O
;	O
}	O
else	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
NULL	O
,	O
1	int
)	O
;	O
}	O
extern	O
unzFile	pointer
ZEXPORT	O
unzOpen	function
(	O
const	O
char	O
*	O
path	pointer
)	O
{	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
}	O
extern	O
unzFile	pointer
ZEXPORT	O
unzOpen64	function
(	O
const	O
void	O
*	O
path	pointer
)	O
{	O
return	O
unzOpenInternal	function
(	O
path	pointer
,	O
NULL	O
,	O
1	int
)	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzClose	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
s	pointer
->	O
pfile_in_zip_read	pointer
!=	O
NULL	O
)	O
unzCloseCurrentFile	function
(	O
file	pointer
)	O
;	O
ZCLOSE64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
)	O
;	O
TRYFREE	O
(	O
s	pointer
)	O
;	O
return	O
UNZ_OK	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetGlobalInfo64	function
(	O
unzFile	pointer
file	pointer
,	O
unz_global_info64	struct
*	O
pglobal_info	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
*	O
pglobal_info	pointer
=	O
s	pointer
->	O
gi	struct
;	O
return	O
UNZ_OK	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetGlobalInfo	function
(	O
unzFile	pointer
file	pointer
,	O
unz_global_info	struct
*	O
pglobal_info32	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pglobal_info32	pointer
->	O
number_entry	long long
=	O
(	O
uLong	long
)	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
;	O
pglobal_info32	pointer
->	O
size_comment	long
=	O
s	pointer
->	O
gi	struct
.	O
size_comment	long
;	O
return	O
UNZ_OK	O
;	O
}	O
local	O
void	O
unz64local_DosDateToTmuDate	function
(	O
ZPOS64_T	long long
ulDosDate	long long
,	O
tm_unz	struct
*	O
ptm	pointer
)	O
{	O
ZPOS64_T	long long
uDate	long long
;	O
uDate	long long
=	O
(	O
ZPOS64_T	long long
)	O
(	O
ulDosDate	long long
>>	O
16	int
)	O
;	O
ptm	pointer
->	O
tm_mday	int
=	O
(	O
uInt	int
)	O
(	O
uDate	long long
&	O
0x1f	int
)	O
;	O
ptm	pointer
->	O
tm_mon	int
=	O
(	O
uInt	int
)	O
(	O
(	O
(	O
(	O
uDate	long long
)	O
&	O
0x1E0	int
)	O
/	O
0x20	int
)	O
-	O
1	int
)	O
;	O
ptm	pointer
->	O
tm_year	int
=	O
(	O
uInt	int
)	O
(	O
(	O
(	O
uDate	long long
&	O
0x0FE00	int
)	O
/	O
0x0200	int
)	O
+	O
1980	int
)	O
;	O
ptm	pointer
->	O
tm_hour	int
=	O
(	O
uInt	int
)	O
(	O
(	O
ulDosDate	long long
&	O
0xF800	int
)	O
/	O
0x800	int
)	O
;	O
ptm	pointer
->	O
tm_min	int
=	O
(	O
uInt	int
)	O
(	O
(	O
ulDosDate	long long
&	O
0x7E0	int
)	O
/	O
0x20	int
)	O
;	O
ptm	pointer
->	O
tm_sec	int
=	O
(	O
uInt	int
)	O
(	O
2	int
*	O
(	O
ulDosDate	long long
&	O
0x1f	int
)	O
)	O
;	O
}	O
local	O
int	O
unz64local_GetCurrentFileInfoInternal	function
OF	O
(	O
(	O
unzFile	pointer
file	pointer
,	O
unz_file_info64	struct
*	O
pfile_info	pointer
,	O
unz_file_info64_internal	struct
*	O
pfile_info_internal	pointer
,	O
char	O
*	O
szFileName	pointer
,	O
uLong	long
fileNameBufferSize	long
,	O
void	O
*	O
extraField	pointer
,	O
uLong	long
extraFieldBufferSize	long
,	O
char	O
*	O
szComment	pointer
,	O
uLong	long
commentBufferSize	long
)	O
)	O
;	O
local	O
int	O
unz64local_GetCurrentFileInfoInternal	function
(	O
unzFile	pointer
file	pointer
,	O
unz_file_info64	struct
*	O
pfile_info	pointer
,	O
unz_file_info64_internal	struct
*	O
pfile_info_internal	pointer
,	O
char	O
*	O
szFileName	pointer
,	O
uLong	long
fileNameBufferSize	long
,	O
void	O
*	O
extraField	pointer
,	O
uLong	long
extraFieldBufferSize	long
,	O
char	O
*	O
szComment	pointer
,	O
uLong	long
commentBufferSize	long
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
unz_file_info64	struct
file_info	struct
;	O
unz_file_info64_internal	struct
file_info_internal	struct
;	O
int	O
err	int
=	O
UNZ_OK	O
;	O
uLong	long
uMagic	long
;	O
long	O
lSeek	long
=	O
0	int
;	O
uLong	long
uL	long
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
s	pointer
->	O
pos_in_central_dir	long long
+	O
s	pointer
->	O
byte_before_the_zipfile	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
{	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uMagic	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
uMagic	long
!=	O
0x02014b50	int
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
}	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
version	pointer
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
version_needed	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
flag	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
compression_method	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
dosDate	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
unz64local_DosDateToTmuDate	function
(	O
file_info	struct
.	O
dosDate	long
,	O
&	O
file_info	struct
.	O
tmu_date	struct
)	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
crc	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
file_info	struct
.	O
compressed_size	long long
=	O
uL	long
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
file_info	struct
.	O
uncompressed_size	long long
=	O
uL	long
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
size_filename	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
size_file_extra	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
size_file_comment	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
disk_num_start	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
internal_fa	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
external_fa	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
file_info_internal	struct
.	O
offset_curfile	long long
=	O
uL	long
;	O
lSeek	long
+=	O
file_info	struct
.	O
size_filename	long
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
szFileName	pointer
!=	O
NULL	O
)	O
)	O
{	O
uLong	long
uSizeRead	long
;	O
if	O
(	O
file_info	struct
.	O
size_filename	long
<	O
fileNameBufferSize	long
)	O
{	O
*	O
(	O
szFileName	pointer
+	O
file_info	struct
.	O
size_filename	long
)	O
=	O
'\0'	O
;	O
uSizeRead	long
=	O
file_info	struct
.	O
size_filename	long
;	O
}	O
else	O
uSizeRead	long
=	O
fileNameBufferSize	long
;	O
if	O
(	O
(	O
file_info	struct
.	O
size_filename	long
>	O
0	int
)	O
&&	O
(	O
fileNameBufferSize	long
>	O
0	int
)	O
)	O
if	O
(	O
ZREAD64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
szFileName	pointer
,	O
uSizeRead	long
)	O
!=	O
uSizeRead	long
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
lSeek	long
-=	O
uSizeRead	long
;	O
}	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
extraField	pointer
!=	O
NULL	O
)	O
)	O
{	O
ZPOS64_T	long long
uSizeRead	long
;	O
if	O
(	O
file_info	struct
.	O
size_file_extra	long
<	O
extraFieldBufferSize	long
)	O
uSizeRead	long
=	O
file_info	struct
.	O
size_file_extra	long
;	O
else	O
uSizeRead	long
=	O
extraFieldBufferSize	long
;	O
if	O
(	O
lSeek	long
!=	O
0	int
)	O
{	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
lSeek	long
,	O
ZLIB_FILEFUNC_SEEK_CUR	O
)	O
==	O
0	int
)	O
lSeek	long
=	O
0	int
;	O
else	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
(	O
file_info	struct
.	O
size_file_extra	long
>	O
0	int
)	O
&&	O
(	O
extraFieldBufferSize	long
>	O
0	int
)	O
)	O
if	O
(	O
ZREAD64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
extraField	pointer
,	O
(	O
uLong	long
)	O
uSizeRead	long
)	O
!=	O
uSizeRead	long
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
lSeek	long
+=	O
file_info	struct
.	O
size_file_extra	long
-	O
(	O
uLong	long
)	O
uSizeRead	long
;	O
}	O
else	O
lSeek	long
+=	O
file_info	struct
.	O
size_file_extra	long
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
file_info	struct
.	O
size_file_extra	long
!=	O
0	int
)	O
)	O
{	O
uLong	long
acc	long
=	O
0	int
;	O
lSeek	long
-=	O
file_info	struct
.	O
size_file_extra	long
;	O
if	O
(	O
lSeek	long
!=	O
0	int
)	O
{	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
lSeek	long
,	O
ZLIB_FILEFUNC_SEEK_CUR	O
)	O
==	O
0	int
)	O
lSeek	long
=	O
0	int
;	O
else	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
while	O
(	O
acc	long
<	O
file_info	struct
.	O
size_file_extra	long
)	O
{	O
uLong	long
headerId	long
;	O
uLong	long
dataSize	long
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
headerId	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
dataSize	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
headerId	long
==	O
0x0001	int
)	O
{	O
uLong	long
uL	long
;	O
if	O
(	O
file_info	struct
.	O
uncompressed_size	long long
==	O
MAXU32	int
)	O
{	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
uncompressed_size	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
file_info	struct
.	O
compressed_size	long long
==	O
MAXU32	int
)	O
{	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info	struct
.	O
compressed_size	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
file_info_internal	struct
.	O
offset_curfile	long long
==	O
MAXU32	int
)	O
{	O
if	O
(	O
unz64local_getLong64	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
file_info_internal	struct
.	O
offset_curfile	long long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
file_info	struct
.	O
disk_num_start	long
==	O
MAXU32	int
)	O
{	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uL	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
dataSize	long
,	O
ZLIB_FILEFUNC_SEEK_CUR	O
)	O
!=	O
0	int
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
acc	long
+=	O
2	int
+	O
2	int
+	O
dataSize	long
;	O
}	O
}	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
szComment	pointer
!=	O
NULL	O
)	O
)	O
{	O
uLong	long
uSizeRead	long
;	O
if	O
(	O
file_info	struct
.	O
size_file_comment	long
<	O
commentBufferSize	long
)	O
{	O
*	O
(	O
szComment	pointer
+	O
file_info	struct
.	O
size_file_comment	long
)	O
=	O
'\0'	O
;	O
uSizeRead	long
=	O
file_info	struct
.	O
size_file_comment	long
;	O
}	O
else	O
uSizeRead	long
=	O
commentBufferSize	long
;	O
if	O
(	O
lSeek	long
!=	O
0	int
)	O
{	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
lSeek	long
,	O
ZLIB_FILEFUNC_SEEK_CUR	O
)	O
==	O
0	int
)	O
lSeek	long
=	O
0	int
;	O
else	O
err	int
=	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
(	O
file_info	struct
.	O
size_file_comment	long
>	O
0	int
)	O
&&	O
(	O
commentBufferSize	long
>	O
0	int
)	O
)	O
if	O
(	O
ZREAD64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
szComment	pointer
,	O
uSizeRead	long
)	O
!=	O
uSizeRead	long
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
lSeek	long
+=	O
file_info	struct
.	O
size_file_comment	long
-	O
uSizeRead	long
;	O
}	O
else	O
lSeek	long
+=	O
file_info	struct
.	O
size_file_comment	long
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
pfile_info	pointer
!=	O
NULL	O
)	O
)	O
*	O
pfile_info	pointer
=	O
file_info	struct
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
pfile_info_internal	pointer
!=	O
NULL	O
)	O
)	O
*	O
pfile_info_internal	pointer
=	O
file_info_internal	struct
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetCurrentFileInfo64	function
(	O
unzFile	pointer
file	pointer
,	O
unz_file_info64	struct
*	O
pfile_info	pointer
,	O
char	O
*	O
szFileName	pointer
,	O
uLong	long
fileNameBufferSize	long
,	O
void	O
*	O
extraField	pointer
,	O
uLong	long
extraFieldBufferSize	long
,	O
char	O
*	O
szComment	pointer
,	O
uLong	long
commentBufferSize	long
)	O
{	O
return	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
pfile_info	pointer
,	O
NULL	O
,	O
szFileName	pointer
,	O
fileNameBufferSize	long
,	O
extraField	pointer
,	O
extraFieldBufferSize	long
,	O
szComment	pointer
,	O
commentBufferSize	long
)	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetCurrentFileInfo	function
(	O
unzFile	pointer
file	pointer
,	O
unz_file_info	struct
*	O
pfile_info	pointer
,	O
char	O
*	O
szFileName	pointer
,	O
uLong	long
fileNameBufferSize	long
,	O
void	O
*	O
extraField	pointer
,	O
uLong	long
extraFieldBufferSize	long
,	O
char	O
*	O
szComment	pointer
,	O
uLong	long
commentBufferSize	long
)	O
{	O
int	O
err	int
;	O
unz_file_info64	struct
file_info64	struct
;	O
err	int
=	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
&	O
file_info64	struct
,	O
NULL	O
,	O
szFileName	pointer
,	O
fileNameBufferSize	long
,	O
extraField	pointer
,	O
extraFieldBufferSize	long
,	O
szComment	pointer
,	O
commentBufferSize	long
)	O
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
pfile_info	pointer
!=	O
NULL	O
)	O
)	O
{	O
pfile_info	pointer
->	O
version	pointer
=	O
file_info64	struct
.	O
version	pointer
;	O
pfile_info	pointer
->	O
version_needed	long
=	O
file_info64	struct
.	O
version_needed	long
;	O
pfile_info	pointer
->	O
flag	long
=	O
file_info64	struct
.	O
flag	long
;	O
pfile_info	pointer
->	O
compression_method	long
=	O
file_info64	struct
.	O
compression_method	long
;	O
pfile_info	pointer
->	O
dosDate	long
=	O
file_info64	struct
.	O
dosDate	long
;	O
pfile_info	pointer
->	O
crc	long
=	O
file_info64	struct
.	O
crc	long
;	O
pfile_info	pointer
->	O
size_filename	long
=	O
file_info64	struct
.	O
size_filename	long
;	O
pfile_info	pointer
->	O
size_file_extra	long
=	O
file_info64	struct
.	O
size_file_extra	long
;	O
pfile_info	pointer
->	O
size_file_comment	long
=	O
file_info64	struct
.	O
size_file_comment	long
;	O
pfile_info	pointer
->	O
disk_num_start	long
=	O
file_info64	struct
.	O
disk_num_start	long
;	O
pfile_info	pointer
->	O
internal_fa	long
=	O
file_info64	struct
.	O
internal_fa	long
;	O
pfile_info	pointer
->	O
external_fa	long
=	O
file_info64	struct
.	O
external_fa	long
;	O
pfile_info	pointer
->	O
tmu_date	struct
=	O
file_info64	struct
.	O
tmu_date	struct
,	O
pfile_info	pointer
->	O
compressed_size	long long
=	O
(	O
uLong	long
)	O
file_info64	struct
.	O
compressed_size	long long
;	O
pfile_info	pointer
->	O
uncompressed_size	long long
=	O
(	O
uLong	long
)	O
file_info64	struct
.	O
uncompressed_size	long long
;	O
}	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGoToFirstFile	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
int	O
err	int
=	O
UNZ_OK	O
;	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
s	pointer
->	O
pos_in_central_dir	long long
=	O
s	pointer
->	O
offset_central_dir	long long
;	O
s	pointer
->	O
num_file	long long
=	O
0	int
;	O
err	int
=	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
&	O
s	pointer
->	O
cur_file_info	struct
,	O
&	O
s	pointer
->	O
cur_file_info_internal	struct
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
;	O
s	pointer
->	O
current_file_ok	long long
=	O
(	O
err	int
==	O
UNZ_OK	O
)	O
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGoToNextFile	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
int	O
err	int
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
current_file_ok	long long
)	O
return	O
UNZ_END_OF_LIST_OF_FILE	O
;	O
if	O
(	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
!=	O
0xffff	int
)	O
if	O
(	O
s	pointer
->	O
num_file	long long
+	O
1	int
==	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
)	O
return	O
UNZ_END_OF_LIST_OF_FILE	O
;	O
s	pointer
->	O
pos_in_central_dir	long long
+=	O
SIZECENTRALDIRITEM	O
+	O
s	pointer
->	O
cur_file_info	struct
.	O
size_filename	long
+	O
s	pointer
->	O
cur_file_info	struct
.	O
size_file_extra	long
+	O
s	pointer
->	O
cur_file_info	struct
.	O
size_file_comment	long
;	O
s	pointer
->	O
num_file	long long
++	O
;	O
err	int
=	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
&	O
s	pointer
->	O
cur_file_info	struct
,	O
&	O
s	pointer
->	O
cur_file_info_internal	struct
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
;	O
s	pointer
->	O
current_file_ok	long long
=	O
(	O
err	int
==	O
UNZ_OK	O
)	O
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzLocateFile	function
(	O
unzFile	pointer
file	pointer
,	O
const	O
char	O
*	O
szFileName	pointer
,	O
int	O
iCaseSensitivity	int
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
int	O
err	int
;	O
unz_file_info64	struct
cur_file_infoSaved	struct
;	O
unz_file_info64_internal	struct
cur_file_info_internalSaved	struct
;	O
ZPOS64_T	long long
num_fileSaved	long long
;	O
ZPOS64_T	long long
pos_in_central_dirSaved	long long
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
strlen	function
(	O
szFileName	pointer
)	O
>=	O
UNZ_MAXFILENAMEINZIP	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
current_file_ok	long long
)	O
return	O
UNZ_END_OF_LIST_OF_FILE	O
;	O
num_fileSaved	long long
=	O
s	pointer
->	O
num_file	long long
;	O
pos_in_central_dirSaved	long long
=	O
s	pointer
->	O
pos_in_central_dir	long long
;	O
cur_file_infoSaved	struct
=	O
s	pointer
->	O
cur_file_info	struct
;	O
cur_file_info_internalSaved	struct
=	O
s	pointer
->	O
cur_file_info_internal	struct
;	O
err	int
=	O
unzGoToFirstFile	function
(	O
file	pointer
)	O
;	O
while	O
(	O
err	int
==	O
UNZ_OK	O
)	O
{	O
char	O
szCurrentFileName	array
[	O
UNZ_MAXFILENAMEINZIP	O
+	O
1	int
]	O
;	O
err	int
=	O
unzGetCurrentFileInfo64	function
(	O
file	pointer
,	O
NULL	O
,	O
szCurrentFileName	array
,	O
sizeof	O
(	O
szCurrentFileName	array
)	O
-	O
1	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
{	O
if	O
(	O
unzStringFileNameCompare	function
(	O
szCurrentFileName	array
,	O
szFileName	pointer
,	O
iCaseSensitivity	int
)	O
==	O
0	int
)	O
return	O
UNZ_OK	O
;	O
err	int
=	O
unzGoToNextFile	function
(	O
file	pointer
)	O
;	O
}	O
}	O
s	pointer
->	O
num_file	long long
=	O
num_fileSaved	long long
;	O
s	pointer
->	O
pos_in_central_dir	long long
=	O
pos_in_central_dirSaved	long long
;	O
s	pointer
->	O
cur_file_info	struct
=	O
cur_file_infoSaved	struct
;	O
s	pointer
->	O
cur_file_info_internal	struct
=	O
cur_file_info_internalSaved	struct
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetFilePos64	function
(	O
unzFile	pointer
file	pointer
,	O
unz64_file_pos	struct
*	O
file_pos	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
||	O
file_pos	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
current_file_ok	long long
)	O
return	O
UNZ_END_OF_LIST_OF_FILE	O
;	O
file_pos	pointer
->	O
pos_in_zip_directory	long
=	O
s	pointer
->	O
pos_in_central_dir	long long
;	O
file_pos	pointer
->	O
num_of_file	long
=	O
s	pointer
->	O
num_file	long long
;	O
return	O
UNZ_OK	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetFilePos	function
(	O
unzFile	pointer
file	pointer
,	O
unz_file_pos	struct
*	O
file_pos	pointer
)	O
{	O
unz64_file_pos	struct
file_pos64	struct
;	O
int	O
err	int
=	O
unzGetFilePos64	function
(	O
file	pointer
,	O
&	O
file_pos64	struct
)	O
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
{	O
file_pos	pointer
->	O
pos_in_zip_directory	long
=	O
(	O
uLong	long
)	O
file_pos64	struct
.	O
pos_in_zip_directory	long
;	O
file_pos	pointer
->	O
num_of_file	long
=	O
(	O
uLong	long
)	O
file_pos64	struct
.	O
num_of_file	long
;	O
}	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGoToFilePos64	function
(	O
unzFile	pointer
file	pointer
,	O
const	O
unz64_file_pos	struct
*	O
file_pos	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
int	O
err	int
;	O
if	O
(	O
file	pointer
==	O
NULL	O
||	O
file_pos	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
s	pointer
->	O
pos_in_central_dir	long long
=	O
file_pos	pointer
->	O
pos_in_zip_directory	long
;	O
s	pointer
->	O
num_file	long long
=	O
file_pos	pointer
->	O
num_of_file	long
;	O
err	int
=	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
&	O
s	pointer
->	O
cur_file_info	struct
,	O
&	O
s	pointer
->	O
cur_file_info_internal	struct
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
;	O
s	pointer
->	O
current_file_ok	long long
=	O
(	O
err	int
==	O
UNZ_OK	O
)	O
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGoToFilePos	function
(	O
unzFile	pointer
file	pointer
,	O
unz_file_pos	struct
*	O
file_pos	pointer
)	O
{	O
unz64_file_pos	struct
file_pos64	struct
;	O
if	O
(	O
file_pos	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
file_pos64	struct
.	O
pos_in_zip_directory	long
=	O
file_pos	pointer
->	O
pos_in_zip_directory	long
;	O
file_pos64	struct
.	O
num_of_file	long
=	O
file_pos	pointer
->	O
num_of_file	long
;	O
return	O
unzGoToFilePos64	function
(	O
file	pointer
,	O
&	O
file_pos64	struct
)	O
;	O
}	O
local	O
int	O
unz64local_CheckCurrentFileCoherencyHeader	function
(	O
unz64_s	struct
*	O
s	pointer
,	O
uInt	int
*	O
piSizeVar	pointer
,	O
ZPOS64_T	long long
*	O
poffset_local_extrafield	pointer
,	O
uInt	int
*	O
psize_local_extrafield	pointer
)	O
{	O
uLong	long
uMagic	long
,	O
uData	long
,	O
uFlags	long
;	O
uLong	long
size_filename	long
;	O
uLong	long
size_extra_field	long
;	O
int	O
err	int
=	O
UNZ_OK	O
;	O
*	O
piSizeVar	pointer
=	O
0	int
;	O
*	O
poffset_local_extrafield	pointer
=	O
0	int
;	O
*	O
psize_local_extrafield	pointer
=	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
s	pointer
->	O
cur_file_info_internal	struct
.	O
offset_curfile	long long
+	O
s	pointer
->	O
byte_before_the_zipfile	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
UNZ_ERRNO	O
;	O
if	O
(	O
err	int
==	O
UNZ_OK	O
)	O
{	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uMagic	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
uMagic	long
!=	O
0x04034b50	int
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
}	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uFlags	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
uData	long
!=	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
0	int
)	O
&&	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
Z_BZIP2ED	int
)	O
&&	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
Z_DEFLATED	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
uData	long
!=	O
s	pointer
->	O
cur_file_info	struct
.	O
crc	long
)	O
&&	O
(	O
(	O
uFlags	long
&	O
8	int
)	O
==	O
0	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
uData	long
!=	O
0xFFFFFFFF	int
&&	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
uData	long
!=	O
s	pointer
->	O
cur_file_info	struct
.	O
compressed_size	long long
)	O
&&	O
(	O
(	O
uFlags	long
&	O
8	int
)	O
==	O
0	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getLong	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
uData	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
uData	long
!=	O
0xFFFFFFFF	int
&&	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
uData	long
!=	O
s	pointer
->	O
cur_file_info	struct
.	O
uncompressed_size	long long
)	O
&&	O
(	O
(	O
uFlags	long
&	O
8	int
)	O
==	O
0	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
size_filename	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
else	O
if	O
(	O
(	O
err	int
==	O
UNZ_OK	O
)	O
&&	O
(	O
size_filename	long
!=	O
s	pointer
->	O
cur_file_info	struct
.	O
size_filename	long
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
*	O
piSizeVar	pointer
+=	O
(	O
uInt	int
)	O
size_filename	long
;	O
if	O
(	O
unz64local_getShort	function
(	O
&	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
&	O
size_extra_field	long
)	O
!=	O
UNZ_OK	O
)	O
err	int
=	O
UNZ_ERRNO	O
;	O
*	O
poffset_local_extrafield	pointer
=	O
s	pointer
->	O
cur_file_info_internal	struct
.	O
offset_curfile	long long
+	O
SIZEZIPLOCALHEADER	O
+	O
size_filename	long
;	O
*	O
psize_local_extrafield	pointer
=	O
(	O
uInt	int
)	O
size_extra_field	long
;	O
*	O
piSizeVar	pointer
+=	O
(	O
uInt	int
)	O
size_extra_field	long
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzOpenCurrentFile3	function
(	O
unzFile	pointer
file	pointer
,	O
int	O
*	O
method	int
,	O
int	O
*	O
level	int
,	O
int	O
raw	int
,	O
const	O
char	O
*	O
password	pointer
)	O
{	O
int	O
err	int
=	O
UNZ_OK	O
;	O
uInt	int
iSizeVar	int
;	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
ZPOS64_T	long long
offset_local_extrafield	long long
;	O
uInt	int
size_local_extrafield	int
;	O
if	O
(	O
password	pointer
!=	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
current_file_ok	long long
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
s	pointer
->	O
pfile_in_zip_read	pointer
!=	O
NULL	O
)	O
unzCloseCurrentFile	function
(	O
file	pointer
)	O
;	O
if	O
(	O
unz64local_CheckCurrentFileCoherencyHeader	function
(	O
s	pointer
,	O
&	O
iSizeVar	int
,	O
&	O
offset_local_extrafield	long long
,	O
&	O
size_local_extrafield	int
)	O
!=	O
UNZ_OK	O
)	O
return	O
UNZ_BADZIPFILE	O
;	O
pfile_in_zip_read_info	pointer
=	O
(	O
file_in_zip64_read_info_s	struct
*	O
)	O
ALLOC	O
(	O
sizeof	O
(	O
file_in_zip64_read_info_s	struct
)	O
)	O
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_INTERNALERROR	O
;	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
=	O
(	O
char	O
*	O
)	O
ALLOC	O
(	O
UNZ_BUFSIZE	O
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
offset_local_extrafield	long long
=	O
offset_local_extrafield	long long
;	O
pfile_in_zip_read_info	pointer
->	O
size_local_extrafield	int
=	O
size_local_extrafield	int
;	O
pfile_in_zip_read_info	pointer
->	O
pos_local_extrafield	long long
=	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
raw	int
=	O
raw	int
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
==	O
NULL	O
)	O
{	O
TRYFREE	O
(	O
pfile_in_zip_read_info	pointer
)	O
;	O
return	O
UNZ_INTERNALERROR	O
;	O
}	O
pfile_in_zip_read_info	pointer
->	O
stream_initialised	long
=	O
0	int
;	O
if	O
(	O
method	int
!=	O
NULL	O
)	O
*	O
method	int
=	O
(	O
int	O
)	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
;	O
if	O
(	O
level	int
!=	O
NULL	O
)	O
{	O
*	O
level	int
=	O
6	int
;	O
switch	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
flag	long
&	O
0x06	int
)	O
{	O
case	O
6	int
:	O
*	O
level	int
=	O
1	int
;	O
break	O
;	O
case	O
4	int
:	O
*	O
level	int
=	O
2	int
;	O
break	O
;	O
case	O
2	int
:	O
*	O
level	int
=	O
9	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
0	int
)	O
&&	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
Z_BZIP2ED	int
)	O
&&	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
!=	O
Z_DEFLATED	int
)	O
)	O
err	int
=	O
UNZ_BADZIPFILE	O
;	O
pfile_in_zip_read_info	pointer
->	O
crc32_wait	long
=	O
s	pointer
->	O
cur_file_info	struct
.	O
crc	long
;	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
=	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
=	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
compression_method	long
=	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
;	O
pfile_in_zip_read_info	pointer
->	O
filestream	pointer
=	O
s	pointer
->	O
filestream	pointer
;	O
pfile_in_zip_read_info	pointer
->	O
z_filefunc	struct
=	O
s	pointer
->	O
z_filefunc	struct
;	O
pfile_in_zip_read_info	pointer
->	O
byte_before_the_zipfile	long long
=	O
s	pointer
->	O
byte_before_the_zipfile	long long
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
total_out	long
=	O
0	int
;	O
if	O
(	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
==	O
Z_BZIP2ED	int
)	O
&&	O
(	O
!	O
raw	int
)	O
)	O
{	O
pfile_in_zip_read_info	pointer
->	O
raw	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
(	O
s	pointer
->	O
cur_file_info	struct
.	O
compression_method	long
==	O
Z_DEFLATED	int
)	O
&&	O
(	O
!	O
raw	int
)	O
)	O
{	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
zalloc	pointer
=	O
(	O
alloc_func	pointer
)	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
zfree	pointer
=	O
(	O
free_func	pointer
)	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
opaque	pointer
=	O
(	O
voidpf	pointer
)	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_in	pointer
=	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
=	O
0	int
;	O
err	int
=	O
inflateInit2	O
(	O
&	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
,	O
-	O
MAX_WBITS	int
)	O
;	O
if	O
(	O
err	int
==	O
Z_OK	int
)	O
pfile_in_zip_read_info	pointer
->	O
stream_initialised	long
=	O
Z_DEFLATED	int
;	O
else	O
{	O
TRYFREE	O
(	O
pfile_in_zip_read_info	pointer
)	O
;	O
return	O
err	int
;	O
}	O
}	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
=	O
s	pointer
->	O
cur_file_info	struct
.	O
compressed_size	long long
;	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
=	O
s	pointer
->	O
cur_file_info	struct
.	O
uncompressed_size	long long
;	O
pfile_in_zip_read_info	pointer
->	O
pos_in_zipfile	long long
=	O
s	pointer
->	O
cur_file_info_internal	struct
.	O
offset_curfile	long long
+	O
SIZEZIPLOCALHEADER	O
+	O
iSizeVar	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
0	int
;	O
s	pointer
->	O
pfile_in_zip_read	pointer
=	O
pfile_in_zip_read_info	pointer
;	O
s	pointer
->	O
encrypted	int
=	O
0	int
;	O
return	O
UNZ_OK	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzOpenCurrentFile	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
return	O
unzOpenCurrentFile3	function
(	O
file	pointer
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
NULL	O
)	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzOpenCurrentFilePassword	function
(	O
unzFile	pointer
file	pointer
,	O
const	O
char	O
*	O
password	pointer
)	O
{	O
return	O
unzOpenCurrentFile3	function
(	O
file	pointer
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
password	pointer
)	O
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzOpenCurrentFile2	function
(	O
unzFile	pointer
file	pointer
,	O
int	O
*	O
method	int
,	O
int	O
*	O
level	int
,	O
int	O
raw	int
)	O
{	O
return	O
unzOpenCurrentFile3	function
(	O
file	pointer
,	O
method	int
,	O
level	int
,	O
raw	int
,	O
NULL	O
)	O
;	O
}	O
extern	O
ZPOS64_T	long long
ZEXPORT	O
unzGetCurrentFileZStreamPos64	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
pfile_in_zip_read_info	pointer
->	O
pos_in_zipfile	long long
+	O
pfile_in_zip_read_info	pointer
->	O
byte_before_the_zipfile	long long
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzReadCurrentFile	function
(	O
unzFile	pointer
file	pointer
,	O
voidp	pointer
buf	pointer
,	O
unsigned	O
len	int
)	O
{	O
int	O
err	int
=	O
UNZ_OK	O
;	O
uInt	int
iRead	int
=	O
0	int
;	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
==	O
NULL	O
)	O
return	O
UNZ_END_OF_LIST_OF_FILE	O
;	O
if	O
(	O
len	int
==	O
0	int
)	O
return	O
0	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_out	pointer
=	O
(	O
Bytef	char
*	O
)	O
buf	pointer
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
len	int
;	O
if	O
(	O
(	O
len	int
>	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
)	O
&&	O
(	O
!	O
(	O
pfile_in_zip_read_info	pointer
->	O
raw	int
)	O
)	O
)	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
;	O
if	O
(	O
(	O
len	int
>	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
+	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
)	O
&&	O
(	O
pfile_in_zip_read_info	pointer
->	O
raw	int
)	O
)	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
=	O
(	O
uInt	int
)	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
+	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
;	O
while	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
>	O
0	int
)	O
{	O
if	O
(	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
==	O
0	int
)	O
&&	O
(	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
>	O
0	int
)	O
)	O
{	O
uInt	int
uReadThis	int
=	O
UNZ_BUFSIZE	O
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
<	O
uReadThis	int
)	O
uReadThis	int
=	O
(	O
uInt	int
)	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
;	O
if	O
(	O
uReadThis	int
==	O
0	int
)	O
return	O
UNZ_EOF	O
;	O
if	O
(	O
ZSEEK64	O
(	O
pfile_in_zip_read_info	pointer
->	O
z_filefunc	struct
,	O
pfile_in_zip_read_info	pointer
->	O
filestream	pointer
,	O
pfile_in_zip_read_info	pointer
->	O
pos_in_zipfile	long long
+	O
pfile_in_zip_read_info	pointer
->	O
byte_before_the_zipfile	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
UNZ_ERRNO	O
;	O
if	O
(	O
ZREAD64	O
(	O
pfile_in_zip_read_info	pointer
->	O
z_filefunc	struct
,	O
pfile_in_zip_read_info	pointer
->	O
filestream	pointer
,	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
,	O
uReadThis	int
)	O
!=	O
uReadThis	int
)	O
return	O
UNZ_ERRNO	O
;	O
pfile_in_zip_read_info	pointer
->	O
pos_in_zipfile	long long
+=	O
uReadThis	int
;	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
-=	O
uReadThis	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_in	pointer
=	O
(	O
Bytef	char
*	O
)	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
=	O
(	O
uInt	int
)	O
uReadThis	int
;	O
}	O
if	O
(	O
(	O
pfile_in_zip_read_info	pointer
->	O
compression_method	long
==	O
0	int
)	O
||	O
(	O
pfile_in_zip_read_info	pointer
->	O
raw	int
)	O
)	O
{	O
uInt	int
uDoCopy	int
,	O
i	int
;	O
if	O
(	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
==	O
0	int
)	O
&&	O
(	O
pfile_in_zip_read_info	pointer
->	O
rest_read_compressed	long long
==	O
0	int
)	O
)	O
return	O
(	O
iRead	int
==	O
0	int
)	O
?	O
UNZ_EOF	O
:	O
iRead	int
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
<	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
)	O
uDoCopy	int
=	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
;	O
else	O
uDoCopy	int
=	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
uDoCopy	int
;	O
i	int
++	O
)	O
*	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_out	pointer
+	O
i	int
)	O
=	O
*	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_in	pointer
+	O
i	int
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
=	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
+	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
=	O
crc32	function
(	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
,	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_out	pointer
,	O
uDoCopy	int
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
-=	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_in	int
-=	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
avail_out	int
-=	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_out	pointer
+=	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_in	pointer
+=	O
uDoCopy	int
;	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
total_out	long
+=	O
uDoCopy	int
;	O
iRead	int
+=	O
uDoCopy	int
;	O
}	O
else	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
compression_method	long
==	O
Z_BZIP2ED	int
)	O
{	O
}	O
else	O
{	O
ZPOS64_T	long long
uTotalOutBefore	long long
,	O
uTotalOutAfter	long long
;	O
const	O
Bytef	char
*	O
bufBefore	pointer
;	O
ZPOS64_T	long long
uOutThis	long long
;	O
int	O
flush	int
=	O
Z_SYNC_FLUSH	int
;	O
uTotalOutBefore	long long
=	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
total_out	long
;	O
bufBefore	pointer
=	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
next_out	pointer
;	O
err	int
=	O
inflate	function
(	O
&	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
,	O
flush	int
)	O
;	O
if	O
(	O
(	O
err	int
>=	O
0	int
)	O
&&	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
msg	pointer
!=	O
NULL	O
)	O
)	O
err	int
=	O
Z_DATA_ERROR	O
;	O
uTotalOutAfter	long long
=	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
total_out	long
;	O
uOutThis	long long
=	O
uTotalOutAfter	long long
-	O
uTotalOutBefore	long long
;	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
=	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
+	O
uOutThis	long long
;	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
=	O
crc32	function
(	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
,	O
bufBefore	pointer
,	O
(	O
uInt	int
)	O
(	O
uOutThis	long long
)	O
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
-=	O
uOutThis	long long
;	O
iRead	int
+=	O
(	O
uInt	int
)	O
(	O
uTotalOutAfter	long long
-	O
uTotalOutBefore	long long
)	O
;	O
if	O
(	O
err	int
==	O
Z_STREAM_END	int
)	O
return	O
(	O
iRead	int
==	O
0	int
)	O
?	O
UNZ_EOF	O
:	O
iRead	int
;	O
if	O
(	O
err	int
!=	O
Z_OK	int
)	O
break	O
;	O
}	O
}	O
if	O
(	O
err	int
==	O
Z_OK	int
)	O
return	O
iRead	int
;	O
return	O
err	int
;	O
}	O
extern	O
z_off_t	long
ZEXPORT	O
unztell	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
return	O
(	O
z_off_t	long
)	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
.	O
total_out	long
;	O
}	O
extern	O
ZPOS64_T	long long
ZEXPORT	O
unztell64	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
(	O
ZPOS64_T	long long
)	O
-	O
1	int
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
(	O
ZPOS64_T	long long
)	O
-	O
1	int
;	O
return	O
pfile_in_zip_read_info	pointer
->	O
total_out_64	long long
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzeof	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
==	O
0	int
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetLocalExtrafield	function
(	O
unzFile	pointer
file	pointer
,	O
voidp	pointer
buf	pointer
,	O
unsigned	O
len	int
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
uInt	int
read_now	int
;	O
ZPOS64_T	long long
size_to_read	long long
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
size_to_read	long long
=	O
(	O
pfile_in_zip_read_info	pointer
->	O
size_local_extrafield	int
-	O
pfile_in_zip_read_info	pointer
->	O
pos_local_extrafield	long long
)	O
;	O
if	O
(	O
buf	pointer
==	O
NULL	O
)	O
return	O
(	O
int	O
)	O
size_to_read	long long
;	O
if	O
(	O
len	int
>	O
size_to_read	long long
)	O
read_now	int
=	O
(	O
uInt	int
)	O
size_to_read	long long
;	O
else	O
read_now	int
=	O
(	O
uInt	int
)	O
len	int
;	O
if	O
(	O
read_now	int
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
ZSEEK64	O
(	O
pfile_in_zip_read_info	pointer
->	O
z_filefunc	struct
,	O
pfile_in_zip_read_info	pointer
->	O
filestream	pointer
,	O
pfile_in_zip_read_info	pointer
->	O
offset_local_extrafield	long long
+	O
pfile_in_zip_read_info	pointer
->	O
pos_local_extrafield	long long
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
UNZ_ERRNO	O
;	O
if	O
(	O
ZREAD64	O
(	O
pfile_in_zip_read_info	pointer
->	O
z_filefunc	struct
,	O
pfile_in_zip_read_info	pointer
->	O
filestream	pointer
,	O
buf	pointer
,	O
read_now	int
)	O
!=	O
read_now	int
)	O
return	O
UNZ_ERRNO	O
;	O
return	O
(	O
int	O
)	O
read_now	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzCloseCurrentFile	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
int	O
err	int
=	O
UNZ_OK	O
;	O
unz64_s	struct
*	O
s	pointer
;	O
file_in_zip64_read_info_s	struct
*	O
pfile_in_zip_read_info	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
pfile_in_zip_read_info	pointer
=	O
s	pointer
->	O
pfile_in_zip_read	pointer
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
if	O
(	O
(	O
pfile_in_zip_read_info	pointer
->	O
rest_read_uncompressed	long long
==	O
0	int
)	O
&&	O
(	O
!	O
pfile_in_zip_read_info	pointer
->	O
raw	int
)	O
)	O
{	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
crc32	function
!=	O
pfile_in_zip_read_info	pointer
->	O
crc32_wait	long
)	O
err	int
=	O
UNZ_CRCERROR	O
;	O
}	O
TRYFREE	O
(	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
read_buffer	pointer
=	O
NULL	O
;	O
if	O
(	O
pfile_in_zip_read_info	pointer
->	O
stream_initialised	long
==	O
Z_DEFLATED	int
)	O
inflateEnd	function
(	O
&	O
pfile_in_zip_read_info	pointer
->	O
stream	pointer
)	O
;	O
pfile_in_zip_read_info	pointer
->	O
stream_initialised	long
=	O
0	int
;	O
TRYFREE	O
(	O
pfile_in_zip_read_info	pointer
)	O
;	O
s	pointer
->	O
pfile_in_zip_read	pointer
=	O
NULL	O
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzGetGlobalComment	function
(	O
unzFile	pointer
file	pointer
,	O
char	O
*	O
szComment	pointer
,	O
uLong	long
uSizeBuf	long
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
uLong	long
uReadThis	int
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
(	O
int	O
)	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
uReadThis	int
=	O
uSizeBuf	long
;	O
if	O
(	O
uReadThis	int
>	O
s	pointer
->	O
gi	struct
.	O
size_comment	long
)	O
uReadThis	int
=	O
s	pointer
->	O
gi	struct
.	O
size_comment	long
;	O
if	O
(	O
ZSEEK64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
s	pointer
->	O
central_pos	long long
+	O
22	int
,	O
ZLIB_FILEFUNC_SEEK_SET	O
)	O
!=	O
0	int
)	O
return	O
UNZ_ERRNO	O
;	O
if	O
(	O
uReadThis	int
>	O
0	int
)	O
{	O
*	O
szComment	pointer
=	O
'\0'	O
;	O
if	O
(	O
ZREAD64	O
(	O
s	pointer
->	O
z_filefunc	struct
,	O
s	pointer
->	O
filestream	pointer
,	O
szComment	pointer
,	O
uReadThis	int
)	O
!=	O
uReadThis	int
)	O
return	O
UNZ_ERRNO	O
;	O
}	O
if	O
(	O
(	O
szComment	pointer
!=	O
NULL	O
)	O
&&	O
(	O
uSizeBuf	long
>	O
s	pointer
->	O
gi	struct
.	O
size_comment	long
)	O
)	O
*	O
(	O
szComment	pointer
+	O
s	pointer
->	O
gi	struct
.	O
size_comment	long
)	O
=	O
'\0'	O
;	O
return	O
(	O
int	O
)	O
uReadThis	int
;	O
}	O
extern	O
ZPOS64_T	long long
ZEXPORT	O
unzGetOffset64	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
if	O
(	O
!	O
s	pointer
->	O
current_file_ok	long long
)	O
return	O
0	int
;	O
if	O
(	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
!=	O
0	int
&&	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
!=	O
0xffff	int
)	O
if	O
(	O
s	pointer
->	O
num_file	long long
==	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
)	O
return	O
0	int
;	O
return	O
s	pointer
->	O
pos_in_central_dir	long long
;	O
}	O
extern	O
uLong	long
ZEXPORT	O
unzGetOffset	function
(	O
unzFile	pointer
file	pointer
)	O
{	O
ZPOS64_T	long long
offset64	long long
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
0	int
;	O
offset64	long long
=	O
unzGetOffset64	function
(	O
file	pointer
)	O
;	O
return	O
(	O
uLong	long
)	O
offset64	long long
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzSetOffset64	function
(	O
unzFile	pointer
file	pointer
,	O
ZPOS64_T	long long
pos	long
)	O
{	O
unz64_s	struct
*	O
s	pointer
;	O
int	O
err	int
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
return	O
UNZ_PARAMERROR	O
;	O
s	pointer
=	O
(	O
unz64_s	struct
*	O
)	O
file	pointer
;	O
s	pointer
->	O
pos_in_central_dir	long long
=	O
pos	long
;	O
s	pointer
->	O
num_file	long long
=	O
s	pointer
->	O
gi	struct
.	O
number_entry	long long
;	O
err	int
=	O
unz64local_GetCurrentFileInfoInternal	function
(	O
file	pointer
,	O
&	O
s	pointer
->	O
cur_file_info	struct
,	O
&	O
s	pointer
->	O
cur_file_info_internal	struct
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
;	O
s	pointer
->	O
current_file_ok	long long
=	O
(	O
err	int
==	O
UNZ_OK	O
)	O
;	O
return	O
err	int
;	O
}	O
extern	O
int	O
ZEXPORT	O
unzSetOffset	function
(	O
unzFile	pointer
file	pointer
,	O
uLong	long
pos	long
)	O
{	O
return	O
unzSetOffset64	function
(	O
file	pointer
,	O
pos	long
)	O
;	O
}	O
