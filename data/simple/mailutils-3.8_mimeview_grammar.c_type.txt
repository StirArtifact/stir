static	O
void	O
yyprint	function
(	O
FILE	struct
*	O
output	pointer
,	O
unsigned	O
short	O
toknum	short
,	O
YYSTYPE	union
val	pointer
)	O
{	O
switch	O
(	O
toknum	short
)	O
{	O
case	O
TYPE	int
:	O
case	O
IDENT	int
:	O
case	O
STRING	int
:	O
fprintf	function
(	O
output	pointer
,	O
"[%lu] %s"	pointer
,	O
(	O
unsigned	O
long	O
)	O
val	pointer
.	O
string	pointer
.	O
len	long
,	O
val	pointer
.	O
string	pointer
.	O
ptr	pointer
)	O
;	O
break	O
;	O
case	O
EOL	int
:	O
fprintf	function
(	O
output	pointer
,	O
"\\n"	pointer
)	O
;	O
break	O
;	O
default	O
:	O
if	O
(	O
mu_isprint	O
(	O
toknum	short
)	O
)	O
fprintf	function
(	O
output	pointer
,	O
"'%c'"	pointer
,	O
toknum	short
)	O
;	O
else	O
fprintf	function
(	O
output	pointer
,	O
"tok(%d)"	pointer
,	O
toknum	short
)	O
;	O
break	O
;	O
}	O
}	O
static	O
mu_list_t	pointer
arg_list	pointer
;	O
enum	O
node_type	enum
{	O
true_node	int
,	O
functional_node	int
,	O
binary_node	int
,	O
negation_node	int
,	O
suffix_node	int
}	O
;	O
union	O
argument	union
{	O
struct	O
mimetypes_string	struct
*	O
string	pointer
;	O
unsigned	O
number	long
;	O
int	O
c	char
;	O
regex_t	struct
rx	pointer
;	O
}	O
;	O
typedef	O
int	O
(	O
*	O
builtin_t	pointer
)	O
(	O
union	O
argument	union
*	O
args	pointer
)	O
;	O
struct	O
node	pointer
{	O
enum	O
node_type	enum
type	int
;	O
struct	O
mu_locus_range	struct
loc	pointer
;	O
union	O
{	O
struct	O
{	O
builtin_t	pointer
fun	pointer
;	O
union	O
argument	union
*	O
args	pointer
;	O
}	O
function	struct
;	O
struct	O
node	pointer
*	O
arg	pointer
;	O
struct	O
{	O
int	O
op	int
;	O
struct	O
node	pointer
*	O
arg1	pointer
;	O
struct	O
node	pointer
*	O
arg2	pointer
;	O
}	O
bin	struct
;	O
struct	O
mimetypes_string	struct
suffix	pointer
;	O
}	O
v	array
;	O
}	O
;	O
static	O
struct	O
node	pointer
*	O
make_node	function
(	O
enum	O
node_type	enum
type	int
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
;	O
static	O
struct	O
node	pointer
*	O
make_binary_node	function
(	O
int	O
op	int
,	O
struct	O
node	pointer
*	O
left	pointer
,	O
struct	O
node	pointer
*	O
rigth	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
;	O
static	O
struct	O
node	pointer
*	O
make_negation_node	function
(	O
struct	O
node	pointer
*	O
p	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
;	O
static	O
struct	O
node	pointer
*	O
make_suffix_node	function
(	O
struct	O
mimetypes_string	struct
*	O
suffix	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
;	O
static	O
struct	O
node	pointer
*	O
make_functional_node	function
(	O
char	O
*	O
ident	pointer
,	O
mu_list_t	pointer
list	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
;	O
static	O
int	O
eval_rule	function
(	O
struct	O
node	pointer
*	O
root	pointer
)	O
;	O
struct	O
rule_tab	struct
{	O
char	O
*	O
type	int
;	O
int	O
priority	int
;	O
struct	O
mu_locus_range	struct
loc	pointer
;	O
struct	O
node	pointer
*	O
node	pointer
;	O
}	O
;	O
static	O
mu_list_t	pointer
rule_list	pointer
;	O
static	O
size_t	long
errors	long
;	O
typedef	O
unsigned	O
char	O
yytype_uint8	char
;	O
typedef	O
signed	O
char	O
yytype_int8	char
;	O
typedef	O
unsigned	O
short	O
int	O
yytype_uint16	short
;	O
typedef	O
short	O
int	O
yytype_int16	short
;	O
union	O
mimetypes_yyalloc	union
{	O
yytype_int16	short
yyss_alloc	short
;	O
YYSTYPE	union
yyvs_alloc	union
;	O
YYLTYPE	O
yyls_alloc	struct
;	O
}	O
;	O
static	O
const	O
yytype_uint8	char
yytranslate	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
11	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
12	int
,	O
13	int
,	O
2	int
,	O
10	int
,	O
9	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
8	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyprhs	array
[	O
]	O
=	O
{	O
0	int
,	O
0	int
,	O
3	int
,	O
5	int
,	O
7	int
,	O
11	int
,	O
12	int
,	O
16	int
,	O
18	int
,	O
20	int
,	O
21	int
,	O
23	int
,	O
25	int
,	O
28	int
,	O
32	int
,	O
36	int
,	O
39	int
,	O
43	int
,	O
45	int
,	O
47	int
,	O
49	int
,	O
54	int
,	O
55	int
,	O
57	int
,	O
62	int
,	O
64	int
,	O
68	int
,	O
70	int
}	O
;	O
static	O
const	O
yytype_int8	char
yyrhs	array
[	O
]	O
=	O
{	O
15	int
,	O
0	int
,	O
-	O
1	int
,	O
16	int
,	O
-	O
1	int
,	O
17	int
,	O
-	O
1	int
,	O
16	int
,	O
6	int
,	O
17	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
3	int
,	O
18	int
,	O
22	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
1	int
,	O
1	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
19	int
,	O
-	O
1	int
,	O
20	int
,	O
-	O
1	int
,	O
19	int
,	O
19	int
,	O
-	O
1	int
,	O
19	int
,	O
9	int
,	O
19	int
,	O
-	O
1	int
,	O
19	int
,	O
10	int
,	O
19	int
,	O
-	O
1	int
,	O
11	int
,	O
20	int
,	O
-	O
1	int
,	O
12	int
,	O
19	int
,	O
13	int
,	O
-	O
1	int
,	O
5	int
,	O
-	O
1	int
,	O
23	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
1	int
,	O
8	int
,	O
12	int
,	O
24	int
,	O
13	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
21	int
,	O
-	O
1	int
,	O
4	int
,	O
12	int
,	O
24	int
,	O
13	int
,	O
-	O
1	int
,	O
25	int
,	O
-	O
1	int
,	O
24	int
,	O
9	int
,	O
25	int
,	O
-	O
1	int
,	O
5	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
1	int
}	O
;	O
static	O
const	O
yytype_uint16	short
yyrline	array
[	O
]	O
=	O
{	O
0	int
,	O
152	int
,	O
152	int
,	O
155	int
,	O
156	int
,	O
159	int
,	O
160	int
,	O
176	int
,	O
180	int
,	O
192	int
,	O
195	int
,	O
198	int
,	O
199	int
,	O
206	int
,	O
213	int
,	O
222	int
,	O
226	int
,	O
230	int
,	O
234	int
,	O
235	int
,	O
241	int
,	O
259	int
,	O
262	int
,	O
265	int
,	O
277	int
,	O
283	int
,	O
290	int
,	O
291	int
}	O
;	O
static	O
const	O
char	O
*	O
const	O
yytname	array
[	O
]	O
=	O
{	O
"$end"	pointer
,	O
"error"	pointer
,	O
"$undefined"	pointer
,	O
"TYPE"	pointer
,	O
"IDENT"	pointer
,	O
"STRING"	pointer
,	O
"EOL"	pointer
,	O
"BOGUS"	pointer
,	O
"PRIORITY"	pointer
,	O
"','"	pointer
,	O
"'+'"	pointer
,	O
"'!'"	pointer
,	O
"'('"	pointer
,	O
"')'"	pointer
,	O
"$accept"	pointer
,	O
"input"	pointer
,	O
"list"	pointer
,	O
"rule_line"	pointer
,	O
"maybe_rule"	pointer
,	O
"rule"	pointer
,	O
"stmt"	pointer
,	O
"priority"	pointer
,	O
"maybe_priority"	pointer
,	O
"function"	pointer
,	O
"arglist"	pointer
,	O
"arg"	pointer
,	O
YY_NULL	int
}	O
;	O
static	O
const	O
yytype_uint16	short
yytoknum	array
[	O
]	O
=	O
{	O
0	int
,	O
256	int
,	O
257	int
,	O
258	int
,	O
259	int
,	O
260	int
,	O
261	int
,	O
262	int
,	O
263	int
,	O
44	int
,	O
43	int
,	O
33	int
,	O
40	int
,	O
41	int
}	O
;	O
static	O
const	O
yytype_uint8	char
mimetypes_yyr1	array
[	O
]	O
=	O
{	O
0	int
,	O
14	int
,	O
15	int
,	O
16	int
,	O
16	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
18	int
,	O
18	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
19	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
20	int
,	O
21	int
,	O
22	int
,	O
22	int
,	O
23	int
,	O
24	int
,	O
24	int
,	O
25	int
,	O
25	int
}	O
;	O
static	O
const	O
yytype_uint8	char
mimetypes_yyr2	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
0	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
3	int
,	O
2	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
4	int
,	O
0	int
,	O
1	int
,	O
4	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yydefact	array
[	O
]	O
=	O
{	O
0	int
,	O
8	int
,	O
9	int
,	O
7	int
,	O
0	int
,	O
2	int
,	O
3	int
,	O
0	int
,	O
17	int
,	O
19	int
,	O
0	int
,	O
0	int
,	O
21	int
,	O
10	int
,	O
11	int
,	O
18	int
,	O
1	int
,	O
0	int
,	O
0	int
,	O
15	int
,	O
0	int
,	O
0	int
,	O
22	int
,	O
6	int
,	O
0	int
,	O
0	int
,	O
12	int
,	O
4	int
,	O
26	int
,	O
27	int
,	O
0	int
,	O
24	int
,	O
16	int
,	O
0	int
,	O
13	int
,	O
14	int
,	O
0	int
,	O
23	int
,	O
0	int
,	O
25	int
,	O
20	int
}	O
;	O
static	O
const	O
yytype_int8	char
yydefgoto	array
[	O
]	O
=	O
{	O
-	O
1	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
12	int
,	O
26	int
,	O
14	int
,	O
22	int
,	O
23	int
,	O
15	int
,	O
30	int
,	O
31	int
}	O
;	O
static	O
const	O
yytype_int8	char
mimetypes_yypact	array
[	O
]	O
=	O
{	O
51	int
,	O
-	O
8	int
,	O
38	int
,	O
-	O
8	int
,	O
16	int
,	O
-	O
5	int
,	O
-	O
8	int
,	O
5	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
38	int
,	O
38	int
,	O
10	int
,	O
20	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
51	int
,	O
-	O
3	int
,	O
-	O
8	int
,	O
1	int
,	O
8	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
38	int
,	O
38	int
,	O
29	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
6	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
3	int
,	O
29	int
,	O
38	int
,	O
-	O
3	int
,	O
-	O
8	int
,	O
6	int
,	O
-	O
8	int
,	O
-	O
8	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypgoto	array
[	O
]	O
=	O
{	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
4	int
,	O
-	O
8	int
,	O
-	O
2	int
,	O
18	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
8	int
,	O
-	O
7	int
,	O
-	O
1	int
}	O
;	O
static	O
const	O
yytype_int8	char
mimetypes_yytable	array
[	O
]	O
=	O
{	O
13	int
,	O
17	int
,	O
28	int
,	O
36	int
,	O
29	int
,	O
7	int
,	O
8	int
,	O
37	int
,	O
9	int
,	O
20	int
,	O
24	int
,	O
25	int
,	O
10	int
,	O
11	int
,	O
32	int
,	O
36	int
,	O
16	int
,	O
18	int
,	O
21	int
,	O
40	int
,	O
33	int
,	O
27	int
,	O
34	int
,	O
35	int
,	O
7	int
,	O
8	int
,	O
38	int
,	O
9	int
,	O
19	int
,	O
24	int
,	O
25	int
,	O
10	int
,	O
11	int
,	O
7	int
,	O
8	int
,	O
39	int
,	O
9	int
,	O
0	int
,	O
0	int
,	O
25	int
,	O
10	int
,	O
11	int
,	O
7	int
,	O
8	int
,	O
0	int
,	O
9	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
10	int
,	O
11	int
,	O
-	O
5	int
,	O
1	int
,	O
0	int
,	O
2	int
,	O
0	int
,	O
0	int
,	O
-	O
5	int
,	O
3	int
}	O
;	O
static	O
const	O
yytype_int8	char
mimetypes_yycheck	array
[	O
]	O
=	O
{	O
2	int
,	O
6	int
,	O
5	int
,	O
9	int
,	O
7	int
,	O
4	int
,	O
5	int
,	O
13	int
,	O
7	int
,	O
11	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
13	int
,	O
9	int
,	O
0	int
,	O
12	int
,	O
8	int
,	O
13	int
,	O
12	int
,	O
17	int
,	O
24	int
,	O
25	int
,	O
4	int
,	O
5	int
,	O
33	int
,	O
7	int
,	O
10	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
4	int
,	O
5	int
,	O
36	int
,	O
7	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
4	int
,	O
5	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
11	int
,	O
12	int
,	O
0	int
,	O
1	int
,	O
-	O
1	int
,	O
3	int
,	O
-	O
1	int
,	O
-	O
1	int
,	O
6	int
,	O
7	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yystos	array
[	O
]	O
=	O
{	O
0	int
,	O
1	int
,	O
3	int
,	O
7	int
,	O
15	int
,	O
16	int
,	O
17	int
,	O
4	int
,	O
5	int
,	O
7	int
,	O
11	int
,	O
12	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
23	int
,	O
0	int
,	O
6	int
,	O
12	int
,	O
20	int
,	O
19	int
,	O
8	int
,	O
21	int
,	O
22	int
,	O
9	int
,	O
10	int
,	O
19	int
,	O
17	int
,	O
5	int
,	O
7	int
,	O
24	int
,	O
25	int
,	O
13	int
,	O
12	int
,	O
19	int
,	O
19	int
,	O
9	int
,	O
13	int
,	O
24	int
,	O
25	int
,	O
13	int
}	O
;	O
static	O
void	O
yy_symbol_value_print	function
(	O
FILE	struct
*	O
yyoutput	pointer
,	O
int	O
yytype	int
,	O
YYSTYPE	union
const	O
*	O
const	O
yyvaluep	pointer
,	O
YYLTYPE	O
const	O
*	O
const	O
yylocationp	pointer
)	O
{	O
FILE	struct
*	O
yyo	pointer
=	O
yyoutput	pointer
;	O
YYUSE	O
(	O
yyo	pointer
)	O
;	O
if	O
(	O
!	O
yyvaluep	pointer
)	O
return	O
;	O
YYUSE	O
(	O
yylocationp	pointer
)	O
;	O
if	O
(	O
yytype	int
<	O
YYNTOKENS	int
)	O
YYPRINT	O
(	O
yyoutput	pointer
,	O
yytoknum	array
[	O
yytype	int
]	O
,	O
*	O
yyvaluep	pointer
)	O
;	O
switch	O
(	O
yytype	int
)	O
{	O
default	O
:	O
break	O
;	O
}	O
}	O
static	O
void	O
yy_symbol_print	function
(	O
FILE	struct
*	O
yyoutput	pointer
,	O
int	O
yytype	int
,	O
YYSTYPE	union
const	O
*	O
const	O
yyvaluep	pointer
,	O
YYLTYPE	O
const	O
*	O
const	O
yylocationp	pointer
)	O
{	O
if	O
(	O
yytype	int
<	O
YYNTOKENS	int
)	O
YYFPRINTF	O
(	O
yyoutput	pointer
,	O
"token %s ("	pointer
,	O
yytname	array
[	O
yytype	int
]	O
)	O
;	O
else	O
YYFPRINTF	O
(	O
yyoutput	pointer
,	O
"nterm %s ("	pointer
,	O
yytname	array
[	O
yytype	int
]	O
)	O
;	O
YY_LOCATION_PRINT	O
(	O
yyoutput	pointer
,	O
*	O
yylocationp	pointer
)	O
;	O
YYFPRINTF	O
(	O
yyoutput	pointer
,	O
": "	pointer
)	O
;	O
yy_symbol_value_print	function
(	O
yyoutput	pointer
,	O
yytype	int
,	O
yyvaluep	pointer
,	O
yylocationp	pointer
)	O
;	O
YYFPRINTF	O
(	O
yyoutput	pointer
,	O
")"	pointer
)	O
;	O
}	O
static	O
void	O
yy_stack_print	function
(	O
yytype_int16	short
*	O
yybottom	pointer
,	O
yytype_int16	short
*	O
yytop	pointer
)	O
{	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"Stack now"	pointer
)	O
;	O
for	O
(	O
;	O
yybottom	pointer
<=	O
yytop	pointer
;	O
yybottom	pointer
++	O
)	O
{	O
int	O
yybot	int
=	O
*	O
yybottom	pointer
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
" %d"	pointer
,	O
yybot	int
)	O
;	O
}	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
static	O
void	O
yy_reduce_print	function
(	O
YYSTYPE	union
*	O
yyvsp	pointer
,	O
YYLTYPE	O
*	O
yylsp	pointer
,	O
int	O
mimetypes_yyrule	int
)	O
{	O
int	O
yynrhs	int
=	O
mimetypes_yyr2	array
[	O
mimetypes_yyrule	int
]	O
;	O
int	O
yyi	int
;	O
unsigned	O
long	O
int	O
yylno	long
=	O
yyrline	array
[	O
mimetypes_yyrule	int
]	O
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"Reducing stack by rule %d (line %lu):\n"	pointer
,	O
mimetypes_yyrule	int
-	O
1	int
,	O
yylno	long
)	O
;	O
for	O
(	O
yyi	int
=	O
0	int
;	O
yyi	int
<	O
yynrhs	int
;	O
yyi	int
++	O
)	O
{	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"   $%d = "	pointer
,	O
yyi	int
+	O
1	int
)	O
;	O
yy_symbol_print	function
(	O
stderr	pointer
,	O
yyrhs	array
[	O
yyprhs	array
[	O
mimetypes_yyrule	int
]	O
+	O
yyi	int
]	O
,	O
&	O
(	O
yyvsp	pointer
[	O
(	O
yyi	int
+	O
1	int
)	O
-	O
(	O
yynrhs	int
)	O
]	O
)	O
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
yyi	int
+	O
1	int
)	O
-	O
(	O
yynrhs	int
)	O
]	O
)	O
)	O
;	O
YYFPRINTF	O
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
}	O
int	O
mimetypes_yydebug	int
;	O
static	O
void	O
yydestruct	function
(	O
const	O
char	O
*	O
yymsg	pointer
,	O
int	O
yytype	int
,	O
YYSTYPE	union
*	O
yyvaluep	pointer
,	O
YYLTYPE	O
*	O
yylocationp	pointer
)	O
{	O
YYUSE	O
(	O
yyvaluep	pointer
)	O
;	O
YYUSE	O
(	O
yylocationp	pointer
)	O
;	O
if	O
(	O
!	O
yymsg	pointer
)	O
yymsg	pointer
=	O
"Deleting"	pointer
;	O
YY_SYMBOL_PRINT	O
(	O
yymsg	pointer
,	O
yytype	int
,	O
yyvaluep	pointer
,	O
yylocationp	pointer
)	O
;	O
switch	O
(	O
yytype	int
)	O
{	O
default	O
:	O
break	O
;	O
}	O
}	O
int	O
mimetypes_yychar	int
;	O
YYSTYPE	union
mimetypes_yylval	union
YY_INITIAL_VALUE	O
(	O
yyval_default	O
)	O
;	O
YYLTYPE	O
mimetypes_yylloc	struct
;	O
int	O
mimetypes_yynerrs	int
;	O
int	O
mimetypes_yyparse	function
(	O
void	O
)	O
{	O
int	O
mimetypes_yystate	int
;	O
int	O
yyerrstatus	int
;	O
yytype_int16	short
yyssa	array
[	O
YYINITDEPTH	int
]	O
;	O
yytype_int16	short
*	O
yyss	pointer
;	O
yytype_int16	short
*	O
yyssp	pointer
;	O
YYSTYPE	union
yyvsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYSTYPE	union
*	O
yyvs	pointer
;	O
YYSTYPE	union
*	O
yyvsp	pointer
;	O
YYLTYPE	O
yylsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYLTYPE	O
*	O
yyls	pointer
;	O
YYLTYPE	O
*	O
yylsp	pointer
;	O
YYLTYPE	O
yyerror_range	array
[	O
3	int
]	O
;	O
YYSIZE_T	O
yystacksize	long
;	O
int	O
yyn	int
;	O
int	O
yyresult	int
;	O
int	O
yytoken	int
=	O
0	int
;	O
YYSTYPE	union
mimetypes_yyval	union
;	O
YYLTYPE	O
yyloc	struct
;	O
int	O
mimetypes_yylen	int
=	O
0	int
;	O
yyssp	pointer
=	O
yyss	pointer
=	O
yyssa	array
;	O
yyvsp	pointer
=	O
yyvs	pointer
=	O
yyvsa	array
;	O
yylsp	pointer
=	O
yyls	pointer
=	O
yylsa	array
;	O
yystacksize	long
=	O
YYINITDEPTH	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Starting parse\n"	pointer
)	O
)	O
;	O
mimetypes_yystate	int
=	O
0	int
;	O
yyerrstatus	int
=	O
0	int
;	O
mimetypes_yynerrs	int
=	O
0	int
;	O
mimetypes_yychar	int
=	O
YYEMPTY	O
;	O
yylsp	pointer
[	O
0	int
]	O
=	O
mimetypes_yylloc	struct
;	O
goto	O
yysetstate	O
;	O
yynewstate	O
:	O
yyssp	pointer
++	O
;	O
yysetstate	O
:	O
*	O
yyssp	pointer
=	O
mimetypes_yystate	int
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
{	O
YYSIZE_T	O
yysize	long
=	O
yyssp	pointer
-	O
yyss	pointer
+	O
1	int
;	O
if	O
(	O
YYMAXDEPTH	int
<=	O
yystacksize	long
)	O
goto	O
yyexhaustedlab	O
;	O
yystacksize	long
*=	O
2	int
;	O
if	O
(	O
YYMAXDEPTH	int
<	O
yystacksize	long
)	O
yystacksize	long
=	O
YYMAXDEPTH	int
;	O
{	O
yytype_int16	short
*	O
yyss1	pointer
=	O
yyss	pointer
;	O
union	O
mimetypes_yyalloc	union
*	O
yyptr	pointer
=	O
(	O
union	O
mimetypes_yyalloc	union
*	O
)	O
YYSTACK_ALLOC	O
(	O
YYSTACK_BYTES	O
(	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
!	O
yyptr	pointer
)	O
goto	O
yyexhaustedlab	O
;	O
YYSTACK_RELOCATE	O
(	O
yyss_alloc	short
,	O
yyss	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyvs_alloc	union
,	O
yyvs	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyls_alloc	struct
,	O
yyls	pointer
)	O
;	O
if	O
(	O
yyss1	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss1	pointer
)	O
;	O
}	O
yyssp	pointer
=	O
yyss	pointer
+	O
yysize	long
-	O
1	int
;	O
yyvsp	pointer
=	O
yyvs	pointer
+	O
yysize	long
-	O
1	int
;	O
yylsp	pointer
=	O
yyls	pointer
+	O
yysize	long
-	O
1	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Stack size increased to %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
int	O
)	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
YYABORT	O
;	O
}	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Entering state %d\n"	pointer
,	O
mimetypes_yystate	int
)	O
)	O
;	O
if	O
(	O
mimetypes_yystate	int
==	O
YYFINAL	int
)	O
YYACCEPT	O
;	O
goto	O
yybackup	O
;	O
yybackup	O
:	O
yyn	int
=	O
mimetypes_yypact	array
[	O
mimetypes_yystate	int
]	O
;	O
if	O
(	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
goto	O
yydefault	O
;	O
if	O
(	O
mimetypes_yychar	int
==	O
YYEMPTY	O
)	O
{	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Reading a token: "	pointer
)	O
)	O
;	O
mimetypes_yychar	int
=	O
YYLEX	O
;	O
}	O
if	O
(	O
mimetypes_yychar	int
<=	O
YYEOF	int
)	O
{	O
mimetypes_yychar	int
=	O
yytoken	int
=	O
YYEOF	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Now at end of input.\n"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
mimetypes_yychar	int
)	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Next token is"	pointer
,	O
yytoken	int
,	O
&	O
mimetypes_yylval	union
,	O
&	O
mimetypes_yylloc	struct
)	O
;	O
}	O
yyn	int
+=	O
yytoken	int
;	O
if	O
(	O
yyn	int
<	O
0	int
||	O
YYLAST	int
<	O
yyn	int
||	O
mimetypes_yycheck	array
[	O
yyn	int
]	O
!=	O
yytoken	int
)	O
goto	O
yydefault	O
;	O
yyn	int
=	O
mimetypes_yytable	array
[	O
yyn	int
]	O
;	O
if	O
(	O
yyn	int
<=	O
0	int
)	O
{	O
if	O
(	O
yytable_value_is_error	O
(	O
yyn	int
)	O
)	O
goto	O
yyerrlab	O
;	O
yyn	int
=	O
-	O
yyn	int
;	O
goto	O
yyreduce	O
;	O
}	O
if	O
(	O
yyerrstatus	int
)	O
yyerrstatus	int
--	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yytoken	int
,	O
&	O
mimetypes_yylval	union
,	O
&	O
mimetypes_yylloc	struct
)	O
;	O
mimetypes_yychar	int
=	O
YYEMPTY	O
;	O
mimetypes_yystate	int
=	O
yyn	int
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
mimetypes_yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
*	O
++	O
yylsp	pointer
=	O
mimetypes_yylloc	struct
;	O
goto	O
yynewstate	O
;	O
yydefault	O
:	O
yyn	int
=	O
yydefact	array
[	O
mimetypes_yystate	int
]	O
;	O
if	O
(	O
yyn	int
==	O
0	int
)	O
goto	O
yyerrlab	O
;	O
goto	O
yyreduce	O
;	O
yyreduce	O
:	O
mimetypes_yylen	int
=	O
mimetypes_yyr2	array
[	O
yyn	int
]	O
;	O
mimetypes_yyval	union
=	O
yyvsp	pointer
[	O
1	int
-	O
mimetypes_yylen	int
]	O
;	O
YYLLOC_DEFAULT	O
(	O
yyloc	struct
,	O
(	O
yylsp	pointer
-	O
mimetypes_yylen	int
)	O
,	O
mimetypes_yylen	int
)	O
;	O
YY_REDUCE_PRINT	O
(	O
yyn	int
)	O
;	O
switch	O
(	O
yyn	int
)	O
{	O
case	O
6	int
:	O
{	O
struct	O
rule_tab	struct
*	O
p	pointer
=	O
mimetypes_malloc	function
(	O
sizeof	O
(	O
*	O
p	pointer
)	O
)	O
;	O
if	O
(	O
!	O
rule_list	pointer
)	O
mu_list_create	function
(	O
&	O
rule_list	pointer
)	O
;	O
p	pointer
->	O
type	int
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
.	O
ptr	pointer
;	O
p	pointer
->	O
node	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
;	O
p	pointer
->	O
priority	int
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
result	pointer
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
p	pointer
->	O
loc	pointer
.	O
beg	struct
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
beg	struct
)	O
;	O
mu_locus_point_copy	function
(	O
&	O
p	pointer
->	O
loc	pointer
.	O
end	struct
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
end	struct
)	O
;	O
mu_list_append	function
(	O
rule_list	pointer
,	O
p	pointer
)	O
;	O
}	O
break	O
;	O
case	O
7	int
:	O
{	O
YYERROR	O
;	O
}	O
break	O
;	O
case	O
8	int
:	O
{	O
errors	long
++	O
;	O
if	O
(	O
arg_list	pointer
)	O
mu_list_destroy	function
(	O
&	O
arg_list	pointer
)	O
;	O
lex_next_rule	function
(	O
)	O
;	O
yyerrok	O
;	O
yyclearin	O
;	O
}	O
break	O
;	O
case	O
9	int
:	O
{	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_node	function
(	O
true_node	int
,	O
&	O
mimetypes_yylloc	struct
)	O
;	O
}	O
break	O
;	O
case	O
12	int
:	O
{	O
struct	O
mu_locus_range	struct
lr	pointer
;	O
lr	pointer
.	O
beg	struct
=	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
)	O
.	O
beg	struct
;	O
lr	pointer
.	O
end	struct
=	O
(	O
yylsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
)	O
.	O
end	struct
;	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_binary_node	function
(	O
L_OR	int
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
node	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
node	pointer
)	O
,	O
&	O
lr	pointer
)	O
;	O
}	O
break	O
;	O
case	O
13	int
:	O
{	O
struct	O
mu_locus_range	struct
lr	pointer
;	O
lr	pointer
.	O
beg	struct
=	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
beg	struct
;	O
lr	pointer
.	O
end	struct
=	O
(	O
yylsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
end	struct
;	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_binary_node	function
(	O
L_OR	int
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
,	O
&	O
lr	pointer
)	O
;	O
}	O
break	O
;	O
case	O
14	int
:	O
{	O
struct	O
mu_locus_range	struct
lr	pointer
;	O
lr	pointer
.	O
beg	struct
=	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
beg	struct
;	O
lr	pointer
.	O
end	struct
=	O
(	O
yylsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
.	O
end	struct
;	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_binary_node	function
(	O
L_AND	int
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
,	O
&	O
lr	pointer
)	O
;	O
}	O
break	O
;	O
case	O
15	int
:	O
{	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_negation_node	function
(	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
node	pointer
)	O
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
16	int
:	O
{	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
node	pointer
)	O
;	O
}	O
break	O
;	O
case	O
17	int
:	O
{	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_suffix_node	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
19	int
:	O
{	O
YYERROR	O
;	O
}	O
break	O
;	O
case	O
20	int
:	O
{	O
size_t	long
count	long
=	O
0	int
;	O
struct	O
mimetypes_string	struct
*	O
arg	pointer
;	O
mu_list_count	function
(	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
list	pointer
)	O
,	O
&	O
count	long
)	O
;	O
if	O
(	O
count	long
!=	O
1	int
)	O
{	O
mimetypes_yyerror	function
(	O
_	O
(	O
"priority takes single numberic argument"	pointer
)	O
)	O
;	O
YYERROR	O
;	O
}	O
mu_list_head	function
(	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
list	pointer
)	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
arg	pointer
)	O
;	O
(	O
mimetypes_yyval	union
.	O
result	pointer
)	O
=	O
atoi	function
(	O
arg	pointer
->	O
ptr	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
list	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
21	int
:	O
{	O
(	O
mimetypes_yyval	union
.	O
result	pointer
)	O
=	O
100	int
;	O
}	O
break	O
;	O
case	O
23	int
:	O
{	O
struct	O
mu_locus_range	struct
lr	pointer
;	O
lr	pointer
.	O
beg	struct
=	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
4	int
)	O
]	O
)	O
.	O
beg	struct
;	O
lr	pointer
.	O
end	struct
=	O
(	O
yylsp	pointer
[	O
(	O
4	int
)	O
-	O
(	O
4	int
)	O
]	O
)	O
.	O
end	struct
;	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
=	O
make_functional_node	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
string	pointer
)	O
.	O
ptr	pointer
,	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
list	pointer
)	O
,	O
&	O
lr	pointer
)	O
;	O
if	O
(	O
!	O
(	O
mimetypes_yyval	union
.	O
node	pointer
)	O
)	O
YYERROR	O
;	O
}	O
break	O
;	O
case	O
24	int
:	O
{	O
mu_list_create	function
(	O
&	O
arg_list	pointer
)	O
;	O
(	O
mimetypes_yyval	union
.	O
list	pointer
)	O
=	O
arg_list	pointer
;	O
mu_list_append	function
(	O
(	O
mimetypes_yyval	union
.	O
list	pointer
)	O
,	O
mimetypes_string_dup	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
25	int
:	O
{	O
mu_list_append	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
list	pointer
)	O
,	O
mimetypes_string_dup	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
)	O
;	O
(	O
mimetypes_yyval	union
.	O
list	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
list	pointer
)	O
;	O
}	O
break	O
;	O
case	O
27	int
:	O
{	O
YYERROR	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
YY_SYMBOL_PRINT	O
(	O
"-> $$ ="	pointer
,	O
mimetypes_yyr1	array
[	O
yyn	int
]	O
,	O
&	O
mimetypes_yyval	union
,	O
&	O
yyloc	struct
)	O
;	O
YYPOPSTACK	O
(	O
mimetypes_yylen	int
)	O
;	O
mimetypes_yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
*	O
++	O
yyvsp	pointer
=	O
mimetypes_yyval	union
;	O
*	O
++	O
yylsp	pointer
=	O
yyloc	struct
;	O
yyn	int
=	O
mimetypes_yyr1	array
[	O
yyn	int
]	O
;	O
mimetypes_yystate	int
=	O
yypgoto	array
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
+	O
*	O
yyssp	pointer
;	O
if	O
(	O
0	int
<=	O
mimetypes_yystate	int
&&	O
mimetypes_yystate	int
<=	O
YYLAST	int
&&	O
mimetypes_yycheck	array
[	O
mimetypes_yystate	int
]	O
==	O
*	O
yyssp	pointer
)	O
mimetypes_yystate	int
=	O
mimetypes_yytable	array
[	O
mimetypes_yystate	int
]	O
;	O
else	O
mimetypes_yystate	int
=	O
yydefgoto	array
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
;	O
goto	O
yynewstate	O
;	O
yyerrlab	O
:	O
yytoken	int
=	O
mimetypes_yychar	int
==	O
YYEMPTY	O
?	O
YYEMPTY	O
:	O
YYTRANSLATE	O
(	O
mimetypes_yychar	int
)	O
;	O
if	O
(	O
!	O
yyerrstatus	int
)	O
{	O
++	O
mimetypes_yynerrs	int
;	O
mimetypes_yyerror	function
(	O
YY_	O
(	O
"syntax error"	pointer
)	O
)	O
;	O
}	O
yyerror_range	array
[	O
1	int
]	O
=	O
mimetypes_yylloc	struct
;	O
if	O
(	O
yyerrstatus	int
==	O
3	int
)	O
{	O
if	O
(	O
mimetypes_yychar	int
<=	O
YYEOF	int
)	O
{	O
if	O
(	O
mimetypes_yychar	int
==	O
YYEOF	int
)	O
YYABORT	O
;	O
}	O
else	O
{	O
yydestruct	function
(	O
"Error: discarding"	pointer
,	O
yytoken	int
,	O
&	O
mimetypes_yylval	union
,	O
&	O
mimetypes_yylloc	struct
)	O
;	O
mimetypes_yychar	int
=	O
YYEMPTY	O
;	O
}	O
}	O
goto	O
yyerrlab1	O
;	O
yyerrorlab	O
:	O
if	O
(	O
0	int
)	O
goto	O
yyerrorlab	O
;	O
yyerror_range	array
[	O
1	int
]	O
=	O
yylsp	pointer
[	O
1	int
-	O
mimetypes_yylen	int
]	O
;	O
YYPOPSTACK	O
(	O
mimetypes_yylen	int
)	O
;	O
mimetypes_yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
mimetypes_yystate	int
=	O
*	O
yyssp	pointer
;	O
goto	O
yyerrlab1	O
;	O
yyerrlab1	O
:	O
yyerrstatus	int
=	O
3	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
yyn	int
=	O
mimetypes_yypact	array
[	O
mimetypes_yystate	int
]	O
;	O
if	O
(	O
!	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
{	O
yyn	int
+=	O
YYTERROR	int
;	O
if	O
(	O
0	int
<=	O
yyn	int
&&	O
yyn	int
<=	O
YYLAST	int
&&	O
mimetypes_yycheck	array
[	O
yyn	int
]	O
==	O
YYTERROR	int
)	O
{	O
yyn	int
=	O
mimetypes_yytable	array
[	O
yyn	int
]	O
;	O
if	O
(	O
0	int
<	O
yyn	int
)	O
break	O
;	O
}	O
}	O
if	O
(	O
yyssp	pointer
==	O
yyss	pointer
)	O
YYABORT	O
;	O
yyerror_range	array
[	O
1	int
]	O
=	O
*	O
yylsp	pointer
;	O
yydestruct	function
(	O
"Error: popping"	pointer
,	O
yystos	array
[	O
mimetypes_yystate	int
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
mimetypes_yystate	int
=	O
*	O
yyssp	pointer
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
}	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
mimetypes_yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
yyerror_range	array
[	O
2	int
]	O
=	O
mimetypes_yylloc	struct
;	O
YYLLOC_DEFAULT	O
(	O
yyloc	struct
,	O
yyerror_range	array
,	O
2	int
)	O
;	O
*	O
++	O
yylsp	pointer
=	O
yyloc	struct
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yystos	array
[	O
yyn	int
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
mimetypes_yystate	int
=	O
yyn	int
;	O
goto	O
yynewstate	O
;	O
yyacceptlab	O
:	O
yyresult	int
=	O
0	int
;	O
goto	O
yyreturn	O
;	O
yyabortlab	O
:	O
yyresult	int
=	O
1	int
;	O
goto	O
yyreturn	O
;	O
yyexhaustedlab	O
:	O
mimetypes_yyerror	function
(	O
YY_	O
(	O
"memory exhausted"	pointer
)	O
)	O
;	O
yyresult	int
=	O
2	int
;	O
yyreturn	O
:	O
if	O
(	O
mimetypes_yychar	int
!=	O
YYEMPTY	O
)	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
mimetypes_yychar	int
)	O
;	O
yydestruct	function
(	O
"Cleanup: discarding lookahead"	pointer
,	O
yytoken	int
,	O
&	O
mimetypes_yylval	union
,	O
&	O
mimetypes_yylloc	struct
)	O
;	O
}	O
YYPOPSTACK	O
(	O
mimetypes_yylen	int
)	O
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
while	O
(	O
yyssp	pointer
!=	O
yyss	pointer
)	O
{	O
yydestruct	function
(	O
"Cleanup: popping"	pointer
,	O
yystos	array
[	O
*	O
yyssp	pointer
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
yyss	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss	pointer
)	O
;	O
return	O
YYID	O
(	O
yyresult	int
)	O
;	O
}	O
int	O
mimetypes_parse	function
(	O
const	O
char	O
*	O
name	pointer
)	O
{	O
int	O
rc	int
;	O
if	O
(	O
mimetypes_open	function
(	O
name	pointer
)	O
)	O
return	O
1	int
;	O
mimetypes_yydebug	int
=	O
mu_debug_level_p	function
(	O
MU_DEBCAT_APP	int
,	O
MU_DEBUG_TRACE3	int
)	O
;	O
rc	int
=	O
mimetypes_yyparse	function
(	O
)	O
;	O
mimetypes_close	function
(	O
)	O
;	O
return	O
rc	int
||	O
errors	long
;	O
}	O
static	O
struct	O
node	pointer
*	O
make_node	function
(	O
enum	O
node_type	enum
type	int
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
{	O
struct	O
node	pointer
*	O
p	pointer
=	O
mimetypes_malloc	function
(	O
sizeof	O
*	O
p	pointer
)	O
;	O
p	pointer
->	O
type	int
=	O
type	int
;	O
mu_locus_range_init	function
(	O
&	O
p	pointer
->	O
loc	pointer
)	O
;	O
mu_locus_range_copy	function
(	O
&	O
p	pointer
->	O
loc	pointer
,	O
loc	pointer
)	O
;	O
return	O
p	pointer
;	O
}	O
static	O
struct	O
node	pointer
*	O
make_binary_node	function
(	O
int	O
op	int
,	O
struct	O
node	pointer
*	O
left	pointer
,	O
struct	O
node	pointer
*	O
right	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
{	O
struct	O
node	pointer
*	O
node	pointer
=	O
make_node	function
(	O
binary_node	int
,	O
loc	pointer
)	O
;	O
node	pointer
->	O
v	array
.	O
bin	struct
.	O
op	int
=	O
op	int
;	O
node	pointer
->	O
v	array
.	O
bin	struct
.	O
arg1	pointer
=	O
left	pointer
;	O
node	pointer
->	O
v	array
.	O
bin	struct
.	O
arg2	pointer
=	O
right	pointer
;	O
return	O
node	pointer
;	O
}	O
struct	O
node	pointer
*	O
make_negation_node	function
(	O
struct	O
node	pointer
*	O
p	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
{	O
struct	O
node	pointer
*	O
node	pointer
=	O
make_node	function
(	O
negation_node	int
,	O
loc	pointer
)	O
;	O
node	pointer
->	O
v	array
.	O
arg	pointer
=	O
p	pointer
;	O
return	O
node	pointer
;	O
}	O
struct	O
node	pointer
*	O
make_suffix_node	function
(	O
struct	O
mimetypes_string	struct
*	O
suffix	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
{	O
struct	O
node	pointer
*	O
node	pointer
=	O
make_node	function
(	O
suffix_node	int
,	O
loc	pointer
)	O
;	O
node	pointer
->	O
v	array
.	O
suffix	pointer
=	O
*	O
suffix	pointer
;	O
return	O
node	pointer
;	O
}	O
struct	O
builtin_tab	struct
{	O
char	O
*	O
name	pointer
;	O
char	O
*	O
args	pointer
;	O
builtin_t	pointer
handler	array
;	O
}	O
;	O
static	O
int	O
b_match	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
return	O
fnmatch	function
(	O
args	pointer
[	O
0	int
]	O
.	O
string	pointer
->	O
ptr	pointer
,	O
mimeview_file	pointer
,	O
0	int
)	O
==	O
0	int
;	O
}	O
static	O
int	O
b_ascii	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
int	O
i	long
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
args	pointer
[	O
1	int
]	O
.	O
number	long
;	O
i	long
++	O
)	O
{	O
unsigned	O
char	O
c	char
;	O
size_t	long
n	pointer
;	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
&	O
c	char
,	O
1	int
,	O
&	O
n	pointer
)	O
;	O
if	O
(	O
rc	int
||	O
n	pointer
==	O
0	int
)	O
break	O
;	O
if	O
(	O
!	O
ISASCII	O
(	O
c	char
)	O
)	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
int	O
b_printable	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
int	O
i	long
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
args	pointer
[	O
1	int
]	O
.	O
number	long
;	O
i	long
++	O
)	O
{	O
unsigned	O
char	O
c	char
;	O
size_t	long
n	pointer
;	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
&	O
c	char
,	O
1	int
,	O
&	O
n	pointer
)	O
;	O
if	O
(	O
rc	int
||	O
n	pointer
==	O
0	int
)	O
break	O
;	O
if	O
(	O
!	O
ISPRINT	O
(	O
c	char
)	O
)	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
int	O
b_string	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
struct	O
mimetypes_string	struct
*	O
str	pointer
=	O
args	pointer
[	O
1	int
]	O
.	O
string	pointer
;	O
int	O
i	long
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
str	pointer
->	O
len	long
;	O
i	long
++	O
)	O
{	O
char	O
c	char
;	O
size_t	long
n	pointer
;	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
&	O
c	char
,	O
1	int
,	O
&	O
n	pointer
)	O
;	O
if	O
(	O
rc	int
||	O
n	pointer
==	O
0	int
||	O
c	char
!=	O
str	pointer
->	O
ptr	pointer
[	O
i	long
]	O
)	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
static	O
int	O
b_istring	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
int	O
i	long
;	O
struct	O
mimetypes_string	struct
*	O
str	pointer
=	O
args	pointer
[	O
1	int
]	O
.	O
string	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
str	pointer
->	O
len	long
;	O
i	long
++	O
)	O
{	O
char	O
c	char
;	O
size_t	long
n	pointer
;	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
&	O
c	char
,	O
1	int
,	O
&	O
n	pointer
)	O
;	O
if	O
(	O
rc	int
||	O
n	pointer
==	O
0	int
||	O
mu_tolower	O
(	O
c	char
)	O
!=	O
mu_tolower	O
(	O
str	pointer
->	O
ptr	pointer
[	O
i	long
]	O
)	O
)	O
return	O
0	int
;	O
}	O
return	O
1	int
;	O
}	O
int	O
compare_bytes	function
(	O
union	O
argument	union
*	O
args	pointer
,	O
void	O
*	O
sample	pointer
,	O
void	O
*	O
buf	pointer
,	O
size_t	long
size	long
)	O
{	O
int	O
rc	int
;	O
size_t	long
n	pointer
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
buf	pointer
,	O
size	long
,	O
&	O
n	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_read"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
else	O
if	O
(	O
n	pointer
!=	O
size	long
)	O
return	O
0	int
;	O
return	O
memcmp	function
(	O
sample	pointer
,	O
buf	pointer
,	O
size	long
)	O
==	O
0	int
;	O
}	O
static	O
int	O
b_char	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
char	O
val	pointer
=	O
args	pointer
[	O
1	int
]	O
.	O
number	long
;	O
char	O
buf	pointer
;	O
return	O
compare_bytes	function
(	O
args	pointer
,	O
&	O
val	pointer
,	O
&	O
buf	pointer
,	O
sizeof	O
(	O
buf	pointer
)	O
)	O
;	O
}	O
static	O
int	O
b_short	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
uint16_t	short
val	pointer
=	O
args	pointer
[	O
1	int
]	O
.	O
number	long
;	O
uint16_t	short
buf	pointer
;	O
return	O
compare_bytes	function
(	O
args	pointer
,	O
&	O
val	pointer
,	O
&	O
buf	pointer
,	O
sizeof	O
(	O
buf	pointer
)	O
)	O
;	O
}	O
static	O
int	O
b_int	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
uint32_t	int
val	pointer
=	O
args	pointer
[	O
1	int
]	O
.	O
number	long
;	O
uint32_t	int
buf	pointer
;	O
return	O
compare_bytes	function
(	O
args	pointer
,	O
&	O
val	pointer
,	O
&	O
buf	pointer
,	O
sizeof	O
(	O
buf	pointer
)	O
)	O
;	O
}	O
static	O
int	O
b_locale	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
abort	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
b_contains	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
size_t	long
i	long
,	O
count	long
;	O
char	O
*	O
buf	pointer
;	O
struct	O
mimetypes_string	struct
*	O
str	pointer
=	O
args	pointer
[	O
2	int
]	O
.	O
string	pointer
;	O
int	O
rc	int
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
buf	pointer
=	O
mu_alloc	function
(	O
args	pointer
[	O
1	int
]	O
.	O
number	long
)	O
;	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
buf	pointer
,	O
args	pointer
[	O
1	int
]	O
.	O
number	long
,	O
&	O
count	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_read"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
}	O
else	O
if	O
(	O
count	long
>	O
str	pointer
->	O
len	long
)	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<=	O
count	long
-	O
str	pointer
->	O
len	long
;	O
i	long
++	O
)	O
if	O
(	O
buf	pointer
[	O
i	long
]	O
==	O
str	pointer
->	O
ptr	pointer
[	O
0	int
]	O
&&	O
memcmp	function
(	O
buf	pointer
+	O
i	long
,	O
str	pointer
->	O
ptr	pointer
,	O
str	pointer
->	O
len	long
)	O
==	O
0	int
)	O
{	O
free	function
(	O
buf	pointer
)	O
;	O
return	O
1	int
;	O
}	O
free	function
(	O
buf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
b_regex	function
(	O
union	O
argument	union
*	O
args	pointer
)	O
{	O
size_t	long
count	long
;	O
int	O
rc	int
;	O
char	O
buf	pointer
[	O
MIME_MAX_BUFFER	int
]	O
;	O
rc	int
=	O
mu_stream_seek	function
(	O
mimeview_stream	pointer
,	O
args	pointer
[	O
0	int
]	O
.	O
number	long
,	O
MU_SEEK_SET	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_seek"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
rc	int
=	O
mu_stream_read	function
(	O
mimeview_stream	pointer
,	O
buf	pointer
,	O
sizeof	O
buf	pointer
-	O
1	int
,	O
&	O
count	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_stream_read"	pointer
,	O
NULL	O
,	O
rc	int
)	O
;	O
return	O
0	int
;	O
}	O
buf	pointer
[	O
count	long
]	O
=	O
0	int
;	O
return	O
regexec	function
(	O
&	O
args	pointer
[	O
1	int
]	O
.	O
rx	pointer
,	O
buf	pointer
,	O
0	int
,	O
NULL	O
,	O
0	int
)	O
==	O
0	int
;	O
}	O
static	O
struct	O
builtin_tab	struct
builtin_tab	struct
[	O
]	O
=	O
{	O
{	O
"match"	pointer
,	O
"s"	pointer
,	O
b_match	function
}	O
,	O
{	O
"ascii"	pointer
,	O
"dd"	pointer
,	O
b_ascii	function
}	O
,	O
{	O
"printable"	pointer
,	O
"dd"	pointer
,	O
b_printable	function
}	O
,	O
{	O
"regex"	pointer
,	O
"dx"	pointer
,	O
b_regex	function
}	O
,	O
{	O
"string"	pointer
,	O
"ds"	pointer
,	O
b_string	function
}	O
,	O
{	O
"istring"	pointer
,	O
"ds"	pointer
,	O
b_istring	function
}	O
,	O
{	O
"char"	pointer
,	O
"dc"	pointer
,	O
b_char	function
}	O
,	O
{	O
"short"	pointer
,	O
"dd"	pointer
,	O
b_short	function
}	O
,	O
{	O
"int"	pointer
,	O
"dd"	pointer
,	O
b_int	function
}	O
,	O
{	O
"locale"	pointer
,	O
"s"	pointer
,	O
b_locale	function
}	O
,	O
{	O
"contains"	pointer
,	O
"dds"	pointer
,	O
b_contains	function
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
struct	O
node	pointer
*	O
make_functional_node	function
(	O
char	O
*	O
ident	pointer
,	O
mu_list_t	pointer
list	pointer
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
)	O
{	O
size_t	long
count	long
,	O
i	long
;	O
struct	O
builtin_tab	struct
*	O
p	pointer
;	O
struct	O
node	pointer
*	O
node	pointer
;	O
union	O
argument	union
*	O
args	pointer
;	O
mu_iterator_t	pointer
itr	pointer
;	O
int	O
rc	int
;	O
for	O
(	O
p	pointer
=	O
builtin_tab	struct
;	O
;	O
p	pointer
++	O
)	O
{	O
if	O
(	O
!	O
p	pointer
->	O
name	pointer
)	O
{	O
char	O
*	O
s	pointer
;	O
mu_asprintf	function
(	O
&	O
s	pointer
,	O
_	O
(	O
"%s: unknown function"	pointer
)	O
,	O
ident	pointer
)	O
;	O
mimetypes_yyerror	function
(	O
s	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
ident	pointer
,	O
p	pointer
->	O
name	pointer
)	O
==	O
0	int
)	O
break	O
;	O
}	O
mu_list_count	function
(	O
list	pointer
,	O
&	O
count	long
)	O
;	O
i	long
=	O
strlen	function
(	O
p	pointer
->	O
args	pointer
)	O
;	O
if	O
(	O
count	long
<	O
i	long
)	O
{	O
char	O
*	O
s	pointer
;	O
mu_asprintf	function
(	O
&	O
s	pointer
,	O
_	O
(	O
"too few arguments in call to `%s'"	pointer
)	O
,	O
ident	pointer
)	O
;	O
mimetypes_yyerror	function
(	O
s	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
else	O
if	O
(	O
count	long
>	O
i	long
)	O
{	O
char	O
*	O
s	pointer
;	O
mu_asprintf	function
(	O
&	O
s	pointer
,	O
_	O
(	O
"too many arguments in call to `%s'"	pointer
)	O
,	O
ident	pointer
)	O
;	O
mimetypes_yyerror	function
(	O
s	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
args	pointer
=	O
mimetypes_malloc	function
(	O
count	long
*	O
sizeof	O
*	O
args	pointer
)	O
;	O
mu_list_get_iterator	function
(	O
list	pointer
,	O
&	O
itr	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
,	O
mu_iterator_first	function
(	O
itr	pointer
)	O
;	O
!	O
mu_iterator_is_done	function
(	O
itr	pointer
)	O
;	O
mu_iterator_next	function
(	O
itr	pointer
)	O
,	O
i	long
++	O
)	O
{	O
struct	O
mimetypes_string	struct
*	O
data	pointer
;	O
char	O
*	O
tmp	pointer
;	O
mu_iterator_current	function
(	O
itr	pointer
,	O
(	O
void	O
*	O
*	O
)	O
&	O
data	pointer
)	O
;	O
switch	O
(	O
p	pointer
->	O
args	pointer
[	O
i	long
]	O
)	O
{	O
case	O
'd'	O
:	O
args	pointer
[	O
i	long
]	O
.	O
number	long
=	O
strtoul	function
(	O
data	pointer
->	O
ptr	pointer
,	O
&	O
tmp	pointer
,	O
0	int
)	O
;	O
if	O
(	O
*	O
tmp	pointer
)	O
goto	O
err	int
;	O
break	O
;	O
case	O
's'	O
:	O
args	pointer
[	O
i	long
]	O
.	O
string	pointer
=	O
data	pointer
;	O
break	O
;	O
case	O
'x'	O
:	O
{	O
char	O
*	O
s	pointer
;	O
rc	int
=	O
mu_c_str_unescape_trans	function
(	O
data	pointer
->	O
ptr	pointer
,	O
"\\\\\"\"a\ab\bf\fn\nr\rt\tv\v"	pointer
,	O
&	O
s	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_c_str_unescape_trans"	pointer
,	O
data	pointer
->	O
ptr	pointer
,	O
rc	int
)	O
;	O
return	O
NULL	O
;	O
}	O
rc	int
=	O
regcomp	function
(	O
&	O
args	pointer
[	O
i	long
]	O
.	O
rx	pointer
,	O
s	pointer
,	O
REG_EXTENDED	int
|	O
REG_NOSUB	O
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
char	O
errbuf	array
[	O
512	int
]	O
;	O
regerror	function
(	O
rc	int
,	O
&	O
args	pointer
[	O
i	long
]	O
.	O
rx	pointer
,	O
errbuf	array
,	O
sizeof	O
errbuf	array
)	O
;	O
mimetypes_yyerror	function
(	O
errbuf	array
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
break	O
;	O
case	O
'c'	O
:	O
args	pointer
[	O
i	long
]	O
.	O
c	char
=	O
strtoul	function
(	O
data	pointer
->	O
ptr	pointer
,	O
&	O
tmp	pointer
,	O
0	int
)	O
;	O
if	O
(	O
*	O
tmp	pointer
)	O
goto	O
err	int
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
}	O
node	pointer
=	O
make_node	function
(	O
functional_node	int
,	O
loc	pointer
)	O
;	O
node	pointer
->	O
v	array
.	O
function	struct
.	O
fun	pointer
=	O
p	pointer
->	O
handler	array
;	O
node	pointer
->	O
v	array
.	O
function	struct
.	O
args	pointer
=	O
args	pointer
;	O
return	O
node	pointer
;	O
err	int
:	O
{	O
char	O
*	O
s	pointer
;	O
mu_asprintf	function
(	O
&	O
s	pointer
,	O
_	O
(	O
"argument %lu has wrong type in call to `%s'"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
i	long
,	O
ident	pointer
)	O
;	O
mimetypes_yyerror	function
(	O
s	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
static	O
int	O
check_suffix	function
(	O
char	O
*	O
suf	pointer
)	O
{	O
char	O
*	O
p	pointer
=	O
strrchr	function
(	O
mimeview_file	pointer
,	O
'.'	O
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
0	int
;	O
return	O
strcmp	function
(	O
p	pointer
+	O
1	int
,	O
suf	pointer
)	O
==	O
0	int
;	O
}	O
void	O
mime_debug	function
(	O
int	O
lev	int
,	O
struct	O
mu_locus_range	struct
const	O
*	O
loc	pointer
,	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
if	O
(	O
mu_debug_level_p	function
(	O
MU_DEBCAT_APP	int
,	O
lev	int
)	O
)	O
{	O
va_list	array
ap	array
;	O
if	O
(	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
==	O
0	int
)	O
mu_debug_log_begin	function
(	O
"%s:%u"	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
)	O
;	O
else	O
if	O
(	O
strcmp	function
(	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
end	struct
.	O
mu_file	pointer
)	O
)	O
mu_debug_log_begin	function
(	O
"%s:%u.%u-%s:%u.%u"	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
,	O
loc	pointer
->	O
end	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
end	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
)	O
;	O
else	O
if	O
(	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
!=	O
loc	pointer
->	O
end	struct
.	O
mu_line	int
)	O
mu_debug_log_begin	function
(	O
"%s:%u.%u-%u.%u"	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
,	O
loc	pointer
->	O
end	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
)	O
;	O
else	O
if	O
(	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
!=	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
)	O
mu_debug_log_begin	function
(	O
"%s:%u.%u-%u"	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
,	O
loc	pointer
->	O
end	struct
.	O
mu_col	int
)	O
;	O
else	O
mu_debug_log_begin	function
(	O
"%s:%u.%u"	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_file	pointer
,	O
loc	pointer
->	O
beg	struct
.	O
mu_line	int
,	O
loc	pointer
->	O
beg	struct
.	O
mu_col	int
)	O
;	O
mu_stream_write	function
(	O
mu_strerr	pointer
,	O
": "	pointer
,	O
2	int
,	O
NULL	O
)	O
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
mu_stream_vprintf	function
(	O
mu_strerr	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
mu_debug_log_nl	function
(	O
)	O
;	O
}	O
}	O
static	O
int	O
eval_rule	function
(	O
struct	O
node	pointer
*	O
root	pointer
)	O
{	O
int	O
result	pointer
;	O
switch	O
(	O
root	pointer
->	O
type	int
)	O
{	O
case	O
true_node	int
:	O
result	pointer
=	O
1	int
;	O
break	O
;	O
case	O
functional_node	int
:	O
result	pointer
=	O
root	pointer
->	O
v	array
.	O
function	struct
.	O
fun	pointer
(	O
root	pointer
->	O
v	array
.	O
function	struct
.	O
args	pointer
)	O
;	O
break	O
;	O
case	O
binary_node	int
:	O
result	pointer
=	O
eval_rule	function
(	O
root	pointer
->	O
v	array
.	O
bin	struct
.	O
arg1	pointer
)	O
;	O
switch	O
(	O
root	pointer
->	O
v	array
.	O
bin	struct
.	O
op	int
)	O
{	O
case	O
L_OR	int
:	O
if	O
(	O
!	O
result	pointer
)	O
result	pointer
|=	O
eval_rule	function
(	O
root	pointer
->	O
v	array
.	O
bin	struct
.	O
arg2	pointer
)	O
;	O
break	O
;	O
case	O
L_AND	int
:	O
if	O
(	O
result	pointer
)	O
result	pointer
&=	O
eval_rule	function
(	O
root	pointer
->	O
v	array
.	O
bin	struct
.	O
arg2	pointer
)	O
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
break	O
;	O
case	O
negation_node	int
:	O
result	pointer
=	O
!	O
eval_rule	function
(	O
root	pointer
->	O
v	array
.	O
arg	pointer
)	O
;	O
break	O
;	O
case	O
suffix_node	int
:	O
result	pointer
=	O
check_suffix	function
(	O
root	pointer
->	O
v	array
.	O
suffix	pointer
.	O
ptr	pointer
)	O
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
mime_debug	function
(	O
MU_DEBUG_TRACE2	int
,	O
&	O
root	pointer
->	O
loc	pointer
,	O
"result %s"	pointer
,	O
result	pointer
?	O
"true"	pointer
:	O
"false"	pointer
)	O
;	O
return	O
result	pointer
;	O
}	O
static	O
int	O
evaluate	function
(	O
void	O
*	O
*	O
itmv	pointer
,	O
size_t	long
itmc	long
,	O
void	O
*	O
call_data	pointer
)	O
{	O
struct	O
rule_tab	struct
*	O
p	pointer
=	O
itmv	pointer
[	O
0	int
]	O
;	O
if	O
(	O
eval_rule	function
(	O
p	pointer
->	O
node	pointer
)	O
)	O
{	O
itmv	pointer
[	O
0	int
]	O
=	O
p	pointer
;	O
mime_debug	function
(	O
MU_DEBUG_TRACE1	int
,	O
&	O
p	pointer
->	O
loc	pointer
,	O
"rule %s matches"	pointer
,	O
p	pointer
->	O
type	int
)	O
;	O
return	O
MU_LIST_MAP_OK	int
;	O
}	O
return	O
MU_LIST_MAP_SKIP	int
;	O
}	O
static	O
int	O
rule_cmp	function
(	O
const	O
void	O
*	O
a	pointer
,	O
const	O
void	O
*	O
b	pointer
)	O
{	O
struct	O
rule_tab	struct
const	O
*	O
arule	pointer
=	O
a	pointer
;	O
struct	O
rule_tab	struct
const	O
*	O
brule	pointer
=	O
b	pointer
;	O
if	O
(	O
arule	pointer
->	O
priority	int
==	O
brule	pointer
->	O
priority	int
)	O
{	O
if	O
(	O
arule	pointer
->	O
node	pointer
->	O
type	int
==	O
true_node	int
&&	O
brule	pointer
->	O
node	pointer
->	O
type	int
!=	O
true_node	int
)	O
return	O
1	int
;	O
else	O
if	O
(	O
brule	pointer
->	O
node	pointer
->	O
type	int
==	O
true_node	int
&&	O
arule	pointer
->	O
node	pointer
->	O
type	int
!=	O
true_node	int
)	O
return	O
-	O
1	int
;	O
else	O
return	O
mu_c_strcasecmp	function
(	O
arule	pointer
->	O
type	int
,	O
brule	pointer
->	O
type	int
)	O
;	O
}	O
return	O
arule	pointer
->	O
priority	int
-	O
brule	pointer
->	O
priority	int
;	O
}	O
const	O
char	O
*	O
get_file_type	function
(	O
)	O
{	O
mu_list_t	pointer
res	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
type	int
=	O
NULL	O
;	O
mu_list_map	function
(	O
rule_list	pointer
,	O
evaluate	function
,	O
NULL	O
,	O
1	int
,	O
&	O
res	pointer
)	O
;	O
if	O
(	O
!	O
mu_list_is_empty	function
(	O
res	pointer
)	O
)	O
{	O
struct	O
rule_tab	struct
*	O
rule	pointer
;	O
mu_list_sort	function
(	O
res	pointer
,	O
rule_cmp	function
)	O
;	O
mu_list_head	function
(	O
res	pointer
,	O
(	O
void	O
*	O
*	O
)	O
&	O
rule	pointer
)	O
;	O
mime_debug	function
(	O
MU_DEBUG_TRACE0	int
,	O
&	O
rule	pointer
->	O
loc	pointer
,	O
"selected rule %s"	pointer
,	O
rule	pointer
->	O
type	int
)	O
;	O
type	int
=	O
rule	pointer
->	O
type	int
;	O
}	O
mu_list_destroy	function
(	O
&	O
res	pointer
)	O
;	O
return	O
type	int
;	O
}	O
