unsigned	O
long	O
get_num	function
(	O
char	O
const	O
*	O
s	pointer
)	O
{	O
unsigned	O
long	O
n	pointer
;	O
char	O
*	O
p	pointer
;	O
errno	O
=	O
0	int
;	O
n	pointer
=	O
strtoul	function
(	O
s	pointer
,	O
&	O
p	pointer
,	O
10	int
)	O
;	O
if	O
(	O
errno	O
||	O
*	O
p	pointer
)	O
{	O
mu_error	function
(	O
"not a number: %s"	pointer
,	O
s	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
return	O
n	pointer
;	O
}	O
struct	O
interp_env	struct
{	O
mu_mailbox_t	pointer
mbx	pointer
;	O
mu_message_t	pointer
msg	pointer
;	O
size_t	long
msgno	long
;	O
}	O
;	O
int	O
dm_env_date	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_envelope_t	pointer
msg_env	pointer
;	O
char	O
*	O
str	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_envelope	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
msg_env	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_envelope_aget_date	function
(	O
msg_env	pointer
,	O
&	O
str	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
str	pointer
)	O
;	O
free	function
(	O
str	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_env_sender	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_envelope_t	pointer
msg_env	pointer
;	O
char	O
*	O
str	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_envelope	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
msg_env	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_envelope_aget_sender	function
(	O
msg_env	pointer
,	O
&	O
str	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
str	pointer
)	O
;	O
free	function
(	O
str	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_header_lines	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
lines	int
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_lines	function
(	O
hdr	pointer
,	O
&	O
lines	int
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
lines	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_header_count	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
n	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_get_field_count	function
(	O
hdr	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
n	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_header_size	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
s	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_size	function
(	O
hdr	pointer
,	O
&	O
s	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_header_field	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
n	pointer
=	O
get_num	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
char	O
const	O
*	O
s	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_sget_field_name	function
(	O
hdr	pointer
,	O
n	pointer
,	O
&	O
s	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_header_value	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
size_t	long
n	pointer
=	O
get_num	function
(	O
argv	pointer
[	O
1	int
]	O
)	O
;	O
char	O
const	O
*	O
s	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_sget_field_value	function
(	O
hdr	pointer
,	O
n	pointer
,	O
&	O
s	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_headers	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_header_t	pointer
hdr	pointer
;	O
char	O
const	O
*	O
name	pointer
;	O
char	O
*	O
val	pointer
;	O
size_t	long
i	long
,	O
n	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_header	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_header_get_field_count	function
(	O
hdr	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
for	O
(	O
i	long
=	O
1	int
;	O
i	long
<=	O
n	pointer
;	O
i	long
++	O
)	O
{	O
MU_ASSERT	O
(	O
mu_header_sget_field_name	function
(	O
hdr	pointer
,	O
i	long
,	O
&	O
name	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s:"	pointer
,	O
name	pointer
)	O
;	O
MU_ASSERT	O
(	O
mu_header_aget_field_value_unfold	function
(	O
hdr	pointer
,	O
i	long
,	O
&	O
val	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%s\n"	pointer
,	O
val	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
dm_body_lines	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_body_t	pointer
body	pointer
;	O
size_t	long
lines	int
;	O
MU_ASSERT	O
(	O
mu_message_get_body	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
body	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_body_lines	function
(	O
body	pointer
,	O
&	O
lines	int
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
lines	int
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_body_size	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_body_t	pointer
body	pointer
;	O
size_t	long
s	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_body	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
body	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_body_size	function
(	O
body	pointer
,	O
&	O
s	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_body_text	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_body_t	pointer
body	pointer
;	O
mu_stream_t	pointer
str	pointer
;	O
MU_ASSERT	O
(	O
mu_message_get_body	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
body	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_body_get_streamref	function
(	O
body	pointer
,	O
&	O
str	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_copy	function
(	O
mu_strout	pointer
,	O
str	pointer
,	O
0	int
,	O
NULL	O
)	O
)	O
;	O
mu_stream_unref	function
(	O
str	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_attr	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_attribute_t	pointer
attr	pointer
;	O
char	O
abuf	array
[	O
MU_STATUS_BUF_SIZE	O
]	O
;	O
MU_ASSERT	O
(	O
mu_message_get_attribute	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
attr	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_attribute_to_string	function
(	O
attr	pointer
,	O
abuf	array
,	O
sizeof	O
(	O
abuf	array
)	O
,	O
NULL	O
)	O
)	O
;	O
mu_printf	function
(	O
"%s"	pointer
,	O
abuf	array
[	O
0	int
]	O
?	O
abuf	array
:	O
"-"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_uid	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
size_t	long
uid	int
;	O
MU_ASSERT	O
(	O
mu_message_get_uid	function
(	O
ienv	pointer
->	O
msg	pointer
,	O
&	O
uid	int
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
uid	int
)	O
;	O
return	O
0	int
;	O
}	O
ATTR_FUN	O
(	O
set	pointer
,	O
seen	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
answered	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
flagged	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
deleted	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
draft	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
recent	O
)	O
ATTR_FUN	O
(	O
set	pointer
,	O
read	function
)	O
ATTR_FUN	O
(	O
unset	O
,	O
seen	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
answered	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
flagged	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
deleted	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
draft	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
recent	O
)	O
ATTR_FUN	O
(	O
unset	O
,	O
read	function
)	O
int	O
dm_append	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
mu_stream_t	pointer
str	pointer
;	O
mu_message_t	pointer
newmsg	pointer
;	O
MU_ASSERT	O
(	O
mu_file_stream_create	function
(	O
&	O
str	pointer
,	O
argv	pointer
[	O
1	int
]	O
,	O
MU_STREAM_READ	int
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_stream_to_message	function
(	O
str	pointer
,	O
&	O
newmsg	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_append_message	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
newmsg	pointer
)	O
)	O
;	O
mu_stream_destroy	function
(	O
&	O
str	pointer
)	O
;	O
mu_printf	function
(	O
"OK"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_expunge	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_expunge	function
(	O
ienv	pointer
->	O
mbx	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"OK"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_sync	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_sync	function
(	O
ienv	pointer
->	O
mbx	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"OK"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_count	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
size_t	long
n	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_messages_count	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
n	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_uidvalidity	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
unsigned	O
long	O
v	array
;	O
MU_ASSERT	O
(	O
mu_mailbox_uidvalidity	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
&	O
v	array
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
v	array
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_uidnext	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
size_t	long
n	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_uidnext	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
n	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_recent	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
size_t	long
n	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_messages_recent	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
n	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_unseen	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
size_t	long
n	pointer
;	O
MU_ASSERT	O
(	O
mu_mailbox_message_unseen	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
&	O
n	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
n	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
char	O
const	O
*	O
mbox_actions	array
[	O
]	O
=	O
{	O
"expunge"	pointer
,	O
"sync"	pointer
,	O
"append"	pointer
,	O
"uidvalidity"	pointer
,	O
"uidnext"	pointer
,	O
"count"	pointer
,	O
"recent"	pointer
,	O
"unseen"	pointer
,	O
NULL	O
}	O
;	O
int	O
needs_message	function
(	O
char	O
const	O
*	O
name	pointer
)	O
{	O
int	O
i	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
mbox_actions	array
[	O
i	long
]	O
;	O
i	long
++	O
)	O
if	O
(	O
strcmp	function
(	O
mbox_actions	array
[	O
i	long
]	O
,	O
name	pointer
)	O
==	O
0	int
)	O
return	O
0	int
;	O
return	O
1	int
;	O
}	O
int	O
dm_envinit	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
if	O
(	O
needs_message	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
{	O
if	O
(	O
!	O
ienv	pointer
->	O
msg	pointer
)	O
{	O
mu_error	function
(	O
"no message selected"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
mu_printf	function
(	O
"%lu "	pointer
,	O
(	O
unsigned	O
long	O
)	O
ienv	pointer
->	O
msgno	long
)	O
;	O
}	O
mu_printf	function
(	O
"%s: "	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_envfini	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
mu_printf	function
(	O
"\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
dm_nocmd	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
,	O
mu_assoc_t	pointer
options	pointer
,	O
void	O
*	O
env	pointer
)	O
{	O
struct	O
interp_env	struct
*	O
ienv	pointer
=	O
env	pointer
;	O
if	O
(	O
mu_isdigit	O
(	O
*	O
argv	pointer
[	O
0	int
]	O
)	O
)	O
{	O
ienv	pointer
->	O
msgno	long
=	O
get_num	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_get_message	function
(	O
ienv	pointer
->	O
mbx	pointer
,	O
ienv	pointer
->	O
msgno	long
,	O
&	O
ienv	pointer
->	O
msg	pointer
)	O
)	O
;	O
mu_printf	function
(	O
"%lu current message\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
ienv	pointer
->	O
msgno	long
)	O
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_PARSE	O
;	O
}	O
struct	O
mu_tesh_command	struct
commands	array
[	O
]	O
=	O
{	O
{	O
"__ENVINIT__"	pointer
,	O
""	pointer
,	O
dm_envinit	function
}	O
,	O
{	O
"__ENVFINI__"	pointer
,	O
""	pointer
,	O
dm_envfini	function
}	O
,	O
{	O
"__NOCMD__"	pointer
,	O
""	pointer
,	O
dm_nocmd	function
}	O
,	O
{	O
"env_date"	pointer
,	O
""	pointer
,	O
dm_env_date	function
}	O
,	O
{	O
"env_sender"	pointer
,	O
""	pointer
,	O
dm_env_sender	function
}	O
,	O
{	O
"header_lines"	pointer
,	O
""	pointer
,	O
dm_header_lines	function
}	O
,	O
{	O
"header_size"	pointer
,	O
""	pointer
,	O
dm_header_size	function
}	O
,	O
{	O
"header_count"	pointer
,	O
""	pointer
,	O
dm_header_count	function
}	O
,	O
{	O
"header_field"	pointer
,	O
"NUMBER"	pointer
,	O
dm_header_field	function
}	O
,	O
{	O
"header_value"	pointer
,	O
"NAME"	pointer
,	O
dm_header_value	function
}	O
,	O
{	O
"headers"	pointer
,	O
""	pointer
,	O
dm_headers	function
}	O
,	O
{	O
"body_lines"	pointer
,	O
""	pointer
,	O
dm_body_lines	function
}	O
,	O
{	O
"body_size"	pointer
,	O
""	pointer
,	O
dm_body_size	function
}	O
,	O
{	O
"body_text"	pointer
,	O
""	pointer
,	O
dm_body_text	function
}	O
,	O
{	O
"attr"	pointer
,	O
""	pointer
,	O
dm_attr	function
}	O
,	O
{	O
"uid"	pointer
,	O
""	pointer
,	O
dm_uid	function
}	O
,	O
{	O
"set_seen"	pointer
,	O
""	pointer
,	O
dm_set_seen	function
}	O
,	O
{	O
"set_answered"	pointer
,	O
""	pointer
,	O
dm_set_answered	function
}	O
,	O
{	O
"set_flagged"	pointer
,	O
""	pointer
,	O
dm_set_flagged	function
}	O
,	O
{	O
"set_deleted"	pointer
,	O
""	pointer
,	O
dm_set_deleted	function
}	O
,	O
{	O
"set_draft"	pointer
,	O
""	pointer
,	O
dm_set_draft	function
}	O
,	O
{	O
"set_recent"	pointer
,	O
""	pointer
,	O
dm_set_recent	function
}	O
,	O
{	O
"set_read"	pointer
,	O
""	pointer
,	O
dm_set_read	function
}	O
,	O
{	O
"unset_seen"	pointer
,	O
""	pointer
,	O
dm_unset_seen	function
}	O
,	O
{	O
"unset_answered"	pointer
,	O
""	pointer
,	O
dm_unset_answered	function
}	O
,	O
{	O
"unset_flagged"	pointer
,	O
""	pointer
,	O
dm_unset_flagged	function
}	O
,	O
{	O
"unset_deleted"	pointer
,	O
""	pointer
,	O
dm_unset_deleted	function
}	O
,	O
{	O
"unset_draft"	pointer
,	O
""	pointer
,	O
dm_unset_draft	function
}	O
,	O
{	O
"unset_recent"	pointer
,	O
""	pointer
,	O
dm_unset_recent	function
}	O
,	O
{	O
"unset_read"	pointer
,	O
""	pointer
,	O
dm_unset_read	function
}	O
,	O
{	O
"expunge"	pointer
,	O
""	pointer
,	O
dm_expunge	function
}	O
,	O
{	O
"sync"	pointer
,	O
""	pointer
,	O
dm_sync	function
}	O
,	O
{	O
"append"	pointer
,	O
"FILE"	pointer
,	O
dm_append	function
}	O
,	O
{	O
"uidvalidity"	pointer
,	O
""	pointer
,	O
dm_uidvalidity	function
}	O
,	O
{	O
"uidnext"	pointer
,	O
""	pointer
,	O
dm_uidnext	function
}	O
,	O
{	O
"count"	pointer
,	O
""	pointer
,	O
dm_count	function
}	O
,	O
{	O
"recent"	pointer
,	O
""	pointer
,	O
dm_recent	function
}	O
,	O
{	O
"unseen"	pointer
,	O
""	pointer
,	O
dm_unseen	function
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
int	O
main	function
(	O
int	O
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
struct	O
interp_env	struct
env	pointer
=	O
{	O
NULL	O
,	O
NULL	O
,	O
0	int
}	O
;	O
char	O
*	O
mailbox_name	pointer
=	O
getenv	function
(	O
"MAIL"	pointer
)	O
;	O
mu_tesh_init	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
mu_registrar_record	function
(	O
mu_dotmail_record	pointer
)	O
;	O
argc	long
--	O
;	O
argv	pointer
++	O
;	O
if	O
(	O
argc	long
&&	O
strcmp	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
"-d"	pointer
)	O
==	O
0	int
)	O
{	O
mu_debug_enable_category	function
(	O
"mailbox"	pointer
,	O
7	int
,	O
MU_DEBUG_LEVEL_UPTO	O
(	O
MU_DEBUG_PROT	int
)	O
)	O
;	O
argc	long
--	O
;	O
argv	pointer
++	O
;	O
}	O
MU_ASSERT	O
(	O
mu_mailbox_create_default	function
(	O
&	O
env	pointer
.	O
mbx	pointer
,	O
mailbox_name	pointer
)	O
)	O
;	O
MU_ASSERT	O
(	O
mu_mailbox_open	function
(	O
env	pointer
.	O
mbx	pointer
,	O
MU_STREAM_RDWR	O
)	O
)	O
;	O
mu_tesh_read_and_eval	function
(	O
argc	long
,	O
argv	pointer
,	O
commands	array
,	O
&	O
env	pointer
)	O
;	O
return	O
0	int
;	O
}	O
