static	O
int	O
capa_comp	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
void	O
*	O
value	pointer
)	O
{	O
const	O
char	O
*	O
capa	pointer
=	O
item	pointer
;	O
const	O
char	O
*	O
needle	pointer
=	O
value	pointer
;	O
for	O
(	O
;	O
*	O
needle	pointer
;	O
capa	pointer
++	O
,	O
needle	pointer
++	O
)	O
{	O
if	O
(	O
!	O
*	O
capa	pointer
)	O
return	O
1	int
;	O
if	O
(	O
mu_tolower	O
(	O
*	O
capa	pointer
)	O
!=	O
mu_tolower	O
(	O
*	O
needle	pointer
)	O
)	O
return	O
1	int
;	O
}	O
return	O
!	O
(	O
*	O
capa	pointer
==	O
0	int
||	O
mu_isspace	O
(	O
*	O
capa	pointer
)	O
)	O
;	O
}	O
int	O
mu_pop3_capa	function
(	O
mu_pop3_t	pointer
pop3	pointer
,	O
int	O
reread	int
,	O
mu_iterator_t	pointer
*	O
piter	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
pop3	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pop3	pointer
->	O
capa	pointer
)	O
{	O
if	O
(	O
!	O
reread	int
)	O
{	O
if	O
(	O
!	O
piter	pointer
)	O
return	O
0	int
;	O
return	O
mu_list_get_iterator	function
(	O
pop3	pointer
->	O
capa	pointer
,	O
piter	pointer
)	O
;	O
}	O
mu_list_destroy	function
(	O
&	O
pop3	pointer
->	O
capa	pointer
)	O
;	O
}	O
status	int
=	O
mu_list_create	function
(	O
&	O
pop3	pointer
->	O
capa	pointer
)	O
;	O
if	O
(	O
status	int
)	O
return	O
status	int
;	O
mu_list_set_comparator	function
(	O
pop3	pointer
->	O
capa	pointer
,	O
capa_comp	function
)	O
;	O
mu_list_set_destroy_item	function
(	O
pop3	pointer
->	O
capa	pointer
,	O
mu_list_free_item	function
)	O
;	O
switch	O
(	O
pop3	pointer
->	O
state	pointer
)	O
{	O
case	O
MU_POP3_NO_STATE	int
:	O
status	int
=	O
mu_pop3_writeline	function
(	O
pop3	pointer
,	O
"CAPA\r\n"	pointer
)	O
;	O
MU_POP3_CHECK_ERROR	O
(	O
pop3	pointer
,	O
status	int
)	O
;	O
MU_POP3_FCLR	O
(	O
pop3	pointer
,	O
MU_POP3_ACK	int
)	O
;	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_CAPA	int
;	O
case	O
MU_POP3_CAPA	int
:	O
status	int
=	O
mu_pop3_response	function
(	O
pop3	pointer
,	O
NULL	O
)	O
;	O
MU_POP3_CHECK_EAGAIN	O
(	O
pop3	pointer
,	O
status	int
)	O
;	O
MU_POP3_CHECK_OK	O
(	O
pop3	pointer
)	O
;	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_CAPA_RX	int
;	O
case	O
MU_POP3_CAPA_RX	int
:	O
status	int
=	O
mu_pop3_read_list	function
(	O
pop3	pointer
,	O
pop3	pointer
->	O
capa	pointer
)	O
;	O
MU_POP3_CHECK_ERROR	O
(	O
pop3	pointer
,	O
status	int
)	O
;	O
if	O
(	O
piter	pointer
)	O
status	int
=	O
mu_list_get_iterator	function
(	O
pop3	pointer
->	O
capa	pointer
,	O
piter	pointer
)	O
;	O
else	O
status	int
=	O
0	int
;	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_NO_STATE	int
;	O
break	O
;	O
case	O
MU_POP3_ERROR	int
:	O
status	int
=	O
ECANCELED	int
;	O
break	O
;	O
default	O
:	O
status	int
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	int
;	O
}	O
