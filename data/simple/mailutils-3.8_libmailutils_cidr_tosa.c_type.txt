int	O
mu_cidr_to_sockaddr	function
(	O
struct	O
mu_cidr	struct
*	O
cidr	pointer
,	O
struct	O
sockaddr	struct
*	O
*	O
psa	pointer
)	O
{	O
union	O
{	O
struct	O
sockaddr	struct
sa	pointer
;	O
struct	O
sockaddr_in	struct
s_in	struct
;	O
struct	O
sockaddr_in6	struct
s_in6	struct
;	O
}	O
addr	union
;	O
struct	O
sockaddr	struct
*	O
sa	pointer
;	O
int	O
socklen	int
;	O
memset	function
(	O
&	O
addr	union
,	O
0	int
,	O
sizeof	O
(	O
addr	union
)	O
)	O
;	O
addr	union
.	O
sa	pointer
.	O
sa_family	short
=	O
cidr	pointer
->	O
family	int
;	O
switch	O
(	O
cidr	pointer
->	O
family	int
)	O
{	O
case	O
AF_INET	O
:	O
socklen	int
=	O
sizeof	O
(	O
addr	union
.	O
s_in	struct
)	O
;	O
memcpy	function
(	O
&	O
addr	union
.	O
s_in	struct
.	O
sin_addr	struct
.	O
s_addr	int
,	O
cidr	pointer
->	O
address	array
,	O
4	int
)	O
;	O
break	O
;	O
case	O
AF_INET6	O
:	O
socklen	int
=	O
sizeof	O
(	O
addr	union
.	O
s_in6	struct
)	O
;	O
memcpy	function
(	O
&	O
addr	union
.	O
s_in6	struct
.	O
sin6_addr	struct
,	O
cidr	pointer
->	O
address	array
,	O
16	int
)	O
;	O
break	O
;	O
default	O
:	O
return	O
MU_ERR_FAMILY	O
;	O
}	O
sa	pointer
=	O
malloc	function
(	O
socklen	int
)	O
;	O
if	O
(	O
!	O
sa	pointer
)	O
return	O
ENOMEM	int
;	O
memcpy	function
(	O
sa	pointer
,	O
&	O
addr	union
,	O
socklen	int
)	O
;	O
*	O
psa	pointer
=	O
sa	pointer
;	O
return	O
0	int
;	O
}	O
