int	O
_API_flinedash	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
int	O
n	array
,	O
const	O
double	O
*	O
dashes	pointer
,	O
double	O
offset	array
)	O
{	O
double	O
*	O
dash_array	pointer
;	O
int	O
i	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"flinedash: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
if	O
(	O
n	array
<	O
0	int
||	O
(	O
n	array
>	O
0	int
&&	O
dashes	pointer
==	O
NULL	O
)	O
)	O
return	O
-	O
1	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	array
;	O
i	int
++	O
)	O
if	O
(	O
dashes	pointer
[	O
i	int
]	O
<	O
0.0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array_len	int
>	O
0	int
)	O
free	function
(	O
(	O
double	O
*	O
)	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array	pointer
)	O
;	O
if	O
(	O
n	array
>	O
0	int
)	O
dash_array	pointer
=	O
(	O
double	O
*	O
)	O
_pl_xmalloc	function
(	O
n	array
*	O
sizeof	O
(	O
double	O
)	O
)	O
;	O
else	O
dash_array	pointer
=	O
NULL	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array_len	int
=	O
n	array
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
n	array
;	O
i	int
++	O
)	O
dash_array	pointer
[	O
i	int
]	O
=	O
dashes	pointer
[	O
i	int
]	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array	pointer
=	O
dash_array	pointer
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_offset	double
=	O
offset	array
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array_in_effect	enum
=	O
true	int
;	O
return	O
0	int
;	O
}	O
