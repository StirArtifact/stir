int	O
copyfile	function
(	O
Stream_t	struct
*	O
Source	pointer
,	O
Stream_t	struct
*	O
Target	pointer
)	O
{	O
char	O
buffer	array
[	O
8	int
*	O
16384	int
]	O
;	O
mt_off_t	long
pos	array
;	O
int	O
ret	int
;	O
ssize_t	long
retw	long
;	O
mt_size_t	long
mt_len	long
;	O
if	O
(	O
!	O
Source	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Couldn't open source file\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
Target	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Couldn't open target file\n"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
pos	array
=	O
0	int
;	O
GET_DATA	O
(	O
Source	pointer
,	O
0	int
,	O
&	O
mt_len	long
,	O
0	int
,	O
0	int
)	O
;	O
while	O
(	O
1	int
)	O
{	O
ret	int
=	O
READS	O
(	O
Source	pointer
,	O
buffer	array
,	O
(	O
mt_off_t	long
)	O
pos	array
,	O
8	int
*	O
16384	int
)	O
;	O
if	O
(	O
ret	int
<	O
0	int
)	O
{	O
perror	function
(	O
"file read"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
ret	int
)	O
break	O
;	O
if	O
(	O
got_signal	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
ret	int
==	O
0	int
)	O
break	O
;	O
if	O
(	O
(	O
retw	long
=	O
force_write	function
(	O
Target	pointer
,	O
buffer	array
,	O
(	O
mt_off_t	long
)	O
pos	array
,	O
(	O
size_t	long
)	O
ret	int
)	O
)	O
!=	O
ret	int
)	O
{	O
if	O
(	O
retw	long
<	O
0	int
)	O
perror	function
(	O
"write in copy"	pointer
)	O
;	O
else	O
fprintf	function
(	O
stderr	pointer
,	O
"Short write %lu instead of %d\n"	pointer
,	O
(	O
unsigned	O
long	O
)	O
retw	long
,	O
ret	int
)	O
;	O
if	O
(	O
errno	O
==	O
ENOSPC	int
)	O
got_signal	int
=	O
1	int
;	O
return	O
ret	int
;	O
}	O
pos	array
+=	O
ret	int
;	O
}	O
return	O
0	int
;	O
}	O
