struct	O
spec	struct
{	O
unsigned	O
int	O
directives	int
;	O
unsigned	O
int	O
numbered_arg_count	int
;	O
}	O
;	O
static	O
void	O
*	O
format_parse	function
(	O
const	O
char	O
*	O
format	pointer
,	O
bool	bool
translated	bool
,	O
char	O
*	O
fdi	pointer
,	O
char	O
*	O
*	O
invalid_reason	pointer
)	O
{	O
const	O
char	O
*	O
const	O
format_start	pointer
=	O
format	pointer
;	O
struct	O
spec	struct
spec	struct
;	O
struct	O
spec	struct
*	O
result	pointer
;	O
spec	struct
.	O
directives	int
=	O
0	int
;	O
spec	struct
.	O
numbered_arg_count	int
=	O
0	int
;	O
for	O
(	O
;	O
*	O
format	pointer
!=	O
'\0'	O
;	O
)	O
{	O
char	O
c	int
=	O
*	O
format	pointer
++	O
;	O
if	O
(	O
c	int
==	O
'{'	O
)	O
{	O
FDI_SET	O
(	O
format	pointer
-	O
1	int
,	O
FMTDIR_START	int
)	O
;	O
if	O
(	O
*	O
format	pointer
==	O
'{'	O
)	O
format	pointer
++	O
;	O
else	O
{	O
unsigned	O
int	O
number	int
;	O
spec	struct
.	O
directives	int
++	O
;	O
if	O
(	O
!	O
c_isdigit	function
(	O
*	O
format	pointer
)	O
)	O
{	O
*	O
invalid_reason	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"In the directive number %u, '{' is not followed by an argument number."	pointer
)	O
,	O
spec	struct
.	O
directives	int
)	O
;	O
FDI_SET	O
(	O
*	O
format	pointer
==	O
'\0'	O
?	O
format	pointer
-	O
1	int
:	O
format	pointer
,	O
FMTDIR_ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
number	int
=	O
0	int
;	O
do	O
{	O
number	int
=	O
10	int
*	O
number	int
+	O
(	O
*	O
format	pointer
-	O
'0'	O
)	O
;	O
format	pointer
++	O
;	O
}	O
while	O
(	O
c_isdigit	function
(	O
*	O
format	pointer
)	O
)	O
;	O
if	O
(	O
*	O
format	pointer
==	O
','	O
)	O
{	O
format	pointer
++	O
;	O
if	O
(	O
*	O
format	pointer
==	O
'-'	O
)	O
format	pointer
++	O
;	O
if	O
(	O
!	O
c_isdigit	function
(	O
*	O
format	pointer
)	O
)	O
{	O
*	O
invalid_reason	pointer
=	O
xasprintf	function
(	O
_	O
(	O
"In the directive number %u, ',' is not followed by a number."	pointer
)	O
,	O
spec	struct
.	O
directives	int
)	O
;	O
FDI_SET	O
(	O
*	O
format	pointer
==	O
'\0'	O
?	O
format	pointer
-	O
1	int
:	O
format	pointer
,	O
FMTDIR_ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
do	O
format	pointer
++	O
;	O
while	O
(	O
c_isdigit	function
(	O
*	O
format	pointer
)	O
)	O
;	O
}	O
if	O
(	O
*	O
format	pointer
==	O
':'	O
)	O
{	O
do	O
format	pointer
++	O
;	O
while	O
(	O
*	O
format	pointer
!=	O
'\0'	O
&&	O
*	O
format	pointer
!=	O
'}'	O
)	O
;	O
}	O
if	O
(	O
*	O
format	pointer
==	O
'\0'	O
)	O
{	O
*	O
invalid_reason	pointer
=	O
xstrdup	function
(	O
_	O
(	O
"The string ends in the middle of a directive: found '{' without matching '}'."	pointer
)	O
)	O
;	O
FDI_SET	O
(	O
format	pointer
-	O
1	int
,	O
FMTDIR_ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
*	O
format	pointer
!=	O
'}'	O
)	O
{	O
*	O
invalid_reason	pointer
=	O
(	O
c_isprint	function
(	O
*	O
format	pointer
)	O
?	O
xasprintf	function
(	O
_	O
(	O
"The directive number %u ends with an invalid character '%c' instead of '}'."	pointer
)	O
,	O
spec	struct
.	O
directives	int
,	O
*	O
format	pointer
)	O
:	O
xasprintf	function
(	O
_	O
(	O
"The directive number %u ends with an invalid character instead of '}'."	pointer
)	O
,	O
spec	struct
.	O
directives	int
)	O
)	O
;	O
FDI_SET	O
(	O
format	pointer
,	O
FMTDIR_ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
format	pointer
++	O
;	O
if	O
(	O
spec	struct
.	O
numbered_arg_count	int
<=	O
number	int
)	O
spec	struct
.	O
numbered_arg_count	int
=	O
number	int
+	O
1	int
;	O
}	O
FDI_SET	O
(	O
format	pointer
-	O
1	int
,	O
FMTDIR_END	int
)	O
;	O
}	O
else	O
if	O
(	O
c	int
==	O
'}'	O
)	O
{	O
FDI_SET	O
(	O
format	pointer
-	O
1	int
,	O
FMTDIR_START	int
)	O
;	O
if	O
(	O
*	O
format	pointer
==	O
'}'	O
)	O
format	pointer
++	O
;	O
else	O
{	O
*	O
invalid_reason	pointer
=	O
(	O
spec	struct
.	O
directives	int
==	O
0	int
?	O
xstrdup	function
(	O
_	O
(	O
"The string starts in the middle of a directive: found '}' without matching '{'."	pointer
)	O
)	O
:	O
xasprintf	function
(	O
_	O
(	O
"The string contains a lone '}' after directive number %u."	pointer
)	O
,	O
spec	struct
.	O
directives	int
)	O
)	O
;	O
FDI_SET	O
(	O
*	O
format	pointer
==	O
'\0'	O
?	O
format	pointer
-	O
1	int
:	O
format	pointer
,	O
FMTDIR_ERROR	int
)	O
;	O
return	O
NULL	O
;	O
}	O
FDI_SET	O
(	O
format	pointer
-	O
1	int
,	O
FMTDIR_END	int
)	O
;	O
}	O
}	O
result	pointer
=	O
XMALLOC	O
(	O
struct	O
spec	struct
)	O
;	O
*	O
result	pointer
=	O
spec	struct
;	O
return	O
result	pointer
;	O
}	O
static	O
void	O
format_free	function
(	O
void	O
*	O
descr	pointer
)	O
{	O
struct	O
spec	struct
*	O
spec	struct
=	O
(	O
struct	O
spec	struct
*	O
)	O
descr	pointer
;	O
free	function
(	O
spec	struct
)	O
;	O
}	O
static	O
int	O
format_get_number_of_directives	function
(	O
void	O
*	O
descr	pointer
)	O
{	O
struct	O
spec	struct
*	O
spec	struct
=	O
(	O
struct	O
spec	struct
*	O
)	O
descr	pointer
;	O
return	O
spec	struct
->	O
directives	int
;	O
}	O
static	O
bool	bool
format_check	function
(	O
void	O
*	O
msgid_descr	pointer
,	O
void	O
*	O
msgstr_descr	pointer
,	O
bool	bool
equality	bool
,	O
formatstring_error_logger_t	pointer
error_logger	pointer
,	O
const	O
char	O
*	O
pretty_msgid	pointer
,	O
const	O
char	O
*	O
pretty_msgstr	pointer
)	O
{	O
struct	O
spec	struct
*	O
spec1	pointer
=	O
(	O
struct	O
spec	struct
*	O
)	O
msgid_descr	pointer
;	O
struct	O
spec	struct
*	O
spec2	pointer
=	O
(	O
struct	O
spec	struct
*	O
)	O
msgstr_descr	pointer
;	O
bool	bool
err	bool
=	O
false	int
;	O
if	O
(	O
equality	bool
?	O
spec1	pointer
->	O
numbered_arg_count	int
!=	O
spec2	pointer
->	O
numbered_arg_count	int
:	O
spec1	pointer
->	O
numbered_arg_count	int
<	O
spec2	pointer
->	O
numbered_arg_count	int
)	O
{	O
if	O
(	O
error_logger	pointer
)	O
error_logger	pointer
(	O
_	O
(	O
"number of format specifications in '%s' and '%s' does not match"	pointer
)	O
,	O
pretty_msgid	pointer
,	O
pretty_msgstr	pointer
)	O
;	O
err	bool
=	O
true	int
;	O
}	O
return	O
err	bool
;	O
}	O
struct	O
formatstring_parser	struct
formatstring_csharp	struct
=	O
{	O
format_parse	function
,	O
format_free	function
,	O
format_get_number_of_directives	function
,	O
NULL	O
,	O
format_check	function
}	O
;	O
