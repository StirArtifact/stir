int	O
mu_envelope_create	function
(	O
mu_envelope_t	pointer
*	O
penvelope	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
mu_envelope_t	pointer
envelope	pointer
;	O
if	O
(	O
penvelope	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
envelope	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
envelope	pointer
)	O
)	O
;	O
if	O
(	O
envelope	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
envelope	pointer
->	O
owner	pointer
=	O
owner	pointer
;	O
*	O
penvelope	pointer
=	O
envelope	pointer
;	O
return	O
0	int
;	O
}	O
void	O
mu_envelope_destroy	function
(	O
mu_envelope_t	pointer
*	O
penvelope	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
penvelope	pointer
&&	O
*	O
penvelope	pointer
)	O
{	O
mu_envelope_t	pointer
envelope	pointer
=	O
*	O
penvelope	pointer
;	O
if	O
(	O
envelope	pointer
->	O
owner	pointer
==	O
owner	pointer
)	O
{	O
if	O
(	O
envelope	pointer
->	O
_destroy	pointer
)	O
envelope	pointer
->	O
_destroy	pointer
(	O
envelope	pointer
)	O
;	O
free	function
(	O
envelope	pointer
->	O
date	pointer
)	O
;	O
free	function
(	O
envelope	pointer
->	O
sender	pointer
)	O
;	O
free	function
(	O
envelope	pointer
)	O
;	O
}	O
*	O
penvelope	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
*	O
mu_envelope_get_owner	function
(	O
mu_envelope_t	pointer
envelope	pointer
)	O
{	O
return	O
(	O
envelope	pointer
)	O
?	O
envelope	pointer
->	O
owner	pointer
:	O
NULL	O
;	O
}	O
int	O
mu_envelope_set_sender	function
(	O
mu_envelope_t	pointer
envelope	pointer
,	O
int	O
(	O
*	O
_sender	pointer
)	O
(	O
mu_envelope_t	pointer
,	O
char	O
*	O
,	O
size_t	long
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
envelope	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
envelope	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
envelope	pointer
->	O
_get_sender	pointer
=	O
_sender	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_envelope_set_date	function
(	O
mu_envelope_t	pointer
envelope	pointer
,	O
int	O
(	O
*	O
_date	pointer
)	O
(	O
mu_envelope_t	pointer
,	O
char	O
*	O
,	O
size_t	long
,	O
size_t	long
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
envelope	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
envelope	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
envelope	pointer
->	O
_get_date	pointer
=	O
_date	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_envelope_set_destroy	function
(	O
mu_envelope_t	pointer
envelope	pointer
,	O
int	O
(	O
*	O
_destroy	pointer
)	O
(	O
mu_envelope_t	pointer
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
envelope	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
envelope	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
envelope	pointer
->	O
_destroy	pointer
=	O
_destroy	pointer
;	O
return	O
0	int
;	O
}	O
DECL_ACCESSORS	O
(	O
sender	pointer
)	O
DECL_ACCESSORS	O
(	O
date	pointer
)	O
