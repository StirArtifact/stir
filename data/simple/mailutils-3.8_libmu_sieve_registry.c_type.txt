int	O
mu_sieve_registry_require	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
enum	O
mu_sieve_record	enum
type	int
)	O
{	O
mu_sieve_registry_t	struct
*	O
reg	long
;	O
reg	long
=	O
mu_sieve_registry_lookup	function
(	O
mach	pointer
,	O
name	pointer
,	O
type	int
)	O
;	O
if	O
(	O
!	O
reg	long
)	O
{	O
void	O
*	O
handle	pointer
=	O
mu_sieve_load_ext	function
(	O
mach	pointer
,	O
name	pointer
)	O
;	O
if	O
(	O
!	O
handle	pointer
)	O
return	O
1	int
;	O
reg	long
=	O
mu_sieve_registry_lookup	function
(	O
mach	pointer
,	O
name	pointer
,	O
type	int
)	O
;	O
if	O
(	O
!	O
reg	long
)	O
return	O
1	int
;	O
reg	long
->	O
handle	pointer
=	O
handle	pointer
;	O
}	O
reg	long
->	O
required	int
=	O
1	int
;	O
return	O
0	int
;	O
}	O
static	O
void	O
regunload	function
(	O
void	O
*	O
data	pointer
)	O
{	O
mu_sieve_registry_t	struct
*	O
reg	long
=	O
data	pointer
;	O
mu_sieve_unload_ext	function
(	O
reg	long
->	O
handle	pointer
)	O
;	O
}	O
static	O
int	O
regcmp	function
(	O
void	O
const	O
*	O
a	pointer
,	O
void	O
const	O
*	O
b	pointer
)	O
{	O
mu_sieve_registry_t	struct
const	O
*	O
rega	pointer
=	O
a	pointer
;	O
mu_sieve_registry_t	struct
const	O
*	O
regb	pointer
=	O
b	pointer
;	O
if	O
(	O
rega	pointer
->	O
type	int
!=	O
regb	pointer
->	O
type	int
)	O
return	O
rega	pointer
->	O
type	int
-	O
regb	pointer
->	O
type	int
;	O
return	O
strcmp	function
(	O
rega	pointer
->	O
name	pointer
,	O
regb	pointer
->	O
name	pointer
)	O
;	O
}	O
mu_sieve_registry_t	struct
*	O
mu_sieve_registry_add	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
)	O
{	O
mu_sieve_registry_t	struct
*	O
reg	long
;	O
int	O
rc	int
;	O
if	O
(	O
!	O
mach	pointer
->	O
registry	pointer
)	O
{	O
rc	int
=	O
mu_list_create	function
(	O
&	O
mach	pointer
->	O
registry	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_sieve_error	function
(	O
mach	pointer
,	O
"mu_list_create: %s"	pointer
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
mu_sieve_abort	function
(	O
mach	pointer
)	O
;	O
}	O
mu_list_set_destroy_item	function
(	O
mach	pointer
->	O
registry	pointer
,	O
regunload	function
)	O
;	O
mu_list_set_comparator	function
(	O
mach	pointer
->	O
registry	pointer
,	O
regcmp	function
)	O
;	O
}	O
reg	long
=	O
mu_sieve_malloc	function
(	O
mach	pointer
,	O
sizeof	O
(	O
*	O
reg	long
)	O
)	O
;	O
reg	long
->	O
name	pointer
=	O
name	pointer
;	O
reg	long
->	O
handle	pointer
=	O
NULL	O
;	O
reg	long
->	O
required	int
=	O
0	int
;	O
memset	function
(	O
&	O
reg	long
->	O
v	array
,	O
0	int
,	O
sizeof	O
reg	long
->	O
v	array
)	O
;	O
rc	int
=	O
mu_list_append	function
(	O
mach	pointer
->	O
registry	pointer
,	O
reg	long
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
mu_sieve_error	function
(	O
mach	pointer
,	O
"mu_list_append: %s"	pointer
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
mu_sieve_abort	function
(	O
mach	pointer
)	O
;	O
}	O
return	O
reg	long
;	O
}	O
mu_sieve_registry_t	struct
*	O
mu_sieve_registry_lookup	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
enum	O
mu_sieve_record	enum
type	int
)	O
{	O
mu_sieve_registry_t	struct
key	pointer
,	O
*	O
reg	long
;	O
int	O
rc	int
;	O
key	pointer
.	O
name	pointer
=	O
name	pointer
;	O
key	pointer
.	O
type	int
=	O
type	int
;	O
rc	int
=	O
mu_list_locate	function
(	O
mach	pointer
->	O
registry	pointer
,	O
&	O
key	pointer
,	O
(	O
void	O
*	O
*	O
)	O
&	O
reg	long
)	O
;	O
if	O
(	O
rc	int
==	O
MU_ERR_NOENT	O
)	O
return	O
NULL	O
;	O
else	O
if	O
(	O
rc	int
)	O
{	O
mu_sieve_error	function
(	O
mach	pointer
,	O
_	O
(	O
"registry lookup failed: %s"	pointer
)	O
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
mu_sieve_abort	function
(	O
mach	pointer
)	O
;	O
}	O
return	O
reg	long
;	O
}	O
void	O
mu_sieve_register_test_ext	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
mu_sieve_handler_t	pointer
handler	array
,	O
mu_sieve_data_type	enum
*	O
req_args	pointer
,	O
mu_sieve_data_type	enum
*	O
opt_args	pointer
,	O
mu_sieve_tag_group_t	struct
*	O
tags	pointer
,	O
int	O
required	int
)	O
{	O
mu_sieve_registry_t	struct
*	O
reg	long
=	O
mu_sieve_registry_add	function
(	O
mach	pointer
,	O
name	pointer
)	O
;	O
reg	long
->	O
type	int
=	O
mu_sieve_record_test	int
;	O
reg	long
->	O
required	int
=	O
required	int
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
handler	array
=	O
handler	array
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
req_args	pointer
=	O
req_args	pointer
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
opt_args	pointer
=	O
opt_args	pointer
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
tags	pointer
=	O
tags	pointer
;	O
}	O
void	O
mu_sieve_register_test	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
mu_sieve_handler_t	pointer
handler	array
,	O
mu_sieve_data_type	enum
*	O
arg_types	pointer
,	O
mu_sieve_tag_group_t	struct
*	O
tags	pointer
,	O
int	O
required	int
)	O
{	O
return	O
mu_sieve_register_test_ext	function
(	O
mach	pointer
,	O
name	pointer
,	O
handler	array
,	O
arg_types	pointer
,	O
NULL	O
,	O
tags	pointer
,	O
required	int
)	O
;	O
}	O
void	O
mu_sieve_register_action_ext	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
mu_sieve_handler_t	pointer
handler	array
,	O
mu_sieve_data_type	enum
*	O
req_args	pointer
,	O
mu_sieve_data_type	enum
*	O
opt_args	pointer
,	O
mu_sieve_tag_group_t	struct
*	O
tags	pointer
,	O
int	O
required	int
)	O
{	O
mu_sieve_registry_t	struct
*	O
reg	long
=	O
mu_sieve_registry_add	function
(	O
mach	pointer
,	O
name	pointer
)	O
;	O
reg	long
->	O
type	int
=	O
mu_sieve_record_action	int
;	O
reg	long
->	O
required	int
=	O
required	int
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
handler	array
=	O
handler	array
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
req_args	pointer
=	O
req_args	pointer
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
opt_args	pointer
=	O
opt_args	pointer
;	O
reg	long
->	O
v	array
.	O
command	pointer
.	O
tags	pointer
=	O
tags	pointer
;	O
}	O
void	O
mu_sieve_register_action	function
(	O
mu_sieve_machine_t	pointer
mach	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
mu_sieve_handler_t	pointer
handler	array
,	O
mu_sieve_data_type	enum
*	O
arg_types	pointer
,	O
mu_sieve_tag_group_t	struct
*	O
tags	pointer
,	O
int	O
required	int
)	O
{	O
return	O
mu_sieve_register_action_ext	function
(	O
mach	pointer
,	O
name	pointer
,	O
handler	array
,	O
arg_types	pointer
,	O
NULL	O
,	O
tags	pointer
,	O
required	int
)	O
;	O
}	O
