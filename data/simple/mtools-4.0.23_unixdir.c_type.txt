typedef	O
struct	O
Dir_t	struct
{	O
Class_t	struct
*	O
Class	pointer
;	O
int	O
refs	int
;	O
Stream_t	struct
*	O
Next	pointer
;	O
Stream_t	struct
*	O
Buffer	pointer
;	O
struct	O
MT_STAT	O
statbuf	pointer
;	O
char	O
*	O
pathname	pointer
;	O
DIR	struct
*	O
dir	pointer
;	O
int	O
fd	int
;	O
}	O
Dir_t	struct
;	O
static	O
int	O
get_dir_data	function
(	O
Stream_t	struct
*	O
Stream	pointer
,	O
time_t	long
*	O
date	array
,	O
mt_size_t	long
*	O
size	array
,	O
int	O
*	O
type	enum
,	O
int	O
*	O
address	long
)	O
{	O
DeclareThis	O
(	O
Dir_t	struct
)	O
;	O
if	O
(	O
date	array
)	O
*	O
date	array
=	O
This	pointer
->	O
statbuf	pointer
.	O
st_mtime	O
;	O
if	O
(	O
size	array
)	O
*	O
size	array
=	O
(	O
mt_size_t	long
)	O
This	pointer
->	O
statbuf	pointer
.	O
st_size	long
;	O
if	O
(	O
type	enum
)	O
*	O
type	enum
=	O
1	int
;	O
if	O
(	O
address	long
)	O
*	O
address	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
dir_free	function
(	O
Stream_t	struct
*	O
Stream	pointer
)	O
{	O
DeclareThis	O
(	O
Dir_t	struct
)	O
;	O
Free	O
(	O
This	pointer
->	O
pathname	pointer
)	O
;	O
closedir	function
(	O
This	pointer
->	O
dir	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
Class_t	struct
DirClass	struct
=	O
{	O
0	int
,	O
0	int
,	O
0	int
,	O
dir_free	function
,	O
0	int
,	O
get_dir_data	function
,	O
0	int
,	O
0	int
,	O
0	int
}	O
;	O
int	O
unix_dir_loop	function
(	O
Stream_t	struct
*	O
Stream	pointer
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
;	O
int	O
unix_loop	function
(	O
Stream_t	struct
*	O
Stream	pointer
,	O
MainParam_t	struct
*	O
mp	pointer
,	O
char	O
*	O
arg	pointer
,	O
int	O
follow_dir_link	int
)	O
;	O
int	O
unix_dir_loop	function
(	O
Stream_t	struct
*	O
Stream	pointer
,	O
MainParam_t	struct
*	O
mp	pointer
)	O
{	O
DeclareThis	O
(	O
Dir_t	struct
)	O
;	O
struct	O
dirent	struct
*	O
entry	int
;	O
char	O
*	O
newName	pointer
;	O
int	O
ret	int
=	O
0	int
;	O
int	O
fd	int
;	O
fd	int
=	O
open	function
(	O
"."	pointer
,	O
O_RDONLY	int
)	O
;	O
if	O
(	O
chdir	function
(	O
This	pointer
->	O
pathname	pointer
)	O
<	O
0	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Could not chdir into %s (%s)\n"	pointer
,	O
This	pointer
->	O
pathname	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
while	O
(	O
(	O
entry	int
=	O
readdir	function
(	O
This	pointer
->	O
dir	pointer
)	O
)	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
got_signal	int
)	O
break	O
;	O
if	O
(	O
isSpecial	function
(	O
entry	int
->	O
d_name	array
)	O
)	O
continue	O
;	O
newName	pointer
=	O
entry	int
->	O
d_name	array
;	O
ret	int
|=	O
unix_loop	function
(	O
Stream	pointer
,	O
mp	pointer
,	O
newName	pointer
,	O
0	int
)	O
;	O
}	O
if	O
(	O
fchdir	function
(	O
fd	int
)	O
<	O
0	int
)	O
perror	function
(	O
"Could not chdir back to .."	pointer
)	O
;	O
close	pointer
(	O
fd	int
)	O
;	O
return	O
ret	int
;	O
}	O
Stream_t	struct
*	O
OpenDir	function
(	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
Dir_t	struct
*	O
This	pointer
;	O
This	pointer
=	O
New	O
(	O
Dir_t	struct
)	O
;	O
This	pointer
->	O
Class	pointer
=	O
&	O
DirClass	struct
;	O
This	pointer
->	O
Next	pointer
=	O
0	int
;	O
This	pointer
->	O
refs	int
=	O
1	int
;	O
This	pointer
->	O
Buffer	pointer
=	O
0	int
;	O
This	pointer
->	O
pathname	pointer
=	O
malloc	function
(	O
strlen	function
(	O
filename	pointer
)	O
+	O
1	int
)	O
;	O
if	O
(	O
This	pointer
->	O
pathname	pointer
==	O
NULL	O
)	O
{	O
Free	O
(	O
This	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
strcpy	function
(	O
This	pointer
->	O
pathname	pointer
,	O
filename	pointer
)	O
;	O
if	O
(	O
MT_STAT	O
(	O
filename	pointer
,	O
&	O
This	pointer
->	O
statbuf	pointer
)	O
<	O
0	int
)	O
{	O
Free	O
(	O
This	pointer
->	O
pathname	pointer
)	O
;	O
Free	O
(	O
This	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
This	pointer
->	O
dir	pointer
=	O
opendir	function
(	O
filename	pointer
)	O
;	O
if	O
(	O
!	O
This	pointer
->	O
dir	pointer
)	O
{	O
Free	O
(	O
This	pointer
->	O
pathname	pointer
)	O
;	O
Free	O
(	O
This	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
(	O
Stream_t	struct
*	O
)	O
This	pointer
;	O
}	O
