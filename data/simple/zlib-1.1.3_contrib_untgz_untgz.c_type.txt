struct	O
tar_header	struct
{	O
char	O
name	array
[	O
100	int
]	O
;	O
char	O
mode	pointer
[	O
8	int
]	O
;	O
char	O
uid	array
[	O
8	int
]	O
;	O
char	O
gid	array
[	O
8	int
]	O
;	O
char	O
size	int
[	O
12	int
]	O
;	O
char	O
mtime	array
[	O
12	int
]	O
;	O
char	O
chksum	array
[	O
8	int
]	O
;	O
char	O
typeflag	char
;	O
char	O
linkname	array
[	O
100	int
]	O
;	O
char	O
magic	array
[	O
6	int
]	O
;	O
char	O
version	pointer
[	O
2	int
]	O
;	O
char	O
uname	array
[	O
32	int
]	O
;	O
char	O
gname	array
[	O
32	int
]	O
;	O
char	O
devmajor	array
[	O
8	int
]	O
;	O
char	O
devminor	array
[	O
8	int
]	O
;	O
char	O
prefix	array
[	O
155	int
]	O
;	O
}	O
;	O
union	O
tar_buffer	union
{	O
char	O
buffer	array
[	O
BLOCKSIZE	int
]	O
;	O
struct	O
tar_header	struct
header	struct
;	O
}	O
;	O
enum	O
{	O
TGZ_EXTRACT	int
=	O
0	int
,	O
TGZ_LIST	int
}	O
;	O
static	O
char	O
*	O
TGZfname	function
OF	O
(	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
void	O
TGZnotfound	function
OF	O
(	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
int	O
getoct	function
OF	O
(	O
(	O
char	O
*	O
,	O
int	O
)	O
)	O
;	O
char	O
*	O
strtime	function
OF	O
(	O
(	O
time_t	long
*	O
)	O
)	O
;	O
int	O
ExprMatch	function
OF	O
(	O
(	O
char	O
*	O
,	O
char	O
*	O
)	O
)	O
;	O
int	O
makedir	function
OF	O
(	O
(	O
char	O
*	O
)	O
)	O
;	O
int	O
matchname	function
OF	O
(	O
(	O
int	O
,	O
int	O
,	O
char	O
*	O
*	O
,	O
char	O
*	O
)	O
)	O
;	O
void	O
error	function
OF	O
(	O
(	O
const	O
char	O
*	O
)	O
)	O
;	O
int	O
tar	function
OF	O
(	O
(	O
gzFile	pointer
,	O
int	O
,	O
int	O
,	O
int	O
,	O
char	O
*	O
*	O
)	O
)	O
;	O
void	O
help	function
OF	O
(	O
(	O
int	O
)	O
)	O
;	O
int	O
main	function
OF	O
(	O
(	O
int	O
,	O
char	O
*	O
*	O
)	O
)	O
;	O
char	O
*	O
prog	pointer
;	O
static	O
char	O
*	O
TGZprefix	array
[	O
]	O
=	O
{	O
"\0"	pointer
,	O
".tgz"	pointer
,	O
".tar.gz"	pointer
,	O
".tar"	pointer
,	O
NULL	O
}	O
;	O
static	O
char	O
*	O
TGZfname	function
OF	O
(	O
(	O
const	O
char	O
*	O
fname	pointer
)	O
)	O
{	O
static	O
char	O
buffer	array
[	O
1024	int
]	O
;	O
int	O
origlen	int
,	O
i	int
;	O
strcpy	function
(	O
buffer	array
,	O
fname	pointer
)	O
;	O
origlen	int
=	O
strlen	function
(	O
buffer	array
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
TGZprefix	array
[	O
i	int
]	O
;	O
i	int
++	O
)	O
{	O
strcpy	function
(	O
buffer	array
+	O
origlen	int
,	O
TGZprefix	array
[	O
i	int
]	O
)	O
;	O
if	O
(	O
access	function
(	O
buffer	array
,	O
F_OK	int
)	O
==	O
0	int
)	O
return	O
buffer	array
;	O
}	O
return	O
NULL	O
;	O
}	O
void	O
TGZnotfound	function
OF	O
(	O
(	O
const	O
char	O
*	O
fname	pointer
)	O
)	O
{	O
int	O
i	int
;	O
fprintf	function
(	O
stderr	pointer
,	O
"%s : couldn't find "	pointer
,	O
prog	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
TGZprefix	array
[	O
i	int
]	O
;	O
i	int
++	O
)	O
fprintf	function
(	O
stderr	pointer
,	O
(	O
TGZprefix	array
[	O
i	int
+	O
1	int
]	O
)	O
?	O
"%s%s, "	pointer
:	O
"or %s%s\n"	pointer
,	O
fname	pointer
,	O
TGZprefix	array
[	O
i	int
]	O
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
int	O
getoct	function
(	O
char	O
*	O
p	pointer
,	O
int	O
width	int
)	O
{	O
int	O
result	int
=	O
0	int
;	O
char	O
c	int
;	O
while	O
(	O
width	int
--	O
)	O
{	O
c	int
=	O
*	O
p	pointer
++	O
;	O
if	O
(	O
c	int
==	O
' '	O
)	O
continue	O
;	O
if	O
(	O
c	int
==	O
0	int
)	O
break	O
;	O
result	int
=	O
result	int
*	O
8	int
+	O
(	O
c	int
-	O
'0'	O
)	O
;	O
}	O
return	O
result	int
;	O
}	O
char	O
*	O
strtime	function
(	O
time_t	long
*	O
t	pointer
)	O
{	O
struct	O
tm	struct
*	O
local	pointer
;	O
static	O
char	O
result	int
[	O
32	int
]	O
;	O
local	pointer
=	O
localtime	function
(	O
t	pointer
)	O
;	O
sprintf	function
(	O
result	int
,	O
"%2d/%02d/%4d %02d:%02d:%02d"	pointer
,	O
local	pointer
->	O
tm_mday	int
,	O
local	pointer
->	O
tm_mon	int
+	O
1	int
,	O
local	pointer
->	O
tm_year	int
+	O
1900	int
,	O
local	pointer
->	O
tm_hour	int
,	O
local	pointer
->	O
tm_min	int
,	O
local	pointer
->	O
tm_sec	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
ExprMatch	function
(	O
char	O
*	O
string	pointer
,	O
char	O
*	O
expr	pointer
)	O
{	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
ISSPECIAL	O
(	O
*	O
expr	pointer
)	O
)	O
{	O
if	O
(	O
*	O
expr	pointer
==	O
'/'	O
)	O
{	O
if	O
(	O
*	O
string	pointer
!=	O
'\\'	O
&&	O
*	O
string	pointer
!=	O
'/'	O
)	O
return	O
0	int
;	O
string	pointer
++	O
;	O
expr	pointer
++	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'*'	O
)	O
{	O
if	O
(	O
*	O
expr	pointer
++	O
==	O
0	int
)	O
return	O
1	int
;	O
while	O
(	O
*	O
++	O
string	pointer
!=	O
*	O
expr	pointer
)	O
if	O
(	O
*	O
string	pointer
==	O
0	int
)	O
return	O
0	int
;	O
}	O
}	O
else	O
{	O
if	O
(	O
*	O
string	pointer
!=	O
*	O
expr	pointer
)	O
return	O
0	int
;	O
if	O
(	O
*	O
expr	pointer
++	O
==	O
0	int
)	O
return	O
1	int
;	O
string	pointer
++	O
;	O
}	O
}	O
}	O
int	O
makedir	function
(	O
char	O
*	O
newdir	pointer
)	O
{	O
char	O
*	O
buffer	array
=	O
strdup	function
(	O
newdir	pointer
)	O
;	O
char	O
*	O
p	pointer
;	O
int	O
len	int
=	O
strlen	function
(	O
buffer	array
)	O
;	O
if	O
(	O
len	int
<=	O
0	int
)	O
{	O
free	function
(	O
buffer	array
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
buffer	array
[	O
len	int
-	O
1	int
]	O
==	O
'/'	O
)	O
{	O
buffer	array
[	O
len	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
if	O
(	O
mkdir	function
(	O
buffer	array
,	O
0775	int
)	O
==	O
0	int
)	O
{	O
free	function
(	O
buffer	array
)	O
;	O
return	O
1	int
;	O
}	O
p	pointer
=	O
buffer	array
+	O
1	int
;	O
while	O
(	O
1	int
)	O
{	O
char	O
hold	char
;	O
while	O
(	O
*	O
p	pointer
&&	O
*	O
p	pointer
!=	O
'\\'	O
&&	O
*	O
p	pointer
!=	O
'/'	O
)	O
p	pointer
++	O
;	O
hold	char
=	O
*	O
p	pointer
;	O
*	O
p	pointer
=	O
0	int
;	O
if	O
(	O
(	O
mkdir	function
(	O
buffer	array
,	O
0775	int
)	O
==	O
-	O
1	int
)	O
&&	O
(	O
errno	O
==	O
ENOENT	int
)	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: couldn't create directory %s\n"	pointer
,	O
prog	pointer
,	O
buffer	array
)	O
;	O
free	function
(	O
buffer	array
)	O
;	O
return	O
0	int
;	O
}	O
if	O
(	O
hold	char
==	O
0	int
)	O
break	O
;	O
*	O
p	pointer
++	O
=	O
hold	char
;	O
}	O
free	function
(	O
buffer	array
)	O
;	O
return	O
1	int
;	O
}	O
int	O
matchname	function
(	O
int	O
arg	int
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
char	O
*	O
fname	pointer
)	O
{	O
if	O
(	O
arg	int
==	O
argc	int
)	O
return	O
1	int
;	O
while	O
(	O
arg	int
<	O
argc	int
)	O
if	O
(	O
ExprMatch	function
(	O
fname	pointer
,	O
argv	pointer
[	O
arg	int
++	O
]	O
)	O
)	O
return	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
tar	function
(	O
gzFile	pointer
in	pointer
,	O
int	O
action	int
,	O
int	O
arg	int
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
union	O
tar_buffer	union
buffer	array
;	O
int	O
len	int
;	O
int	O
err	int
;	O
int	O
getheader	int
=	O
1	int
;	O
int	O
remaining	int
=	O
0	int
;	O
FILE	struct
*	O
outfile	pointer
=	O
NULL	O
;	O
char	O
fname	pointer
[	O
BLOCKSIZE	int
]	O
;	O
time_t	long
tartime	long
;	O
if	O
(	O
action	int
==	O
TGZ_LIST	int
)	O
printf	function
(	O
"     day      time     size                       file\n"	pointer
" ---------- -------- --------- -------------------------------------\n"	pointer
)	O
;	O
while	O
(	O
1	int
)	O
{	O
len	int
=	O
gzread	function
(	O
in	pointer
,	O
&	O
buffer	array
,	O
BLOCKSIZE	int
)	O
;	O
if	O
(	O
len	int
<	O
0	int
)	O
error	function
(	O
gzerror	function
(	O
in	pointer
,	O
&	O
err	int
)	O
)	O
;	O
if	O
(	O
len	int
!=	O
BLOCKSIZE	int
)	O
error	function
(	O
"gzread: incomplete block read"	pointer
)	O
;	O
if	O
(	O
getheader	int
==	O
1	int
)	O
{	O
if	O
(	O
(	O
len	int
==	O
0	int
)	O
||	O
(	O
buffer	array
.	O
header	struct
.	O
name	array
[	O
0	int
]	O
==	O
0	int
)	O
)	O
break	O
;	O
tartime	long
=	O
(	O
time_t	long
)	O
getoct	function
(	O
buffer	array
.	O
header	struct
.	O
mtime	array
,	O
12	int
)	O
;	O
strcpy	function
(	O
fname	pointer
,	O
buffer	array
.	O
header	struct
.	O
name	array
)	O
;	O
switch	O
(	O
buffer	array
.	O
header	struct
.	O
typeflag	char
)	O
{	O
case	O
DIRTYPE	char
:	O
if	O
(	O
action	int
==	O
TGZ_LIST	int
)	O
printf	function
(	O
" %s     <dir> %s\n"	pointer
,	O
strtime	function
(	O
&	O
tartime	long
)	O
,	O
fname	pointer
)	O
;	O
if	O
(	O
action	int
==	O
TGZ_EXTRACT	int
)	O
makedir	function
(	O
fname	pointer
)	O
;	O
break	O
;	O
case	O
REGTYPE	char
:	O
case	O
AREGTYPE	char
:	O
remaining	int
=	O
getoct	function
(	O
buffer	array
.	O
header	struct
.	O
size	int
,	O
12	int
)	O
;	O
if	O
(	O
action	int
==	O
TGZ_LIST	int
)	O
printf	function
(	O
" %s %9d %s\n"	pointer
,	O
strtime	function
(	O
&	O
tartime	long
)	O
,	O
remaining	int
,	O
fname	pointer
)	O
;	O
if	O
(	O
action	int
==	O
TGZ_EXTRACT	int
)	O
{	O
if	O
(	O
(	O
remaining	int
)	O
&&	O
(	O
matchname	function
(	O
arg	int
,	O
argc	int
,	O
argv	pointer
,	O
fname	pointer
)	O
)	O
)	O
{	O
outfile	pointer
=	O
fopen	function
(	O
fname	pointer
,	O
"wb"	pointer
)	O
;	O
if	O
(	O
outfile	pointer
==	O
NULL	O
)	O
{	O
char	O
*	O
p	pointer
=	O
strrchr	function
(	O
fname	pointer
,	O
'/'	O
)	O
;	O
if	O
(	O
p	pointer
!=	O
NULL	O
)	O
{	O
*	O
p	pointer
=	O
'\0'	O
;	O
makedir	function
(	O
fname	pointer
)	O
;	O
*	O
p	pointer
=	O
'/'	O
;	O
outfile	pointer
=	O
fopen	function
(	O
fname	pointer
,	O
"wb"	pointer
)	O
;	O
}	O
}	O
fprintf	function
(	O
stderr	pointer
,	O
"%s %s\n"	pointer
,	O
(	O
outfile	pointer
)	O
?	O
"Extracting"	pointer
:	O
"Couldn't create"	pointer
,	O
fname	pointer
)	O
;	O
}	O
else	O
outfile	pointer
=	O
NULL	O
;	O
}	O
getheader	int
=	O
(	O
remaining	int
)	O
?	O
0	int
:	O
1	int
;	O
break	O
;	O
default	O
:	O
if	O
(	O
action	int
==	O
TGZ_LIST	int
)	O
printf	function
(	O
" %s     <---> %s\n"	pointer
,	O
strtime	function
(	O
&	O
tartime	long
)	O
,	O
fname	pointer
)	O
;	O
break	O
;	O
}	O
}	O
else	O
{	O
unsigned	O
int	O
bytes	int
=	O
(	O
remaining	int
>	O
BLOCKSIZE	int
)	O
?	O
BLOCKSIZE	int
:	O
remaining	int
;	O
if	O
(	O
(	O
action	int
==	O
TGZ_EXTRACT	int
)	O
&&	O
(	O
outfile	pointer
!=	O
NULL	O
)	O
)	O
{	O
if	O
(	O
fwrite	function
(	O
&	O
buffer	array
,	O
sizeof	O
(	O
char	O
)	O
,	O
bytes	int
,	O
outfile	pointer
)	O
!=	O
bytes	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s : error writing %s skipping...\n"	pointer
,	O
prog	pointer
,	O
fname	pointer
)	O
;	O
fclose	function
(	O
outfile	pointer
)	O
;	O
unlink	function
(	O
fname	pointer
)	O
;	O
}	O
}	O
remaining	int
-=	O
bytes	int
;	O
if	O
(	O
remaining	int
==	O
0	int
)	O
{	O
getheader	int
=	O
1	int
;	O
if	O
(	O
(	O
action	int
==	O
TGZ_EXTRACT	int
)	O
&&	O
(	O
outfile	pointer
!=	O
NULL	O
)	O
)	O
{	O
struct	O
utimbuf	struct
settime	struct
;	O
settime	struct
.	O
actime	long
=	O
settime	struct
.	O
modtime	long
=	O
tartime	long
;	O
fclose	function
(	O
outfile	pointer
)	O
;	O
outfile	pointer
=	O
NULL	O
;	O
utime	function
(	O
fname	pointer
,	O
&	O
settime	struct
)	O
;	O
}	O
}	O
}	O
}	O
if	O
(	O
gzclose	function
(	O
in	pointer
)	O
!=	O
Z_OK	int
)	O
error	function
(	O
"failed gzclose"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
void	O
help	function
(	O
int	O
exitval	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"untgz v 0.1\n"	pointer
" an sample application of zlib 1.0.4\n\n"	pointer
"Usage : untgz TGZfile            to extract all files\n"	pointer
"        untgz TGZfile fname ...  to extract selected files\n"	pointer
"        untgz -l TGZfile         to list archive contents\n"	pointer
"        untgz -h                 to display this help\n\n"	pointer
)	O
;	O
exit	function
(	O
exitval	int
)	O
;	O
}	O
void	O
error	function
(	O
const	O
char	O
*	O
msg	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: %s\n"	pointer
,	O
prog	pointer
,	O
msg	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
int	O
_CRT_glob	int
=	O
0	int
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
action	int
=	O
TGZ_EXTRACT	int
;	O
int	O
arg	int
=	O
1	int
;	O
char	O
*	O
TGZfile	pointer
;	O
gzFile	pointer
*	O
f	pointer
;	O
prog	pointer
=	O
strrchr	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
'\\'	O
)	O
;	O
if	O
(	O
prog	pointer
==	O
NULL	O
)	O
{	O
prog	pointer
=	O
strrchr	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
'/'	O
)	O
;	O
if	O
(	O
prog	pointer
==	O
NULL	O
)	O
{	O
prog	pointer
=	O
strrchr	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
':'	O
)	O
;	O
if	O
(	O
prog	pointer
==	O
NULL	O
)	O
prog	pointer
=	O
argv	pointer
[	O
0	int
]	O
;	O
else	O
prog	pointer
++	O
;	O
}	O
else	O
prog	pointer
++	O
;	O
}	O
else	O
prog	pointer
++	O
;	O
if	O
(	O
argc	int
==	O
1	int
)	O
help	function
(	O
0	int
)	O
;	O
if	O
(	O
strcmp	function
(	O
argv	pointer
[	O
arg	int
]	O
,	O
"-l"	pointer
)	O
==	O
0	int
)	O
{	O
action	int
=	O
TGZ_LIST	int
;	O
if	O
(	O
argc	int
==	O
++	O
arg	int
)	O
help	function
(	O
0	int
)	O
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
argv	pointer
[	O
arg	int
]	O
,	O
"-h"	pointer
)	O
==	O
0	int
)	O
{	O
help	function
(	O
0	int
)	O
;	O
}	O
if	O
(	O
(	O
TGZfile	pointer
=	O
TGZfname	function
(	O
argv	pointer
[	O
arg	int
]	O
)	O
)	O
==	O
NULL	O
)	O
TGZnotfound	function
(	O
argv	pointer
[	O
arg	int
]	O
)	O
;	O
++	O
arg	int
;	O
if	O
(	O
(	O
action	int
==	O
TGZ_LIST	int
)	O
&&	O
(	O
arg	int
!=	O
argc	int
)	O
)	O
help	function
(	O
1	int
)	O
;	O
switch	O
(	O
action	int
)	O
{	O
case	O
TGZ_LIST	int
:	O
case	O
TGZ_EXTRACT	int
:	O
f	pointer
=	O
gzopen	function
(	O
TGZfile	pointer
,	O
"rb"	pointer
)	O
;	O
if	O
(	O
f	pointer
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s: Couldn't gzopen %s\n"	pointer
,	O
prog	pointer
,	O
TGZfile	pointer
)	O
;	O
return	O
1	int
;	O
}	O
exit	function
(	O
tar	function
(	O
f	pointer
,	O
action	int
,	O
arg	int
,	O
argc	int
,	O
argv	pointer
)	O
)	O
;	O
break	O
;	O
default	O
:	O
error	function
(	O
"Unknown option!"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
return	O
0	int
;	O
}	O
