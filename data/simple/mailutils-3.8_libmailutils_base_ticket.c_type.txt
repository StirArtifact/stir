static	O
void	O
echo_off	function
(	O
struct	O
termios	struct
*	O
stored_settings	pointer
)	O
{	O
struct	O
termios	struct
new_settings	struct
;	O
tcgetattr	function
(	O
0	int
,	O
stored_settings	pointer
)	O
;	O
new_settings	struct
=	O
*	O
stored_settings	pointer
;	O
new_settings	struct
.	O
c_lflag	int
&=	O
(	O
~	O
ECHO	int
)	O
;	O
tcsetattr	function
(	O
0	int
,	O
TCSANOW	int
,	O
&	O
new_settings	struct
)	O
;	O
}	O
static	O
void	O
echo_on	function
(	O
struct	O
termios	struct
*	O
stored_settings	pointer
)	O
{	O
tcsetattr	function
(	O
0	int
,	O
TCSANOW	int
,	O
stored_settings	pointer
)	O
;	O
}	O
int	O
mu_ticket_create	function
(	O
mu_ticket_t	pointer
*	O
pticket	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
mu_ticket_t	pointer
ticket	pointer
;	O
if	O
(	O
pticket	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
ticket	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
ticket	pointer
)	O
)	O
;	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
ticket	pointer
->	O
owner	pointer
=	O
owner	pointer
;	O
mu_ticket_ref	function
(	O
ticket	pointer
)	O
;	O
*	O
pticket	pointer
=	O
ticket	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_ticket_ref	function
(	O
mu_ticket_t	pointer
ticket	pointer
)	O
{	O
if	O
(	O
!	O
ticket	pointer
)	O
return	O
EINVAL	int
;	O
ticket	pointer
->	O
refcnt	int
++	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_ticket_unref	function
(	O
mu_ticket_t	pointer
ticket	pointer
)	O
{	O
if	O
(	O
!	O
ticket	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
refcnt	int
)	O
ticket	pointer
->	O
refcnt	int
--	O
;	O
if	O
(	O
ticket	pointer
->	O
refcnt	int
==	O
0	int
)	O
{	O
if	O
(	O
ticket	pointer
->	O
plain	pointer
)	O
free	function
(	O
ticket	pointer
->	O
plain	pointer
)	O
;	O
if	O
(	O
ticket	pointer
->	O
secret	pointer
)	O
mu_secret_destroy	function
(	O
&	O
ticket	pointer
->	O
secret	pointer
)	O
;	O
if	O
(	O
ticket	pointer
->	O
_destroy	pointer
)	O
ticket	pointer
->	O
_destroy	pointer
(	O
ticket	pointer
)	O
;	O
free	function
(	O
ticket	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_EXISTS	O
;	O
}	O
void	O
mu_ticket_destroy	function
(	O
mu_ticket_t	pointer
*	O
pticket	pointer
)	O
{	O
if	O
(	O
pticket	pointer
&&	O
*	O
pticket	pointer
&&	O
mu_ticket_unref	function
(	O
*	O
pticket	pointer
)	O
==	O
0	int
)	O
*	O
pticket	pointer
=	O
NULL	O
;	O
}	O
int	O
mu_ticket_set_destroy	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
void	O
(	O
*	O
_destroy	pointer
)	O
(	O
mu_ticket_t	pointer
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
ticket	pointer
->	O
_destroy	pointer
=	O
_destroy	pointer
;	O
return	O
0	int
;	O
}	O
void	O
*	O
mu_ticket_get_owner	function
(	O
mu_ticket_t	pointer
ticket	pointer
)	O
{	O
return	O
(	O
ticket	pointer
)	O
?	O
ticket	pointer
->	O
owner	pointer
:	O
NULL	O
;	O
}	O
int	O
mu_ticket_set_get_cred	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
int	O
(	O
*	O
_get_cred	pointer
)	O
(	O
mu_ticket_t	pointer
,	O
mu_url_t	pointer
,	O
const	O
char	O
*	O
,	O
char	O
*	O
*	O
,	O
mu_secret_t	pointer
*	O
)	O
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
ticket	pointer
->	O
_get_cred	pointer
=	O
_get_cred	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_ticket_set_secret	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
mu_secret_t	pointer
secret	pointer
)	O
{	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
secret	pointer
)	O
mu_secret_unref	function
(	O
ticket	pointer
->	O
secret	pointer
)	O
;	O
mu_secret_ref	function
(	O
secret	pointer
)	O
;	O
ticket	pointer
->	O
secret	pointer
=	O
secret	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_ticket_set_plain	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
const	O
char	O
*	O
text	pointer
)	O
{	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
plain	pointer
)	O
free	function
(	O
ticket	pointer
->	O
plain	pointer
)	O
;	O
ticket	pointer
->	O
plain	pointer
=	O
strdup	function
(	O
text	pointer
)	O
;	O
if	O
(	O
!	O
ticket	pointer
->	O
plain	pointer
)	O
return	O
ENOMEM	int
;	O
return	O
0	int
;	O
}	O
int	O
mu_ticket_get_cred	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
mu_url_t	pointer
url	pointer
,	O
const	O
char	O
*	O
challenge	pointer
,	O
char	O
*	O
*	O
pplain	pointer
,	O
mu_secret_t	pointer
*	O
psec	pointer
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
char	O
arg	array
[	O
256	int
]	O
;	O
if	O
(	O
ticket	pointer
==	O
NULL	O
||	O
(	O
pplain	pointer
&&	O
psec	pointer
)	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
pplain	pointer
==	O
NULL	O
&&	O
psec	pointer
==	O
NULL	O
)	O
return	O
MU_ERR_OUT_PTR_NULL	O
;	O
if	O
(	O
ticket	pointer
->	O
_get_cred	pointer
)	O
{	O
int	O
res	pointer
=	O
ticket	pointer
->	O
_get_cred	pointer
(	O
ticket	pointer
,	O
url	pointer
,	O
challenge	pointer
,	O
pplain	pointer
,	O
psec	pointer
)	O
;	O
if	O
(	O
res	pointer
==	O
0	int
)	O
return	O
res	pointer
;	O
}	O
if	O
(	O
pplain	pointer
&&	O
ticket	pointer
->	O
plain	pointer
)	O
{	O
*	O
pplain	pointer
=	O
strdup	function
(	O
ticket	pointer
->	O
plain	pointer
)	O
;	O
if	O
(	O
!	O
*	O
pplain	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
if	O
(	O
psec	pointer
&&	O
ticket	pointer
->	O
secret	pointer
)	O
{	O
mu_secret_ref	function
(	O
ticket	pointer
->	O
secret	pointer
)	O
;	O
*	O
psec	pointer
=	O
ticket	pointer
->	O
secret	pointer
;	O
return	O
0	int
;	O
}	O
if	O
(	O
isatty	function
(	O
fileno	function
(	O
stdin	pointer
)	O
)	O
)	O
{	O
struct	O
termios	struct
stored_settings	pointer
;	O
int	O
echo	int
=	O
pplain	pointer
!=	O
NULL	O
;	O
printf	function
(	O
"%s"	pointer
,	O
challenge	pointer
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
if	O
(	O
!	O
echo	int
)	O
echo_off	function
(	O
&	O
stored_settings	pointer
)	O
;	O
fgets	function
(	O
arg	array
,	O
sizeof	O
(	O
arg	array
)	O
,	O
stdin	pointer
)	O
;	O
if	O
(	O
!	O
echo	int
)	O
{	O
echo_on	function
(	O
&	O
stored_settings	pointer
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
fflush	function
(	O
stdout	pointer
)	O
;	O
}	O
arg	array
[	O
strlen	function
(	O
arg	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
return	O
MU_ERR_FAILURE	O
;	O
if	O
(	O
pplain	pointer
)	O
{	O
*	O
pplain	pointer
=	O
strdup	function
(	O
arg	array
)	O
;	O
if	O
(	O
!	O
*	O
pplain	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
else	O
rc	int
=	O
mu_secret_create	function
(	O
psec	pointer
,	O
arg	array
,	O
strlen	function
(	O
arg	array
)	O
)	O
;	O
return	O
rc	int
;	O
}	O
void	O
*	O
mu_ticket_get_data	function
(	O
mu_ticket_t	pointer
ticket	pointer
)	O
{	O
if	O
(	O
!	O
ticket	pointer
)	O
return	O
NULL	O
;	O
return	O
ticket	pointer
->	O
data	pointer
;	O
}	O
int	O
mu_ticket_set_data	function
(	O
mu_ticket_t	pointer
ticket	pointer
,	O
void	O
*	O
data	pointer
,	O
void	O
*	O
owner	pointer
)	O
{	O
if	O
(	O
ticket	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
ticket	pointer
->	O
owner	pointer
!=	O
owner	pointer
)	O
return	O
EACCES	int
;	O
ticket	pointer
->	O
data	pointer
=	O
data	pointer
;	O
return	O
0	int
;	O
}	O
