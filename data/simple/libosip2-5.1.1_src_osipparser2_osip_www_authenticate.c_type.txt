int	O
osip_www_authenticate_init	function
(	O
osip_www_authenticate_t	struct
*	O
*	O
dest	pointer
)	O
{	O
*	O
dest	pointer
=	O
(	O
osip_www_authenticate_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_www_authenticate_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
dest	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	function
(	O
*	O
dest	pointer
,	O
0	int
,	O
sizeof	O
(	O
osip_www_authenticate_t	struct
)	O
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_www_authenticate	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	pointer
==	O
NULL	O
||	O
hvalue	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_www_authenticate_init	function
(	O
&	O
www_authenticate	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
i	int
=	O
osip_www_authenticate_parse	function
(	O
www_authenticate	pointer
,	O
hvalue	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_www_authenticate_free	function
(	O
www_authenticate	pointer
)	O
;	O
return	O
i	int
;	O
}	O
sip	pointer
->	O
message_property	int
=	O
2	int
;	O
osip_list_add	function
(	O
&	O
sip	pointer
->	O
www_authenticates	struct
,	O
www_authenticate	pointer
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_quoted_string_set	function
(	O
const	O
char	O
*	O
name	pointer
,	O
const	O
char	O
*	O
str	pointer
,	O
char	O
*	O
*	O
result	pointer
,	O
const	O
char	O
*	O
*	O
next	pointer
)	O
{	O
*	O
next	pointer
=	O
str	pointer
;	O
if	O
(	O
*	O
result	pointer
!=	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	pointer
=	O
NULL	O
;	O
while	O
(	O
(	O
' '	O
==	O
*	O
str	pointer
)	O
||	O
(	O
'\t'	O
==	O
*	O
str	pointer
)	O
||	O
(	O
','	O
==	O
*	O
str	pointer
)	O
)	O
if	O
(	O
*	O
str	pointer
)	O
str	pointer
++	O
;	O
else	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
osip_strncasecmp	function
(	O
name	pointer
,	O
str	pointer
,	O
strlen	function
(	O
name	pointer
)	O
)	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
quote1	pointer
;	O
const	O
char	O
*	O
quote2	pointer
;	O
const	O
char	O
*	O
tmp	pointer
;	O
const	O
char	O
*	O
hack	pointer
=	O
strchr	function
(	O
str	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
hack	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
while	O
(	O
' '	O
==	O
*	O
(	O
hack	pointer
-	O
1	int
)	O
)	O
hack	pointer
--	O
;	O
if	O
(	O
(	O
size_t	long
)	O
(	O
hack	pointer
-	O
str	pointer
)	O
!=	O
strlen	function
(	O
name	pointer
)	O
)	O
{	O
*	O
next	pointer
=	O
str	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
quote1	pointer
=	O
__osip_quote_find	function
(	O
str	pointer
)	O
;	O
if	O
(	O
quote1	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
quote2	pointer
=	O
__osip_quote_find	function
(	O
quote1	pointer
+	O
1	int
)	O
;	O
if	O
(	O
quote2	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
quote2	pointer
-	O
quote1	pointer
==	O
1	int
)	O
{	O
tmp	pointer
=	O
quote2	pointer
+	O
1	int
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
"\n\r"	pointer
)	O
;	O
*	O
next	pointer
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	pointer
!=	O
'\t'	O
&&	O
*	O
tmp	pointer
!=	O
' '	O
)	O
*	O
next	pointer
=	O
tmp	pointer
;	O
else	O
{	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	pointer
=	O
tmp	pointer
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
*	O
result	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
quote2	pointer
-	O
quote1	pointer
+	O
3	int
)	O
;	O
if	O
(	O
*	O
result	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	function
(	O
*	O
result	pointer
,	O
quote1	pointer
,	O
quote2	pointer
-	O
quote1	pointer
+	O
1	int
)	O
;	O
tmp	pointer
=	O
quote2	pointer
+	O
1	int
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
"\n\r"	pointer
)	O
;	O
*	O
next	pointer
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	pointer
!=	O
'\t'	O
&&	O
*	O
tmp	pointer
!=	O
' '	O
)	O
*	O
next	pointer
=	O
tmp	pointer
;	O
else	O
{	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	pointer
=	O
tmp	pointer
;	O
}	O
}	O
else	O
*	O
next	pointer
=	O
str	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_token_set	function
(	O
const	O
char	O
*	O
name	pointer
,	O
const	O
char	O
*	O
str	pointer
,	O
char	O
*	O
*	O
result	pointer
,	O
const	O
char	O
*	O
*	O
next	pointer
)	O
{	O
const	O
char	O
*	O
beg	pointer
;	O
const	O
char	O
*	O
tmp	pointer
;	O
*	O
next	pointer
=	O
str	pointer
;	O
if	O
(	O
*	O
result	pointer
!=	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	pointer
=	O
NULL	O
;	O
beg	pointer
=	O
strchr	function
(	O
str	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
beg	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
strlen	function
(	O
str	pointer
)	O
<	O
6	int
)	O
return	O
OSIP_SUCCESS	int
;	O
while	O
(	O
(	O
' '	O
==	O
*	O
str	pointer
)	O
||	O
(	O
'\t'	O
==	O
*	O
str	pointer
)	O
||	O
(	O
','	O
==	O
*	O
str	pointer
)	O
)	O
if	O
(	O
*	O
str	pointer
)	O
str	pointer
++	O
;	O
else	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
osip_strncasecmp	function
(	O
name	pointer
,	O
str	pointer
,	O
strlen	function
(	O
name	pointer
)	O
)	O
==	O
0	int
)	O
{	O
const	O
char	O
*	O
end	pointer
;	O
end	pointer
=	O
strchr	function
(	O
str	pointer
,	O
','	O
)	O
;	O
if	O
(	O
end	pointer
==	O
NULL	O
)	O
end	pointer
=	O
str	pointer
+	O
strlen	function
(	O
str	pointer
)	O
;	O
if	O
(	O
end	pointer
-	O
beg	pointer
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
*	O
result	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
end	pointer
-	O
beg	pointer
)	O
;	O
if	O
(	O
*	O
result	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_clrncpy	function
(	O
*	O
result	pointer
,	O
beg	pointer
+	O
1	int
,	O
end	pointer
-	O
beg	pointer
-	O
1	int
)	O
;	O
tmp	pointer
=	O
(	O
*	O
end	pointer
)	O
?	O
(	O
end	pointer
+	O
1	int
)	O
:	O
end	pointer
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
"\n\r"	pointer
)	O
;	O
*	O
next	pointer
=	O
NULL	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
*	O
tmp	pointer
!=	O
'\t'	O
&&	O
*	O
tmp	pointer
!=	O
' '	O
)	O
*	O
next	pointer
=	O
tmp	pointer
;	O
else	O
{	O
tmp	pointer
+=	O
strspn	function
(	O
tmp	pointer
,	O
" \t"	pointer
)	O
;	O
if	O
(	O
*	O
tmp	pointer
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
*	O
next	pointer
=	O
tmp	pointer
;	O
}	O
}	O
else	O
*	O
next	pointer
=	O
str	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_www_authenticate_parse	function
(	O
osip_www_authenticate_t	struct
*	O
wwwa	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
const	O
char	O
*	O
space	pointer
;	O
const	O
char	O
*	O
next	pointer
=	O
NULL	O
;	O
int	O
i	int
;	O
space	pointer
=	O
strchr	function
(	O
hvalue	pointer
,	O
' '	O
)	O
;	O
if	O
(	O
space	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
space	pointer
-	O
hvalue	pointer
+	O
1	int
<	O
2	int
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
wwwa	pointer
->	O
auth_type	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
space	pointer
-	O
hvalue	pointer
+	O
1	int
)	O
;	O
if	O
(	O
wwwa	pointer
->	O
auth_type	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	function
(	O
wwwa	pointer
->	O
auth_type	pointer
,	O
hvalue	pointer
,	O
space	pointer
-	O
hvalue	pointer
)	O
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
parse_ok	int
=	O
0	int
;	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"realm"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
realm	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"domain"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
domain	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"nonce"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
nonce	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"opaque"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
opaque	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	function
(	O
"stale"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
stale	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	function
(	O
"algorithm"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
algorithm	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"qop"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
qop_options	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	function
(	O
"version"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
version	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"targetname"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
targetname	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"gssapi-data"	pointer
,	O
space	pointer
,	O
&	O
(	O
wwwa	pointer
->	O
gssapi_data	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
if	O
(	O
0	int
==	O
parse_ok	int
)	O
{	O
const	O
char	O
*	O
quote1	pointer
,	O
*	O
quote2	pointer
,	O
*	O
tmp	pointer
;	O
if	O
(	O
strlen	function
(	O
space	pointer
)	O
<	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
tmp	pointer
=	O
strchr	function
(	O
space	pointer
+	O
1	int
,	O
','	O
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
quote1	pointer
=	O
__osip_quote_find	function
(	O
space	pointer
)	O
;	O
if	O
(	O
(	O
quote1	pointer
!=	O
NULL	O
)	O
&&	O
(	O
quote1	pointer
<	O
tmp	pointer
)	O
)	O
{	O
quote2	pointer
=	O
__osip_quote_find	function
(	O
quote1	pointer
+	O
1	int
)	O
;	O
if	O
(	O
quote2	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
tmp	pointer
<	O
quote2	pointer
)	O
space	pointer
=	O
strchr	function
(	O
quote2	pointer
,	O
','	O
)	O
;	O
else	O
space	pointer
=	O
tmp	pointer
;	O
if	O
(	O
space	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
space	pointer
=	O
tmp	pointer
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_www_authenticate	function
(	O
const	O
osip_message_t	struct
*	O
sip	pointer
,	O
int	O
pos	int
,	O
osip_www_authenticate_t	struct
*	O
*	O
dest	pointer
)	O
{	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	function
(	O
&	O
sip	pointer
->	O
www_authenticates	struct
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
www_authenticate	pointer
=	O
(	O
osip_www_authenticate_t	struct
*	O
)	O
osip_list_get	function
(	O
&	O
sip	pointer
->	O
www_authenticates	struct
,	O
pos	int
)	O
;	O
*	O
dest	pointer
=	O
www_authenticate	pointer
;	O
return	O
pos	int
;	O
}	O
char	O
*	O
osip_www_authenticate_get_auth_type	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
auth_type	pointer
;	O
}	O
void	O
osip_www_authenticate_set_auth_type	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
auth_type	pointer
)	O
{	O
www_authenticate	pointer
->	O
auth_type	pointer
=	O
(	O
char	O
*	O
)	O
auth_type	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_realm	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
realm	pointer
;	O
}	O
void	O
osip_www_authenticate_set_realm	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
realm	pointer
)	O
{	O
www_authenticate	pointer
->	O
realm	pointer
=	O
(	O
char	O
*	O
)	O
realm	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_domain	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
domain	pointer
;	O
}	O
void	O
osip_www_authenticate_set_domain	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
domain	pointer
)	O
{	O
www_authenticate	pointer
->	O
domain	pointer
=	O
(	O
char	O
*	O
)	O
domain	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_nonce	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
nonce	pointer
;	O
}	O
void	O
osip_www_authenticate_set_nonce	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
nonce	pointer
)	O
{	O
www_authenticate	pointer
->	O
nonce	pointer
=	O
(	O
char	O
*	O
)	O
nonce	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_stale	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
stale	pointer
;	O
}	O
void	O
osip_www_authenticate_set_stale	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
stale	pointer
)	O
{	O
www_authenticate	pointer
->	O
stale	pointer
=	O
(	O
char	O
*	O
)	O
stale	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_opaque	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
opaque	pointer
;	O
}	O
void	O
osip_www_authenticate_set_opaque	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
opaque	pointer
)	O
{	O
www_authenticate	pointer
->	O
opaque	pointer
=	O
(	O
char	O
*	O
)	O
opaque	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_algorithm	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
algorithm	pointer
;	O
}	O
void	O
osip_www_authenticate_set_algorithm	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
algorithm	pointer
)	O
{	O
www_authenticate	pointer
->	O
algorithm	pointer
=	O
(	O
char	O
*	O
)	O
algorithm	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_qop_options	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
qop_options	pointer
;	O
}	O
void	O
osip_www_authenticate_set_qop_options	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
qop_options	pointer
)	O
{	O
www_authenticate	pointer
->	O
qop_options	pointer
=	O
(	O
char	O
*	O
)	O
qop_options	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_version	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
version	pointer
;	O
}	O
void	O
osip_www_authenticate_set_version	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
version	pointer
)	O
{	O
www_authenticate	pointer
->	O
version	pointer
=	O
(	O
char	O
*	O
)	O
version	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_targetname	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
targetname	pointer
;	O
}	O
void	O
osip_www_authenticate_set_targetname	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
targetname	pointer
)	O
{	O
www_authenticate	pointer
->	O
targetname	pointer
=	O
(	O
char	O
*	O
)	O
targetname	pointer
;	O
}	O
char	O
*	O
osip_www_authenticate_get_gssapi_data	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
return	O
www_authenticate	pointer
->	O
gssapi_data	pointer
;	O
}	O
void	O
osip_www_authenticate_set_gssapi_data	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
,	O
char	O
*	O
gssapi_data	pointer
)	O
{	O
www_authenticate	pointer
->	O
gssapi_data	pointer
=	O
(	O
char	O
*	O
)	O
gssapi_data	pointer
;	O
}	O
int	O
osip_www_authenticate_to_str	function
(	O
const	O
osip_www_authenticate_t	struct
*	O
wwwa	pointer
,	O
char	O
*	O
*	O
dest	pointer
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
tmp	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
(	O
wwwa	pointer
==	O
NULL	O
)	O
||	O
(	O
wwwa	pointer
->	O
auth_type	pointer
==	O
NULL	O
)	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
strlen	function
(	O
wwwa	pointer
->	O
auth_type	pointer
)	O
+	O
1	int
;	O
if	O
(	O
wwwa	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
realm	pointer
)	O
+	O
7	int
;	O
if	O
(	O
wwwa	pointer
->	O
nonce	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
nonce	pointer
)	O
+	O
8	int
;	O
len	long
=	O
len	long
+	O
2	int
;	O
if	O
(	O
wwwa	pointer
->	O
domain	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
domain	pointer
)	O
+	O
9	int
;	O
if	O
(	O
wwwa	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
opaque	pointer
)	O
+	O
9	int
;	O
if	O
(	O
wwwa	pointer
->	O
stale	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
stale	pointer
)	O
+	O
8	int
;	O
if	O
(	O
wwwa	pointer
->	O
algorithm	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
algorithm	pointer
)	O
+	O
12	int
;	O
if	O
(	O
wwwa	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
qop_options	pointer
)	O
+	O
6	int
;	O
if	O
(	O
wwwa	pointer
->	O
version	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
version	pointer
)	O
+	O
10	int
;	O
if	O
(	O
wwwa	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
targetname	pointer
)	O
+	O
13	int
;	O
if	O
(	O
wwwa	pointer
->	O
gssapi_data	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
wwwa	pointer
->	O
gssapi_data	pointer
)	O
+	O
14	int
;	O
tmp	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
dest	pointer
=	O
tmp	pointer
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
auth_type	pointer
)	O
;	O
if	O
(	O
wwwa	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
" realm="	pointer
,	O
7	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
realm	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
domain	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", domain="	pointer
,	O
9	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
domain	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
nonce	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", nonce="	pointer
,	O
8	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
nonce	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", opaque="	pointer
,	O
9	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
opaque	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
stale	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", stale="	pointer
,	O
8	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
stale	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
algorithm	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", algorithm="	pointer
,	O
12	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
algorithm	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", qop="	pointer
,	O
6	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
qop_options	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
version	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", version="	pointer
,	O
10	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
version	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", targetname="	pointer
,	O
13	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
targetname	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
gssapi_data	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", gssapi-data="	pointer
,	O
14	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
wwwa	pointer
->	O
gssapi_data	pointer
)	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
realm	pointer
==	O
NULL	O
)	O
{	O
len	long
=	O
strlen	function
(	O
wwwa	pointer
->	O
auth_type	pointer
)	O
;	O
if	O
(	O
(	O
*	O
dest	pointer
)	O
[	O
len	long
]	O
==	O
','	O
)	O
(	O
*	O
dest	pointer
)	O
[	O
len	long
]	O
=	O
' '	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_www_authenticate_free	function
(	O
osip_www_authenticate_t	struct
*	O
www_authenticate	pointer
)	O
{	O
if	O
(	O
www_authenticate	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
auth_type	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
realm	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
domain	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
nonce	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
opaque	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
stale	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
algorithm	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
qop_options	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
version	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
targetname	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
->	O
gssapi_data	pointer
)	O
;	O
osip_free	O
(	O
www_authenticate	pointer
)	O
;	O
}	O
int	O
osip_www_authenticate_clone	function
(	O
const	O
osip_www_authenticate_t	struct
*	O
wwwa	pointer
,	O
osip_www_authenticate_t	struct
*	O
*	O
dest	pointer
)	O
{	O
int	O
i	int
;	O
osip_www_authenticate_t	struct
*	O
wa	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
wwwa	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
wwwa	pointer
->	O
auth_type	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_www_authenticate_init	function
(	O
&	O
wa	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
wa	pointer
->	O
auth_type	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
auth_type	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
auth_type	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
auth_type	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
realm	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
realm	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
realm	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
domain	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
domain	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
domain	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
domain	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
domain	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
nonce	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
nonce	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
nonce	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
nonce	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
nonce	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
opaque	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
opaque	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
opaque	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
stale	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
stale	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
stale	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
stale	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
stale	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
algorithm	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
algorithm	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
algorithm	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
algorithm	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
algorithm	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
qop_options	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
qop_options	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
qop_options	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
version	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
version	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
version	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
version	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
version	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
targetname	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
targetname	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
targetname	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
if	O
(	O
wwwa	pointer
->	O
gssapi_data	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
gssapi_data	pointer
=	O
osip_strdup	function
(	O
wwwa	pointer
->	O
gssapi_data	pointer
)	O
;	O
if	O
(	O
wa	pointer
->	O
gssapi_data	pointer
==	O
NULL	O
&&	O
wwwa	pointer
->	O
gssapi_data	pointer
!=	O
NULL	O
)	O
{	O
osip_www_authenticate_free	function
(	O
wa	pointer
)	O
;	O
return	O
OSIP_NOMEM	O
;	O
}	O
*	O
dest	pointer
=	O
wa	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
