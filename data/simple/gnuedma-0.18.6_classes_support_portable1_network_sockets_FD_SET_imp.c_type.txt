typedef	O
struct	O
{	O
fd_set	struct
*	O
write	function
;	O
fd_set	struct
*	O
read	function
;	O
fd_set	struct
*	O
exception	pointer
;	O
ESint32	int
max_fd	int
;	O
EUint32	long
sec	long
;	O
EUint32	long
usec	long
;	O
}	O
DtFD_SET	struct
;	O
ESint32	int
EDMAPROC	O
FD_SETreset	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
m	pointer
->	O
read	function
)	O
free	function
(	O
m	pointer
->	O
read	function
)	O
;	O
if	O
(	O
m	pointer
->	O
write	function
)	O
free	function
(	O
m	pointer
->	O
write	function
)	O
;	O
if	O
(	O
m	pointer
->	O
exception	pointer
)	O
free	function
(	O
m	pointer
->	O
exception	pointer
)	O
;	O
m	pointer
->	O
read	function
=	O
(	O
fd_set	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
fd_set	struct
)	O
)	O
;	O
m	pointer
->	O
write	function
=	O
(	O
fd_set	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
fd_set	struct
)	O
)	O
;	O
m	pointer
->	O
exception	pointer
=	O
(	O
fd_set	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
fd_set	struct
)	O
)	O
;	O
FD_ZERO	O
(	O
m	pointer
->	O
read	function
)	O
;	O
FD_ZERO	O
(	O
m	pointer
->	O
write	function
)	O
;	O
FD_ZERO	O
(	O
m	pointer
->	O
exception	pointer
)	O
;	O
m	pointer
->	O
max_fd	int
=	O
0	int
;	O
m	pointer
->	O
sec	long
=	O
0	int
;	O
m	pointer
->	O
usec	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETselect	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
struct	O
timeval	struct
*	O
t	pointer
,	O
to	struct
;	O
ESint32	int
n	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
if	O
(	O
(	O
m	pointer
->	O
sec	long
==	O
0	int
)	O
&&	O
(	O
m	pointer
->	O
usec	long
==	O
0	int
)	O
)	O
t	pointer
=	O
NULL	O
;	O
else	O
{	O
to	struct
.	O
tv_sec	long
=	O
m	pointer
->	O
sec	long
;	O
to	struct
.	O
tv_usec	long
=	O
m	pointer
->	O
usec	long
;	O
t	pointer
=	O
&	O
to	struct
;	O
}	O
n	int
=	O
select	function
(	O
m	pointer
->	O
max_fd	int
+	O
1	int
,	O
m	pointer
->	O
read	function
,	O
m	pointer
->	O
write	function
,	O
m	pointer
->	O
exception	pointer
,	O
t	pointer
)	O
;	O
return	O
n	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETcheck4readO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
if	O
(	O
FD_ISSET	O
(	O
s	int
,	O
m	pointer
->	O
read	function
)	O
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETcheck4writeO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
if	O
(	O
FD_ISSET	O
(	O
s	int
,	O
m	pointer
->	O
write	function
)	O
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETcheck4exceptionO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
if	O
(	O
FD_ISSET	O
(	O
s	int
,	O
m	pointer
->	O
write	function
)	O
)	O
return	O
1	int
;	O
else	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETadd4readO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
FD_SET	O
(	O
s	int
,	O
m	pointer
->	O
read	function
)	O
;	O
if	O
(	O
s	int
>	O
m	pointer
->	O
max_fd	int
)	O
m	pointer
->	O
max_fd	int
=	O
s	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETadd4writeO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
FD_SET	O
(	O
s	int
,	O
m	pointer
->	O
write	function
)	O
;	O
if	O
(	O
s	int
>	O
m	pointer
->	O
max_fd	int
)	O
m	pointer
->	O
max_fd	int
=	O
s	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETadd4exceptionO	function
(	O
OBJID	int
IdObj	int
,	O
OBJID	int
obj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
ESint32	int
s	int
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
edma_rprop3	function
(	O
obj	int
,	O
"s"	pointer
,	O
&	O
s	int
)	O
;	O
FD_SET	O
(	O
s	int
,	O
m	pointer
->	O
write	function
)	O
;	O
if	O
(	O
s	int
>	O
m	pointer
->	O
max_fd	int
)	O
m	pointer
->	O
max_fd	int
=	O
s	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETset_timeoutS32S32	function
(	O
OBJID	int
IdObj	int
,	O
ESint32	int
s	int
,	O
ESint32	int
us	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
m	pointer
->	O
sec	long
=	O
s	int
;	O
m	pointer
->	O
usec	long
=	O
us	int
;	O
return	O
0	int
;	O
}	O
ESint32	int
EDMAPROC	O
FD_SETrip	function
(	O
OBJID	int
IdObj	int
)	O
{	O
DtFD_SET	struct
*	O
m	pointer
;	O
m	pointer
=	O
(	O
DtFD_SET	struct
*	O
)	O
edma_get_data_ref	function
(	O
IdObj	int
)	O
;	O
free	function
(	O
m	pointer
->	O
read	function
)	O
;	O
free	function
(	O
m	pointer
->	O
write	function
)	O
;	O
free	function
(	O
m	pointer
->	O
exception	pointer
)	O
;	O
return	O
0	int
;	O
}	O
