static	O
const	O
plColor	struct
regis_stdcolors	array
[	O
REGIS_NUM_STD_COLORS	int
]	O
=	O
{	O
{	O
0xff	int
,	O
0x00	int
,	O
0x00	int
}	O
,	O
{	O
0x00	int
,	O
0xff	int
,	O
0x00	int
}	O
,	O
{	O
0x00	int
,	O
0x00	int
,	O
0xff	int
}	O
,	O
{	O
0x00	int
,	O
0xff	int
,	O
0xff	int
}	O
,	O
{	O
0xff	int
,	O
0x00	int
,	O
0xff	int
}	O
,	O
{	O
0xff	int
,	O
0xff	int
,	O
0x00	int
}	O
,	O
{	O
0x00	int
,	O
0x00	int
,	O
0x00	int
}	O
,	O
{	O
0xff	int
,	O
0xff	int
,	O
0xff	int
}	O
}	O
;	O
static	O
const	O
char	O
regis_color_chars	array
[	O
REGIS_NUM_STD_COLORS	int
]	O
=	O
{	O
'r'	O
,	O
'g'	O
,	O
'b'	O
,	O
'c'	O
,	O
'm'	O
,	O
'y'	O
,	O
'd'	O
,	O
'w'	O
}	O
;	O
static	O
int	O
rgb_to_best_stdcolor	function
(	O
plColor	struct
rgb	struct
)	O
;	O
void	O
_pl_r_set_pen_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
int	O
new_color	int
;	O
new_color	int
=	O
rgb_to_best_stdcolor	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
regis_fgcolor_is_unknown	enum
||	O
_plotter	pointer
->	O
regis_fgcolor	int
!=	O
new_color	int
)	O
{	O
char	O
tmpbuf	array
[	O
32	int
]	O
;	O
sprintf	function
(	O
tmpbuf	array
,	O
"W(I(%c))\n"	pointer
,	O
regis_color_chars	array
[	O
new_color	int
]	O
)	O
;	O
_write_string	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
tmpbuf	array
)	O
;	O
_plotter	pointer
->	O
regis_fgcolor	int
=	O
new_color	int
;	O
_plotter	pointer
->	O
regis_fgcolor_is_unknown	enum
=	O
false	int
;	O
}	O
}	O
void	O
_pl_r_set_fill_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
int	O
new_color	int
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fill_type	int
==	O
0	int
)	O
return	O
;	O
new_color	int
=	O
rgb_to_best_stdcolor	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
regis_fgcolor_is_unknown	enum
||	O
_plotter	pointer
->	O
regis_fgcolor	int
!=	O
new_color	int
)	O
{	O
char	O
tmpbuf	array
[	O
32	int
]	O
;	O
sprintf	function
(	O
tmpbuf	array
,	O
"W(I(%c))\n"	pointer
,	O
regis_color_chars	array
[	O
new_color	int
]	O
)	O
;	O
_write_string	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
tmpbuf	array
)	O
;	O
_plotter	pointer
->	O
regis_fgcolor	int
=	O
new_color	int
;	O
_plotter	pointer
->	O
regis_fgcolor_is_unknown	enum
=	O
false	int
;	O
}	O
}	O
void	O
_pl_r_set_bg_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
int	O
new_color	int
;	O
new_color	int
=	O
rgb_to_best_stdcolor	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
regis_bgcolor_is_unknown	enum
||	O
_plotter	pointer
->	O
regis_bgcolor	int
!=	O
new_color	int
)	O
{	O
char	O
tmpbuf	array
[	O
32	int
]	O
;	O
sprintf	function
(	O
tmpbuf	array
,	O
"S(I(%c))\n"	pointer
,	O
regis_color_chars	array
[	O
new_color	int
]	O
)	O
;	O
_write_string	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
tmpbuf	array
)	O
;	O
_plotter	pointer
->	O
regis_bgcolor	int
=	O
new_color	int
;	O
_plotter	pointer
->	O
regis_bgcolor_is_unknown	enum
=	O
false	int
;	O
}	O
}	O
static	O
int	O
rgb_to_best_stdcolor	function
(	O
plColor	struct
rgb	struct
)	O
{	O
int	O
red	int
,	O
green	int
,	O
blue	int
;	O
unsigned	O
long	O
int	O
difference	long
=	O
INT_MAX	O
;	O
int	O
i	int
,	O
best	int
=	O
0	int
;	O
red	int
=	O
rgb	struct
.	O
red	int
;	O
green	int
=	O
rgb	struct
.	O
green	int
;	O
blue	int
=	O
rgb	struct
.	O
blue	int
;	O
red	int
=	O
(	O
red	int
>>	O
8	int
)	O
&	O
ONEBYTE	int
;	O
green	int
=	O
(	O
green	int
>>	O
8	int
)	O
&	O
ONEBYTE	int
;	O
blue	int
=	O
(	O
blue	int
>>	O
8	int
)	O
&	O
ONEBYTE	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
REGIS_NUM_STD_COLORS	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
long	O
int	O
newdifference	long
;	O
newdifference	long
=	O
(	O
(	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
*	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
)	O
+	O
(	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
*	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
)	O
+	O
(	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
*	O
(	O
regis_stdcolors	array
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
)	O
)	O
;	O
if	O
(	O
newdifference	long
<	O
difference	long
)	O
{	O
difference	long
=	O
newdifference	long
;	O
best	int
=	O
i	int
;	O
}	O
}	O
return	O
best	int
;	O
}	O
