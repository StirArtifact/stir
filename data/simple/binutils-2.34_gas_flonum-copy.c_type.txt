void	O
flonum_copy	function
(	O
FLONUM_TYPE	struct
*	O
in	pointer
,	O
FLONUM_TYPE	struct
*	O
out	pointer
)	O
{	O
unsigned	O
int	O
in_length	int
;	O
unsigned	O
int	O
out_length	int
;	O
out	pointer
->	O
sign	char
=	O
in	pointer
->	O
sign	char
;	O
in_length	int
=	O
in	pointer
->	O
leader	pointer
-	O
in	pointer
->	O
low	pointer
;	O
if	O
(	O
in	pointer
->	O
leader	pointer
<	O
in	pointer
->	O
low	pointer
)	O
{	O
out	pointer
->	O
leader	pointer
=	O
out	pointer
->	O
low	pointer
-	O
1	int
;	O
}	O
else	O
{	O
out_length	int
=	O
out	pointer
->	O
high	pointer
-	O
out	pointer
->	O
low	pointer
;	O
if	O
(	O
in_length	int
<=	O
out_length	int
)	O
{	O
{	O
if	O
(	O
in_length	int
<	O
out_length	int
)	O
{	O
memset	function
(	O
(	O
char	O
*	O
)	O
(	O
out	pointer
->	O
low	pointer
+	O
in_length	int
+	O
1	int
)	O
,	O
'\0'	O
,	O
out_length	int
-	O
in_length	int
)	O
;	O
}	O
}	O
memcpy	function
(	O
(	O
void	O
*	O
)	O
(	O
out	pointer
->	O
low	pointer
)	O
,	O
(	O
void	O
*	O
)	O
(	O
in	pointer
->	O
low	pointer
)	O
,	O
(	O
(	O
in_length	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
LITTLENUM_TYPE	short
)	O
)	O
)	O
;	O
out	pointer
->	O
exponent	long
=	O
in	pointer
->	O
exponent	long
;	O
out	pointer
->	O
leader	pointer
=	O
in	pointer
->	O
leader	pointer
-	O
in	pointer
->	O
low	pointer
+	O
out	pointer
->	O
low	pointer
;	O
}	O
else	O
{	O
int	O
shorten	int
;	O
shorten	int
=	O
in_length	int
-	O
out_length	int
;	O
memcpy	function
(	O
(	O
void	O
*	O
)	O
(	O
out	pointer
->	O
low	pointer
)	O
,	O
(	O
void	O
*	O
)	O
(	O
in	pointer
->	O
low	pointer
+	O
shorten	int
)	O
,	O
(	O
(	O
out_length	int
+	O
1	int
)	O
*	O
sizeof	O
(	O
LITTLENUM_TYPE	short
)	O
)	O
)	O
;	O
out	pointer
->	O
leader	pointer
=	O
out	pointer
->	O
high	pointer
;	O
out	pointer
->	O
exponent	long
=	O
in	pointer
->	O
exponent	long
+	O
shorten	int
;	O
}	O
}	O
}	O
