int	O
hmac_sha1	function
(	O
const	O
void	O
*	O
key	pointer
,	O
size_t	long
keylen	long
,	O
const	O
void	O
*	O
in	pointer
,	O
size_t	long
inlen	long
,	O
void	O
*	O
resbuf	pointer
)	O
{	O
struct	O
sha1_ctx	struct
inner	struct
;	O
struct	O
sha1_ctx	struct
outer	struct
;	O
char	O
optkeybuf	array
[	O
20	int
]	O
;	O
char	O
block	array
[	O
64	int
]	O
;	O
char	O
innerhash	array
[	O
20	int
]	O
;	O
if	O
(	O
keylen	long
>	O
64	int
)	O
{	O
struct	O
sha1_ctx	struct
keyhash	struct
;	O
sha1_init_ctx	function
(	O
&	O
keyhash	struct
)	O
;	O
sha1_process_bytes	function
(	O
key	pointer
,	O
keylen	long
,	O
&	O
keyhash	struct
)	O
;	O
sha1_finish_ctx	function
(	O
&	O
keyhash	struct
,	O
optkeybuf	array
)	O
;	O
key	pointer
=	O
optkeybuf	array
;	O
keylen	long
=	O
20	int
;	O
}	O
sha1_init_ctx	function
(	O
&	O
inner	struct
)	O
;	O
memset	function
(	O
block	array
,	O
IPAD	int
,	O
sizeof	O
(	O
block	array
)	O
)	O
;	O
memxor	function
(	O
block	array
,	O
key	pointer
,	O
keylen	long
)	O
;	O
sha1_process_block	function
(	O
block	array
,	O
64	int
,	O
&	O
inner	struct
)	O
;	O
sha1_process_bytes	function
(	O
in	pointer
,	O
inlen	long
,	O
&	O
inner	struct
)	O
;	O
sha1_finish_ctx	function
(	O
&	O
inner	struct
,	O
innerhash	array
)	O
;	O
sha1_init_ctx	function
(	O
&	O
outer	struct
)	O
;	O
memset	function
(	O
block	array
,	O
OPAD	int
,	O
sizeof	O
(	O
block	array
)	O
)	O
;	O
memxor	function
(	O
block	array
,	O
key	pointer
,	O
keylen	long
)	O
;	O
sha1_process_block	function
(	O
block	array
,	O
64	int
,	O
&	O
outer	struct
)	O
;	O
sha1_process_bytes	function
(	O
innerhash	array
,	O
20	int
,	O
&	O
outer	struct
)	O
;	O
sha1_finish_ctx	function
(	O
&	O
outer	struct
,	O
resbuf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
