static	O
boolean	int
fslock_sys	function
P	O
(	O
(	O
boolean	int
,	O
const	O
char	O
*	O
)	O
)	O
;	O
static	O
boolean	int
fslock_sys	function
(	O
flock	int
,	O
zname	pointer
)	O
boolean	int
flock	int
;	O
const	O
char	O
*	O
zname	pointer
;	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
z	pointer
;	O
boolean	int
fret	int
;	O
clen	long
=	O
strlen	function
(	O
zname	pointer
)	O
;	O
z	pointer
=	O
zbufalc	function
(	O
sizeof	O
"LCK.."	pointer
+	O
clen	long
)	O
;	O
memcpy	function
(	O
z	pointer
,	O
"LCK.."	pointer
,	O
sizeof	O
"LCK.."	pointer
-	O
1	int
)	O
;	O
memcpy	function
(	O
z	pointer
+	O
sizeof	O
"LCK.."	pointer
-	O
1	int
,	O
zname	pointer
,	O
clen	long
)	O
;	O
z	pointer
[	O
sizeof	O
"LCK.."	pointer
-	O
1	int
+	O
clen	long
]	O
=	O
'\0'	O
;	O
if	O
(	O
flock	int
)	O
fret	int
=	O
fsdo_lock	function
(	O
z	pointer
,	O
FALSE	O
,	O
(	O
boolean	int
*	O
)	O
NULL	O
)	O
;	O
else	O
fret	int
=	O
fsdo_unlock	function
(	O
z	pointer
,	O
FALSE	O
)	O
;	O
ubuffree	function
(	O
z	pointer
)	O
;	O
return	O
fret	int
;	O
}	O
boolean	int
fsysdep_lock_system	function
(	O
qsys	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
{	O
return	O
fslock_sys	function
(	O
TRUE	O
,	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
}	O
boolean	int
fsysdep_unlock_system	function
(	O
qsys	pointer
)	O
const	O
struct	O
uuconf_system	struct
*	O
qsys	pointer
;	O
{	O
return	O
fslock_sys	function
(	O
FALSE	O
,	O
qsys	pointer
->	O
uuconf_zname	pointer
)	O
;	O
}	O
