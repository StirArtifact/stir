int	O
osip_authentication_info_init	function
(	O
osip_authentication_info_t	struct
*	O
*	O
dest	pointer
)	O
{	O
*	O
dest	pointer
=	O
(	O
osip_authentication_info_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_authentication_info_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
dest	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	function
(	O
*	O
dest	pointer
,	O
0	int
,	O
sizeof	O
(	O
osip_authentication_info_t	struct
)	O
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_set_authentication_info	function
(	O
osip_message_t	struct
*	O
sip	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
;	O
int	O
i	int
;	O
if	O
(	O
hvalue	pointer
==	O
NULL	O
||	O
hvalue	pointer
[	O
0	int
]	O
==	O
'\0'	O
)	O
return	O
OSIP_SUCCESS	int
;	O
if	O
(	O
sip	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_authentication_info_init	function
(	O
&	O
authentication_info	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
i	int
=	O
osip_authentication_info_parse	function
(	O
authentication_info	pointer
,	O
hvalue	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
{	O
osip_authentication_info_free	function
(	O
authentication_info	pointer
)	O
;	O
return	O
i	int
;	O
}	O
sip	pointer
->	O
message_property	int
=	O
2	int
;	O
osip_list_add	function
(	O
&	O
sip	pointer
->	O
authentication_infos	struct
,	O
authentication_info	pointer
,	O
-	O
1	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_authentication_info_parse	function
(	O
osip_authentication_info_t	struct
*	O
ainfo	pointer
,	O
const	O
char	O
*	O
hvalue	pointer
)	O
{	O
const	O
char	O
*	O
space	pointer
,	O
*	O
hack	pointer
;	O
const	O
char	O
*	O
next	pointer
=	O
NULL	O
;	O
int	O
i	int
;	O
space	pointer
=	O
strchr	function
(	O
hvalue	pointer
,	O
' '	O
)	O
;	O
hack	pointer
=	O
strchr	function
(	O
hvalue	pointer
,	O
'='	O
)	O
;	O
if	O
(	O
space	pointer
&&	O
hack	pointer
&&	O
hack	pointer
>	O
space	pointer
)	O
{	O
ainfo	pointer
->	O
auth_type	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
space	pointer
-	O
hvalue	pointer
+	O
1	int
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
auth_type	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
osip_strncpy	function
(	O
ainfo	pointer
->	O
auth_type	pointer
,	O
hvalue	pointer
,	O
space	pointer
-	O
hvalue	pointer
)	O
;	O
}	O
else	O
space	pointer
=	O
hvalue	pointer
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
parse_ok	int
=	O
0	int
;	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"nextnonce"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
nextnonce	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"cnonce"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
cnonce	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"rspauth"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
rspauth	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	function
(	O
"nc"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
nonce_count	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_token_set	function
(	O
"qop"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
qop_options	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"snum"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
snum	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"srand"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
srand	function
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"targetname"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
targetname	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"realm"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
realm	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
i	int
=	O
__osip_quoted_string_set	function
(	O
"opaque"	pointer
,	O
space	pointer
,	O
&	O
(	O
ainfo	pointer
->	O
opaque	pointer
)	O
,	O
&	O
next	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
next	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
else	O
if	O
(	O
next	pointer
!=	O
space	pointer
)	O
{	O
space	pointer
=	O
next	pointer
;	O
parse_ok	int
++	O
;	O
}	O
if	O
(	O
0	int
==	O
parse_ok	int
)	O
{	O
const	O
char	O
*	O
quote1	pointer
,	O
*	O
quote2	pointer
,	O
*	O
tmp	pointer
;	O
if	O
(	O
strlen	function
(	O
space	pointer
)	O
<	O
1	int
)	O
return	O
OSIP_SUCCESS	int
;	O
tmp	pointer
=	O
strchr	function
(	O
space	pointer
+	O
1	int
,	O
','	O
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
quote1	pointer
=	O
__osip_quote_find	function
(	O
space	pointer
)	O
;	O
if	O
(	O
(	O
quote1	pointer
!=	O
NULL	O
)	O
&&	O
(	O
quote1	pointer
<	O
tmp	pointer
)	O
)	O
{	O
quote2	pointer
=	O
__osip_quote_find	function
(	O
quote1	pointer
+	O
1	int
)	O
;	O
if	O
(	O
quote2	pointer
==	O
NULL	O
)	O
return	O
OSIP_SYNTAXERROR	O
;	O
if	O
(	O
tmp	pointer
<	O
quote2	pointer
)	O
space	pointer
=	O
strchr	function
(	O
quote2	pointer
,	O
','	O
)	O
;	O
else	O
space	pointer
=	O
tmp	pointer
;	O
if	O
(	O
space	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
}	O
else	O
space	pointer
=	O
tmp	pointer
;	O
}	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_message_get_authentication_info	function
(	O
const	O
osip_message_t	struct
*	O
sip	pointer
,	O
int	O
pos	int
,	O
osip_authentication_info_t	struct
*	O
*	O
dest	pointer
)	O
{	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
osip_list_size	function
(	O
&	O
sip	pointer
->	O
authentication_infos	struct
)	O
<=	O
pos	int
)	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
authentication_info	pointer
=	O
(	O
osip_authentication_info_t	struct
*	O
)	O
osip_list_get	function
(	O
&	O
sip	pointer
->	O
authentication_infos	struct
,	O
pos	int
)	O
;	O
*	O
dest	pointer
=	O
authentication_info	pointer
;	O
return	O
pos	int
;	O
}	O
char	O
*	O
osip_authentication_info_get_auth_type	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
auth_type	pointer
;	O
}	O
void	O
osip_authentication_info_set_auth_type	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
auth_type	pointer
)	O
{	O
authentication_info	pointer
->	O
auth_type	pointer
=	O
(	O
char	O
*	O
)	O
auth_type	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_nextnonce	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
nextnonce	pointer
;	O
}	O
void	O
osip_authentication_info_set_nextnonce	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
nextnonce	pointer
)	O
{	O
authentication_info	pointer
->	O
nextnonce	pointer
=	O
(	O
char	O
*	O
)	O
nextnonce	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_cnonce	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
cnonce	pointer
;	O
}	O
void	O
osip_authentication_info_set_cnonce	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
cnonce	pointer
)	O
{	O
authentication_info	pointer
->	O
cnonce	pointer
=	O
(	O
char	O
*	O
)	O
cnonce	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_rspauth	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
rspauth	pointer
;	O
}	O
void	O
osip_authentication_info_set_rspauth	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
rspauth	pointer
)	O
{	O
authentication_info	pointer
->	O
rspauth	pointer
=	O
(	O
char	O
*	O
)	O
rspauth	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_nonce_count	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
nonce_count	pointer
;	O
}	O
void	O
osip_authentication_info_set_nonce_count	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
nonce_count	pointer
)	O
{	O
authentication_info	pointer
->	O
nonce_count	pointer
=	O
(	O
char	O
*	O
)	O
nonce_count	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_qop_options	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
qop_options	pointer
;	O
}	O
void	O
osip_authentication_info_set_qop_options	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
qop_options	pointer
)	O
{	O
authentication_info	pointer
->	O
qop_options	pointer
=	O
(	O
char	O
*	O
)	O
qop_options	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_snum	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
snum	pointer
;	O
}	O
void	O
osip_authentication_info_set_snum	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
snum	pointer
)	O
{	O
authentication_info	pointer
->	O
snum	pointer
=	O
(	O
char	O
*	O
)	O
snum	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_srand	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
srand	function
;	O
}	O
void	O
osip_authentication_info_set_srand	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
srand	function
)	O
{	O
authentication_info	pointer
->	O
srand	function
=	O
(	O
char	O
*	O
)	O
srand	function
;	O
}	O
char	O
*	O
osip_authentication_info_get_targetname	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
targetname	pointer
;	O
}	O
void	O
osip_authentication_info_set_targetname	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
targetname	pointer
)	O
{	O
authentication_info	pointer
->	O
targetname	pointer
=	O
(	O
char	O
*	O
)	O
targetname	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_realm	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
realm	pointer
;	O
}	O
void	O
osip_authentication_info_set_realm	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
realm	pointer
)	O
{	O
authentication_info	pointer
->	O
realm	pointer
=	O
(	O
char	O
*	O
)	O
realm	pointer
;	O
}	O
char	O
*	O
osip_authentication_info_get_opaque	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
return	O
authentication_info	pointer
->	O
opaque	pointer
;	O
}	O
void	O
osip_authentication_info_set_opaque	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
,	O
char	O
*	O
opaque	pointer
)	O
{	O
authentication_info	pointer
->	O
opaque	pointer
=	O
(	O
char	O
*	O
)	O
opaque	pointer
;	O
}	O
int	O
osip_authentication_info_to_str	function
(	O
const	O
osip_authentication_info_t	struct
*	O
ainfo	pointer
,	O
char	O
*	O
*	O
dest	pointer
)	O
{	O
size_t	long
len	long
;	O
char	O
*	O
tmp	pointer
,	O
*	O
start	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
ainfo	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
=	O
0	int
;	O
if	O
(	O
ainfo	pointer
->	O
auth_type	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
auth_type	pointer
)	O
+	O
1	int
;	O
if	O
(	O
ainfo	pointer
->	O
nextnonce	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
nextnonce	pointer
)	O
+	O
12	int
;	O
if	O
(	O
ainfo	pointer
->	O
rspauth	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
rspauth	pointer
)	O
+	O
10	int
;	O
if	O
(	O
ainfo	pointer
->	O
cnonce	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
cnonce	pointer
)	O
+	O
9	int
;	O
if	O
(	O
ainfo	pointer
->	O
nonce_count	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
nonce_count	pointer
)	O
+	O
5	int
;	O
if	O
(	O
ainfo	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
qop_options	pointer
)	O
+	O
6	int
;	O
if	O
(	O
ainfo	pointer
->	O
snum	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
snum	pointer
)	O
+	O
7	int
;	O
if	O
(	O
ainfo	pointer
->	O
srand	function
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
srand	function
)	O
+	O
8	int
;	O
if	O
(	O
ainfo	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
targetname	pointer
)	O
+	O
13	int
;	O
if	O
(	O
ainfo	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
realm	pointer
)	O
+	O
8	int
;	O
if	O
(	O
ainfo	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
len	long
=	O
len	long
+	O
strlen	function
(	O
ainfo	pointer
->	O
opaque	pointer
)	O
+	O
9	int
;	O
if	O
(	O
len	long
==	O
0	int
)	O
return	O
OSIP_BADPARAMETER	O
;	O
len	long
++	O
;	O
tmp	pointer
=	O
(	O
char	O
*	O
)	O
osip_malloc	O
(	O
len	long
)	O
;	O
if	O
(	O
tmp	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
*	O
dest	pointer
=	O
tmp	pointer
;	O
start	pointer
=	O
tmp	pointer
;	O
if	O
(	O
ainfo	pointer
->	O
auth_type	pointer
!=	O
NULL	O
)	O
{	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
auth_type	pointer
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
" "	pointer
)	O
;	O
start	pointer
=	O
tmp	pointer
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"qop="	pointer
,	O
4	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
qop_options	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
nextnonce	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"nextnonce="	pointer
,	O
10	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
nextnonce	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
rspauth	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"rspauth="	pointer
,	O
8	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
rspauth	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
cnonce	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"cnonce="	pointer
,	O
7	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
cnonce	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
nonce_count	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"nc="	pointer
,	O
3	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
nonce_count	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
snum	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"snum="	pointer
,	O
5	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
snum	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
srand	function
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"srand="	pointer
,	O
6	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
srand	function
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"targetname="	pointer
,	O
11	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
targetname	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"realm="	pointer
,	O
6	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
realm	pointer
)	O
;	O
}	O
if	O
(	O
ainfo	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
{	O
if	O
(	O
tmp	pointer
!=	O
start	pointer
)	O
{	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
", "	pointer
,	O
2	int
)	O
;	O
}	O
tmp	pointer
=	O
osip_strn_append	function
(	O
tmp	pointer
,	O
"opaque="	pointer
,	O
7	int
)	O
;	O
tmp	pointer
=	O
osip_str_append	function
(	O
tmp	pointer
,	O
ainfo	pointer
->	O
opaque	pointer
)	O
;	O
}	O
return	O
OSIP_SUCCESS	int
;	O
}	O
void	O
osip_authentication_info_free	function
(	O
osip_authentication_info_t	struct
*	O
authentication_info	pointer
)	O
{	O
if	O
(	O
authentication_info	pointer
==	O
NULL	O
)	O
return	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
auth_type	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
nextnonce	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
rspauth	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
cnonce	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
nonce_count	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
qop_options	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
snum	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
srand	function
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
targetname	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
realm	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
->	O
opaque	pointer
)	O
;	O
osip_free	O
(	O
authentication_info	pointer
)	O
;	O
}	O
int	O
osip_authentication_info_clone	function
(	O
const	O
osip_authentication_info_t	struct
*	O
ainfo	pointer
,	O
osip_authentication_info_t	struct
*	O
*	O
dest	pointer
)	O
{	O
int	O
i	int
;	O
osip_authentication_info_t	struct
*	O
wa	pointer
;	O
*	O
dest	pointer
=	O
NULL	O
;	O
if	O
(	O
ainfo	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
i	int
=	O
osip_authentication_info_init	function
(	O
&	O
wa	pointer
)	O
;	O
if	O
(	O
i	int
!=	O
0	int
)	O
return	O
i	int
;	O
if	O
(	O
ainfo	pointer
->	O
auth_type	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
auth_type	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
auth_type	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
nextnonce	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
nextnonce	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
nextnonce	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
cnonce	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
cnonce	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
cnonce	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
rspauth	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
rspauth	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
rspauth	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
nonce_count	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
nonce_count	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
nonce_count	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
qop_options	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
qop_options	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
qop_options	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
snum	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
snum	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
snum	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
srand	function
!=	O
NULL	O
)	O
wa	pointer
->	O
srand	function
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
srand	function
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
targetname	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
targetname	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
targetname	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
realm	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
realm	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
realm	pointer
)	O
;	O
if	O
(	O
ainfo	pointer
->	O
opaque	pointer
!=	O
NULL	O
)	O
wa	pointer
->	O
opaque	pointer
=	O
osip_strdup	function
(	O
ainfo	pointer
->	O
opaque	pointer
)	O
;	O
*	O
dest	pointer
=	O
wa	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
