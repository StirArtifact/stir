static	O
int	O
first	pointer
=	O
0	int
;	O
static	O
int	O
changed	int
;	O
static	O
int	O
last	pointer
;	O
char	O
*	O
save_fastmode	array
[	O
]	O
=	O
{	O
"zero"	pointer
,	O
"never"	pointer
,	O
"animation"	pointer
,	O
"new"	pointer
,	O
"allways"	pointer
}	O
;	O
char	O
*	O
xtextposnames	array
[	O
]	O
=	O
{	O
"left"	pointer
,	O
"center"	pointer
,	O
"right"	pointer
,	O
NULL	O
}	O
;	O
char	O
*	O
ytextposnames	array
[	O
]	O
=	O
{	O
"top"	pointer
,	O
"middle"	pointer
,	O
"bottom"	pointer
,	O
NULL	O
}	O
;	O
static	O
void	O
outputerror	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
outputerror	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
static	O
char	O
error	array
[	O
245	int
]	O
;	O
if	O
(	O
uih	pointer
->	O
savec	pointer
->	O
writefailed	int
)	O
return	O
;	O
sprintf	function
(	O
error	array
,	O
"Write failed:%s"	pointer
,	O
xio_errorstring	O
(	O
)	O
)	O
;	O
uih	pointer
->	O
errstring	pointer
=	O
error	array
;	O
uih	pointer
->	O
savec	pointer
->	O
writefailed	int
=	O
1	int
;	O
}	O
static	O
void	O
start_save	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
start_save	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
if	O
(	O
!	O
changed	int
&&	O
!	O
uih	pointer
->	O
savec	pointer
->	O
firsttime	int
)	O
{	O
myprintf	O
(	O
"\n(usleep %i)\n"	pointer
,	O
tl_lookup_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
timer	struct
)	O
)	O
;	O
tl_reset_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
timer	struct
)	O
;	O
}	O
changed	int
=	O
1	int
;	O
myputc	O
(	O
'('	O
)	O
;	O
myputs	O
(	O
name	pointer
)	O
;	O
first	pointer
=	O
0	int
;	O
}	O
static	O
void	O
stop_save	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
stop_save	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
myputc	O
(	O
')'	O
)	O
;	O
myputc	O
(	O
'\n'	O
)	O
;	O
}	O
static	O
void	O
save_keystring	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_keystring	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
myputc	O
(	O
'\''	O
)	O
;	O
myputs	O
(	O
name	pointer
)	O
;	O
}	O
static	O
void	O
save_float	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
number_t	double
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_float	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
number_t	double
number	double
)	O
{	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
myprintf	O
(	O
"%.20G"	pointer
,	O
(	O
double	O
)	O
number	double
)	O
;	O
}	O
static	O
void	O
save_float2	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
number_t	double
number	double
,	O
int	O
places	int
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_float2	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
number_t	double
number	double
,	O
int	O
places	int
)	O
{	O
char	O
fs	array
[	O
10	int
]	O
;	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
if	O
(	O
places	int
<	O
0	int
)	O
places	int
=	O
0	int
;	O
if	O
(	O
places	int
>	O
20	int
)	O
places	int
=	O
20	int
;	O
sprintf	function
(	O
fs	array
,	O
"%%.%iG"	pointer
,	O
places	int
)	O
;	O
myprintf	O
(	O
fs	array
,	O
(	O
double	O
)	O
number	double
)	O
;	O
}	O
static	O
void	O
save_int	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_int	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
)	O
{	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
myprintf	O
(	O
"%i"	pointer
,	O
number	double
)	O
;	O
}	O
static	O
void	O
save_onoff	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_onoff	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
)	O
{	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
myputs	O
(	O
number	double
?	O
"#t"	pointer
:	O
"#f"	pointer
)	O
;	O
}	O
static	O
void	O
save_string	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
text	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_string	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
text	pointer
)	O
{	O
int	O
i	pointer
=	O
0	int
;	O
if	O
(	O
!	O
first	pointer
)	O
myputc	O
(	O
' '	O
)	O
;	O
else	O
first	pointer
=	O
0	int
;	O
myputc	O
(	O
'"'	O
)	O
;	O
while	O
(	O
text	pointer
[	O
i	pointer
]	O
!=	O
0	int
)	O
{	O
if	O
(	O
text	pointer
[	O
i	pointer
]	O
==	O
'"'	O
)	O
myputc	O
(	O
'\\'	O
)	O
;	O
myputc	O
(	O
text	pointer
[	O
i	pointer
]	O
)	O
;	O
i	pointer
++	O
;	O
}	O
myputc	O
(	O
'"'	O
)	O
;	O
}	O
static	O
void	O
save_intc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_intc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_int	function
(	O
uih	pointer
,	O
number	double
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_onoffc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_onoffc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_onoff	function
(	O
uih	pointer
,	O
number	double
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_floatc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_floatc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_float	function
(	O
uih	pointer
,	O
number	double
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_float2c	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
,	O
int	O
places	int
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_float2c	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
,	O
int	O
places	int
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
number	double
,	O
places	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_coordc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
,	O
number_t	double
number2	double
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_coordc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
number_t	double
number	double
,	O
number_t	double
number2	double
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_float	function
(	O
uih	pointer
,	O
number	double
)	O
;	O
save_float	function
(	O
uih	pointer
,	O
number2	double
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_keystringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
param	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_keystringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
param	pointer
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_keystring	function
(	O
uih	pointer
,	O
param	pointer
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_stringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
param	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_stringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
param	pointer
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
save_string	function
(	O
uih	pointer
,	O
param	pointer
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_noparam	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_noparam	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
name	pointer
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
static	O
void	O
save_nstring	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
,	O
char	O
*	O
*	O
texts	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_nstring	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
int	O
number	double
,	O
char	O
*	O
*	O
texts	pointer
)	O
{	O
save_keystring	function
(	O
uih	pointer
,	O
texts	pointer
[	O
number	double
]	O
)	O
;	O
}	O
static	O
void	O
save_nstringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
,	O
char	O
*	O
*	O
texts	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
save_nstringc	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
number	double
,	O
char	O
*	O
*	O
texts	pointer
)	O
{	O
save_keystringc	function
(	O
uih	pointer
,	O
name	pointer
,	O
texts	pointer
[	O
number	double
]	O
)	O
;	O
}	O
static	O
int	O
ndecimals	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
number_t	double
n	int
=	O
10000	int
;	O
number_t	double
m	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
rr	double
;	O
int	O
i	pointer
;	O
if	O
(	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
<	O
m	double
)	O
m	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
;	O
if	O
(	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
>	O
100	int
||	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
rr	double
>	O
100	int
)	O
return	O
(	O
20	int
)	O
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
20	int
&&	O
m	double
<	O
n	int
;	O
i	pointer
++	O
,	O
n	int
/=	O
10	int
)	O
;	O
return	O
(	O
i	pointer
)	O
;	O
}	O
static	O
void	O
savepos	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
savepos	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
int	O
n	int
=	O
ndecimals	function
(	O
uih	pointer
)	O
;	O
start_save	function
(	O
uih	pointer
,	O
"view"	pointer
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
cr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ci	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
rr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
,	O
n	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
uih	pointer
->	O
savec	pointer
->	O
fcontext	pointer
->	O
s	struct
=	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
;	O
}	O
static	O
void	O
savepos2	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
savepos2	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
int	O
n	int
=	O
ndecimals	function
(	O
uih	pointer
)	O
;	O
start_save	function
(	O
uih	pointer
,	O
"animateview"	pointer
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
cr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ci	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
rr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
,	O
n	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
uih	pointer
->	O
savec	pointer
->	O
fcontext	pointer
->	O
s	struct
=	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
;	O
}	O
static	O
void	O
savepos3	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
REGISTERS	O
(	O
3	int
)	O
;	O
static	O
void	O
savepos3	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
int	O
n	int
=	O
ndecimals	function
(	O
uih	pointer
)	O
;	O
start_save	function
(	O
uih	pointer
,	O
"morphview"	pointer
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
cr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ci	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
rr	double
,	O
n	int
)	O
;	O
save_float2	function
(	O
uih	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
.	O
ri	double
,	O
n	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
uih	pointer
->	O
savec	pointer
->	O
fcontext	pointer
->	O
s	struct
=	O
uih	pointer
->	O
fcontext	pointer
->	O
s	struct
;	O
}	O
void	O
uih_saveframe	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
struct	O
uih_savedcontext	struct
*	O
s	struct
=	O
uih	pointer
->	O
savec	pointer
;	O
int	O
i	pointer
;	O
int	O
resetsync	int
=	O
0	int
;	O
if	O
(	O
uih	pointer
->	O
save	int
)	O
{	O
changed	int
=	O
0	int
;	O
if	O
(	O
s	struct
->	O
firsttime	int
)	O
save_noparam	function
(	O
uih	pointer
,	O
"initstate"	pointer
)	O
;	O
if	O
(	O
s	struct
->	O
nonfractalscreen	int
&&	O
!	O
uih	pointer
->	O
nonfractalscreen	int
)	O
save_noparam	function
(	O
uih	pointer
,	O
"display"	pointer
)	O
,	O
s	struct
->	O
nonfractalscreen	int
=	O
0	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
uih_nfilters	int
;	O
i	pointer
++	O
)	O
{	O
if	O
(	O
uih	pointer
->	O
filter	struct
[	O
i	pointer
]	O
!=	O
NULL	O
)	O
{	O
if	O
(	O
s	struct
->	O
filter	struct
[	O
i	pointer
]	O
!=	O
1	int
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
"filter"	pointer
)	O
;	O
save_keystring	function
(	O
uih	pointer
,	O
uih	pointer
->	O
filter	struct
[	O
i	pointer
]	O
->	O
action	pointer
->	O
shortname	pointer
)	O
;	O
save_onoff	function
(	O
uih	pointer
,	O
1	int
)	O
;	O
s	struct
->	O
filter	struct
[	O
i	pointer
]	O
=	O
1	int
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
s	struct
->	O
filter	struct
[	O
i	pointer
]	O
!=	O
0	int
)	O
{	O
s	struct
->	O
filter	struct
[	O
i	pointer
]	O
=	O
0	int
;	O
start_save	function
(	O
uih	pointer
,	O
"filter"	pointer
)	O
;	O
save_keystring	function
(	O
uih	pointer
,	O
uih_filters	array
[	O
i	pointer
]	O
->	O
shortname	pointer
)	O
;	O
save_onoff	function
(	O
uih	pointer
,	O
0	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
}	O
}	O
if	O
(	O
uih	pointer
->	O
palettechanged	int
)	O
{	O
switch	O
(	O
uih	pointer
->	O
palettetype	int
)	O
{	O
case	O
0	int
:	O
save_intc	function
(	O
uih	pointer
,	O
"defaultpalette"	pointer
,	O
uih	pointer
->	O
paletteshift	int
)	O
;	O
break	O
;	O
default	O
:	O
start_save	function
(	O
uih	pointer
,	O
"palette"	pointer
)	O
;	O
save_int	function
(	O
uih	pointer
,	O
uih	pointer
->	O
palettetype	int
)	O
;	O
save_int	function
(	O
uih	pointer
,	O
uih	pointer
->	O
paletteseed	int
)	O
;	O
save_int	function
(	O
uih	pointer
,	O
uih	pointer
->	O
paletteshift	int
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
break	O
;	O
}	O
uih	pointer
->	O
palettechanged	int
=	O
0	int
;	O
}	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
currentformula	pointer
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
currentformula	pointer
)	O
{	O
save_keystringc	function
(	O
uih	pointer
,	O
"formula"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
currentformula	pointer
->	O
shortname	pointer
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
currentformula	pointer
=	O
uih	pointer
->	O
fcontext	pointer
->	O
currentformula	pointer
;	O
set_formula	function
(	O
s	struct
->	O
fcontext	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
currentformula	pointer
-	O
formulas	int
)	O
;	O
}	O
if	O
(	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEALL	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"letterspersec"	pointer
,	O
uih	pointer
->	O
letterspersec	int
)	O
;	O
if	O
(	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
)	O
{	O
if	O
(	O
s	struct
->	O
speedup	double
!=	O
uih	pointer
->	O
speedup	double
)	O
save_floatc	function
(	O
uih	pointer
,	O
"speedup"	pointer
,	O
uih	pointer
->	O
speedup	double
)	O
,	O
s	struct
->	O
speedup	double
=	O
uih	pointer
->	O
speedup	double
;	O
if	O
(	O
s	struct
->	O
maxstep	double
!=	O
uih	pointer
->	O
maxstep	double
)	O
save_floatc	function
(	O
uih	pointer
,	O
"maxstep"	pointer
,	O
uih	pointer
->	O
maxstep	double
)	O
,	O
s	struct
->	O
maxstep	double
=	O
uih	pointer
->	O
maxstep	double
;	O
if	O
(	O
s	struct
->	O
fastmode	int
!=	O
uih	pointer
->	O
fastmode	int
)	O
save_nstringc	function
(	O
uih	pointer
,	O
"fastmode"	pointer
,	O
uih	pointer
->	O
fastmode	int
,	O
save_fastmode	array
)	O
,	O
s	struct
->	O
fastmode	int
=	O
uih	pointer
->	O
fastmode	int
;	O
}	O
if	O
(	O
s	struct
->	O
juliamode	int
!=	O
uih	pointer
->	O
juliamode	int
)	O
save_onoffc	function
(	O
uih	pointer
,	O
"fastjulia"	pointer
,	O
uih	pointer
->	O
juliamode	int
)	O
,	O
s	struct
->	O
juliamode	int
=	O
uih	pointer
->	O
juliamode	int
;	O
if	O
(	O
s	struct
->	O
cycling	int
!=	O
uih	pointer
->	O
cycling	int
)	O
save_onoffc	function
(	O
uih	pointer
,	O
"cycling"	pointer
,	O
uih	pointer
->	O
cycling	int
)	O
,	O
s	struct
->	O
cycling	int
=	O
uih	pointer
->	O
cycling	int
;	O
if	O
(	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEPOS	int
&&	O
s	struct
->	O
fcontext	pointer
->	O
periodicity	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
periodicity	int
)	O
save_onoffc	function
(	O
uih	pointer
,	O
"periodicity"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
periodicity	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
periodicity	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
periodicity	int
;	O
if	O
(	O
(	O
uih	pointer
->	O
cycling	int
||	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEALL	int
)	O
&&	O
(	O
s	struct
->	O
cyclingspeed	int
!=	O
uih	pointer
->	O
cyclingspeed	int
||	O
s	struct
->	O
direction	int
!=	O
uih	pointer
->	O
direction	int
)	O
)	O
save_intc	function
(	O
uih	pointer
,	O
"cyclingspeed"	pointer
,	O
uih	pointer
->	O
cyclingspeed	int
)	O
,	O
s	struct
->	O
cyclingspeed	int
=	O
uih	pointer
->	O
cyclingspeed	int
,	O
s	struct
->	O
direction	int
=	O
uih	pointer
->	O
direction	int
;	O
if	O
(	O
(	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
&&	O
(	O
uih	pointer
->	O
step	double
||	O
uih	pointer
->	O
zoomactive	int
)	O
)	O
&&	O
(	O
s	struct
->	O
xcenter	double
!=	O
uih	pointer
->	O
xcenter	double
||	O
s	struct
->	O
ycenter	double
!=	O
uih	pointer
->	O
ycenter	double
)	O
)	O
save_coordc	function
(	O
uih	pointer
,	O
"zoomcenter"	pointer
,	O
uih	pointer
->	O
xcenter	double
,	O
uih	pointer
->	O
ycenter	double
)	O
,	O
s	struct
->	O
xcenter	double
=	O
uih	pointer
->	O
xcenter	double
,	O
s	struct
->	O
ycenter	double
=	O
uih	pointer
->	O
ycenter	double
;	O
if	O
(	O
(	O
!	O
uih	pointer
->	O
fcontext	pointer
->	O
mandelbrot	int
||	O
uih	pointer
->	O
juliamode	int
)	O
&&	O
(	O
s	struct
->	O
fcontext	pointer
->	O
pre	double
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
pre	double
||	O
s	struct
->	O
fcontext	pointer
->	O
pim	double
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
pim	double
)	O
)	O
{	O
if	O
(	O
uih	pointer
->	O
juliamode	int
&&	O
uih	pointer
->	O
pressed	int
)	O
save_coordc	function
(	O
uih	pointer
,	O
"morphjulia"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
pre	double
,	O
uih	pointer
->	O
fcontext	pointer
->	O
pim	double
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
pre	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
pre	double
,	O
s	struct
->	O
fcontext	pointer
->	O
pim	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
pim	double
;	O
else	O
save_coordc	function
(	O
uih	pointer
,	O
"juliaseed"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
pre	double
,	O
uih	pointer
->	O
fcontext	pointer
->	O
pim	double
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
pre	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
pre	double
,	O
s	struct
->	O
fcontext	pointer
->	O
pim	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
pim	double
;	O
}	O
if	O
(	O
uih	pointer
->	O
fcontext	pointer
->	O
bre	double
!=	O
s	struct
->	O
fcontext	pointer
->	O
bre	double
||	O
uih	pointer
->	O
fcontext	pointer
->	O
bim	double
!=	O
s	struct
->	O
fcontext	pointer
->	O
bim	double
)	O
{	O
save_coordc	function
(	O
uih	pointer
,	O
"perturbation"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
bre	double
,	O
uih	pointer
->	O
fcontext	pointer
->	O
bim	double
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
bre	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
bre	double
,	O
s	struct
->	O
fcontext	pointer
->	O
bim	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
bim	double
;	O
}	O
if	O
(	O
uih	pointer
->	O
fastrotate	int
!=	O
s	struct
->	O
fastrotate	int
&&	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
)	O
{	O
save_onoffc	function
(	O
uih	pointer
,	O
"fastrotate"	pointer
,	O
uih	pointer
->	O
fastrotate	int
)	O
;	O
s	struct
->	O
fastrotate	int
=	O
uih	pointer
->	O
fastrotate	int
;	O
}	O
if	O
(	O
uih	pointer
->	O
fcontext	pointer
->	O
angle	double
!=	O
s	struct
->	O
fcontext	pointer
->	O
angle	double
&&	O
s	struct
->	O
autorotate	int
!=	O
1	int
)	O
{	O
if	O
(	O
s	struct
->	O
rotatepressed	int
&&	O
s	struct
->	O
mode	int
==	O
UIH_SAVEANIMATION	int
)	O
save_float2c	function
(	O
uih	pointer
,	O
"morphangle"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
angle	double
,	O
5	int
)	O
;	O
else	O
save_float2c	function
(	O
uih	pointer
,	O
"angle"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
angle	double
,	O
5	int
)	O
;	O
s	struct
->	O
rotatepressed	int
=	O
uih	pointer
->	O
rotatepressed	int
;	O
s	struct
->	O
fcontext	pointer
->	O
angle	double
=	O
uih	pointer
->	O
fcontext	pointer
->	O
angle	double
;	O
}	O
if	O
(	O
uih	pointer
->	O
rotationspeed	double
!=	O
s	struct
->	O
rotationspeed	double
&&	O
(	O
(	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
&&	O
uih	pointer
->	O
rotatemode	int
==	O
ROTATE_CONTINUOUS	int
)	O
||	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEALL	int
)	O
)	O
{	O
save_float2c	function
(	O
uih	pointer
,	O
"rotationspeed"	pointer
,	O
uih	pointer
->	O
rotationspeed	double
,	O
6	int
)	O
;	O
s	struct
->	O
rotationspeed	double
=	O
uih	pointer
->	O
rotationspeed	double
;	O
}	O
if	O
(	O
s	struct
->	O
autorotate	int
!=	O
(	O
uih	pointer
->	O
rotatemode	int
==	O
ROTATE_CONTINUOUS	int
)	O
)	O
{	O
s	struct
->	O
autorotate	int
=	O
(	O
uih	pointer
->	O
rotatemode	int
==	O
ROTATE_CONTINUOUS	int
)	O
;	O
save_onoffc	function
(	O
uih	pointer
,	O
"autorotate"	pointer
,	O
s	struct
->	O
autorotate	int
)	O
;	O
}	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
maxiter	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
maxiter	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"maxiter"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
maxiter	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
maxiter	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
maxiter	int
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
coloringmode	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
coloringmode	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"outcoloring"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
coloringmode	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
coloringmode	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
coloringmode	int
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"incoloring"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"incoloring"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
incoloringmode	int
;	O
if	O
(	O
(	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
==	O
10	int
||	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEALL	int
)	O
&&	O
s	struct
->	O
fcontext	pointer
->	O
intcolor	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
intcolor	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"intcoloring"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
intcolor	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
intcolor	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
intcolor	int
;	O
if	O
(	O
(	O
s	struct
->	O
fcontext	pointer
->	O
coloringmode	int
==	O
10	int
||	O
s	struct
->	O
mode	int
>=	O
UIH_SAVEALL	int
)	O
&&	O
s	struct
->	O
fcontext	pointer
->	O
outtcolor	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
outtcolor	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"outtcoloring"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
outtcolor	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
outtcolor	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
outtcolor	int
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
mandelbrot	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
mandelbrot	int
)	O
save_onoffc	function
(	O
uih	pointer
,	O
"julia"	pointer
,	O
!	O
uih	pointer
->	O
fcontext	pointer
->	O
mandelbrot	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
mandelbrot	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
mandelbrot	int
;	O
if	O
(	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
&&	O
s	struct
->	O
fcontext	pointer
->	O
range	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
range	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"range"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
range	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
range	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
range	int
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
->	O
plane	int
!=	O
uih	pointer
->	O
fcontext	pointer
->	O
plane	int
)	O
save_intc	function
(	O
uih	pointer
,	O
"plane"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
plane	int
)	O
,	O
s	struct
->	O
fcontext	pointer
->	O
plane	int
=	O
uih	pointer
->	O
fcontext	pointer
->	O
plane	int
;	O
if	O
(	O
s	struct
->	O
zoomactive	int
!=	O
uih	pointer
->	O
zoomactive	int
&&	O
s	struct
->	O
mode	int
>	O
UIH_SAVEPOS	int
)	O
{	O
switch	O
(	O
uih	pointer
->	O
zoomactive	int
)	O
{	O
case	O
-	O
1	int
:	O
save_noparam	function
(	O
uih	pointer
,	O
"unzoom"	pointer
)	O
;	O
break	O
;	O
case	O
1	int
:	O
save_noparam	function
(	O
uih	pointer
,	O
"zoom"	pointer
)	O
;	O
break	O
;	O
default	O
:	O
save_noparam	function
(	O
uih	pointer
,	O
"stop"	pointer
)	O
;	O
break	O
;	O
}	O
s	struct
->	O
zoomactive	int
=	O
uih	pointer
->	O
zoomactive	int
;	O
}	O
if	O
(	O
(	O
s	struct
->	O
xtextpos	int
!=	O
uih	pointer
->	O
xtextpos	int
||	O
s	struct
->	O
ytextpos	int
!=	O
uih	pointer
->	O
ytextpos	int
)	O
&&	O
(	O
s	struct
->	O
mode	int
>	O
UIH_SAVEANIMATION	int
||	O
(	O
s	struct
->	O
mode	int
==	O
UIH_SAVEANIMATION	int
&&	O
s	struct
->	O
displaytext	int
)	O
)	O
)	O
{	O
start_save	function
(	O
uih	pointer
,	O
"textpossition"	pointer
)	O
;	O
save_nstring	function
(	O
uih	pointer
,	O
uih	pointer
->	O
xtextpos	int
,	O
xtextposnames	array
)	O
;	O
save_nstring	function
(	O
uih	pointer
,	O
uih	pointer
->	O
ytextpos	int
,	O
ytextposnames	array
)	O
;	O
stop_save	function
(	O
uih	pointer
)	O
;	O
s	struct
->	O
xtextpos	int
=	O
uih	pointer
->	O
xtextpos	int
;	O
s	struct
->	O
ytextpos	int
=	O
uih	pointer
->	O
ytextpos	int
;	O
}	O
if	O
(	O
s	struct
->	O
clearscreen	int
)	O
{	O
save_noparam	function
(	O
uih	pointer
,	O
"clearscreen"	pointer
)	O
;	O
s	struct
->	O
clearscreen	int
=	O
0	int
;	O
s	struct
->	O
nonfractalscreen	int
=	O
1	int
;	O
}	O
if	O
(	O
s	struct
->	O
displaytext	int
)	O
{	O
save_stringc	function
(	O
uih	pointer
,	O
"text"	pointer
,	O
s	struct
->	O
text	pointer
)	O
;	O
s	struct
->	O
displaytext	int
=	O
0	int
;	O
s	struct
->	O
nonfractalscreen	int
=	O
1	int
;	O
free	function
(	O
s	struct
->	O
text	pointer
)	O
;	O
save_noparam	function
(	O
uih	pointer
,	O
"textsleep"	pointer
)	O
;	O
}	O
if	O
(	O
s	struct
->	O
autorotate	int
&&	O
changed	int
&&	O
tl_lookup_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
synctimer	pointer
)	O
>	O
500000	int
)	O
save_float2c	function
(	O
uih	pointer
,	O
"angle"	pointer
,	O
uih	pointer
->	O
fcontext	pointer
->	O
angle	double
,	O
5	int
)	O
,	O
resetsync	int
=	O
1	int
;	O
if	O
(	O
s	struct
->	O
mode	int
==	O
UIH_SAVEPOS	int
)	O
savepos	function
(	O
uih	pointer
)	O
;	O
else	O
{	O
if	O
(	O
uih	pointer
->	O
viewchanged	int
)	O
savepos	function
(	O
uih	pointer
)	O
,	O
uih	pointer
->	O
viewchanged	int
=	O
0	int
;	O
else	O
if	O
(	O
uih	pointer
->	O
moved	int
)	O
savepos3	function
(	O
uih	pointer
)	O
,	O
uih	pointer
->	O
moved	int
=	O
0	int
;	O
else	O
if	O
(	O
(	O
(	O
changed	int
&&	O
uih	pointer
->	O
step	double
)	O
||	O
last	pointer
)	O
&&	O
tl_lookup_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
synctimer	pointer
)	O
>	O
500000	int
)	O
resetsync	int
=	O
1	int
,	O
savepos2	function
(	O
uih	pointer
)	O
;	O
}	O
if	O
(	O
uih	pointer
->	O
savec	pointer
->	O
firsttime	int
)	O
uih	pointer
->	O
savec	pointer
->	O
firsttime	int
=	O
0	int
;	O
if	O
(	O
s	struct
->	O
writefailed	int
)	O
uih_save_disable	function
(	O
uih	pointer
)	O
;	O
if	O
(	O
resetsync	int
)	O
tl_reset_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
synctimer	pointer
)	O
;	O
}	O
}	O
int	O
uih_save_enable	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
xio_file	pointer
f	pointer
,	O
int	O
mode	int
)	O
{	O
struct	O
uih_savedcontext	struct
*	O
s	struct
;	O
int	O
i	pointer
;	O
last	pointer
=	O
0	int
;	O
if	O
(	O
uih	pointer
->	O
save	int
)	O
{	O
uih	pointer
->	O
errstring	pointer
=	O
"Recording is already enabled"	pointer
;	O
return	O
0	int
;	O
}	O
s	struct
=	O
(	O
struct	O
uih_savedcontext	struct
*	O
)	O
calloc	function
(	O
sizeof	O
(	O
*	O
s	struct
)	O
,	O
1	int
)	O
;	O
if	O
(	O
f	pointer
==	O
NULL	O
||	O
s	struct
==	O
NULL	O
)	O
{	O
uih	pointer
->	O
errstring	pointer
=	O
"File could not be opended or out of memory"	pointer
;	O
return	O
0	int
;	O
}	O
uih	pointer
->	O
savec	pointer
=	O
s	struct
;	O
s	struct
->	O
fcontext	pointer
=	O
make_fractalc	function
(	O
1	int
,	O
uih	pointer
->	O
image	struct
->	O
pixelwidth	float
*	O
uih	pointer
->	O
image	struct
->	O
width	int
,	O
uih	pointer
->	O
image	struct
->	O
pixelheight	float
*	O
uih	pointer
->	O
image	struct
->	O
height	int
)	O
;	O
if	O
(	O
s	struct
->	O
fcontext	pointer
==	O
NULL	O
)	O
{	O
uih	pointer
->	O
errstring	pointer
=	O
"File could not be opended or out of memory"	pointer
;	O
free	function
(	O
s	struct
)	O
;	O
return	O
0	int
;	O
}	O
s	struct
->	O
mode	int
=	O
mode	int
;	O
s	struct
->	O
speedup	double
=	O
STEP	O
;	O
s	struct
->	O
maxstep	double
=	O
MAXSTEP	O
;	O
s	struct
->	O
xcenter	double
=	O
INT_MAX	O
;	O
s	struct
->	O
fastmode	int
=	O
2	int
;	O
s	struct
->	O
juliamode	int
=	O
0	int
;	O
s	struct
->	O
cycling	int
=	O
0	int
;	O
for	O
(	O
i	pointer
=	O
0	int
;	O
i	pointer
<	O
uih_nfilters	int
;	O
i	pointer
++	O
)	O
s	struct
->	O
filter	struct
[	O
i	pointer
]	O
=	O
0	int
;	O
s	struct
->	O
pressed	int
=	O
0	int
;	O
s	struct
->	O
firsttime	int
=	O
1	int
;	O
uih	pointer
->	O
palettechanged	int
=	O
1	int
;	O
s	struct
->	O
cyclingspeed	int
=	O
30	int
;	O
s	struct
->	O
fcontext	pointer
->	O
pre	double
=	O
s	struct
->	O
fcontext	pointer
->	O
pim	double
=	O
0	int
;	O
s	struct
->	O
fcontext	pointer
->	O
bre	double
=	O
s	struct
->	O
fcontext	pointer
->	O
bim	double
=	O
0	int
;	O
s	struct
->	O
fcontext	pointer
->	O
currentformula	pointer
=	O
NULL	O
;	O
s	struct
->	O
fcontext	pointer
->	O
periodicity	int
=	O
1	int
;	O
s	struct
->	O
fcontext	pointer
->	O
maxiter	int
=	O
170	int
;	O
s	struct
->	O
fcontext	pointer
->	O
coloringmode	int
=	O
0	int
;	O
s	struct
->	O
fcontext	pointer
->	O
incoloringmode	int
=	O
0	int
;	O
s	struct
->	O
fcontext	pointer
->	O
outtcolor	int
=	O
1	int
;	O
s	struct
->	O
fcontext	pointer
->	O
intcolor	int
=	O
1	int
;	O
s	struct
->	O
fcontext	pointer
->	O
mandelbrot	int
=	O
1	int
;	O
s	struct
->	O
fcontext	pointer
->	O
plane	int
=	O
0	int
;	O
s	struct
->	O
fcontext	pointer
->	O
range	int
=	O
3	int
;	O
s	struct
->	O
fcontext	pointer
->	O
angle	double
=	O
0	int
;	O
s	struct
->	O
rotatepressed	int
=	O
0	int
;	O
s	struct
->	O
autorotate	int
=	O
0	int
;	O
s	struct
->	O
fastrotate	int
=	O
0	int
;	O
s	struct
->	O
rotationspeed	double
=	O
10	int
;	O
s	struct
->	O
displaytext	int
=	O
0	int
;	O
s	struct
->	O
clearscreen	int
=	O
0	int
;	O
s	struct
->	O
xtextpos	int
=	O
1	int
;	O
s	struct
->	O
ytextpos	int
=	O
1	int
;	O
s	struct
->	O
file	pointer
=	O
f	pointer
;	O
s	struct
->	O
timer	struct
=	O
tl_create_timer	function
(	O
)	O
;	O
s	struct
->	O
synctimer	pointer
=	O
tl_create_timer	function
(	O
)	O
;	O
tl_reset_timer	function
(	O
s	struct
->	O
timer	struct
)	O
;	O
uih	pointer
->	O
viewchanged	int
=	O
1	int
;	O
uih	pointer
->	O
palettechanged	int
=	O
1	int
;	O
uih	pointer
->	O
save	int
=	O
1	int
;	O
uih	pointer
->	O
moved	int
=	O
0	int
;	O
if	O
(	O
mode	int
==	O
UIH_SAVEANIMATION	int
)	O
myputs	O
(	O
";Animation file automatically generated by XaoS "	pointer
XaoS_VERSION	pointer
"\n"	pointer
";  - an realtime interactive fractal zoomer\n"	pointer
";Use xaos -play <filename> to replay it\n"	pointer
)	O
;	O
else	O
if	O
(	O
mode	int
==	O
UIH_SAVEPOS	int
)	O
myputs	O
(	O
";Possition file automatically generated by XaoS "	pointer
XaoS_VERSION	pointer
"\n"	pointer
";  - an realtime interactive fractal zoomer\n"	pointer
";Use xaos -load <filename> to display it\n"	pointer
)	O
;	O
uih_saveframe	function
(	O
uih	pointer
)	O
;	O
putc	function
(	O
'\n'	O
,	O
f	pointer
)	O
;	O
return	O
1	int
;	O
}	O
void	O
uih_save_disable	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
)	O
{	O
if	O
(	O
uih	pointer
->	O
save	int
)	O
{	O
last	pointer
=	O
1	int
;	O
if	O
(	O
uih	pointer
->	O
savec	pointer
->	O
mode	int
>=	O
UIH_SAVEANIMATION	int
)	O
uih_saveframe	function
(	O
uih	pointer
)	O
;	O
if	O
(	O
xio_close	O
(	O
uih	pointer
->	O
savec	pointer
->	O
file	pointer
)	O
)	O
outputerror	function
(	O
uih	pointer
)	O
;	O
uih	pointer
->	O
save	int
=	O
0	int
;	O
free	function
(	O
uih	pointer
->	O
savec	pointer
->	O
fcontext	pointer
)	O
;	O
tl_free_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
timer	struct
)	O
;	O
tl_free_timer	function
(	O
uih	pointer
->	O
savec	pointer
->	O
synctimer	pointer
)	O
;	O
free	function
(	O
uih	pointer
->	O
savec	pointer
)	O
;	O
}	O
}	O
void	O
uih_save_possition	function
(	O
struct	O
uih_context	struct
*	O
uih	pointer
,	O
xio_file	pointer
f	pointer
,	O
int	O
mode	int
)	O
{	O
uih_save_enable	function
(	O
uih	pointer
,	O
f	pointer
,	O
mode	int
)	O
;	O
uih_save_disable	function
(	O
uih	pointer
)	O
;	O
}	O
