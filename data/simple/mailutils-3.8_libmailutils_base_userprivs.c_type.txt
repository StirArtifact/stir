int	O
mu_set_user_privileges	function
(	O
uid_t	int
uid	int
,	O
gid_t	int
*	O
gidv	pointer
,	O
size_t	long
gidc	long
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
gid_t	int
gid	int
;	O
if	O
(	O
getuid	function
(	O
)	O
)	O
return	O
EACCES	int
;	O
if	O
(	O
uid	int
==	O
0	int
)	O
return	O
0	int
;	O
if	O
(	O
gidv	pointer
&&	O
gidc	long
)	O
{	O
if	O
(	O
geteuid	function
(	O
)	O
==	O
0	int
&&	O
setgroups	function
(	O
gidc	long
,	O
gidv	pointer
)	O
)	O
{	O
mu_error	function
(	O
_	O
(	O
"setgroups(1, %lu) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gidv	pointer
[	O
0	int
]	O
,	O
mu_strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
errno	O
;	O
}	O
gid	int
=	O
gidv	pointer
[	O
0	int
]	O
;	O
}	O
else	O
{	O
struct	O
passwd	struct
*	O
pwd	pointer
=	O
getpwuid	function
(	O
uid	int
)	O
;	O
if	O
(	O
pwd	pointer
)	O
gid	int
=	O
pwd	pointer
->	O
pw_gid	int
;	O
else	O
gid	int
=	O
getegid	function
(	O
)	O
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
gid	int
!=	O
0	int
)	O
{	O
if	O
(	O
setgid	function
(	O
gid	int
)	O
<	O
0	int
)	O
{	O
rc	int
=	O
errno	O
;	O
mu_error	function
(	O
_	O
(	O
"setgid(%lu) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
}	O
else	O
if	O
(	O
getegid	function
(	O
)	O
!=	O
gid	int
)	O
{	O
rc	int
=	O
MU_ERR_FAILURE	O
;	O
mu_error	function
(	O
_	O
(	O
"setgid(%lu) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
getegid	function
(	O
)	O
!=	O
gid	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"Cannot set effective gid to %lu"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
gid	int
)	O
;	O
rc	int
=	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
if	O
(	O
rc	int
==	O
0	int
&&	O
uid	int
!=	O
0	int
)	O
{	O
uid_t	int
euid	int
;	O
if	O
(	O
setuid	function
(	O
uid	int
)	O
||	O
geteuid	function
(	O
)	O
!=	O
uid	int
||	O
(	O
getuid	function
(	O
)	O
!=	O
uid	int
&&	O
(	O
geteuid	function
(	O
)	O
==	O
0	int
||	O
getuid	function
(	O
)	O
==	O
0	int
)	O
)	O
)	O
{	O
if	O
(	O
geteuid	function
(	O
)	O
!=	O
uid	int
)	O
{	O
if	O
(	O
setreuid	function
(	O
uid	int
,	O
-	O
1	int
)	O
<	O
0	int
)	O
{	O
rc	int
=	O
errno	O
;	O
mu_error	function
(	O
_	O
(	O
"setreuid(%lu,-1) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
}	O
if	O
(	O
setuid	function
(	O
uid	int
)	O
<	O
0	int
)	O
{	O
rc	int
=	O
errno	O
;	O
mu_error	function
(	O
_	O
(	O
"second setuid(%lu) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
}	O
}	O
else	O
{	O
rc	int
=	O
errno	O
;	O
mu_error	function
(	O
_	O
(	O
"setuid(%lu) failed: %s"	pointer
)	O
,	O
(	O
unsigned	O
long	O
)	O
uid	int
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
}	O
}	O
euid	int
=	O
geteuid	function
(	O
)	O
;	O
if	O
(	O
uid	int
!=	O
0	int
&&	O
setuid	function
(	O
0	int
)	O
==	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"seteuid(0) succeeded when it should not"	pointer
)	O
)	O
;	O
rc	int
=	O
MU_ERR_FAILURE	O
;	O
}	O
else	O
if	O
(	O
uid	int
!=	O
euid	int
&&	O
setuid	function
(	O
euid	int
)	O
==	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"Cannot drop non-root setuid privileges"	pointer
)	O
)	O
;	O
rc	int
=	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
int	O
mu_switch_to_privs	function
(	O
uid_t	int
uid	int
,	O
gid_t	int
gid	int
,	O
mu_list_t	pointer
retain_groups	pointer
)	O
{	O
int	O
rc	int
=	O
0	int
;	O
gid_t	int
*	O
emptygidset	pointer
;	O
size_t	long
size	long
=	O
1	int
,	O
j	long
=	O
1	int
;	O
mu_iterator_t	pointer
itr	pointer
;	O
if	O
(	O
uid	int
==	O
0	int
)	O
return	O
0	int
;	O
mu_list_count	function
(	O
retain_groups	pointer
,	O
&	O
size	long
)	O
;	O
size	long
++	O
;	O
emptygidset	pointer
=	O
calloc	function
(	O
size	long
,	O
sizeof	O
emptygidset	pointer
[	O
0	int
]	O
)	O
;	O
if	O
(	O
!	O
emptygidset	pointer
)	O
return	O
ENOMEM	int
;	O
emptygidset	pointer
[	O
0	int
]	O
=	O
gid	int
?	O
gid	int
:	O
getegid	function
(	O
)	O
;	O
if	O
(	O
mu_list_get_iterator	function
(	O
retain_groups	pointer
,	O
&	O
itr	pointer
)	O
==	O
0	int
)	O
{	O
for	O
(	O
mu_iterator_first	function
(	O
itr	pointer
)	O
;	O
!	O
mu_iterator_is_done	function
(	O
itr	pointer
)	O
;	O
mu_iterator_next	function
(	O
itr	pointer
)	O
)	O
{	O
void	O
*	O
p	pointer
;	O
mu_iterator_current	function
(	O
itr	pointer
,	O
&	O
p	pointer
)	O
;	O
emptygidset	pointer
[	O
j	long
++	O
]	O
=	O
(	O
gid_t	int
)	O
(	O
intptr_t	long
)	O
p	pointer
;	O
}	O
mu_iterator_destroy	function
(	O
&	O
itr	pointer
)	O
;	O
}	O
rc	int
=	O
mu_set_user_privileges	function
(	O
uid	int
,	O
emptygidset	pointer
,	O
j	long
)	O
;	O
free	function
(	O
emptygidset	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
