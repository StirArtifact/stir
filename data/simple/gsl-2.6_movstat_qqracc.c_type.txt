typedef	O
double	O
qqracc_type_t	double
;	O
typedef	O
qqracc_type_t	double
ringbuf_type_t	double
;	O
typedef	O
struct	O
{	O
qqracc_type_t	double
*	O
window	pointer
;	O
ringbuf	struct
*	O
rbuf	pointer
;	O
}	O
qqracc_state_t	struct
;	O
static	O
size_t	long
qqracc_size	function
(	O
const	O
size_t	long
n	int
)	O
{	O
size_t	long
size	long
=	O
0	int
;	O
size	long
+=	O
sizeof	O
(	O
qqracc_state_t	struct
)	O
;	O
size	long
+=	O
n	int
*	O
sizeof	O
(	O
qqracc_type_t	double
)	O
;	O
size	long
+=	O
ringbuf_size	function
(	O
n	int
)	O
;	O
return	O
size	long
;	O
}	O
static	O
int	O
qqracc_init	function
(	O
const	O
size_t	long
n	int
,	O
void	O
*	O
vstate	pointer
)	O
{	O
qqracc_state_t	struct
*	O
state	pointer
=	O
(	O
qqracc_state_t	struct
*	O
)	O
vstate	pointer
;	O
state	pointer
->	O
window	pointer
=	O
(	O
qqracc_type_t	double
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
vstate	pointer
+	O
sizeof	O
(	O
qqracc_state_t	struct
)	O
)	O
;	O
state	pointer
->	O
rbuf	pointer
=	O
(	O
ringbuf	struct
*	O
)	O
(	O
(	O
unsigned	O
char	O
*	O
)	O
state	pointer
->	O
window	pointer
+	O
n	int
*	O
sizeof	O
(	O
qqracc_type_t	double
)	O
)	O
;	O
ringbuf_init	function
(	O
n	int
,	O
state	pointer
->	O
rbuf	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
qqracc_insert	function
(	O
const	O
qqracc_type_t	double
x	double
,	O
void	O
*	O
vstate	pointer
)	O
{	O
qqracc_state_t	struct
*	O
state	pointer
=	O
(	O
qqracc_state_t	struct
*	O
)	O
vstate	pointer
;	O
ringbuf_insert	function
(	O
x	double
,	O
state	pointer
->	O
rbuf	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
qqracc_delete	function
(	O
void	O
*	O
vstate	pointer
)	O
{	O
qqracc_state_t	struct
*	O
state	pointer
=	O
(	O
qqracc_state_t	struct
*	O
)	O
vstate	pointer
;	O
if	O
(	O
!	O
ringbuf_is_empty	function
(	O
state	pointer
->	O
rbuf	pointer
)	O
)	O
ringbuf_pop_back	function
(	O
state	pointer
->	O
rbuf	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
int	O
qqracc_get	function
(	O
void	O
*	O
params	pointer
,	O
qqracc_type_t	double
*	O
result	pointer
,	O
const	O
void	O
*	O
vstate	pointer
)	O
{	O
const	O
qqracc_state_t	struct
*	O
state	pointer
=	O
(	O
const	O
qqracc_state_t	struct
*	O
)	O
vstate	pointer
;	O
double	O
q	double
=	O
*	O
(	O
double	O
*	O
)	O
params	pointer
;	O
size_t	long
n	int
=	O
ringbuf_copy	function
(	O
state	pointer
->	O
window	pointer
,	O
state	pointer
->	O
rbuf	pointer
)	O
;	O
double	O
quant1	double
,	O
quant2	double
;	O
gsl_sort	function
(	O
state	pointer
->	O
window	pointer
,	O
1	int
,	O
n	int
)	O
;	O
quant1	double
=	O
gsl_stats_quantile_from_sorted_data	function
(	O
state	pointer
->	O
window	pointer
,	O
1	int
,	O
n	int
,	O
q	double
)	O
;	O
quant2	double
=	O
gsl_stats_quantile_from_sorted_data	function
(	O
state	pointer
->	O
window	pointer
,	O
1	int
,	O
n	int
,	O
1.0	int
-	O
q	double
)	O
;	O
*	O
result	pointer
=	O
quant2	double
-	O
quant1	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
static	O
const	O
gsl_movstat_accum	struct
qqr_accum_type	struct
=	O
{	O
qqracc_size	function
,	O
qqracc_init	function
,	O
qqracc_insert	function
,	O
qqracc_delete	function
,	O
qqracc_get	function
}	O
;	O
const	O
gsl_movstat_accum	struct
*	O
gsl_movstat_accum_qqr	pointer
=	O
&	O
qqr_accum_type	struct
;	O
