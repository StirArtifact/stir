static	O
Plotter	struct
*	O
*	O
_old_api_plotters	pointer
=	O
NULL	O
;	O
static	O
int	O
_old_api_plotters_len	int
=	O
0	int
;	O
static	O
Plotter	struct
*	O
_old_api_plotter	pointer
=	O
NULL	O
;	O
static	O
void	O
_api_warning	function
(	O
const	O
char	O
*	O
msg	pointer
)	O
;	O
static	O
void	O
_create_and_select_default_plotter	function
(	O
void	O
)	O
;	O
static	O
void	O
_create_and_select_default_plotter	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
Plotter	struct
*	O
default_plotter	pointer
;	O
if	O
(	O
_old_api_global_plotter_params	pointer
==	O
NULL	O
)	O
_old_api_global_plotter_params	pointer
=	O
pl_newplparams	function
(	O
)	O
;	O
default_plotter	pointer
=	O
pl_newpl_r	function
(	O
DEFAULT_PLOTTER_TYPE	pointer
,	O
stdin	pointer
,	O
stdout	pointer
,	O
stderr	pointer
,	O
_old_api_global_plotter_params	pointer
)	O
;	O
_old_api_plotters	pointer
=	O
(	O
Plotter	struct
*	O
*	O
)	O
_pl_xmalloc	function
(	O
INITIAL_PLOTTERS_LEN	int
*	O
sizeof	O
(	O
Plotter	struct
*	O
)	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
INITIAL_PLOTTERS_LEN	int
;	O
i	int
++	O
)	O
_old_api_plotters	pointer
[	O
i	int
]	O
=	O
(	O
Plotter	struct
*	O
)	O
NULL	O
;	O
_old_api_plotters_len	int
=	O
INITIAL_PLOTTERS_LEN	int
;	O
_old_api_plotters	pointer
[	O
0	int
]	O
=	O
default_plotter	pointer
;	O
_old_api_plotter	pointer
=	O
default_plotter	pointer
;	O
}	O
int	O
pl_newpl	function
(	O
const	O
char	O
*	O
type	enum
,	O
FILE	struct
*	O
infile	pointer
,	O
FILE	struct
*	O
outfile	pointer
,	O
FILE	struct
*	O
errfile	pointer
)	O
{	O
Plotter	struct
*	O
new_plotter	pointer
;	O
bool	enum
open_slot	enum
;	O
int	O
i	int
,	O
j	int
;	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
if	O
(	O
_old_api_global_plotter_params	pointer
==	O
NULL	O
)	O
_old_api_global_plotter_params	pointer
=	O
pl_newplparams	function
(	O
)	O
;	O
new_plotter	pointer
=	O
pl_newpl_r	function
(	O
type	enum
,	O
infile	pointer
,	O
outfile	pointer
,	O
errfile	pointer
,	O
_old_api_global_plotter_params	pointer
)	O
;	O
open_slot	enum
=	O
false	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_old_api_plotters_len	int
;	O
i	int
++	O
)	O
if	O
(	O
_old_api_plotters	pointer
[	O
i	int
]	O
==	O
NULL	O
)	O
{	O
open_slot	enum
=	O
true	int
;	O
break	O
;	O
}	O
if	O
(	O
!	O
open_slot	enum
)	O
{	O
i	int
=	O
_old_api_plotters_len	int
;	O
_old_api_plotters	pointer
=	O
(	O
Plotter	struct
*	O
*	O
)	O
_pl_xrealloc	function
(	O
_old_api_plotters	pointer
,	O
2	int
*	O
_old_api_plotters_len	int
*	O
sizeof	O
(	O
Plotter	struct
*	O
)	O
)	O
;	O
for	O
(	O
j	int
=	O
_old_api_plotters_len	int
;	O
j	int
<	O
2	int
*	O
_old_api_plotters_len	int
;	O
j	int
++	O
)	O
_old_api_plotters	pointer
[	O
j	int
]	O
=	O
(	O
Plotter	struct
*	O
)	O
NULL	O
;	O
_old_api_plotters_len	int
*=	O
2	int
;	O
}	O
_old_api_plotters	pointer
[	O
i	int
]	O
=	O
new_plotter	pointer
;	O
return	O
i	int
;	O
}	O
int	O
pl_selectpl	function
(	O
int	O
handle	int
)	O
{	O
int	O
i	int
;	O
if	O
(	O
handle	int
<	O
0	int
||	O
handle	int
>=	O
_old_api_plotters_len	int
||	O
_old_api_plotters	pointer
[	O
handle	int
]	O
==	O
NULL	O
)	O
{	O
_api_warning	function
(	O
"ignoring request to select a nonexistent plotter"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
_old_api_plotters_len	int
;	O
i	int
++	O
)	O
if	O
(	O
_old_api_plotters	pointer
[	O
i	int
]	O
==	O
_old_api_plotter	pointer
)	O
break	O
;	O
_old_api_plotter	pointer
=	O
_old_api_plotters	pointer
[	O
handle	int
]	O
;	O
return	O
i	int
;	O
}	O
int	O
pl_deletepl	function
(	O
int	O
handle	int
)	O
{	O
if	O
(	O
handle	int
<	O
0	int
||	O
handle	int
>=	O
_old_api_plotters_len	int
||	O
_old_api_plotters	pointer
[	O
handle	int
]	O
==	O
NULL	O
)	O
{	O
_api_warning	function
(	O
"ignoring request to delete a nonexistent plotter"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_old_api_plotters	pointer
[	O
handle	int
]	O
==	O
_old_api_plotter	pointer
)	O
{	O
_api_warning	function
(	O
"ignoring request to delete currently selected plotter"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
pl_deletepl_r	function
(	O
_old_api_plotters	pointer
[	O
handle	int
]	O
)	O
;	O
_old_api_plotters	pointer
[	O
handle	int
]	O
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
_api_warning	function
(	O
const	O
char	O
*	O
msg	pointer
)	O
{	O
if	O
(	O
pl_libplot_warning_handler	pointer
!=	O
NULL	O
)	O
(	O
*	O
pl_libplot_warning_handler	pointer
)	O
(	O
msg	pointer
)	O
;	O
else	O
fprintf	function
(	O
stderr	pointer
,	O
"libplot: %s\n"	pointer
,	O
msg	pointer
)	O
;	O
}	O
int	O
pl_alabel	function
(	O
int	O
x_justify	int
,	O
int	O
y_justify	int
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_alabel	O
(	O
_old_api_plotter	pointer
,	O
x_justify	int
,	O
y_justify	int
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_arc	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_arc	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_arcrel	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_arcrel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_bezier2	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bezier2	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_bezier2rel	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bezier2rel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_bezier3	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
,	O
int	O
x3	double
,	O
int	O
y3	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bezier3	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
,	O
x3	double
,	O
y3	double
)	O
;	O
}	O
int	O
pl_bezier3rel	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
,	O
int	O
x3	double
,	O
int	O
y3	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bezier3rel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
,	O
x3	double
,	O
y3	double
)	O
;	O
}	O
int	O
pl_bgcolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bgcolor	O
(	O
_old_api_plotter	pointer
,	O
red	int
,	O
green	int
,	O
blue	int
)	O
;	O
}	O
int	O
pl_bgcolorname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_bgcolorname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_box	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_box	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_boxrel	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_boxrel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_capmod	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_capmod	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_circle	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
r	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_circle	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
r	int
)	O
;	O
}	O
int	O
pl_circlerel	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
r	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_circlerel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
r	int
)	O
;	O
}	O
int	O
pl_closepath	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_closepath	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_closepl	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_closepl	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_color	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_color	O
(	O
_old_api_plotter	pointer
,	O
red	int
,	O
green	int
,	O
blue	int
)	O
;	O
}	O
int	O
pl_colorname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_colorname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_cont	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_cont	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_contrel	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_contrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_ellarc	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ellarc	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_ellarcrel	function
(	O
int	O
xc	int
,	O
int	O
yc	int
,	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ellarcrel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_ellipse	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
rx	double
,	O
int	O
ry	double
,	O
int	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ellipse	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
rx	double
,	O
ry	double
,	O
angle	double
)	O
;	O
}	O
int	O
pl_ellipserel	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
rx	double
,	O
int	O
ry	double
,	O
int	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ellipserel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
rx	double
,	O
ry	double
,	O
angle	double
)	O
;	O
}	O
int	O
pl_endpath	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_endpath	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_endsubpath	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_endsubpath	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_erase	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_erase	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_farc	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_farc	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_farcrel	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_farcrel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fbezier2	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fbezier2	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fbezier2rel	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fbezier2rel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fbezier3	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
,	O
double	O
x2	double
,	O
double	O
y2	double
,	O
double	O
x3	double
,	O
double	O
y3	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fbezier3	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
,	O
x3	double
,	O
y3	double
)	O
;	O
}	O
int	O
pl_fbezier3rel	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
,	O
double	O
x2	double
,	O
double	O
y2	double
,	O
double	O
x3	double
,	O
double	O
y3	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fbezier3rel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
,	O
x3	double
,	O
y3	double
)	O
;	O
}	O
int	O
pl_fbox	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fbox	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fboxrel	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fboxrel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fcircle	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
r	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fcircle	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
r	int
)	O
;	O
}	O
int	O
pl_fcirclerel	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
r	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fcirclerel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
r	int
)	O
;	O
}	O
int	O
pl_fconcat	function
(	O
double	O
m0	double
,	O
double	O
m1	double
,	O
double	O
m2	double
,	O
double	O
m3	double
,	O
double	O
m4	double
,	O
double	O
m5	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fconcat	O
(	O
_old_api_plotter	pointer
,	O
m0	double
,	O
m1	double
,	O
m2	double
,	O
m3	double
,	O
m4	double
,	O
m5	double
)	O
;	O
}	O
int	O
pl_fcont	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fcont	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fcontrel	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fcontrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fellarc	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fellarc	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fellarcrel	function
(	O
double	O
xc	int
,	O
double	O
yc	int
,	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fellarcrel	O
(	O
_old_api_plotter	pointer
,	O
xc	int
,	O
yc	int
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fellipse	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
rx	double
,	O
double	O
ry	double
,	O
double	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fellipse	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
rx	double
,	O
ry	double
,	O
angle	double
)	O
;	O
}	O
int	O
pl_fellipserel	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
double	O
rx	double
,	O
double	O
ry	double
,	O
double	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fellipserel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
rx	double
,	O
ry	double
,	O
angle	double
)	O
;	O
}	O
double	O
pl_ffontname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ffontname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
double	O
pl_ffontsize	function
(	O
double	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ffontsize	O
(	O
_old_api_plotter	pointer
,	O
size	double
)	O
;	O
}	O
int	O
pl_fillcolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fillcolor	O
(	O
_old_api_plotter	pointer
,	O
red	int
,	O
green	int
,	O
blue	int
)	O
;	O
}	O
int	O
pl_fillcolorname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fillcolorname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_fillmod	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fillmod	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_filltype	function
(	O
int	O
level	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_filltype	O
(	O
_old_api_plotter	pointer
,	O
level	int
)	O
;	O
}	O
double	O
pl_flabelwidth	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_flabelwidth	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_fline	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fline	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_flinedash	function
(	O
int	O
n	array
,	O
const	O
double	O
*	O
dashes	pointer
,	O
double	O
offset	array
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_flinedash	O
(	O
_old_api_plotter	pointer
,	O
n	array
,	O
dashes	pointer
,	O
offset	array
)	O
;	O
}	O
int	O
pl_flinerel	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_flinerel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_flinewidth	function
(	O
double	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_flinewidth	O
(	O
_old_api_plotter	pointer
,	O
size	double
)	O
;	O
}	O
int	O
pl_flushpl	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_flushpl	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_fmarker	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
int	O
type	enum
,	O
double	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fmarker	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
type	enum
,	O
size	double
)	O
;	O
}	O
int	O
pl_fmarkerrel	function
(	O
double	O
x	double
,	O
double	O
y	double
,	O
int	O
type	enum
,	O
double	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fmarkerrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
type	enum
,	O
size	double
)	O
;	O
}	O
int	O
pl_fmiterlimit	function
(	O
double	O
limit	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fmiterlimit	O
(	O
_old_api_plotter	pointer
,	O
limit	double
)	O
;	O
}	O
int	O
pl_fmove	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fmove	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fmoverel	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fmoverel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fontname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fontname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_fontsize	function
(	O
int	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fontsize	O
(	O
_old_api_plotter	pointer
,	O
size	double
)	O
;	O
}	O
int	O
pl_fpoint	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fpoint	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fpointrel	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fpointrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_frotate	function
(	O
double	O
theta	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_frotate	O
(	O
_old_api_plotter	pointer
,	O
theta	double
)	O
;	O
}	O
int	O
pl_fscale	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fscale	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_fsetmatrix	function
(	O
double	O
m0	double
,	O
double	O
m1	double
,	O
double	O
m2	double
,	O
double	O
m3	double
,	O
double	O
m4	double
,	O
double	O
m5	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fsetmatrix	O
(	O
_old_api_plotter	pointer
,	O
m0	double
,	O
m1	double
,	O
m2	double
,	O
m3	double
,	O
m4	double
,	O
m5	double
)	O
;	O
}	O
int	O
pl_fspace	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fspace	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_fspace2	function
(	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
,	O
double	O
x2	double
,	O
double	O
y2	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_fspace2	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
)	O
;	O
}	O
double	O
pl_ftextangle	function
(	O
double	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ftextangle	O
(	O
_old_api_plotter	pointer
,	O
angle	double
)	O
;	O
}	O
int	O
pl_ftranslate	function
(	O
double	O
x	double
,	O
double	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_ftranslate	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_havecap	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_havecap	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_joinmod	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_joinmod	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_label	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_label	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_labelwidth	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_labelwidth	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_line	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_line	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_linerel	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_linerel	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_linewidth	function
(	O
int	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_linewidth	O
(	O
_old_api_plotter	pointer
,	O
size	double
)	O
;	O
}	O
int	O
pl_linedash	function
(	O
int	O
n	array
,	O
const	O
int	O
*	O
dashes	pointer
,	O
int	O
offset	array
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_linedash	O
(	O
_old_api_plotter	pointer
,	O
n	array
,	O
dashes	pointer
,	O
offset	array
)	O
;	O
}	O
int	O
pl_linemod	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_linemod	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_marker	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
type	enum
,	O
int	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_marker	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
type	enum
,	O
size	double
)	O
;	O
}	O
int	O
pl_markerrel	function
(	O
int	O
x	double
,	O
int	O
y	double
,	O
int	O
type	enum
,	O
int	O
size	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_markerrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
,	O
type	enum
,	O
size	double
)	O
;	O
}	O
int	O
pl_move	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_move	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_moverel	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_moverel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_openpl	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_openpl	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_orientation	function
(	O
int	O
direction	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_orientation	O
(	O
_old_api_plotter	pointer
,	O
direction	int
)	O
;	O
}	O
FILE	struct
*	O
pl_outfile	function
(	O
FILE	struct
*	O
outfile	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_outfile	O
(	O
_old_api_plotter	pointer
,	O
outfile	pointer
)	O
;	O
}	O
int	O
pl_pencolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_pencolor	O
(	O
_old_api_plotter	pointer
,	O
red	int
,	O
green	int
,	O
blue	int
)	O
;	O
}	O
int	O
pl_pencolorname	function
(	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_pencolorname	O
(	O
_old_api_plotter	pointer
,	O
s	pointer
)	O
;	O
}	O
int	O
pl_pentype	function
(	O
int	O
level	int
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_pentype	O
(	O
_old_api_plotter	pointer
,	O
level	int
)	O
;	O
}	O
int	O
pl_point	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_point	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_pointrel	function
(	O
int	O
x	double
,	O
int	O
y	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_pointrel	O
(	O
_old_api_plotter	pointer
,	O
x	double
,	O
y	double
)	O
;	O
}	O
int	O
pl_restorestate	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_restorestate	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_savestate	function
(	O
void	O
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_savestate	O
(	O
_old_api_plotter	pointer
)	O
;	O
}	O
int	O
pl_space	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_space	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
)	O
;	O
}	O
int	O
pl_space2	function
(	O
int	O
x0	double
,	O
int	O
y0	function
,	O
int	O
x1	double
,	O
int	O
y1	function
,	O
int	O
x2	double
,	O
int	O
y2	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_space2	O
(	O
_old_api_plotter	pointer
,	O
x0	double
,	O
y0	function
,	O
x1	double
,	O
y1	function
,	O
x2	double
,	O
y2	double
)	O
;	O
}	O
int	O
pl_textangle	function
(	O
int	O
angle	double
)	O
{	O
if	O
(	O
_old_api_plotters_len	int
==	O
0	int
)	O
_create_and_select_default_plotter	function
(	O
)	O
;	O
return	O
_API_textangle	O
(	O
_old_api_plotter	pointer
,	O
angle	double
)	O
;	O
}	O
