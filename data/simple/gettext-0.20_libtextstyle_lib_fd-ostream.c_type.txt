const	O
typeinfo_t	O
fd_ostream_typeinfo	O
=	O
{	O
"fd_ostream"	pointer
}	O
;	O
static	O
const	O
typeinfo_t	O
*	O
const	O
fd_ostream_superclasses	array
[	O
]	O
=	O
{	O
fd_ostream_SUPERCLASSES	O
}	O
;	O
static	O
inline	O
int	O
nonintr_tcdrain	function
(	O
int	O
fd	int
)	O
{	O
int	O
retval	int
;	O
do	O
retval	int
=	O
tcdrain	function
(	O
fd	int
)	O
;	O
while	O
(	O
retval	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	O
)	O
;	O
return	O
retval	int
;	O
}	O
static	O
void	O
fd_ostream__write_mem	function
(	O
fd_ostream_t	O
stream	int
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	O
len	int
)	O
{	O
if	O
(	O
len	int
>	O
0	int
)	O
{	O
if	O
(	O
stream	int
->	O
buffer	O
!=	O
NULL	O
)	O
{	O
assert	function
(	O
stream	int
->	O
avail	O
>	O
0	int
)	O
;	O
if	O
(	O
len	int
<	O
stream	int
->	O
avail	O
)	O
{	O
memcpy	O
(	O
stream	int
->	O
buffer	O
+	O
BUFSIZE	int
-	O
stream	int
->	O
avail	O
,	O
data	pointer
,	O
len	int
)	O
;	O
stream	int
->	O
avail	O
-=	O
len	int
;	O
}	O
else	O
{	O
size_t	O
n	O
=	O
stream	int
->	O
avail	O
;	O
memcpy	O
(	O
stream	int
->	O
buffer	O
+	O
BUFSIZE	int
-	O
stream	int
->	O
avail	O
,	O
data	pointer
,	O
n	O
)	O
;	O
data	pointer
=	O
(	O
char	O
*	O
)	O
data	pointer
+	O
n	O
;	O
len	int
-=	O
n	O
;	O
if	O
(	O
full_write	O
(	O
stream	int
->	O
fd	int
,	O
stream	int
->	O
buffer	O
,	O
BUFSIZE	int
)	O
<	O
BUFSIZE	int
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error writing to %s"	pointer
)	O
,	O
stream	int
->	O
filename	pointer
)	O
;	O
while	O
(	O
len	int
>=	O
BUFSIZE	int
)	O
{	O
if	O
(	O
full_write	O
(	O
stream	int
->	O
fd	int
,	O
data	pointer
,	O
BUFSIZE	int
)	O
<	O
BUFSIZE	int
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error writing to %s"	pointer
)	O
,	O
stream	int
->	O
filename	pointer
)	O
;	O
data	pointer
=	O
(	O
char	O
*	O
)	O
data	pointer
+	O
BUFSIZE	int
;	O
len	int
-=	O
BUFSIZE	int
;	O
}	O
if	O
(	O
len	int
>	O
0	int
)	O
memcpy	O
(	O
stream	int
->	O
buffer	O
,	O
data	pointer
,	O
len	int
)	O
;	O
stream	int
->	O
avail	O
=	O
BUFSIZE	int
-	O
len	int
;	O
}	O
assert	function
(	O
stream	int
->	O
avail	O
>	O
0	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
full_write	O
(	O
stream	int
->	O
fd	int
,	O
data	pointer
,	O
len	int
)	O
<	O
len	int
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error writing to %s"	pointer
)	O
,	O
stream	int
->	O
filename	pointer
)	O
;	O
}	O
}	O
}	O
static	O
void	O
fd_ostream__flush	function
(	O
fd_ostream_t	O
stream	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
if	O
(	O
stream	int
->	O
buffer	O
!=	O
NULL	O
&&	O
stream	int
->	O
avail	O
<	O
BUFSIZE	int
)	O
{	O
size_t	O
filled	O
=	O
BUFSIZE	int
-	O
stream	int
->	O
avail	O
;	O
if	O
(	O
full_write	O
(	O
stream	int
->	O
fd	int
,	O
stream	int
->	O
buffer	O
,	O
filled	O
)	O
<	O
filled	O
)	O
error	function
(	O
EXIT_FAILURE	O
,	O
errno	O
,	O
_	O
(	O
"error writing to %s"	pointer
)	O
,	O
stream	int
->	O
filename	pointer
)	O
;	O
stream	int
->	O
avail	O
=	O
BUFSIZE	int
;	O
}	O
if	O
(	O
scope	int
==	O
FLUSH_ALL	O
)	O
{	O
fsync	function
(	O
stream	int
->	O
fd	int
)	O
;	O
nonintr_tcdrain	function
(	O
stream	int
->	O
fd	int
)	O
;	O
}	O
}	O
static	O
void	O
fd_ostream__free	function
(	O
fd_ostream_t	O
stream	int
)	O
{	O
fd_ostream_flush	function
(	O
stream	int
,	O
FLUSH_THIS_STREAM	O
)	O
;	O
free	function
(	O
stream	int
->	O
filename	pointer
)	O
;	O
free	function
(	O
stream	int
)	O
;	O
}	O
fd_ostream_t	O
fd_ostream_create	function
(	O
int	O
fd	int
,	O
const	O
char	O
*	O
filename	pointer
,	O
bool	O
buffered	int
)	O
{	O
fd_ostream_t	O
stream	int
=	O
(	O
struct	O
fd_ostream_representation	O
*	O
)	O
xmalloc	O
(	O
sizeof	O
(	O
struct	O
fd_ostream_representation	O
)	O
+	O
(	O
buffered	int
?	O
BUFSIZE	int
:	O
0	int
)	O
)	O
;	O
stream	int
->	O
base	O
.	O
vtable	pointer
=	O
&	O
fd_ostream_vtable	O
;	O
stream	int
->	O
fd	int
=	O
fd	int
;	O
stream	int
->	O
filename	pointer
=	O
xstrdup	O
(	O
filename	pointer
)	O
;	O
if	O
(	O
buffered	int
)	O
{	O
stream	int
->	O
buffer	O
=	O
(	O
char	O
*	O
)	O
(	O
void	O
*	O
)	O
stream	int
+	O
sizeof	O
(	O
struct	O
fd_ostream_representation	O
)	O
;	O
stream	int
->	O
avail	O
=	O
BUFSIZE	int
;	O
}	O
else	O
stream	int
->	O
buffer	O
=	O
NULL	O
;	O
return	O
stream	int
;	O
}	O
const	O
struct	O
fd_ostream_implementation	O
fd_ostream_vtable	O
=	O
{	O
fd_ostream_superclasses	array
,	O
sizeof	O
(	O
fd_ostream_superclasses	array
)	O
/	O
sizeof	O
(	O
fd_ostream_superclasses	array
[	O
0	int
]	O
)	O
,	O
sizeof	O
(	O
struct	O
fd_ostream_representation	O
)	O
,	O
fd_ostream__write_mem	function
,	O
fd_ostream__flush	function
,	O
fd_ostream__free	function
,	O
}	O
;	O
void	O
fd_ostream_write_mem	function
(	O
fd_ostream_t	O
first_arg	int
,	O
const	O
void	O
*	O
data	pointer
,	O
size_t	O
len	int
)	O
{	O
const	O
struct	O
fd_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
fd_ostream_representation_header	O
*	O
)	O
(	O
struct	O
fd_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
write_mem	O
(	O
first_arg	int
,	O
data	pointer
,	O
len	int
)	O
;	O
}	O
void	O
fd_ostream_flush	function
(	O
fd_ostream_t	O
first_arg	int
,	O
ostream_flush_scope_t	O
scope	int
)	O
{	O
const	O
struct	O
fd_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
fd_ostream_representation_header	O
*	O
)	O
(	O
struct	O
fd_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
flush	O
(	O
first_arg	int
,	O
scope	int
)	O
;	O
}	O
void	O
fd_ostream_free	function
(	O
fd_ostream_t	O
first_arg	int
)	O
{	O
const	O
struct	O
fd_ostream_implementation	O
*	O
vtable	pointer
=	O
(	O
(	O
struct	O
fd_ostream_representation_header	O
*	O
)	O
(	O
struct	O
fd_ostream_representation	O
*	O
)	O
first_arg	int
)	O
->	O
vtable	pointer
;	O
vtable	pointer
->	O
free	function
(	O
first_arg	int
)	O
;	O
}	O
