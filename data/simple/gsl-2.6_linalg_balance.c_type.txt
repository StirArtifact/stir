int	O
gsl_linalg_balance_columns	function
(	O
gsl_matrix	struct
*	O
A	pointer
,	O
gsl_vector	struct
*	O
D	pointer
)	O
{	O
const	O
size_t	long
N	int
=	O
A	pointer
->	O
size2	long
;	O
size_t	long
j	long
;	O
if	O
(	O
D	pointer
->	O
size	long
!=	O
A	pointer
->	O
size2	long
)	O
{	O
GSL_ERROR	O
(	O
"length of D must match second dimension of A"	pointer
,	O
GSL_EINVAL	int
)	O
;	O
}	O
gsl_vector_set_all	function
(	O
D	pointer
,	O
1.0	int
)	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
N	int
;	O
j	long
++	O
)	O
{	O
gsl_vector_view	struct
A_j	struct
=	O
gsl_matrix_column	function
(	O
A	pointer
,	O
j	long
)	O
;	O
double	O
s	pointer
=	O
gsl_blas_dasum	function
(	O
&	O
A_j	struct
.	O
vector	struct
)	O
;	O
double	O
f	pointer
=	O
1.0	int
;	O
if	O
(	O
s	pointer
==	O
0.0	int
||	O
!	O
gsl_finite	function
(	O
s	pointer
)	O
)	O
{	O
gsl_vector_set	function
(	O
D	pointer
,	O
j	long
,	O
f	pointer
)	O
;	O
continue	O
;	O
}	O
while	O
(	O
s	pointer
>	O
1.0	int
)	O
{	O
s	pointer
/=	O
2.0	int
;	O
f	pointer
*=	O
2.0	int
;	O
}	O
while	O
(	O
s	pointer
<	O
0.5	int
)	O
{	O
s	pointer
*=	O
2.0	int
;	O
f	pointer
/=	O
2.0	int
;	O
}	O
gsl_vector_set	function
(	O
D	pointer
,	O
j	long
,	O
f	pointer
)	O
;	O
if	O
(	O
f	pointer
!=	O
1.0	int
)	O
{	O
gsl_blas_dscal	function
(	O
1.0	int
/	O
f	pointer
,	O
&	O
A_j	struct
.	O
vector	struct
)	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
