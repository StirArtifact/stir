void	O
string_list_init	function
(	O
string_list_ty	struct
*	O
slp	pointer
)	O
{	O
slp	pointer
->	O
item	pointer
=	O
NULL	O
;	O
slp	pointer
->	O
nitems	long
=	O
0	int
;	O
slp	pointer
->	O
nitems_max	long
=	O
0	int
;	O
}	O
string_list_ty	struct
*	O
string_list_alloc	function
(	O
)	O
{	O
string_list_ty	struct
*	O
slp	pointer
;	O
slp	pointer
=	O
XMALLOC	O
(	O
string_list_ty	struct
)	O
;	O
slp	pointer
->	O
item	pointer
=	O
NULL	O
;	O
slp	pointer
->	O
nitems	long
=	O
0	int
;	O
slp	pointer
->	O
nitems_max	long
=	O
0	int
;	O
return	O
slp	pointer
;	O
}	O
void	O
string_list_append	function
(	O
string_list_ty	struct
*	O
slp	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
if	O
(	O
slp	pointer
->	O
nitems	long
>=	O
slp	pointer
->	O
nitems_max	long
)	O
{	O
size_t	long
nbytes	long
;	O
slp	pointer
->	O
nitems_max	long
=	O
slp	pointer
->	O
nitems_max	long
*	O
2	int
+	O
4	int
;	O
nbytes	long
=	O
slp	pointer
->	O
nitems_max	long
*	O
sizeof	O
(	O
slp	pointer
->	O
item	pointer
[	O
0	int
]	O
)	O
;	O
slp	pointer
->	O
item	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
slp	pointer
->	O
item	pointer
,	O
nbytes	long
)	O
;	O
}	O
slp	pointer
->	O
item	pointer
[	O
slp	pointer
->	O
nitems	long
++	O
]	O
=	O
xstrdup	function
(	O
s	pointer
)	O
;	O
}	O
void	O
string_list_append_unique	function
(	O
string_list_ty	struct
*	O
slp	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
if	O
(	O
strcmp	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
,	O
s	pointer
)	O
==	O
0	int
)	O
return	O
;	O
if	O
(	O
slp	pointer
->	O
nitems	long
>=	O
slp	pointer
->	O
nitems_max	long
)	O
{	O
slp	pointer
->	O
nitems_max	long
=	O
slp	pointer
->	O
nitems_max	long
*	O
2	int
+	O
4	int
;	O
slp	pointer
->	O
item	pointer
=	O
(	O
const	O
char	O
*	O
*	O
)	O
xrealloc	function
(	O
slp	pointer
->	O
item	pointer
,	O
slp	pointer
->	O
nitems_max	long
*	O
sizeof	O
(	O
slp	pointer
->	O
item	pointer
[	O
0	int
]	O
)	O
)	O
;	O
}	O
slp	pointer
->	O
item	pointer
[	O
slp	pointer
->	O
nitems	long
++	O
]	O
=	O
xstrdup	function
(	O
s	pointer
)	O
;	O
}	O
void	O
string_list_destroy	function
(	O
string_list_ty	struct
*	O
slp	pointer
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
free	function
(	O
(	O
char	O
*	O
)	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
if	O
(	O
slp	pointer
->	O
item	pointer
!=	O
NULL	O
)	O
free	function
(	O
slp	pointer
->	O
item	pointer
)	O
;	O
}	O
void	O
string_list_free	function
(	O
string_list_ty	struct
*	O
slp	pointer
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
free	function
(	O
(	O
char	O
*	O
)	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
if	O
(	O
slp	pointer
->	O
item	pointer
!=	O
NULL	O
)	O
free	function
(	O
slp	pointer
->	O
item	pointer
)	O
;	O
free	function
(	O
slp	pointer
)	O
;	O
}	O
char	O
*	O
string_list_concat	function
(	O
const	O
string_list_ty	struct
*	O
slp	pointer
)	O
{	O
size_t	long
len	long
;	O
size_t	long
j	long
;	O
char	O
*	O
result	pointer
;	O
size_t	long
pos	long
;	O
len	long
=	O
1	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
len	long
+=	O
strlen	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
result	pointer
=	O
XNMALLOC	O
(	O
len	long
,	O
char	O
)	O
;	O
pos	long
=	O
0	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
len	long
=	O
strlen	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
memcpy	function
(	O
result	pointer
+	O
pos	long
,	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
,	O
len	long
)	O
;	O
pos	long
+=	O
len	long
;	O
}	O
result	pointer
[	O
pos	long
]	O
=	O
'\0'	O
;	O
return	O
result	pointer
;	O
}	O
char	O
*	O
string_list_concat_destroy	function
(	O
string_list_ty	struct
*	O
slp	pointer
)	O
{	O
char	O
*	O
result	pointer
;	O
if	O
(	O
slp	pointer
->	O
nitems	long
==	O
1	int
)	O
{	O
result	pointer
=	O
(	O
char	O
*	O
)	O
slp	pointer
->	O
item	pointer
[	O
0	int
]	O
;	O
free	function
(	O
slp	pointer
->	O
item	pointer
)	O
;	O
}	O
else	O
{	O
result	pointer
=	O
string_list_concat	function
(	O
slp	pointer
)	O
;	O
string_list_destroy	function
(	O
slp	pointer
)	O
;	O
}	O
return	O
result	pointer
;	O
}	O
char	O
*	O
string_list_join	function
(	O
const	O
string_list_ty	struct
*	O
slp	pointer
,	O
const	O
char	O
*	O
separator	pointer
,	O
char	O
terminator	char
,	O
bool	bool
drop_redundant_terminator	bool
)	O
{	O
size_t	long
separator_len	long
=	O
strlen	function
(	O
separator	pointer
)	O
;	O
size_t	long
len	long
;	O
size_t	long
j	long
;	O
char	O
*	O
result	pointer
;	O
size_t	long
pos	long
;	O
len	long
=	O
1	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
if	O
(	O
j	long
>	O
0	int
)	O
len	long
+=	O
separator_len	long
;	O
len	long
+=	O
strlen	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
}	O
if	O
(	O
terminator	char
)	O
++	O
len	long
;	O
result	pointer
=	O
XNMALLOC	O
(	O
len	long
,	O
char	O
)	O
;	O
pos	long
=	O
0	int
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
{	O
if	O
(	O
j	long
>	O
0	int
)	O
{	O
memcpy	function
(	O
result	pointer
+	O
pos	long
,	O
separator	pointer
,	O
separator_len	long
)	O
;	O
pos	long
+=	O
separator_len	long
;	O
}	O
len	long
=	O
strlen	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
)	O
;	O
memcpy	function
(	O
result	pointer
+	O
pos	long
,	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
,	O
len	long
)	O
;	O
pos	long
+=	O
len	long
;	O
}	O
if	O
(	O
terminator	char
&&	O
!	O
(	O
drop_redundant_terminator	bool
&&	O
slp	pointer
->	O
nitems	long
>	O
0	int
&&	O
(	O
len	long
=	O
strlen	function
(	O
slp	pointer
->	O
item	pointer
[	O
slp	pointer
->	O
nitems	long
-	O
1	int
]	O
)	O
)	O
>	O
0	int
&&	O
slp	pointer
->	O
item	pointer
[	O
slp	pointer
->	O
nitems	long
-	O
1	int
]	O
[	O
len	long
-	O
1	int
]	O
==	O
terminator	char
)	O
)	O
result	pointer
[	O
pos	long
++	O
]	O
=	O
terminator	char
;	O
result	pointer
[	O
pos	long
]	O
=	O
'\0'	O
;	O
return	O
result	pointer
;	O
}	O
bool	bool
string_list_member	function
(	O
const	O
string_list_ty	struct
*	O
slp	pointer
,	O
const	O
char	O
*	O
s	pointer
)	O
{	O
size_t	long
j	long
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
slp	pointer
->	O
nitems	long
;	O
++	O
j	long
)	O
if	O
(	O
strcmp	function
(	O
slp	pointer
->	O
item	pointer
[	O
j	long
]	O
,	O
s	pointer
)	O
==	O
0	int
)	O
return	O
true	int
;	O
return	O
false	int
;	O
}	O
