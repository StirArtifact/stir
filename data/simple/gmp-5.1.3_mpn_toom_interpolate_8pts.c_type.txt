static	O
mp_limb_t	long
DO_mpn_sublsh_n	function
(	O
mp_ptr	pointer
dst	pointer
,	O
mp_srcptr	pointer
src	pointer
,	O
mp_size_t	long
n	long
,	O
unsigned	O
int	O
s	array
,	O
mp_ptr	pointer
ws	pointer
)	O
{	O
mp_limb_t	long
__cy	long
;	O
__cy	long
=	O
mpn_lshift	O
(	O
ws	pointer
,	O
src	pointer
,	O
n	long
,	O
s	array
)	O
;	O
return	O
__cy	long
+	O
mpn_sub_n	O
(	O
dst	pointer
,	O
dst	pointer
,	O
ws	pointer
,	O
n	long
)	O
;	O
}	O
void	O
mpn_toom_interpolate_8pts	O
(	O
mp_ptr	pointer
pp	pointer
,	O
mp_size_t	long
n	long
,	O
mp_ptr	pointer
r3	pointer
,	O
mp_ptr	pointer
r7	pointer
,	O
mp_size_t	long
spt	long
,	O
mp_ptr	pointer
ws	pointer
)	O
{	O
mp_limb_signed_t	long
cy	long
;	O
mp_ptr	pointer
r5	pointer
,	O
r1	pointer
;	O
r5	pointer
=	O
(	O
pp	pointer
+	O
3	int
*	O
n	long
)	O
;	O
r1	pointer
=	O
(	O
pp	pointer
+	O
7	int
*	O
n	long
)	O
;	O
DO_mpn_subrsh	O
(	O
r3	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
4	int
,	O
ws	pointer
)	O
;	O
cy	long
=	O
DO_mpn_sublsh_n	function
(	O
r3	pointer
,	O
r1	pointer
,	O
spt	long
,	O
12	int
,	O
ws	pointer
)	O
;	O
MPN_DECR_U	O
(	O
r3	pointer
+	O
spt	long
,	O
3	int
*	O
n	long
+	O
1	int
-	O
spt	long
,	O
cy	long
)	O
;	O
DO_mpn_subrsh	O
(	O
r5	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
pp	pointer
,	O
2	int
*	O
n	long
,	O
2	int
,	O
ws	pointer
)	O
;	O
cy	long
=	O
DO_mpn_sublsh_n	function
(	O
r5	pointer
,	O
r1	pointer
,	O
spt	long
,	O
6	int
,	O
ws	pointer
)	O
;	O
MPN_DECR_U	O
(	O
r5	pointer
+	O
spt	long
,	O
3	int
*	O
n	long
+	O
1	int
-	O
spt	long
,	O
cy	long
)	O
;	O
r7	pointer
[	O
3	int
*	O
n	long
]	O
-=	O
mpn_sub_n	O
(	O
r7	pointer
+	O
n	long
,	O
r7	pointer
+	O
n	long
,	O
pp	pointer
,	O
2	int
*	O
n	long
)	O
;	O
cy	long
=	O
mpn_sub_n	O
(	O
r7	pointer
,	O
r7	pointer
,	O
r1	pointer
,	O
spt	long
)	O
;	O
MPN_DECR_U	O
(	O
r7	pointer
+	O
spt	long
,	O
3	int
*	O
n	long
+	O
1	int
-	O
spt	long
,	O
cy	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r3	pointer
,	O
r3	pointer
,	O
r5	pointer
,	O
3	int
*	O
n	long
+	O
1	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_rshift	O
(	O
r3	pointer
,	O
r3	pointer
,	O
3	int
*	O
n	long
+	O
1	int
,	O
2	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r5	pointer
,	O
r5	pointer
,	O
r7	pointer
,	O
3	int
*	O
n	long
+	O
1	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
r3	pointer
,	O
r3	pointer
,	O
r5	pointer
,	O
3	int
*	O
n	long
+	O
1	int
)	O
)	O
;	O
mpn_divexact_by45	O
(	O
r3	pointer
,	O
r3	pointer
,	O
3	int
*	O
n	long
+	O
1	int
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_divexact_by3	O
(	O
r5	pointer
,	O
r5	pointer
,	O
3	int
*	O
n	long
+	O
1	int
)	O
)	O
;	O
ASSERT_NOCARRY	O
(	O
DO_mpn_sublsh2_n	O
(	O
r5	pointer
,	O
r3	pointer
,	O
3	int
*	O
n	long
+	O
1	int
,	O
ws	pointer
)	O
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
pp	pointer
+	O
n	long
,	O
pp	pointer
+	O
n	long
,	O
r7	pointer
,	O
n	long
)	O
;	O
cy	long
-=	O
mpn_sub_n	O
(	O
pp	pointer
+	O
n	long
,	O
pp	pointer
+	O
n	long
,	O
r5	pointer
,	O
n	long
)	O
;	O
if	O
(	O
0	int
>	O
cy	long
)	O
MPN_DECR_U	O
(	O
r7	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
1	int
)	O
;	O
else	O
MPN_INCR_U	O
(	O
r7	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_sub_n	O
(	O
pp	pointer
+	O
2	int
*	O
n	long
,	O
r7	pointer
+	O
n	long
,	O
r5	pointer
+	O
n	long
,	O
n	long
)	O
;	O
MPN_DECR_U	O
(	O
r7	pointer
+	O
2	int
*	O
n	long
,	O
n	long
+	O
1	int
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
pp	pointer
+	O
3	int
*	O
n	long
,	O
r5	pointer
,	O
r7	pointer
+	O
2	int
*	O
n	long
,	O
n	long
+	O
1	int
)	O
;	O
r5	pointer
[	O
3	int
*	O
n	long
]	O
+=	O
mpn_add_n	O
(	O
r5	pointer
+	O
2	int
*	O
n	long
,	O
r5	pointer
+	O
2	int
*	O
n	long
,	O
r3	pointer
,	O
n	long
)	O
;	O
cy	long
-=	O
mpn_sub_n	O
(	O
pp	pointer
+	O
3	int
*	O
n	long
,	O
pp	pointer
+	O
3	int
*	O
n	long
,	O
r5	pointer
+	O
2	int
*	O
n	long
,	O
n	long
+	O
1	int
)	O
;	O
if	O
(	O
UNLIKELY	O
(	O
0	int
>	O
cy	long
)	O
)	O
MPN_DECR_U	O
(	O
r5	pointer
+	O
n	long
+	O
1	int
,	O
2	int
*	O
n	long
,	O
1	int
)	O
;	O
else	O
MPN_INCR_U	O
(	O
r5	pointer
+	O
n	long
+	O
1	int
,	O
2	int
*	O
n	long
,	O
cy	long
)	O
;	O
ASSERT_NOCARRY	O
(	O
mpn_sub_n	O
(	O
pp	pointer
+	O
4	int
*	O
n	long
,	O
r5	pointer
+	O
n	long
,	O
r3	pointer
+	O
n	long
,	O
2	int
*	O
n	long
+	O
1	int
)	O
)	O
;	O
cy	long
=	O
mpn_add_1	O
(	O
pp	pointer
+	O
6	int
*	O
n	long
,	O
r3	pointer
+	O
n	long
,	O
n	long
,	O
pp	pointer
[	O
6	int
*	O
n	long
]	O
)	O
;	O
MPN_INCR_U	O
(	O
r3	pointer
+	O
2	int
*	O
n	long
,	O
n	long
+	O
1	int
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
pp	pointer
+	O
7	int
*	O
n	long
,	O
pp	pointer
+	O
7	int
*	O
n	long
,	O
r3	pointer
+	O
2	int
*	O
n	long
,	O
n	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
spt	long
!=	O
n	long
)	O
)	O
MPN_INCR_U	O
(	O
pp	pointer
+	O
8	int
*	O
n	long
,	O
spt	long
-	O
n	long
,	O
cy	long
+	O
r3	pointer
[	O
3	int
*	O
n	long
]	O
)	O
;	O
else	O
ASSERT	O
(	O
r3	pointer
[	O
3	int
*	O
n	long
]	O
|	O
cy	long
==	O
0	int
)	O
;	O
}	O
