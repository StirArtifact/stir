static	O
struct	O
file_rd_info	struct
*	O
utmp_info	pointer
=	O
NULL	O
;	O
void	O
utmp_init	function
(	O
int	O
backwards	int
)	O
{	O
utmp_info	pointer
=	O
file_reader_init	function
(	O
sizeof	O
(	O
struct	O
utmp	struct
)	O
,	O
BUFFERED_RECS	int
,	O
backwards	int
)	O
;	O
}	O
void	O
add_utmp_file	function
(	O
char	O
*	O
name	pointer
)	O
{	O
file_reader_add_file	function
(	O
utmp_info	pointer
,	O
name	pointer
)	O
;	O
}	O
struct	O
utmp	struct
*	O
utmp_get_entry	function
(	O
void	O
)	O
{	O
return	O
(	O
struct	O
utmp	struct
*	O
)	O
file_reader_get_entry	function
(	O
utmp_info	pointer
)	O
;	O
}	O
void	O
print_utmp_record	function
(	O
struct	O
utmp	struct
*	O
rec	pointer
,	O
FILE	struct
*	O
out	pointer
)	O
{	O
if	O
(	O
rec	pointer
)	O
{	O
fprintf	function
(	O
out	pointer
,	O
"%-*.*s|%-*.*s|"	pointer
,	O
NAME_LEN	O
,	O
NAME_LEN	O
,	O
rec	pointer
->	O
ut_name	O
,	O
TTY_LEN	O
,	O
TTY_LEN	O
,	O
rec	pointer
->	O
ut_line	array
)	O
;	O
fprintf	function
(	O
out	pointer
,	O
"%1d|"	pointer
,	O
rec	pointer
->	O
ut_type	short
)	O
;	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
ID_LEN	O
;	O
i	int
++	O
)	O
{	O
char	O
c	char
=	O
rec	pointer
->	O
ut_id	array
[	O
i	int
]	O
;	O
if	O
(	O
c	char
==	O
'\0'	O
)	O
{	O
fprintf	function
(	O
out	pointer
,	O
"%-*.*s"	pointer
,	O
ID_LEN	O
-	O
i	int
,	O
ID_LEN	O
-	O
i	int
,	O
""	pointer
)	O
;	O
break	O
;	O
}	O
else	O
if	O
(	O
!	O
isprint	function
(	O
c	char
)	O
)	O
{	O
fputc	function
(	O
'?'	O
,	O
out	pointer
)	O
;	O
}	O
else	O
{	O
fputc	function
(	O
c	char
,	O
out	pointer
)	O
;	O
}	O
}	O
fputc	function
(	O
'|'	O
,	O
out	pointer
)	O
;	O
}	O
fprintf	function
(	O
out	pointer
,	O
"%5d|"	pointer
,	O
rec	pointer
->	O
ut_pid	int
)	O
;	O
fprintf	function
(	O
out	pointer
,	O
"%-*.*s|"	pointer
,	O
HOST_LEN	O
,	O
HOST_LEN	O
,	O
rec	pointer
->	O
ut_host	array
)	O
;	O
time_t	long
tmp_time	long
=	O
rec	pointer
->	O
ut_time	O
;	O
fputs	function
(	O
ctime	function
(	O
&	O
tmp_time	long
)	O
,	O
out	pointer
)	O
;	O
}	O
}	O
void	O
utmp_print_file_and_line	function
(	O
FILE	struct
*	O
out	pointer
)	O
{	O
file_reader_print_file_and_line	function
(	O
out	pointer
,	O
utmp_info	pointer
)	O
;	O
}	O
int	O
fix_ut_type_field	function
(	O
struct	O
utmp	struct
*	O
rec	pointer
)	O
{	O
int	O
mods	int
=	O
0	int
;	O
if	O
(	O
rec	pointer
->	O
ut_line	array
[	O
0	int
]	O
==	O
OLD_TIME_CHAR	char
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
OLD_TIME	int
;	O
else	O
if	O
(	O
rec	pointer
->	O
ut_line	array
[	O
0	int
]	O
==	O
NEW_TIME_CHAR	char
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
NEW_TIME	int
;	O
else	O
if	O
(	O
rec	pointer
->	O
ut_line	array
[	O
0	int
]	O
==	O
BOOT_TIME_CHAR	char
)	O
{	O
if	O
(	O
(	O
strncmp	function
(	O
rec	pointer
->	O
ut_name	O
,	O
"reboot"	pointer
,	O
NAME_LEN	O
)	O
==	O
0	int
)	O
&&	O
(	O
rec	pointer
->	O
ut_type	short
!=	O
BOOT_TIME	int
)	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
BOOT_TIME	int
;	O
else	O
if	O
(	O
(	O
strncmp	function
(	O
rec	pointer
->	O
ut_name	O
,	O
"shutdown"	pointer
,	O
NAME_LEN	O
)	O
==	O
0	int
)	O
&&	O
(	O
rec	pointer
->	O
ut_type	short
!=	O
RUN_LVL	int
)	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
RUN_LVL	int
;	O
}	O
if	O
(	O
(	O
rec	pointer
->	O
ut_type	short
==	O
RUN_LVL	int
)	O
&&	O
(	O
strncmp	function
(	O
rec	pointer
->	O
ut_name	O
,	O
"reboot"	pointer
,	O
NAME_LEN	O
)	O
==	O
0	int
)	O
&&	O
(	O
rec	pointer
->	O
ut_type	short
!=	O
BOOT_TIME	int
)	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
BOOT_TIME	int
;	O
if	O
(	O
(	O
rec	pointer
->	O
ut_type	short
==	O
BOOT_TIME	int
)	O
&&	O
(	O
strncmp	function
(	O
rec	pointer
->	O
ut_name	O
,	O
"shutdown"	pointer
,	O
NAME_LEN	O
)	O
==	O
0	int
)	O
&&	O
(	O
rec	pointer
->	O
ut_type	short
!=	O
RUN_LVL	int
)	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
RUN_LVL	int
;	O
if	O
(	O
(	O
rec	pointer
->	O
ut_type	short
==	O
USER_PROCESS	int
)	O
&&	O
(	O
rec	pointer
->	O
ut_name	O
[	O
0	int
]	O
==	O
'\0'	O
)	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
DEAD_PROCESS	int
;	O
if	O
(	O
(	O
rec	pointer
->	O
ut_type	short
<	O
1	int
)	O
||	O
(	O
rec	pointer
->	O
ut_type	short
>	O
UTMAXTYPE	int
)	O
)	O
{	O
if	O
(	O
rec	pointer
->	O
ut_line	array
[	O
0	int
]	O
!=	O
'\0'	O
)	O
{	O
if	O
(	O
rec	pointer
->	O
ut_name	O
[	O
0	int
]	O
!=	O
'\0'	O
)	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
USER_PROCESS	int
;	O
else	O
mods	int
=	O
1	int
,	O
rec	pointer
->	O
ut_type	short
=	O
DEAD_PROCESS	int
;	O
}	O
}	O
return	O
mods	int
;	O
}	O
int	O
bad_utmp_record	function
(	O
struct	O
utmp	struct
*	O
rec	pointer
)	O
{	O
return	O
0	int
;	O
}	O
