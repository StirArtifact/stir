const	O
char	O
uulog_rcsid	array
[	O
]	O
=	O
"$Id: uulog.c,v 1.29 2002/03/05 19:10:42 ian Rel $"	pointer
;	O
static	O
void	O
ulusage	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
void	O
ulhelp	function
P	O
(	O
(	O
void	O
)	O
)	O
;	O
static	O
const	O
struct	O
option	struct
asLlongopts	array
[	O
]	O
=	O
{	O
{	O
"debuglog"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'D'	O
}	O
,	O
{	O
"follow"	pointer
,	O
optional_argument	int
,	O
NULL	O
,	O
2	int
}	O
,	O
{	O
"lines"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'n'	O
}	O
,	O
{	O
"system"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
's'	O
}	O
,	O
{	O
"statslog"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'S'	O
}	O
,	O
{	O
"user"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'u'	O
}	O
,	O
{	O
"uuxqtlog"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'x'	O
}	O
,	O
{	O
"config"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'I'	O
}	O
,	O
{	O
"debug"	pointer
,	O
required_argument	int
,	O
NULL	O
,	O
'X'	O
}	O
,	O
{	O
"version"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
'v'	O
}	O
,	O
{	O
"help"	pointer
,	O
no_argument	int
,	O
NULL	O
,	O
1	int
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
NULL	O
,	O
0	int
}	O
}	O
;	O
int	O
main	function
(	O
argc	int
,	O
argv	pointer
)	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
{	O
boolean	int
fdebug	int
=	O
FALSE	O
;	O
boolean	int
fforever	int
=	O
FALSE	O
;	O
int	O
cshow	int
=	O
0	int
;	O
const	O
char	O
*	O
zsystem	pointer
=	O
NULL	O
;	O
boolean	int
fstats	int
=	O
FALSE	O
;	O
const	O
char	O
*	O
zuser	pointer
=	O
NULL	O
;	O
const	O
char	O
*	O
zconfig	pointer
=	O
NULL	O
;	O
boolean	int
fuuxqt	int
=	O
FALSE	O
;	O
int	O
i	int
;	O
int	O
iopt	int
;	O
pointer	pointer
puuconf	pointer
;	O
int	O
iuuconf	int
;	O
const	O
char	O
*	O
zlogfile	pointer
;	O
const	O
char	O
*	O
zstatsfile	pointer
;	O
const	O
char	O
*	O
zdebugfile	pointer
;	O
const	O
char	O
*	O
zfile	pointer
;	O
FILE	struct
*	O
e	pointer
;	O
char	O
*	O
*	O
pzshow	pointer
=	O
NULL	O
;	O
int	O
ishow	int
=	O
0	int
;	O
size_t	long
csystem	long
=	O
0	int
;	O
size_t	long
cuser	long
=	O
0	int
;	O
char	O
*	O
zline	pointer
;	O
size_t	long
cline	long
;	O
zProgram	pointer
=	O
argv	pointer
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
argv	pointer
[	O
i	int
]	O
[	O
0	int
]	O
==	O
'-'	O
&&	O
isdigit	function
(	O
argv	pointer
[	O
i	int
]	O
[	O
1	int
]	O
)	O
)	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
znew	pointer
;	O
clen	long
=	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
znew	pointer
=	O
zbufalc	function
(	O
clen	long
+	O
2	int
)	O
;	O
znew	pointer
[	O
0	int
]	O
=	O
'-'	O
;	O
znew	pointer
[	O
1	int
]	O
=	O
'n'	O
;	O
memcpy	function
(	O
znew	pointer
+	O
2	int
,	O
argv	pointer
[	O
i	int
]	O
+	O
1	int
,	O
clen	long
)	O
;	O
argv	pointer
[	O
i	int
]	O
=	O
znew	pointer
;	O
}	O
}	O
while	O
(	O
(	O
iopt	int
=	O
getopt_long	function
(	O
argc	int
,	O
argv	pointer
,	O
"Df:FI:n:s:Su:vxX:"	pointer
,	O
asLlongopts	array
,	O
(	O
int	O
*	O
)	O
NULL	O
)	O
)	O
!=	O
EOF	O
)	O
{	O
switch	O
(	O
iopt	int
)	O
{	O
case	O
'D'	O
:	O
fdebug	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'f'	O
:	O
fforever	int
=	O
TRUE	O
;	O
zsystem	pointer
=	O
optarg	O
;	O
if	O
(	O
cshow	int
==	O
0	int
)	O
cshow	int
=	O
10	int
;	O
break	O
;	O
case	O
'F'	O
:	O
fforever	int
=	O
TRUE	O
;	O
if	O
(	O
cshow	int
==	O
0	int
)	O
cshow	int
=	O
10	int
;	O
break	O
;	O
case	O
'I'	O
:	O
if	O
(	O
fsysdep_other_config	function
(	O
optarg	O
)	O
)	O
zconfig	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'n'	O
:	O
cshow	int
=	O
(	O
int	O
)	O
strtol	function
(	O
optarg	O
,	O
(	O
char	O
*	O
*	O
)	O
NULL	O
,	O
10	int
)	O
;	O
break	O
;	O
case	O
's'	O
:	O
zsystem	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'S'	O
:	O
fstats	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'u'	O
:	O
zuser	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
'x'	O
:	O
fuuxqt	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
'X'	O
:	O
iDebug	int
|=	O
idebug_parse	function
(	O
optarg	O
)	O
;	O
break	O
;	O
case	O
'v'	O
:	O
printf	function
(	O
"uulog (Taylor UUCP) %s\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
"Copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
)	O
;	O
printf	function
(	O
"This program is free software; you may redistribute it under the terms of\n"	pointer
)	O
;	O
printf	function
(	O
"the GNU General Public LIcense.  This program has ABSOLUTELY NO WARRANTY.\n"	pointer
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
2	int
:	O
fforever	int
=	O
TRUE	O
;	O
if	O
(	O
cshow	int
==	O
0	int
)	O
cshow	int
=	O
10	int
;	O
if	O
(	O
optarg	O
!=	O
NULL	O
)	O
zsystem	pointer
=	O
optarg	O
;	O
break	O
;	O
case	O
1	int
:	O
ulhelp	function
(	O
)	O
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
case	O
0	int
:	O
break	O
;	O
default	O
:	O
ulusage	function
(	O
)	O
;	O
}	O
}	O
if	O
(	O
optind	O
!=	O
argc	int
||	O
(	O
fstats	int
&&	O
fdebug	int
)	O
)	O
ulusage	function
(	O
)	O
;	O
iuuconf	int
=	O
uuconf_init	function
(	O
&	O
puuconf	pointer
,	O
(	O
const	O
char	O
*	O
)	O
NULL	O
,	O
zconfig	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
{	O
const	O
char	O
*	O
zdebug	pointer
;	O
iuuconf	int
=	O
uuconf_debuglevel	function
(	O
puuconf	pointer
,	O
&	O
zdebug	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
if	O
(	O
zdebug	pointer
!=	O
NULL	O
)	O
iDebug	int
|=	O
idebug_parse	function
(	O
zdebug	pointer
)	O
;	O
}	O
iuuconf	int
=	O
uuconf_logfile	function
(	O
puuconf	pointer
,	O
&	O
zlogfile	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
iuuconf	int
=	O
uuconf_statsfile	function
(	O
puuconf	pointer
,	O
&	O
zstatsfile	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
iuuconf	int
=	O
uuconf_debugfile	function
(	O
puuconf	pointer
,	O
&	O
zdebugfile	pointer
)	O
;	O
if	O
(	O
iuuconf	int
!=	O
UUCONF_SUCCESS	O
)	O
ulog_uuconf	function
(	O
LOG_FATAL	int
,	O
puuconf	pointer
,	O
iuuconf	int
)	O
;	O
usysdep_initialize	function
(	O
puuconf	pointer
,	O
INIT_NOCHDIR	O
)	O
;	O
if	O
(	O
zsystem	pointer
!=	O
NULL	O
)	O
{	O
{	O
struct	O
uuconf_system	struct
ssys	struct
;	O
iuuconf	int
=	O
uuconf_system_info	function
(	O
puuconf	pointer
,	O
zsystem	pointer
,	O
&	O
ssys	struct
)	O
;	O
if	O
(	O
iuuconf	int
==	O
UUCONF_SUCCESS	O
)	O
{	O
zsystem	pointer
=	O
zbufcpy	function
(	O
ssys	struct
.	O
uuconf_zname	pointer
)	O
;	O
(	O
void	O
)	O
uuconf_system_free	function
(	O
puuconf	pointer
,	O
&	O
ssys	struct
)	O
;	O
}	O
}	O
}	O
if	O
(	O
fstats	int
)	O
zfile	pointer
=	O
zstatsfile	pointer
;	O
else	O
if	O
(	O
fdebug	int
)	O
zfile	pointer
=	O
zdebugfile	pointer
;	O
else	O
{	O
zfile	pointer
=	O
zlogfile	pointer
;	O
}	O
e	pointer
=	O
fopen	function
(	O
zfile	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
ulog	function
(	O
LOG_ERROR	int
,	O
"fopen (%s): %s"	pointer
,	O
zfile	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
usysdep_exit	function
(	O
FALSE	O
)	O
;	O
}	O
if	O
(	O
cshow	int
>	O
0	int
)	O
{	O
pzshow	pointer
=	O
(	O
char	O
*	O
*	O
)	O
xmalloc	function
(	O
cshow	int
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
for	O
(	O
ishow	int
=	O
0	int
;	O
ishow	int
<	O
cshow	int
;	O
ishow	int
++	O
)	O
pzshow	pointer
[	O
ishow	int
]	O
=	O
NULL	O
;	O
ishow	int
=	O
0	int
;	O
}	O
if	O
(	O
zsystem	pointer
!=	O
NULL	O
)	O
csystem	long
=	O
strlen	function
(	O
zsystem	pointer
)	O
;	O
if	O
(	O
zuser	pointer
!=	O
NULL	O
)	O
cuser	long
=	O
strlen	function
(	O
zuser	pointer
)	O
;	O
zline	pointer
=	O
NULL	O
;	O
cline	long
=	O
0	int
;	O
while	O
(	O
TRUE	O
)	O
{	O
while	O
(	O
getline	function
(	O
&	O
zline	pointer
,	O
&	O
cline	long
,	O
e	pointer
)	O
>	O
0	int
)	O
{	O
char	O
*	O
zluser	pointer
,	O
*	O
zlsys	pointer
,	O
*	O
znext	pointer
;	O
size_t	long
cluser	long
,	O
clsys	long
;	O
znext	pointer
=	O
zline	pointer
+	O
strspn	function
(	O
zline	pointer
,	O
" \t"	pointer
)	O
;	O
if	O
(	O
!	O
fstats	int
)	O
{	O
znext	pointer
+=	O
strcspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
znext	pointer
+=	O
strspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
zlsys	pointer
=	O
znext	pointer
;	O
clsys	long
=	O
strcspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
znext	pointer
+=	O
clsys	long
;	O
znext	pointer
+=	O
strspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
zluser	pointer
=	O
znext	pointer
;	O
cluser	long
=	O
strcspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
}	O
else	O
{	O
zluser	pointer
=	O
znext	pointer
;	O
cluser	long
=	O
strcspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
znext	pointer
+=	O
cluser	long
;	O
znext	pointer
+=	O
strspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
zlsys	pointer
=	O
znext	pointer
;	O
clsys	long
=	O
strcspn	function
(	O
znext	pointer
,	O
" \t"	pointer
)	O
;	O
}	O
if	O
(	O
zsystem	pointer
!=	O
NULL	O
&&	O
(	O
csystem	long
!=	O
clsys	long
||	O
strncmp	function
(	O
zsystem	pointer
,	O
zlsys	pointer
,	O
clsys	long
)	O
!=	O
0	int
)	O
)	O
continue	O
;	O
if	O
(	O
zuser	pointer
!=	O
NULL	O
&&	O
(	O
cuser	long
!=	O
cluser	long
||	O
strncmp	function
(	O
zuser	pointer
,	O
zluser	pointer
,	O
cluser	long
)	O
!=	O
0	int
)	O
)	O
continue	O
;	O
if	O
(	O
cshow	int
<=	O
0	int
)	O
printf	function
(	O
"%s"	pointer
,	O
zline	pointer
)	O
;	O
else	O
{	O
ubuffree	function
(	O
(	O
pointer	pointer
)	O
pzshow	pointer
[	O
ishow	int
]	O
)	O
;	O
pzshow	pointer
[	O
ishow	int
]	O
=	O
zbufcpy	function
(	O
zline	pointer
)	O
;	O
ishow	int
=	O
(	O
ishow	int
+	O
1	int
)	O
%	O
cshow	int
;	O
}	O
}	O
if	O
(	O
cshow	int
>	O
0	int
)	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
cshow	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
pzshow	pointer
[	O
ishow	int
]	O
!=	O
NULL	O
)	O
printf	function
(	O
"%s"	pointer
,	O
pzshow	pointer
[	O
ishow	int
]	O
)	O
;	O
ishow	int
=	O
(	O
ishow	int
+	O
1	int
)	O
%	O
cshow	int
;	O
}	O
}	O
if	O
(	O
!	O
fforever	int
||	O
ferror	function
(	O
e	pointer
)	O
)	O
break	O
;	O
clearerr	function
(	O
e	pointer
)	O
;	O
cshow	int
=	O
0	int
;	O
usysdep_sleep	function
(	O
1	int
)	O
;	O
}	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
ulog_close	function
(	O
)	O
;	O
usysdep_exit	function
(	O
TRUE	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
ulusage	function
(	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: %s [-n #] [-sf system] [-u user] [-xDSF] [-I file] [-X debug]\n"	pointer
,	O
zProgram	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"Use %s --help for help\n"	pointer
,	O
zProgram	pointer
)	O
;	O
exit	function
(	O
EXIT_FAILURE	int
)	O
;	O
}	O
static	O
void	O
ulhelp	function
(	O
)	O
{	O
printf	function
(	O
"Taylor UUCP %s, copyright (C) 1991, 92, 93, 94, 1995, 2002 Ian Lance Taylor\n"	pointer
,	O
VERSION	pointer
)	O
;	O
printf	function
(	O
"Usage: %s [-n #] [-sf system] [-u user] [-DSF] [-I file] [-X debug]\n"	pointer
,	O
zProgram	pointer
)	O
;	O
printf	function
(	O
" -n,--lines: show given number of lines from end of log\n"	pointer
)	O
;	O
printf	function
(	O
" -s,--system: print entries for named system\n"	pointer
)	O
;	O
printf	function
(	O
" -f system,--follow=system: follow entries for named system\n"	pointer
)	O
;	O
printf	function
(	O
" -u,--user user: print entries for named user\n"	pointer
)	O
;	O
printf	function
(	O
" -F,--follow: follow entries for any system\n"	pointer
)	O
;	O
printf	function
(	O
" -S,--statslog: show statistics file\n"	pointer
)	O
;	O
printf	function
(	O
" -D,--debuglog: show debugging file\n"	pointer
)	O
;	O
printf	function
(	O
" -X,--debug debug: Set debugging level\n"	pointer
)	O
;	O
printf	function
(	O
" -I,--config file: Set configuration file to use\n"	pointer
)	O
;	O
printf	function
(	O
" -v,--version: Print version and exit\n"	pointer
)	O
;	O
printf	function
(	O
" --help: Print help and exit\n"	pointer
)	O
;	O
printf	function
(	O
"Report bugs to taylor-uucp@gnu.org\n"	pointer
)	O
;	O
}	O
