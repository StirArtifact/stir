static	O
void	O
print_normal_hunk	function
(	O
struct	O
change	struct
*	O
)	O
;	O
void	O
print_normal_script	function
(	O
struct	O
change	struct
*	O
script	pointer
)	O
{	O
print_script	function
(	O
script	pointer
,	O
find_change	function
,	O
print_normal_hunk	function
)	O
;	O
}	O
static	O
void	O
print_normal_hunk	function
(	O
struct	O
change	struct
*	O
hunk	pointer
)	O
{	O
lin	long
first0	long
,	O
last0	long
,	O
first1	long
,	O
last1	long
;	O
register	O
lin	long
i	long
;	O
enum	O
changes	enum
changes	enum
=	O
analyze_hunk	function
(	O
hunk	pointer
,	O
&	O
first0	long
,	O
&	O
last0	long
,	O
&	O
first1	long
,	O
&	O
last1	long
)	O
;	O
if	O
(	O
!	O
changes	enum
)	O
return	O
;	O
begin_output	function
(	O
)	O
;	O
print_number_range	function
(	O
','	O
,	O
&	O
files	array
[	O
0	int
]	O
,	O
first0	long
,	O
last0	long
)	O
;	O
fputc	function
(	O
change_letter	array
[	O
changes	enum
]	O
,	O
outfile	pointer
)	O
;	O
print_number_range	function
(	O
','	O
,	O
&	O
files	array
[	O
1	int
]	O
,	O
first1	long
,	O
last1	long
)	O
;	O
fputc	function
(	O
'\n'	O
,	O
outfile	pointer
)	O
;	O
if	O
(	O
changes	enum
&	O
OLD	int
)	O
for	O
(	O
i	long
=	O
first0	long
;	O
i	long
<=	O
last0	long
;	O
i	long
++	O
)	O
print_1_line	function
(	O
"<"	pointer
,	O
&	O
files	array
[	O
0	int
]	O
.	O
linbuf	pointer
[	O
i	long
]	O
)	O
;	O
if	O
(	O
changes	enum
==	O
CHANGED	int
)	O
fputs	function
(	O
"---\n"	pointer
,	O
outfile	pointer
)	O
;	O
if	O
(	O
changes	enum
&	O
NEW	int
)	O
for	O
(	O
i	long
=	O
first1	long
;	O
i	long
<=	O
last1	long
;	O
i	long
++	O
)	O
print_1_line	function
(	O
">"	pointer
,	O
&	O
files	array
[	O
1	int
]	O
.	O
linbuf	pointer
[	O
i	long
]	O
)	O
;	O
}	O
