CLASSID	long
EDMAPROC	O
edma_class_register	function
(	O
EDMA_REPO	pointer
repo	pointer
)	O
{	O
CLASSID	long
class_id	long
;	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
=	O
CLASS_DEF	int
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_unregister	function
(	O
CLASSID	long
class_id	long
)	O
{	O
if	O
(	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
<	O
CLASS_DEF	int
)	O
return	O
-	O
1	int
;	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
=	O
CLASS_FREE	int
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_load_interface	function
(	O
CLASSID	long
class_id	long
)	O
{	O
if	O
(	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
!=	O
CLASS_DEF	int
)	O
return	O
-	O
1	int
;	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
=	O
CLASS_ILOADED	int
;	O
ProcMapTable	pointer
[	O
class_id	long
]	O
=	O
CLASS_IMAPPED	int
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_unload_interface	function
(	O
CLASSID	long
class_id	long
)	O
{	O
SClass	pointer
[	O
class_id	long
]	O
->	O
Status	char
=	O
CLASS_DEF	int
;	O
ProcMapTable	pointer
[	O
class_id	long
]	O
=	O
CLASS_DEF	int
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_load_implementation	function
(	O
CLASSID	long
class_id	long
)	O
{	O
ProcMapTable	pointer
[	O
class_id	long
]	O
=	O
CLASS_LOADED	int
;	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_unload_implementation	function
(	O
CLASSID	long
class_id	long
)	O
{	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_set_int	function
(	O
CLASSID	long
class_id	long
,	O
EDMA_CLASS_INTERFACE	pointer
class_int	pointer
)	O
{	O
return	O
-	O
1	int
;	O
}	O
ESint32	long
EDMAPROC	O
edma_class_set_impl	function
(	O
CLASSID	long
class_id	long
,	O
EDMA_CLASS_IMPLEMENTATION	pointer
class_int	pointer
)	O
{	O
return	O
-	O
1	int
;	O
}	O
