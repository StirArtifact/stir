int	O
__osip_nict_init	function
(	O
osip_nict_t	struct
*	O
*	O
nict	pointer
,	O
osip_t	struct
*	O
osip	struct
,	O
osip_message_t	struct
*	O
request	pointer
)	O
{	O
osip_route_t	struct
*	O
route	pointer
;	O
int	O
i	int
;	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"allocating NICT context\n"	pointer
)	O
)	O
;	O
*	O
nict	pointer
=	O
(	O
osip_nict_t	struct
*	O
)	O
osip_malloc	O
(	O
sizeof	O
(	O
osip_nict_t	struct
)	O
)	O
;	O
if	O
(	O
*	O
nict	pointer
==	O
NULL	O
)	O
return	O
OSIP_NOMEM	O
;	O
memset	function
(	O
*	O
nict	pointer
,	O
0	int
,	O
sizeof	O
(	O
osip_nict_t	struct
)	O
)	O
;	O
{	O
osip_via_t	struct
*	O
via	pointer
;	O
char	O
*	O
proto	pointer
;	O
i	int
=	O
osip_message_get_via	function
(	O
request	pointer
,	O
0	int
,	O
&	O
via	pointer
)	O
;	O
if	O
(	O
i	int
<	O
0	int
)	O
{	O
osip_free	O
(	O
*	O
nict	pointer
)	O
;	O
*	O
nict	pointer
=	O
NULL	O
;	O
return	O
i	int
;	O
}	O
proto	pointer
=	O
via_get_protocol	function
(	O
via	pointer
)	O
;	O
if	O
(	O
proto	pointer
==	O
NULL	O
)	O
{	O
osip_free	O
(	O
*	O
nict	pointer
)	O
;	O
*	O
nict	pointer
=	O
NULL	O
;	O
return	O
OSIP_UNDEFINED_ERROR	O
;	O
}	O
if	O
(	O
osip_strcasecmp	function
(	O
proto	pointer
,	O
"TCP"	pointer
)	O
!=	O
0	int
&&	O
osip_strcasecmp	function
(	O
proto	pointer
,	O
"TLS"	pointer
)	O
!=	O
0	int
&&	O
osip_strcasecmp	function
(	O
proto	pointer
,	O
"SCTP"	pointer
)	O
!=	O
0	int
)	O
{	O
(	O
*	O
nict	pointer
)	O
->	O
timer_e_length	int
=	O
DEFAULT_T1	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_k_length	int
=	O
DEFAULT_T4	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_e_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_k_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
else	O
{	O
(	O
*	O
nict	pointer
)	O
->	O
timer_e_length	int
=	O
DEFAULT_T1	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_k_length	int
=	O
0	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_e_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
(	O
*	O
nict	pointer
)	O
->	O
timer_k_start	struct
.	O
tv_sec	long
=	O
-	O
1	int
;	O
}	O
}	O
osip_message_get_route	function
(	O
request	pointer
,	O
0	int
,	O
&	O
route	pointer
)	O
;	O
if	O
(	O
route	pointer
!=	O
NULL	O
&&	O
route	pointer
->	O
url	pointer
!=	O
NULL	O
)	O
{	O
osip_uri_param_t	struct
*	O
lr_param	pointer
;	O
osip_uri_uparam_get_byname	O
(	O
route	pointer
->	O
url	pointer
,	O
"lr"	pointer
,	O
&	O
lr_param	pointer
)	O
;	O
if	O
(	O
lr_param	pointer
==	O
NULL	O
)	O
{	O
route	pointer
=	O
NULL	O
;	O
}	O
}	O
if	O
(	O
route	pointer
!=	O
NULL	O
&&	O
route	pointer
->	O
url	pointer
!=	O
NULL	O
)	O
{	O
int	O
port	pointer
=	O
5060	int
;	O
if	O
(	O
route	pointer
->	O
url	pointer
->	O
port	pointer
!=	O
NULL	O
)	O
port	pointer
=	O
osip_atoi	function
(	O
route	pointer
->	O
url	pointer
->	O
port	pointer
)	O
;	O
osip_nict_set_destination	function
(	O
(	O
*	O
nict	pointer
)	O
,	O
osip_strdup	function
(	O
route	pointer
->	O
url	pointer
->	O
host	pointer
)	O
,	O
port	pointer
)	O
;	O
}	O
else	O
{	O
int	O
port	pointer
=	O
5060	int
;	O
osip_uri_param_t	struct
*	O
maddr_param	pointer
=	O
NULL	O
;	O
osip_uri_param_t	struct
*	O
obr_param	pointer
=	O
NULL	O
;	O
osip_uri_param_t	struct
*	O
obp_param	pointer
=	O
NULL	O
;	O
port	pointer
=	O
5060	int
;	O
if	O
(	O
request	pointer
->	O
req_uri	pointer
->	O
port	pointer
!=	O
NULL	O
)	O
port	pointer
=	O
osip_atoi	function
(	O
request	pointer
->	O
req_uri	pointer
->	O
port	pointer
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
request	pointer
->	O
req_uri	pointer
,	O
"x-obr"	pointer
,	O
&	O
obr_param	pointer
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
request	pointer
->	O
req_uri	pointer
,	O
"x-obp"	pointer
,	O
&	O
obp_param	pointer
)	O
;	O
osip_uri_uparam_get_byname	O
(	O
request	pointer
->	O
req_uri	pointer
,	O
"maddr"	pointer
,	O
&	O
maddr_param	pointer
)	O
;	O
if	O
(	O
maddr_param	pointer
!=	O
NULL	O
&&	O
maddr_param	pointer
->	O
gvalue	pointer
!=	O
NULL	O
)	O
osip_nict_set_destination	function
(	O
(	O
*	O
nict	pointer
)	O
,	O
osip_strdup	function
(	O
maddr_param	pointer
->	O
gvalue	pointer
)	O
,	O
port	pointer
)	O
;	O
else	O
if	O
(	O
obr_param	pointer
!=	O
NULL	O
&&	O
obr_param	pointer
->	O
gvalue	pointer
!=	O
NULL	O
&&	O
obp_param	pointer
!=	O
NULL	O
&&	O
obp_param	pointer
->	O
gvalue	pointer
!=	O
NULL	O
)	O
osip_nict_set_destination	function
(	O
(	O
*	O
nict	pointer
)	O
,	O
osip_strdup	function
(	O
obr_param	pointer
->	O
gvalue	pointer
)	O
,	O
osip_atoi	function
(	O
obp_param	pointer
->	O
gvalue	pointer
)	O
)	O
;	O
else	O
osip_nict_set_destination	function
(	O
(	O
*	O
nict	pointer
)	O
,	O
osip_strdup	function
(	O
request	pointer
->	O
req_uri	pointer
->	O
host	pointer
)	O
,	O
port	pointer
)	O
;	O
}	O
(	O
*	O
nict	pointer
)	O
->	O
timer_f_length	int
=	O
64	int
*	O
DEFAULT_T1	int
;	O
osip_gettimeofday	function
(	O
&	O
(	O
*	O
nict	pointer
)	O
->	O
timer_f_start	struct
,	O
NULL	O
)	O
;	O
add_gettimeofday	function
(	O
&	O
(	O
*	O
nict	pointer
)	O
->	O
timer_f_start	struct
,	O
(	O
*	O
nict	pointer
)	O
->	O
timer_f_length	int
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
__osip_nict_free	function
(	O
osip_nict_t	struct
*	O
nict	pointer
)	O
{	O
if	O
(	O
nict	pointer
==	O
NULL	O
)	O
return	O
OSIP_SUCCESS	int
;	O
OSIP_TRACE	O
(	O
osip_trace	function
(	O
__FILE__	O
,	O
__LINE__	O
,	O
OSIP_INFO2	O
,	O
NULL	O
,	O
"free nict resource\n"	pointer
)	O
)	O
;	O
osip_free	O
(	O
nict	pointer
->	O
destination	pointer
)	O
;	O
osip_free	O
(	O
nict	pointer
)	O
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
int	O
osip_nict_set_destination	function
(	O
osip_nict_t	struct
*	O
nict	pointer
,	O
char	O
*	O
destination	pointer
,	O
int	O
port	pointer
)	O
{	O
if	O
(	O
nict	pointer
==	O
NULL	O
)	O
return	O
OSIP_BADPARAMETER	O
;	O
if	O
(	O
nict	pointer
->	O
destination	pointer
!=	O
NULL	O
)	O
osip_free	O
(	O
nict	pointer
->	O
destination	pointer
)	O
;	O
nict	pointer
->	O
destination	pointer
=	O
destination	pointer
;	O
nict	pointer
->	O
port	pointer
=	O
port	pointer
;	O
return	O
OSIP_SUCCESS	int
;	O
}	O
osip_event_t	struct
*	O
__osip_nict_need_timer_e_event	function
(	O
osip_nict_t	struct
*	O
nict	pointer
,	O
state_t	enum
state	pointer
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	function
(	O
nict	pointer
,	O
&	O
nict	pointer
->	O
timer_e_start	struct
,	O
state	pointer
==	O
NICT_PROCEEDING	int
||	O
state	pointer
==	O
NICT_TRYING	int
,	O
transactionid	int
,	O
TIMEOUT_E	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_nict_need_timer_f_event	function
(	O
osip_nict_t	struct
*	O
nict	pointer
,	O
state_t	enum
state	pointer
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	function
(	O
nict	pointer
,	O
&	O
nict	pointer
->	O
timer_f_start	struct
,	O
state	pointer
==	O
NICT_PROCEEDING	int
||	O
state	pointer
==	O
NICT_TRYING	int
,	O
transactionid	int
,	O
TIMEOUT_F	int
)	O
;	O
}	O
osip_event_t	struct
*	O
__osip_nict_need_timer_k_event	function
(	O
osip_nict_t	struct
*	O
nict	pointer
,	O
state_t	enum
state	pointer
,	O
int	O
transactionid	int
)	O
{	O
return	O
__osip_transaction_need_timer_x_event	function
(	O
nict	pointer
,	O
&	O
nict	pointer
->	O
timer_k_start	struct
,	O
state	pointer
==	O
NICT_COMPLETED	int
,	O
transactionid	int
,	O
TIMEOUT_K	int
)	O
;	O
}	O
