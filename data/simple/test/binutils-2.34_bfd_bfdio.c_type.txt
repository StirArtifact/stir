file_ptr	long
_bfd_real_ftell	function
(	O
FILE	struct
*	O
file	pointer
)	O
{	O
return	O
ftello64	function
(	O
file	pointer
)	O
;	O
}	O
int	O
_bfd_real_fseek	function
(	O
FILE	struct
*	O
file	pointer
,	O
file_ptr	long
offset	long
,	O
int	O
whence	int
)	O
{	O
return	O
fseeko64	function
(	O
file	pointer
,	O
offset	long
,	O
whence	int
)	O
;	O
}	O
static	O
FILE	struct
*	O
close_on_exec	function
(	O
FILE	struct
*	O
file	pointer
)	O
{	O
if	O
(	O
file	pointer
)	O
{	O
int	O
fd	int
=	O
fileno	function
(	O
file	pointer
)	O
;	O
int	O
old	pointer
=	O
fcntl	function
(	O
fd	int
,	O
F_GETFD	int
,	O
0	int
)	O
;	O
if	O
(	O
old	pointer
>=	O
0	int
)	O
fcntl	function
(	O
fd	int
,	O
F_SETFD	int
,	O
old	pointer
|	O
FD_CLOEXEC	int
)	O
;	O
}	O
return	O
file	pointer
;	O
}	O
FILE	struct
*	O
_bfd_real_fopen	function
(	O
const	O
char	O
*	O
filename	pointer
,	O
const	O
char	O
*	O
modes	int
)	O
{	O
return	O
close_on_exec	function
(	O
fopen64	function
(	O
filename	pointer
,	O
modes	int
)	O
)	O
;	O
}	O
bfd_size_type	long
bfd_bread	function
(	O
void	O
*	O
ptr	pointer
,	O
bfd_size_type	long
size	long
,	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
file_ptr	long
nread	long
;	O
bfd	struct
*	O
element_bfd	pointer
=	O
abfd	pointer
;	O
ufile_ptr	long
offset	long
=	O
0	int
;	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
{	O
offset	long
+=	O
abfd	pointer
->	O
origin	long
;	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
}	O
if	O
(	O
element_bfd	pointer
->	O
arelt_data	pointer
!=	O
NULL	O
)	O
{	O
bfd_size_type	long
maxbytes	long
=	O
arelt_size	O
(	O
element_bfd	pointer
)	O
;	O
if	O
(	O
abfd	pointer
->	O
where	long
<	O
offset	long
||	O
abfd	pointer
->	O
where	long
-	O
offset	long
>=	O
maxbytes	long
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
abfd	pointer
->	O
where	long
-	O
offset	long
+	O
size	long
>	O
maxbytes	long
)	O
size	long
=	O
maxbytes	long
-	O
(	O
abfd	pointer
->	O
where	long
-	O
offset	long
)	O
;	O
}	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
nread	long
=	O
abfd	pointer
->	O
iovec	struct
->	O
bread	pointer
(	O
abfd	pointer
,	O
ptr	pointer
,	O
size	long
)	O
;	O
if	O
(	O
nread	long
!=	O
-	O
1	int
)	O
abfd	pointer
->	O
where	long
+=	O
nread	long
;	O
return	O
nread	long
;	O
}	O
bfd_size_type	long
bfd_bwrite	function
(	O
const	O
void	O
*	O
ptr	pointer
,	O
bfd_size_type	long
size	long
,	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
file_ptr	long
nwrote	long
;	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
nwrote	long
=	O
abfd	pointer
->	O
iovec	struct
->	O
bwrite	pointer
(	O
abfd	pointer
,	O
ptr	pointer
,	O
size	long
)	O
;	O
if	O
(	O
nwrote	long
!=	O
-	O
1	int
)	O
abfd	pointer
->	O
where	long
+=	O
nwrote	long
;	O
if	O
(	O
(	O
bfd_size_type	long
)	O
nwrote	long
!=	O
size	long
)	O
{	O
errno	O
=	O
ENOSPC	int
;	O
bfd_set_error	function
(	O
bfd_error_system_call	int
)	O
;	O
}	O
return	O
nwrote	long
;	O
}	O
file_ptr	long
bfd_tell	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
ufile_ptr	long
offset	long
=	O
0	int
;	O
file_ptr	long
ptr	pointer
;	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
{	O
offset	long
+=	O
abfd	pointer
->	O
origin	long
;	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
}	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
return	O
0	int
;	O
ptr	pointer
=	O
abfd	pointer
->	O
iovec	struct
->	O
btell	pointer
(	O
abfd	pointer
)	O
;	O
abfd	pointer
->	O
where	long
=	O
ptr	pointer
;	O
return	O
ptr	pointer
-	O
offset	long
;	O
}	O
int	O
bfd_flush	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
return	O
0	int
;	O
return	O
abfd	pointer
->	O
iovec	struct
->	O
bflush	pointer
(	O
abfd	pointer
)	O
;	O
}	O
int	O
bfd_stat	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
stat	struct
*	O
statbuf	pointer
)	O
{	O
int	O
result	int
;	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
result	int
=	O
abfd	pointer
->	O
iovec	struct
->	O
bstat	pointer
(	O
abfd	pointer
,	O
statbuf	pointer
)	O
;	O
if	O
(	O
result	int
<	O
0	int
)	O
bfd_set_error	function
(	O
bfd_error_system_call	int
)	O
;	O
return	O
result	int
;	O
}	O
int	O
bfd_seek	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
file_ptr	long
position	long
,	O
int	O
direction	enum
)	O
{	O
int	O
result	int
;	O
ufile_ptr	long
offset	long
=	O
0	int
;	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
{	O
offset	long
+=	O
abfd	pointer
->	O
origin	long
;	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
}	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
BFD_ASSERT	O
(	O
direction	enum
==	O
SEEK_SET	int
||	O
direction	enum
==	O
SEEK_CUR	int
)	O
;	O
if	O
(	O
direction	enum
!=	O
SEEK_CUR	int
)	O
position	long
+=	O
offset	long
;	O
if	O
(	O
(	O
direction	enum
==	O
SEEK_CUR	int
&&	O
position	long
==	O
0	int
)	O
||	O
(	O
direction	enum
==	O
SEEK_SET	int
&&	O
(	O
ufile_ptr	long
)	O
position	long
==	O
abfd	pointer
->	O
where	long
)	O
)	O
return	O
0	int
;	O
result	int
=	O
abfd	pointer
->	O
iovec	struct
->	O
bseek	pointer
(	O
abfd	pointer
,	O
position	long
,	O
direction	enum
)	O
;	O
if	O
(	O
result	int
!=	O
0	int
)	O
{	O
if	O
(	O
errno	O
==	O
EINVAL	int
)	O
bfd_set_error	function
(	O
bfd_error_file_truncated	int
)	O
;	O
else	O
bfd_set_error	function
(	O
bfd_error_system_call	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
direction	enum
==	O
SEEK_CUR	int
)	O
abfd	pointer
->	O
where	long
+=	O
position	long
;	O
else	O
abfd	pointer
->	O
where	long
=	O
position	long
;	O
}	O
return	O
result	int
;	O
}	O
long	O
bfd_get_mtime	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
struct	O
stat	struct
buf	pointer
;	O
if	O
(	O
abfd	pointer
->	O
mtime_set	int
)	O
return	O
abfd	pointer
->	O
mtime	long
;	O
if	O
(	O
bfd_stat	function
(	O
abfd	pointer
,	O
&	O
buf	pointer
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
abfd	pointer
->	O
mtime	long
=	O
buf	pointer
.	O
st_mtime	O
;	O
return	O
buf	pointer
.	O
st_mtime	O
;	O
}	O
ufile_ptr	long
bfd_get_size	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
struct	O
stat	struct
buf	pointer
;	O
if	O
(	O
bfd_stat	function
(	O
abfd	pointer
,	O
&	O
buf	pointer
)	O
!=	O
0	int
)	O
return	O
0	int
;	O
return	O
buf	pointer
.	O
st_size	long
;	O
}	O
ufile_ptr	long
bfd_get_file_size	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
if	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
return	O
arelt_size	O
(	O
abfd	pointer
)	O
;	O
return	O
bfd_get_size	function
(	O
abfd	pointer
)	O
;	O
}	O
void	O
*	O
bfd_mmap	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
void	O
*	O
addr	pointer
,	O
bfd_size_type	long
len	long
,	O
int	O
prot	int
,	O
int	O
flags	int
,	O
file_ptr	long
offset	long
,	O
void	O
*	O
*	O
map_addr	pointer
,	O
bfd_size_type	long
*	O
map_len	pointer
)	O
{	O
while	O
(	O
abfd	pointer
->	O
my_archive	pointer
!=	O
NULL	O
&&	O
!	O
bfd_is_thin_archive	function
(	O
abfd	pointer
->	O
my_archive	pointer
)	O
)	O
{	O
offset	long
+=	O
abfd	pointer
->	O
origin	long
;	O
abfd	pointer
=	O
abfd	pointer
->	O
my_archive	pointer
;	O
}	O
if	O
(	O
abfd	pointer
->	O
iovec	struct
==	O
NULL	O
)	O
{	O
bfd_set_error	function
(	O
bfd_error_invalid_operation	int
)	O
;	O
return	O
(	O
void	O
*	O
)	O
-	O
1	int
;	O
}	O
return	O
abfd	pointer
->	O
iovec	struct
->	O
bmmap	pointer
(	O
abfd	pointer
,	O
addr	pointer
,	O
len	long
,	O
prot	int
,	O
flags	int
,	O
offset	long
,	O
map_addr	pointer
,	O
map_len	pointer
)	O
;	O
}	O
static	O
file_ptr	long
memory_bread	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
void	O
*	O
ptr	pointer
,	O
file_ptr	long
size	long
)	O
{	O
struct	O
bfd_in_memory	struct
*	O
bim	pointer
;	O
bfd_size_type	long
get	long
;	O
bim	pointer
=	O
(	O
struct	O
bfd_in_memory	struct
*	O
)	O
abfd	pointer
->	O
iostream	pointer
;	O
get	long
=	O
size	long
;	O
if	O
(	O
abfd	pointer
->	O
where	long
+	O
get	long
>	O
bim	pointer
->	O
size	long
)	O
{	O
if	O
(	O
bim	pointer
->	O
size	long
<	O
(	O
bfd_size_type	long
)	O
abfd	pointer
->	O
where	long
)	O
get	long
=	O
0	int
;	O
else	O
get	long
=	O
bim	pointer
->	O
size	long
-	O
abfd	pointer
->	O
where	long
;	O
bfd_set_error	function
(	O
bfd_error_file_truncated	int
)	O
;	O
}	O
memcpy	function
(	O
ptr	pointer
,	O
bim	pointer
->	O
buffer	pointer
+	O
abfd	pointer
->	O
where	long
,	O
(	O
size_t	long
)	O
get	long
)	O
;	O
return	O
get	long
;	O
}	O
static	O
file_ptr	long
memory_bwrite	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
const	O
void	O
*	O
ptr	pointer
,	O
file_ptr	long
size	long
)	O
{	O
struct	O
bfd_in_memory	struct
*	O
bim	pointer
=	O
(	O
struct	O
bfd_in_memory	struct
*	O
)	O
abfd	pointer
->	O
iostream	pointer
;	O
if	O
(	O
abfd	pointer
->	O
where	long
+	O
size	long
>	O
bim	pointer
->	O
size	long
)	O
{	O
bfd_size_type	long
newsize	long
,	O
oldsize	long
;	O
oldsize	long
=	O
(	O
bim	pointer
->	O
size	long
+	O
127	int
)	O
&	O
~	O
(	O
bfd_size_type	long
)	O
127	int
;	O
bim	pointer
->	O
size	long
=	O
abfd	pointer
->	O
where	long
+	O
size	long
;	O
newsize	long
=	O
(	O
bim	pointer
->	O
size	long
+	O
127	int
)	O
&	O
~	O
(	O
bfd_size_type	long
)	O
127	int
;	O
if	O
(	O
newsize	long
>	O
oldsize	long
)	O
{	O
bim	pointer
->	O
buffer	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
bfd_realloc_or_free	function
(	O
bim	pointer
->	O
buffer	pointer
,	O
newsize	long
)	O
;	O
if	O
(	O
bim	pointer
->	O
buffer	pointer
==	O
NULL	O
)	O
{	O
bim	pointer
->	O
size	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
if	O
(	O
newsize	long
>	O
bim	pointer
->	O
size	long
)	O
memset	function
(	O
bim	pointer
->	O
buffer	pointer
+	O
bim	pointer
->	O
size	long
,	O
0	int
,	O
newsize	long
-	O
bim	pointer
->	O
size	long
)	O
;	O
}	O
}	O
memcpy	function
(	O
bim	pointer
->	O
buffer	pointer
+	O
abfd	pointer
->	O
where	long
,	O
ptr	pointer
,	O
(	O
size_t	long
)	O
size	long
)	O
;	O
return	O
size	long
;	O
}	O
static	O
file_ptr	long
memory_btell	function
(	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
return	O
abfd	pointer
->	O
where	long
;	O
}	O
static	O
int	O
memory_bseek	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
file_ptr	long
position	long
,	O
int	O
direction	enum
)	O
{	O
file_ptr	long
nwhere	long
;	O
struct	O
bfd_in_memory	struct
*	O
bim	pointer
;	O
bim	pointer
=	O
(	O
struct	O
bfd_in_memory	struct
*	O
)	O
abfd	pointer
->	O
iostream	pointer
;	O
if	O
(	O
direction	enum
==	O
SEEK_SET	int
)	O
nwhere	long
=	O
position	long
;	O
else	O
nwhere	long
=	O
abfd	pointer
->	O
where	long
+	O
position	long
;	O
if	O
(	O
nwhere	long
<	O
0	int
)	O
{	O
abfd	pointer
->	O
where	long
=	O
0	int
;	O
errno	O
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
(	O
bfd_size_type	long
)	O
nwhere	long
>	O
bim	pointer
->	O
size	long
)	O
{	O
if	O
(	O
abfd	pointer
->	O
direction	enum
==	O
write_direction	int
||	O
abfd	pointer
->	O
direction	enum
==	O
both_direction	int
)	O
{	O
bfd_size_type	long
newsize	long
,	O
oldsize	long
;	O
oldsize	long
=	O
(	O
bim	pointer
->	O
size	long
+	O
127	int
)	O
&	O
~	O
(	O
bfd_size_type	long
)	O
127	int
;	O
bim	pointer
->	O
size	long
=	O
nwhere	long
;	O
newsize	long
=	O
(	O
bim	pointer
->	O
size	long
+	O
127	int
)	O
&	O
~	O
(	O
bfd_size_type	long
)	O
127	int
;	O
if	O
(	O
newsize	long
>	O
oldsize	long
)	O
{	O
bim	pointer
->	O
buffer	pointer
=	O
(	O
bfd_byte	char
*	O
)	O
bfd_realloc_or_free	function
(	O
bim	pointer
->	O
buffer	pointer
,	O
newsize	long
)	O
;	O
if	O
(	O
bim	pointer
->	O
buffer	pointer
==	O
NULL	O
)	O
{	O
errno	O
=	O
EINVAL	int
;	O
bim	pointer
->	O
size	long
=	O
0	int
;	O
return	O
-	O
1	int
;	O
}	O
memset	function
(	O
bim	pointer
->	O
buffer	pointer
+	O
oldsize	long
,	O
0	int
,	O
newsize	long
-	O
oldsize	long
)	O
;	O
}	O
}	O
else	O
{	O
abfd	pointer
->	O
where	long
=	O
bim	pointer
->	O
size	long
;	O
errno	O
=	O
EINVAL	int
;	O
bfd_set_error	function
(	O
bfd_error_file_truncated	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
int	O
memory_bclose	function
(	O
struct	O
bfd	struct
*	O
abfd	pointer
)	O
{	O
struct	O
bfd_in_memory	struct
*	O
bim	pointer
=	O
(	O
struct	O
bfd_in_memory	struct
*	O
)	O
abfd	pointer
->	O
iostream	pointer
;	O
if	O
(	O
bim	pointer
->	O
buffer	pointer
!=	O
NULL	O
)	O
free	function
(	O
bim	pointer
->	O
buffer	pointer
)	O
;	O
free	function
(	O
bim	pointer
)	O
;	O
abfd	pointer
->	O
iostream	pointer
=	O
NULL	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
memory_bflush	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
0	int
;	O
}	O
static	O
int	O
memory_bstat	function
(	O
bfd	struct
*	O
abfd	pointer
,	O
struct	O
stat	struct
*	O
statbuf	pointer
)	O
{	O
struct	O
bfd_in_memory	struct
*	O
bim	pointer
=	O
(	O
struct	O
bfd_in_memory	struct
*	O
)	O
abfd	pointer
->	O
iostream	pointer
;	O
memset	function
(	O
statbuf	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
statbuf	pointer
)	O
)	O
;	O
statbuf	pointer
->	O
st_size	long
=	O
bim	pointer
->	O
size	long
;	O
return	O
0	int
;	O
}	O
static	O
void	O
*	O
memory_bmmap	function
(	O
bfd	struct
*	O
abfd	pointer
ATTRIBUTE_UNUSED	O
,	O
void	O
*	O
addr	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_size_type	long
len	long
ATTRIBUTE_UNUSED	O
,	O
int	O
prot	int
ATTRIBUTE_UNUSED	O
,	O
int	O
flags	int
ATTRIBUTE_UNUSED	O
,	O
file_ptr	long
offset	long
ATTRIBUTE_UNUSED	O
,	O
void	O
*	O
*	O
map_addr	pointer
ATTRIBUTE_UNUSED	O
,	O
bfd_size_type	long
*	O
map_len	pointer
ATTRIBUTE_UNUSED	O
)	O
{	O
return	O
(	O
void	O
*	O
)	O
-	O
1	int
;	O
}	O
const	O
struct	O
bfd_iovec	struct
_bfd_memory_iovec	struct
=	O
{	O
&	O
memory_bread	function
,	O
&	O
memory_bwrite	function
,	O
&	O
memory_btell	function
,	O
&	O
memory_bseek	function
,	O
&	O
memory_bclose	function
,	O
&	O
memory_bflush	function
,	O
&	O
memory_bstat	function
,	O
&	O
memory_bmmap	function
}	O
;	O
