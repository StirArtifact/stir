static	O
int	O
ugswidth	int
=	O
UGSWIDTH	int
;	O
static	O
int	O
encoding_flag	int
;	O
void	O
ls_list_set_encoding_flag	function
(	O
int	O
flag	int
)	O
{	O
encoding_flag	int
=	O
flag	int
;	O
}	O
int	O
ls_list_get_encoding_flag	function
(	O
void	O
)	O
{	O
if	O
(	O
encoding_flag	int
==	O
0	int
)	O
{	O
return	O
VIS_NONE	int
;	O
}	O
return	O
encoding_flag	int
;	O
}	O
int	O
ls_list_set_encoding_by_lang	function
(	O
void	O
)	O
{	O
int	O
flag	int
;	O
char	O
*	O
e	pointer
;	O
e	pointer
=	O
getenv	function
(	O
"LANG"	pointer
)	O
;	O
if	O
(	O
e	pointer
&&	O
strcmp	function
(	O
e	pointer
,	O
"C"	pointer
)	O
==	O
0	int
)	O
{	O
flag	int
=	O
VIS_OCTAL	int
;	O
}	O
else	O
{	O
flag	int
=	O
VIS_NONE	int
;	O
}	O
ls_list_set_encoding_flag	function
(	O
flag	int
)	O
;	O
return	O
flag	int
;	O
}	O
static	O
char	O
*	O
prepend_dotslash	function
(	O
char	O
*	O
str	pointer
,	O
STROB	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
strcmp	function
(	O
str	pointer
,	O
"."	pointer
)	O
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
)	O
;	O
return	O
"./"	pointer
;	O
}	O
else	O
if	O
(	O
strncmp	function
(	O
str	pointer
,	O
"./"	pointer
,	O
2	int
)	O
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
)	O
;	O
return	O
str	pointer
;	O
}	O
else	O
if	O
(	O
strncmp	function
(	O
str	pointer
,	O
"/"	pointer
,	O
1	int
)	O
==	O
0	int
)	O
{	O
E_DEBUG	O
(	O
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"."	pointer
)	O
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"./"	pointer
)	O
;	O
}	O
return	O
str	pointer
;	O
}	O
static	O
char	O
*	O
tartime	function
(	O
time_t	long
t	pointer
)	O
{	O
static	O
char	O
buffer	array
[	O
100	int
]	O
;	O
char	O
*	O
p	pointer
;	O
struct	O
tm	struct
*	O
tm	struct
=	O
localtime	function
(	O
&	O
t	pointer
)	O
;	O
if	O
(	O
tm	struct
)	O
{	O
sprintf	function
(	O
buffer	array
,	O
"%04d-%02d-%02d %02d:%02d:%02d"	pointer
,	O
tm	struct
->	O
tm_year	int
+	O
1900	int
,	O
tm	struct
->	O
tm_mon	int
+	O
1	int
,	O
tm	struct
->	O
tm_mday	int
,	O
tm	struct
->	O
tm_hour	int
,	O
tm	struct
->	O
tm_min	int
,	O
tm	struct
->	O
tm_sec	int
)	O
;	O
}	O
else	O
{	O
sprintf	function
(	O
buffer	array
,	O
"%lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
t	pointer
)	O
;	O
}	O
return	O
buffer	array
;	O
}	O
static	O
char	O
*	O
strip_slash	function
(	O
char	O
*	O
pname	pointer
,	O
int	O
vflag	int
)	O
{	O
char	O
*	O
name	pointer
;	O
name	pointer
=	O
pname	pointer
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_STRIPSLASH	O
)	O
{	O
while	O
(	O
name	pointer
&&	O
*	O
name	pointer
==	O
'.'	O
&&	O
*	O
(	O
name	pointer
+	O
1	int
)	O
==	O
'/'	O
)	O
name	pointer
++	O
;	O
while	O
(	O
name	pointer
&&	O
*	O
name	pointer
==	O
'/'	O
&&	O
*	O
(	O
name	pointer
+	O
1	int
)	O
!=	O
'\0'	O
)	O
name	pointer
++	O
;	O
}	O
return	O
name	pointer
;	O
}	O
static	O
void	O
print_date	function
(	O
STROB	struct
*	O
fp	pointer
,	O
int	O
vflag	int
,	O
int	O
type	enum
,	O
time_t	long
mtime	long
)	O
{	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_ALL_DATES	O
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s"	pointer
,	O
tartime	function
(	O
mtime	long
)	O
)	O
;	O
}	O
else	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_REG_DATES	O
)	O
{	O
if	O
(	O
type	enum
==	O
REGTYPE	char
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s"	pointer
,	O
tartime	function
(	O
mtime	long
)	O
)	O
;	O
}	O
else	O
{	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
static	O
void	O
safe_print	function
(	O
char	O
*	O
str	pointer
,	O
FILE	struct
*	O
fp	pointer
)	O
{	O
char	O
visbuf	array
[	O
5	int
]	O
;	O
char	O
*	O
cp	pointer
;	O
if	O
(	O
isatty	function
(	O
fileno	function
(	O
fp	pointer
)	O
)	O
)	O
{	O
for	O
(	O
cp	pointer
=	O
str	pointer
;	O
*	O
cp	pointer
;	O
cp	pointer
++	O
)	O
{	O
(	O
void	O
)	O
vis	function
(	O
visbuf	array
,	O
cp	pointer
[	O
0	int
]	O
,	O
ls_list_get_encoding_flag	function
(	O
)	O
,	O
cp	pointer
[	O
1	int
]	O
)	O
;	O
(	O
void	O
)	O
fputs	function
(	O
visbuf	array
,	O
fp	pointer
)	O
;	O
}	O
}	O
else	O
{	O
(	O
void	O
)	O
fputs	function
(	O
str	pointer
,	O
fp	pointer
)	O
;	O
}	O
}	O
void	O
ls_list_safe_print_to_strob	function
(	O
char	O
*	O
fp_str	pointer
,	O
STROB	struct
*	O
fp	pointer
,	O
int	O
do_prepend	int
)	O
{	O
char	O
visbuf	array
[	O
5	int
]	O
;	O
char	O
*	O
cp	pointer
;	O
char	O
*	O
str	pointer
;	O
if	O
(	O
do_prepend	int
)	O
{	O
str	pointer
=	O
prepend_dotslash	function
(	O
fp_str	pointer
,	O
fp	pointer
)	O
;	O
}	O
else	O
{	O
str	pointer
=	O
fp_str	pointer
;	O
}	O
if	O
(	O
1	int
||	O
0	int
)	O
{	O
for	O
(	O
cp	pointer
=	O
str	pointer
;	O
*	O
cp	pointer
;	O
cp	pointer
++	O
)	O
{	O
(	O
void	O
)	O
vis	function
(	O
visbuf	array
,	O
cp	pointer
[	O
0	int
]	O
,	O
ls_list_get_encoding_flag	function
(	O
)	O
,	O
cp	pointer
[	O
1	int
]	O
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
visbuf	array
)	O
;	O
}	O
}	O
else	O
{	O
strob_strcat	function
(	O
fp	pointer
,	O
str	pointer
)	O
;	O
}	O
}	O
static	O
void	O
print_size_rdev	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
type	enum
)	O
{	O
intmax_t	long
sizeme	long
;	O
if	O
(	O
(	O
type	enum
==	O
PAX_CHR	O
)	O
||	O
(	O
type	enum
==	O
PAX_BLK	O
)	O
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%4lu,%4lu"	pointer
,	O
(	O
unsigned	O
long	O
)	O
(	O
file_hdr	pointer
->	O
c_rdev_maj	long
)	O
,	O
(	O
unsigned	O
long	O
)	O
(	O
file_hdr	pointer
->	O
c_rdev_min	long
)	O
)	O
;	O
}	O
else	O
{	O
if	O
(	O
(	O
type	enum
==	O
PAX_SLK	O
)	O
||	O
(	O
type	enum
==	O
PAX_HLK	O
)	O
)	O
{	O
sizeme	long
=	O
0	int
;	O
}	O
else	O
{	O
sizeme	long
=	O
(	O
intmax_t	long
)	O
(	O
file_hdr	pointer
->	O
c_filesize	long
)	O
;	O
}	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s"	pointer
,	O
swlib_imaxtostr	function
(	O
sizeme	long
,	O
NULL	O
)	O
)	O
;	O
}	O
}	O
static	O
void	O
print_mode_owners	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
type	enum
,	O
int	O
vflag	int
,	O
char	O
*	O
fp_uname	pointer
,	O
char	O
*	O
fp_gname	pointer
)	O
{	O
char	O
numid	array
[	O
64	int
]	O
;	O
char	O
f_mode	array
[	O
MODELEN	int
]	O
;	O
int	O
pad	int
;	O
char	O
*	O
uname	array
;	O
char	O
*	O
gname	array
;	O
int	O
l_uid	int
;	O
int	O
l_gid	int
;	O
static	O
STROB	struct
*	O
tmpstrob	pointer
=	O
NULL	O
;	O
numid	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
numid	array
[	O
sizeof	O
(	O
numid	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
swbis_strmode	function
(	O
(	O
mode_t	int
)	O
(	O
file_hdr	pointer
->	O
c_mode	short
)	O
,	O
f_mode	array
)	O
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITHOUT_PERMISSIONS	O
)	O
{	O
f_mode	array
[	O
0	int
]	O
=	O
'\0'	O
;	O
}	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITHOUT_OWNERS	O
)	O
{	O
uname	array
=	O
""	pointer
;	O
gname	array
=	O
""	pointer
;	O
l_uid	int
=	O
0	int
;	O
l_gid	int
=	O
0	int
;	O
}	O
else	O
{	O
uname	array
=	O
fp_uname	pointer
;	O
gname	array
=	O
fp_gname	pointer
;	O
l_uid	int
=	O
(	O
int	O
)	O
(	O
file_hdr	pointer
->	O
c_uid	short
)	O
;	O
l_gid	int
=	O
(	O
int	O
)	O
(	O
file_hdr	pointer
->	O
c_gid	short
)	O
;	O
}	O
if	O
(	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_NAMES	O
)	O
||	O
(	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SYSTEM_IDS	O
)	O
&&	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SYSTEM_NAMES	O
)	O
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
LS_LIST_VERBOSE_ALTER_FORM	O
&	O
vflag	int
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
swlib_squash_trailing_char	function
(	O
f_mode	array
,	O
' '	O
)	O
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITHOUT_OWNERS	O
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"[%s] [len=0 []]"	pointer
,	O
f_mode	array
)	O
;	O
}	O
else	O
{	O
if	O
(	O
!	O
tmpstrob	pointer
)	O
tmpstrob	pointer
=	O
strob_open	function
(	O
24	int
)	O
;	O
strob_sprintf	function
(	O
tmpstrob	pointer
,	O
0	int
,	O
"%d(%s)/%d(%s)"	pointer
,	O
l_uid	int
,	O
uname	array
,	O
l_gid	int
,	O
gname	array
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"[%s] [len=%d [%d(%s)/%d(%s)]]"	pointer
,	O
f_mode	array
,	O
strob_strlen	function
(	O
tmpstrob	pointer
)	O
,	O
l_uid	int
,	O
uname	array
,	O
l_gid	int
,	O
gname	array
)	O
;	O
}	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
pad	int
=	O
strlen	function
(	O
uname	array
)	O
+	O
2	int
+	O
strlen	function
(	O
gname	array
)	O
+	O
2	int
+	O
9	int
+	O
1	int
+	O
1	int
+	O
11	int
+	O
11	int
+	O
0	int
;	O
if	O
(	O
pad	int
>	O
ugswidth	int
)	O
{	O
ugswidth	int
=	O
pad	int
;	O
}	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s[%d](%s)/[%d](%s)%*s"	pointer
,	O
f_mode	array
,	O
l_uid	int
,	O
uname	array
,	O
l_gid	int
,	O
gname	array
,	O
ugswidth	int
-	O
pad	int
,	O
""	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SYSTEM_IDS	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
goto	O
do_print_ids	O
;	O
}	O
else	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SYSTEM_NAMES	O
&&	O
strlen	function
(	O
uname	array
)	O
&&	O
strlen	function
(	O
gname	array
)	O
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
goto	O
do_print_names	O
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
if	O
(	O
strlen	function
(	O
uname	array
)	O
&&	O
strlen	function
(	O
gname	array
)	O
)	O
{	O
do_print_names	O
:	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
pad	int
=	O
strlen	function
(	O
uname	array
)	O
+	O
strlen	function
(	O
gname	array
)	O
+	O
9	int
+	O
1	int
;	O
if	O
(	O
pad	int
>	O
ugswidth	int
)	O
{	O
ugswidth	int
=	O
pad	int
;	O
}	O
if	O
(	O
LS_LIST_VERBOSE_ALTER_FORM	O
&	O
vflag	int
)	O
{	O
swlib_squash_trailing_char	function
(	O
f_mode	array
,	O
' '	O
)	O
;	O
if	O
(	O
!	O
tmpstrob	pointer
)	O
tmpstrob	pointer
=	O
strob_open	function
(	O
24	int
)	O
;	O
strob_sprintf	function
(	O
tmpstrob	pointer
,	O
0	int
,	O
"%s/%s"	pointer
,	O
uname	array
,	O
gname	array
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"[%s] [len=%d [%s]]"	pointer
,	O
f_mode	array
,	O
strob_strlen	function
(	O
tmpstrob	pointer
)	O
,	O
strob_str	function
(	O
tmpstrob	pointer
)	O
)	O
;	O
}	O
else	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s%s/%s%*s"	pointer
,	O
f_mode	array
,	O
uname	array
,	O
gname	array
,	O
ugswidth	int
-	O
pad	int
,	O
""	pointer
)	O
;	O
}	O
}	O
else	O
{	O
do_print_ids	O
:	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
snprintf	function
(	O
numid	array
,	O
sizeof	O
(	O
numid	array
)	O
-	O
1	int
,	O
"%d/%d"	pointer
,	O
l_uid	int
,	O
l_gid	int
)	O
;	O
pad	int
=	O
strlen	function
(	O
numid	array
)	O
+	O
8	int
+	O
1	int
;	O
numid	array
[	O
sizeof	O
(	O
numid	array
)	O
-	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
pad	int
>	O
ugswidth	int
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
ugswidth	int
=	O
pad	int
;	O
}	O
if	O
(	O
LS_LIST_VERBOSE_ALTER_FORM	O
&	O
vflag	int
)	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
swlib_squash_trailing_char	function
(	O
f_mode	array
,	O
' '	O
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"[%s] [len=%d [%s]]"	pointer
,	O
f_mode	array
,	O
strlen	function
(	O
numid	array
)	O
,	O
numid	array
)	O
;	O
}	O
else	O
{	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s%s%*s"	pointer
,	O
f_mode	array
,	O
numid	array
,	O
ugswidth	int
-	O
pad	int
,	O
""	pointer
)	O
;	O
}	O
}	O
E_DEBUG	O
(	O
""	pointer
)	O
;	O
}	O
}	O
static	O
void	O
print_linkname	function
(	O
STROB	struct
*	O
fp	pointer
,	O
int	O
type	enum
,	O
char	O
*	O
ln_name	pointer
,	O
int	O
do_prepend	int
)	O
{	O
if	O
(	O
(	O
type	enum
==	O
PAX_HLK	O
)	O
||	O
(	O
type	enum
==	O
PAX_HRG	O
)	O
)	O
{	O
strob_strcat	function
(	O
fp	pointer
,	O
" link to "	pointer
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
ln_name	pointer
,	O
fp	pointer
,	O
do_prepend	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
type	enum
==	O
PAX_SLK	O
)	O
{	O
strob_strcat	function
(	O
fp	pointer
,	O
" -> "	pointer
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
ln_name	pointer
,	O
fp	pointer
,	O
do_prepend	int
)	O
;	O
}	O
else	O
{	O
strob_strcat	function
(	O
fp	pointer
,	O
""	pointer
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
ln_name	pointer
,	O
fp	pointer
,	O
do_prepend	int
)	O
;	O
}	O
}	O
}	O
static	O
void	O
print_dig	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
int	O
do_dig	int
,	O
char	O
*	O
key	pointer
,	O
char	O
*	O
val	array
)	O
{	O
strob_strcat	function
(	O
fp	pointer
,	O
key	pointer
)	O
;	O
if	O
(	O
file_hdr	pointer
->	O
digsM	pointer
->	O
do_poisonM	int
&&	O
strlen	function
(	O
val	array
)	O
==	O
0	int
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"<not available>"	pointer
)	O
;	O
}	O
else	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
"%s"	pointer
,	O
val	array
)	O
;	O
}	O
}	O
static	O
void	O
print_sha512	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
)	O
{	O
print_dig	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
do_sha512	short
,	O
"SHA512="	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
sha512	array
)	O
;	O
}	O
static	O
void	O
print_sha1	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
)	O
{	O
print_dig	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
do_sha1	short
,	O
"SHA1="	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
sha1	array
)	O
;	O
}	O
static	O
void	O
print_md5	function
(	O
STROB	struct
*	O
fp	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
)	O
{	O
print_dig	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
do_md5	short
,	O
"MD5="	pointer
,	O
file_hdr	pointer
->	O
digsM	pointer
->	O
md5	array
)	O
;	O
}	O
static	O
void	O
alt_ls_list_to_string	function
(	O
char	O
*	O
fp_name	pointer
,	O
char	O
*	O
ln_name	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
time_t	long
now	long
,	O
STROB	struct
*	O
fp	pointer
,	O
char	O
*	O
uname	array
,	O
char	O
*	O
gname	array
,	O
int	O
type	enum
,	O
int	O
vflag	int
)	O
{	O
char	O
*	O
name	pointer
;	O
time_t	long
mtime	long
;	O
int	O
did_drop	int
;	O
int	O
name_len	int
;	O
int	O
linkname_len	int
;	O
did_drop	int
=	O
0	int
;	O
name	pointer
=	O
strip_slash	function
(	O
fp_name	pointer
,	O
vflag	int
)	O
;	O
if	O
(	O
type	enum
==	O
DIRTYPE	char
)	O
swlib_toggle_trailing_slash	function
(	O
"drop"	pointer
,	O
fp_name	pointer
,	O
&	O
did_drop	int
)	O
;	O
mtime	long
=	O
(	O
time_t	long
)	O
(	O
file_hdr	pointer
->	O
c_mtime	long
)	O
;	O
strob_strcpy	function
(	O
fp	pointer
,	O
""	pointer
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
name	pointer
,	O
fp	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
name_len	int
=	O
strob_strlen	function
(	O
fp	pointer
)	O
;	O
strob_strcpy	function
(	O
fp	pointer
,	O
""	pointer
)	O
;	O
print_linkname	function
(	O
fp	pointer
,	O
(	O
LS_LIST_VERBOSE_LINKNAME_PLAIN	O
&	O
vflag	int
)	O
?	O
0	int
:	O
type	enum
,	O
ln_name	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
linkname_len	int
=	O
strob_strlen	function
(	O
fp	pointer
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
0	int
,	O
LS_LIST_NAME_LENGTH	pointer
"=%d "	pointer
,	O
name_len	int
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
name	pointer
,	O
fp	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
strob_sprintf	function
(	O
fp	pointer
,	O
1	int
,	O
" ["	pointer
LS_LIST_LINKNAME_LENGTH	pointer
"=%d "	pointer
LS_LIST_LINKNAME_MARK	pointer
,	O
linkname_len	int
)	O
;	O
print_linkname	function
(	O
fp	pointer
,	O
(	O
LS_LIST_VERBOSE_LINKNAME_PLAIN	O
&	O
vflag	int
)	O
?	O
0	int
:	O
type	enum
,	O
ln_name	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]]"	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" ["	pointer
)	O
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SIZE	O
)	O
print_size_rdev	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
type	enum
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]"	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" "	pointer
)	O
;	O
print_mode_owners	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
type	enum
,	O
vflag	int
,	O
uname	array
,	O
gname	array
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" ["	pointer
)	O
;	O
print_date	function
(	O
fp	pointer
,	O
vflag	int
,	O
type	enum
,	O
mtime	long
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]"	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" ["	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
REGTYPE	char
)	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_MD5	O
)	O
print_md5	function
(	O
fp	pointer
,	O
file_hdr	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]"	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" ["	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
REGTYPE	char
)	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SHA1	O
)	O
print_sha1	function
(	O
fp	pointer
,	O
file_hdr	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]"	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" ["	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
REGTYPE	char
)	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_WITH_SHA512	O
)	O
print_sha512	function
(	O
fp	pointer
,	O
file_hdr	pointer
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
"]"	pointer
)	O
;	O
if	O
(	O
type	enum
==	O
DIRTYPE	char
)	O
swlib_toggle_trailing_slash	function
(	O
"restore"	pointer
,	O
fp_name	pointer
,	O
&	O
did_drop	int
)	O
;	O
return	O
;	O
}	O
void	O
ls_list	function
(	O
char	O
*	O
name	pointer
,	O
char	O
*	O
ln_name	pointer
,	O
struct	O
new_cpio_header	struct
*	O
sbp	pointer
,	O
time_t	long
now	long
,	O
FILE	struct
*	O
fp	pointer
,	O
char	O
*	O
uname	array
,	O
char	O
*	O
gname	array
,	O
int	O
type	enum
,	O
int	O
vflag	int
)	O
{	O
STROB	struct
*	O
buf	pointer
=	O
strob_open	function
(	O
160	int
)	O
;	O
ls_list_to_string	function
(	O
name	pointer
,	O
ln_name	pointer
,	O
sbp	pointer
,	O
now	long
,	O
buf	pointer
,	O
uname	array
,	O
gname	array
,	O
type	enum
,	O
vflag	int
)	O
;	O
fprintf	function
(	O
fp	pointer
,	O
"%s\n"	pointer
,	O
strob_str	function
(	O
buf	pointer
)	O
)	O
;	O
(	O
void	O
)	O
fflush	function
(	O
fp	pointer
)	O
;	O
strob_close	function
(	O
buf	pointer
)	O
;	O
}	O
void	O
ls_list_to_string	function
(	O
char	O
*	O
fp_name	pointer
,	O
char	O
*	O
ln_name	pointer
,	O
struct	O
new_cpio_header	struct
*	O
file_hdr	pointer
,	O
time_t	long
now	long
,	O
STROB	struct
*	O
fp	pointer
,	O
char	O
*	O
uname	array
,	O
char	O
*	O
gname	array
,	O
int	O
type	enum
,	O
int	O
vflag	int
)	O
{	O
char	O
*	O
name	pointer
;	O
time_t	long
mtime	long
;	O
name	pointer
=	O
strip_slash	function
(	O
fp_name	pointer
,	O
vflag	int
)	O
;	O
if	O
(	O
vflag	int
&	O
LS_LIST_VERBOSE_OFF	O
)	O
{	O
strob_sprintf	function
(	O
fp	pointer
,	O
0	int
,	O
"%s"	pointer
,	O
name	pointer
)	O
;	O
return	O
;	O
}	O
else	O
if	O
(	O
LS_LIST_VERBOSE_ALTER_FORM	O
&	O
vflag	int
)	O
{	O
alt_ls_list_to_string	function
(	O
fp_name	pointer
,	O
ln_name	pointer
,	O
file_hdr	pointer
,	O
now	long
,	O
fp	pointer
,	O
uname	array
,	O
gname	array
,	O
type	enum
,	O
vflag	int
)	O
;	O
return	O
;	O
}	O
else	O
{	O
;	O
}	O
mtime	long
=	O
(	O
time_t	long
)	O
(	O
file_hdr	pointer
->	O
c_mtime	long
)	O
;	O
strob_strcpy	function
(	O
fp	pointer
,	O
""	pointer
)	O
;	O
print_mode_owners	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
type	enum
,	O
vflag	int
,	O
uname	array
,	O
gname	array
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" "	pointer
)	O
;	O
print_size_rdev	function
(	O
fp	pointer
,	O
file_hdr	pointer
,	O
type	enum
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" "	pointer
)	O
;	O
print_date	function
(	O
fp	pointer
,	O
vflag	int
,	O
type	enum
,	O
mtime	long
)	O
;	O
strob_strcat	function
(	O
fp	pointer
,	O
" "	pointer
)	O
;	O
ls_list_safe_print_to_strob	function
(	O
name	pointer
,	O
fp	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
print_linkname	function
(	O
fp	pointer
,	O
(	O
LS_LIST_VERBOSE_LINKNAME_PLAIN	O
&	O
vflag	int
)	O
?	O
0	int
:	O
type	enum
,	O
ln_name	pointer
,	O
vflag	int
&	O
LS_LIST_VERBOSE_PREPEND_DOTSLASH	O
)	O
;	O
return	O
;	O
}	O
