void	O
psout	function
(	O
struct	O
proc_stat_list	O
*	O
procs	pointer
,	O
char	O
*	O
fmt_string	pointer
,	O
int	O
posix_fmt	int
,	O
struct	O
ps_fmt_specs	O
*	O
specs	pointer
,	O
char	O
*	O
sort_key_name	pointer
,	O
int	O
sort_reverse	int
,	O
int	O
output_width	int
,	O
int	O
print_heading	int
,	O
int	O
squash_bogus_fields	int
,	O
int	O
squash_nominal_fields	int
,	O
int	O
top	int
)	O
{	O
error_t	O
err	O
;	O
struct	O
ps_stream	O
*	O
output	pointer
;	O
struct	O
ps_fmt	O
*	O
fmt	pointer
;	O
err	O
=	O
ps_fmt_create	function
(	O
fmt_string	pointer
,	O
posix_fmt	int
,	O
specs	pointer
,	O
&	O
fmt	pointer
)	O
;	O
if	O
(	O
err	O
)	O
{	O
char	O
*	O
problem	pointer
;	O
ps_fmt_creation_error	function
(	O
fmt_string	pointer
,	O
posix_fmt	int
,	O
specs	pointer
,	O
&	O
problem	pointer
)	O
;	O
error	function
(	O
4	int
,	O
0	int
,	O
"%s"	pointer
,	O
problem	pointer
)	O
;	O
}	O
if	O
(	O
squash_bogus_fields	int
)	O
{	O
ps_flags_t	O
bogus_flags	O
=	O
ps_fmt_needs	O
(	O
fmt	pointer
)	O
;	O
err	O
=	O
proc_stat_list_find_bogus_flags	function
(	O
procs	pointer
,	O
&	O
bogus_flags	O
)	O
;	O
if	O
(	O
err	O
)	O
error	function
(	O
0	int
,	O
err	O
,	O
"Couldn't remove bogus fields"	pointer
)	O
;	O
else	O
ps_fmt_squash_flags	function
(	O
fmt	pointer
,	O
bogus_flags	O
)	O
;	O
}	O
if	O
(	O
squash_nominal_fields	int
)	O
{	O
int	O
nominal	O
(	O
struct	O
ps_fmt_field	O
*	O
field	pointer
)	O
{	O
return	O
!	O
(	O
field	pointer
->	O
flags	O
&	O
PS_FMT_FIELD_KEEP	O
)	O
&&	O
proc_stat_list_spec_nominal	O
(	O
procs	pointer
,	O
field	pointer
->	O
spec	O
)	O
;	O
}	O
ps_fmt_squash	function
(	O
fmt	pointer
,	O
nominal	O
)	O
;	O
}	O
if	O
(	O
sort_key_name	pointer
)	O
{	O
const	O
struct	O
ps_fmt_spec	O
*	O
sort_key	pointer
;	O
if	O
(	O
*	O
sort_key_name	pointer
==	O
'-'	O
)	O
{	O
sort_reverse	int
=	O
1	int
;	O
sort_key_name	pointer
++	O
;	O
}	O
sort_key	pointer
=	O
ps_fmt_specs_find	function
(	O
specs	pointer
,	O
sort_key_name	pointer
)	O
;	O
if	O
(	O
sort_key	pointer
==	O
NULL	O
)	O
error	function
(	O
3	int
,	O
0	int
,	O
"%s: bad sort key"	pointer
,	O
sort_key_name	pointer
)	O
;	O
err	O
=	O
proc_stat_list_sort	function
(	O
procs	pointer
,	O
sort_key	pointer
,	O
sort_reverse	int
)	O
;	O
if	O
(	O
err	O
)	O
error	function
(	O
0	int
,	O
err	O
,	O
"Couldn't sort processes"	pointer
)	O
;	O
}	O
err	O
=	O
ps_stream_create	function
(	O
stdout	pointer
,	O
&	O
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	function
(	O
5	int
,	O
err	O
,	O
"Can't make output stream"	pointer
)	O
;	O
if	O
(	O
print_heading	int
)	O
{	O
if	O
(	O
procs	pointer
->	O
num_procs	O
>	O
0	int
)	O
{	O
err	O
=	O
ps_fmt_write_titles	function
(	O
fmt	pointer
,	O
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	function
(	O
0	int
,	O
err	O
,	O
"Can't print titles"	pointer
)	O
;	O
ps_stream_newline	function
(	O
output	pointer
)	O
;	O
}	O
else	O
error	function
(	O
1	int
,	O
0	int
,	O
"No applicable processes"	pointer
)	O
;	O
}	O
if	O
(	O
output_width	int
)	O
{	O
int	O
deduce_term_size	function
(	O
int	O
fd	int
,	O
char	O
*	O
type	pointer
,	O
int	O
*	O
width	pointer
,	O
int	O
*	O
height	pointer
)	O
;	O
if	O
(	O
output_width	int
<	O
0	int
)	O
if	O
(	O
!	O
deduce_term_size	function
(	O
1	int
,	O
getenv	function
(	O
"TERM"	pointer
)	O
,	O
&	O
output_width	int
,	O
0	int
)	O
)	O
output_width	int
=	O
80	int
;	O
ps_fmt_set_output_width	function
(	O
fmt	pointer
,	O
output_width	int
)	O
;	O
}	O
if	O
(	O
top	int
)	O
{	O
int	O
filter	O
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
return	O
--	O
top	int
>=	O
0	int
;	O
}	O
if	O
(	O
top	int
<	O
0	int
)	O
{	O
top	int
+=	O
procs	pointer
->	O
num_procs	O
;	O
proc_stat_list_filter1	function
(	O
procs	pointer
,	O
filter	O
,	O
0	int
,	O
1	int
)	O
;	O
}	O
else	O
proc_stat_list_filter1	function
(	O
procs	pointer
,	O
filter	O
,	O
0	int
,	O
0	int
)	O
;	O
}	O
err	O
=	O
proc_stat_list_fmt	function
(	O
procs	pointer
,	O
fmt	pointer
,	O
output	pointer
)	O
;	O
if	O
(	O
err	O
)	O
error	function
(	O
5	int
,	O
err	O
,	O
"Couldn't output process status"	pointer
)	O
;	O
}	O
