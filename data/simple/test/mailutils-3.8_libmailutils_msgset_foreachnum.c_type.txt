struct	O
action_closure	struct
{	O
mu_msgset_msgno_action_t	pointer
action	pointer
;	O
void	O
*	O
data	pointer
;	O
mu_msgset_t	pointer
msgset	pointer
;	O
int	O
flags	int
;	O
}	O
;	O
static	O
int	O
call_action	function
(	O
struct	O
action_closure	struct
*	O
clos	pointer
,	O
size_t	long
i	long
)	O
{	O
size_t	long
n	long
;	O
int	O
cmd	int
;	O
if	O
(	O
_MU_MSGSET_MODE	O
(	O
clos	pointer
->	O
msgset	pointer
->	O
flags	int
)	O
!=	O
_MU_MSGSET_MODE	O
(	O
clos	pointer
->	O
flags	int
)	O
)	O
{	O
int	O
rc	int
;	O
switch	O
(	O
_MU_MSGSET_MODE	O
(	O
clos	pointer
->	O
flags	int
)	O
)	O
{	O
case	O
MU_MSGSET_NUM	int
:	O
cmd	int
=	O
MU_MAILBOX_UID_TO_MSGNO	int
;	O
break	O
;	O
case	O
MU_MSGSET_UID	int
:	O
cmd	int
=	O
MU_MAILBOX_MSGNO_TO_UID	int
;	O
break	O
;	O
default	O
:	O
return	O
EINVAL	int
;	O
}	O
rc	int
=	O
mu_mailbox_translate	function
(	O
clos	pointer
->	O
msgset	pointer
->	O
mbox	pointer
,	O
cmd	int
,	O
i	long
,	O
&	O
n	long
)	O
;	O
if	O
(	O
rc	int
==	O
MU_ERR_NOENT	O
)	O
return	O
0	int
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
else	O
n	long
=	O
i	long
;	O
return	O
clos	pointer
->	O
action	pointer
(	O
n	long
,	O
clos	pointer
->	O
data	pointer
)	O
;	O
}	O
static	O
int	O
procrange	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
mu_msgrange	struct
*	O
mp	pointer
=	O
item	pointer
;	O
struct	O
action_closure	struct
*	O
clos	pointer
=	O
data	pointer
;	O
size_t	long
i	long
;	O
int	O
rc	int
=	O
0	int
;	O
if	O
(	O
clos	pointer
->	O
flags	int
&	O
MU_MSGSET_FOREACH_BACKWARD	int
)	O
for	O
(	O
i	long
=	O
mp	pointer
->	O
msg_end	long
;	O
rc	int
==	O
0	int
&&	O
i	long
>=	O
mp	pointer
->	O
msg_beg	long
;	O
i	long
--	O
)	O
rc	int
=	O
call_action	function
(	O
clos	pointer
,	O
i	long
)	O
;	O
else	O
for	O
(	O
i	long
=	O
mp	pointer
->	O
msg_beg	long
;	O
rc	int
==	O
0	int
&&	O
i	long
<=	O
mp	pointer
->	O
msg_end	long
;	O
i	long
++	O
)	O
rc	int
=	O
call_action	function
(	O
clos	pointer
,	O
i	long
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mu_msgset_foreach_num	function
(	O
mu_msgset_t	pointer
msgset	pointer
,	O
int	O
flags	int
,	O
mu_msgset_msgno_action_t	pointer
action	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
int	O
rc	int
;	O
struct	O
action_closure	struct
clos	pointer
;	O
rc	int
=	O
mu_msgset_aggregate	function
(	O
msgset	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
clos	pointer
.	O
action	pointer
=	O
action	pointer
;	O
clos	pointer
.	O
data	pointer
=	O
data	pointer
;	O
clos	pointer
.	O
flags	int
=	O
flags	int
;	O
clos	pointer
.	O
msgset	pointer
=	O
msgset	pointer
;	O
return	O
mu_list_foreach_dir	function
(	O
msgset	pointer
->	O
list	pointer
,	O
!	O
!	O
(	O
flags	int
&	O
MU_MSGSET_FOREACH_BACKWARD	int
)	O
,	O
procrange	function
,	O
&	O
clos	pointer
)	O
;	O
}	O
