bool	bool
cookie_domain_match	function
(	O
const	O
char	O
*	O
domain	pointer
,	O
const	O
char	O
*	O
host	pointer
)	O
{	O
size_t	long
domain_length	long
,	O
host_length	long
;	O
const	O
char	O
*	O
p	pointer
;	O
debug_printf	O
(	O
"domain_match(%s,%s)"	pointer
,	O
domain	pointer
,	O
host	pointer
)	O
;	O
if	O
(	O
!	O
strcmp	function
(	O
domain	pointer
,	O
host	pointer
)	O
)	O
return	O
true	int
;	O
domain_length	long
=	O
strlen	function
(	O
domain	pointer
)	O
;	O
host_length	long
=	O
strlen	function
(	O
host	pointer
)	O
;	O
if	O
(	O
domain_length	long
>=	O
host_length	long
)	O
return	O
false	int
;	O
p	pointer
=	O
host	pointer
+	O
host_length	long
-	O
domain_length	long
;	O
if	O
(	O
!	O
strcmp	function
(	O
p	pointer
,	O
domain	pointer
)	O
&&	O
p	pointer
[	O
-	O
1	int
]	O
==	O
'.'	O
)	O
return	O
true	int
;	O
return	O
false	int
;	O
}	O
bool	bool
cookie_path_match	function
(	O
const	O
char	O
*	O
cookie_path	pointer
,	O
const	O
char	O
*	O
request_path	pointer
)	O
{	O
const	O
char	O
*	O
last_slash	pointer
;	O
size_t	long
cookie_path_length	long
,	O
iri_path_length	long
;	O
bool	bool
cookie_path_slash	bool
=	O
false	int
;	O
if	O
(	O
*	O
cookie_path	pointer
==	O
'/'	O
)	O
{	O
cookie_path	pointer
++	O
;	O
cookie_path_slash	bool
=	O
true	int
;	O
}	O
if	O
(	O
request_path	pointer
&&	O
*	O
request_path	pointer
==	O
'/'	O
)	O
request_path	pointer
++	O
;	O
debug_printf	O
(	O
"path_match(/%s,/%s)\n"	pointer
,	O
cookie_path	pointer
,	O
request_path	pointer
?	O
request_path	pointer
:	O
""	pointer
)	O
;	O
if	O
(	O
!	O
request_path	pointer
||	O
!	O
(	O
last_slash	pointer
=	O
strrchr	function
(	O
request_path	pointer
,	O
'/'	O
)	O
)	O
)	O
{	O
request_path	pointer
=	O
""	pointer
;	O
iri_path_length	long
=	O
0	int
;	O
}	O
else	O
{	O
iri_path_length	long
=	O
last_slash	pointer
-	O
request_path	pointer
;	O
}	O
cookie_path_length	long
=	O
strlen	function
(	O
cookie_path	pointer
)	O
;	O
if	O
(	O
iri_path_length	long
<	O
cookie_path_length	long
)	O
return	O
false	int
;	O
if	O
(	O
iri_path_length	long
==	O
0	int
&&	O
cookie_path_length	long
==	O
0	int
)	O
return	O
true	int
;	O
if	O
(	O
!	O
strncmp	function
(	O
cookie_path	pointer
,	O
request_path	pointer
,	O
cookie_path_length	long
)	O
)	O
{	O
if	O
(	O
!	O
request_path	pointer
[	O
cookie_path_length	long
]	O
)	O
return	O
true	int
;	O
if	O
(	O
(	O
cookie_path_length	long
>	O
0	int
&&	O
cookie_path	pointer
[	O
cookie_path_length	long
-	O
1	int
]	O
==	O
'/'	O
)	O
||	O
cookie_path_slash	bool
)	O
return	O
true	int
;	O
if	O
(	O
request_path	pointer
[	O
cookie_path_length	long
]	O
==	O
'/'	O
)	O
return	O
true	int
;	O
}	O
return	O
false	int
;	O
}	O
wget_cookie	struct
*	O
wget_cookie_init	function
(	O
wget_cookie	struct
*	O
cookie	pointer
)	O
{	O
if	O
(	O
!	O
cookie	pointer
)	O
cookie	pointer
=	O
wget_calloc	function
(	O
1	int
,	O
sizeof	O
(	O
wget_cookie	struct
)	O
)	O
;	O
else	O
memset	function
(	O
cookie	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
cookie	pointer
)	O
)	O
;	O
cookie	pointer
->	O
last_access	long
=	O
cookie	pointer
->	O
creation	long
=	O
time	struct
(	O
NULL	O
)	O
;	O
return	O
cookie	pointer
;	O
}	O
void	O
wget_cookie_deinit	function
(	O
wget_cookie	struct
*	O
cookie	pointer
)	O
{	O
if	O
(	O
cookie	pointer
)	O
{	O
xfree	O
(	O
cookie	pointer
->	O
name	pointer
)	O
;	O
xfree	O
(	O
cookie	pointer
->	O
value	pointer
)	O
;	O
xfree	O
(	O
cookie	pointer
->	O
domain	pointer
)	O
;	O
xfree	O
(	O
cookie	pointer
->	O
path	pointer
)	O
;	O
}	O
}	O
void	O
wget_cookie_free	function
(	O
wget_cookie	struct
*	O
*	O
cookie	pointer
)	O
{	O
if	O
(	O
cookie	pointer
)	O
{	O
wget_cookie_deinit	function
(	O
*	O
cookie	pointer
)	O
;	O
xfree	O
(	O
*	O
cookie	pointer
)	O
;	O
}	O
}	O
void	O
cookie_free	function
(	O
void	O
*	O
cookie	pointer
)	O
{	O
if	O
(	O
cookie	pointer
)	O
{	O
wget_cookie_deinit	function
(	O
cookie	pointer
)	O
;	O
xfree	O
(	O
cookie	pointer
)	O
;	O
}	O
}	O
char	O
*	O
wget_cookie_to_setcookie	function
(	O
wget_cookie	struct
*	O
cookie	pointer
)	O
{	O
char	O
expires	long
[	O
32	int
]	O
=	O
""	pointer
;	O
if	O
(	O
!	O
cookie	pointer
)	O
return	O
wget_strdup	function
(	O
"(null)"	pointer
)	O
;	O
if	O
(	O
cookie	pointer
->	O
expires	long
)	O
wget_http_print_date	function
(	O
cookie	pointer
->	O
expires	long
,	O
expires	long
,	O
sizeof	O
(	O
expires	long
)	O
)	O
;	O
return	O
wget_aprintf	function
(	O
"%s=%s%s%s%s%s; domain=%s%s%s%s"	pointer
,	O
cookie	pointer
->	O
name	pointer
,	O
cookie	pointer
->	O
value	pointer
,	O
*	O
expires	long
?	O
"; expires="	pointer
:	O
""	pointer
,	O
*	O
expires	long
?	O
expires	long
:	O
""	pointer
,	O
cookie	pointer
->	O
path	pointer
?	O
"; path="	pointer
:	O
""	pointer
,	O
cookie	pointer
->	O
path	pointer
?	O
cookie	pointer
->	O
path	pointer
:	O
""	pointer
,	O
cookie	pointer
->	O
host_only	bool
?	O
""	pointer
:	O
"."	pointer
,	O
cookie	pointer
->	O
domain	pointer
,	O
cookie	pointer
->	O
http_only	bool
?	O
"; HttpOnly"	pointer
:	O
""	pointer
,	O
cookie	pointer
->	O
secure_only	bool
?	O
"; Secure"	pointer
:	O
""	pointer
)	O
;	O
}	O
const	O
char	O
*	O
wget_cookie_parse_setcookie	function
(	O
const	O
char	O
*	O
s	pointer
,	O
wget_cookie	struct
*	O
*	O
_cookie	pointer
)	O
{	O
const	O
char	O
*	O
name	pointer
,	O
*	O
p	pointer
;	O
wget_cookie	struct
*	O
cookie	pointer
=	O
wget_cookie_init	function
(	O
NULL	O
)	O
;	O
while	O
(	O
c_isspace	function
(	O
*	O
s	pointer
)	O
)	O
s	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
s	pointer
;	O
(	O
*	O
s	pointer
>=	O
32	int
&&	O
*	O
s	pointer
<=	O
126	int
&&	O
*	O
s	pointer
!=	O
'='	O
&&	O
*	O
s	pointer
!=	O
';'	O
)	O
||	O
*	O
s	pointer
<	O
0	int
;	O
s	pointer
++	O
)	O
;	O
while	O
(	O
s	pointer
>	O
p	pointer
&&	O
c_isspace	function
(	O
s	pointer
[	O
-	O
1	int
]	O
)	O
)	O
s	pointer
--	O
;	O
cookie	pointer
->	O
name	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
s	pointer
-	O
p	pointer
)	O
;	O
while	O
(	O
c_isspace	function
(	O
*	O
s	pointer
)	O
)	O
s	pointer
++	O
;	O
if	O
(	O
cookie	pointer
->	O
name	pointer
&&	O
*	O
cookie	pointer
->	O
name	pointer
&&	O
*	O
s	pointer
==	O
'='	O
)	O
{	O
for	O
(	O
s	pointer
++	O
;	O
c_isspace	function
(	O
*	O
s	pointer
)	O
;	O
)	O
s	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
s	pointer
;	O
(	O
*	O
s	pointer
>=	O
32	int
&&	O
*	O
s	pointer
<=	O
126	int
&&	O
*	O
s	pointer
!=	O
';'	O
)	O
||	O
*	O
s	pointer
<	O
0	int
;	O
s	pointer
++	O
)	O
;	O
while	O
(	O
s	pointer
>	O
p	pointer
&&	O
c_isspace	function
(	O
s	pointer
[	O
-	O
1	int
]	O
)	O
)	O
s	pointer
--	O
;	O
cookie	pointer
->	O
value	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
s	pointer
-	O
p	pointer
)	O
;	O
do	O
{	O
while	O
(	O
*	O
s	pointer
&&	O
*	O
s	pointer
!=	O
';'	O
)	O
s	pointer
++	O
;	O
if	O
(	O
!	O
*	O
s	pointer
)	O
break	O
;	O
for	O
(	O
s	pointer
++	O
;	O
c_isspace	function
(	O
*	O
s	pointer
)	O
;	O
)	O
s	pointer
++	O
;	O
if	O
(	O
!	O
*	O
s	pointer
)	O
break	O
;	O
s	pointer
=	O
wget_http_parse_token	function
(	O
s	pointer
,	O
&	O
name	pointer
)	O
;	O
if	O
(	O
name	pointer
)	O
{	O
while	O
(	O
*	O
s	pointer
&&	O
*	O
s	pointer
!=	O
'='	O
&&	O
*	O
s	pointer
!=	O
';'	O
)	O
s	pointer
++	O
;	O
if	O
(	O
*	O
s	pointer
==	O
'='	O
)	O
{	O
for	O
(	O
s	pointer
++	O
;	O
c_isspace	function
(	O
*	O
s	pointer
)	O
;	O
)	O
s	pointer
++	O
;	O
for	O
(	O
p	pointer
=	O
s	pointer
;	O
(	O
*	O
s	pointer
>=	O
32	int
&&	O
*	O
s	pointer
<=	O
126	int
&&	O
*	O
s	pointer
!=	O
';'	O
)	O
||	O
*	O
s	pointer
<	O
0	int
;	O
s	pointer
++	O
)	O
;	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"expires"	pointer
)	O
)	O
{	O
cookie	pointer
->	O
expires	long
=	O
wget_http_parse_full_date	function
(	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"max-age"	pointer
)	O
)	O
{	O
long	O
offset	long
=	O
atol	function
(	O
p	pointer
)	O
;	O
if	O
(	O
offset	long
>	O
0	int
)	O
{	O
if	O
(	O
offset	long
>	O
INT_MAX	O
)	O
offset	long
=	O
INT_MAX	O
;	O
cookie	pointer
->	O
maxage	long
=	O
time	struct
(	O
NULL	O
)	O
+	O
offset	long
;	O
}	O
else	O
cookie	pointer
->	O
maxage	long
=	O
0	int
;	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"domain"	pointer
)	O
)	O
{	O
if	O
(	O
p	pointer
!=	O
s	pointer
)	O
{	O
if	O
(	O
*	O
p	pointer
==	O
'.'	O
)	O
{	O
do	O
{	O
p	pointer
++	O
;	O
}	O
while	O
(	O
*	O
p	pointer
==	O
'.'	O
)	O
;	O
cookie	pointer
->	O
domain_dot	bool
=	O
1	int
;	O
}	O
else	O
cookie	pointer
->	O
domain_dot	bool
=	O
0	int
;	O
while	O
(	O
s	pointer
>	O
p	pointer
&&	O
c_isspace	function
(	O
s	pointer
[	O
-	O
1	int
]	O
)	O
)	O
s	pointer
--	O
;	O
xfree	O
(	O
cookie	pointer
->	O
domain	pointer
)	O
;	O
cookie	pointer
->	O
domain	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
s	pointer
-	O
p	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"path"	pointer
)	O
)	O
{	O
while	O
(	O
s	pointer
>	O
p	pointer
&&	O
c_isspace	function
(	O
s	pointer
[	O
-	O
1	int
]	O
)	O
)	O
s	pointer
--	O
;	O
xfree	O
(	O
cookie	pointer
->	O
path	pointer
)	O
;	O
cookie	pointer
->	O
path	pointer
=	O
wget_strmemdup	function
(	O
p	pointer
,	O
s	pointer
-	O
p	pointer
)	O
;	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"secure"	pointer
)	O
)	O
{	O
cookie	pointer
->	O
secure_only	bool
=	O
1	int
;	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"httponly"	pointer
)	O
)	O
{	O
cookie	pointer
->	O
http_only	bool
=	O
1	int
;	O
}	O
else	O
{	O
debug_printf	O
(	O
"Unsupported cookie-av '%s'\n"	pointer
,	O
name	pointer
)	O
;	O
}	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"secure"	pointer
)	O
)	O
{	O
cookie	pointer
->	O
secure_only	bool
=	O
1	int
;	O
}	O
else	O
if	O
(	O
!	O
wget_strcasecmp_ascii	function
(	O
name	pointer
,	O
"httponly"	pointer
)	O
)	O
{	O
cookie	pointer
->	O
http_only	bool
=	O
1	int
;	O
}	O
else	O
{	O
debug_printf	O
(	O
"Unsupported cookie-av '%s'\n"	pointer
,	O
name	pointer
)	O
;	O
}	O
xfree	O
(	O
name	pointer
)	O
;	O
}	O
}	O
while	O
(	O
*	O
s	pointer
)	O
;	O
}	O
else	O
{	O
wget_cookie_free	function
(	O
&	O
cookie	pointer
)	O
;	O
error_printf	O
(	O
_	O
(	O
"Cookie without name or assignment ignored\n"	pointer
)	O
)	O
;	O
}	O
if	O
(	O
_cookie	pointer
)	O
*	O
_cookie	pointer
=	O
cookie	pointer
;	O
else	O
wget_cookie_free	function
(	O
&	O
cookie	pointer
)	O
;	O
return	O
s	pointer
;	O
}	O
static	O
int	O
cookie_normalize_cookie	function
(	O
const	O
wget_iri	struct
*	O
iri	pointer
,	O
wget_cookie	struct
*	O
cookie	pointer
)	O
{	O
cookie	pointer
->	O
normalized	bool
=	O
0	int
;	O
if	O
(	O
cookie	pointer
->	O
maxage	long
)	O
cookie	pointer
->	O
expires	long
=	O
cookie	pointer
->	O
maxage	long
;	O
cookie	pointer
->	O
persistent	bool
=	O
!	O
!	O
cookie	pointer
->	O
expires	long
;	O
wget_strtolower	function
(	O
(	O
char	O
*	O
)	O
cookie	pointer
->	O
domain	pointer
)	O
;	O
if	O
(	O
iri	pointer
)	O
{	O
if	O
(	O
!	O
wget_strncmp	function
(	O
cookie	pointer
->	O
name	pointer
,	O
"__Secure-"	pointer
,	O
9	int
)	O
)	O
{	O
if	O
(	O
!	O
cookie	pointer
->	O
secure_only	bool
||	O
iri	pointer
->	O
scheme	enum
!=	O
WGET_IRI_SCHEME_HTTPS	int
)	O
{	O
debug_printf	O
(	O
"Cookie prefix requires secure origin: %s %s\n"	pointer
,	O
cookie	pointer
->	O
name	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
if	O
(	O
!	O
wget_strncmp	function
(	O
cookie	pointer
->	O
name	pointer
,	O
"__Host-"	pointer
,	O
7	int
)	O
)	O
{	O
if	O
(	O
!	O
cookie	pointer
->	O
secure_only	bool
||	O
iri	pointer
->	O
scheme	enum
!=	O
WGET_IRI_SCHEME_HTTPS	int
)	O
{	O
debug_printf	O
(	O
"Cookie prefix requires secure origin: %s %s\n"	pointer
,	O
cookie	pointer
->	O
name	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
!	O
cookie	pointer
->	O
host_only	bool
)	O
{	O
debug_printf	O
(	O
"Cookie prefix requires hostonly flag: %s %s\n"	pointer
,	O
cookie	pointer
->	O
name	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
wget_strcmp	function
(	O
cookie	pointer
->	O
path	pointer
,	O
"/"	pointer
)	O
)	O
{	O
debug_printf	O
(	O
"Cookie prefix requires path \"/\": %s %s\n"	pointer
,	O
cookie	pointer
->	O
name	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
if	O
(	O
cookie	pointer
->	O
domain	pointer
&&	O
*	O
cookie	pointer
->	O
domain	pointer
)	O
{	O
if	O
(	O
!	O
strcmp	function
(	O
cookie	pointer
->	O
domain	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
)	O
{	O
cookie	pointer
->	O
host_only	bool
=	O
1	int
;	O
}	O
else	O
if	O
(	O
cookie_domain_match	function
(	O
cookie	pointer
->	O
domain	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
)	O
{	O
cookie	pointer
->	O
host_only	bool
=	O
0	int
;	O
}	O
else	O
{	O
debug_printf	O
(	O
"Domain mismatch: %s %s\n"	pointer
,	O
cookie	pointer
->	O
domain	pointer
,	O
iri	pointer
->	O
host	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
else	O
{	O
xfree	O
(	O
cookie	pointer
->	O
domain	pointer
)	O
;	O
cookie	pointer
->	O
domain	pointer
=	O
wget_strdup	function
(	O
iri	pointer
->	O
host	pointer
)	O
;	O
cookie	pointer
->	O
host_only	bool
=	O
1	int
;	O
}	O
if	O
(	O
!	O
cookie	pointer
->	O
path	pointer
||	O
*	O
cookie	pointer
->	O
path	pointer
!=	O
'/'	O
)	O
{	O
const	O
char	O
*	O
p	pointer
=	O
iri	pointer
->	O
path	pointer
?	O
strrchr	function
(	O
iri	pointer
->	O
path	pointer
,	O
'/'	O
)	O
:	O
NULL	O
;	O
xfree	O
(	O
cookie	pointer
->	O
path	pointer
)	O
;	O
if	O
(	O
p	pointer
&&	O
p	pointer
!=	O
iri	pointer
->	O
path	pointer
)	O
{	O
cookie	pointer
->	O
path	pointer
=	O
wget_strmemdup	function
(	O
iri	pointer
->	O
path	pointer
,	O
p	pointer
-	O
iri	pointer
->	O
path	pointer
)	O
;	O
}	O
else	O
{	O
cookie	pointer
->	O
path	pointer
=	O
wget_strdup	function
(	O
"/"	pointer
)	O
;	O
}	O
}	O
}	O
cookie	pointer
->	O
normalized	bool
=	O
1	int
;	O
return	O
0	int
;	O
}	O
int	O
wget_cookie_normalize	function
(	O
const	O
wget_iri	struct
*	O
iri	pointer
,	O
wget_cookie	struct
*	O
cookie	pointer
)	O
{	O
int	O
ret	int
=	O
cookie_normalize_cookie	function
(	O
iri	pointer
,	O
cookie	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
void	O
wget_cookie_normalize_cookies	function
(	O
const	O
wget_iri	struct
*	O
iri	pointer
,	O
const	O
wget_vector	struct
*	O
cookies	pointer
)	O
{	O
for	O
(	O
int	O
it	int
=	O
0	int
;	O
it	int
<	O
wget_vector_size	function
(	O
cookies	pointer
)	O
;	O
it	int
++	O
)	O
cookie_normalize_cookie	function
(	O
iri	pointer
,	O
wget_vector_get	function
(	O
cookies	pointer
,	O
it	int
)	O
)	O
;	O
}	O
