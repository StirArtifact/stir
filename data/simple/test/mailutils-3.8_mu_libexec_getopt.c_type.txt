static	O
void	O
describe	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
unused	pointer
)	O
{	O
int	O
len	long
=	O
strcspn	function
(	O
po	pointer
->	O
po_prog_doc	pointer
,	O
"\n"	pointer
)	O
;	O
mu_printf	function
(	O
"%.*s\n"	pointer
,	O
len	long
,	O
po	pointer
->	O
po_prog_doc	pointer
)	O
;	O
exit	function
(	O
0	int
)	O
;	O
}	O
struct	O
mu_option	struct
common_options	array
[	O
]	O
=	O
{	O
{	O
"describe"	pointer
,	O
0	int
,	O
NULL	O
,	O
MU_OPTION_HIDDEN	int
,	O
"describe the program"	pointer
,	O
mu_c_string	int
,	O
NULL	O
,	O
describe	function
}	O
,	O
MU_OPTION_END	O
}	O
;	O
void	O
mu_action_getopt	function
(	O
int	O
*	O
pargc	pointer
,	O
char	O
*	O
*	O
*	O
pargv	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
docstring	pointer
,	O
char	O
const	O
*	O
argdoc	pointer
)	O
{	O
static	O
struct	O
mu_parseopt	struct
pohint	pointer
=	O
{	O
.	O
po_flags	int
=	O
MU_PARSEOPT_PACKAGE_NAME	int
|	O
MU_PARSEOPT_PACKAGE_URL	int
|	O
MU_PARSEOPT_BUG_ADDRESS	int
|	O
MU_PARSEOPT_VERSION_HOOK	int
,	O
.	O
po_package_name	pointer
=	O
PACKAGE_NAME	pointer
,	O
.	O
po_package_url	pointer
=	O
PACKAGE_URL	pointer
,	O
.	O
po_bug_address	pointer
=	O
PACKAGE_BUGREPORT	pointer
,	O
.	O
po_version_hook	pointer
=	O
mu_version_hook	function
}	O
;	O
static	O
char	O
*	O
defcapa	array
[	O
]	O
=	O
{	O
"debug"	pointer
,	O
NULL	O
}	O
;	O
struct	O
mu_cfg_parse_hints	struct
cfhint	pointer
=	O
{	O
.	O
flags	int
=	O
0	int
}	O
;	O
struct	O
mu_option	struct
*	O
options	array
[	O
3	int
]	O
=	O
{	O
common_options	array
,	O
opt	pointer
,	O
NULL	O
}	O
;	O
struct	O
mu_cli_setup	struct
cli	struct
=	O
{	O
.	O
prog_doc	pointer
=	O
(	O
char	O
*	O
)	O
docstring	pointer
,	O
.	O
prog_args	pointer
=	O
(	O
char	O
*	O
)	O
argdoc	pointer
,	O
.	O
optv	pointer
=	O
options	array
}	O
;	O
char	O
*	O
p	pointer
;	O
p	pointer
=	O
getenv	function
(	O
"MAILUTILS_PROGNAME"	pointer
)	O
;	O
if	O
(	O
p	pointer
)	O
{	O
pohint	pointer
.	O
po_flags	int
|=	O
MU_PARSEOPT_PROG_NAME	int
;	O
pohint	pointer
.	O
po_prog_name	pointer
=	O
p	pointer
;	O
}	O
MU_APP_INIT_NLS	O
(	O
)	O
;	O
mu_cli_ext	function
(	O
*	O
pargc	pointer
,	O
*	O
pargv	pointer
,	O
&	O
cli	struct
,	O
&	O
pohint	pointer
,	O
&	O
cfhint	pointer
,	O
defcapa	array
,	O
NULL	O
,	O
pargc	pointer
,	O
pargv	pointer
)	O
;	O
}	O
