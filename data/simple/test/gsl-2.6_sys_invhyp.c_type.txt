double	O
gsl_acosh	function
(	O
const	O
double	O
x	double
)	O
{	O
if	O
(	O
x	double
>	O
1.0	int
/	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
return	O
log	function
(	O
x	double
)	O
+	O
M_LN2	int
;	O
}	O
else	O
if	O
(	O
x	double
>	O
2	int
)	O
{	O
return	O
log	function
(	O
2	int
*	O
x	double
-	O
1	int
/	O
(	O
sqrt	function
(	O
x	double
*	O
x	double
-	O
1	int
)	O
+	O
x	double
)	O
)	O
;	O
}	O
else	O
if	O
(	O
x	double
>	O
1	int
)	O
{	O
double	O
t	double
=	O
x	double
-	O
1	int
;	O
return	O
log1p	function
(	O
t	double
+	O
sqrt	function
(	O
2	int
*	O
t	double
+	O
t	double
*	O
t	double
)	O
)	O
;	O
}	O
else	O
if	O
(	O
x	double
==	O
1	int
)	O
{	O
return	O
0	int
;	O
}	O
else	O
{	O
return	O
GSL_NAN	O
;	O
}	O
}	O
double	O
gsl_asinh	function
(	O
const	O
double	O
x	double
)	O
{	O
double	O
a	double
=	O
fabs	function
(	O
x	double
)	O
;	O
double	O
s	double
=	O
(	O
x	double
<	O
0	int
)	O
?	O
-	O
1	int
:	O
1	int
;	O
if	O
(	O
a	double
>	O
1	int
/	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
return	O
s	double
*	O
(	O
log	function
(	O
a	double
)	O
+	O
M_LN2	int
)	O
;	O
}	O
else	O
if	O
(	O
a	double
>	O
2	int
)	O
{	O
return	O
s	double
*	O
log	function
(	O
2	int
*	O
a	double
+	O
1	int
/	O
(	O
a	double
+	O
sqrt	function
(	O
a	double
*	O
a	double
+	O
1	int
)	O
)	O
)	O
;	O
}	O
else	O
if	O
(	O
a	double
>	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
double	O
a2	double
=	O
a	double
*	O
a	double
;	O
return	O
s	double
*	O
log1p	function
(	O
a	double
+	O
a2	double
/	O
(	O
1	int
+	O
sqrt	function
(	O
1	int
+	O
a2	double
)	O
)	O
)	O
;	O
}	O
else	O
{	O
return	O
x	double
;	O
}	O
}	O
double	O
gsl_atanh	function
(	O
const	O
double	O
x	double
)	O
{	O
double	O
a	double
=	O
fabs	function
(	O
x	double
)	O
;	O
double	O
s	double
=	O
(	O
x	double
<	O
0	int
)	O
?	O
-	O
1	int
:	O
1	int
;	O
if	O
(	O
a	double
>	O
1	int
)	O
{	O
return	O
GSL_NAN	O
;	O
}	O
else	O
if	O
(	O
a	double
==	O
1	int
)	O
{	O
return	O
(	O
x	double
<	O
0	int
)	O
?	O
GSL_NEGINF	O
:	O
GSL_POSINF	O
;	O
}	O
else	O
if	O
(	O
a	double
>=	O
0.5	int
)	O
{	O
return	O
s	double
*	O
0.5	int
*	O
log1p	function
(	O
2	int
*	O
a	double
/	O
(	O
1	int
-	O
a	double
)	O
)	O
;	O
}	O
else	O
if	O
(	O
a	double
>	O
GSL_DBL_EPSILON	int
)	O
{	O
return	O
s	double
*	O
0.5	int
*	O
log1p	function
(	O
2	int
*	O
a	double
+	O
2	int
*	O
a	double
*	O
a	double
/	O
(	O
1	int
-	O
a	double
)	O
)	O
;	O
}	O
else	O
{	O
return	O
x	double
;	O
}	O
}	O
