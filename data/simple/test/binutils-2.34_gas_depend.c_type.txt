static	O
char	O
*	O
dep_file	pointer
=	O
NULL	O
;	O
struct	O
dependency	struct
{	O
char	O
*	O
file	pointer
;	O
struct	O
dependency	struct
*	O
next	pointer
;	O
}	O
;	O
static	O
struct	O
dependency	struct
*	O
dep_chain	pointer
=	O
NULL	O
;	O
static	O
int	O
column	int
=	O
0	int
;	O
static	O
int	O
quote_string_for_make	function
(	O
FILE	struct
*	O
,	O
const	O
char	O
*	O
)	O
;	O
static	O
void	O
wrap_output	function
(	O
FILE	struct
*	O
,	O
const	O
char	O
*	O
,	O
int	O
)	O
;	O
void	O
start_dependencies	function
(	O
char	O
*	O
filename	pointer
)	O
{	O
dep_file	pointer
=	O
filename	pointer
;	O
}	O
void	O
register_dependency	function
(	O
const	O
char	O
*	O
filename	pointer
)	O
{	O
struct	O
dependency	struct
*	O
dep	pointer
;	O
if	O
(	O
dep_file	pointer
==	O
NULL	O
)	O
return	O
;	O
for	O
(	O
dep	pointer
=	O
dep_chain	pointer
;	O
dep	pointer
!=	O
NULL	O
;	O
dep	pointer
=	O
dep	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
!	O
filename_cmp	function
(	O
filename	pointer
,	O
dep	pointer
->	O
file	pointer
)	O
)	O
return	O
;	O
}	O
dep	pointer
=	O
XNEW	O
(	O
struct	O
dependency	struct
)	O
;	O
dep	pointer
->	O
file	pointer
=	O
xstrdup	function
(	O
filename	pointer
)	O
;	O
dep	pointer
->	O
next	pointer
=	O
dep_chain	pointer
;	O
dep_chain	pointer
=	O
dep	pointer
;	O
}	O
static	O
int	O
quote_string_for_make	function
(	O
FILE	struct
*	O
file	pointer
,	O
const	O
char	O
*	O
src	pointer
)	O
{	O
const	O
char	O
*	O
p	pointer
=	O
src	pointer
;	O
int	O
i	pointer
=	O
0	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
c	struct
=	O
*	O
p	pointer
++	O
;	O
switch	O
(	O
c	struct
)	O
{	O
case	O
'\0'	O
:	O
case	O
' '	O
:	O
case	O
'\t'	O
:	O
{	O
const	O
char	O
*	O
q	pointer
;	O
for	O
(	O
q	pointer
=	O
p	pointer
-	O
1	int
;	O
src	pointer
<	O
q	pointer
&&	O
q	pointer
[	O
-	O
1	int
]	O
==	O
'\\'	O
;	O
q	pointer
--	O
)	O
{	O
if	O
(	O
file	pointer
)	O
putc	function
(	O
'\\'	O
,	O
file	pointer
)	O
;	O
i	pointer
++	O
;	O
}	O
}	O
if	O
(	O
!	O
c	struct
)	O
return	O
i	pointer
;	O
if	O
(	O
file	pointer
)	O
putc	function
(	O
'\\'	O
,	O
file	pointer
)	O
;	O
i	pointer
++	O
;	O
goto	O
ordinary_char	O
;	O
case	O
'$'	O
:	O
if	O
(	O
file	pointer
)	O
putc	function
(	O
c	struct
,	O
file	pointer
)	O
;	O
i	pointer
++	O
;	O
default	O
:	O
ordinary_char	O
:	O
if	O
(	O
file	pointer
)	O
putc	function
(	O
c	struct
,	O
file	pointer
)	O
;	O
i	pointer
++	O
;	O
break	O
;	O
}	O
}	O
}	O
static	O
void	O
wrap_output	function
(	O
FILE	struct
*	O
f	pointer
,	O
const	O
char	O
*	O
string	pointer
,	O
int	O
spacer	int
)	O
{	O
int	O
len	long
=	O
quote_string_for_make	function
(	O
NULL	O
,	O
string	pointer
)	O
;	O
if	O
(	O
len	long
==	O
0	int
)	O
return	O
;	O
if	O
(	O
column	int
&&	O
(	O
MAX_COLUMNS	int
-	O
1	int
-	O
2	int
<	O
column	int
+	O
len	long
)	O
)	O
{	O
fprintf	function
(	O
f	pointer
,	O
" \\\n "	pointer
)	O
;	O
column	int
=	O
0	int
;	O
if	O
(	O
spacer	int
==	O
' '	O
)	O
spacer	int
=	O
'\0'	O
;	O
}	O
if	O
(	O
spacer	int
==	O
' '	O
)	O
{	O
putc	function
(	O
spacer	int
,	O
f	pointer
)	O
;	O
++	O
column	int
;	O
}	O
quote_string_for_make	function
(	O
f	pointer
,	O
string	pointer
)	O
;	O
column	int
+=	O
len	long
;	O
if	O
(	O
spacer	int
==	O
':'	O
)	O
{	O
putc	function
(	O
spacer	int
,	O
f	pointer
)	O
;	O
++	O
column	int
;	O
}	O
}	O
void	O
print_dependencies	function
(	O
void	O
)	O
{	O
FILE	struct
*	O
f	pointer
;	O
struct	O
dependency	struct
*	O
dep	pointer
;	O
if	O
(	O
dep_file	pointer
==	O
NULL	O
)	O
return	O
;	O
f	pointer
=	O
fopen	function
(	O
dep_file	pointer
,	O
FOPEN_WT	pointer
)	O
;	O
if	O
(	O
f	pointer
==	O
NULL	O
)	O
{	O
as_warn	function
(	O
_	O
(	O
"can't open `%s' for writing"	pointer
)	O
,	O
dep_file	pointer
)	O
;	O
return	O
;	O
}	O
column	int
=	O
0	int
;	O
wrap_output	function
(	O
f	pointer
,	O
out_file_name	pointer
,	O
':'	O
)	O
;	O
for	O
(	O
dep	pointer
=	O
dep_chain	pointer
;	O
dep	pointer
!=	O
NULL	O
;	O
dep	pointer
=	O
dep	pointer
->	O
next	pointer
)	O
wrap_output	function
(	O
f	pointer
,	O
dep	pointer
->	O
file	pointer
,	O
' '	O
)	O
;	O
putc	function
(	O
'\n'	O
,	O
f	pointer
)	O
;	O
if	O
(	O
fclose	function
(	O
f	pointer
)	O
)	O
as_warn	function
(	O
_	O
(	O
"can't close `%s'"	pointer
)	O
,	O
dep_file	pointer
)	O
;	O
}	O
