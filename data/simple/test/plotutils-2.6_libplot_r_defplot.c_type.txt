const	O
Plotter	struct
_pl_r_default_plotter	struct
=	O
{	O
_pl_r_initialize	function
,	O
_pl_r_terminate	function
,	O
_pl_r_begin_page	function
,	O
_pl_r_erase_page	function
,	O
_pl_r_end_page	function
,	O
_pl_g_push_state	function
,	O
_pl_g_pop_state	function
,	O
_pl_r_paint_path	function
,	O
_pl_r_paint_paths	function
,	O
_pl_r_path_is_flushable	function
,	O
_pl_r_maybe_prepaint_segments	function
,	O
_pl_g_paint_marker	function
,	O
_pl_r_paint_point	function
,	O
_pl_g_paint_text_string_with_escapes	function
,	O
_pl_g_paint_text_string	function
,	O
_pl_g_get_text_width	function
,	O
_pl_g_retrieve_font	function
,	O
_pl_g_flush_output	function
,	O
_pl_g_warning	function
,	O
_pl_g_error	function
,	O
}	O
;	O
void	O
_pl_r_initialize	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_initialize	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
data	pointer
->	O
type	enum
=	O
PL_REGIS	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
output_model	enum
=	O
PL_OUTPUT_VIA_CUSTOM_ROUTINES_IN_REAL_TIME	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_wide_lines	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_dash_array	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_solid_fill	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_odd_winding_fill	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_nonzero_winding_fill	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_settable_bg	int
=	O
1	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_escaped_string_support	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_ps_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_pcl_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_stick_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_extra_stick_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_other_fonts	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
default_font_type	int
=	O
PL_F_HERSHEY	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
pcl_before_ps	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_horizontal_justification	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_vertical_justification	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
issue_font_warning	enum
=	O
true	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
max_unfilled_path_length	int
=	O
PL_MAX_UNFILLED_PATH_LENGTH	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
have_mixed_paths	enum
=	O
false	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_arc_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellarc_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_quad_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_cubic_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_box_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_circle_scaling	enum
=	O
AS_UNIFORM	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_ellipse_scaling	enum
=	O
AS_NONE	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_model_type	int
=	O
(	O
int	O
)	O
DISP_MODEL_VIRTUAL	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
display_coors_type	int
=	O
(	O
int	O
)	O
DISP_DEVICE_COORS_INTEGER_NON_LIBXMI	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
flipped_y	enum
=	O
true	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
imin	int
=	O
144	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
imax	int
=	O
623	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmin	int
=	O
479	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
jmax	int
=	O
0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmin	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
xmax	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymin	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
ymax	double
=	O
0.0	int
;	O
_plotter	pointer
->	O
data	pointer
->	O
page_data	pointer
=	O
(	O
plPageData	struct
*	O
)	O
NULL	O
;	O
_compute_ndc_to_device_map	function
(	O
_plotter	pointer
->	O
data	pointer
)	O
;	O
_plotter	pointer
->	O
regis_pos	struct
.	O
x	double
=	O
0	int
;	O
_plotter	pointer
->	O
regis_pos	struct
.	O
y	double
=	O
0	int
;	O
_plotter	pointer
->	O
regis_position_is_unknown	enum
=	O
true	int
;	O
_plotter	pointer
->	O
regis_line_type	int
=	O
PL_L_SOLID	int
;	O
_plotter	pointer
->	O
regis_line_type_is_unknown	enum
=	O
true	int
;	O
_plotter	pointer
->	O
regis_fgcolor	int
=	O
0	int
;	O
_plotter	pointer
->	O
regis_bgcolor	int
=	O
0	int
;	O
_plotter	pointer
->	O
regis_fgcolor_is_unknown	enum
=	O
true	int
;	O
_plotter	pointer
->	O
regis_bgcolor_is_unknown	enum
=	O
true	int
;	O
}	O
void	O
_pl_r_terminate	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
_pl_g_terminate	function
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
}	O
