static	O
int	O
answer_to_connection	function
(	O
void	O
*	O
cls	pointer
,	O
struct	O
MHD_Connection	O
*	O
connection	pointer
,	O
const	O
char	O
*	O
url	pointer
,	O
const	O
char	O
*	O
method	pointer
,	O
const	O
char	O
*	O
version	pointer
,	O
const	O
char	O
*	O
upload_data	pointer
,	O
size_t	long
*	O
upload_data_size	pointer
,	O
void	O
*	O
*	O
con_cls	pointer
)	O
{	O
char	O
*	O
user	pointer
;	O
char	O
*	O
pass	pointer
;	O
int	O
fail	int
;	O
int	O
ret	int
;	O
struct	O
MHD_Response	O
*	O
response	pointer
;	O
(	O
void	O
)	O
cls	pointer
;	O
(	O
void	O
)	O
url	pointer
;	O
(	O
void	O
)	O
version	pointer
;	O
(	O
void	O
)	O
upload_data	pointer
;	O
(	O
void	O
)	O
upload_data_size	pointer
;	O
if	O
(	O
0	int
!=	O
strcmp	function
(	O
method	pointer
,	O
"GET"	pointer
)	O
)	O
return	O
MHD_NO	int
;	O
if	O
(	O
NULL	O
==	O
*	O
con_cls	pointer
)	O
{	O
*	O
con_cls	pointer
=	O
connection	pointer
;	O
return	O
MHD_YES	int
;	O
}	O
pass	pointer
=	O
NULL	O
;	O
user	pointer
=	O
MHD_basic_auth_get_username_password	function
(	O
connection	pointer
,	O
&	O
pass	pointer
)	O
;	O
fail	int
=	O
(	O
(	O
NULL	O
==	O
user	pointer
)	O
||	O
(	O
0	int
!=	O
strcmp	function
(	O
user	pointer
,	O
"root"	pointer
)	O
)	O
||	O
(	O
0	int
!=	O
strcmp	function
(	O
pass	pointer
,	O
"pa$$w0rd"	pointer
)	O
)	O
)	O
;	O
if	O
(	O
NULL	O
!=	O
user	pointer
)	O
MHD_free	function
(	O
user	pointer
)	O
;	O
if	O
(	O
NULL	O
!=	O
pass	pointer
)	O
MHD_free	function
(	O
pass	pointer
)	O
;	O
if	O
(	O
fail	int
)	O
{	O
const	O
char	O
*	O
page	pointer
=	O
"<html><body>Go away.</body></html>"	pointer
;	O
response	pointer
=	O
MHD_create_response_from_buffer	function
(	O
strlen	function
(	O
page	pointer
)	O
,	O
(	O
void	O
*	O
)	O
page	pointer
,	O
MHD_RESPMEM_PERSISTENT	int
)	O
;	O
ret	int
=	O
MHD_queue_basic_auth_fail_response	function
(	O
connection	pointer
,	O
"my realm"	pointer
,	O
response	pointer
)	O
;	O
}	O
else	O
{	O
const	O
char	O
*	O
page	pointer
=	O
"<html><body>A secret.</body></html>"	pointer
;	O
response	pointer
=	O
MHD_create_response_from_buffer	function
(	O
strlen	function
(	O
page	pointer
)	O
,	O
(	O
void	O
*	O
)	O
page	pointer
,	O
MHD_RESPMEM_PERSISTENT	int
)	O
;	O
ret	int
=	O
MHD_queue_response	function
(	O
connection	pointer
,	O
MHD_HTTP_OK	int
,	O
response	pointer
)	O
;	O
}	O
MHD_destroy_response	function
(	O
response	pointer
)	O
;	O
return	O
ret	int
;	O
}	O
int	O
main	function
(	O
void	O
)	O
{	O
struct	O
MHD_Daemon	O
*	O
daemon	function
;	O
daemon	function
=	O
MHD_start_daemon	function
(	O
MHD_USE_INTERNAL_POLLING_THREAD	int
,	O
PORT	int
,	O
NULL	O
,	O
NULL	O
,	O
&	O
answer_to_connection	function
,	O
NULL	O
,	O
MHD_OPTION_END	int
)	O
;	O
if	O
(	O
NULL	O
==	O
daemon	function
)	O
return	O
1	int
;	O
(	O
void	O
)	O
getchar	function
(	O
)	O
;	O
MHD_stop_daemon	function
(	O
daemon	function
)	O
;	O
return	O
0	int
;	O
}	O
