int	O
gsl_sf_multiply_e	function
(	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
const	O
double	O
ax	double
=	O
fabs	function
(	O
x	double
)	O
;	O
const	O
double	O
ay	double
=	O
fabs	function
(	O
y	double
)	O
;	O
if	O
(	O
x	double
==	O
0.0	int
||	O
y	double
==	O
0.0	int
)	O
{	O
result	pointer
->	O
val	double
=	O
0.0	int
;	O
result	pointer
->	O
err	double
=	O
0.0	int
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
(	O
ax	double
<=	O
1.0	int
&&	O
ay	double
>=	O
1.0	int
)	O
||	O
(	O
ay	double
<=	O
1.0	int
&&	O
ax	double
>=	O
1.0	int
)	O
)	O
{	O
result	pointer
->	O
val	double
=	O
x	double
*	O
y	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
const	O
double	O
f	pointer
=	O
1.0	int
-	O
2.0	int
*	O
GSL_DBL_EPSILON	int
;	O
const	O
double	O
min	double
=	O
GSL_MIN_DBL	function
(	O
fabs	function
(	O
x	double
)	O
,	O
fabs	function
(	O
y	double
)	O
)	O
;	O
const	O
double	O
max	double
=	O
GSL_MAX_DBL	function
(	O
fabs	function
(	O
x	double
)	O
,	O
fabs	function
(	O
y	double
)	O
)	O
;	O
if	O
(	O
max	double
<	O
0.9	int
*	O
GSL_SQRT_DBL_MAX	int
||	O
min	double
<	O
(	O
f	pointer
*	O
DBL_MAX	O
)	O
/	O
max	double
)	O
{	O
result	pointer
->	O
val	double
=	O
GSL_COERCE_DBL	O
(	O
x	double
*	O
y	double
)	O
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
CHECK_UNDERFLOW	O
(	O
result	pointer
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
OVERFLOW_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
}	O
}	O
int	O
gsl_sf_multiply_err_e	function
(	O
const	O
double	O
x	double
,	O
const	O
double	O
dx	double
,	O
const	O
double	O
y	double
,	O
const	O
double	O
dy	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
int	O
status	int
=	O
gsl_sf_multiply_e	function
(	O
x	double
,	O
y	double
,	O
result	pointer
)	O
;	O
result	pointer
->	O
err	double
+=	O
fabs	function
(	O
dx	double
*	O
y	double
)	O
+	O
fabs	function
(	O
dy	double
*	O
x	double
)	O
;	O
return	O
status	int
;	O
}	O
double	O
gsl_sf_multiply	function
(	O
const	O
double	O
x	double
,	O
const	O
double	O
y	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_multiply_e	function
(	O
x	double
,	O
y	double
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
