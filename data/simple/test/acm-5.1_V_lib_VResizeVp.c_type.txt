extern	O
void	O
VComputeClipNormals	function
(	O
Viewport	struct
*	O
v	struct
)	O
;	O
extern	O
void	O
ResizeAWindow	function
(	O
AWindow	struct
*	O
w	pointer
,	O
int	O
height	int
,	O
int	O
width	int
)	O
;	O
void	O
VResizeViewport	function
(	O
Viewport	struct
*	O
v	struct
,	O
double	O
unit	double
,	O
double	O
dist	double
,	O
double	O
scale	int
,	O
int	O
width	int
,	O
int	O
height	int
)	O
{	O
VPoint	struct
clip	struct
[	O
4	int
]	O
;	O
v	struct
->	O
width	int
=	O
width	int
;	O
v	struct
->	O
height	int
=	O
height	int
;	O
if	O
(	O
v	struct
->	O
flags	short
&	O
VPPixmap	int
)	O
{	O
XFreePixmap	function
(	O
v	struct
->	O
dpy	pointer
,	O
v	struct
->	O
monoPixmap	long
)	O
;	O
v	struct
->	O
monoPixmap	long
=	O
XCreatePixmap	function
(	O
v	struct
->	O
dpy	pointer
,	O
RootWindow	O
(	O
v	struct
->	O
dpy	pointer
,	O
v	struct
->	O
screen	pointer
)	O
,	O
v	struct
->	O
width	int
,	O
v	struct
->	O
height	int
,	O
DisplayPlanes	O
(	O
v	struct
->	O
dpy	pointer
,	O
v	struct
->	O
screen	pointer
)	O
)	O
;	O
}	O
v	struct
->	O
dist	double
=	O
dist	double
;	O
v	struct
->	O
units	double
=	O
unit	double
;	O
v	struct
->	O
Scale	struct
.	O
x	double
=	O
v	struct
->	O
xres	double
*	O
dist	double
*	O
scale	int
*	O
4	int
;	O
v	struct
->	O
Scale	struct
.	O
y	double
=	O
v	struct
->	O
yres	double
*	O
dist	double
*	O
scale	int
*	O
4	int
;	O
v	struct
->	O
Scale	struct
.	O
z	double
=	O
1.0	int
;	O
v	struct
->	O
Middl	struct
.	O
x	double
=	O
width	int
*	O
2	int
;	O
v	struct
->	O
Middl	struct
.	O
y	double
=	O
height	int
*	O
2	int
;	O
clip	struct
[	O
0	int
]	O
.	O
x	double
=	O
-	O
width	int
/	O
v	struct
->	O
xres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
0	int
]	O
.	O
y	double
=	O
-	O
height	int
/	O
v	struct
->	O
yres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
0	int
]	O
.	O
z	double
=	O
dist	double
;	O
clip	struct
[	O
1	int
]	O
.	O
x	double
=	O
-	O
width	int
/	O
v	struct
->	O
xres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
1	int
]	O
.	O
y	double
=	O
height	int
/	O
v	struct
->	O
yres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
1	int
]	O
.	O
z	double
=	O
dist	double
;	O
clip	struct
[	O
2	int
]	O
.	O
x	double
=	O
width	int
/	O
v	struct
->	O
xres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
2	int
]	O
.	O
y	double
=	O
height	int
/	O
v	struct
->	O
yres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
2	int
]	O
.	O
z	double
=	O
dist	double
;	O
clip	struct
[	O
3	int
]	O
.	O
x	double
=	O
width	int
/	O
v	struct
->	O
xres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
3	int
]	O
.	O
y	double
=	O
-	O
height	int
/	O
v	struct
->	O
yres	double
/	O
2.0	int
/	O
scale	int
;	O
clip	struct
[	O
3	int
]	O
.	O
z	double
=	O
dist	double
;	O
VDestroyPolygon	O
(	O
v	struct
->	O
clipPoly	pointer
)	O
;	O
v	struct
->	O
clipPoly	pointer
=	O
VCreatePolygon	function
(	O
4	int
,	O
clip	struct
,	O
(	O
VColor	struct
*	O
)	O
0	int
)	O
;	O
VGetPlanes	function
(	O
v	struct
->	O
clipPoly	pointer
)	O
;	O
VComputeClipNormals	function
(	O
v	struct
)	O
;	O
}	O
