static	O
int	O
split	function
(	O
char	O
const	O
*	O
s	pointer
,	O
char	O
const	O
*	O
*	O
lastdot	pointer
)	O
{	O
size_t	long
count	long
;	O
*	O
lastdot	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
s	pointer
||	O
!	O
*	O
s	pointer
)	O
return	O
0	int
;	O
count	long
=	O
1	int
;	O
do	O
{	O
if	O
(	O
*	O
s	pointer
++	O
==	O
'.'	O
)	O
{	O
*	O
lastdot	pointer
=	O
s	pointer
-	O
1	int
;	O
count	long
++	O
;	O
}	O
}	O
while	O
(	O
*	O
s	pointer
)	O
;	O
return	O
count	long
;	O
}	O
int	O
countnumflds	function
(	O
char	O
const	O
*	O
s	pointer
)	O
{	O
register	O
char	O
const	O
*	O
sp	pointer
;	O
register	O
int	O
count	long
;	O
if	O
(	O
!	O
(	O
sp	pointer
=	O
s	pointer
)	O
||	O
!	O
*	O
sp	pointer
)	O
return	O
0	int
;	O
count	long
=	O
1	int
;	O
do	O
{	O
if	O
(	O
*	O
sp	pointer
++	O
==	O
'.'	O
)	O
count	long
++	O
;	O
}	O
while	O
(	O
*	O
sp	pointer
)	O
;	O
return	O
(	O
count	long
)	O
;	O
}	O
static	O
void	O
accumulate_branchno	function
(	O
struct	O
divvy	struct
*	O
space	pointer
,	O
char	O
const	O
*	O
revno	pointer
)	O
{	O
char	O
const	O
*	O
end	pointer
;	O
int	O
nfields	int
=	O
split	function
(	O
revno	pointer
,	O
&	O
end	pointer
)	O
;	O
if	O
(	O
nfields	int
&	O
1	int
)	O
accs	O
(	O
space	pointer
,	O
revno	pointer
)	O
;	O
else	O
accumulate_range	function
(	O
space	pointer
,	O
revno	pointer
,	O
end	pointer
)	O
;	O
}	O
struct	O
cbuf	struct
take	function
(	O
size_t	long
count	long
,	O
char	O
const	O
*	O
ref	pointer
)	O
{	O
struct	O
cbuf	struct
rv	struct
;	O
char	O
const	O
*	O
end	pointer
=	O
ref	pointer
;	O
if	O
(	O
!	O
count	long
)	O
count	long
=	O
-	O
2	int
+	O
(	O
1U	int
|	O
(	O
1	int
+	O
countnumflds	function
(	O
ref	pointer
)	O
)	O
)	O
;	O
while	O
(	O
count	long
--	O
)	O
while	O
(	O
*	O
end	pointer
&&	O
'.'	O
!=	O
*	O
end	pointer
++	O
)	O
continue	O
;	O
accumulate_range	function
(	O
SINGLE	O
,	O
ref	pointer
,	O
*	O
end	pointer
?	O
end	pointer
-	O
1	int
:	O
end	pointer
)	O
;	O
rv	struct
.	O
string	pointer
=	O
finish_string	function
(	O
SINGLE	O
,	O
&	O
rv	struct
.	O
size	long
)	O
;	O
return	O
rv	struct
;	O
}	O
int	O
cmpnum	function
(	O
char	O
const	O
*	O
num1	pointer
,	O
char	O
const	O
*	O
num2	pointer
)	O
{	O
register	O
char	O
const	O
*	O
s1	pointer
,	O
*	O
s2	pointer
;	O
register	O
size_t	long
d1	pointer
,	O
d2	pointer
;	O
register	O
int	O
r	pointer
;	O
s1	pointer
=	O
num1	pointer
?	O
num1	pointer
:	O
""	pointer
;	O
s2	pointer
=	O
num2	pointer
?	O
num2	pointer
:	O
""	pointer
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
!	O
*	O
s1	pointer
)	O
return	O
(	O
unsigned	O
char	O
)	O
*	O
s2	pointer
;	O
if	O
(	O
!	O
*	O
s2	pointer
)	O
return	O
-	O
1	int
;	O
while	O
(	O
*	O
s1	pointer
==	O
'0'	O
)	O
++	O
s1	pointer
;	O
while	O
(	O
*	O
s2	pointer
==	O
'0'	O
)	O
++	O
s2	pointer
;	O
for	O
(	O
d1	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s1	pointer
+	O
d1	pointer
)	O
)	O
;	O
d1	pointer
++	O
)	O
continue	O
;	O
for	O
(	O
d2	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s2	pointer
+	O
d2	pointer
)	O
)	O
;	O
d2	pointer
++	O
)	O
continue	O
;	O
if	O
(	O
d1	pointer
!=	O
d2	pointer
)	O
return	O
d1	pointer
<	O
d2	pointer
?	O
-	O
1	int
:	O
1	int
;	O
if	O
(	O
(	O
r	pointer
=	O
memcmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
d1	pointer
)	O
)	O
)	O
return	O
r	pointer
;	O
s1	pointer
+=	O
d1	pointer
;	O
s2	pointer
+=	O
d1	pointer
;	O
if	O
(	O
*	O
s1	pointer
)	O
s1	pointer
++	O
;	O
if	O
(	O
*	O
s2	pointer
)	O
s2	pointer
++	O
;	O
}	O
}	O
int	O
cmpnumfld	function
(	O
char	O
const	O
*	O
num1	pointer
,	O
char	O
const	O
*	O
num2	pointer
,	O
int	O
fld	int
)	O
{	O
register	O
char	O
const	O
*	O
s1	pointer
,	O
*	O
s2	pointer
;	O
register	O
size_t	long
d1	pointer
,	O
d2	pointer
;	O
s1	pointer
=	O
num1	pointer
;	O
s2	pointer
=	O
num2	pointer
;	O
while	O
(	O
--	O
fld	int
)	O
{	O
while	O
(	O
*	O
s1	pointer
++	O
!=	O
'.'	O
)	O
continue	O
;	O
while	O
(	O
*	O
s2	pointer
++	O
!=	O
'.'	O
)	O
continue	O
;	O
}	O
while	O
(	O
*	O
s1	pointer
==	O
'0'	O
)	O
++	O
s1	pointer
;	O
for	O
(	O
d1	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s1	pointer
+	O
d1	pointer
)	O
)	O
;	O
d1	pointer
++	O
)	O
continue	O
;	O
while	O
(	O
*	O
s2	pointer
==	O
'0'	O
)	O
++	O
s2	pointer
;	O
for	O
(	O
d2	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s2	pointer
+	O
d2	pointer
)	O
)	O
;	O
d2	pointer
++	O
)	O
continue	O
;	O
return	O
d1	pointer
<	O
d2	pointer
?	O
-	O
1	int
:	O
d1	pointer
==	O
d2	pointer
?	O
memcmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
d1	pointer
)	O
:	O
1	int
;	O
}	O
static	O
char	O
const	O
*	O
normalizeyear	function
(	O
char	O
const	O
*	O
date	pointer
,	O
char	O
year	array
[	O
5	int
]	O
)	O
{	O
if	O
(	O
isdigit	function
(	O
date	pointer
[	O
0	int
]	O
)	O
&&	O
isdigit	function
(	O
date	pointer
[	O
1	int
]	O
)	O
&&	O
!	O
isdigit	function
(	O
date	pointer
[	O
2	int
]	O
)	O
)	O
{	O
year	array
[	O
0	int
]	O
=	O
'1'	O
;	O
year	array
[	O
1	int
]	O
=	O
'9'	O
;	O
year	array
[	O
2	int
]	O
=	O
date	pointer
[	O
0	int
]	O
;	O
year	array
[	O
3	int
]	O
=	O
date	pointer
[	O
1	int
]	O
;	O
year	array
[	O
4	int
]	O
=	O
0	int
;	O
return	O
year	array
;	O
}	O
else	O
return	O
date	pointer
;	O
}	O
int	O
cmpdate	function
(	O
char	O
const	O
*	O
d1	pointer
,	O
char	O
const	O
*	O
d2	pointer
)	O
{	O
char	O
year1	array
[	O
5	int
]	O
,	O
year2	array
[	O
5	int
]	O
;	O
int	O
r	pointer
=	O
cmpnumfld	function
(	O
normalizeyear	function
(	O
d1	pointer
,	O
year1	array
)	O
,	O
normalizeyear	function
(	O
d2	pointer
,	O
year2	array
)	O
,	O
1	int
)	O
;	O
if	O
(	O
r	pointer
)	O
return	O
r	pointer
;	O
else	O
{	O
while	O
(	O
isdigit	function
(	O
*	O
d1	pointer
)	O
)	O
d1	pointer
++	O
;	O
d1	pointer
+=	O
*	O
d1	pointer
==	O
'.'	O
;	O
while	O
(	O
isdigit	function
(	O
*	O
d2	pointer
)	O
)	O
d2	pointer
++	O
;	O
d2	pointer
+=	O
*	O
d2	pointer
==	O
'.'	O
;	O
return	O
cmpnum	function
(	O
d1	pointer
,	O
d2	pointer
)	O
;	O
}	O
}	O
static	O
void	O
cantfindbranch	function
(	O
char	O
const	O
*	O
revno	pointer
,	O
char	O
const	O
date	pointer
[	O
datesize	O
]	O
,	O
char	O
const	O
*	O
author	pointer
,	O
char	O
const	O
*	O
state	pointer
)	O
{	O
char	O
datebuf	array
[	O
datesize	O
+	O
zonelenmax	int
]	O
;	O
RERR	O
(	O
"No revision on branch %s has%s%s%s%s%s%s."	pointer
,	O
revno	pointer
,	O
date	pointer
?	O
" a date before "	pointer
:	O
""	pointer
,	O
date	pointer
?	O
date2str	function
(	O
date	pointer
,	O
datebuf	array
)	O
:	O
""	pointer
,	O
author	pointer
?	O
" and author "	pointer
+	O
(	O
date	pointer
?	O
0	int
:	O
4	int
)	O
:	O
""	pointer
,	O
author	pointer
?	O
author	pointer
:	O
""	pointer
,	O
state	pointer
?	O
" and state "	pointer
+	O
(	O
date	pointer
||	O
author	pointer
?	O
0	int
:	O
4	int
)	O
:	O
""	pointer
,	O
state	pointer
?	O
state	pointer
:	O
""	pointer
)	O
;	O
}	O
static	O
void	O
absent	function
(	O
char	O
const	O
*	O
revno	pointer
,	O
int	O
field	int
)	O
{	O
RERR	O
(	O
"%s %s absent"	pointer
,	O
field	int
&	O
1	int
?	O
"revision"	pointer
:	O
"branch"	pointer
,	O
TAKE	O
(	O
field	int
,	O
revno	pointer
)	O
)	O
;	O
}	O
int	O
compartial	function
(	O
char	O
const	O
*	O
num1	pointer
,	O
char	O
const	O
*	O
num2	pointer
,	O
int	O
length	int
)	O
{	O
register	O
char	O
const	O
*	O
s1	pointer
,	O
*	O
s2	pointer
;	O
register	O
size_t	long
d1	pointer
,	O
d2	pointer
;	O
register	O
int	O
r	pointer
;	O
s1	pointer
=	O
num1	pointer
;	O
s2	pointer
=	O
num2	pointer
;	O
if	O
(	O
!	O
s1	pointer
)	O
return	O
1	int
;	O
if	O
(	O
!	O
s2	pointer
)	O
return	O
-	O
1	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
if	O
(	O
!	O
*	O
s1	pointer
)	O
return	O
1	int
;	O
if	O
(	O
!	O
*	O
s2	pointer
)	O
return	O
-	O
1	int
;	O
while	O
(	O
*	O
s1	pointer
==	O
'0'	O
)	O
++	O
s1	pointer
;	O
for	O
(	O
d1	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s1	pointer
+	O
d1	pointer
)	O
)	O
;	O
d1	pointer
++	O
)	O
continue	O
;	O
while	O
(	O
*	O
s2	pointer
==	O
'0'	O
)	O
++	O
s2	pointer
;	O
for	O
(	O
d2	pointer
=	O
0	int
;	O
isdigit	function
(	O
*	O
(	O
s2	pointer
+	O
d2	pointer
)	O
)	O
;	O
d2	pointer
++	O
)	O
continue	O
;	O
if	O
(	O
d1	pointer
!=	O
d2	pointer
)	O
return	O
d1	pointer
<	O
d2	pointer
?	O
-	O
1	int
:	O
1	int
;	O
if	O
(	O
(	O
r	pointer
=	O
memcmp	function
(	O
s1	pointer
,	O
s2	pointer
,	O
d1	pointer
)	O
)	O
)	O
return	O
r	pointer
;	O
if	O
(	O
!	O
--	O
length	int
)	O
return	O
0	int
;	O
s1	pointer
+=	O
d1	pointer
;	O
s2	pointer
+=	O
d1	pointer
;	O
if	O
(	O
*	O
s1	pointer
==	O
'.'	O
)	O
s1	pointer
++	O
;	O
if	O
(	O
*	O
s2	pointer
==	O
'.'	O
)	O
s2	pointer
++	O
;	O
}	O
}	O
static	O
void	O
store1	function
(	O
struct	O
wlink	struct
*	O
*	O
*	O
store	pointer
,	O
struct	O
delta	struct
*	O
next	pointer
)	O
{	O
register	O
struct	O
wlink	struct
*	O
p	pointer
;	O
p	pointer
=	O
FALLOC	O
(	O
struct	O
wlink	struct
)	O
;	O
p	pointer
->	O
entry	pointer
=	O
next	pointer
;	O
*	O
*	O
store	pointer
=	O
p	pointer
;	O
*	O
store	pointer
=	O
&	O
p	pointer
->	O
next	pointer
;	O
}	O
static	O
struct	O
delta	struct
*	O
genbranch	function
(	O
struct	O
delta	struct
const	O
*	O
bpoint	pointer
,	O
char	O
const	O
*	O
revno	pointer
,	O
int	O
length	int
,	O
char	O
const	O
*	O
date	pointer
,	O
char	O
const	O
*	O
author	pointer
,	O
char	O
const	O
*	O
state	pointer
,	O
struct	O
wlink	struct
*	O
*	O
store	pointer
)	O
{	O
int	O
field	int
;	O
register	O
struct	O
delta	struct
*	O
d	pointer
,	O
*	O
trail	pointer
;	O
register	O
struct	O
wlink	struct
const	O
*	O
bhead	pointer
;	O
int	O
result	pointer
;	O
char	O
datebuf	array
[	O
datesize	O
+	O
zonelenmax	int
]	O
;	O
field	int
=	O
3	int
;	O
bhead	pointer
=	O
bpoint	pointer
->	O
branches	pointer
;	O
do	O
{	O
if	O
(	O
!	O
bhead	pointer
)	O
{	O
RERR	O
(	O
"no side branches present for %s"	pointer
,	O
TAKE	O
(	O
field	int
-	O
1	int
,	O
revno	pointer
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
while	O
(	O
d	pointer
=	O
bhead	pointer
->	O
entry	pointer
,	O
0	int
<	O
(	O
result	pointer
=	O
cmpnumfld	function
(	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
,	O
field	int
)	O
)	O
)	O
{	O
bhead	pointer
=	O
bhead	pointer
->	O
next	pointer
;	O
if	O
(	O
!	O
bhead	pointer
)	O
{	O
RERR	O
(	O
"branch number %s too high"	pointer
,	O
TAKE	O
(	O
field	int
,	O
revno	pointer
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
if	O
(	O
result	pointer
<	O
0	int
)	O
{	O
absent	function
(	O
revno	pointer
,	O
field	int
)	O
;	O
return	O
NULL	O
;	O
}	O
d	pointer
=	O
bhead	pointer
->	O
entry	pointer
;	O
if	O
(	O
length	int
==	O
field	int
)	O
{	O
trail	pointer
=	O
NULL	O
;	O
do	O
{	O
if	O
(	O
(	O
!	O
date	pointer
||	O
!	O
DATE_LT	O
(	O
date	pointer
,	O
d	pointer
->	O
date	pointer
)	O
)	O
&&	O
(	O
!	O
author	pointer
||	O
STR_SAME	O
(	O
author	pointer
,	O
d	pointer
->	O
author	pointer
)	O
)	O
&&	O
(	O
!	O
state	pointer
||	O
STR_SAME	O
(	O
state	pointer
,	O
d	pointer
->	O
state	pointer
)	O
)	O
)	O
trail	pointer
=	O
d	pointer
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
}	O
while	O
(	O
d	pointer
)	O
;	O
if	O
(	O
!	O
trail	pointer
)	O
{	O
cantfindbranch	function
(	O
revno	pointer
,	O
date	pointer
,	O
author	pointer
,	O
state	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
else	O
{	O
d	pointer
=	O
bhead	pointer
->	O
entry	pointer
;	O
while	O
(	O
d	pointer
!=	O
trail	pointer
)	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
}	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
}	O
CLEAR_MAYBE	O
(	O
)	O
;	O
return	O
d	pointer
;	O
}	O
if	O
(	O
NUMF_LT	O
(	O
1	int
+	O
field	int
,	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
)	O
)	O
{	O
RERR	O
(	O
"%s %s too low"	pointer
,	O
ks_revno	array
,	O
TAKE	O
(	O
field	int
+	O
1	int
,	O
revno	pointer
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
do	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
trail	pointer
=	O
d	pointer
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
}	O
while	O
(	O
d	pointer
&&	O
!	O
NUMF_LT	O
(	O
1	int
+	O
field	int
,	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
)	O
)	O
;	O
if	O
(	O
(	O
length	int
>	O
field	int
+	O
1	int
)	O
&&	O
!	O
NUMF_EQ	O
(	O
1	int
+	O
field	int
,	O
revno	pointer
,	O
trail	pointer
->	O
num	pointer
)	O
)	O
{	O
absent	function
(	O
revno	pointer
,	O
field	int
+	O
1	int
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
length	int
==	O
field	int
+	O
1	int
)	O
{	O
if	O
(	O
date	pointer
&&	O
DATE_LT	O
(	O
date	pointer
,	O
trail	pointer
->	O
date	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has date %s."	pointer
,	O
trail	pointer
->	O
num	pointer
,	O
date2str	function
(	O
trail	pointer
->	O
date	pointer
,	O
datebuf	array
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
author	pointer
&&	O
STR_DIFF	O
(	O
author	pointer
,	O
trail	pointer
->	O
author	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has author %s."	pointer
,	O
trail	pointer
->	O
num	pointer
,	O
trail	pointer
->	O
author	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
state	pointer
&&	O
STR_DIFF	O
(	O
state	pointer
,	O
trail	pointer
->	O
state	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has state %s."	pointer
,	O
trail	pointer
->	O
num	pointer
,	O
trail	pointer
->	O
state	pointer
?	O
trail	pointer
->	O
state	pointer
:	O
"<empty>"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
}	O
bhead	pointer
=	O
trail	pointer
->	O
branches	pointer
;	O
}	O
while	O
(	O
(	O
field	int
+=	O
2	int
)	O
<=	O
length	int
)	O
;	O
CLEAR_MAYBE	O
(	O
)	O
;	O
return	O
trail	pointer
;	O
}	O
struct	O
delta	struct
*	O
genrevs	function
(	O
char	O
const	O
*	O
revno	pointer
,	O
char	O
const	O
*	O
date	pointer
,	O
char	O
const	O
*	O
author	pointer
,	O
char	O
const	O
*	O
state	pointer
,	O
struct	O
wlink	struct
*	O
*	O
store	pointer
)	O
{	O
int	O
length	int
;	O
register	O
struct	O
delta	struct
*	O
d	pointer
;	O
int	O
result	pointer
;	O
char	O
const	O
*	O
branchnum	pointer
;	O
char	O
datebuf	array
[	O
datesize	O
+	O
zonelenmax	int
]	O
;	O
if	O
(	O
!	O
(	O
d	pointer
=	O
REPO	O
(	O
tip	pointer
)	O
)	O
)	O
{	O
RERR	O
(	O
"RCS file empty"	pointer
)	O
;	O
goto	O
norev	O
;	O
}	O
length	int
=	O
countnumflds	function
(	O
revno	pointer
)	O
;	O
if	O
(	O
length	int
>=	O
1	int
)	O
{	O
while	O
(	O
(	O
result	pointer
=	O
cmpnumfld	function
(	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
,	O
1	int
)	O
)	O
<	O
0	int
)	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
if	O
(	O
!	O
d	pointer
)	O
{	O
RERR	O
(	O
"branch number %s too low"	pointer
,	O
TAKE	O
(	O
1	int
,	O
revno	pointer
)	O
)	O
;	O
goto	O
norev	O
;	O
}	O
}	O
if	O
(	O
result	pointer
>	O
0	int
)	O
{	O
absent	function
(	O
revno	pointer
,	O
1	int
)	O
;	O
goto	O
norev	O
;	O
}	O
}	O
if	O
(	O
length	int
<=	O
1	int
)	O
{	O
branchnum	pointer
=	O
d	pointer
->	O
num	pointer
;	O
while	O
(	O
d	pointer
&&	O
NUMF_EQ	O
(	O
1	int
,	O
branchnum	pointer
,	O
d	pointer
->	O
num	pointer
)	O
&&	O
(	O
(	O
date	pointer
&&	O
DATE_LT	O
(	O
date	pointer
,	O
d	pointer
->	O
date	pointer
)	O
)	O
||	O
(	O
author	pointer
&&	O
STR_DIFF	O
(	O
author	pointer
,	O
d	pointer
->	O
author	pointer
)	O
)	O
||	O
(	O
state	pointer
&&	O
STR_DIFF	O
(	O
state	pointer
,	O
d	pointer
->	O
state	pointer
)	O
)	O
)	O
)	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
}	O
if	O
(	O
!	O
d	pointer
||	O
!	O
NUMF_EQ	O
(	O
1	int
,	O
branchnum	pointer
,	O
d	pointer
->	O
num	pointer
)	O
)	O
{	O
cantfindbranch	function
(	O
length	int
?	O
revno	pointer
:	O
TAKE	O
(	O
1	int
,	O
branchnum	pointer
)	O
,	O
date	pointer
,	O
author	pointer
,	O
state	pointer
)	O
;	O
goto	O
norev	O
;	O
}	O
else	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
}	O
CLEAR_MAYBE	O
(	O
)	O
;	O
return	O
d	pointer
;	O
}	O
while	O
(	O
(	O
result	pointer
=	O
cmpnumfld	function
(	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
,	O
2	int
)	O
)	O
<	O
0	int
&&	O
(	O
NUMF_EQ	O
(	O
1	int
,	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
)	O
)	O
)	O
{	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
d	pointer
=	O
d	pointer
->	O
ilk	pointer
;	O
if	O
(	O
!	O
d	pointer
)	O
break	O
;	O
}	O
if	O
(	O
!	O
d	pointer
||	O
!	O
NUMF_EQ	O
(	O
1	int
,	O
revno	pointer
,	O
d	pointer
->	O
num	pointer
)	O
)	O
{	O
RERR	O
(	O
"%s %s too low"	pointer
,	O
ks_revno	array
,	O
TAKE	O
(	O
2	int
,	O
revno	pointer
)	O
)	O
;	O
goto	O
norev	O
;	O
}	O
if	O
(	O
(	O
length	int
>	O
2	int
)	O
&&	O
(	O
result	pointer
!=	O
0	int
)	O
)	O
{	O
absent	function
(	O
revno	pointer
,	O
2	int
)	O
;	O
goto	O
norev	O
;	O
}	O
STORE_MAYBE	O
(	O
d	pointer
)	O
;	O
if	O
(	O
length	int
>	O
2	int
)	O
return	O
genbranch	function
(	O
d	pointer
,	O
revno	pointer
,	O
length	int
,	O
date	pointer
,	O
author	pointer
,	O
state	pointer
,	O
store	pointer
)	O
;	O
else	O
{	O
if	O
(	O
date	pointer
&&	O
DATE_LT	O
(	O
date	pointer
,	O
d	pointer
->	O
date	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has date %s."	pointer
,	O
d	pointer
->	O
num	pointer
,	O
date2str	function
(	O
d	pointer
->	O
date	pointer
,	O
datebuf	array
)	O
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
author	pointer
&&	O
STR_DIFF	O
(	O
author	pointer
,	O
d	pointer
->	O
author	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has author %s."	pointer
,	O
d	pointer
->	O
num	pointer
,	O
d	pointer
->	O
author	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
state	pointer
&&	O
STR_DIFF	O
(	O
state	pointer
,	O
d	pointer
->	O
state	pointer
)	O
)	O
{	O
RERR	O
(	O
"Revision %s has state %s."	pointer
,	O
d	pointer
->	O
num	pointer
,	O
d	pointer
->	O
state	pointer
?	O
d	pointer
->	O
state	pointer
:	O
"<empty>"	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
CLEAR_MAYBE	O
(	O
)	O
;	O
return	O
d	pointer
;	O
}	O
norev	O
:	O
return	O
NULL	O
;	O
}	O
struct	O
delta	struct
*	O
gr_revno	function
(	O
char	O
const	O
*	O
revno	pointer
,	O
struct	O
wlink	struct
*	O
*	O
store	pointer
)	O
{	O
return	O
genrevs	function
(	O
revno	pointer
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
store	pointer
)	O
;	O
}	O
struct	O
delta	struct
*	O
delta_from_ref	function
(	O
char	O
const	O
*	O
ref	pointer
)	O
{	O
return	O
genrevs	function
(	O
ref	pointer
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
,	O
NULL	O
)	O
;	O
}	O
static	O
char	O
const	O
*	O
rev_from_symbol	function
(	O
struct	O
cbuf	struct
const	O
*	O
id	pointer
)	O
{	O
for	O
(	O
struct	O
link	struct
*	O
ls	pointer
=	O
GROK	O
(	O
symbols	pointer
)	O
;	O
ls	pointer
;	O
ls	pointer
=	O
ls	pointer
->	O
next	pointer
)	O
{	O
struct	O
symdef	struct
const	O
*	O
d	pointer
=	O
ls	pointer
->	O
entry	pointer
;	O
if	O
(	O
!	O
strncmp	function
(	O
d	pointer
->	O
meaningful	pointer
,	O
id	pointer
->	O
string	pointer
,	O
id	pointer
->	O
size	long
)	O
)	O
return	O
d	pointer
->	O
underlying	pointer
;	O
}	O
return	O
NULL	O
;	O
}	O
static	O
char	O
const	O
*	O
lookupsym	function
(	O
char	O
const	O
*	O
id	pointer
)	O
{	O
struct	O
cbuf	struct
identifier	struct
=	O
{	O
.	O
string	pointer
=	O
id	pointer
,	O
.	O
size	long
=	O
strlen	function
(	O
id	pointer
)	O
}	O
;	O
return	O
rev_from_symbol	function
(	O
&	O
identifier	struct
)	O
;	O
}	O
static	O
char	O
const	O
*	O
branchtip	function
(	O
char	O
const	O
*	O
branch	pointer
)	O
{	O
struct	O
delta	struct
*	O
h	pointer
;	O
h	pointer
=	O
delta_from_ref	function
(	O
branch	pointer
)	O
;	O
return	O
h	pointer
?	O
h	pointer
->	O
num	pointer
:	O
NULL	O
;	O
}	O
bool	bool
fully_numeric	function
(	O
struct	O
cbuf	struct
*	O
ans	pointer
,	O
char	O
const	O
*	O
source	pointer
,	O
struct	O
fro	O
*	O
fp	pointer
)	O
{	O
register	O
char	O
const	O
*	O
sp	pointer
,	O
*	O
bp	pointer
=	O
NULL	O
;	O
int	O
dots	int
;	O
bool	bool
have_branch	bool
=	O
false	int
;	O
char	O
*	O
ugh	pointer
=	O
NULL	O
;	O
sp	pointer
=	O
source	pointer
;	O
if	O
(	O
!	O
sp	pointer
||	O
!	O
*	O
sp	pointer
)	O
goto	O
success	O
;	O
if	O
(	O
sp	pointer
[	O
0	int
]	O
==	O
KDELIM	char
&&	O
!	O
sp	pointer
[	O
1	int
]	O
)	O
{	O
if	O
(	O
!	O
getoldkeys	function
(	O
fp	pointer
)	O
)	O
goto	O
sorry	O
;	O
if	O
(	O
!	O
PREV	O
(	O
rev	pointer
)	O
)	O
{	O
MERR	O
(	O
"working file lacks %s"	pointer
,	O
ks_revno	array
)	O
;	O
goto	O
sorry	O
;	O
}	O
ACCS	O
(	O
PREV	O
(	O
rev	pointer
)	O
)	O
;	O
goto	O
success	O
;	O
}	O
dots	int
=	O
0	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
char	O
const	O
*	O
was	pointer
=	O
sp	pointer
;	O
bool	bool
id	pointer
=	O
false	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
switch	O
(	O
ctab	array
[	O
(	O
unsigned	O
char	O
)	O
*	O
sp	pointer
]	O
)	O
{	O
case	O
IDCHAR	int
:	O
case	O
LETTER	int
:	O
case	O
Letter	int
:	O
id	pointer
=	O
true	int
;	O
case	O
DIGIT	int
:	O
sp	pointer
++	O
;	O
continue	O
;	O
default	O
:	O
break	O
;	O
}	O
break	O
;	O
}	O
if	O
(	O
id	pointer
)	O
{	O
struct	O
cbuf	struct
orig	struct
=	O
{	O
.	O
string	pointer
=	O
was	pointer
,	O
.	O
size	long
=	O
sp	pointer
-	O
was	pointer
}	O
;	O
char	O
const	O
*	O
expanded	pointer
=	O
rev_from_symbol	function
(	O
&	O
orig	struct
)	O
;	O
if	O
(	O
!	O
expanded	pointer
)	O
{	O
RERR	O
(	O
"Symbolic name `%s' is undefined."	pointer
,	O
was	pointer
)	O
;	O
goto	O
sorry	O
;	O
}	O
ACCS	O
(	O
expanded	pointer
)	O
;	O
have_branch	bool
=	O
true	int
;	O
}	O
else	O
{	O
if	O
(	O
was	pointer
!=	O
sp	pointer
)	O
{	O
ACCR	O
(	O
was	pointer
,	O
sp	pointer
)	O
;	O
bp	pointer
=	O
was	pointer
;	O
}	O
while	O
(	O
'0'	O
==	O
sp	pointer
[	O
0	int
]	O
&&	O
isdigit	function
(	O
sp	pointer
[	O
1	int
]	O
)	O
)	O
sp	pointer
++	O
;	O
if	O
(	O
!	O
bp	pointer
)	O
{	O
int	O
s	pointer
=	O
0	int
;	O
if	O
(	O
s	pointer
||	O
*	O
sp	pointer
!=	O
'.'	O
)	O
break	O
;	O
else	O
{	O
char	O
const	O
*	O
b	pointer
;	O
struct	O
delta	struct
*	O
tip	pointer
;	O
if	O
(	O
GROK	O
(	O
branch	pointer
)	O
)	O
b	pointer
=	O
GROK	O
(	O
branch	pointer
)	O
;	O
else	O
if	O
(	O
(	O
tip	pointer
=	O
REPO	O
(	O
tip	pointer
)	O
)	O
)	O
b	pointer
=	O
tip	pointer
->	O
num	pointer
;	O
else	O
break	O
;	O
OK	O
(	O
)	O
;	O
FRESH	O
(	O
)	O
;	O
accumulate_branchno	function
(	O
SINGLE	O
,	O
b	pointer
)	O
;	O
}	O
}	O
}	O
switch	O
(	O
*	O
sp	pointer
++	O
)	O
{	O
case	O
'\0'	O
:	O
goto	O
success	O
;	O
case	O
'.'	O
:	O
if	O
(	O
!	O
*	O
sp	pointer
)	O
{	O
if	O
(	O
dots	int
&	O
1	int
)	O
break	O
;	O
OK	O
(	O
)	O
;	O
if	O
(	O
!	O
(	O
bp	pointer
=	O
branchtip	function
(	O
ans	pointer
->	O
string	pointer
)	O
)	O
)	O
goto	O
sorry	O
;	O
ACCF	O
(	O
"%s%s"	pointer
,	O
ans	pointer
->	O
string	pointer
,	O
bp	pointer
+	O
ans	pointer
->	O
size	long
)	O
;	O
goto	O
success	O
;	O
}	O
++	O
dots	int
;	O
ACCB	O
(	O
'.'	O
)	O
;	O
continue	O
;	O
}	O
break	O
;	O
}	O
RERR	O
(	O
"improper %s: %s"	pointer
,	O
ks_revno	array
,	O
source	pointer
)	O
;	O
sorry	O
:	O
OK	O
(	O
)	O
;	O
FRESH	O
(	O
)	O
;	O
return	O
false	int
;	O
success	O
:	O
OK	O
(	O
)	O
;	O
return	O
true	int
;	O
}	O
char	O
const	O
*	O
namedrev	function
(	O
char	O
const	O
*	O
name	pointer
,	O
struct	O
delta	struct
*	O
delta	struct
)	O
{	O
if	O
(	O
name	pointer
)	O
{	O
char	O
const	O
*	O
id	pointer
=	O
NULL	O
,	O
*	O
p	pointer
,	O
*	O
val	array
;	O
for	O
(	O
p	pointer
=	O
name	pointer
;	O
;	O
p	pointer
++	O
)	O
switch	O
(	O
ctab	array
[	O
(	O
unsigned	O
char	O
)	O
*	O
p	pointer
]	O
)	O
{	O
case	O
IDCHAR	int
:	O
case	O
LETTER	int
:	O
case	O
Letter	int
:	O
id	pointer
=	O
name	pointer
;	O
break	O
;	O
case	O
DIGIT	int
:	O
break	O
;	O
case	O
UNKN	int
:	O
if	O
(	O
!	O
*	O
p	pointer
&&	O
id	pointer
&&	O
(	O
val	array
=	O
lookupsym	function
(	O
id	pointer
)	O
)	O
&&	O
STR_SAME	O
(	O
val	array
,	O
delta	struct
->	O
num	pointer
)	O
)	O
return	O
id	pointer
;	O
default	O
:	O
return	O
NULL	O
;	O
}	O
}	O
return	O
NULL	O
;	O
}	O
char	O
const	O
*	O
tiprev	function
(	O
void	O
)	O
{	O
struct	O
delta	struct
*	O
tip	pointer
;	O
char	O
const	O
*	O
defbr	pointer
=	O
GROK	O
(	O
branch	pointer
)	O
;	O
return	O
defbr	pointer
?	O
branchtip	function
(	O
defbr	pointer
)	O
:	O
(	O
tip	pointer
=	O
REPO	O
(	O
tip	pointer
)	O
)	O
?	O
tip	pointer
->	O
num	pointer
:	O
NULL	O
;	O
}	O
