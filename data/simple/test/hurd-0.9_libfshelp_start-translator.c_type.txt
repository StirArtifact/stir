error_t	int
fshelp_start_translator	function
(	O
fshelp_open_fn_t	pointer
underlying_open_fn	pointer
,	O
void	O
*	O
cookie	pointer
,	O
char	O
*	O
name	pointer
,	O
char	O
*	O
argz	pointer
,	O
int	O
argz_len	int
,	O
int	O
timeout	int
,	O
fsys_t	int
*	O
control	pointer
)	O
{	O
mach_port_t	O
ports	pointer
[	O
INIT_PORT_MAX	int
]	O
;	O
mach_port_t	O
fds	pointer
[	O
STDERR_FILENO	O
+	O
1	int
]	O
;	O
int	O
ints	pointer
[	O
INIT_INT_MAX	int
]	O
;	O
int	O
i	int
;	O
error_t	int
err	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
INIT_PORT_MAX	int
;	O
i	int
++	O
)	O
ports	pointer
[	O
i	int
]	O
=	O
MACH_PORT_NULL	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
STDERR_FILENO	O
+	O
1	int
;	O
i	int
++	O
)	O
fds	pointer
[	O
i	int
]	O
=	O
MACH_PORT_NULL	O
;	O
memset	O
(	O
ints	pointer
,	O
0	int
,	O
INIT_INT_MAX	int
*	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
ports	pointer
[	O
INIT_PORT_CWDIR	int
]	O
=	O
getcwdir	function
(	O
)	O
;	O
ports	pointer
[	O
INIT_PORT_CRDIR	int
]	O
=	O
getcrdir	function
(	O
)	O
;	O
ports	pointer
[	O
INIT_PORT_AUTH	int
]	O
=	O
getauth	function
(	O
)	O
;	O
fds	pointer
[	O
STDERR_FILENO	O
]	O
=	O
getdport	function
(	O
STDERR_FILENO	O
)	O
;	O
err	int
=	O
fshelp_start_translator_long	function
(	O
underlying_open_fn	pointer
,	O
cookie	pointer
,	O
name	pointer
,	O
argz	pointer
,	O
argz_len	int
,	O
fds	pointer
,	O
MACH_MSG_TYPE_COPY_SEND	O
,	O
STDERR_FILENO	O
+	O
1	int
,	O
ports	pointer
,	O
MACH_MSG_TYPE_COPY_SEND	O
,	O
INIT_PORT_MAX	int
,	O
ints	pointer
,	O
INIT_INT_MAX	int
,	O
geteuid	function
(	O
)	O
,	O
timeout	int
,	O
control	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
INIT_PORT_MAX	int
;	O
i	int
++	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
ports	pointer
[	O
i	int
]	O
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
STDERR_FILENO	O
;	O
i	int
++	O
)	O
mach_port_deallocate	function
(	O
mach_task_self	function
(	O
)	O
,	O
fds	pointer
[	O
i	int
]	O
)	O
;	O
return	O
err	int
;	O
}	O
