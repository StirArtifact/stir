struct	O
fuzz_elem	struct
{	O
unsigned	O
int	O
type	int
;	O
char	O
name	array
[	O
20	int
]	O
;	O
char	O
value	array
[	O
20	int
]	O
;	O
}	O
;	O
static	O
char	O
*	O
escape	function
(	O
unsigned	O
char	O
*	O
s	pointer
)	O
{	O
static	O
char	O
out	array
[	O
19	int
*	O
6	int
+	O
1	int
]	O
;	O
char	O
*	O
p	pointer
=	O
out	array
;	O
while	O
(	O
*	O
s	pointer
)	O
{	O
if	O
(	O
*	O
s	pointer
>	O
127	int
)	O
{	O
if	O
(	O
isxdigit	function
(	O
s	pointer
[	O
1	int
]	O
)	O
)	O
{	O
sprintf	function
(	O
p	pointer
,	O
"\\u%04x"	pointer
,	O
*	O
s	pointer
++	O
)	O
;	O
p	pointer
+=	O
6	int
;	O
}	O
else	O
{	O
sprintf	function
(	O
p	pointer
,	O
"\\x%02x"	pointer
,	O
*	O
s	pointer
++	O
)	O
;	O
p	pointer
+=	O
4	int
;	O
}	O
}	O
else	O
if	O
(	O
*	O
s	pointer
==	O
'\n'	O
)	O
{	O
sprintf	function
(	O
p	pointer
,	O
"\\n"	pointer
)	O
;	O
p	pointer
+=	O
2	int
;	O
s	pointer
++	O
;	O
}	O
else	O
if	O
(	O
*	O
s	pointer
==	O
'\t'	O
)	O
{	O
sprintf	function
(	O
p	pointer
,	O
"\\t"	pointer
)	O
;	O
p	pointer
+=	O
2	int
;	O
s	pointer
++	O
;	O
}	O
else	O
*	O
p	pointer
++	O
=	O
*	O
s	pointer
++	O
;	O
}	O
*	O
p	pointer
=	O
0	int
;	O
return	O
out	array
;	O
}	O
static	O
const	O
char	O
*	O
typename	array
[	O
24	int
]	O
=	O
{	O
"CONST_UNIVERSAL"	pointer
,	O
"CONST_PRIVATE"	pointer
,	O
"CONST_APPLICATION"	pointer
,	O
"CONST_EXPLICIT"	pointer
,	O
"CONST_IMPLICIT"	pointer
,	O
"CONST_TAG"	pointer
,	O
"CONST_OPTION"	pointer
,	O
"CONST_DEFAULT"	pointer
,	O
"CONST_TRUE"	pointer
,	O
"CONST_FALSE"	pointer
,	O
"CONST_LIST"	pointer
,	O
"CONST_MIN_MAX"	pointer
,	O
"CONST_1_PARAM"	pointer
,	O
"CONST_SIZE"	pointer
,	O
"CONST_DEFINED_BY"	pointer
,	O
"CONST_GENERALIZED"	pointer
,	O
"CONST_UTC"	pointer
,	O
NULL	O
,	O
"CONST_NOT_USED"	pointer
,	O
"CONST_SET"	pointer
,	O
"CONST_ASSIGN"	pointer
,	O
"CONST_DOWN"	pointer
,	O
"CONST_RIGHT"	pointer
,	O
NULL	O
}	O
;	O
int	O
main	function
(	O
void	O
)	O
{	O
struct	O
fuzz_elem	struct
e	struct
;	O
printf	function
(	O
"const asn1_static_node tab[] = {\n"	pointer
)	O
;	O
while	O
(	O
fread	function
(	O
&	O
e	struct
,	O
sizeof	O
(	O
e	struct
)	O
,	O
1	int
,	O
stdin	pointer
)	O
==	O
1	int
)	O
{	O
e	struct
.	O
name	array
[	O
sizeof	O
(	O
e	struct
.	O
name	array
)	O
-	O
1	int
]	O
=	O
0	int
;	O
e	struct
.	O
value	array
[	O
sizeof	O
(	O
e	struct
.	O
value	array
)	O
-	O
1	int
]	O
=	O
0	int
;	O
if	O
(	O
strcmp	function
(	O
e	struct
.	O
name	array
,	O
"NULL"	pointer
)	O
)	O
printf	function
(	O
"  { \"%s\""	pointer
,	O
escape	function
(	O
(	O
unsigned	O
char	O
*	O
)	O
e	struct
.	O
name	array
)	O
)	O
;	O
else	O
printf	function
(	O
"  { NULL"	pointer
)	O
;	O
if	O
(	O
e	struct
.	O
type	int
)	O
{	O
int	O
add	int
=	O
0	int
;	O
if	O
(	O
(	O
e	struct
.	O
type	int
&	O
0xFF	int
)	O
==	O
17	int
)	O
{	O
printf	function
(	O
", ASN1_ETYPE_TIME"	pointer
)	O
;	O
add	int
=	O
1	int
;	O
}	O
for	O
(	O
int	O
i	int
=	O
8	int
;	O
i	int
<	O
32	int
;	O
i	int
++	O
)	O
{	O
if	O
(	O
(	O
e	struct
.	O
type	int
&	O
(	O
1U	int
<<	O
i	int
)	O
)	O
&&	O
typename	array
[	O
i	int
-	O
8	int
]	O
)	O
{	O
printf	function
(	O
add	int
?	O
"|%s"	pointer
:	O
", %s"	pointer
,	O
typename	array
[	O
i	int
-	O
8	int
]	O
)	O
;	O
add	int
=	O
1	int
;	O
}	O
}	O
if	O
(	O
!	O
add	int
)	O
printf	function
(	O
", %u"	pointer
,	O
e	struct
.	O
type	int
)	O
;	O
}	O
else	O
printf	function
(	O
", 0"	pointer
)	O
;	O
if	O
(	O
strcmp	function
(	O
e	struct
.	O
value	array
,	O
"NULL"	pointer
)	O
)	O
printf	function
(	O
", \"%s\" },\n"	pointer
,	O
escape	function
(	O
(	O
unsigned	O
char	O
*	O
)	O
e	struct
.	O
value	array
)	O
)	O
;	O
else	O
printf	function
(	O
", NULL },"	pointer
)	O
;	O
}	O
printf	function
(	O
"  { NULL, 0, NULL }\n"	pointer
)	O
;	O
printf	function
(	O
"};\n"	pointer
)	O
;	O
return	O
0	int
;	O
}	O
