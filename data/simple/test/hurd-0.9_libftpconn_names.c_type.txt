struct	O
get_names_state	struct
{	O
char	O
*	O
name	pointer
;	O
size_t	long
name_len	long
;	O
size_t	long
name_alloced	long
;	O
int	O
name_partial	int
;	O
size_t	long
buf_len	long
;	O
char	O
buf	array
[	O
7000	int
]	O
;	O
}	O
;	O
error_t	int
ftp_conn_start_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
int	O
*	O
fd	pointer
,	O
void	O
*	O
*	O
state	pointer
)	O
{	O
error_t	int
err	int
;	O
struct	O
get_names_state	struct
*	O
s	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
struct	O
get_names_state	struct
)	O
)	O
;	O
if	O
(	O
!	O
s	pointer
)	O
return	O
ENOMEM	int
;	O
err	int
=	O
ftp_conn_start_list	function
(	O
conn	pointer
,	O
name	pointer
,	O
fd	pointer
)	O
;	O
if	O
(	O
err	int
)	O
free	function
(	O
s	pointer
)	O
;	O
else	O
{	O
s	pointer
->	O
name	pointer
=	O
0	int
;	O
s	pointer
->	O
name_len	long
=	O
s	pointer
->	O
name_alloced	long
=	O
0	int
;	O
s	pointer
->	O
name_partial	int
=	O
0	int
;	O
s	pointer
->	O
buf_len	long
=	O
0	int
;	O
*	O
state	pointer
=	O
s	pointer
;	O
}	O
return	O
err	int
;	O
}	O
error_t	int
ftp_conn_cont_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
int	O
fd	pointer
,	O
void	O
*	O
state	pointer
,	O
ftp_conn_add_name_fun_t	pointer
add_name	pointer
,	O
void	O
*	O
hook	pointer
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
nl	pointer
;	O
ssize_t	long
rd	long
;	O
size_t	long
name_len	long
;	O
error_t	int
err	int
=	O
0	int
;	O
struct	O
get_names_state	struct
*	O
s	pointer
=	O
state	pointer
;	O
int	O
(	O
*	O
icheck	pointer
)	O
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
)	O
=	O
conn	pointer
->	O
hooks	pointer
->	O
interrupt_check	pointer
;	O
rd	long
=	O
read	function
(	O
fd	pointer
,	O
s	pointer
->	O
buf	array
+	O
s	pointer
->	O
buf_len	long
,	O
sizeof	O
(	O
s	pointer
->	O
buf	array
)	O
-	O
s	pointer
->	O
buf_len	long
)	O
;	O
if	O
(	O
rd	long
<	O
0	int
)	O
{	O
err	int
=	O
errno	O
;	O
goto	O
finished	O
;	O
}	O
if	O
(	O
icheck	pointer
&&	O
(	O
*	O
icheck	pointer
)	O
(	O
conn	pointer
)	O
)	O
{	O
err	int
=	O
EINTR	int
;	O
goto	O
finished	O
;	O
}	O
if	O
(	O
rd	long
==	O
0	int
)	O
if	O
(	O
s	pointer
->	O
buf_len	long
==	O
0	int
)	O
goto	O
finished	O
;	O
else	O
nl	pointer
=	O
s	pointer
->	O
buf	array
+	O
s	pointer
->	O
buf_len	long
;	O
else	O
{	O
nl	pointer
=	O
memchr	function
(	O
s	pointer
->	O
buf	array
+	O
s	pointer
->	O
buf_len	long
,	O
'\n'	O
,	O
rd	long
)	O
;	O
s	pointer
->	O
buf_len	long
+=	O
rd	long
;	O
}	O
if	O
(	O
!	O
nl	pointer
&&	O
s	pointer
->	O
buf_len	long
<	O
sizeof	O
(	O
s	pointer
->	O
buf	array
)	O
)	O
return	O
EAGAIN	int
;	O
p	pointer
=	O
s	pointer
->	O
buf	array
;	O
do	O
{	O
name_len	long
=	O
(	O
nl	pointer
?	O
nl	pointer
-	O
p	pointer
:	O
s	pointer
->	O
buf	array
+	O
s	pointer
->	O
buf_len	long
-	O
p	pointer
)	O
;	O
if	O
(	O
name_len	long
>	O
0	int
&&	O
p	pointer
[	O
name_len	long
-	O
1	int
]	O
==	O
'\r'	O
)	O
name_len	long
--	O
;	O
if	O
(	O
name_len	long
>	O
0	int
)	O
{	O
size_t	long
old_len	long
=	O
s	pointer
->	O
name_len	long
;	O
size_t	long
total_len	long
=	O
old_len	long
+	O
name_len	long
+	O
1	int
;	O
if	O
(	O
total_len	long
>	O
s	pointer
->	O
name_alloced	long
)	O
{	O
char	O
*	O
new_name	pointer
=	O
realloc	function
(	O
s	pointer
->	O
name	pointer
,	O
total_len	long
)	O
;	O
if	O
(	O
!	O
new_name	pointer
)	O
goto	O
enomem	O
;	O
s	pointer
->	O
name	pointer
=	O
new_name	pointer
;	O
s	pointer
->	O
name_alloced	long
=	O
total_len	long
;	O
}	O
strncpy	function
(	O
s	pointer
->	O
name	pointer
+	O
old_len	long
,	O
p	pointer
,	O
name_len	long
)	O
;	O
s	pointer
->	O
name	pointer
[	O
old_len	long
+	O
name_len	long
]	O
=	O
'\0'	O
;	O
s	pointer
->	O
name_len	long
=	O
total_len	long
-	O
1	int
;	O
}	O
if	O
(	O
nl	pointer
)	O
{	O
char	O
*	O
name	pointer
=	O
s	pointer
->	O
name	pointer
;	O
if	O
(	O
conn	pointer
->	O
syshooks	struct
.	O
basename	function
)	O
{	O
err	int
=	O
(	O
*	O
conn	pointer
->	O
syshooks	struct
.	O
basename	function
)	O
(	O
conn	pointer
,	O
&	O
name	pointer
)	O
;	O
if	O
(	O
err	int
)	O
goto	O
finished	O
;	O
}	O
err	int
=	O
(	O
*	O
add_name	pointer
)	O
(	O
name	pointer
,	O
hook	pointer
)	O
;	O
if	O
(	O
name	pointer
<	O
s	pointer
->	O
name	pointer
||	O
name	pointer
>	O
s	pointer
->	O
name	pointer
+	O
s	pointer
->	O
name_len	long
)	O
free	function
(	O
name	pointer
)	O
;	O
if	O
(	O
err	int
)	O
goto	O
finished	O
;	O
s	pointer
->	O
name_len	long
=	O
0	int
;	O
s	pointer
->	O
name_partial	int
=	O
0	int
;	O
p	pointer
=	O
nl	pointer
+	O
1	int
;	O
nl	pointer
=	O
memchr	function
(	O
p	pointer
,	O
'\n'	O
,	O
s	pointer
->	O
buf	array
+	O
s	pointer
->	O
buf_len	long
-	O
p	pointer
)	O
;	O
}	O
else	O
{	O
s	pointer
->	O
name_partial	int
=	O
1	int
;	O
p	pointer
+=	O
name_len	long
;	O
}	O
}	O
while	O
(	O
nl	pointer
)	O
;	O
s	pointer
->	O
buf_len	long
-=	O
(	O
p	pointer
-	O
s	pointer
->	O
buf	array
)	O
;	O
if	O
(	O
s	pointer
->	O
buf_len	long
>	O
0	int
)	O
memmove	function
(	O
s	pointer
->	O
buf	array
,	O
p	pointer
,	O
s	pointer
->	O
buf_len	long
)	O
;	O
return	O
EAGAIN	int
;	O
enomem	O
:	O
err	int
=	O
ENOMEM	int
;	O
finished	O
:	O
if	O
(	O
s	pointer
->	O
name	pointer
)	O
free	function
(	O
s	pointer
->	O
name	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
close	function
(	O
fd	pointer
)	O
;	O
if	O
(	O
err	int
&&	O
rd	long
>	O
0	int
)	O
ftp_conn_abort	function
(	O
conn	pointer
)	O
;	O
else	O
if	O
(	O
err	int
)	O
ftp_conn_finish_transfer	function
(	O
conn	pointer
)	O
;	O
else	O
err	int
=	O
ftp_conn_finish_transfer	function
(	O
conn	pointer
)	O
;	O
return	O
err	int
;	O
}	O
error_t	int
ftp_conn_get_names	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
name	pointer
,	O
ftp_conn_add_name_fun_t	pointer
add_name	pointer
,	O
void	O
*	O
hook	pointer
)	O
{	O
int	O
fd	pointer
;	O
void	O
*	O
state	pointer
;	O
error_t	int
err	int
=	O
ftp_conn_start_get_names	function
(	O
conn	pointer
,	O
name	pointer
,	O
&	O
fd	pointer
,	O
&	O
state	pointer
)	O
;	O
if	O
(	O
err	int
)	O
return	O
err	int
;	O
do	O
err	int
=	O
ftp_conn_cont_get_names	function
(	O
conn	pointer
,	O
fd	pointer
,	O
state	pointer
,	O
add_name	pointer
,	O
hook	pointer
)	O
;	O
while	O
(	O
err	int
==	O
EAGAIN	int
)	O
;	O
return	O
err	int
;	O
}	O
