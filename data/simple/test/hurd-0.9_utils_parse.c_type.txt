error_t	int
_parse_strlist	function
(	O
char	O
*	O
arg	pointer
,	O
error_t	int
(	O
*	O
add_fn	pointer
)	O
(	O
const	O
char	O
*	O
str	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
error_t	int
(	O
*	O
default_add_fn	pointer
)	O
(	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
const	O
char	O
*	O
type_name	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
if	O
(	O
arg	pointer
)	O
while	O
(	O
isspace	function
(	O
*	O
arg	pointer
)	O
)	O
arg	pointer
++	O
;	O
if	O
(	O
arg	pointer
==	O
NULL	O
||	O
*	O
arg	pointer
==	O
'\0'	O
)	O
if	O
(	O
default_add_fn	pointer
)	O
return	O
(	O
*	O
default_add_fn	pointer
)	O
(	O
state	pointer
)	O
;	O
else	O
{	O
argp_error	function
(	O
state	pointer
,	O
"Empty %s list"	pointer
,	O
type_name	pointer
)	O
;	O
return	O
EINVAL	int
;	O
}	O
else	O
{	O
error_t	int
err	int
=	O
0	int
;	O
char	O
*	O
end	pointer
=	O
arg	pointer
;	O
void	O
mark_end	function
(	O
)	O
{	O
*	O
end	pointer
++	O
=	O
'\0'	O
;	O
while	O
(	O
isspace	function
(	O
*	O
end	pointer
)	O
)	O
end	pointer
++	O
;	O
}	O
error_t	int
parse_element	function
(	O
)	O
{	O
char	O
*	O
cur	O
=	O
arg	pointer
;	O
if	O
(	O
*	O
cur	O
==	O
'\0'	O
)	O
{	O
argp_error	function
(	O
state	pointer
,	O
"Empty element in %s list"	pointer
,	O
type_name	pointer
)	O
;	O
return	O
EINVAL	int
;	O
}	O
arg	pointer
=	O
end	pointer
;	O
return	O
(	O
*	O
add_fn	pointer
)	O
(	O
cur	O
,	O
state	pointer
)	O
;	O
}	O
while	O
(	O
*	O
end	pointer
!=	O
'\0'	O
&&	O
!	O
err	int
)	O
switch	O
(	O
*	O
end	pointer
)	O
{	O
case	O
' '	O
:	O
case	O
'\t'	O
:	O
mark_end	function
(	O
)	O
;	O
if	O
(	O
*	O
end	pointer
==	O
','	O
)	O
mark_end	function
(	O
)	O
;	O
err	int
=	O
parse_element	function
(	O
)	O
;	O
break	O
;	O
case	O
','	O
:	O
mark_end	function
(	O
)	O
;	O
err	int
=	O
parse_element	function
(	O
)	O
;	O
break	O
;	O
default	O
:	O
end	pointer
++	O
;	O
}	O
if	O
(	O
!	O
err	int
)	O
err	int
=	O
parse_element	function
(	O
)	O
;	O
return	O
err	int
;	O
}	O
}	O
error_t	int
parse_strlist	function
(	O
char	O
*	O
arg	pointer
,	O
error_t	int
(	O
*	O
add_fn	pointer
)	O
(	O
const	O
char	O
*	O
str	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
const	O
char	O
*	O
(	O
*	O
default_fn	pointer
)	O
(	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
const	O
char	O
*	O
type_name	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
error_t	int
default_str_add	O
(	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
return	O
(	O
*	O
add_fn	pointer
)	O
(	O
(	O
*	O
default_fn	pointer
)	O
(	O
state	pointer
)	O
,	O
state	pointer
)	O
;	O
}	O
return	O
_parse_strlist	function
(	O
arg	pointer
,	O
add_fn	pointer
,	O
default_str_add	O
,	O
type_name	pointer
,	O
state	pointer
)	O
;	O
}	O
error_t	int
parse_numlist	function
(	O
char	O
*	O
arg	pointer
,	O
error_t	int
(	O
*	O
add_fn	pointer
)	O
(	O
unsigned	O
num	int
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
int	O
(	O
*	O
default_fn	pointer
)	O
(	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
int	O
(	O
*	O
lookup_fn	pointer
)	O
(	O
const	O
char	O
*	O
str	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
,	O
const	O
char	O
*	O
type_name	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
error_t	int
default_num_add	O
(	O
)	O
{	O
return	O
(	O
*	O
add_fn	pointer
)	O
(	O
(	O
*	O
default_fn	pointer
)	O
(	O
state	pointer
)	O
,	O
state	pointer
)	O
;	O
}	O
error_t	int
add_num_str	O
(	O
const	O
char	O
*	O
str	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
const	O
char	O
*	O
p	O
;	O
for	O
(	O
p	O
=	O
str	pointer
;	O
*	O
p	O
!=	O
'\0'	O
;	O
p	O
++	O
)	O
if	O
(	O
!	O
isdigit	function
(	O
*	O
p	O
)	O
)	O
{	O
if	O
(	O
lookup_fn	pointer
)	O
return	O
(	O
*	O
add_fn	pointer
)	O
(	O
(	O
*	O
lookup_fn	pointer
)	O
(	O
str	pointer
,	O
state	pointer
)	O
,	O
state	pointer
)	O
;	O
else	O
{	O
argp_error	function
(	O
state	pointer
,	O
"%s: Invalid %s"	pointer
,	O
p	O
,	O
type_name	pointer
)	O
;	O
return	O
EINVAL	int
;	O
}	O
return	O
0	int
;	O
}	O
return	O
(	O
*	O
add_fn	pointer
)	O
(	O
atoi	function
(	O
str	pointer
)	O
,	O
state	pointer
)	O
;	O
}	O
return	O
_parse_strlist	function
(	O
arg	pointer
,	O
add_num_str	O
,	O
default_fn	pointer
?	O
default_num_add	O
:	O
0	int
,	O
type_name	pointer
,	O
state	pointer
)	O
;	O
}	O
int	O
parse_enum	function
(	O
const	O
char	O
*	O
arg	pointer
,	O
const	O
char	O
*	O
(	O
*	O
choice_fn	pointer
)	O
(	O
unsigned	O
n	int
)	O
,	O
const	O
char	O
*	O
kind	pointer
,	O
int	O
allow_mismatches	int
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
const	O
char	O
*	O
choice	pointer
;	O
int	O
arglen	int
=	O
strlen	function
(	O
arg	pointer
)	O
;	O
int	O
n	int
=	O
0	int
;	O
int	O
partial_match	int
=	O
-	O
1	int
;	O
while	O
(	O
(	O
choice	pointer
=	O
(	O
*	O
choice_fn	pointer
)	O
(	O
n	int
)	O
)	O
!=	O
NULL	O
)	O
if	O
(	O
strcasecmp	function
(	O
choice	pointer
,	O
arg	pointer
)	O
==	O
0	int
)	O
return	O
n	int
;	O
else	O
{	O
if	O
(	O
strncasecmp	function
(	O
choice	pointer
,	O
arg	pointer
,	O
arglen	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
partial_match	int
>=	O
0	int
)	O
{	O
argp_error	function
(	O
state	pointer
,	O
"%s: Ambiguous %s"	pointer
,	O
arg	pointer
,	O
kind	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
partial_match	int
=	O
n	int
;	O
}	O
n	int
++	O
;	O
}	O
if	O
(	O
partial_match	int
<	O
0	int
&&	O
!	O
allow_mismatches	int
)	O
argp_error	function
(	O
state	pointer
,	O
"%s: Invalid %s"	pointer
,	O
arg	pointer
,	O
kind	pointer
)	O
;	O
return	O
partial_match	int
;	O
}	O
