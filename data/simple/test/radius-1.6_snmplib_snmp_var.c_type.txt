void	O
snmp_var_free	function
(	O
struct	O
snmp_var	struct
*	O
var	pointer
)	O
{	O
if	O
(	O
!	O
var	pointer
)	O
return	O
;	O
switch	O
(	O
var	pointer
->	O
type	pointer
)	O
{	O
case	O
ASN_BOOLEAN	O
:	O
case	O
ASN_INTEGER	O
:	O
case	O
ASN_NULL	O
:	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
case	O
ASN_BIT_STR	O
:	O
snmp_free	function
(	O
var	pointer
->	O
var_str	O
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
snmp_free	function
(	O
var	pointer
->	O
var_oid	O
)	O
;	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
snmp_free	function
(	O
var	pointer
->	O
name	pointer
)	O
;	O
snmp_free	function
(	O
var	pointer
)	O
;	O
}	O
void	O
snmp_var_free_list	function
(	O
struct	O
snmp_var	struct
*	O
var	pointer
)	O
{	O
struct	O
snmp_var	struct
*	O
next	pointer
;	O
while	O
(	O
var	pointer
)	O
{	O
next	pointer
=	O
var	pointer
->	O
next	pointer
;	O
snmp_var_free	function
(	O
var	pointer
)	O
;	O
var	pointer
=	O
next	pointer
;	O
}	O
}	O
struct	O
snmp_var	struct
*	O
snmp_var_create	function
(	O
oid_t	pointer
oid	pointer
)	O
{	O
struct	O
snmp_var	struct
*	O
var	pointer
;	O
var	pointer
=	O
snmp_alloc	function
(	O
sizeof	O
(	O
*	O
var	pointer
)	O
)	O
;	O
if	O
(	O
!	O
var	pointer
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
return	O
NULL	O
;	O
}	O
var	pointer
->	O
name	pointer
=	O
oid_dup	function
(	O
oid	pointer
)	O
;	O
if	O
(	O
!	O
var	pointer
->	O
name	pointer
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	function
(	O
var	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
var	pointer
->	O
type	pointer
=	O
ASN_NULL	O
;	O
var	pointer
->	O
next	pointer
=	O
NULL	O
;	O
return	O
var	pointer
;	O
}	O
struct	O
snmp_var	struct
*	O
snmp_var_dup	function
(	O
struct	O
snmp_var	struct
*	O
src	pointer
)	O
{	O
struct	O
snmp_var	struct
*	O
var	pointer
;	O
if	O
(	O
(	O
var	pointer
=	O
snmp_var_create	function
(	O
src	pointer
->	O
name	pointer
)	O
)	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
var	pointer
->	O
type	pointer
=	O
src	pointer
->	O
type	pointer
;	O
var	pointer
->	O
val_length	int
=	O
src	pointer
->	O
val_length	int
;	O
switch	O
(	O
var	pointer
->	O
type	pointer
)	O
{	O
case	O
ASN_BOOLEAN	O
:	O
case	O
ASN_INTEGER	O
:	O
case	O
ASN_NULL	O
:	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
var	pointer
->	O
var_int	O
=	O
src	pointer
->	O
var_int	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
case	O
ASN_BIT_STR	O
:	O
var	pointer
->	O
var_str	O
=	O
snmp_alloc	function
(	O
src	pointer
->	O
val_length	int
)	O
;	O
if	O
(	O
!	O
var	pointer
->	O
var_str	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	function
(	O
var	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
memcpy	function
(	O
var	pointer
->	O
var_str	O
,	O
src	pointer
->	O
var_str	O
,	O
src	pointer
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
var	pointer
->	O
var_oid	O
=	O
oid_dup	function
(	O
src	pointer
->	O
var_oid	O
)	O
;	O
if	O
(	O
!	O
var	pointer
->	O
var_oid	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
snmp_free	function
(	O
var	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
break	O
;	O
default	O
:	O
abort	function
(	O
)	O
;	O
}	O
return	O
var	pointer
;	O
}	O
struct	O
snmp_var	struct
*	O
snmp_var_dup_list	function
(	O
struct	O
snmp_var	struct
*	O
var	pointer
)	O
{	O
struct	O
snmp_var	struct
*	O
var_head	pointer
,	O
*	O
var_tail	pointer
,	O
*	O
vp	pointer
;	O
var_head	pointer
=	O
var_tail	pointer
=	O
NULL	O
;	O
for	O
(	O
;	O
var	pointer
;	O
var	pointer
=	O
var	pointer
->	O
next	pointer
)	O
{	O
if	O
(	O
(	O
vp	pointer
=	O
snmp_var_dup	function
(	O
var	pointer
)	O
)	O
==	O
NULL	O
)	O
{	O
snmp_var_free_list	function
(	O
var_head	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
if	O
(	O
var_tail	pointer
)	O
var_tail	pointer
->	O
next	pointer
=	O
vp	pointer
;	O
else	O
var_head	pointer
=	O
vp	pointer
;	O
var_tail	pointer
=	O
vp	pointer
;	O
}	O
return	O
var_head	pointer
;	O
}	O
u_char	char
*	O
snmp_var_decode	function
(	O
u_char	char
*	O
data	pointer
,	O
int	O
*	O
length	pointer
,	O
struct	O
snmp_var	struct
*	O
*	O
var_head	pointer
,	O
int	O
version	int
)	O
{	O
u_char	char
*	O
buf	pointer
,	O
*	O
tmp	pointer
;	O
u_char	char
*	O
data_ptr	pointer
;	O
u_char	char
type	pointer
;	O
int	O
list_length	int
=	O
*	O
length	pointer
;	O
int	O
var_length	int
,	O
data_len	int
;	O
subid_t	int
oid	pointer
[	O
MAX_OID_LEN	int
+	O
1	int
]	O
;	O
struct	O
snmp_var	struct
*	O
var	pointer
=	O
NULL	O
,	O
*	O
var_tail	pointer
;	O
buf	pointer
=	O
asn_decode_header	function
(	O
data	pointer
,	O
&	O
list_length	int
,	O
&	O
type	pointer
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
return	O
NULL	O
;	O
if	O
(	O
type	pointer
!=	O
(	O
u_char	char
)	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
return	O
NULL	O
;	O
}	O
*	O
var_head	pointer
=	O
var_tail	pointer
=	O
NULL	O
;	O
while	O
(	O
list_length	int
>	O
0	int
)	O
{	O
var_length	int
=	O
list_length	int
;	O
tmp	pointer
=	O
asn_decode_header	function
(	O
buf	pointer
,	O
&	O
var_length	int
,	O
&	O
type	pointer
)	O
;	O
if	O
(	O
!	O
tmp	pointer
)	O
goto	O
err	O
;	O
list_length	int
-=	O
var_length	int
+	O
(	O
tmp	pointer
-	O
buf	pointer
)	O
;	O
buf	pointer
=	O
tmp	pointer
;	O
if	O
(	O
type	pointer
!=	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
goto	O
err	O
;	O
}	O
OIDLEN	O
(	O
oid	pointer
)	O
=	O
MAX_OID_LEN	int
;	O
buf	pointer
=	O
asn_decode_oid	function
(	O
buf	pointer
,	O
&	O
var_length	int
,	O
&	O
type	pointer
,	O
OIDPTR	O
(	O
oid	pointer
)	O
,	O
&	O
OIDLEN	O
(	O
oid	pointer
)	O
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
goto	O
err	O
;	O
if	O
(	O
type	pointer
!=	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_OBJECT_ID	O
)	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_DECODE	int
)	O
;	O
goto	O
err	O
;	O
}	O
var	pointer
=	O
snmp_var_create	function
(	O
oid	pointer
)	O
;	O
data_ptr	pointer
=	O
buf	pointer
;	O
data_len	int
=	O
var_length	int
;	O
buf	pointer
=	O
asn_decode_header	function
(	O
buf	pointer
,	O
&	O
data_len	int
,	O
&	O
var	pointer
->	O
type	pointer
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
goto	O
err	O
;	O
switch	O
(	O
var	pointer
->	O
type	pointer
)	O
{	O
case	O
ASN_INTEGER	O
:	O
var	pointer
->	O
val_length	int
=	O
sizeof	O
(	O
var	pointer
->	O
var_int	O
)	O
;	O
buf	pointer
=	O
asn_decode_int	function
(	O
data_ptr	pointer
,	O
&	O
var_length	int
,	O
&	O
var	pointer
->	O
type	pointer
,	O
&	O
var	pointer
->	O
var_int	O
,	O
var	pointer
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
var	pointer
->	O
val_length	int
=	O
sizeof	O
(	O
var	pointer
->	O
var_int	O
)	O
;	O
buf	pointer
=	O
asn_decode_uint	O
(	O
data_ptr	pointer
,	O
&	O
var_length	int
,	O
&	O
var	pointer
->	O
type	pointer
,	O
&	O
var	pointer
->	O
var_int	O
,	O
var	pointer
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
var	pointer
->	O
val_length	int
=	O
var_length	int
;	O
var	pointer
->	O
var_str	O
=	O
snmp_alloc	function
(	O
var	pointer
->	O
val_length	int
)	O
;	O
if	O
(	O
!	O
var	pointer
->	O
var_str	O
)	O
{	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOMEM	int
)	O
;	O
goto	O
err	O
;	O
}	O
buf	pointer
=	O
asn_decode_string	function
(	O
data_ptr	pointer
,	O
&	O
var_length	int
,	O
&	O
var	pointer
->	O
type	pointer
,	O
var	pointer
->	O
var_str	O
,	O
&	O
var	pointer
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
var	pointer
->	O
val_length	int
=	O
MAX_OID_LEN	int
;	O
buf	pointer
=	O
asn_decode_oid	function
(	O
data_ptr	pointer
,	O
&	O
var_length	int
,	O
&	O
var	pointer
->	O
type	pointer
,	O
OIDPTR	O
(	O
oid	pointer
)	O
,	O
&	O
var	pointer
->	O
val_length	int
)	O
;	O
if	O
(	O
buf	pointer
)	O
{	O
OIDLEN	O
(	O
oid	pointer
)	O
=	O
var	pointer
->	O
val_length	int
;	O
var	pointer
->	O
var_oid	O
=	O
oid_dup	function
(	O
oid	pointer
)	O
;	O
}	O
break	O
;	O
case	O
ASN_NULL	O
:	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_BAD_VARTYPE	int
)	O
;	O
break	O
;	O
}	O
if	O
(	O
!	O
buf	pointer
)	O
goto	O
err	O
;	O
if	O
(	O
!	O
var_tail	pointer
)	O
*	O
var_head	pointer
=	O
var	pointer
;	O
else	O
var_tail	pointer
->	O
next	pointer
=	O
var	pointer
;	O
var_tail	pointer
=	O
var	pointer
;	O
var	pointer
=	O
NULL	O
;	O
}	O
return	O
buf	pointer
;	O
err	O
:	O
snmp_var_free	function
(	O
var	pointer
)	O
;	O
snmp_var_free_list	function
(	O
*	O
var_head	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
u_char	char
*	O
snmp_var_encode	function
(	O
u_char	char
*	O
data	pointer
,	O
int	O
*	O
length	pointer
,	O
struct	O
snmp_var	struct
*	O
var	pointer
,	O
int	O
version	int
)	O
{	O
u_char	char
*	O
buf	pointer
=	O
data	pointer
;	O
u_char	char
*	O
header_ptr	pointer
,	O
*	O
header_end	pointer
;	O
for	O
(	O
;	O
var	pointer
;	O
var	pointer
=	O
var	pointer
->	O
next	pointer
)	O
{	O
header_ptr	pointer
=	O
buf	pointer
;	O
buf	pointer
=	O
asn_encode_header	function
(	O
buf	pointer
,	O
length	pointer
,	O
(	O
ASN_SEQUENCE	O
|	O
ASN_CONSTRUCTOR	O
)	O
,	O
0xffff	int
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
return	O
NULL	O
;	O
header_end	pointer
=	O
buf	pointer
;	O
buf	pointer
=	O
asn_encode_oid	function
(	O
buf	pointer
,	O
length	pointer
,	O
(	O
ASN_UNIVERSAL	O
|	O
ASN_PRIMITIVE	O
|	O
ASN_OBJECT_ID	O
)	O
,	O
OIDPTR	O
(	O
var	pointer
->	O
name	pointer
)	O
,	O
OIDLEN	O
(	O
var	pointer
->	O
name	pointer
)	O
)	O
;	O
if	O
(	O
!	O
buf	pointer
)	O
return	O
NULL	O
;	O
switch	O
(	O
var	pointer
->	O
type	pointer
)	O
{	O
case	O
ASN_INTEGER	O
:	O
buf	pointer
=	O
asn_encode_int	function
(	O
buf	pointer
,	O
length	pointer
,	O
var	pointer
->	O
type	pointer
,	O
var	pointer
->	O
var_int	O
)	O
;	O
break	O
;	O
case	O
SMI_COUNTER32	O
:	O
case	O
SMI_GAUGE32	O
:	O
case	O
SMI_TIMETICKS	O
:	O
buf	pointer
=	O
asn_encode_uint	O
(	O
buf	pointer
,	O
length	pointer
,	O
var	pointer
->	O
type	pointer
,	O
var	pointer
->	O
var_int	O
)	O
;	O
break	O
;	O
case	O
ASN_OCTET_STR	O
:	O
case	O
SMI_IPADDRESS	O
:	O
case	O
SMI_OPAQUE	O
:	O
buf	pointer
=	O
asn_encode_string	function
(	O
buf	pointer
,	O
length	pointer
,	O
var	pointer
->	O
type	pointer
,	O
var	pointer
->	O
var_str	O
,	O
var	pointer
->	O
val_length	int
)	O
;	O
break	O
;	O
case	O
ASN_OBJECT_ID	O
:	O
buf	pointer
=	O
asn_encode_oid	function
(	O
buf	pointer
,	O
length	pointer
,	O
var	pointer
->	O
type	pointer
,	O
OIDPTR	O
(	O
var	pointer
->	O
var_oid	O
)	O
,	O
OIDLEN	O
(	O
var	pointer
->	O
var_oid	O
)	O
)	O
;	O
break	O
;	O
case	O
ASN_NULL	O
:	O
buf	pointer
=	O
asn_encode_null	function
(	O
buf	pointer
,	O
length	pointer
,	O
var	pointer
->	O
type	pointer
)	O
;	O
break	O
;	O
default	O
:	O
SNMP_SET_ERRNO	O
(	O
E_SNMP_NOT_SUPPORTED	int
)	O
;	O
buf	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
!	O
buf	pointer
)	O
return	O
NULL	O
;	O
asn_recode_length	function
(	O
header_ptr	pointer
+	O
1	int
,	O
buf	pointer
-	O
header_end	pointer
)	O
;	O
}	O
return	O
buf	pointer
;	O
}	O
