mp_size_t	long
mpn_dcpi1_bdiv_qr_n_itch	O
(	O
mp_size_t	long
n	long
)	O
{	O
return	O
n	long
;	O
}	O
mp_limb_t	long
mpn_dcpi1_bdiv_qr_n	O
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
n	long
,	O
mp_limb_t	long
dinv	long
,	O
mp_ptr	pointer
tp	pointer
)	O
{	O
mp_size_t	long
lo	long
,	O
hi	long
;	O
mp_limb_t	long
cy	long
;	O
mp_limb_t	long
rh	long
;	O
lo	long
=	O
n	long
>>	O
1	int
;	O
hi	long
=	O
n	long
-	O
lo	long
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
lo	long
,	O
DC_BDIV_QR_THRESHOLD	int
)	O
)	O
cy	long
=	O
mpn_sbpi1_bdiv_qr	O
(	O
qp	pointer
,	O
np	pointer
,	O
2	int
*	O
lo	long
,	O
dp	pointer
,	O
lo	long
,	O
dinv	long
)	O
;	O
else	O
cy	long
=	O
mpn_dcpi1_bdiv_qr_n	O
(	O
qp	pointer
,	O
np	pointer
,	O
dp	pointer
,	O
lo	long
,	O
dinv	long
,	O
tp	pointer
)	O
;	O
mpn_mul	O
(	O
tp	pointer
,	O
dp	pointer
+	O
lo	long
,	O
hi	long
,	O
qp	pointer
,	O
lo	long
)	O
;	O
mpn_incr_u	O
(	O
tp	pointer
+	O
lo	long
,	O
cy	long
)	O
;	O
rh	long
=	O
mpn_sub	O
(	O
np	pointer
+	O
lo	long
,	O
np	pointer
+	O
lo	long
,	O
n	long
+	O
hi	long
,	O
tp	pointer
,	O
n	long
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
hi	long
,	O
DC_BDIV_QR_THRESHOLD	int
)	O
)	O
cy	long
=	O
mpn_sbpi1_bdiv_qr	O
(	O
qp	pointer
+	O
lo	long
,	O
np	pointer
+	O
lo	long
,	O
2	int
*	O
hi	long
,	O
dp	pointer
,	O
hi	long
,	O
dinv	long
)	O
;	O
else	O
cy	long
=	O
mpn_dcpi1_bdiv_qr_n	O
(	O
qp	pointer
+	O
lo	long
,	O
np	pointer
+	O
lo	long
,	O
dp	pointer
,	O
hi	long
,	O
dinv	long
,	O
tp	pointer
)	O
;	O
mpn_mul	O
(	O
tp	pointer
,	O
qp	pointer
+	O
lo	long
,	O
hi	long
,	O
dp	pointer
+	O
hi	long
,	O
lo	long
)	O
;	O
mpn_incr_u	O
(	O
tp	pointer
+	O
hi	long
,	O
cy	long
)	O
;	O
rh	long
+=	O
mpn_sub_n	O
(	O
np	pointer
+	O
n	long
,	O
np	pointer
+	O
n	long
,	O
tp	pointer
,	O
n	long
)	O
;	O
return	O
rh	long
;	O
}	O
mp_limb_t	long
mpn_dcpi1_bdiv_qr	O
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
dn	long
,	O
mp_limb_t	long
dinv	long
)	O
{	O
mp_size_t	long
qn	long
;	O
mp_limb_t	long
rr	long
,	O
cy	long
;	O
mp_ptr	pointer
tp	pointer
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
ASSERT	O
(	O
dn	long
>=	O
2	int
)	O
;	O
ASSERT	O
(	O
nn	long
-	O
dn	long
>=	O
1	int
)	O
;	O
ASSERT	O
(	O
dp	pointer
[	O
0	int
]	O
&	O
1	int
)	O
;	O
tp	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
dn	long
)	O
;	O
qn	long
=	O
nn	long
-	O
dn	long
;	O
if	O
(	O
qn	long
>	O
dn	long
)	O
{	O
do	O
qn	long
-=	O
dn	long
;	O
while	O
(	O
qn	long
>	O
dn	long
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
qn	long
,	O
DC_BDIV_QR_THRESHOLD	int
)	O
)	O
cy	long
=	O
mpn_sbpi1_bdiv_qr	O
(	O
qp	pointer
,	O
np	pointer
,	O
2	int
*	O
qn	long
,	O
dp	pointer
,	O
qn	long
,	O
dinv	long
)	O
;	O
else	O
cy	long
=	O
mpn_dcpi1_bdiv_qr_n	O
(	O
qp	pointer
,	O
np	pointer
,	O
dp	pointer
,	O
qn	long
,	O
dinv	long
,	O
tp	pointer
)	O
;	O
rr	long
=	O
0	int
;	O
if	O
(	O
qn	long
!=	O
dn	long
)	O
{	O
if	O
(	O
qn	long
>	O
dn	long
-	O
qn	long
)	O
mpn_mul	O
(	O
tp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
dp	pointer
+	O
qn	long
,	O
dn	long
-	O
qn	long
)	O
;	O
else	O
mpn_mul	O
(	O
tp	pointer
,	O
dp	pointer
+	O
qn	long
,	O
dn	long
-	O
qn	long
,	O
qp	pointer
,	O
qn	long
)	O
;	O
mpn_incr_u	O
(	O
tp	pointer
+	O
qn	long
,	O
cy	long
)	O
;	O
rr	long
=	O
mpn_sub	O
(	O
np	pointer
+	O
qn	long
,	O
np	pointer
+	O
qn	long
,	O
nn	long
-	O
qn	long
,	O
tp	pointer
,	O
dn	long
)	O
;	O
cy	long
=	O
0	int
;	O
}	O
np	pointer
+=	O
qn	long
;	O
qp	pointer
+=	O
qn	long
;	O
qn	long
=	O
nn	long
-	O
dn	long
-	O
qn	long
;	O
do	O
{	O
rr	long
+=	O
mpn_sub_1	O
(	O
np	pointer
+	O
dn	long
,	O
np	pointer
+	O
dn	long
,	O
qn	long
,	O
cy	long
)	O
;	O
cy	long
=	O
mpn_dcpi1_bdiv_qr_n	O
(	O
qp	pointer
,	O
np	pointer
,	O
dp	pointer
,	O
dn	long
,	O
dinv	long
,	O
tp	pointer
)	O
;	O
qp	pointer
+=	O
dn	long
;	O
np	pointer
+=	O
dn	long
;	O
qn	long
-=	O
dn	long
;	O
}	O
while	O
(	O
qn	long
>	O
0	int
)	O
;	O
TMP_FREE	O
;	O
return	O
rr	long
+	O
cy	long
;	O
}	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
qn	long
,	O
DC_BDIV_QR_THRESHOLD	int
)	O
)	O
cy	long
=	O
mpn_sbpi1_bdiv_qr	O
(	O
qp	pointer
,	O
np	pointer
,	O
2	int
*	O
qn	long
,	O
dp	pointer
,	O
qn	long
,	O
dinv	long
)	O
;	O
else	O
cy	long
=	O
mpn_dcpi1_bdiv_qr_n	O
(	O
qp	pointer
,	O
np	pointer
,	O
dp	pointer
,	O
qn	long
,	O
dinv	long
,	O
tp	pointer
)	O
;	O
rr	long
=	O
0	int
;	O
if	O
(	O
qn	long
!=	O
dn	long
)	O
{	O
if	O
(	O
qn	long
>	O
dn	long
-	O
qn	long
)	O
mpn_mul	O
(	O
tp	pointer
,	O
qp	pointer
,	O
qn	long
,	O
dp	pointer
+	O
qn	long
,	O
dn	long
-	O
qn	long
)	O
;	O
else	O
mpn_mul	O
(	O
tp	pointer
,	O
dp	pointer
+	O
qn	long
,	O
dn	long
-	O
qn	long
,	O
qp	pointer
,	O
qn	long
)	O
;	O
mpn_incr_u	O
(	O
tp	pointer
+	O
qn	long
,	O
cy	long
)	O
;	O
rr	long
=	O
mpn_sub	O
(	O
np	pointer
+	O
qn	long
,	O
np	pointer
+	O
qn	long
,	O
nn	long
-	O
qn	long
,	O
tp	pointer
,	O
dn	long
)	O
;	O
cy	long
=	O
0	int
;	O
}	O
TMP_FREE	O
;	O
return	O
rr	long
+	O
cy	long
;	O
}	O
