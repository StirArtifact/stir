static	O
int	O
to_xdig	function
(	O
unsigned	O
char	O
b	pointer
)	O
{	O
if	O
(	O
b	pointer
>=	O
0xa	int
)	O
return	O
'A'	O
+	O
b	pointer
-	O
0xa	int
;	O
else	O
return	O
'0'	O
+	O
b	pointer
;	O
}	O
static	O
size_t	long
format_ipv6_bytes	function
(	O
const	O
unsigned	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
int	O
simplify	int
)	O
{	O
size_t	long
total	long
=	O
0	int
;	O
int	O
i	int
;	O
int	O
run_count	int
=	O
0	int
;	O
char	O
*	O
p	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
+=	O
2	int
)	O
{	O
if	O
(	O
bytes	pointer
[	O
0	int
]	O
==	O
0	int
&&	O
bytes	pointer
[	O
1	int
]	O
==	O
0	int
)	O
{	O
if	O
(	O
simplify	int
)	O
run_count	int
++	O
;	O
else	O
{	O
if	O
(	O
i	int
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
'0'	O
;	O
}	O
bytes	pointer
+=	O
2	int
;	O
}	O
else	O
{	O
if	O
(	O
run_count	int
)	O
{	O
if	O
(	O
run_count	int
==	O
1	int
)	O
{	O
if	O
(	O
i	int
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
'0'	O
;	O
}	O
else	O
{	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
simplify	int
=	O
0	int
;	O
}	O
run_count	int
=	O
0	int
;	O
}	O
if	O
(	O
i	int
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
p	pointer
=	O
buf	pointer
;	O
if	O
(	O
(	O
*	O
bytes	pointer
&	O
0xf0	int
)	O
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
to_xdig	function
(	O
*	O
bytes	pointer
>>	O
4	int
)	O
;	O
if	O
(	O
(	O
buf	pointer
>	O
p	pointer
||	O
(	O
*	O
bytes	pointer
&	O
0xf	int
)	O
)	O
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
to_xdig	function
(	O
*	O
bytes	pointer
&	O
0xf	int
)	O
;	O
bytes	pointer
++	O
;	O
if	O
(	O
(	O
buf	pointer
>	O
p	pointer
||	O
(	O
*	O
bytes	pointer
&	O
0xf0	int
)	O
)	O
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
to_xdig	function
(	O
*	O
bytes	pointer
>>	O
4	int
)	O
;	O
if	O
(	O
(	O
buf	pointer
>	O
p	pointer
||	O
(	O
*	O
bytes	pointer
&	O
0xf	int
)	O
)	O
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
to_xdig	function
(	O
*	O
bytes	pointer
&	O
0xf	int
)	O
;	O
bytes	pointer
++	O
;	O
}	O
}	O
if	O
(	O
run_count	int
)	O
{	O
if	O
(	O
run_count	int
==	O
1	int
)	O
{	O
if	O
(	O
i	int
&&	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
'0'	O
;	O
}	O
else	O
{	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
':'	O
;	O
}	O
}	O
return	O
total	long
;	O
}	O
static	O
size_t	long
format_ipv6_bytes_normal	function
(	O
const	O
unsigned	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
)	O
{	O
return	O
format_ipv6_bytes	function
(	O
bytes	pointer
,	O
len	int
,	O
buf	pointer
,	O
size	long
,	O
0	int
)	O
;	O
}	O
static	O
size_t	long
format_ipv6_bytes_simplified	function
(	O
const	O
unsigned	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
)	O
{	O
return	O
format_ipv6_bytes	function
(	O
bytes	pointer
,	O
len	int
,	O
buf	pointer
,	O
size	long
,	O
1	int
)	O
;	O
}	O
static	O
size_t	long
format_ipv4_bytes	function
(	O
const	O
unsigned	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
)	O
{	O
int	O
i	int
;	O
size_t	long
total	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
char	O
b	pointer
=	O
*	O
bytes	pointer
++	O
;	O
char	O
nbuf	array
[	O
3	int
]	O
;	O
int	O
j	int
;	O
if	O
(	O
i	int
)	O
{	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
'.'	O
;	O
}	O
j	int
=	O
0	int
;	O
do	O
{	O
nbuf	array
[	O
j	int
++	O
]	O
=	O
b	pointer
%	O
10	int
+	O
'0'	O
;	O
b	pointer
/=	O
10	int
;	O
}	O
while	O
(	O
b	pointer
)	O
;	O
for	O
(	O
;	O
j	int
;	O
j	int
--	O
)	O
{	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
nbuf	array
[	O
j	int
-	O
1	int
]	O
;	O
}	O
}	O
return	O
total	long
;	O
}	O
int	O
mu_cidr_to_string	function
(	O
struct	O
mu_cidr	struct
*	O
cidr	pointer
,	O
int	O
flags	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
,	O
size_t	long
*	O
pret	pointer
)	O
{	O
size_t	long
(	O
*	O
fmt	pointer
)	O
(	O
const	O
unsigned	O
char	O
*	O
bytes	pointer
,	O
int	O
len	int
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
size	long
)	O
;	O
size_t	long
n	long
,	O
total	long
=	O
0	int
;	O
if	O
(	O
size	long
==	O
0	int
)	O
return	O
MU_ERR_BUFSPACE	O
;	O
size	long
--	O
;	O
switch	O
(	O
cidr	pointer
->	O
family	int
)	O
{	O
case	O
AF_INET	O
:	O
fmt	pointer
=	O
format_ipv4_bytes	function
;	O
break	O
;	O
case	O
AF_INET6	O
:	O
fmt	pointer
=	O
(	O
flags	int
&	O
MU_CIDR_FMT_SIMPLIFY	int
)	O
?	O
format_ipv6_bytes_simplified	function
:	O
format_ipv6_bytes_normal	function
;	O
break	O
;	O
default	O
:	O
return	O
MU_ERR_FAMILY	O
;	O
}	O
n	long
=	O
fmt	pointer
(	O
cidr	pointer
->	O
address	array
,	O
cidr	pointer
->	O
len	int
,	O
buf	pointer
,	O
size	long
)	O
;	O
if	O
(	O
buf	pointer
)	O
buf	pointer
+=	O
n	long
;	O
total	long
+=	O
n	long
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
MU_CIDR_FMT_ADDRONLY	int
)	O
)	O
{	O
if	O
(	O
total	long
++	O
<	O
size	long
)	O
*	O
buf	pointer
++	O
=	O
'/'	O
;	O
n	long
=	O
fmt	pointer
(	O
cidr	pointer
->	O
netmask	array
,	O
cidr	pointer
->	O
len	int
,	O
buf	pointer
,	O
size	long
-	O
total	long
)	O
;	O
if	O
(	O
buf	pointer
)	O
buf	pointer
+=	O
n	long
;	O
total	long
+=	O
n	long
;	O
}	O
if	O
(	O
buf	pointer
)	O
*	O
buf	pointer
++	O
=	O
0	int
;	O
if	O
(	O
pret	pointer
)	O
*	O
pret	pointer
=	O
total	long
;	O
return	O
0	int
;	O
}	O
int	O
mu_cidr_format	function
(	O
struct	O
mu_cidr	struct
*	O
cidr	pointer
,	O
int	O
flags	int
,	O
char	O
*	O
*	O
pbuf	pointer
)	O
{	O
char	O
buf	pointer
[	O
MU_CIDR_MAXBUFSIZE	int
]	O
;	O
int	O
rc	int
=	O
mu_cidr_to_string	function
(	O
cidr	pointer
,	O
flags	int
,	O
buf	pointer
,	O
sizeof	O
(	O
buf	pointer
)	O
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
*	O
pbuf	pointer
=	O
strdup	function
(	O
buf	pointer
)	O
;	O
if	O
(	O
!	O
*	O
buf	pointer
)	O
return	O
ENOMEM	int
;	O
return	O
0	int
;	O
}	O
