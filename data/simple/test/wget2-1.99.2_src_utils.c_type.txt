void	O
mkdir_path	function
(	O
const	O
char	O
*	O
_fname	pointer
,	O
bool	bool
is_file	bool
)	O
{	O
const	O
char	O
*	O
p1	pointer
;	O
char	O
*	O
p2	pointer
,	O
*	O
fname	pointer
;	O
char	O
buf	pointer
[	O
1024	int
]	O
;	O
size_t	long
len	long
=	O
strlen	function
(	O
_fname	pointer
)	O
;	O
if	O
(	O
len	long
<	O
sizeof	O
(	O
buf	pointer
)	O
)	O
{	O
memcpy	function
(	O
buf	pointer
,	O
_fname	pointer
,	O
len	long
+	O
1	int
)	O
;	O
fname	pointer
=	O
buf	pointer
;	O
}	O
else	O
fname	pointer
=	O
wget_strdup	function
(	O
_fname	pointer
)	O
;	O
for	O
(	O
p1	pointer
=	O
fname	pointer
+	O
1	int
;	O
*	O
p1	pointer
&&	O
(	O
p2	pointer
=	O
strchr	function
(	O
p1	pointer
,	O
'/'	O
)	O
)	O
;	O
p1	pointer
=	O
p2	pointer
+	O
1	int
)	O
{	O
int	O
rc	int
;	O
*	O
p2	pointer
=	O
0	int
;	O
if	O
(	O
*	O
p1	pointer
==	O
'.'	O
&&	O
p1	pointer
[	O
1	int
]	O
==	O
'.'	O
)	O
error_printf_exit	O
(	O
_	O
(	O
"Internal error: Unexpected relative path: '%s'\n"	pointer
)	O
,	O
fname	pointer
)	O
;	O
rc	int
=	O
mkdir	function
(	O
fname	pointer
,	O
0755	int
)	O
;	O
debug_printf	O
(	O
"mkdir(%s)=%d errno=%d\n"	pointer
,	O
fname	pointer
,	O
rc	int
,	O
errno	O
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
struct	O
stat	struct
st	struct
;	O
if	O
(	O
errno	O
==	O
EEXIST	int
&&	O
stat	struct
(	O
fname	pointer
,	O
&	O
st	struct
)	O
==	O
0	int
&&	O
(	O
st	struct
.	O
st_mode	int
&	O
S_IFMT	O
)	O
==	O
S_IFREG	O
)	O
{	O
int	O
renamed	int
=	O
0	int
;	O
for	O
(	O
int	O
fnum	int
=	O
1	int
;	O
fnum	int
<=	O
999	int
&&	O
!	O
renamed	int
;	O
fnum	int
++	O
)	O
{	O
char	O
dst	pointer
[	O
strlen	function
(	O
fname	pointer
)	O
+	O
1	int
+	O
32	int
]	O
;	O
wget_snprintf	function
(	O
dst	pointer
,	O
sizeof	O
(	O
dst	pointer
)	O
,	O
"%s.%d"	pointer
,	O
fname	pointer
,	O
fnum	int
)	O
;	O
if	O
(	O
access	function
(	O
dst	pointer
,	O
F_OK	int
)	O
!=	O
0	int
&&	O
rename	function
(	O
fname	pointer
,	O
dst	pointer
)	O
==	O
0	int
)	O
renamed	int
=	O
1	int
;	O
}	O
if	O
(	O
renamed	int
)	O
{	O
rc	int
=	O
mkdir	function
(	O
fname	pointer
,	O
0755	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to make directory '%s' (errno=%d)\n"	pointer
)	O
,	O
fname	pointer
,	O
errno	O
)	O
;	O
*	O
p2	pointer
=	O
'/'	O
;	O
break	O
;	O
}	O
}	O
else	O
error_printf	O
(	O
_	O
(	O
"Failed to rename '%s' (errno=%d)\n"	pointer
)	O
,	O
fname	pointer
,	O
errno	O
)	O
;	O
}	O
else	O
if	O
(	O
errno	O
!=	O
EEXIST	int
)	O
{	O
error_printf	O
(	O
_	O
(	O
"Failed to make directory '%s' (errno=%d)\n"	pointer
)	O
,	O
fname	pointer
,	O
errno	O
)	O
;	O
*	O
p2	pointer
=	O
'/'	O
;	O
break	O
;	O
}	O
}	O
else	O
debug_printf	O
(	O
"created dir %s\n"	pointer
,	O
fname	pointer
)	O
;	O
*	O
p2	pointer
=	O
'/'	O
;	O
}	O
if	O
(	O
fname	pointer
!=	O
buf	pointer
)	O
xfree	O
(	O
fname	pointer
)	O
;	O
if	O
(	O
!	O
is_file	bool
)	O
{	O
int	O
rc	int
=	O
mkdir	function
(	O
_fname	pointer
,	O
0755	int
)	O
;	O
debug_printf	O
(	O
"mkdir(%s)=%d errno=%d\n"	pointer
,	O
_fname	pointer
,	O
rc	int
,	O
errno	O
)	O
;	O
}	O
}	O
char	O
*	O
shell_expand	function
(	O
const	O
char	O
*	O
fname	pointer
)	O
{	O
char	O
*	O
expanded_str	pointer
=	O
NULL	O
;	O
if	O
(	O
*	O
fname	pointer
==	O
'~'	O
)	O
{	O
char	O
*	O
slash	pointer
=	O
strchrnul	function
(	O
fname	pointer
,	O
'/'	O
)	O
;	O
expanded_str	pointer
=	O
wget_strnglob	function
(	O
fname	pointer
,	O
slash	pointer
-	O
fname	pointer
,	O
GLOB_TILDE	O
|	O
GLOB_ONLYDIR	O
|	O
GLOB_NOCHECK	O
)	O
;	O
}	O
return	O
expanded_str	pointer
?	O
expanded_str	pointer
:	O
wget_strdup	function
(	O
fname	pointer
)	O
;	O
}	O
char	O
*	O
wget_restrict_file_name	function
(	O
const	O
char	O
*	O
fname	pointer
,	O
char	O
*	O
esc	pointer
,	O
int	O
mode	int
)	O
{	O
signed	O
char	O
*	O
s	pointer
;	O
char	O
*	O
dst	pointer
,	O
c	char
;	O
int	O
escaped	int
;	O
if	O
(	O
!	O
fname	pointer
||	O
!	O
esc	pointer
)	O
return	O
(	O
char	O
*	O
)	O
fname	pointer
;	O
switch	O
(	O
mode	int
)	O
{	O
case	O
WGET_RESTRICT_NAMES_WINDOWS	O
:	O
for	O
(	O
escaped	int
=	O
0	int
,	O
dst	pointer
=	O
esc	pointer
,	O
s	pointer
=	O
(	O
signed	O
char	O
*	O
)	O
fname	pointer
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
{	O
if	O
(	O
*	O
s	pointer
<	O
32	int
||	O
strchr	function
(	O
"\\<>:\"|?*"	pointer
,	O
*	O
s	pointer
)	O
)	O
{	O
*	O
dst	pointer
++	O
=	O
'%'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
(	O
unsigned	O
char	O
)	O
*	O
s	pointer
>>	O
4	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
*	O
s	pointer
&	O
0xf	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
escaped	int
=	O
1	int
;	O
}	O
else	O
*	O
dst	pointer
++	O
=	O
*	O
s	pointer
;	O
}	O
*	O
dst	pointer
=	O
0	int
;	O
if	O
(	O
escaped	int
)	O
return	O
esc	pointer
;	O
break	O
;	O
case	O
WGET_RESTRICT_NAMES_NOCONTROL	O
:	O
break	O
;	O
case	O
WGET_RESTRICT_NAMES_ASCII	O
:	O
for	O
(	O
escaped	int
=	O
0	int
,	O
dst	pointer
=	O
esc	pointer
,	O
s	pointer
=	O
(	O
signed	O
char	O
*	O
)	O
fname	pointer
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
{	O
if	O
(	O
*	O
s	pointer
<	O
32	int
)	O
{	O
*	O
dst	pointer
++	O
=	O
'%'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
(	O
unsigned	O
char	O
)	O
*	O
s	pointer
>>	O
4	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
*	O
s	pointer
&	O
0xf	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
escaped	int
=	O
1	int
;	O
}	O
else	O
*	O
dst	pointer
++	O
=	O
*	O
s	pointer
;	O
}	O
*	O
dst	pointer
=	O
0	int
;	O
if	O
(	O
escaped	int
)	O
return	O
esc	pointer
;	O
break	O
;	O
case	O
WGET_RESTRICT_NAMES_UPPERCASE	O
:	O
for	O
(	O
s	pointer
=	O
(	O
signed	O
char	O
*	O
)	O
fname	pointer
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
if	O
(	O
*	O
s	pointer
>=	O
'a'	O
&&	O
*	O
s	pointer
<=	O
'z'	O
)	O
*	O
s	pointer
&=	O
~	O
0x20	int
;	O
break	O
;	O
case	O
WGET_RESTRICT_NAMES_LOWERCASE	O
:	O
for	O
(	O
s	pointer
=	O
(	O
signed	O
char	O
*	O
)	O
fname	pointer
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
if	O
(	O
*	O
s	pointer
>=	O
'A'	O
&&	O
*	O
s	pointer
<=	O
'Z'	O
)	O
*	O
s	pointer
|=	O
0x20	int
;	O
break	O
;	O
case	O
WGET_RESTRICT_NAMES_UNIX	O
:	O
default	O
:	O
for	O
(	O
escaped	int
=	O
0	int
,	O
dst	pointer
=	O
esc	pointer
,	O
s	pointer
=	O
(	O
signed	O
char	O
*	O
)	O
fname	pointer
;	O
*	O
s	pointer
;	O
s	pointer
++	O
)	O
{	O
if	O
(	O
*	O
s	pointer
>=	O
1	int
&&	O
*	O
s	pointer
<=	O
31	int
)	O
{	O
*	O
dst	pointer
++	O
=	O
'%'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
(	O
unsigned	O
char	O
)	O
*	O
s	pointer
>>	O
4	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
*	O
dst	pointer
++	O
=	O
(	O
c	char
=	O
(	O
*	O
s	pointer
&	O
0xf	int
)	O
)	O
>=	O
10	int
?	O
c	char
+	O
'A'	O
-	O
10	int
:	O
c	char
+	O
'0'	O
;	O
escaped	int
=	O
1	int
;	O
}	O
else	O
*	O
dst	pointer
++	O
=	O
*	O
s	pointer
;	O
}	O
*	O
dst	pointer
=	O
0	int
;	O
if	O
(	O
escaped	int
)	O
return	O
esc	pointer
;	O
break	O
;	O
}	O
return	O
(	O
char	O
*	O
)	O
fname	pointer
;	O
}	O
