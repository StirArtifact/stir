void	O
mpz_xor	O
(	O
mpz_ptr	pointer
res	pointer
,	O
mpz_srcptr	pointer
op1	pointer
,	O
mpz_srcptr	pointer
op2	pointer
)	O
{	O
mp_srcptr	pointer
op1_ptr	pointer
,	O
op2_ptr	pointer
;	O
mp_size_t	long
op1_size	long
,	O
op2_size	long
;	O
mp_ptr	pointer
res_ptr	pointer
;	O
mp_size_t	long
res_size	long
,	O
res_alloc	long
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
op1_size	long
=	O
SIZ	O
(	O
op1	pointer
)	O
;	O
op2_size	long
=	O
SIZ	O
(	O
op2	pointer
)	O
;	O
op1_ptr	pointer
=	O
PTR	O
(	O
op1	pointer
)	O
;	O
op2_ptr	pointer
=	O
PTR	O
(	O
op2	pointer
)	O
;	O
res_ptr	pointer
=	O
PTR	O
(	O
res	pointer
)	O
;	O
if	O
(	O
op1_size	long
>=	O
0	int
)	O
{	O
if	O
(	O
op2_size	long
>=	O
0	int
)	O
{	O
if	O
(	O
op1_size	long
>=	O
op2_size	long
)	O
{	O
if	O
(	O
ALLOC	O
(	O
res	pointer
)	O
<	O
op1_size	long
)	O
{	O
_mpz_realloc	O
(	O
res	pointer
,	O
op1_size	long
)	O
;	O
op2_ptr	pointer
=	O
PTR	O
(	O
op2	pointer
)	O
;	O
res_ptr	pointer
=	O
PTR	O
(	O
res	pointer
)	O
;	O
}	O
if	O
(	O
res_ptr	pointer
!=	O
op1_ptr	pointer
)	O
MPN_COPY	O
(	O
res_ptr	pointer
+	O
op2_size	long
,	O
op1_ptr	pointer
+	O
op2_size	long
,	O
op1_size	long
-	O
op2_size	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
op2_size	long
!=	O
0	int
)	O
)	O
mpn_xor_n	O
(	O
res_ptr	pointer
,	O
op1_ptr	pointer
,	O
op2_ptr	pointer
,	O
op2_size	long
)	O
;	O
res_size	long
=	O
op1_size	long
;	O
}	O
else	O
{	O
if	O
(	O
ALLOC	O
(	O
res	pointer
)	O
<	O
op2_size	long
)	O
{	O
_mpz_realloc	O
(	O
res	pointer
,	O
op2_size	long
)	O
;	O
op1_ptr	pointer
=	O
PTR	O
(	O
op1	pointer
)	O
;	O
res_ptr	pointer
=	O
PTR	O
(	O
res	pointer
)	O
;	O
}	O
if	O
(	O
res_ptr	pointer
!=	O
op2_ptr	pointer
)	O
MPN_COPY	O
(	O
res_ptr	pointer
+	O
op1_size	long
,	O
op2_ptr	pointer
+	O
op1_size	long
,	O
op2_size	long
-	O
op1_size	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
op1_size	long
!=	O
0	int
)	O
)	O
mpn_xor_n	O
(	O
res_ptr	pointer
,	O
op1_ptr	pointer
,	O
op2_ptr	pointer
,	O
op1_size	long
)	O
;	O
res_size	long
=	O
op2_size	long
;	O
}	O
MPN_NORMALIZE	O
(	O
res_ptr	pointer
,	O
res_size	long
)	O
;	O
SIZ	O
(	O
res	pointer
)	O
=	O
res_size	long
;	O
return	O
;	O
}	O
else	O
{	O
}	O
}	O
else	O
{	O
if	O
(	O
op2_size	long
<	O
0	int
)	O
{	O
mp_ptr	pointer
opx	pointer
,	O
opy	pointer
;	O
op1_size	long
=	O
-	O
op1_size	long
;	O
op2_size	long
=	O
-	O
op2_size	long
;	O
TMP_ALLOC_LIMBS_2	O
(	O
opx	pointer
,	O
op1_size	long
,	O
opy	pointer
,	O
op2_size	long
)	O
;	O
mpn_sub_1	O
(	O
opx	pointer
,	O
op1_ptr	pointer
,	O
op1_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op1_ptr	pointer
=	O
opx	pointer
;	O
mpn_sub_1	O
(	O
opy	pointer
,	O
op2_ptr	pointer
,	O
op2_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op2_ptr	pointer
=	O
opy	pointer
;	O
if	O
(	O
op1_size	long
>	O
op2_size	long
)	O
MPN_SRCPTR_SWAP	O
(	O
op1_ptr	pointer
,	O
op1_size	long
,	O
op2_ptr	pointer
,	O
op2_size	long
)	O
;	O
res_alloc	long
=	O
op2_size	long
;	O
res_ptr	pointer
=	O
MPZ_REALLOC	O
(	O
res	pointer
,	O
res_alloc	long
)	O
;	O
MPN_COPY	O
(	O
res_ptr	pointer
+	O
op1_size	long
,	O
op2_ptr	pointer
+	O
op1_size	long
,	O
op2_size	long
-	O
op1_size	long
)	O
;	O
mpn_xor_n	O
(	O
res_ptr	pointer
,	O
op1_ptr	pointer
,	O
op2_ptr	pointer
,	O
op1_size	long
)	O
;	O
res_size	long
=	O
op2_size	long
;	O
MPN_NORMALIZE	O
(	O
res_ptr	pointer
,	O
res_size	long
)	O
;	O
SIZ	O
(	O
res	pointer
)	O
=	O
res_size	long
;	O
TMP_FREE	O
;	O
return	O
;	O
}	O
else	O
{	O
MPZ_SRCPTR_SWAP	O
(	O
op1	pointer
,	O
op2	pointer
)	O
;	O
MPN_SRCPTR_SWAP	O
(	O
op1_ptr	pointer
,	O
op1_size	long
,	O
op2_ptr	pointer
,	O
op2_size	long
)	O
;	O
}	O
}	O
{	O
mp_ptr	pointer
opx	pointer
;	O
mp_limb_t	long
cy	long
;	O
op2_size	long
=	O
-	O
op2_size	long
;	O
opx	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
op2_size	long
)	O
;	O
mpn_sub_1	O
(	O
opx	pointer
,	O
op2_ptr	pointer
,	O
op2_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
op2_ptr	pointer
=	O
opx	pointer
;	O
res_alloc	long
=	O
MAX	O
(	O
op1_size	long
,	O
op2_size	long
)	O
+	O
1	int
;	O
if	O
(	O
ALLOC	O
(	O
res	pointer
)	O
<	O
res_alloc	long
)	O
{	O
_mpz_realloc	O
(	O
res	pointer
,	O
res_alloc	long
)	O
;	O
op1_ptr	pointer
=	O
PTR	O
(	O
op1	pointer
)	O
;	O
res_ptr	pointer
=	O
PTR	O
(	O
res	pointer
)	O
;	O
}	O
if	O
(	O
op1_size	long
>	O
op2_size	long
)	O
{	O
MPN_COPY	O
(	O
res_ptr	pointer
+	O
op2_size	long
,	O
op1_ptr	pointer
+	O
op2_size	long
,	O
op1_size	long
-	O
op2_size	long
)	O
;	O
mpn_xor_n	O
(	O
res_ptr	pointer
,	O
op1_ptr	pointer
,	O
op2_ptr	pointer
,	O
op2_size	long
)	O
;	O
res_size	long
=	O
op1_size	long
;	O
}	O
else	O
{	O
MPN_COPY	O
(	O
res_ptr	pointer
+	O
op1_size	long
,	O
op2_ptr	pointer
+	O
op1_size	long
,	O
op2_size	long
-	O
op1_size	long
)	O
;	O
if	O
(	O
LIKELY	O
(	O
op1_size	long
!=	O
0	int
)	O
)	O
mpn_xor_n	O
(	O
res_ptr	pointer
,	O
op1_ptr	pointer
,	O
op2_ptr	pointer
,	O
op1_size	long
)	O
;	O
res_size	long
=	O
op2_size	long
;	O
}	O
cy	long
=	O
mpn_add_1	O
(	O
res_ptr	pointer
,	O
res_ptr	pointer
,	O
res_size	long
,	O
(	O
mp_limb_t	long
)	O
1	int
)	O
;	O
res_ptr	pointer
[	O
res_size	long
]	O
=	O
cy	long
;	O
res_size	long
+=	O
(	O
cy	long
!=	O
0	int
)	O
;	O
MPN_NORMALIZE	O
(	O
res_ptr	pointer
,	O
res_size	long
)	O
;	O
SIZ	O
(	O
res	pointer
)	O
=	O
-	O
res_size	long
;	O
TMP_FREE	O
;	O
}	O
}	O
