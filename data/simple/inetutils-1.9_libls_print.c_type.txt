static	O
int	O
printaname	function
(	O
FTSENT	struct
*	O
,	O
unsigned	O
long	O
,	O
unsigned	O
long	O
)	O
;	O
static	O
void	O
printlink	function
(	O
FTSENT	struct
*	O
)	O
;	O
static	O
void	O
printtime	function
(	O
time_t	long
)	O
;	O
static	O
int	O
printtype	function
(	O
u_int	int
)	O
;	O
static	O
int	O
compute_columns	function
(	O
DISPLAY	struct
*	O
,	O
int	O
*	O
)	O
;	O
void	O
printscol	function
(	O
DISPLAY	struct
*	O
dp	pointer
)	O
{	O
FTSENT	struct
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
dp	pointer
->	O
list	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
fts_link	pointer
)	O
{	O
if	O
(	O
IS_NOPRINT	O
(	O
p	pointer
)	O
)	O
continue	O
;	O
printaname	function
(	O
p	pointer
,	O
dp	pointer
->	O
s_inode	int
,	O
dp	pointer
->	O
s_block	int
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
}	O
void	O
printlong	function
(	O
DISPLAY	struct
*	O
dp	pointer
)	O
{	O
struct	O
stat	struct
*	O
sp	pointer
;	O
FTSENT	struct
*	O
p	pointer
;	O
NAMES	struct
*	O
np	pointer
;	O
char	O
buf	array
[	O
20	int
]	O
;	O
if	O
(	O
dp	pointer
->	O
list	pointer
->	O
fts_level	short
!=	O
FTS_ROOTLEVEL	int
&&	O
(	O
f_longform	int
||	O
f_size	int
)	O
)	O
printf	function
(	O
"total %lu\n"	pointer
,	O
howmany	O
(	O
dp	pointer
->	O
btotal	long
,	O
blocksize	long
)	O
)	O
;	O
for	O
(	O
p	pointer
=	O
dp	pointer
->	O
list	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
fts_link	pointer
)	O
{	O
if	O
(	O
IS_NOPRINT	O
(	O
p	pointer
)	O
)	O
continue	O
;	O
sp	pointer
=	O
p	pointer
->	O
fts_statp	pointer
;	O
if	O
(	O
f_inode	int
)	O
printf	function
(	O
"%*lu "	pointer
,	O
dp	pointer
->	O
s_inode	int
,	O
(	O
unsigned	O
long	O
)	O
sp	pointer
->	O
st_ino	long
)	O
;	O
if	O
(	O
f_size	int
)	O
printf	function
(	O
"%*llu "	pointer
,	O
dp	pointer
->	O
s_block	int
,	O
(	O
long	O
long	O
)	O
howmany	O
(	O
sp	pointer
->	O
st_blocks	long
,	O
blocksize	long
)	O
)	O
;	O
strmode	function
(	O
sp	pointer
->	O
st_mode	int
,	O
buf	array
)	O
;	O
np	pointer
=	O
p	pointer
->	O
fts_pointer	pointer
;	O
printf	function
(	O
"%s %*u %-*s  %-*s  "	pointer
,	O
buf	array
,	O
dp	pointer
->	O
s_nlink	int
,	O
sp	pointer
->	O
st_nlink	long
,	O
dp	pointer
->	O
s_user	int
,	O
np	pointer
->	O
user	pointer
,	O
dp	pointer
->	O
s_group	int
,	O
np	pointer
->	O
group	struct
)	O
;	O
if	O
(	O
f_flags	int
)	O
printf	function
(	O
"%-*s "	pointer
,	O
dp	pointer
->	O
s_flags	int
,	O
np	pointer
->	O
flags	pointer
)	O
;	O
if	O
(	O
S_ISCHR	O
(	O
sp	pointer
->	O
st_mode	int
)	O
||	O
S_ISBLK	O
(	O
sp	pointer
->	O
st_mode	int
)	O
)	O
printf	function
(	O
"%3d, %3d "	pointer
,	O
major	O
(	O
sp	pointer
->	O
st_rdev	long
)	O
,	O
minor	O
(	O
sp	pointer
->	O
st_rdev	long
)	O
)	O
;	O
else	O
if	O
(	O
dp	pointer
->	O
bcfile	int
)	O
printf	function
(	O
"%*s%*llu "	pointer
,	O
8	int
-	O
dp	pointer
->	O
s_size	int
,	O
""	pointer
,	O
dp	pointer
->	O
s_size	int
,	O
(	O
long	O
long	O
)	O
sp	pointer
->	O
st_size	long
)	O
;	O
else	O
printf	function
(	O
"%*llu "	pointer
,	O
dp	pointer
->	O
s_size	int
,	O
(	O
long	O
long	O
)	O
sp	pointer
->	O
st_size	long
)	O
;	O
if	O
(	O
f_accesstime	int
)	O
printtime	function
(	O
sp	pointer
->	O
st_atime	O
)	O
;	O
else	O
if	O
(	O
f_statustime	int
)	O
printtime	function
(	O
sp	pointer
->	O
st_ctime	O
)	O
;	O
else	O
printtime	function
(	O
sp	pointer
->	O
st_mtime	O
)	O
;	O
putname	function
(	O
p	pointer
->	O
fts_name	array
)	O
;	O
if	O
(	O
f_type	int
||	O
(	O
f_typedir	int
&&	O
S_ISDIR	O
(	O
sp	pointer
->	O
st_mode	int
)	O
)	O
)	O
printtype	function
(	O
sp	pointer
->	O
st_mode	int
)	O
;	O
if	O
(	O
S_ISLNK	O
(	O
sp	pointer
->	O
st_mode	int
)	O
)	O
printlink	function
(	O
p	pointer
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
}	O
static	O
int	O
compute_columns	function
(	O
DISPLAY	struct
*	O
dp	pointer
,	O
int	O
*	O
pnum	pointer
)	O
{	O
int	O
colwidth	int
;	O
extern	O
int	O
termwidth	int
;	O
int	O
mywidth	int
;	O
colwidth	int
=	O
dp	pointer
->	O
maxlen	int
;	O
if	O
(	O
f_inode	int
)	O
colwidth	int
+=	O
dp	pointer
->	O
s_inode	int
+	O
1	int
;	O
if	O
(	O
f_size	int
)	O
colwidth	int
+=	O
dp	pointer
->	O
s_block	int
+	O
1	int
;	O
if	O
(	O
f_type	int
||	O
f_typedir	int
)	O
colwidth	int
+=	O
1	int
;	O
colwidth	int
+=	O
1	int
;	O
mywidth	int
=	O
termwidth	int
+	O
1	int
;	O
if	O
(	O
mywidth	int
<	O
2	int
*	O
colwidth	int
)	O
{	O
printscol	function
(	O
dp	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
*	O
pnum	pointer
=	O
mywidth	int
/	O
colwidth	int
;	O
return	O
(	O
mywidth	int
/	O
*	O
pnum	pointer
)	O
;	O
}	O
void	O
printcol	function
(	O
DISPLAY	struct
*	O
dp	pointer
)	O
{	O
static	O
FTSENT	struct
*	O
*	O
array	pointer
;	O
static	O
int	O
lastentries	int
=	O
-	O
1	int
;	O
FTSENT	struct
*	O
p	pointer
;	O
int	O
base	int
,	O
chcnt	int
,	O
col	int
,	O
colwidth	int
,	O
num	int
;	O
int	O
numcols	int
,	O
numrows	int
,	O
row	int
;	O
if	O
(	O
(	O
colwidth	int
=	O
compute_columns	function
(	O
dp	pointer
,	O
&	O
numcols	int
)	O
)	O
==	O
0	int
)	O
return	O
;	O
if	O
(	O
dp	pointer
->	O
entries	int
>	O
lastentries	int
)	O
{	O
FTSENT	struct
*	O
*	O
a	pointer
;	O
if	O
(	O
(	O
a	pointer
=	O
realloc	function
(	O
array	pointer
,	O
dp	pointer
->	O
entries	int
*	O
sizeof	O
(	O
FTSENT	struct
*	O
)	O
)	O
)	O
==	O
NULL	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"realloci: %s \n"	pointer
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
printscol	function
(	O
dp	pointer
)	O
;	O
return	O
;	O
}	O
lastentries	int
=	O
dp	pointer
->	O
entries	int
;	O
array	pointer
=	O
a	pointer
;	O
}	O
for	O
(	O
p	pointer
=	O
dp	pointer
->	O
list	pointer
,	O
num	int
=	O
0	int
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
fts_link	pointer
)	O
if	O
(	O
p	pointer
->	O
fts_number	long
!=	O
NO_PRINT	int
)	O
array	pointer
[	O
num	int
++	O
]	O
=	O
p	pointer
;	O
numrows	int
=	O
num	int
/	O
numcols	int
;	O
if	O
(	O
num	int
%	O
numcols	int
)	O
++	O
numrows	int
;	O
if	O
(	O
dp	pointer
->	O
list	pointer
->	O
fts_level	short
!=	O
FTS_ROOTLEVEL	int
&&	O
(	O
f_longform	int
||	O
f_size	int
)	O
)	O
printf	function
(	O
"total %lu\n"	pointer
,	O
howmany	O
(	O
dp	pointer
->	O
btotal	long
,	O
blocksize	long
)	O
)	O
;	O
for	O
(	O
row	int
=	O
0	int
;	O
row	int
<	O
numrows	int
;	O
++	O
row	int
)	O
{	O
for	O
(	O
base	int
=	O
row	int
,	O
col	int
=	O
0	int
;	O
;	O
)	O
{	O
chcnt	int
=	O
printaname	function
(	O
array	pointer
[	O
base	int
]	O
,	O
dp	pointer
->	O
s_inode	int
,	O
dp	pointer
->	O
s_block	int
)	O
;	O
if	O
(	O
(	O
base	int
+=	O
numrows	int
)	O
>=	O
num	int
)	O
break	O
;	O
if	O
(	O
++	O
col	int
==	O
numcols	int
)	O
break	O
;	O
while	O
(	O
chcnt	int
++	O
<	O
colwidth	int
)	O
putchar	function
(	O
' '	O
)	O
;	O
}	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
}	O
static	O
int	O
printaname	function
(	O
FTSENT	struct
*	O
p	pointer
,	O
unsigned	O
long	O
inodefield	long
,	O
unsigned	O
long	O
sizefield	long
)	O
{	O
struct	O
stat	struct
*	O
sp	pointer
;	O
int	O
chcnt	int
;	O
sp	pointer
=	O
p	pointer
->	O
fts_statp	pointer
;	O
chcnt	int
=	O
0	int
;	O
if	O
(	O
f_inode	int
)	O
chcnt	int
+=	O
printf	function
(	O
"%*lu "	pointer
,	O
(	O
int	O
)	O
inodefield	long
,	O
(	O
unsigned	O
long	O
)	O
sp	pointer
->	O
st_ino	long
)	O
;	O
if	O
(	O
f_size	int
)	O
chcnt	int
+=	O
printf	function
(	O
"%*llu "	pointer
,	O
(	O
int	O
)	O
sizefield	long
,	O
(	O
long	O
long	O
)	O
howmany	O
(	O
sp	pointer
->	O
st_blocks	long
,	O
blocksize	long
)	O
)	O
;	O
chcnt	int
+=	O
putname	function
(	O
p	pointer
->	O
fts_name	array
)	O
;	O
if	O
(	O
f_type	int
||	O
(	O
f_typedir	int
&&	O
S_ISDIR	O
(	O
sp	pointer
->	O
st_mode	int
)	O
)	O
)	O
chcnt	int
+=	O
printtype	function
(	O
sp	pointer
->	O
st_mode	int
)	O
;	O
return	O
(	O
chcnt	int
)	O
;	O
}	O
static	O
void	O
printtime	function
(	O
time_t	long
ftime	long
)	O
{	O
int	O
i	int
;	O
char	O
*	O
longstring	pointer
;	O
longstring	pointer
=	O
ctime	function
(	O
&	O
ftime	long
)	O
;	O
for	O
(	O
i	int
=	O
4	int
;	O
i	int
<	O
11	int
;	O
++	O
i	int
)	O
putchar	function
(	O
longstring	pointer
[	O
i	int
]	O
)	O
;	O
if	O
(	O
f_sectime	int
)	O
for	O
(	O
i	int
=	O
11	int
;	O
i	int
<	O
24	int
;	O
i	int
++	O
)	O
putchar	function
(	O
longstring	pointer
[	O
i	int
]	O
)	O
;	O
else	O
if	O
(	O
ftime	long
+	O
SIXMONTHS	O
>	O
time	struct
(	O
NULL	O
)	O
)	O
for	O
(	O
i	int
=	O
11	int
;	O
i	int
<	O
16	int
;	O
++	O
i	int
)	O
putchar	function
(	O
longstring	pointer
[	O
i	int
]	O
)	O
;	O
else	O
{	O
putchar	function
(	O
' '	O
)	O
;	O
for	O
(	O
i	int
=	O
20	int
;	O
i	int
<	O
24	int
;	O
++	O
i	int
)	O
putchar	function
(	O
longstring	pointer
[	O
i	int
]	O
)	O
;	O
}	O
putchar	function
(	O
' '	O
)	O
;	O
}	O
void	O
printacol	function
(	O
DISPLAY	struct
*	O
dp	pointer
)	O
{	O
FTSENT	struct
*	O
p	pointer
;	O
int	O
chcnt	int
,	O
col	int
,	O
colwidth	int
;	O
int	O
numcols	int
;	O
if	O
(	O
(	O
colwidth	int
=	O
compute_columns	function
(	O
dp	pointer
,	O
&	O
numcols	int
)	O
)	O
==	O
0	int
)	O
return	O
;	O
if	O
(	O
dp	pointer
->	O
list	pointer
->	O
fts_level	short
!=	O
FTS_ROOTLEVEL	int
&&	O
(	O
f_longform	int
||	O
f_size	int
)	O
)	O
printf	function
(	O
"total %llu\n"	pointer
,	O
(	O
long	O
long	O
)	O
(	O
howmany	O
(	O
dp	pointer
->	O
btotal	long
,	O
blocksize	long
)	O
)	O
)	O
;	O
col	int
=	O
0	int
;	O
for	O
(	O
p	pointer
=	O
dp	pointer
->	O
list	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
fts_link	pointer
)	O
{	O
if	O
(	O
IS_NOPRINT	O
(	O
p	pointer
)	O
)	O
continue	O
;	O
if	O
(	O
col	int
>=	O
numcols	int
)	O
{	O
col	int
=	O
0	int
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
chcnt	int
=	O
printaname	function
(	O
p	pointer
,	O
dp	pointer
->	O
s_inode	int
,	O
dp	pointer
->	O
s_block	int
)	O
;	O
col	int
++	O
;	O
if	O
(	O
col	int
<	O
numcols	int
)	O
while	O
(	O
chcnt	int
++	O
<	O
colwidth	int
)	O
putchar	function
(	O
' '	O
)	O
;	O
}	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
void	O
printstream	function
(	O
DISPLAY	struct
*	O
dp	pointer
)	O
{	O
extern	O
int	O
termwidth	int
;	O
FTSENT	struct
*	O
p	pointer
;	O
int	O
col	int
;	O
int	O
extwidth	int
;	O
extwidth	int
=	O
0	int
;	O
if	O
(	O
f_inode	int
)	O
extwidth	int
+=	O
dp	pointer
->	O
s_inode	int
+	O
1	int
;	O
if	O
(	O
f_size	int
)	O
extwidth	int
+=	O
dp	pointer
->	O
s_block	int
+	O
1	int
;	O
if	O
(	O
f_type	int
)	O
extwidth	int
+=	O
1	int
;	O
for	O
(	O
col	int
=	O
0	int
,	O
p	pointer
=	O
dp	pointer
->	O
list	pointer
;	O
p	pointer
!=	O
NULL	O
;	O
p	pointer
=	O
p	pointer
->	O
fts_link	pointer
)	O
{	O
if	O
(	O
IS_NOPRINT	O
(	O
p	pointer
)	O
)	O
continue	O
;	O
if	O
(	O
col	int
>	O
0	int
)	O
{	O
putchar	function
(	O
','	O
)	O
,	O
col	int
++	O
;	O
if	O
(	O
col	int
+	O
1	int
+	O
extwidth	int
+	O
p	pointer
->	O
fts_namelen	short
>=	O
termwidth	int
)	O
putchar	function
(	O
'\n'	O
)	O
,	O
col	int
=	O
0	int
;	O
else	O
putchar	function
(	O
' '	O
)	O
,	O
col	int
++	O
;	O
}	O
col	int
+=	O
printaname	function
(	O
p	pointer
,	O
dp	pointer
->	O
s_inode	int
,	O
dp	pointer
->	O
s_block	int
)	O
;	O
}	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
static	O
int	O
printtype	function
(	O
u_int	int
mode	int
)	O
{	O
switch	O
(	O
mode	int
&	O
S_IFMT	O
)	O
{	O
case	O
S_IFDIR	O
:	O
putchar	function
(	O
'/'	O
)	O
;	O
return	O
(	O
1	int
)	O
;	O
case	O
S_IFIFO	O
:	O
putchar	function
(	O
'|'	O
)	O
;	O
return	O
(	O
1	int
)	O
;	O
case	O
S_IFLNK	O
:	O
putchar	function
(	O
'@'	O
)	O
;	O
return	O
(	O
1	int
)	O
;	O
case	O
S_IFSOCK	O
:	O
putchar	function
(	O
'='	O
)	O
;	O
return	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
mode	int
&	O
(	O
S_IXUSR	O
|	O
S_IXGRP	O
|	O
S_IXOTH	O
)	O
)	O
{	O
putchar	function
(	O
'*'	O
)	O
;	O
return	O
(	O
1	int
)	O
;	O
}	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
void	O
printlink	function
(	O
FTSENT	struct
*	O
p	pointer
)	O
{	O
int	O
lnklen	int
;	O
char	O
name	array
[	O
MAXPATHLEN	O
]	O
,	O
path	array
[	O
MAXPATHLEN	O
]	O
;	O
if	O
(	O
p	pointer
->	O
fts_level	short
==	O
FTS_ROOTLEVEL	int
)	O
snprintf	function
(	O
name	array
,	O
sizeof	O
(	O
name	array
)	O
,	O
"%s"	pointer
,	O
p	pointer
->	O
fts_name	array
)	O
;	O
else	O
snprintf	function
(	O
name	array
,	O
sizeof	O
(	O
name	array
)	O
,	O
"%s/%s"	pointer
,	O
p	pointer
->	O
fts_parent	pointer
->	O
fts_accpath	pointer
,	O
p	pointer
->	O
fts_name	array
)	O
;	O
if	O
(	O
(	O
lnklen	int
=	O
readlink	function
(	O
name	array
,	O
path	array
,	O
sizeof	O
(	O
path	array
)	O
-	O
1	int
)	O
)	O
==	O
-	O
1	int
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"\nls: %s: %s\n"	pointer
,	O
name	array
,	O
strerror	function
(	O
errno	O
)	O
)	O
;	O
return	O
;	O
}	O
path	array
[	O
lnklen	int
]	O
=	O
'\0'	O
;	O
printf	function
(	O
" -> "	pointer
)	O
;	O
putname	function
(	O
path	array
)	O
;	O
}	O
