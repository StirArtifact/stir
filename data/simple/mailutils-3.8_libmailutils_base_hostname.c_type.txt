int	O
mu_get_host_name	function
(	O
char	O
*	O
*	O
host	pointer
)	O
{	O
char	O
*	O
hostname	pointer
=	O
NULL	O
;	O
size_t	long
size	long
=	O
0	int
;	O
char	O
*	O
p	pointer
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
size	long
==	O
0	int
)	O
{	O
size	long
=	O
MAXHOSTNAMELEN	int
;	O
p	pointer
=	O
malloc	function
(	O
size	long
)	O
;	O
}	O
else	O
{	O
size_t	long
ns	long
=	O
size	long
*	O
2	int
;	O
if	O
(	O
ns	long
<	O
size	long
)	O
{	O
free	function
(	O
hostname	pointer
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
size	long
=	O
ns	long
;	O
p	pointer
=	O
realloc	function
(	O
hostname	pointer
,	O
size	long
)	O
;	O
}	O
if	O
(	O
!	O
p	pointer
)	O
{	O
free	function
(	O
hostname	pointer
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
hostname	pointer
=	O
p	pointer
;	O
hostname	pointer
[	O
size	long
-	O
1	int
]	O
=	O
0	int
;	O
if	O
(	O
gethostname	function
(	O
hostname	pointer
,	O
size	long
-	O
1	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
hostname	pointer
[	O
size	long
-	O
1	int
]	O
)	O
break	O
;	O
}	O
else	O
if	O
(	O
errno	O
!=	O
0	int
&&	O
errno	O
!=	O
ENAMETOOLONG	int
&&	O
errno	O
!=	O
EINVAL	int
&&	O
errno	O
!=	O
ENOMEM	int
)	O
{	O
int	O
rc	int
=	O
errno	O
;	O
free	function
(	O
hostname	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
}	O
if	O
(	O
!	O
strchr	function
(	O
hostname	pointer
,	O
'.'	O
)	O
)	O
{	O
struct	O
hostent	struct
*	O
hp	pointer
=	O
gethostbyname	function
(	O
hostname	pointer
)	O
;	O
if	O
(	O
hp	pointer
)	O
{	O
size_t	long
len	long
=	O
strlen	function
(	O
hp	pointer
->	O
h_name	pointer
)	O
;	O
if	O
(	O
size	long
<	O
len	long
+	O
1	int
)	O
{	O
p	pointer
=	O
realloc	function
(	O
hostname	pointer
,	O
len	long
+	O
1	int
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
{	O
free	function
(	O
hostname	pointer
)	O
;	O
return	O
ENOMEM	int
;	O
}	O
hostname	pointer
=	O
p	pointer
;	O
}	O
strcpy	function
(	O
hostname	pointer
,	O
hp	pointer
->	O
h_name	pointer
)	O
;	O
}	O
}	O
*	O
host	pointer
=	O
hostname	pointer
;	O
return	O
0	int
;	O
}	O
