void	O
DISFreePDUComponents	function
(	O
dis_pdu	union
*	O
p	pointer
)	O
{	O
int	O
i	int
,	O
j	int
;	O
switch	O
(	O
p	pointer
->	O
hdr	struct
.	O
pdu_type	char
)	O
{	O
case	O
PDUTypeEmission	int
:	O
{	O
dis_em_emission_pdu	struct
*	O
pdu	struct
=	O
(	O
dis_em_emission_pdu	struct
*	O
)	O
p	pointer
;	O
dis_em_system_info	struct
*	O
s	array
=	O
pdu	struct
->	O
system	function
;	O
dis_beam_info	struct
*	O
b	pointer
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
pdu	struct
->	O
num_systems	char
;	O
++	O
i	int
,	O
++	O
s	array
)	O
{	O
b	pointer
=	O
s	array
->	O
beam	pointer
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
s	array
->	O
num_beams	char
;	O
++	O
j	int
,	O
++	O
b	pointer
)	O
{	O
if	O
(	O
b	pointer
->	O
num_targets	char
>	O
0	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
b	pointer
->	O
tracked_target	pointer
)	O
;	O
}	O
}	O
if	O
(	O
s	array
->	O
num_beams	char
>	O
0	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
s	array
->	O
beam	pointer
)	O
;	O
}	O
}	O
if	O
(	O
pdu	struct
->	O
num_systems	char
>	O
0	int
)	O
{	O
free	function
(	O
(	O
char	O
*	O
)	O
pdu	struct
->	O
system	function
)	O
;	O
}	O
}	O
break	O
;	O
case	O
PDUTypeEntityState	int
:	O
{	O
dis_entity_state_pdu	struct
*	O
pdu	struct
=	O
(	O
dis_entity_state_pdu	struct
*	O
)	O
p	pointer
;	O
if	O
(	O
pdu	struct
->	O
art_parm_count	char
>	O
0	int
)	O
{	O
free	function
(	O
pdu	struct
->	O
art_parm	pointer
)	O
;	O
}	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
}	O
