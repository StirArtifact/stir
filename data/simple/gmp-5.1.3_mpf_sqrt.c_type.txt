void	O
mpf_sqrt	O
(	O
mpf_ptr	pointer
r	pointer
,	O
mpf_srcptr	pointer
u	array
)	O
{	O
mp_size_t	long
usize	pointer
;	O
mp_ptr	pointer
up	pointer
,	O
tp	pointer
;	O
mp_size_t	long
prec	int
,	O
tsize	long
;	O
mp_exp_t	long
uexp	long
,	O
expodd	long
;	O
TMP_DECL	O
;	O
usize	pointer
=	O
u	array
->	O
_mp_size	int
;	O
if	O
(	O
UNLIKELY	O
(	O
usize	pointer
<=	O
0	int
)	O
)	O
{	O
if	O
(	O
usize	pointer
<	O
0	int
)	O
SQRT_OF_NEGATIVE	O
;	O
r	pointer
->	O
_mp_size	int
=	O
0	int
;	O
r	pointer
->	O
_mp_exp	long
=	O
0	int
;	O
return	O
;	O
}	O
TMP_MARK	O
;	O
uexp	long
=	O
u	array
->	O
_mp_exp	long
;	O
prec	int
=	O
r	pointer
->	O
_mp_prec	int
;	O
up	pointer
=	O
u	array
->	O
_mp_d	pointer
;	O
expodd	long
=	O
(	O
uexp	long
&	O
1	int
)	O
;	O
tsize	long
=	O
2	int
*	O
prec	int
-	O
expodd	long
;	O
r	pointer
->	O
_mp_size	int
=	O
prec	int
;	O
r	pointer
->	O
_mp_exp	long
=	O
(	O
uexp	long
+	O
expodd	long
)	O
/	O
2	int
;	O
ASSERT	O
(	O
(	O
tsize	long
+	O
1	int
)	O
/	O
2	int
==	O
prec	int
)	O
;	O
tp	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
tsize	long
)	O
;	O
if	O
(	O
usize	pointer
>	O
tsize	long
)	O
{	O
up	pointer
+=	O
usize	pointer
-	O
tsize	long
;	O
usize	pointer
=	O
tsize	long
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
up	pointer
,	O
tsize	long
)	O
;	O
}	O
else	O
{	O
MPN_ZERO	O
(	O
tp	pointer
,	O
tsize	long
-	O
usize	pointer
)	O
;	O
MPN_COPY	O
(	O
tp	pointer
+	O
(	O
tsize	long
-	O
usize	pointer
)	O
,	O
up	pointer
,	O
usize	pointer
)	O
;	O
}	O
mpn_sqrtrem	O
(	O
r	pointer
->	O
_mp_d	pointer
,	O
NULL	O
,	O
tp	pointer
,	O
tsize	long
)	O
;	O
TMP_FREE	O
;	O
}	O
