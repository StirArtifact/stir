struct	O
imap_auth	struct
{	O
char	O
*	O
name	pointer
;	O
imap4d_auth_handler_fp	pointer
handler	array
;	O
}	O
;	O
static	O
mu_list_t	pointer
imap_auth_list	pointer
;	O
static	O
int	O
comp	function
(	O
const	O
void	O
*	O
item	pointer
,	O
const	O
void	O
*	O
data	pointer
)	O
{	O
const	O
struct	O
imap_auth	struct
*	O
p	pointer
=	O
item	pointer
;	O
return	O
strcmp	function
(	O
p	pointer
->	O
name	pointer
,	O
(	O
const	O
char	O
*	O
)	O
data	pointer
)	O
;	O
}	O
void	O
auth_add	function
(	O
char	O
*	O
name	pointer
,	O
imap4d_auth_handler_fp	pointer
handler	array
)	O
{	O
struct	O
imap_auth	struct
*	O
p	pointer
=	O
mu_alloc	function
(	O
sizeof	O
(	O
*	O
p	pointer
)	O
)	O
;	O
p	pointer
->	O
name	pointer
=	O
name	pointer
;	O
p	pointer
->	O
handler	array
=	O
handler	array
;	O
if	O
(	O
!	O
imap_auth_list	pointer
)	O
{	O
mu_list_create	function
(	O
&	O
imap_auth_list	pointer
)	O
;	O
mu_list_set_comparator	function
(	O
imap_auth_list	pointer
,	O
comp	function
)	O
;	O
mu_list_set_destroy_item	function
(	O
imap_auth_list	pointer
,	O
mu_list_free_item	function
)	O
;	O
}	O
mu_list_append	function
(	O
imap_auth_list	pointer
,	O
(	O
void	O
*	O
)	O
p	pointer
)	O
;	O
}	O
void	O
auth_remove	function
(	O
char	O
*	O
name	pointer
)	O
{	O
mu_list_remove	function
(	O
imap_auth_list	pointer
,	O
(	O
void	O
*	O
)	O
name	pointer
)	O
;	O
}	O
static	O
int	O
_auth_capa	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
usused	pointer
)	O
{	O
struct	O
imap_auth	struct
*	O
p	pointer
=	O
item	pointer
;	O
io_sendf	function
(	O
" AUTH=%s"	pointer
,	O
p	pointer
->	O
name	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_auth_try	function
(	O
void	O
*	O
item	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
struct	O
imap_auth	struct
*	O
p	pointer
=	O
item	pointer
;	O
struct	O
imap4d_auth	struct
*	O
ap	array
=	O
data	pointer
;	O
if	O
(	O
strcmp	function
(	O
p	pointer
->	O
name	pointer
,	O
ap	array
->	O
auth_type	pointer
)	O
==	O
0	int
)	O
{	O
int	O
res	pointer
=	O
p	pointer
->	O
handler	array
(	O
ap	array
)	O
;	O
if	O
(	O
res	pointer
)	O
return	O
res	pointer
;	O
}	O
return	O
0	int
;	O
}	O
void	O
imap4d_auth_capability	function
(	O
struct	O
imap4d_session	struct
*	O
session	pointer
)	O
{	O
if	O
(	O
session	pointer
->	O
tls_mode	enum
!=	O
tls_required	int
)	O
mu_list_foreach	function
(	O
imap_auth_list	pointer
,	O
_auth_capa	function
,	O
NULL	O
)	O
;	O
}	O
int	O
imap4d_authenticate	function
(	O
struct	O
imap4d_session	struct
*	O
session	pointer
,	O
struct	O
imap4d_command	struct
*	O
command	pointer
,	O
imap4d_tokbuf_t	pointer
tok	pointer
)	O
{	O
char	O
*	O
auth_type	pointer
;	O
struct	O
imap4d_auth	struct
adata	struct
;	O
int	O
res	pointer
;	O
if	O
(	O
imap4d_tokbuf_argc	function
(	O
tok	pointer
)	O
!=	O
3	int
)	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_BAD	int
,	O
"Invalid arguments"	pointer
)	O
;	O
auth_type	pointer
=	O
imap4d_tokbuf_getarg	function
(	O
tok	pointer
,	O
IMAP4_ARG_1	int
)	O
;	O
if	O
(	O
session	pointer
->	O
tls_mode	enum
==	O
tls_required	int
)	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_NO	int
,	O
"Command disabled: Use STARTTLS first"	pointer
)	O
;	O
adata	struct
.	O
command	pointer
=	O
command	pointer
;	O
adata	struct
.	O
auth_type	pointer
=	O
auth_type	pointer
;	O
adata	struct
.	O
username	pointer
=	O
NULL	O
;	O
res	pointer
=	O
mu_list_foreach	function
(	O
imap_auth_list	pointer
,	O
_auth_try	function
,	O
&	O
adata	struct
)	O
;	O
switch	O
(	O
res	pointer
)	O
{	O
case	O
imap4d_auth_nosup	int
:	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_NO	int
,	O
"Authentication mechanism not supported"	pointer
)	O
;	O
case	O
imap4d_auth_ok	int
:	O
return	O
0	int
;	O
case	O
imap4d_auth_resp	int
:	O
if	O
(	O
adata	struct
.	O
response	int
==	O
RESP_OK	int
&&	O
adata	struct
.	O
username	pointer
)	O
{	O
if	O
(	O
imap4d_session_setup	function
(	O
adata	struct
.	O
username	pointer
)	O
)	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_NO	int
,	O
"User name or passwd rejected"	pointer
)	O
;	O
else	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
RESP_OK	int
,	O
"%s authentication successful"	pointer
,	O
auth_type	pointer
)	O
;	O
}	O
case	O
imap4d_auth_fail	int
:	O
adata	struct
.	O
response	int
=	O
RESP_NO	int
;	O
break	O
;	O
default	O
:	O
adata	struct
.	O
response	int
=	O
RESP_NO	int
;	O
mu_error	function
(	O
"%s"	pointer
,	O
mu_strerror	function
(	O
res	pointer
)	O
)	O
;	O
}	O
return	O
io_completion_response	function
(	O
command	pointer
,	O
adata	struct
.	O
response	int
,	O
"%s authentication failed"	pointer
,	O
auth_type	pointer
)	O
;	O
}	O
