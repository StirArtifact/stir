extern	O
IFILE	O
curr_ifile	pointer
;	O
struct	O
ifile	pointer
{	O
struct	O
ifile	pointer
*	O
h_next	pointer
;	O
struct	O
ifile	pointer
*	O
h_prev	pointer
;	O
char	O
*	O
h_filename	pointer
;	O
void	O
*	O
h_filestate	pointer
;	O
int	O
h_index	int
;	O
int	O
h_hold	int
;	O
char	O
h_opened	char
;	O
struct	O
scrpos	struct
h_scrpos	struct
;	O
void	O
*	O
h_altpipe	pointer
;	O
char	O
*	O
h_altfilename	pointer
;	O
}	O
;	O
static	O
struct	O
ifile	pointer
anchor	pointer
=	O
{	O
&	O
anchor	pointer
,	O
&	O
anchor	pointer
,	O
NULL	O
,	O
NULL	O
,	O
0	int
,	O
0	int
,	O
'\0'	O
,	O
{	O
NULL_POSITION	O
,	O
0	int
}	O
}	O
;	O
static	O
int	O
ifiles	int
=	O
0	int
;	O
static	O
void	O
incr_index	function
(	O
p	pointer
,	O
incr	int
)	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
int	O
incr	int
;	O
{	O
for	O
(	O
;	O
p	pointer
!=	O
&	O
anchor	pointer
;	O
p	pointer
=	O
p	pointer
->	O
h_next	pointer
)	O
p	pointer
->	O
h_index	int
+=	O
incr	int
;	O
}	O
static	O
void	O
link_ifile	function
(	O
p	pointer
,	O
prev	pointer
)	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
struct	O
ifile	pointer
*	O
prev	pointer
;	O
{	O
if	O
(	O
prev	pointer
==	O
NULL	O
)	O
prev	pointer
=	O
&	O
anchor	pointer
;	O
p	pointer
->	O
h_next	pointer
=	O
prev	pointer
->	O
h_next	pointer
;	O
p	pointer
->	O
h_prev	pointer
=	O
prev	pointer
;	O
prev	pointer
->	O
h_next	pointer
->	O
h_prev	pointer
=	O
p	pointer
;	O
prev	pointer
->	O
h_next	pointer
=	O
p	pointer
;	O
p	pointer
->	O
h_index	int
=	O
prev	pointer
->	O
h_index	int
+	O
1	int
;	O
incr_index	function
(	O
p	pointer
->	O
h_next	pointer
,	O
1	int
)	O
;	O
ifiles	int
++	O
;	O
}	O
static	O
void	O
unlink_ifile	function
(	O
p	pointer
)	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
{	O
p	pointer
->	O
h_next	pointer
->	O
h_prev	pointer
=	O
p	pointer
->	O
h_prev	pointer
;	O
p	pointer
->	O
h_prev	pointer
->	O
h_next	pointer
=	O
p	pointer
->	O
h_next	pointer
;	O
incr_index	function
(	O
p	pointer
->	O
h_next	pointer
,	O
-	O
1	int
)	O
;	O
ifiles	int
--	O
;	O
}	O
static	O
struct	O
ifile	pointer
*	O
new_ifile	function
(	O
filename	pointer
,	O
prev	pointer
)	O
char	O
*	O
filename	pointer
;	O
struct	O
ifile	pointer
*	O
prev	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
p	pointer
=	O
(	O
struct	O
ifile	pointer
*	O
)	O
ecalloc	function
(	O
1	int
,	O
sizeof	O
(	O
struct	O
ifile	pointer
)	O
)	O
;	O
p	pointer
->	O
h_filename	pointer
=	O
save	function
(	O
filename	pointer
)	O
;	O
p	pointer
->	O
h_scrpos	struct
.	O
pos	long
=	O
NULL_POSITION	O
;	O
p	pointer
->	O
h_opened	char
=	O
0	int
;	O
p	pointer
->	O
h_hold	int
=	O
0	int
;	O
p	pointer
->	O
h_filestate	pointer
=	O
NULL	O
;	O
link_ifile	function
(	O
p	pointer
,	O
prev	pointer
)	O
;	O
return	O
(	O
p	pointer
)	O
;	O
}	O
public	O
void	O
del_ifile	function
(	O
h	pointer
)	O
IFILE	O
h	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
if	O
(	O
h	pointer
==	O
NULL_IFILE	O
)	O
return	O
;	O
unmark	function
(	O
h	pointer
)	O
;	O
if	O
(	O
h	pointer
==	O
curr_ifile	pointer
)	O
curr_ifile	pointer
=	O
getoff_ifile	function
(	O
curr_ifile	pointer
)	O
;	O
p	pointer
=	O
int_ifile	O
(	O
h	pointer
)	O
;	O
unlink_ifile	function
(	O
p	pointer
)	O
;	O
free	function
(	O
p	pointer
->	O
h_filename	pointer
)	O
;	O
free	function
(	O
p	pointer
)	O
;	O
}	O
public	O
IFILE	O
next_ifile	function
(	O
h	pointer
)	O
IFILE	O
h	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
p	pointer
=	O
(	O
h	pointer
==	O
NULL_IFILE	O
)	O
?	O
&	O
anchor	pointer
:	O
int_ifile	O
(	O
h	pointer
)	O
;	O
if	O
(	O
p	pointer
->	O
h_next	pointer
==	O
&	O
anchor	pointer
)	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	pointer
->	O
h_next	pointer
)	O
)	O
;	O
}	O
public	O
IFILE	O
prev_ifile	function
(	O
h	pointer
)	O
IFILE	O
h	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
p	pointer
=	O
(	O
h	pointer
==	O
NULL_IFILE	O
)	O
?	O
&	O
anchor	pointer
:	O
int_ifile	O
(	O
h	pointer
)	O
;	O
if	O
(	O
p	pointer
->	O
h_prev	pointer
==	O
&	O
anchor	pointer
)	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	pointer
->	O
h_prev	pointer
)	O
)	O
;	O
}	O
public	O
IFILE	O
getoff_ifile	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
IFILE	O
newifile	pointer
;	O
if	O
(	O
(	O
newifile	pointer
=	O
prev_ifile	function
(	O
ifile	pointer
)	O
)	O
!=	O
NULL_IFILE	O
)	O
return	O
(	O
newifile	pointer
)	O
;	O
if	O
(	O
(	O
newifile	pointer
=	O
next_ifile	function
(	O
ifile	pointer
)	O
)	O
!=	O
NULL_IFILE	O
)	O
return	O
(	O
newifile	pointer
)	O
;	O
return	O
(	O
NULL_IFILE	O
)	O
;	O
}	O
public	O
int	O
nifile	function
(	O
)	O
{	O
return	O
(	O
ifiles	int
)	O
;	O
}	O
static	O
struct	O
ifile	pointer
*	O
find_ifile	function
(	O
filename	pointer
)	O
char	O
*	O
filename	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
anchor	pointer
.	O
h_next	pointer
;	O
p	pointer
!=	O
&	O
anchor	pointer
;	O
p	pointer
=	O
p	pointer
->	O
h_next	pointer
)	O
if	O
(	O
strcmp	function
(	O
filename	pointer
,	O
p	pointer
->	O
h_filename	pointer
)	O
==	O
0	int
)	O
return	O
(	O
p	pointer
)	O
;	O
return	O
(	O
NULL	O
)	O
;	O
}	O
public	O
IFILE	O
get_ifile	function
(	O
filename	pointer
,	O
prev	pointer
)	O
char	O
*	O
filename	pointer
;	O
IFILE	O
prev	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
;	O
if	O
(	O
(	O
p	pointer
=	O
find_ifile	function
(	O
filename	pointer
)	O
)	O
==	O
NULL	O
)	O
p	pointer
=	O
new_ifile	function
(	O
filename	pointer
,	O
int_ifile	O
(	O
prev	pointer
)	O
)	O
;	O
return	O
(	O
ext_ifile	O
(	O
p	pointer
)	O
)	O
;	O
}	O
public	O
char	O
*	O
get_filename	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
if	O
(	O
ifile	pointer
==	O
NULL	O
)	O
return	O
(	O
NULL	O
)	O
;	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_filename	pointer
)	O
;	O
}	O
public	O
int	O
get_index	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_index	int
)	O
;	O
}	O
public	O
void	O
store_pos	function
(	O
ifile	pointer
,	O
scrpos	struct
)	O
IFILE	O
ifile	pointer
;	O
struct	O
scrpos	struct
*	O
scrpos	struct
;	O
{	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_scrpos	struct
=	O
*	O
scrpos	struct
;	O
}	O
public	O
void	O
get_pos	function
(	O
ifile	pointer
,	O
scrpos	struct
)	O
IFILE	O
ifile	pointer
;	O
struct	O
scrpos	struct
*	O
scrpos	struct
;	O
{	O
*	O
scrpos	struct
=	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_scrpos	struct
;	O
}	O
public	O
void	O
set_open	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_opened	char
=	O
1	int
;	O
}	O
public	O
int	O
opened	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_opened	char
)	O
;	O
}	O
public	O
void	O
hold_ifile	function
(	O
ifile	pointer
,	O
incr	int
)	O
IFILE	O
ifile	pointer
;	O
int	O
incr	int
;	O
{	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_hold	int
+=	O
incr	int
;	O
}	O
public	O
int	O
held_ifile	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_hold	int
)	O
;	O
}	O
public	O
void	O
*	O
get_filestate	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_filestate	pointer
)	O
;	O
}	O
public	O
void	O
set_filestate	function
(	O
ifile	pointer
,	O
filestate	pointer
)	O
IFILE	O
ifile	pointer
;	O
void	O
*	O
filestate	pointer
;	O
{	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_filestate	pointer
=	O
filestate	pointer
;	O
}	O
public	O
void	O
set_altpipe	function
(	O
ifile	pointer
,	O
p	pointer
)	O
IFILE	O
ifile	pointer
;	O
void	O
*	O
p	pointer
;	O
{	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_altpipe	pointer
=	O
p	pointer
;	O
}	O
public	O
void	O
*	O
get_altpipe	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_altpipe	pointer
)	O
;	O
}	O
public	O
void	O
set_altfilename	function
(	O
ifile	pointer
,	O
altfilename	pointer
)	O
IFILE	O
ifile	pointer
;	O
char	O
*	O
altfilename	pointer
;	O
{	O
struct	O
ifile	pointer
*	O
p	pointer
=	O
int_ifile	O
(	O
ifile	pointer
)	O
;	O
if	O
(	O
p	pointer
->	O
h_altfilename	pointer
!=	O
NULL	O
)	O
free	function
(	O
p	pointer
->	O
h_altfilename	pointer
)	O
;	O
p	pointer
->	O
h_altfilename	pointer
=	O
altfilename	pointer
;	O
}	O
public	O
char	O
*	O
get_altfilename	function
(	O
ifile	pointer
)	O
IFILE	O
ifile	pointer
;	O
{	O
return	O
(	O
int_ifile	O
(	O
ifile	pointer
)	O
->	O
h_altfilename	pointer
)	O
;	O
}	O
