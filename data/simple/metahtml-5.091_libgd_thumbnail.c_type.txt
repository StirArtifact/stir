static	O
void	O
usage	function
(	O
void	O
)	O
;	O
static	O
void	O
calc_aspect	function
(	O
int	O
x_in	int
,	O
int	O
y_in	int
,	O
int	O
dx_in	int
,	O
int	O
*	O
dy_in	pointer
)	O
;	O
static	O
void	O
cleanup	function
(	O
char	O
*	O
string	pointer
)	O
;	O
static	O
int	O
parse_hex_pair	function
(	O
char	O
*	O
pair_start	pointer
)	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
gdImagePtr	pointer
source	pointer
,	O
dest	pointer
;	O
int	O
width	int
=	O
100	int
,	O
height	int
=	O
100	int
;	O
int	O
constrain_width	int
=	O
0	int
;	O
int	O
constrain_height	int
=	O
0	int
;	O
int	O
do_trans	int
=	O
0	int
;	O
int	O
calc_aspect_only	int
=	O
0	int
;	O
char	O
*	O
file	pointer
=	O
(	O
char	O
*	O
)	O
NULL	O
;	O
char	O
*	O
webargs	pointer
=	O
getenv	function
(	O
"QUERY_STRING"	pointer
)	O
;	O
if	O
(	O
webargs	pointer
)	O
{	O
register	O
int	O
i	int
;	O
char	O
*	O
temp	pointer
;	O
webargs	pointer
=	O
strdup	function
(	O
webargs	pointer
)	O
;	O
cleanup	function
(	O
webargs	pointer
)	O
;	O
temp	pointer
=	O
strstr	function
(	O
webargs	pointer
,	O
"WIDTH="	pointer
)	O
;	O
if	O
(	O
width	int
)	O
{	O
constrain_width	int
=	O
1	int
;	O
width	int
=	O
atoi	function
(	O
temp	pointer
+	O
6	int
)	O
;	O
}	O
temp	pointer
=	O
strstr	function
(	O
webargs	pointer
,	O
"HEIGHT="	pointer
)	O
;	O
if	O
(	O
temp	pointer
)	O
{	O
constrain_height	int
=	O
1	int
;	O
height	int
=	O
atoi	function
(	O
temp	pointer
+	O
7	int
)	O
;	O
}	O
file	pointer
=	O
strstr	function
(	O
webargs	pointer
,	O
"FILE="	pointer
)	O
;	O
if	O
(	O
!	O
file	pointer
)	O
usage	function
(	O
)	O
;	O
file	pointer
=	O
strdup	function
(	O
file	pointer
+	O
5	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
(	O
(	O
file	pointer
[	O
i	int
]	O
!=	O
'\0'	O
)	O
&&	O
(	O
file	pointer
[	O
i	int
]	O
!=	O
'&'	O
)	O
)	O
;	O
i	int
++	O
)	O
;	O
file	pointer
[	O
i	int
]	O
=	O
'\0'	O
;	O
}	O
else	O
{	O
int	O
arg_index	int
=	O
1	int
;	O
while	O
(	O
arg_index	int
<	O
argc	int
)	O
{	O
char	O
*	O
arg	pointer
=	O
argv	array
[	O
arg_index	int
++	O
]	O
;	O
if	O
(	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"-w"	pointer
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"--width"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
constrain_width	int
=	O
1	int
;	O
width	int
=	O
atoi	function
(	O
argv	array
[	O
arg_index	int
++	O
]	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"-h"	pointer
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"--height"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
constrain_height	int
=	O
1	int
;	O
height	int
=	O
atoi	function
(	O
argv	array
[	O
arg_index	int
++	O
]	O
)	O
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"-t"	pointer
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"--transparent"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
do_trans	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"-a"	pointer
)	O
==	O
0	int
)	O
||	O
(	O
strcmp	function
(	O
arg	pointer
,	O
"--aspect-only"	pointer
)	O
==	O
0	int
)	O
)	O
{	O
calc_aspect_only	int
=	O
1	int
;	O
}	O
else	O
if	O
(	O
arg	pointer
[	O
0	int
]	O
!=	O
'-'	O
)	O
{	O
if	O
(	O
file	pointer
!=	O
(	O
char	O
*	O
)	O
NULL	O
)	O
usage	function
(	O
)	O
;	O
else	O
file	pointer
=	O
arg	pointer
;	O
}	O
else	O
usage	function
(	O
)	O
;	O
}	O
}	O
if	O
(	O
file	pointer
==	O
(	O
char	O
*	O
)	O
NULL	O
)	O
usage	function
(	O
)	O
;	O
{	O
FILE	struct
*	O
stream	pointer
=	O
fopen	function
(	O
file	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
!	O
stream	pointer
)	O
{	O
perror	function
(	O
file	pointer
)	O
;	O
exit	function
(	O
2	int
)	O
;	O
}	O
source	pointer
=	O
gdImageCreateFromGif	function
(	O
stream	pointer
)	O
;	O
fclose	function
(	O
stream	pointer
)	O
;	O
if	O
(	O
!	O
source	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Couldn't create GIF from %s!\n"	pointer
,	O
file	pointer
)	O
;	O
exit	function
(	O
2	int
)	O
;	O
}	O
}	O
if	O
(	O
!	O
constrain_width	int
&&	O
!	O
constrain_height	int
)	O
constrain_width	int
=	O
1	int
;	O
if	O
(	O
constrain_width	int
&&	O
!	O
constrain_height	int
)	O
{	O
calc_aspect	function
(	O
gdImageSX	O
(	O
source	pointer
)	O
,	O
gdImageSY	O
(	O
source	pointer
)	O
,	O
width	int
,	O
&	O
height	int
)	O
;	O
}	O
if	O
(	O
constrain_height	int
&&	O
!	O
constrain_width	int
)	O
{	O
calc_aspect	function
(	O
gdImageSY	O
(	O
source	pointer
)	O
,	O
gdImageSX	O
(	O
source	pointer
)	O
,	O
height	int
,	O
&	O
width	int
)	O
;	O
}	O
if	O
(	O
calc_aspect_only	int
)	O
{	O
fprintf	function
(	O
stdout	pointer
,	O
"width=%d height=%d\n"	pointer
,	O
width	int
,	O
height	int
)	O
;	O
}	O
else	O
{	O
int	O
trans	int
=	O
gdImageGetTransparent	O
(	O
source	pointer
)	O
;	O
dest	pointer
=	O
gdImageCreate	function
(	O
width	int
,	O
height	int
)	O
;	O
gdImageFilledRectangle	function
(	O
dest	pointer
,	O
0	int
,	O
0	int
,	O
width	int
,	O
height	int
,	O
trans	int
)	O
;	O
gdImageCopyResized	function
(	O
dest	pointer
,	O
source	pointer
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
width	int
,	O
height	int
,	O
gdImageSX	O
(	O
source	pointer
)	O
,	O
gdImageSY	O
(	O
source	pointer
)	O
)	O
;	O
if	O
(	O
webargs	pointer
)	O
fprintf	function
(	O
stdout	pointer
,	O
"Content-Type: image/gif\n\n"	pointer
)	O
;	O
gdImageGif	function
(	O
dest	pointer
,	O
stdout	pointer
)	O
;	O
if	O
(	O
do_trans	int
)	O
gdImageColorTransparent	function
(	O
dest	pointer
,	O
trans	int
)	O
;	O
gdImageDestroy	function
(	O
dest	pointer
)	O
;	O
}	O
gdImageDestroy	function
(	O
source	pointer
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
static	O
void	O
usage	function
(	O
void	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"Usage: thumbnail [--width W] [--height H] file\n"	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
static	O
void	O
calc_aspect	function
(	O
int	O
x_in	int
,	O
int	O
y_in	int
,	O
int	O
dx_in	int
,	O
int	O
*	O
dy_in	pointer
)	O
{	O
double	O
x	int
,	O
y	int
,	O
dx	double
,	O
dy	double
;	O
double	O
ratio	double
;	O
x	int
=	O
(	O
double	O
)	O
x_in	int
;	O
y	int
=	O
(	O
double	O
)	O
y_in	int
;	O
dx	double
=	O
(	O
double	O
)	O
dx_in	int
;	O
if	O
(	O
y	int
==	O
0	int
)	O
return	O
;	O
ratio	double
=	O
x	int
/	O
y	int
;	O
if	O
(	O
ratio	double
==	O
0.0	int
)	O
return	O
;	O
dy	double
=	O
dx	double
/	O
ratio	double
;	O
*	O
dy_in	pointer
=	O
(	O
int	O
)	O
dy	double
;	O
}	O
static	O
void	O
cleanup	function
(	O
char	O
*	O
string	pointer
)	O
{	O
register	O
int	O
i	int
,	O
j	int
,	O
len	int
;	O
char	O
*	O
dest	pointer
;	O
len	int
=	O
strlen	function
(	O
string	pointer
)	O
;	O
dest	pointer
=	O
(	O
char	O
*	O
)	O
alloca	function
(	O
1	int
+	O
len	int
)	O
;	O
for	O
(	O
i	int
=	O
0	int
,	O
j	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
{	O
switch	O
(	O
string	pointer
[	O
i	int
]	O
)	O
{	O
case	O
'%'	O
:	O
dest	pointer
[	O
j	int
++	O
]	O
=	O
parse_hex_pair	function
(	O
string	pointer
+	O
i	int
+	O
1	int
)	O
;	O
i	int
+=	O
2	int
;	O
break	O
;	O
case	O
'+'	O
:	O
dest	pointer
[	O
j	int
++	O
]	O
=	O
' '	O
;	O
break	O
;	O
default	O
:	O
dest	pointer
[	O
j	int
++	O
]	O
=	O
string	pointer
[	O
i	int
]	O
;	O
}	O
}	O
dest	pointer
[	O
j	int
]	O
=	O
'\0'	O
;	O
strcpy	function
(	O
string	pointer
,	O
dest	pointer
)	O
;	O
}	O
static	O
int	O
parse_hex_pair	function
(	O
char	O
*	O
pair_start	pointer
)	O
{	O
int	O
value	int
=	O
0	int
;	O
int	O
char1	int
,	O
char2	int
;	O
char1	int
=	O
char2	int
=	O
0	int
;	O
char1	int
=	O
*	O
pair_start	pointer
;	O
if	O
(	O
char1	int
)	O
char2	int
=	O
(	O
pair_start	pointer
[	O
1	int
]	O
)	O
;	O
if	O
(	O
isupper	function
(	O
char1	int
)	O
)	O
char1	int
=	O
tolower	function
(	O
char1	int
)	O
;	O
if	O
(	O
isupper	function
(	O
char2	int
)	O
)	O
char2	int
=	O
tolower	function
(	O
char2	int
)	O
;	O
if	O
(	O
isdigit	function
(	O
char1	int
)	O
)	O
value	int
=	O
char1	int
-	O
'0'	O
;	O
else	O
if	O
(	O
(	O
char1	int
<=	O
'f'	O
)	O
&&	O
(	O
char1	int
>=	O
'a'	O
)	O
)	O
value	int
=	O
10	int
+	O
(	O
char1	int
-	O
'a'	O
)	O
;	O
if	O
(	O
isdigit	function
(	O
char2	int
)	O
)	O
value	int
=	O
(	O
value	int
*	O
16	int
)	O
+	O
(	O
char2	int
-	O
'0'	O
)	O
;	O
else	O
if	O
(	O
(	O
char2	int
<=	O
'f'	O
)	O
&&	O
(	O
char2	int
>=	O
'a'	O
)	O
)	O
value	int
=	O
(	O
value	int
*	O
16	int
)	O
+	O
(	O
10	int
+	O
(	O
char2	int
-	O
'a'	O
)	O
)	O
;	O
return	O
(	O
value	int
)	O
;	O
}	O
