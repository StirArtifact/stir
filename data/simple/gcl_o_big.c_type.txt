void	O
*	O
(	O
*	O
gcl_gmp_allocfun	pointer
)	O
(	O
size_t	long
)	O
=	O
FFN	function
(	O
alloc_relblock	O
)	O
;	O
int	O
gmp_relocatable	int
=	O
1	int
;	O
DEFUN_NEW	function
(	O
"SET-GMP-ALLOCATE-RELOCATABLE"	pointer
,	O
object	O
,	O
fSset_gmp_allocate_relocatable	O
,	O
SI	O
,	O
1	int
,	O
1	int
,	O
NONE	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
OO	O
,	O
(	O
object	O
flag	O
)	O
,	O
"Set the allocation to be relocatble "	pointer
)	O
{	O
if	O
(	O
flag	O
==	O
Ct	O
)	O
{	O
gcl_gmp_allocfun	pointer
=	O
FFN	function
(	O
alloc_relblock	O
)	O
;	O
gmp_relocatable	int
=	O
1	int
;	O
}	O
else	O
{	O
gcl_gmp_allocfun	pointer
=	O
FFN	function
(	O
alloc_contblock	O
)	O
;	O
gmp_relocatable	int
=	O
0	int
;	O
}	O
RETURN1	function
(	O
flag	O
)	O
;	O
}	O
int	O
big_sign	function
(	O
object	O
x	int
)	O
{	O
return	O
BIG_SIGN	function
(	O
x	int
)	O
;	O
}	O
void	O
set_big_sign	function
(	O
object	O
x	int
,	O
int	O
sign	int
)	O
{	O
SET_BIG_SIGN	function
(	O
x	int
,	O
sign	int
)	O
;	O
}	O
void	O
zero_big	function
(	O
object	O
x	int
)	O
{	O
ZERO_BIG	function
(	O
x	int
)	O
;	O
}	O
double	O
digitsPerBit	array
[	O
37	int
]	O
=	O
{	O
0	int
,	O
0	int
,	O
1.0	int
,	O
0.6309297535714574	int
,	O
0.5	int
,	O
0.4306765580733931	int
,	O
0.3868528072345416	int
,	O
0.3562071871080222	int
,	O
0.3333333333333334	int
,	O
0.3154648767857287	int
,	O
0.3010299956639811	int
,	O
0.2890648263178878	int
,	O
0.2789429456511298	int
,	O
0.2702381544273197	int
,	O
0.2626495350371936	int
,	O
0.2559580248098155	int
,	O
0.25	int
,	O
0.244650542118226	int
,	O
0.2398124665681315	int
,	O
0.2354089133666382	int
,	O
0.2313782131597592	int
,	O
0.227670248696953	int
,	O
0.2242438242175754	int
,	O
0.2210647294575037	int
,	O
0.2181042919855316	int
,	O
0.2153382790366965	int
,	O
0.2127460535533632	int
,	O
0.2103099178571525	int
,	O
0.2080145976765095	int
,	O
0.2058468324604345	int
,	O
0.2037950470905062	int
,	O
0.2018490865820999	int
,	O
0.2	int
,	O
0.1982398631705605	int
,	O
0.1965616322328226	int
,	O
0.1949590218937863	int
,	O
0.1934264036172708	int
,	O
}	O
;	O
object	O
coerce_big_to_string	O
(	O
x	int
,	O
printbase	int
)	O
int	O
printbase	int
;	O
object	O
x	int
;	O
{	O
int	O
i	O
;	O
int	O
sign	int
=	O
big_sign	function
(	O
x	int
)	O
;	O
object	O
b	O
;	O
int	O
size	O
=	O
(	O
int	O
)	O
(	O
(	O
ceil	O
(	O
MP_SIZE_IN_BASE2	O
(	O
MP	O
(	O
x	int
)	O
)	O
*	O
digitsPerBit	array
[	O
printbase	int
]	O
)	O
)	O
+	O
.01	int
)	O
;	O
char	O
*	O
q	O
,	O
*	O
p	O
=	O
alloca	function
(	O
size	O
+	O
5	int
)	O
;	O
q	O
=	O
p	O
;	O
if	O
(	O
sign	int
<=	O
0	int
)	O
{	O
*	O
q	O
++	O
=	O
'-'	O
;	O
b	O
=	O
big_minus	O
(	O
x	int
)	O
;	O
}	O
else	O
{	O
b	O
=	O
copy_big	O
(	O
x	int
)	O
;	O
}	O
while	O
(	O
!	O
big_zerop	O
(	O
b	O
)	O
)	O
*	O
q	O
++	O
=	O
digit_weight	O
(	O
div_int_big	O
(	O
printbase	int
,	O
b	O
)	O
,	O
printbase	int
)	O
;	O
*	O
q	O
++	O
=	O
0	int
;	O
object	O
ans	O
=	O
alloc_simple_string	O
(	O
q	O
-	O
p	O
)	O
;	O
ans	O
->	O
ust	O
.	O
ust_self	O
=	O
alloc_relblock	O
(	O
ans	O
->	O
ust	O
.	O
ust_dim	O
)	O
;	O
bcopy	function
(	O
ans	O
->	O
ust	O
.	O
ust_self	O
,	O
p	O
,	O
ans	O
->	O
ust	O
.	O
ust_dim	O
)	O
;	O
ans	O
->	O
ust	O
.	O
ust_fillp	O
=	O
ans	O
->	O
ust	O
.	O
ust_dim	O
-	O
1	int
;	O
return	O
ans	O
;	O
}	O
