struct	O
Barcode_Item	struct
*	O
Barcode_Create	function
(	O
char	O
*	O
text	pointer
)	O
{	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
;	O
bc	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
bc	pointer
)	O
)	O
;	O
if	O
(	O
!	O
bc	pointer
)	O
return	O
NULL	O
;	O
memset	function
(	O
bc	pointer
,	O
0	int
,	O
sizeof	O
(	O
*	O
bc	pointer
)	O
)	O
;	O
bc	pointer
->	O
ascii	pointer
=	O
strdup	function
(	O
text	pointer
)	O
;	O
bc	pointer
->	O
margin	int
=	O
BARCODE_DEFAULT_MARGIN	int
;	O
return	O
bc	pointer
;	O
}	O
int	O
Barcode_Delete	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
{	O
if	O
(	O
bc	pointer
->	O
ascii	pointer
)	O
free	function
(	O
bc	pointer
->	O
ascii	pointer
)	O
;	O
if	O
(	O
bc	pointer
->	O
partial	pointer
)	O
free	function
(	O
bc	pointer
->	O
partial	pointer
)	O
;	O
if	O
(	O
bc	pointer
->	O
textinfo	pointer
)	O
free	function
(	O
bc	pointer
->	O
textinfo	pointer
)	O
;	O
if	O
(	O
bc	pointer
->	O
encoding	pointer
)	O
free	function
(	O
bc	pointer
->	O
encoding	pointer
)	O
;	O
free	function
(	O
bc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
extern	O
int	O
Barcode_ean_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_ean_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_upc_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_upc_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_isbn_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_isbn_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_39_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_39_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_39ext_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_39ext_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_128b_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_128b_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_128c_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_128c_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_128_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_128_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_128raw_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_128raw_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_i25_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_i25_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_cbr_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_cbr_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_msi_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_msi_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_pls_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_pls_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_93_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_93_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
extern	O
int	O
Barcode_11_verify	function
(	O
char	O
*	O
text	pointer
)	O
;	O
extern	O
int	O
Barcode_11_encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
struct	O
encoding	pointer
{	O
int	O
type	int
;	O
int	O
(	O
*	O
verify	pointer
)	O
(	O
char	O
*	O
text	pointer
)	O
;	O
int	O
(	O
*	O
encode	pointer
)	O
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
)	O
;	O
}	O
;	O
struct	O
encoding	pointer
encodings	array
[	O
]	O
=	O
{	O
{	O
BARCODE_EAN	int
,	O
Barcode_ean_verify	function
,	O
Barcode_ean_encode	function
}	O
,	O
{	O
BARCODE_UPC	int
,	O
Barcode_upc_verify	function
,	O
Barcode_upc_encode	function
}	O
,	O
{	O
BARCODE_ISBN	int
,	O
Barcode_isbn_verify	function
,	O
Barcode_isbn_encode	function
}	O
,	O
{	O
BARCODE_128B	int
,	O
Barcode_128b_verify	function
,	O
Barcode_128b_encode	function
}	O
,	O
{	O
BARCODE_128C	int
,	O
Barcode_128c_verify	function
,	O
Barcode_128c_encode	function
}	O
,	O
{	O
BARCODE_128RAW	int
,	O
Barcode_128raw_verify	function
,	O
Barcode_128raw_encode	function
}	O
,	O
{	O
BARCODE_39	int
,	O
Barcode_39_verify	function
,	O
Barcode_39_encode	function
}	O
,	O
{	O
BARCODE_39EXT	int
,	O
Barcode_39ext_verify	function
,	O
Barcode_39ext_encode	function
}	O
,	O
{	O
BARCODE_I25	int
,	O
Barcode_i25_verify	function
,	O
Barcode_i25_encode	function
}	O
,	O
{	O
BARCODE_128	int
,	O
Barcode_128_verify	function
,	O
Barcode_128_encode	function
}	O
,	O
{	O
BARCODE_CBR	int
,	O
Barcode_cbr_verify	function
,	O
Barcode_cbr_encode	function
}	O
,	O
{	O
BARCODE_PLS	int
,	O
Barcode_pls_verify	function
,	O
Barcode_pls_encode	function
}	O
,	O
{	O
BARCODE_MSI	int
,	O
Barcode_msi_verify	function
,	O
Barcode_msi_encode	function
}	O
,	O
{	O
BARCODE_93	int
,	O
Barcode_93_verify	function
,	O
Barcode_93_encode	function
}	O
,	O
{	O
BARCODE_11	int
,	O
Barcode_11_verify	function
,	O
Barcode_11_encode	function
}	O
,	O
{	O
0	int
,	O
NULL	O
,	O
NULL	O
}	O
}	O
;	O
int	O
Barcode_Encode	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
validbits	int
=	O
BARCODE_ENCODING_MASK	int
|	O
BARCODE_NO_CHECKSUM	int
;	O
struct	O
encoding	pointer
*	O
cptr	pointer
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_ENCODING_MASK	int
)	O
)	O
flags	int
|=	O
bc	pointer
->	O
flags	int
&	O
BARCODE_ENCODING_MASK	int
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_NO_CHECKSUM	int
)	O
)	O
flags	int
|=	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_CHECKSUM	int
;	O
flags	int
=	O
bc	pointer
->	O
flags	int
=	O
(	O
flags	int
&	O
validbits	int
)	O
|	O
(	O
bc	pointer
->	O
flags	int
&	O
~	O
validbits	int
)	O
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_ENCODING_MASK	int
)	O
)	O
{	O
for	O
(	O
cptr	pointer
=	O
encodings	array
;	O
cptr	pointer
->	O
verify	pointer
;	O
cptr	pointer
++	O
)	O
if	O
(	O
cptr	pointer
->	O
verify	pointer
(	O
(	O
char	O
*	O
)	O
bc	pointer
->	O
ascii	pointer
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
!	O
cptr	pointer
->	O
verify	pointer
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
flags	int
|=	O
cptr	pointer
->	O
type	int
;	O
bc	pointer
->	O
flags	int
|=	O
cptr	pointer
->	O
type	int
;	O
}	O
for	O
(	O
cptr	pointer
=	O
encodings	array
;	O
cptr	pointer
->	O
verify	pointer
;	O
cptr	pointer
++	O
)	O
if	O
(	O
cptr	pointer
->	O
type	int
==	O
(	O
flags	int
&	O
BARCODE_ENCODING_MASK	int
)	O
)	O
break	O
;	O
if	O
(	O
!	O
cptr	pointer
->	O
verify	pointer
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
cptr	pointer
->	O
verify	pointer
(	O
bc	pointer
->	O
ascii	pointer
)	O
!=	O
0	int
)	O
{	O
bc	pointer
->	O
error	int
=	O
EINVAL	int
;	O
return	O
-	O
1	int
;	O
}	O
return	O
cptr	pointer
->	O
encode	pointer
(	O
bc	pointer
)	O
;	O
}	O
extern	O
int	O
Barcode_ps_print	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
FILE	struct
*	O
f	pointer
)	O
;	O
extern	O
int	O
Barcode_pcl_print	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
FILE	struct
*	O
f	pointer
)	O
;	O
extern	O
int	O
Barcode_svg_print	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
FILE	struct
*	O
f	pointer
)	O
;	O
int	O
Barcode_Print	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
FILE	struct
*	O
f	pointer
,	O
int	O
flags	int
)	O
{	O
int	O
validbits	int
=	O
BARCODE_OUTPUT_MASK	int
|	O
BARCODE_NO_ASCII	int
|	O
BARCODE_OUT_NOHEADERS	int
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_OUTPUT_MASK	int
)	O
)	O
flags	int
|=	O
bc	pointer
->	O
flags	int
&	O
BARCODE_OUTPUT_MASK	int
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_NO_ASCII	int
)	O
)	O
flags	int
|=	O
bc	pointer
->	O
flags	int
&	O
BARCODE_NO_ASCII	int
;	O
if	O
(	O
!	O
(	O
flags	int
&	O
BARCODE_OUT_NOHEADERS	int
)	O
)	O
flags	int
|=	O
bc	pointer
->	O
flags	int
&	O
BARCODE_OUT_NOHEADERS	int
;	O
flags	int
=	O
bc	pointer
->	O
flags	int
=	O
(	O
flags	int
&	O
validbits	int
)	O
|	O
(	O
bc	pointer
->	O
flags	int
&	O
~	O
validbits	int
)	O
;	O
if	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_OUT_PCL	int
)	O
return	O
Barcode_pcl_print	function
(	O
bc	pointer
,	O
f	pointer
)	O
;	O
if	O
(	O
bc	pointer
->	O
flags	int
&	O
BARCODE_OUT_SVG	int
)	O
return	O
Barcode_svg_print	function
(	O
bc	pointer
,	O
f	pointer
)	O
;	O
return	O
Barcode_ps_print	function
(	O
bc	pointer
,	O
f	pointer
)	O
;	O
}	O
int	O
Barcode_Position	function
(	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
,	O
int	O
wid	int
,	O
int	O
hei	int
,	O
int	O
xoff	int
,	O
int	O
yoff	int
,	O
double	O
scalef	double
)	O
{	O
bc	pointer
->	O
width	int
=	O
wid	int
;	O
bc	pointer
->	O
height	int
=	O
hei	int
;	O
bc	pointer
->	O
xoff	int
=	O
xoff	int
;	O
bc	pointer
->	O
yoff	int
=	O
yoff	int
;	O
bc	pointer
->	O
scalef	double
=	O
scalef	double
;	O
return	O
0	int
;	O
}	O
int	O
Barcode_Encode_and_Print	function
(	O
char	O
*	O
text	pointer
,	O
FILE	struct
*	O
f	pointer
,	O
int	O
wid	int
,	O
int	O
hei	int
,	O
int	O
xoff	int
,	O
int	O
yoff	int
,	O
int	O
flags	int
)	O
{	O
struct	O
Barcode_Item	struct
*	O
bc	pointer
;	O
if	O
(	O
!	O
(	O
bc	pointer
=	O
Barcode_Create	function
(	O
text	pointer
)	O
)	O
)	O
{	O
errno	O
=	O
-	O
ENOMEM	int
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
Barcode_Position	function
(	O
bc	pointer
,	O
wid	int
,	O
hei	int
,	O
xoff	int
,	O
yoff	int
,	O
0.0	int
)	O
<	O
0	int
||	O
Barcode_Encode	function
(	O
bc	pointer
,	O
flags	int
)	O
<	O
0	int
||	O
Barcode_Print	function
(	O
bc	pointer
,	O
f	pointer
,	O
flags	int
)	O
<	O
0	int
)	O
{	O
errno	O
=	O
bc	pointer
->	O
error	int
;	O
Barcode_Delete	function
(	O
bc	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
Barcode_Delete	function
(	O
bc	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
Barcode_Version	function
(	O
char	O
*	O
vptr	pointer
)	O
{	O
const	O
char	O
*	O
it	pointer
;	O
int	O
ret	int
=	O
0	int
;	O
if	O
(	O
vptr	pointer
)	O
strcpy	function
(	O
vptr	pointer
,	O
PACKAGE_VERSION	pointer
)	O
;	O
for	O
(	O
it	pointer
=	O
PACKAGE_VERSION	pointer
;	O
it	pointer
;	O
it	pointer
++	O
)	O
{	O
int	O
d	int
;	O
repeat	O
:	O
switch	O
(	O
*	O
it	pointer
)	O
{	O
case	O
'0'	O
:	O
d	int
=	O
0	int
;	O
break	O
;	O
case	O
'1'	O
:	O
d	int
=	O
1	int
;	O
break	O
;	O
case	O
'2'	O
:	O
d	int
=	O
2	int
;	O
break	O
;	O
case	O
'3'	O
:	O
d	int
=	O
3	int
;	O
break	O
;	O
case	O
'4'	O
:	O
d	int
=	O
4	int
;	O
break	O
;	O
case	O
'5'	O
:	O
d	int
=	O
5	int
;	O
break	O
;	O
case	O
'6'	O
:	O
d	int
=	O
6	int
;	O
break	O
;	O
case	O
'7'	O
:	O
d	int
=	O
7	int
;	O
break	O
;	O
case	O
'8'	O
:	O
d	int
=	O
8	int
;	O
break	O
;	O
case	O
'9'	O
:	O
d	int
=	O
9	int
;	O
break	O
;	O
case	O
'.'	O
:	O
it	pointer
++	O
;	O
goto	O
repeat	O
;	O
}	O
ret	int
=	O
ret	int
*	O
10	int
+	O
d	int
;	O
}	O
return	O
ret	int
;	O
}	O
