static	O
int	O
prefix_length	function
(	O
char	O
*	O
s1	pointer
,	O
char	O
*	O
s2	pointer
)	O
{	O
register	O
char	O
*	O
start	pointer
;	O
for	O
(	O
start	pointer
=	O
s1	pointer
;	O
*	O
s1	pointer
==	O
*	O
s2	pointer
&&	O
*	O
s1	pointer
!=	O
'\0'	O
;	O
s1	pointer
++	O
,	O
s2	pointer
++	O
)	O
;	O
return	O
s1	pointer
-	O
start	pointer
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
char	O
*	O
path	pointer
;	O
char	O
*	O
oldpath	pointer
;	O
size_t	long
pathsize	long
,	O
oldpathsize	long
;	O
int	O
line_len	int
;	O
if	O
(	O
argv	pointer
[	O
0	int
]	O
)	O
set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
else	O
set_program_name	function
(	O
"bigram"	pointer
)	O
;	O
setlocale	function
(	O
LC_ALL	O
,	O
""	pointer
)	O
;	O
bindtextdomain	function
(	O
PACKAGE	pointer
,	O
LOCALEDIR	O
)	O
;	O
textdomain	function
(	O
PACKAGE	pointer
)	O
;	O
(	O
void	O
)	O
argc	int
;	O
if	O
(	O
atexit	function
(	O
close_stdout	function
)	O
)	O
{	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"The atexit library function failed"	pointer
)	O
)	O
;	O
}	O
pathsize	long
=	O
oldpathsize	long
=	O
1026	int
;	O
path	pointer
=	O
xmalloc	function
(	O
pathsize	long
)	O
;	O
oldpath	pointer
=	O
xmalloc	function
(	O
oldpathsize	long
)	O
;	O
oldpath	pointer
[	O
0	int
]	O
=	O
'\0'	O
;	O
while	O
(	O
(	O
line_len	int
=	O
getline	function
(	O
&	O
path	pointer
,	O
&	O
pathsize	long
,	O
stdin	pointer
)	O
)	O
>	O
0	int
)	O
{	O
register	O
int	O
count	int
;	O
register	O
int	O
j	int
;	O
path	pointer
[	O
line_len	int
-	O
1	int
]	O
=	O
'\0'	O
;	O
count	int
=	O
prefix_length	function
(	O
oldpath	pointer
,	O
path	pointer
)	O
;	O
for	O
(	O
j	int
=	O
count	int
;	O
path	pointer
[	O
j	int
]	O
!=	O
'\0'	O
&&	O
path	pointer
[	O
j	int
+	O
1	int
]	O
!=	O
'\0'	O
;	O
j	int
+=	O
2	int
)	O
{	O
putchar	function
(	O
path	pointer
[	O
j	int
]	O
)	O
;	O
putchar	function
(	O
path	pointer
[	O
j	int
+	O
1	int
]	O
)	O
;	O
putchar	function
(	O
'\n'	O
)	O
;	O
}	O
{	O
char	O
*	O
tmppath	pointer
=	O
oldpath	pointer
;	O
size_t	long
tmppathsize	long
=	O
oldpathsize	long
;	O
oldpath	pointer
=	O
path	pointer
;	O
oldpathsize	long
=	O
pathsize	long
;	O
path	pointer
=	O
tmppath	pointer
;	O
pathsize	long
=	O
tmppathsize	long
;	O
}	O
}	O
free	function
(	O
path	pointer
)	O
;	O
free	function
(	O
oldpath	pointer
)	O
;	O
return	O
0	int
;	O
}	O
