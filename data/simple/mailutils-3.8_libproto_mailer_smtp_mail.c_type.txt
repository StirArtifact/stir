int	O
mu_smtp_mail_basic	function
(	O
mu_smtp_t	pointer
smtp	pointer
,	O
const	O
char	O
*	O
email	pointer
,	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
int	O
status	int
;	O
if	O
(	O
!	O
smtp	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
MU_SMTP_FISSET	O
(	O
smtp	pointer
,	O
_MU_SMTP_ERR	int
)	O
)	O
return	O
MU_ERR_FAILURE	O
;	O
if	O
(	O
smtp	pointer
->	O
state	pointer
!=	O
MU_SMTP_MAIL	int
)	O
return	O
MU_ERR_SEQ	O
;	O
status	int
=	O
mu_smtp_write	function
(	O
smtp	pointer
,	O
"MAIL FROM:<%s>"	pointer
,	O
email	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
status	int
)	O
;	O
if	O
(	O
fmt	pointer
)	O
{	O
va_list	array
ap	array
;	O
status	int
=	O
mu_smtp_write	function
(	O
smtp	pointer
,	O
" "	pointer
)	O
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
status	int
=	O
mu_stream_vprintf	function
(	O
smtp	pointer
->	O
carrier	pointer
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
status	int
)	O
;	O
}	O
status	int
=	O
mu_smtp_write	function
(	O
smtp	pointer
,	O
"\r\n"	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
status	int
)	O
;	O
status	int
=	O
mu_smtp_response	function
(	O
smtp	pointer
)	O
;	O
MU_SMTP_CHECK_ERROR	O
(	O
smtp	pointer
,	O
status	int
)	O
;	O
if	O
(	O
smtp	pointer
->	O
replcode	array
[	O
0	int
]	O
!=	O
'2'	O
)	O
return	O
MU_ERR_REPLY	O
;	O
smtp	pointer
->	O
state	pointer
=	O
MU_SMTP_RCPT	int
;	O
return	O
0	int
;	O
}	O
