int	O
_API_fbox	O
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
double	O
x0	double
,	O
double	O
y0	function
,	O
double	O
x1	double
,	O
double	O
y1	function
)	O
{	O
double	O
xnew	double
,	O
ynew	double
;	O
plPoint	struct
p0	struct
,	O
p1	struct
;	O
bool	enum
clockwise	enum
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
data	pointer
->	O
open	enum
)	O
{	O
_plotter	pointer
->	O
error	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
"fbox: invalid operation"	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
)	O
_API_endpath	O
(	O
S___	O
(	O
_plotter	pointer
)	O
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
=	O
_new_plPath	function
(	O
)	O
;	O
p0	struct
.	O
x	double
=	O
x0	double
;	O
p0	struct
.	O
y	double
=	O
y0	function
;	O
p1	struct
.	O
x	double
=	O
x1	double
;	O
p1	struct
.	O
y	double
=	O
y1	function
;	O
clockwise	enum
=	O
_plotter	pointer
->	O
drawstate	pointer
->	O
orientation	int
<	O
0	int
?	O
true	int
:	O
false	int
;	O
if	O
(	O
!	O
_plotter	pointer
->	O
drawstate	pointer
->	O
points_are_connected	enum
)	O
_add_box_as_lines	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p0	struct
,	O
p1	struct
,	O
clockwise	enum
)	O
;	O
else	O
{	O
if	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pen_type	int
==	O
0	int
||	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
dash_array_in_effect	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
line_type	int
==	O
PL_L_SOLID	int
)	O
)	O
&&	O
(	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_box_scaling	enum
==	O
AS_ANY	int
)	O
||	O
(	O
_plotter	pointer
->	O
data	pointer
->	O
allowed_box_scaling	enum
==	O
AS_AXES_PRESERVED	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
transform	struct
.	O
axes_preserved	enum
)	O
)	O
)	O
_add_box	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p0	struct
,	O
p1	struct
,	O
clockwise	enum
)	O
;	O
else	O
_add_box_as_lines	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
,	O
p0	struct
,	O
p1	struct
,	O
clockwise	enum
)	O
;	O
if	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
path	pointer
->	O
type	enum
==	O
PATH_SEGMENT_LIST	int
)	O
_plotter	pointer
->	O
maybe_prepaint_segments	pointer
(	O
R___	O
(	O
_plotter	pointer
)	O
0	int
)	O
;	O
}	O
xnew	double
=	O
0.5	int
*	O
(	O
x0	double
+	O
x1	double
)	O
;	O
ynew	double
=	O
0.5	int
*	O
(	O
y0	function
+	O
y1	function
)	O
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
x	double
=	O
xnew	double
;	O
_plotter	pointer
->	O
drawstate	pointer
->	O
pos	struct
.	O
y	double
=	O
ynew	double
;	O
return	O
0	int
;	O
}	O
