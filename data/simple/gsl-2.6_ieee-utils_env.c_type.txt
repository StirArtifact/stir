void	O
gsl_ieee_env_setup	function
(	O
void	O
)	O
{	O
const	O
char	O
*	O
p	pointer
=	O
getenv	function
(	O
"GSL_IEEE_MODE"	pointer
)	O
;	O
int	O
precision	pointer
=	O
0	int
,	O
rounding	pointer
=	O
0	int
,	O
exception_mask	pointer
=	O
0	int
;	O
int	O
comma	int
=	O
0	int
;	O
if	O
(	O
p	pointer
==	O
0	int
)	O
return	O
;	O
if	O
(	O
*	O
p	pointer
==	O
'\0'	O
)	O
return	O
;	O
gsl_ieee_read_mode_string	function
(	O
p	pointer
,	O
&	O
precision	pointer
,	O
&	O
rounding	pointer
,	O
&	O
exception_mask	pointer
)	O
;	O
gsl_ieee_set_mode	function
(	O
precision	pointer
,	O
rounding	pointer
,	O
exception_mask	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"GSL_IEEE_MODE=\""	pointer
)	O
;	O
switch	O
(	O
precision	pointer
)	O
{	O
case	O
GSL_IEEE_SINGLE_PRECISION	int
:	O
PRINTC	O
(	O
"single-precision"	pointer
)	O
;	O
break	O
;	O
case	O
GSL_IEEE_DOUBLE_PRECISION	int
:	O
PRINTC	O
(	O
"double-precision"	pointer
)	O
;	O
break	O
;	O
case	O
GSL_IEEE_EXTENDED_PRECISION	int
:	O
PRINTC	O
(	O
"extended-precision"	pointer
)	O
;	O
break	O
;	O
}	O
switch	O
(	O
rounding	pointer
)	O
{	O
case	O
GSL_IEEE_ROUND_TO_NEAREST	int
:	O
PRINTC	O
(	O
"round-to-nearest"	pointer
)	O
;	O
break	O
;	O
case	O
GSL_IEEE_ROUND_DOWN	int
:	O
PRINTC	O
(	O
"round-down"	pointer
)	O
;	O
break	O
;	O
case	O
GSL_IEEE_ROUND_UP	int
:	O
PRINTC	O
(	O
"round-up"	pointer
)	O
;	O
break	O
;	O
case	O
GSL_IEEE_ROUND_TO_ZERO	int
:	O
PRINTC	O
(	O
"round-to-zero"	pointer
)	O
;	O
break	O
;	O
}	O
if	O
(	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_ALL	int
)	O
==	O
GSL_IEEE_MASK_ALL	int
)	O
{	O
PRINTC	O
(	O
"mask-all"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_ALL	int
)	O
==	O
0	int
)	O
{	O
PRINTC	O
(	O
"trap-common"	pointer
)	O
;	O
}	O
else	O
{	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_INVALID	int
)	O
PRINTC	O
(	O
"mask-invalid"	pointer
)	O
;	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_DENORMALIZED	int
)	O
PRINTC	O
(	O
"mask-denormalized"	pointer
)	O
;	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_DIVISION_BY_ZERO	int
)	O
PRINTC	O
(	O
"mask-division-by-zero"	pointer
)	O
;	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_OVERFLOW	int
)	O
PRINTC	O
(	O
"mask-overflow"	pointer
)	O
;	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_MASK_UNDERFLOW	int
)	O
PRINTC	O
(	O
"mask-underflow"	pointer
)	O
;	O
}	O
if	O
(	O
exception_mask	pointer
&	O
GSL_IEEE_TRAP_INEXACT	int
)	O
PRINTC	O
(	O
"trap-inexact"	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"\"\n"	pointer
)	O
;	O
}	O
