static	O
int	O
encode	array
[	O
]	O
=	O
{	O
'A'	O
,	O
'B'	O
,	O
'C'	O
,	O
'D'	O
,	O
'E'	O
,	O
'F'	O
,	O
'G'	O
,	O
'H'	O
,	O
'I'	O
,	O
'J'	O
,	O
'K'	O
,	O
'L'	O
,	O
'M'	O
,	O
'N'	O
,	O
'O'	O
,	O
'P'	O
,	O
'Q'	O
,	O
'R'	O
,	O
'S'	O
,	O
'T'	O
,	O
'U'	O
,	O
'V'	O
,	O
'W'	O
,	O
'X'	O
,	O
'Y'	O
,	O
'Z'	O
,	O
'a'	O
,	O
'b'	O
,	O
'c'	O
,	O
'd'	O
,	O
'e'	O
,	O
'f'	O
,	O
'g'	O
,	O
'h'	O
,	O
'i'	O
,	O
'j'	O
,	O
'k'	O
,	O
'l'	O
,	O
'm'	O
,	O
'n'	O
,	O
'o'	O
,	O
'p'	O
,	O
'q'	O
,	O
'r'	O
,	O
's'	O
,	O
't'	O
,	O
'u'	O
,	O
'v'	O
,	O
'w'	O
,	O
'x'	O
,	O
'y'	O
,	O
'z'	O
,	O
'0'	O
,	O
'1'	O
,	O
'2'	O
,	O
'3'	O
,	O
'4'	O
,	O
'5'	O
,	O
'6'	O
,	O
'7'	O
,	O
'8'	O
,	O
'9'	O
,	O
'+'	O
,	O
'/'	O
}	O
;	O
ssize_t	long
encode_base64	function
(	O
const	O
void	O
*	O
data	pointer
,	O
size_t	long
length	long
,	O
char	O
*	O
*	O
code	pointer
)	O
{	O
const	O
unsigned	O
char	O
*	O
s	pointer
,	O
*	O
end	pointer
;	O
unsigned	O
char	O
*	O
buf	pointer
;	O
unsigned	O
int	O
x	int
;	O
ssize_t	long
n	long
;	O
int	O
i	int
,	O
j	int
;	O
if	O
(	O
length	long
==	O
0	int
)	O
return	O
0	int
;	O
end	pointer
=	O
(	O
char	O
*	O
)	O
data	pointer
+	O
length	long
-	O
3	int
;	O
buf	pointer
=	O
malloc	function
(	O
4	int
*	O
(	O
(	O
length	long
+	O
2	int
)	O
/	O
3	int
)	O
+	O
1	int
)	O
;	O
if	O
(	O
buf	pointer
==	O
NULL	O
)	O
return	O
-	O
1	int
;	O
n	long
=	O
0	int
;	O
for	O
(	O
s	pointer
=	O
data	pointer
;	O
s	pointer
<	O
end	pointer
;	O
)	O
{	O
x	int
=	O
*	O
s	pointer
++	O
<<	O
24	int
;	O
x	int
|=	O
*	O
s	pointer
++	O
<<	O
16	int
;	O
x	int
|=	O
*	O
s	pointer
++	O
<<	O
8	int
;	O
*	O
buf	pointer
++	O
=	O
encode	array
[	O
x	int
>>	O
26	int
]	O
;	O
x	int
<<=	O
6	int
;	O
*	O
buf	pointer
++	O
=	O
encode	array
[	O
x	int
>>	O
26	int
]	O
;	O
x	int
<<=	O
6	int
;	O
*	O
buf	pointer
++	O
=	O
encode	array
[	O
x	int
>>	O
26	int
]	O
;	O
x	int
<<=	O
6	int
;	O
*	O
buf	pointer
++	O
=	O
encode	array
[	O
x	int
>>	O
26	int
]	O
;	O
n	long
+=	O
4	int
;	O
}	O
end	pointer
+=	O
3	int
;	O
x	int
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
s	pointer
<	O
end	pointer
;	O
i	int
++	O
)	O
x	int
|=	O
*	O
s	pointer
++	O
<<	O
(	O
24	int
-	O
8	int
*	O
i	int
)	O
;	O
for	O
(	O
j	int
=	O
0	int
;	O
j	int
<	O
4	int
;	O
j	int
++	O
)	O
{	O
if	O
(	O
8	int
*	O
i	int
>=	O
6	int
*	O
j	int
)	O
{	O
*	O
buf	pointer
++	O
=	O
encode	array
[	O
x	int
>>	O
26	int
]	O
;	O
x	int
<<=	O
6	int
;	O
n	long
++	O
;	O
}	O
else	O
{	O
*	O
buf	pointer
++	O
=	O
'='	O
;	O
n	long
++	O
;	O
}	O
}	O
*	O
buf	pointer
=	O
0	int
;	O
*	O
code	pointer
=	O
buf	pointer
-	O
n	long
;	O
return	O
n	long
;	O
}	O
