static	O
regex_t	struct
*	O
re_prefix	pointer
;	O
int	O
mu_unre_set_regex	function
(	O
const	O
char	O
*	O
str	pointer
,	O
int	O
caseflag	int
,	O
char	O
*	O
*	O
errp	pointer
)	O
{	O
int	O
rc	int
;	O
int	O
flags	int
=	O
REG_EXTENDED	int
;	O
if	O
(	O
errp	pointer
)	O
*	O
errp	pointer
=	O
NULL	O
;	O
if	O
(	O
!	O
str	pointer
)	O
str	pointer
=	O
"^re: *"	pointer
;	O
if	O
(	O
re_prefix	pointer
)	O
regfree	function
(	O
re_prefix	pointer
)	O
;	O
else	O
{	O
re_prefix	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
*	O
re_prefix	pointer
)	O
)	O
;	O
if	O
(	O
!	O
re_prefix	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
if	O
(	O
!	O
caseflag	int
)	O
flags	int
|=	O
REG_ICASE	O
;	O
rc	int
=	O
regcomp	function
(	O
re_prefix	pointer
,	O
str	pointer
,	O
flags	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
if	O
(	O
errp	pointer
)	O
{	O
size_t	long
s	pointer
=	O
regerror	function
(	O
rc	int
,	O
re_prefix	pointer
,	O
NULL	O
,	O
0	int
)	O
;	O
s	pointer
++	O
;	O
*	O
errp	pointer
=	O
malloc	function
(	O
s	pointer
)	O
;	O
if	O
(	O
*	O
errp	pointer
)	O
regerror	function
(	O
rc	int
,	O
re_prefix	pointer
,	O
*	O
errp	pointer
,	O
s	pointer
)	O
;	O
}	O
regfree	function
(	O
re_prefix	pointer
)	O
;	O
free	function
(	O
re_prefix	pointer
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
mu_unre_subject	function
(	O
const	O
char	O
*	O
subject	pointer
,	O
const	O
char	O
*	O
*	O
new_subject	pointer
)	O
{	O
int	O
rc	int
;	O
regmatch_t	struct
rm	struct
;	O
if	O
(	O
!	O
subject	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
re_prefix	pointer
)	O
{	O
rc	int
=	O
mu_unre_set_regex	function
(	O
NULL	O
,	O
0	int
,	O
NULL	O
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
}	O
rc	int
=	O
regexec	function
(	O
re_prefix	pointer
,	O
subject	pointer
,	O
1	int
,	O
&	O
rm	struct
,	O
0	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
&&	O
rm	struct
.	O
rm_eo	int
!=	O
-	O
1	int
&&	O
new_subject	pointer
)	O
*	O
new_subject	pointer
=	O
subject	pointer
+	O
rm	struct
.	O
rm_eo	int
;	O
return	O
rc	int
;	O
}	O
