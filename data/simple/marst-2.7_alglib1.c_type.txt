extern	O
struct	O
desc	struct
abs_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
iabs_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
sign_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
entier_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
sqrt_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
sin_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
cos_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
arctan_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
ln_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
exp_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
stop_0	function
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	struct
fault_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
inchar_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
outchar_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
length_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
outstring_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
outterminator_0	function
(	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
ininteger_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
outinteger_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
inreal_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
outreal_0	function
(	O
struct	O
arg	struct
,	O
struct	O
arg	struct
)	O
;	O
extern	O
struct	O
desc	struct
maxreal_0	function
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	struct
minreal_0	function
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	struct
maxint_0	function
(	O
void	O
)	O
;	O
extern	O
struct	O
desc	struct
epsilon_0	function
(	O
void	O
)	O
;	O
struct	O
dsa_abs_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_1	double
;	O
}	O
;	O
struct	O
dsa_iabs_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
E_3	int
;	O
}	O
;	O
struct	O
dsa_sign_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_5	double
;	O
}	O
;	O
struct	O
dsa_entier_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
mem	struct
*	O
old_top_2	pointer
;	O
struct	O
mem	struct
*	O
new_top_2	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_7	double
;	O
int	O
j_9	int
;	O
}	O
;	O
struct	O
dsa_sqrt_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_10	double
;	O
}	O
;	O
struct	O
dsa_sin_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_12	double
;	O
}	O
;	O
struct	O
dsa_cos_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_14	double
;	O
}	O
;	O
struct	O
dsa_arctan_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_16	double
;	O
}	O
;	O
struct	O
dsa_ln_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_18	double
;	O
}	O
;	O
struct	O
dsa_exp_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
double	O
E_20	double
;	O
}	O
;	O
struct	O
dsa_stop_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
}	O
;	O
struct	O
dsa_fault_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
char	O
*	O
str_24	pointer
;	O
double	O
r_24	double
;	O
}	O
;	O
struct	O
dsa_inchar_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
mem	struct
*	O
old_top_2	pointer
;	O
struct	O
mem	struct
*	O
new_top_2	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_26	int
;	O
char	O
*	O
str_26	pointer
;	O
struct	O
arg	struct
int_26	struct
;	O
int	O
val_28	int
;	O
}	O
;	O
struct	O
dsa_outchar_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_29	int
;	O
char	O
*	O
str_29	pointer
;	O
int	O
int_29	int
;	O
}	O
;	O
struct	O
dsa_length_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
char	O
*	O
str_31	pointer
;	O
}	O
;	O
struct	O
dsa_outstring_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_33	int
;	O
char	O
*	O
str_33	pointer
;	O
}	O
;	O
struct	O
dsa_outterminator_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_35	int
;	O
}	O
;	O
struct	O
dsa_ininteger_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
mem	struct
*	O
old_top_2	pointer
;	O
struct	O
mem	struct
*	O
new_top_2	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_37	int
;	O
struct	O
arg	struct
int_37	struct
;	O
int	O
val_39	int
;	O
}	O
;	O
struct	O
dsa_outinteger_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_40	int
;	O
int	O
int_40	int
;	O
}	O
;	O
struct	O
dsa_inreal_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
mem	struct
*	O
old_top_2	pointer
;	O
struct	O
mem	struct
*	O
new_top_2	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_42	int
;	O
struct	O
arg	struct
re_42	struct
;	O
double	O
val_44	double
;	O
}	O
;	O
struct	O
dsa_outreal_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
int	O
channel_45	int
;	O
double	O
re_45	double
;	O
}	O
;	O
struct	O
dsa_maxreal_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
}	O
;	O
struct	O
dsa_minreal_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
}	O
;	O
struct	O
dsa_maxint_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
}	O
;	O
struct	O
dsa_epsilon_0	struct
{	O
char	O
*	O
proc	pointer
;	O
char	O
*	O
file	pointer
;	O
int	O
line	int
;	O
struct	O
dsa	struct
*	O
parent	pointer
;	O
struct	O
dsa	struct
*	O
vector	array
[	O
0	int
+	O
1	int
]	O
;	O
struct	O
mem	struct
*	O
old_top_0	pointer
;	O
struct	O
mem	struct
*	O
new_top_0	pointer
;	O
struct	O
mem	struct
*	O
old_top_1	pointer
;	O
struct	O
mem	struct
*	O
new_top_1	pointer
;	O
struct	O
desc	struct
retval	struct
;	O
}	O
;	O
struct	O
desc	struct
abs_0	function
(	O
struct	O
arg	struct
E_1	double
)	O
{	O
struct	O
dsa_abs_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_abs_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"abs"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
26	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
27	int
;	O
my_dsa	struct
.	O
E_1	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_1	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_1	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
28	int
;	O
dsa_0	pointer
->	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
(	O
(	O
notless	O
(	O
dsa_0	pointer
->	O
E_1	double
,	O
.0	int
)	O
)	O
?	O
(	O
dsa_0	pointer
->	O
E_1	double
)	O
:	O
(	O
-	O
dsa_0	pointer
->	O
E_1	double
)	O
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
iabs_0	function
(	O
struct	O
arg	struct
E_3	int
)	O
{	O
struct	O
dsa_iabs_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_iabs_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"iabs"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
30	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
31	int
;	O
my_dsa	struct
.	O
E_3	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
E_3	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_3	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
32	int
;	O
dsa_0	pointer
->	O
retval	struct
.	O
u	union
.	O
int_val	int
=	O
(	O
(	O
notless	O
(	O
dsa_0	pointer
->	O
E_3	int
,	O
0	int
)	O
)	O
?	O
(	O
dsa_0	pointer
->	O
E_3	int
)	O
:	O
(	O
-	O
dsa_0	pointer
->	O
E_3	int
)	O
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'i'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
sign_0	function
(	O
struct	O
arg	struct
E_5	double
)	O
{	O
struct	O
dsa_sign_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_sign_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"sign"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
34	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
35	int
;	O
my_dsa	struct
.	O
E_5	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_5	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_5	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
36	int
;	O
dsa_0	pointer
->	O
retval	struct
.	O
u	union
.	O
int_val	int
=	O
(	O
(	O
greater	O
(	O
dsa_0	pointer
->	O
E_5	double
,	O
.0	int
)	O
)	O
?	O
(	O
1	int
)	O
:	O
(	O
(	O
(	O
less	O
(	O
dsa_0	pointer
->	O
E_5	double
,	O
.0	int
)	O
)	O
?	O
(	O
-	O
1	int
)	O
:	O
(	O
0	int
)	O
)	O
)	O
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'i'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
entier_0	function
(	O
struct	O
arg	struct
E_7	double
)	O
{	O
struct	O
dsa_entier_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_entier_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"entier"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
39	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
40	int
;	O
my_dsa	struct
.	O
E_7	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_7	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_7	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
43	int
;	O
dsa_0	pointer
->	O
old_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
45	int
;	O
dsa_0	pointer
->	O
j_9	int
=	O
real2int	function
(	O
dsa_0	pointer
->	O
E_7	double
)	O
;	O
dsa_0	pointer
->	O
line	int
=	O
46	int
;	O
dsa_0	pointer
->	O
retval	struct
.	O
u	union
.	O
int_val	int
=	O
(	O
(	O
greater	O
(	O
int2real	function
(	O
dsa_0	pointer
->	O
j_9	int
)	O
,	O
dsa_0	pointer
->	O
E_7	double
)	O
)	O
?	O
(	O
dsa_0	pointer
->	O
j_9	int
-	O
1	int
)	O
:	O
(	O
dsa_0	pointer
->	O
j_9	int
)	O
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_2	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'i'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
static	O
struct	O
desc	struct
_thunk_1	function
(	O
void	O
)	O
{	O
struct	O
desc	struct
res	struct
;	O
register	O
struct	O
dsa_sqrt_0	struct
*	O
dsa_0	pointer
=	O
(	O
void	O
*	O
)	O
global_dsa	pointer
->	O
vector	array
[	O
0	int
]	O
;	O
dsa_0	pointer
->	O
line	int
=	O
54	int
;	O
res	struct
.	O
lval	int
=	O
1	int
;	O
res	struct
.	O
type	int
=	O
'r'	O
;	O
res	struct
.	O
u	union
.	O
real_ptr	pointer
=	O
&	O
(	O
dsa_0	pointer
->	O
E_10	double
)	O
;	O
return	O
res	struct
;	O
}	O
struct	O
desc	struct
sqrt_0	function
(	O
struct	O
arg	struct
E_10	double
)	O
{	O
struct	O
dsa_sqrt_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_sqrt_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"sqrt"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
51	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
52	int
;	O
my_dsa	struct
.	O
E_10	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_10	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_10	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
53	int
;	O
if	O
(	O
!	O
(	O
less	O
(	O
dsa_0	pointer
->	O
E_10	double
,	O
.0	int
)	O
)	O
)	O
goto	O
_gamma_1	O
;	O
dsa_0	pointer
->	O
line	int
=	O
54	int
;	O
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
fault_0	function
(	O
make_arg	function
(	O
"negative sqrt"	pointer
,	O
NULL	O
)	O
,	O
make_arg	function
(	O
(	O
void	O
*	O
)	O
_thunk_1	function
,	O
dsa_0	pointer
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_1	O
;	O
_gamma_1	O
:	O
dsa_0	pointer
->	O
line	int
=	O
56	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
sqrt	function
(	O
my_dsa	struct
.	O
E_10	double
)	O
;	O
_omega_1	O
:	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
sin_0	function
(	O
struct	O
arg	struct
E_12	double
)	O
{	O
struct	O
dsa_sin_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_sin_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"sin"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
58	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
59	int
;	O
my_dsa	struct
.	O
E_12	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_12	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_12	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
61	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
sin	function
(	O
my_dsa	struct
.	O
E_12	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
cos_0	function
(	O
struct	O
arg	struct
E_14	double
)	O
{	O
struct	O
dsa_cos_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_cos_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"cos"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
63	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
64	int
;	O
my_dsa	struct
.	O
E_14	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_14	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_14	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
66	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
cos	function
(	O
my_dsa	struct
.	O
E_14	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
arctan_0	function
(	O
struct	O
arg	struct
E_16	double
)	O
{	O
struct	O
dsa_arctan_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_arctan_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"arctan"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
68	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
69	int
;	O
my_dsa	struct
.	O
E_16	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_16	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_16	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
72	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
atan	function
(	O
my_dsa	struct
.	O
E_16	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
static	O
struct	O
desc	struct
_thunk_2	function
(	O
void	O
)	O
{	O
struct	O
desc	struct
res	struct
;	O
register	O
struct	O
dsa_ln_0	struct
*	O
dsa_0	pointer
=	O
(	O
void	O
*	O
)	O
global_dsa	pointer
->	O
vector	array
[	O
0	int
]	O
;	O
dsa_0	pointer
->	O
line	int
=	O
78	int
;	O
res	struct
.	O
lval	int
=	O
1	int
;	O
res	struct
.	O
type	int
=	O
'r'	O
;	O
res	struct
.	O
u	union
.	O
real_ptr	pointer
=	O
&	O
(	O
dsa_0	pointer
->	O
E_18	double
)	O
;	O
return	O
res	struct
;	O
}	O
struct	O
desc	struct
ln_0	function
(	O
struct	O
arg	struct
E_18	double
)	O
{	O
struct	O
dsa_ln_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_ln_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"ln"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
74	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
75	int
;	O
my_dsa	struct
.	O
E_18	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_18	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_18	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
77	int
;	O
if	O
(	O
!	O
(	O
notgreater	O
(	O
dsa_0	pointer
->	O
E_18	double
,	O
.0	int
)	O
)	O
)	O
goto	O
_gamma_2	O
;	O
dsa_0	pointer
->	O
line	int
=	O
78	int
;	O
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
fault_0	function
(	O
make_arg	function
(	O
"ln not positive"	pointer
,	O
NULL	O
)	O
,	O
make_arg	function
(	O
(	O
void	O
*	O
)	O
_thunk_2	function
,	O
dsa_0	pointer
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_2	O
;	O
_gamma_2	O
:	O
dsa_0	pointer
->	O
line	int
=	O
80	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
log	function
(	O
my_dsa	struct
.	O
E_18	double
)	O
;	O
_omega_2	O
:	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
static	O
struct	O
desc	struct
_thunk_3	function
(	O
void	O
)	O
{	O
struct	O
desc	struct
res	struct
;	O
register	O
struct	O
dsa_exp_0	struct
*	O
dsa_0	pointer
=	O
(	O
void	O
*	O
)	O
global_dsa	pointer
->	O
vector	array
[	O
0	int
]	O
;	O
dsa_0	pointer
->	O
line	int
=	O
86	int
;	O
res	struct
.	O
lval	int
=	O
1	int
;	O
res	struct
.	O
type	int
=	O
'r'	O
;	O
res	struct
.	O
u	union
.	O
real_ptr	pointer
=	O
&	O
(	O
dsa_0	pointer
->	O
E_20	double
)	O
;	O
return	O
res	struct
;	O
}	O
struct	O
desc	struct
exp_0	function
(	O
struct	O
arg	struct
E_20	double
)	O
{	O
struct	O
dsa_exp_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_exp_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"exp"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
82	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
83	int
;	O
my_dsa	struct
.	O
E_20	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
E_20	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
E_20	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
85	int
;	O
if	O
(	O
!	O
(	O
greater	O
(	O
dsa_0	pointer
->	O
E_20	double
,	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
ln_0	function
(	O
make_arg	function
(	O
(	O
void	O
*	O
)	O
maxreal_0	function
,	O
dsa_0	pointer
)	O
)	O
)	O
)	O
)	O
)	O
)	O
goto	O
_gamma_3	O
;	O
dsa_0	pointer
->	O
line	int
=	O
86	int
;	O
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
fault_0	function
(	O
make_arg	function
(	O
"overflow on exp"	pointer
,	O
NULL	O
)	O
,	O
make_arg	function
(	O
(	O
void	O
*	O
)	O
_thunk_3	function
,	O
dsa_0	pointer
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_3	O
;	O
_gamma_3	O
:	O
dsa_0	pointer
->	O
line	int
=	O
88	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
exp	function
(	O
my_dsa	struct
.	O
E_20	double
)	O
;	O
_omega_3	O
:	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
stop_0	function
(	O
void	O
)	O
{	O
struct	O
dsa_stop_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_stop_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"stop"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
92	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
93	int
;	O
exit	function
(	O
EXIT_SUCCESS	int
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
fault_0	function
(	O
struct	O
arg	struct
str_24	pointer
,	O
struct	O
arg	struct
r_24	double
)	O
{	O
struct	O
dsa_fault_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_fault_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"fault"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
95	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
str_24	pointer
=	O
str_24	pointer
.	O
arg1	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
96	int
;	O
my_dsa	struct
.	O
r_24	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
r_24	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
r_24	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
97	int
;	O
fault	function
(	O
"%s "	pointer
REAL_FMT	pointer
,	O
my_dsa	struct
.	O
str_24	pointer
,	O
my_dsa	struct
.	O
r_24	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
inchar_0	function
(	O
struct	O
arg	struct
channel_26	int
,	O
struct	O
arg	struct
str_26	pointer
,	O
struct	O
arg	struct
int_26	struct
)	O
{	O
struct	O
dsa_inchar_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_inchar_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"inchar"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
101	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
103	int
;	O
my_dsa	struct
.	O
channel_26	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_26	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_26	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
str_26	pointer
=	O
str_26	pointer
.	O
arg1	pointer
;	O
my_dsa	struct
.	O
int_26	struct
=	O
int_26	struct
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
107	int
;	O
dsa_0	pointer
->	O
old_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
109	int
;	O
{	O
char	O
*	O
ptr	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
110	int
;	O
ptr	pointer
=	O
strchr	function
(	O
my_dsa	struct
.	O
str_26	pointer
,	O
inchar	function
(	O
my_dsa	struct
.	O
channel_26	int
)	O
)	O
;	O
dsa_0	pointer
->	O
line	int
=	O
111	int
;	O
my_dsa	struct
.	O
val_28	int
=	O
(	O
ptr	pointer
==	O
NULL	O
?	O
0	int
:	O
(	O
ptr	pointer
-	O
my_dsa	struct
.	O
str_26	pointer
)	O
+	O
1	int
)	O
;	O
dsa_0	pointer
->	O
line	int
=	O
113	int
;	O
}	O
dsa_0	pointer
->	O
line	int
=	O
114	int
;	O
set_int	function
(	O
(	O
global_dsa	pointer
=	O
dsa_0	pointer
->	O
int_26	struct
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	pointer
->	O
int_26	struct
.	O
arg1	pointer
)	O
(	O
)	O
)	O
,	O
dsa_0	pointer
->	O
val_28	int
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_2	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
static	O
struct	O
desc	struct
_thunk_4	function
(	O
void	O
)	O
{	O
struct	O
desc	struct
res	struct
;	O
register	O
struct	O
dsa_outchar_0	struct
*	O
dsa_0	pointer
=	O
(	O
void	O
*	O
)	O
global_dsa	pointer
->	O
vector	array
[	O
0	int
]	O
;	O
dsa_0	pointer
->	O
line	int
=	O
123	int
;	O
res	struct
.	O
lval	int
=	O
1	int
;	O
res	struct
.	O
type	int
=	O
'i'	O
;	O
res	struct
.	O
u	union
.	O
int_ptr	pointer
=	O
&	O
(	O
dsa_0	pointer
->	O
int_29	int
)	O
;	O
return	O
res	struct
;	O
}	O
struct	O
desc	struct
outchar_0	function
(	O
struct	O
arg	struct
channel_29	int
,	O
struct	O
arg	struct
str_29	pointer
,	O
struct	O
arg	struct
int_29	int
)	O
{	O
struct	O
dsa_outchar_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_outchar_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"outchar"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
117	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
119	int
;	O
my_dsa	struct
.	O
channel_29	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_29	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_29	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
str_29	pointer
=	O
str_29	pointer
.	O
arg1	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
119	int
;	O
my_dsa	struct
.	O
int_29	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
int_29	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
int_29	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
122	int
;	O
if	O
(	O
!	O
(	O
or	O
(	O
less	O
(	O
dsa_0	pointer
->	O
int_29	int
,	O
1	int
)	O
,	O
greater	O
(	O
dsa_0	pointer
->	O
int_29	int
,	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
length_0	function
(	O
make_arg	function
(	O
dsa_0	pointer
->	O
str_29	pointer
,	O
NULL	O
)	O
)	O
)	O
)	O
)	O
)	O
)	O
)	O
goto	O
_gamma_4	O
;	O
dsa_0	pointer
->	O
line	int
=	O
123	int
;	O
(	O
(	O
global_dsa	pointer
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
,	O
fault_0	function
(	O
make_arg	function
(	O
"character not in "	pointer
"string"	pointer
,	O
NULL	O
)	O
,	O
make_arg	function
(	O
(	O
void	O
*	O
)	O
_thunk_4	function
,	O
dsa_0	pointer
)	O
)	O
)	O
)	O
;	O
goto	O
_omega_4	O
;	O
_gamma_4	O
:	O
dsa_0	pointer
->	O
line	int
=	O
125	int
;	O
outchar	function
(	O
my_dsa	struct
.	O
channel_29	int
,	O
my_dsa	struct
.	O
str_29	pointer
[	O
my_dsa	struct
.	O
int_29	int
-	O
1	int
]	O
)	O
;	O
_omega_4	O
:	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
length_0	function
(	O
struct	O
arg	struct
str_31	pointer
)	O
{	O
struct	O
dsa_length_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_length_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"length"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
128	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
str_31	pointer
=	O
str_31	pointer
.	O
arg1	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
131	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
int_val	int
=	O
strlen	function
(	O
my_dsa	struct
.	O
str_31	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'i'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
outstring_0	function
(	O
struct	O
arg	struct
channel_33	int
,	O
struct	O
arg	struct
str_33	pointer
)	O
{	O
struct	O
dsa_outstring_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_outstring_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"outstring"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
133	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
135	int
;	O
my_dsa	struct
.	O
channel_33	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_33	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_33	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
str_33	pointer
=	O
str_33	pointer
.	O
arg1	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
136	int
;	O
outstring	function
(	O
my_dsa	struct
.	O
channel_33	int
,	O
my_dsa	struct
.	O
str_33	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
outterminator_0	function
(	O
struct	O
arg	struct
channel_35	int
)	O
{	O
struct	O
dsa_outterminator_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_outterminator_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"outterminator"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
138	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
139	int
;	O
my_dsa	struct
.	O
channel_35	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_35	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_35	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
141	int
;	O
outchar	function
(	O
my_dsa	struct
.	O
channel_35	int
,	O
0x20	int
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
ininteger_0	function
(	O
struct	O
arg	struct
channel_37	int
,	O
struct	O
arg	struct
int_37	struct
)	O
{	O
struct	O
dsa_ininteger_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_ininteger_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"ininteger"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
143	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
144	int
;	O
my_dsa	struct
.	O
channel_37	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_37	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_37	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
int_37	struct
=	O
int_37	struct
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
146	int
;	O
dsa_0	pointer
->	O
old_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
148	int
;	O
my_dsa	struct
.	O
val_39	int
=	O
ininteger	function
(	O
my_dsa	struct
.	O
channel_37	int
)	O
;	O
dsa_0	pointer
->	O
line	int
=	O
149	int
;	O
set_int	function
(	O
(	O
global_dsa	pointer
=	O
dsa_0	pointer
->	O
int_37	struct
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	pointer
->	O
int_37	struct
.	O
arg1	pointer
)	O
(	O
)	O
)	O
,	O
dsa_0	pointer
->	O
val_39	int
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_2	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
outinteger_0	function
(	O
struct	O
arg	struct
channel_40	int
,	O
struct	O
arg	struct
int_40	int
)	O
{	O
struct	O
dsa_outinteger_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_outinteger_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"outinteger"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
152	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
154	int
;	O
my_dsa	struct
.	O
channel_40	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_40	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_40	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
line	int
=	O
154	int
;	O
my_dsa	struct
.	O
int_40	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
int_40	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
int_40	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
157	int
;	O
outinteger	function
(	O
my_dsa	struct
.	O
channel_40	int
,	O
my_dsa	struct
.	O
int_40	int
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
inreal_0	function
(	O
struct	O
arg	struct
channel_42	int
,	O
struct	O
arg	struct
re_42	struct
)	O
{	O
struct	O
dsa_inreal_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_inreal_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"inreal"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
159	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
161	int
;	O
my_dsa	struct
.	O
channel_42	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_42	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_42	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
re_42	struct
=	O
re_42	struct
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
163	int
;	O
dsa_0	pointer
->	O
old_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_2	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
165	int
;	O
my_dsa	struct
.	O
val_44	double
=	O
inreal	function
(	O
my_dsa	struct
.	O
channel_42	int
)	O
;	O
dsa_0	pointer
->	O
line	int
=	O
166	int
;	O
set_real	function
(	O
(	O
global_dsa	pointer
=	O
dsa_0	pointer
->	O
re_42	struct
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
dsa_0	pointer
->	O
re_42	struct
.	O
arg1	pointer
)	O
(	O
)	O
)	O
,	O
dsa_0	pointer
->	O
val_44	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_2	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
outreal_0	function
(	O
struct	O
arg	struct
channel_45	int
,	O
struct	O
arg	struct
re_45	double
)	O
{	O
struct	O
dsa_outreal_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_outreal_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"outreal"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
169	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
171	int
;	O
my_dsa	struct
.	O
channel_45	int
=	O
get_int	function
(	O
(	O
global_dsa	pointer
=	O
channel_45	int
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
channel_45	int
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
my_dsa	struct
.	O
line	int
=	O
171	int
;	O
my_dsa	struct
.	O
re_45	double
=	O
get_real	function
(	O
(	O
global_dsa	pointer
=	O
re_45	double
.	O
arg2	pointer
,	O
(	O
*	O
(	O
struct	O
desc	struct
(	O
*	O
)	O
(	O
void	O
)	O
)	O
re_45	double
.	O
arg1	pointer
)	O
(	O
)	O
)	O
)	O
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
174	int
;	O
outreal	function
(	O
my_dsa	struct
.	O
channel_45	int
,	O
my_dsa	struct
.	O
re_45	double
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
0	int
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
maxreal_0	function
(	O
void	O
)	O
{	O
struct	O
dsa_maxreal_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_maxreal_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"maxreal"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
178	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
179	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
DBL_MAX	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
minreal_0	function
(	O
void	O
)	O
{	O
struct	O
dsa_minreal_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_minreal_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"minreal"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
181	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
182	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
DBL_MIN	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
maxint_0	function
(	O
void	O
)	O
{	O
struct	O
dsa_maxint_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_maxint_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"maxint"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
184	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
185	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
int_val	int
=	O
INT_MAX	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'i'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
struct	O
desc	struct
epsilon_0	function
(	O
void	O
)	O
{	O
struct	O
dsa_epsilon_0	struct
my_dsa	struct
;	O
register	O
struct	O
dsa_epsilon_0	struct
*	O
dsa_0	pointer
=	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
proc	pointer
=	O
"epsilon"	pointer
;	O
my_dsa	struct
.	O
file	pointer
=	O
"alglib1.alg"	pointer
;	O
my_dsa	struct
.	O
line	int
=	O
198	int
;	O
my_dsa	struct
.	O
parent	pointer
=	O
active_dsa	pointer
,	O
active_dsa	pointer
=	O
(	O
struct	O
dsa	struct
*	O
)	O
&	O
my_dsa	struct
;	O
my_dsa	struct
.	O
vector	array
[	O
0	int
]	O
=	O
(	O
void	O
*	O
)	O
dsa_0	pointer
;	O
dsa_0	pointer
->	O
old_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_0	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
old_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
new_top_1	pointer
=	O
stack_top	pointer
;	O
dsa_0	pointer
->	O
line	int
=	O
202	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
u	union
.	O
real_val	double
=	O
DBL_EPSILON	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_1	pointer
)	O
;	O
pop_stack	function
(	O
dsa_0	pointer
->	O
old_top_0	pointer
)	O
;	O
my_dsa	struct
.	O
retval	struct
.	O
lval	int
=	O
0	int
;	O
my_dsa	struct
.	O
retval	struct
.	O
type	int
=	O
'r'	O
;	O
active_dsa	pointer
=	O
my_dsa	struct
.	O
parent	pointer
;	O
return	O
my_dsa	struct
.	O
retval	struct
;	O
}	O
