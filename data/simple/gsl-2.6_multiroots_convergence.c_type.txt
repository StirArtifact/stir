int	O
gsl_multiroot_test_delta	function
(	O
const	O
gsl_vector	struct
*	O
dx	pointer
,	O
const	O
gsl_vector	struct
*	O
x	double
,	O
double	O
epsabs	double
,	O
double	O
epsrel	double
)	O
{	O
size_t	long
i	long
;	O
int	O
ok	int
=	O
1	int
;	O
const	O
size_t	long
n	int
=	O
x	double
->	O
size	long
;	O
if	O
(	O
epsrel	double
<	O
0.0	int
)	O
{	O
GSL_ERROR	O
(	O
"relative tolerance is negative"	pointer
,	O
GSL_EBADTOL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
i	long
++	O
)	O
{	O
double	O
xi	double
=	O
gsl_vector_get	function
(	O
x	double
,	O
i	long
)	O
;	O
double	O
dxi	double
=	O
gsl_vector_get	function
(	O
dx	pointer
,	O
i	long
)	O
;	O
double	O
tolerance	double
=	O
epsabs	double
+	O
epsrel	double
*	O
fabs	function
(	O
xi	double
)	O
;	O
if	O
(	O
fabs	function
(	O
dxi	double
)	O
<	O
tolerance	double
||	O
dxi	double
==	O
0	int
)	O
{	O
ok	int
=	O
1	int
;	O
}	O
else	O
{	O
ok	int
=	O
0	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
ok	int
)	O
return	O
GSL_SUCCESS	int
;	O
return	O
GSL_CONTINUE	int
;	O
}	O
int	O
gsl_multiroot_test_residual	function
(	O
const	O
gsl_vector	struct
*	O
f	pointer
,	O
double	O
epsabs	double
)	O
{	O
size_t	long
i	long
;	O
double	O
residual	double
=	O
0	int
;	O
const	O
size_t	long
n	int
=	O
f	pointer
->	O
size	long
;	O
if	O
(	O
epsabs	double
<	O
0.0	int
)	O
{	O
GSL_ERROR	O
(	O
"absolute tolerance is negative"	pointer
,	O
GSL_EBADTOL	int
)	O
;	O
}	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
n	int
;	O
i	long
++	O
)	O
{	O
double	O
fi	double
=	O
gsl_vector_get	function
(	O
f	pointer
,	O
i	long
)	O
;	O
residual	double
+=	O
fabs	function
(	O
fi	double
)	O
;	O
}	O
if	O
(	O
residual	double
<	O
epsabs	double
)	O
{	O
return	O
GSL_SUCCESS	int
;	O
}	O
return	O
GSL_CONTINUE	int
;	O
}	O
