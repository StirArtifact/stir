char	O
*	O
program_name	pointer
;	O
void	O
unbuffer_standard_error	function
(	O
void	O
)	O
{	O
BE	O
(	O
unbufferedp	bool
)	O
=	O
!	O
setvbuf	function
(	O
stderr	pointer
,	O
NULL	O
,	O
_IONBF	int
,	O
0	int
)	O
;	O
}	O
void	O
vcomplain	function
(	O
char	O
const	O
*	O
fmt	pointer
,	O
va_list	array
args	pointer
)	O
{	O
FILE	struct
*	O
mstdout	pointer
=	O
MANI	O
(	O
standard_output	pointer
)	O
;	O
if	O
(	O
top	struct
)	O
fflush	function
(	O
mstdout	pointer
?	O
mstdout	pointer
:	O
stdout	pointer
)	O
;	O
vfprintf	function
(	O
stderr	pointer
,	O
fmt	pointer
,	O
args	pointer
)	O
;	O
if	O
(	O
top	struct
)	O
if	O
(	O
!	O
BE	O
(	O
unbufferedp	bool
)	O
)	O
fflush	function
(	O
stderr	pointer
)	O
;	O
}	O
void	O
complain	function
(	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
args	pointer
;	O
va_start	O
(	O
args	pointer
,	O
fmt	pointer
)	O
;	O
vcomplain	function
(	O
fmt	pointer
,	O
args	pointer
)	O
;	O
va_end	O
(	O
args	pointer
)	O
;	O
}	O
void	O
diagnose	function
(	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
if	O
(	O
!	O
BE	O
(	O
quiet	bool
)	O
)	O
COMPLAIN_PLUS_NEWLINE	O
(	O
)	O
;	O
}	O
static	O
void	O
whoami	function
(	O
char	O
const	O
*	O
who	pointer
)	O
{	O
complain	function
(	O
"%s: "	pointer
,	O
PROGRAM	O
(	O
name	pointer
)	O
)	O
;	O
if	O
(	O
who	pointer
)	O
complain	function
(	O
"%s: "	pointer
,	O
who	pointer
)	O
;	O
}	O
void	O
syserror	function
(	O
int	O
e	pointer
,	O
char	O
const	O
*	O
who	pointer
)	O
{	O
whoami	function
(	O
NULL	O
)	O
;	O
ERRONEOUS_X	O
(	O
)	O
;	O
errno	O
=	O
e	pointer
;	O
perror	function
(	O
who	pointer
)	O
;	O
}	O
void	O
generic_warn	function
(	O
char	O
const	O
*	O
who	pointer
,	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
if	O
(	O
!	O
BE	O
(	O
quiet	bool
)	O
)	O
{	O
whoami	function
(	O
who	pointer
)	O
;	O
complain	function
(	O
"warning: "	pointer
)	O
;	O
COMPLAIN_PLUS_NEWLINE	O
(	O
)	O
;	O
}	O
}	O
void	O
generic_error	function
(	O
char	O
const	O
*	O
who	pointer
,	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
ERRONEOUS_X	O
(	O
)	O
;	O
whoami	function
(	O
who	pointer
)	O
;	O
COMPLAIN_PLUS_NEWLINE	O
(	O
)	O
;	O
}	O
static	O
void	O
die	function
(	O
void	O
)	O
{	O
complain	function
(	O
"%s aborted\n"	pointer
,	O
PROGRAM	O
(	O
name	pointer
)	O
)	O
;	O
PROGRAM	O
(	O
exiterr	pointer
)	O
(	O
)	O
;	O
}	O
void	O
generic_fatal	function
(	O
char	O
const	O
*	O
who	pointer
,	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
ERRONEOUS_X	O
(	O
)	O
;	O
whoami	function
(	O
who	pointer
)	O
;	O
COMPLAIN_PLUS_NEWLINE	O
(	O
)	O
;	O
die	function
(	O
)	O
;	O
}	O
void	O
fatal_syntax	function
(	O
size_t	long
lno	long
,	O
char	O
const	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
complain	function
(	O
"%s: %s:"	pointer
,	O
PROGRAM	O
(	O
name	pointer
)	O
,	O
REPO	O
(	O
filename	pointer
)	O
)	O
;	O
if	O
(	O
lno	long
)	O
complain	function
(	O
"%ld:"	pointer
,	O
lno	long
)	O
;	O
complain	function
(	O
" "	pointer
)	O
;	O
COMPLAIN_PLUS_NEWLINE	O
(	O
)	O
;	O
die	function
(	O
)	O
;	O
}	O
void	O
fatal_sys	function
(	O
char	O
const	O
*	O
who	pointer
)	O
{	O
syserror	function
(	O
errno	O
,	O
who	pointer
)	O
;	O
die	function
(	O
)	O
;	O
}	O
