static	O
int	O
show_summary	int
;	O
static	O
int	O
be_quiet	int
;	O
static	O
int	O
show_query	int
;	O
static	O
int	O
align	int
=	O
0	int
;	O
static	O
int	O
select_attribute	int
;	O
static	O
struct	O
attr_tab	struct
{	O
char	O
*	O
name	pointer
;	O
int	O
code	int
;	O
size_t	long
len	long
;	O
}	O
attr_tab	struct
[	O
]	O
=	O
{	O
{	O
"new"	pointer
,	O
IS_NEW	int
,	O
0	int
}	O
,	O
{	O
"old"	pointer
,	O
IS_OLD	int
,	O
0	int
}	O
,	O
{	O
"unread"	pointer
,	O
IS_OLD	int
,	O
0	int
}	O
,	O
{	O
"read"	pointer
,	O
IS_READ	int
,	O
0	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
void	O
prepare_attrs	function
(	O
void	O
)	O
{	O
struct	O
attr_tab	struct
*	O
p	pointer
,	O
*	O
q	pointer
;	O
for	O
(	O
p	pointer
=	O
attr_tab	struct
;	O
p	pointer
->	O
name	pointer
;	O
p	pointer
++	O
)	O
{	O
const	O
char	O
*	O
name	pointer
=	O
p	pointer
->	O
name	pointer
;	O
size_t	long
len	long
=	O
strlen	function
(	O
name	pointer
)	O
;	O
size_t	long
n	pointer
=	O
1	int
;	O
for	O
(	O
q	pointer
=	O
attr_tab	struct
;	O
q	pointer
->	O
name	pointer
;	O
q	pointer
++	O
)	O
{	O
if	O
(	O
p	pointer
!=	O
q	pointer
)	O
{	O
const	O
char	O
*	O
str	pointer
=	O
q	pointer
->	O
name	pointer
;	O
size_t	long
slen	long
=	O
strlen	function
(	O
str	pointer
)	O
;	O
if	O
(	O
memcmp	function
(	O
name	pointer
,	O
str	pointer
,	O
n	pointer
)	O
==	O
0	int
)	O
{	O
for	O
(	O
n	pointer
++	O
;	O
memcmp	function
(	O
name	pointer
,	O
str	pointer
,	O
n	pointer
)	O
==	O
0	int
&&	O
n	pointer
<	O
len	long
&&	O
n	pointer
<	O
slen	long
;	O
n	pointer
++	O
)	O
;	O
q	pointer
->	O
len	long
=	O
n	pointer
<	O
slen	long
?	O
n	pointer
:	O
slen	long
;	O
}	O
}	O
}	O
p	pointer
->	O
len	long
=	O
n	pointer
<	O
len	long
?	O
n	pointer
:	O
len	long
;	O
}	O
}	O
static	O
int	O
decode_attr	function
(	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
struct	O
attr_tab	struct
*	O
p	pointer
;	O
int	O
len	long
=	O
strlen	function
(	O
arg	pointer
)	O
;	O
int	O
pretendents	int
=	O
0	int
;	O
for	O
(	O
p	pointer
=	O
attr_tab	struct
;	O
p	pointer
->	O
name	pointer
;	O
p	pointer
++	O
)	O
{	O
const	O
char	O
*	O
str	pointer
=	O
p	pointer
->	O
name	pointer
;	O
if	O
(	O
str	pointer
[	O
0	int
]	O
==	O
arg	pointer
[	O
0	int
]	O
)	O
{	O
if	O
(	O
len	long
<	O
p	pointer
->	O
len	long
)	O
pretendents	int
++	O
;	O
else	O
if	O
(	O
len	long
>	O
strlen	function
(	O
str	pointer
)	O
)	O
continue	O
;	O
if	O
(	O
memcmp	function
(	O
str	pointer
,	O
arg	pointer
,	O
p	pointer
->	O
len	long
)	O
==	O
0	int
)	O
return	O
p	pointer
->	O
code	int
;	O
}	O
}	O
if	O
(	O
pretendents	int
)	O
mu_error	function
(	O
_	O
(	O
"%s: ambiguous abbreviation"	pointer
)	O
,	O
arg	pointer
)	O
;	O
else	O
mu_error	function
(	O
_	O
(	O
"%s: unknown attribute"	pointer
)	O
,	O
arg	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
cli_show_field	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
show_field	pointer
=	O
mu_strdup	function
(	O
arg	pointer
)	O
;	O
align	int
=	O
0	int
;	O
}	O
static	O
void	O
cli_Quiet	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
be_quiet	int
+=	O
2	int
;	O
}	O
static	O
void	O
cli_query	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
be_quiet	int
++	O
;	O
show_query	int
=	O
1	int
;	O
}	O
static	O
void	O
cli_status	function
(	O
struct	O
mu_parseopt	struct
*	O
po	pointer
,	O
struct	O
mu_option	struct
*	O
opt	pointer
,	O
char	O
const	O
*	O
arg	pointer
)	O
{	O
select_attribute	int
=	O
decode_attr	function
(	O
arg	pointer
)	O
;	O
}	O
static	O
struct	O
mu_option	struct
frm_options	array
[	O
]	O
=	O
{	O
{	O
"debug"	pointer
,	O
'd'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"enable debugging output"	pointer
)	O
,	O
mu_c_incr	int
,	O
&	O
frm_debug	int
}	O
,	O
{	O
"field"	pointer
,	O
'f'	O
,	O
N_	O
(	O
"NAME"	pointer
)	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"header field to display"	pointer
)	O
,	O
mu_c_string	int
,	O
&	O
show_field	pointer
,	O
cli_show_field	function
}	O
,	O
{	O
"to"	pointer
,	O
'l'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"include the To: information"	pointer
)	O
,	O
mu_c_bool	int
,	O
&	O
show_to	int
}	O
,	O
{	O
"number"	pointer
,	O
'n'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"display message numbers"	pointer
)	O
,	O
mu_c_bool	int
,	O
&	O
show_number	int
}	O
,	O
{	O
"Quiet"	pointer
,	O
'Q'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"do not display headers"	pointer
)	O
,	O
mu_c_int	int
,	O
&	O
be_quiet	int
,	O
cli_Quiet	function
}	O
,	O
{	O
"query"	pointer
,	O
'q'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"print a message if the mailbox contains some unread mail"	pointer
)	O
,	O
mu_c_int	int
,	O
&	O
be_quiet	int
,	O
cli_query	function
}	O
,	O
{	O
"summary"	pointer
,	O
'S'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"print a summary of messages"	pointer
)	O
,	O
mu_c_bool	int
,	O
&	O
show_summary	int
}	O
,	O
{	O
"status"	pointer
,	O
's'	O
,	O
N_	O
(	O
"STATUS"	pointer
)	O
,	O
0	int
,	O
N_	O
(	O
"select messages with the specific attribute:"	pointer
" new, unread, old (same as unread) or read (or any unambiguous"	pointer
" abbreviation of these)"	pointer
)	O
,	O
mu_c_string	int
,	O
NULL	O
,	O
cli_status	function
}	O
,	O
{	O
"align"	pointer
,	O
't'	O
,	O
NULL	O
,	O
MU_OPTION_DEFAULT	int
,	O
N_	O
(	O
"tidy mode: align subject lines"	pointer
)	O
,	O
mu_c_bool	int
,	O
&	O
align	int
}	O
,	O
MU_OPTION_END	O
}	O
,	O
*	O
options	array
[	O
]	O
=	O
{	O
frm_options	array
,	O
NULL	O
}	O
;	O
static	O
struct	O
mu_cli_setup	struct
cli	struct
=	O
{	O
options	array
,	O
NULL	O
,	O
N_	O
(	O
"GNU frm -- display From: lines."	pointer
)	O
,	O
N_	O
(	O
"[URL ...]"	pointer
)	O
,	O
}	O
;	O
static	O
char	O
*	O
capa	pointer
[	O
]	O
=	O
{	O
"debug"	pointer
,	O
"mailbox"	pointer
,	O
"locking"	pointer
,	O
NULL	O
}	O
;	O
static	O
struct	O
{	O
size_t	long
new	long
;	O
size_t	long
read	pointer
;	O
size_t	long
unread	long
;	O
}	O
counter	struct
;	O
static	O
int	O
selected	int
;	O
static	O
int	O
frm_select	function
(	O
size_t	long
index	function
,	O
mu_message_t	pointer
msg	pointer
)	O
{	O
mu_header_t	pointer
hdr	pointer
=	O
NULL	O
;	O
mu_attribute_t	pointer
attr	pointer
=	O
NULL	O
;	O
mu_message_get_attribute	function
(	O
msg	pointer
,	O
&	O
attr	pointer
)	O
;	O
mu_message_get_header	function
(	O
msg	pointer
,	O
&	O
hdr	pointer
)	O
;	O
if	O
(	O
mu_attribute_is_read	function
(	O
attr	pointer
)	O
)	O
counter	struct
.	O
read	pointer
++	O
;	O
else	O
if	O
(	O
mu_attribute_is_seen	function
(	O
attr	pointer
)	O
)	O
counter	struct
.	O
unread	long
++	O
;	O
else	O
if	O
(	O
mu_attribute_is_recent	function
(	O
attr	pointer
)	O
)	O
counter	struct
.	O
new	long
++	O
;	O
if	O
(	O
(	O
(	O
select_attribute	int
&	O
IS_READ	int
)	O
&&	O
(	O
!	O
mu_attribute_is_read	function
(	O
attr	pointer
)	O
)	O
)	O
||	O
(	O
(	O
select_attribute	int
&	O
IS_NEW	int
)	O
&&	O
(	O
!	O
mu_attribute_is_recent	function
(	O
attr	pointer
)	O
)	O
)	O
||	O
(	O
(	O
select_attribute	int
&	O
IS_OLD	int
)	O
&&	O
(	O
!	O
mu_attribute_is_seen	function
(	O
attr	pointer
)	O
)	O
)	O
)	O
return	O
0	int
;	O
if	O
(	O
select_attribute	int
)	O
selected	int
++	O
;	O
return	O
!	O
be_quiet	int
;	O
}	O
int	O
frm	function
(	O
char	O
*	O
mailbox_name	pointer
)	O
{	O
size_t	long
total	pointer
;	O
int	O
status	int
;	O
selected	int
=	O
0	int
;	O
counter	struct
.	O
new	long
=	O
counter	struct
.	O
read	pointer
=	O
counter	struct
.	O
unread	long
=	O
0	int
;	O
frm_scan	function
(	O
mailbox_name	pointer
,	O
frm_select	function
,	O
&	O
total	pointer
)	O
;	O
if	O
(	O
show_summary	int
)	O
{	O
if	O
(	O
total	pointer
==	O
0	int
)	O
mu_printf	function
(	O
_	O
(	O
"Folder contains no messages."	pointer
)	O
)	O
;	O
else	O
{	O
char	O
*	O
delim	int
=	O
""	pointer
;	O
mu_printf	function
(	O
_	O
(	O
"Folder contains "	pointer
)	O
)	O
;	O
if	O
(	O
counter	struct
.	O
new	long
)	O
{	O
mu_printf	function
(	O
ngettext	function
(	O
"%lu new message"	pointer
,	O
"%lu new messages"	pointer
,	O
counter	struct
.	O
new	long
)	O
,	O
(	O
u_long	long
)	O
counter	struct
.	O
new	long
)	O
;	O
delim	int
=	O
", "	pointer
;	O
}	O
if	O
(	O
counter	struct
.	O
unread	long
)	O
{	O
mu_printf	function
(	O
"%s"	pointer
,	O
delim	int
)	O
;	O
mu_printf	function
(	O
ngettext	function
(	O
"%lu unread message"	pointer
,	O
"%lu unread messages"	pointer
,	O
counter	struct
.	O
unread	long
)	O
,	O
(	O
u_long	long
)	O
counter	struct
.	O
unread	long
)	O
;	O
delim	int
=	O
", "	pointer
;	O
}	O
if	O
(	O
counter	struct
.	O
read	pointer
)	O
{	O
mu_printf	function
(	O
"%s"	pointer
,	O
delim	int
)	O
;	O
mu_printf	function
(	O
ngettext	function
(	O
"%lu read message"	pointer
,	O
"%lu read messages"	pointer
,	O
counter	struct
.	O
read	pointer
)	O
,	O
(	O
u_long	long
)	O
counter	struct
.	O
read	pointer
)	O
;	O
}	O
mu_printf	function
(	O
_	O
(	O
"."	pointer
)	O
)	O
;	O
}	O
mu_printf	function
(	O
"\n"	pointer
)	O
;	O
}	O
else	O
if	O
(	O
show_query	int
)	O
{	O
if	O
(	O
total	pointer
>	O
0	int
)	O
mu_printf	function
(	O
_	O
(	O
"There are messages in that folder.\n"	pointer
)	O
)	O
;	O
else	O
mu_printf	function
(	O
_	O
(	O
"No messages in that folder!\n"	pointer
)	O
)	O
;	O
}	O
if	O
(	O
selected	int
)	O
status	int
=	O
0	int
;	O
else	O
if	O
(	O
total	pointer
>	O
0	int
)	O
status	int
=	O
1	int
;	O
else	O
status	int
=	O
2	int
;	O
return	O
status	int
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
size_t	long
s	pointer
;	O
MU_APP_INIT_NLS	O
(	O
)	O
;	O
prepare_attrs	function
(	O
)	O
;	O
mu_register_all_mbox_formats	O
(	O
)	O
;	O
mu_auth_register_module	function
(	O
&	O
mu_auth_tls_module	struct
)	O
;	O
mu_cli	function
(	O
argc	int
,	O
argv	pointer
,	O
&	O
cli	struct
,	O
capa	pointer
,	O
NULL	O
,	O
&	O
argc	int
,	O
&	O
argv	pointer
)	O
;	O
if	O
(	O
align	int
&&	O
(	O
s	pointer
=	O
util_getcols	function
(	O
)	O
)	O
)	O
init_output	function
(	O
s	pointer
)	O
;	O
else	O
init_output	function
(	O
0	int
)	O
;	O
if	O
(	O
argc	int
==	O
0	int
)	O
status	int
=	O
frm	function
(	O
NULL	O
)	O
;	O
else	O
if	O
(	O
argc	int
==	O
1	int
)	O
status	int
=	O
frm	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
else	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
mu_printf	function
(	O
"%s:\n"	pointer
,	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
status	int
=	O
frm	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
}	O
}	O
return	O
status	int
;	O
}	O
