static	O
int	O
nonintr_close	function
(	O
int	O
fd	array
)	O
{	O
int	O
retval	int
;	O
do	O
retval	int
=	O
close	function
(	O
fd	array
)	O
;	O
while	O
(	O
retval	int
<	O
0	int
&&	O
errno	O
==	O
EINTR	int
)	O
;	O
return	O
retval	int
;	O
}	O
static	O
pid_t	int
create_pipe	function
(	O
const	O
char	O
*	O
progname	pointer
,	O
const	O
char	O
*	O
prog_path	pointer
,	O
char	O
*	O
*	O
prog_argv	pointer
,	O
bool	bool
pipe_stdin	bool
,	O
bool	bool
pipe_stdout	bool
,	O
const	O
char	O
*	O
prog_stdin	pointer
,	O
const	O
char	O
*	O
prog_stdout	pointer
,	O
bool	bool
null_stderr	bool
,	O
bool	bool
slave_process	bool
,	O
bool	bool
exit_on_error	bool
,	O
int	O
fd	array
[	O
2	int
]	O
)	O
{	O
int	O
ifd	array
[	O
2	int
]	O
;	O
int	O
ofd	array
[	O
2	int
]	O
;	O
sigset_t	struct
blocked_signals	struct
;	O
posix_spawn_file_actions_t	struct
actions	struct
;	O
bool	bool
actions_allocated	bool
;	O
posix_spawnattr_t	struct
attrs	struct
;	O
bool	bool
attrs_allocated	bool
;	O
int	O
err	long
;	O
pid_t	int
child	int
;	O
if	O
(	O
pipe_stdout	bool
)	O
if	O
(	O
pipe_safer	function
(	O
ifd	array
)	O
<	O
0	int
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"cannot create pipe"	pointer
)	O
)	O
;	O
if	O
(	O
pipe_stdin	bool
)	O
if	O
(	O
pipe_safer	function
(	O
ofd	array
)	O
<	O
0	int
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
_	O
(	O
"cannot create pipe"	pointer
)	O
)	O
;	O
if	O
(	O
slave_process	bool
)	O
{	O
sigprocmask	function
(	O
SIG_SETMASK	int
,	O
NULL	O
,	O
&	O
blocked_signals	struct
)	O
;	O
block_fatal_signals	function
(	O
)	O
;	O
}	O
actions_allocated	bool
=	O
false	int
;	O
attrs_allocated	bool
=	O
false	int
;	O
if	O
(	O
(	O
err	long
=	O
posix_spawn_file_actions_init	function
(	O
&	O
actions	struct
)	O
)	O
!=	O
0	int
||	O
(	O
actions_allocated	bool
=	O
true	int
,	O
(	O
pipe_stdin	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_adddup2	function
(	O
&	O
actions	struct
,	O
ofd	array
[	O
0	int
]	O
,	O
STDIN_FILENO	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
pipe_stdout	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_adddup2	function
(	O
&	O
actions	struct
,	O
ifd	array
[	O
1	int
]	O
,	O
STDOUT_FILENO	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
pipe_stdin	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addclose	function
(	O
&	O
actions	struct
,	O
ofd	array
[	O
0	int
]	O
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
pipe_stdout	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addclose	function
(	O
&	O
actions	struct
,	O
ifd	array
[	O
1	int
]	O
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
pipe_stdin	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addclose	function
(	O
&	O
actions	struct
,	O
ofd	array
[	O
1	int
]	O
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
pipe_stdout	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addclose	function
(	O
&	O
actions	struct
,	O
ifd	array
[	O
0	int
]	O
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
null_stderr	bool
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	function
(	O
&	O
actions	struct
,	O
STDERR_FILENO	int
,	O
"/dev/null"	pointer
,	O
O_RDWR	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
!	O
pipe_stdin	bool
&&	O
prog_stdin	pointer
!=	O
NULL	O
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	function
(	O
&	O
actions	struct
,	O
STDIN_FILENO	int
,	O
prog_stdin	pointer
,	O
O_RDONLY	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
!	O
pipe_stdout	bool
&&	O
prog_stdout	pointer
!=	O
NULL	O
&&	O
(	O
err	long
=	O
posix_spawn_file_actions_addopen	function
(	O
&	O
actions	struct
,	O
STDOUT_FILENO	int
,	O
prog_stdout	pointer
,	O
O_WRONLY	int
,	O
0	int
)	O
)	O
!=	O
0	int
)	O
||	O
(	O
slave_process	bool
&&	O
(	O
(	O
err	long
=	O
posix_spawnattr_init	function
(	O
&	O
attrs	struct
)	O
)	O
!=	O
0	int
||	O
(	O
attrs_allocated	bool
=	O
true	int
,	O
(	O
err	long
=	O
posix_spawnattr_setsigmask	function
(	O
&	O
attrs	struct
,	O
&	O
blocked_signals	struct
)	O
)	O
!=	O
0	int
||	O
(	O
err	long
=	O
posix_spawnattr_setflags	function
(	O
&	O
attrs	struct
,	O
POSIX_SPAWN_SETSIGMASK	int
)	O
)	O
!=	O
0	int
)	O
)	O
)	O
||	O
(	O
err	long
=	O
posix_spawnp	function
(	O
&	O
child	int
,	O
prog_path	pointer
,	O
&	O
actions	struct
,	O
attrs_allocated	bool
?	O
&	O
attrs	struct
:	O
NULL	O
,	O
prog_argv	pointer
,	O
environ	pointer
)	O
)	O
!=	O
0	int
)	O
)	O
{	O
if	O
(	O
actions_allocated	bool
)	O
posix_spawn_file_actions_destroy	function
(	O
&	O
actions	struct
)	O
;	O
if	O
(	O
attrs_allocated	bool
)	O
posix_spawnattr_destroy	function
(	O
&	O
attrs	struct
)	O
;	O
if	O
(	O
slave_process	bool
)	O
unblock_fatal_signals	function
(	O
)	O
;	O
if	O
(	O
exit_on_error	bool
||	O
!	O
null_stderr	bool
)	O
error	function
(	O
exit_on_error	bool
?	O
EXIT_FAILURE	int
:	O
0	int
,	O
err	long
,	O
_	O
(	O
"%s subprocess failed"	pointer
)	O
,	O
progname	pointer
)	O
;	O
if	O
(	O
pipe_stdout	bool
)	O
{	O
close	function
(	O
ifd	array
[	O
0	int
]	O
)	O
;	O
close	function
(	O
ifd	array
[	O
1	int
]	O
)	O
;	O
}	O
if	O
(	O
pipe_stdin	bool
)	O
{	O
close	function
(	O
ofd	array
[	O
0	int
]	O
)	O
;	O
close	function
(	O
ofd	array
[	O
1	int
]	O
)	O
;	O
}	O
errno	O
=	O
err	long
;	O
return	O
-	O
1	int
;	O
}	O
posix_spawn_file_actions_destroy	function
(	O
&	O
actions	struct
)	O
;	O
if	O
(	O
attrs_allocated	bool
)	O
posix_spawnattr_destroy	function
(	O
&	O
attrs	struct
)	O
;	O
if	O
(	O
slave_process	bool
)	O
{	O
register_slave_subprocess	function
(	O
child	int
)	O
;	O
unblock_fatal_signals	function
(	O
)	O
;	O
}	O
if	O
(	O
pipe_stdin	bool
)	O
close	function
(	O
ofd	array
[	O
0	int
]	O
)	O
;	O
if	O
(	O
pipe_stdout	bool
)	O
close	function
(	O
ifd	array
[	O
1	int
]	O
)	O
;	O
if	O
(	O
pipe_stdout	bool
)	O
fd	array
[	O
0	int
]	O
=	O
ifd	array
[	O
0	int
]	O
;	O
if	O
(	O
pipe_stdin	bool
)	O
fd	array
[	O
1	int
]	O
=	O
ofd	array
[	O
1	int
]	O
;	O
return	O
child	int
;	O
}	O
pid_t	int
create_pipe_bidi	function
(	O
const	O
char	O
*	O
progname	pointer
,	O
const	O
char	O
*	O
prog_path	pointer
,	O
char	O
*	O
*	O
prog_argv	pointer
,	O
bool	bool
null_stderr	bool
,	O
bool	bool
slave_process	bool
,	O
bool	bool
exit_on_error	bool
,	O
int	O
fd	array
[	O
2	int
]	O
)	O
{	O
pid_t	int
result	int
=	O
create_pipe	function
(	O
progname	pointer
,	O
prog_path	pointer
,	O
prog_argv	pointer
,	O
true	int
,	O
true	int
,	O
NULL	O
,	O
NULL	O
,	O
null_stderr	bool
,	O
slave_process	bool
,	O
exit_on_error	bool
,	O
fd	array
)	O
;	O
return	O
result	int
;	O
}	O
pid_t	int
create_pipe_in	function
(	O
const	O
char	O
*	O
progname	pointer
,	O
const	O
char	O
*	O
prog_path	pointer
,	O
char	O
*	O
*	O
prog_argv	pointer
,	O
const	O
char	O
*	O
prog_stdin	pointer
,	O
bool	bool
null_stderr	bool
,	O
bool	bool
slave_process	bool
,	O
bool	bool
exit_on_error	bool
,	O
int	O
fd	array
[	O
1	int
]	O
)	O
{	O
int	O
iofd	array
[	O
2	int
]	O
;	O
pid_t	int
result	int
=	O
create_pipe	function
(	O
progname	pointer
,	O
prog_path	pointer
,	O
prog_argv	pointer
,	O
false	int
,	O
true	int
,	O
prog_stdin	pointer
,	O
NULL	O
,	O
null_stderr	bool
,	O
slave_process	bool
,	O
exit_on_error	bool
,	O
iofd	array
)	O
;	O
if	O
(	O
result	int
!=	O
-	O
1	int
)	O
fd	array
[	O
0	int
]	O
=	O
iofd	array
[	O
0	int
]	O
;	O
return	O
result	int
;	O
}	O
pid_t	int
create_pipe_out	function
(	O
const	O
char	O
*	O
progname	pointer
,	O
const	O
char	O
*	O
prog_path	pointer
,	O
char	O
*	O
*	O
prog_argv	pointer
,	O
const	O
char	O
*	O
prog_stdout	pointer
,	O
bool	bool
null_stderr	bool
,	O
bool	bool
slave_process	bool
,	O
bool	bool
exit_on_error	bool
,	O
int	O
fd	array
[	O
1	int
]	O
)	O
{	O
int	O
iofd	array
[	O
2	int
]	O
;	O
pid_t	int
result	int
=	O
create_pipe	function
(	O
progname	pointer
,	O
prog_path	pointer
,	O
prog_argv	pointer
,	O
true	int
,	O
false	int
,	O
NULL	O
,	O
prog_stdout	pointer
,	O
null_stderr	bool
,	O
slave_process	bool
,	O
exit_on_error	bool
,	O
iofd	array
)	O
;	O
if	O
(	O
result	int
!=	O
-	O
1	int
)	O
fd	array
[	O
0	int
]	O
=	O
iofd	array
[	O
1	int
]	O
;	O
return	O
result	int
;	O
}	O
