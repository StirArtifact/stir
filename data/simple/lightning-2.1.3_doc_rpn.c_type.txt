typedef	O
int	O
(	O
*	O
pifi	pointer
)	O
(	O
int	O
)	O
;	O
static	O
jit_state_t	struct
*	O
_jit	pointer
;	O
void	O
stack_push	function
(	O
int	O
reg	int
,	O
int	O
*	O
sp	pointer
)	O
{	O
jit_stxi_i	O
(	O
*	O
sp	pointer
,	O
JIT_FP	O
,	O
reg	int
)	O
;	O
*	O
sp	pointer
+=	O
sizeof	O
(	O
int	O
)	O
;	O
}	O
void	O
stack_pop	function
(	O
int	O
reg	int
,	O
int	O
*	O
sp	pointer
)	O
{	O
*	O
sp	pointer
-=	O
sizeof	O
(	O
int	O
)	O
;	O
jit_ldxi_i	O
(	O
reg	int
,	O
JIT_FP	O
,	O
*	O
sp	pointer
)	O
;	O
}	O
jit_node_t	struct
*	O
compile_rpn	function
(	O
char	O
*	O
expr	pointer
)	O
{	O
jit_node_t	struct
*	O
in	pointer
,	O
*	O
fn	pointer
;	O
int	O
stack_base	int
,	O
stack_ptr	int
;	O
fn	pointer
=	O
jit_note	O
(	O
NULL	O
,	O
0	int
)	O
;	O
jit_prolog	O
(	O
)	O
;	O
in	pointer
=	O
jit_arg	O
(	O
)	O
;	O
stack_ptr	int
=	O
stack_base	int
=	O
jit_allocai	O
(	O
32	int
*	O
sizeof	O
(	O
int	O
)	O
)	O
;	O
jit_getarg_i	O
(	O
JIT_R2	O
,	O
in	pointer
)	O
;	O
while	O
(	O
*	O
expr	pointer
)	O
{	O
char	O
buf	array
[	O
32	int
]	O
;	O
int	O
n	int
;	O
if	O
(	O
sscanf	function
(	O
expr	pointer
,	O
"%[0-9]%n"	pointer
,	O
buf	array
,	O
&	O
n	int
)	O
)	O
{	O
expr	pointer
+=	O
n	int
-	O
1	int
;	O
stack_push	function
(	O
JIT_R0	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_movi	O
(	O
JIT_R0	O
,	O
atoi	function
(	O
buf	array
)	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'x'	O
)	O
{	O
stack_push	function
(	O
JIT_R0	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_movr	O
(	O
JIT_R0	O
,	O
JIT_R2	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'+'	O
)	O
{	O
stack_pop	function
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_addr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'-'	O
)	O
{	O
stack_pop	function
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_subr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'*'	O
)	O
{	O
stack_pop	function
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_mulr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
if	O
(	O
*	O
expr	pointer
==	O
'/'	O
)	O
{	O
stack_pop	function
(	O
JIT_R1	O
,	O
&	O
stack_ptr	int
)	O
;	O
jit_divr	O
(	O
JIT_R0	O
,	O
JIT_R1	O
,	O
JIT_R0	O
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"cannot compile: %s\n"	pointer
,	O
expr	pointer
)	O
;	O
abort	function
(	O
)	O
;	O
}	O
++	O
expr	pointer
;	O
}	O
jit_retr	O
(	O
JIT_R0	O
)	O
;	O
jit_epilog	O
(	O
)	O
;	O
return	O
fn	pointer
;	O
}	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	array
[	O
]	O
)	O
{	O
jit_node_t	struct
*	O
nc	pointer
,	O
*	O
nf	pointer
;	O
pifi	pointer
c2f	pointer
,	O
f2c	pointer
;	O
int	O
i	int
;	O
init_jit	function
(	O
argv	array
[	O
0	int
]	O
)	O
;	O
_jit	pointer
=	O
jit_new_state	function
(	O
)	O
;	O
nc	pointer
=	O
compile_rpn	function
(	O
"32x9*5/+"	pointer
)	O
;	O
nf	pointer
=	O
compile_rpn	function
(	O
"x32-5*9/"	pointer
)	O
;	O
(	O
void	O
)	O
jit_emit	O
(	O
)	O
;	O
c2f	pointer
=	O
(	O
pifi	pointer
)	O
jit_address	O
(	O
nc	pointer
)	O
;	O
f2c	pointer
=	O
(	O
pifi	pointer
)	O
jit_address	O
(	O
nf	pointer
)	O
;	O
jit_clear_state	O
(	O
)	O
;	O
printf	function
(	O
"\nC:"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
100	int
;	O
i	int
+=	O
10	int
)	O
printf	function
(	O
"%3d "	pointer
,	O
i	int
)	O
;	O
printf	function
(	O
"\nF:"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<=	O
100	int
;	O
i	int
+=	O
10	int
)	O
printf	function
(	O
"%3d "	pointer
,	O
c2f	pointer
(	O
i	int
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
printf	function
(	O
"\nF:"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
32	int
;	O
i	int
<=	O
212	int
;	O
i	int
+=	O
18	int
)	O
printf	function
(	O
"%3d "	pointer
,	O
i	int
)	O
;	O
printf	function
(	O
"\nC:"	pointer
)	O
;	O
for	O
(	O
i	int
=	O
32	int
;	O
i	int
<=	O
212	int
;	O
i	int
+=	O
18	int
)	O
printf	function
(	O
"%3d "	pointer
,	O
f2c	pointer
(	O
i	int
)	O
)	O
;	O
printf	function
(	O
"\n"	pointer
)	O
;	O
jit_destroy_state	O
(	O
)	O
;	O
finish_jit	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
