static	O
const	O
gmp_uint_least32_t	int
default_state	array
[	O
N	int
]	O
=	O
{	O
0xD247B233	int
,	O
0x9E5AA8F1	int
,	O
0x0FFA981B	int
,	O
0x9DCB0980	int
,	O
0x74200F2B	int
,	O
0xA576D044	int
,	O
0xE9F05ADF	int
,	O
0x1538BFF5	int
,	O
0x59818BBF	int
,	O
0xCF9E58D8	int
,	O
0x09FCE032	int
,	O
0x6A1C663F	int
,	O
0x5116E78A	int
,	O
0x69B3E0FA	int
,	O
0x6D92D665	int
,	O
0xD0A8BE98	int
,	O
0xF669B734	int
,	O
0x41AC1B68	int
,	O
0x630423F1	int
,	O
0x4B8D6B8A	int
,	O
0xC2C46DD7	int
,	O
0x5680747D	int
,	O
0x43703E8F	int
,	O
0x3B6103D2	int
,	O
0x49E5EB3F	int
,	O
0xCBDAB4C1	int
,	O
0x9C988E23	int
,	O
0x747BEE0B	int
,	O
0x9111E329	int
,	O
0x9F031B5A	int
,	O
0xECCA71B9	int
,	O
0x2AFE4EF8	int
,	O
0x8421C7ED	int
,	O
0xAC89AFF1	int
,	O
0xAED90DF3	int
,	O
0x2DD74F01	int
,	O
0x14906A13	int
,	O
0x75873FA9	int
,	O
0xFF83F877	int
,	O
0x5028A0C9	int
,	O
0x11B4C41D	int
,	O
0x7CAEDBC4	int
,	O
0x8672D0A7	int
,	O
0x48A7C109	int
,	O
0x8320E59F	int
,	O
0xBC0B3D5F	int
,	O
0x75A30886	int
,	O
0xF9E0D128	int
,	O
0x41AF7580	int
,	O
0x239BB94D	int
,	O
0xC67A3C81	int
,	O
0x74EEBD6E	int
,	O
0xBC02B53C	int
,	O
0x727EA449	int
,	O
0x6B8A2806	int
,	O
0x5853B0DA	int
,	O
0xBDE032F4	int
,	O
0xCE234885	int
,	O
0x320D6145	int
,	O
0x48CC053F	int
,	O
0x00DBC4D2	int
,	O
0xD55A2397	int
,	O
0xE1059B6F	int
,	O
0x1C3E05D1	int
,	O
0x09657C64	int
,	O
0xD07CB661	int
,	O
0x6E982E34	int
,	O
0x6DD1D777	int
,	O
0xEDED1071	int
,	O
0xD79DFD65	int
,	O
0xF816DDCE	int
,	O
0xB6FAF1E4	int
,	O
0x1C771074	int
,	O
0x311835BD	int
,	O
0x18F952F7	int
,	O
0xF8F40350	int
,	O
0x4ECED354	int
,	O
0x7C8AC12B	int
,	O
0x31A9994D	int
,	O
0x4FD47747	int
,	O
0xDC227A23	int
,	O
0x6DFAFDDF	int
,	O
0x6796E748	int
,	O
0x0C6F634F	int
,	O
0xF992FA1D	int
,	O
0x4CF670C9	int
,	O
0x067DFD31	int
,	O
0xA7A3E1A5	int
,	O
0x8CD7D9DF	int
,	O
0x972CCB34	int
,	O
0x67C82156	int
,	O
0xD548F6A8	int
,	O
0x045CEC21	int
,	O
0xF3240BFB	int
,	O
0xDEF656A7	int
,	O
0x43DE08C5	int
,	O
0xDAD1F92F	int
,	O
0x3726C56B	int
,	O
0x1409F19A	int
,	O
0x942FD147	int
,	O
0xB926749C	int
,	O
0xADDC31B8	int
,	O
0x53D0D869	int
,	O
0xD1BA52FE	int
,	O
0x6722DF8C	int
,	O
0x22D95A74	int
,	O
0x7DC1B52A	int
,	O
0x1DEC6FD5	int
,	O
0x7262874D	int
,	O
0x0A725DC9	int
,	O
0xE6A8193D	int
,	O
0xA052835A	int
,	O
0xDC9AD928	int
,	O
0xE59EBB90	int
,	O
0x70DBA9FF	int
,	O
0xD612749D	int
,	O
0x5A5A638C	int
,	O
0x6086EC37	int
,	O
0x2A579709	int
,	O
0x1449EA3A	int
,	O
0xBC8E3C06	int
,	O
0x2F900666	int
,	O
0xFBE74FD1	int
,	O
0x6B35B911	int
,	O
0xF8335008	int
,	O
0xEF1E979D	int
,	O
0x738AB29D	int
,	O
0xA2DC0FDC	int
,	O
0x7696305D	int
,	O
0xF5429DAC	int
,	O
0x8C41813B	int
,	O
0x8073E02E	int
,	O
0xBEF83CCD	int
,	O
0x7B50A95A	int
,	O
0x05EE5862	int
,	O
0x00829ECE	int
,	O
0x8CA1958C	int
,	O
0xBE4EA2E2	int
,	O
0x4293BB73	int
,	O
0x656F7B23	int
,	O
0x417316D8	int
,	O
0x4467D7CF	int
,	O
0x2200E63B	int
,	O
0x109050C8	int
,	O
0x814CBE47	int
,	O
0x36B1D4A8	int
,	O
0x36AF9305	int
,	O
0x308327B3	int
,	O
0xEBCD7344	int
,	O
0xA738DE27	int
,	O
0x5A10C399	int
,	O
0x4142371D	int
,	O
0x64A18528	int
,	O
0x0B31E8B2	int
,	O
0x641057B9	int
,	O
0x6AFC363B	int
,	O
0x108AD953	int
,	O
0x9D4DA234	int
,	O
0x0C2D9159	int
,	O
0x1C8A1A1F	int
,	O
0x310C66BA	int
,	O
0x87AA1070	int
,	O
0xDAC832FF	int
,	O
0x0A433422	int
,	O
0x7AF15812	int
,	O
0x2D8D9BD0	int
,	O
0x995A25E9	int
,	O
0x25326CAC	int
,	O
0xA34384DB	int
,	O
0x4C8421CC	int
,	O
0x4F0315EC	int
,	O
0x29E8649E	int
,	O
0xA7732D6F	int
,	O
0x2E94D3E3	int
,	O
0x7D98A340	int
,	O
0x397C4D74	int
,	O
0x659DB4DE	int
,	O
0x747D4E9A	int
,	O
0xD9DB8435	int
,	O
0x4659DBE9	int
,	O
0x313E6DC5	int
,	O
0x29D104DC	int
,	O
0x9F226CBA	int
,	O
0x452F18B0	int
,	O
0xD0BC5068	int
,	O
0x844CA299	int
,	O
0x782B294E	int
,	O
0x4AE2EB7B	int
,	O
0xA4C475F8	int
,	O
0x70A81311	int
,	O
0x4B3E8BCC	int
,	O
0x7E20D4BA	int
,	O
0xABCA33C9	int
,	O
0x57BE2960	int
,	O
0x44F9B419	int
,	O
0x2E567746	int
,	O
0x72EB757A	int
,	O
0x102CC0E8	int
,	O
0xB07F32B9	int
,	O
0xD0DABD59	int
,	O
0xBA85AD6B	int
,	O
0xF3E20667	int
,	O
0x98D77D81	int
,	O
0x197AFA47	int
,	O
0x518EE9AC	int
,	O
0xE10CE5A2	int
,	O
0x01CF2C2A	int
,	O
0xD3A3AF3D	int
,	O
0x16DDFD65	int
,	O
0x669232F8	int
,	O
0x1C50A301	int
,	O
0xB93D9151	int
,	O
0x9354D3F4	int
,	O
0x847D79D0	int
,	O
0xD5FE2EC6	int
,	O
0x1F7B0610	int
,	O
0xFA6B90A5	int
,	O
0xC5879041	int
,	O
0x2E7DC05E	int
,	O
0x423F1F32	int
,	O
0xEF623DDB	int
,	O
0x49C13280	int
,	O
0x98714E92	int
,	O
0xC7B6E4AD	int
,	O
0xC4318466	int
,	O
0x0737F312	int
,	O
0x4D3C003F	int
,	O
0x9ACC1F1F	int
,	O
0x5F1C926D	int
,	O
0x085FA771	int
,	O
0x185A83A2	int
,	O
0xF9AA159D	int
,	O
0x0B0B0132	int
,	O
0xF98E7A43	int
,	O
0xCD9EBDBE	int
,	O
0x0190CB29	int
,	O
0x10D93FB6	int
,	O
0x3B8A4D97	int
,	O
0x66A65A41	int
,	O
0xE43E766F	int
,	O
0x77BE3C41	int
,	O
0xB9686364	int
,	O
0xCB36994D	int
,	O
0x6846A287	int
,	O
0x567E77F7	int
,	O
0x36178DD8	int
,	O
0xBDE6B1F2	int
,	O
0xB6EFDC64	int
,	O
0x82950324	int
,	O
0x42053F47	int
,	O
0xC09BE51C	int
,	O
0x0942D762	int
,	O
0x35F92C7F	int
,	O
0x367DEC61	int
,	O
0x6EE3D983	int
,	O
0xDBAAF78A	int
,	O
0x265D2C47	int
,	O
0x8EB4BF5C	int
,	O
0x33B232D7	int
,	O
0xB0137E77	int
,	O
0x373C39A7	int
,	O
0x8D2B2E76	int
,	O
0xC7510F01	int
,	O
0x50F9E032	int
,	O
0x7B1FDDDB	int
,	O
0x724C2AAE	int
,	O
0xB10ECB31	int
,	O
0xCCA3D1B8	int
,	O
0x7F0BCF10	int
,	O
0x4254BBBD	int
,	O
0xE3F93B97	int
,	O
0x2305039B	int
,	O
0x53120E22	int
,	O
0x1A2F3B9A	int
,	O
0x0FDDBD97	int
,	O
0x0118561E	int
,	O
0x0A798E13	int
,	O
0x9E0B3ACD	int
,	O
0xDB6C9F15	int
,	O
0xF512D0A2	int
,	O
0x9E8C3A28	int
,	O
0xEE2184AE	int
,	O
0x0051EC2F	int
,	O
0x2432F74F	int
,	O
0xB0AA66EA	int
,	O
0x55128D88	int
,	O
0xF7D83A38	int
,	O
0x4DAE8E82	int
,	O
0x3FDC98D6	int
,	O
0x5F0BD341	int
,	O
0x7244BE1D	int
,	O
0xC7B48E78	int
,	O
0x2D473053	int
,	O
0x43892E20	int
,	O
0xBA0F1F2A	int
,	O
0x524D4895	int
,	O
0x2E10BCB1	int
,	O
0x4C372D81	int
,	O
0x5C3E50CD	int
,	O
0xCF61CC2E	int
,	O
0x931709AB	int
,	O
0x81B3AEFC	int
,	O
0x39E9405E	int
,	O
0x7FFE108C	int
,	O
0x4FBB3FF8	int
,	O
0x06ABE450	int
,	O
0x7F5BF51E	int
,	O
0xA4E3CDFD	int
,	O
0xDB0F6C6F	int
,	O
0x159A1227	int
,	O
0x3B9FED55	int
,	O
0xD20B6F7F	int
,	O
0xFBE9CC83	int
,	O
0x64856619	int
,	O
0xBF52B8AF	int
,	O
0x9D7006B0	int
,	O
0x71165BC6	int
,	O
0xAE324AEE	int
,	O
0x29D27F2C	int
,	O
0x794C2086	int
,	O
0x74445CE2	int
,	O
0x782915CC	int
,	O
0xD4CE6886	int
,	O
0x3289AE7C	int
,	O
0x53DEF297	int
,	O
0x4185F7ED	int
,	O
0x88B72400	int
,	O
0x3C09DC11	int
,	O
0xBCE3AAB6	int
,	O
0x6A75934A	int
,	O
0xB267E399	int
,	O
0x000DF1BF	int
,	O
0x193BA5E2	int
,	O
0xFA3E1977	int
,	O
0x179E14F6	int
,	O
0x1EEDE298	int
,	O
0x691F0B06	int
,	O
0xB84F78AC	int
,	O
0xC1C15316	int
,	O
0xFFFF3AD6	int
,	O
0x0B457383	int
,	O
0x518CD612	int
,	O
0x05A00F3E	int
,	O
0xD5B7D275	int
,	O
0x4C5ECCD7	int
,	O
0xE02CD0BE	int
,	O
0x5558E9F2	int
,	O
0x0C89BBF0	int
,	O
0xA3D96227	int
,	O
0x2832D2B2	int
,	O
0xF667B897	int
,	O
0xD4556554	int
,	O
0xF9D2F01F	int
,	O
0xFA1E3FAE	int
,	O
0x52C2E1EE	int
,	O
0xE5451F31	int
,	O
0x7E849729	int
,	O
0xDABDB67A	int
,	O
0x54BF5E7E	int
,	O
0xF831C271	int
,	O
0x5F1A17E3	int
,	O
0x9D140AFE	int
,	O
0x92741C47	int
,	O
0x48CFABCE	int
,	O
0x9CBBE477	int
,	O
0x9C3EE57F	int
,	O
0xB07D4C39	int
,	O
0xCC21BCE2	int
,	O
0x697708B1	int
,	O
0x58DA2A6B	int
,	O
0x2370DB16	int
,	O
0x6E641948	int
,	O
0xACC5BD52	int
,	O
0x868F24CC	int
,	O
0xCA1DB0F5	int
,	O
0x4CADA492	int
,	O
0x3F443E54	int
,	O
0xC4A4D5E9	int
,	O
0xF00AD670	int
,	O
0xE93C86E0	int
,	O
0xFE90651A	int
,	O
0xDDE532A3	int
,	O
0xA66458DF	int
,	O
0xAB7D7151	int
,	O
0x0E2E775F	int
,	O
0xC9109F99	int
,	O
0x8D96D59F	int
,	O
0x73CEF14C	int
,	O
0xC74E88E9	int
,	O
0x02712DC0	int
,	O
0x04F41735	int
,	O
0x2E5914A2	int
,	O
0x59F4B2FB	int
,	O
0x0287FC83	int
,	O
0x80BC0343	int
,	O
0xF6B32559	int
,	O
0xC74178D4	int
,	O
0xF1D99123	int
,	O
0x383CCC07	int
,	O
0xACC0637D	int
,	O
0x0863A548	int
,	O
0xA6FCAC85	int
,	O
0x2A13EFF0	int
,	O
0xAF2EEDB1	int
,	O
0x41E72750	int
,	O
0xE0C6B342	int
,	O
0x5DA22B46	int
,	O
0x635559E0	int
,	O
0xD2EA40AC	int
,	O
0x10AA98C0	int
,	O
0x19096497	int
,	O
0x112C542B	int
,	O
0x2C85040C	int
,	O
0xA868E7D0	int
,	O
0x6E260188	int
,	O
0xF596D390	int
,	O
0xC3BB5D7A	int
,	O
0x7A2AA937	int
,	O
0xDFD15032	int
,	O
0x6780AE3B	int
,	O
0xDB5F9CD8	int
,	O
0x8BD266B0	int
,	O
0x7744AF12	int
,	O
0xB463B1B0	int
,	O
0x589629C9	int
,	O
0xE30DBC6E	int
,	O
0x880F5569	int
,	O
0x209E6E16	int
,	O
0x9DECA50C	int
,	O
0x02987A57	int
,	O
0xBED3EA57	int
,	O
0xD3A678AA	int
,	O
0x70DD030D	int
,	O
0x0CFD9C5D	int
,	O
0x92A18E99	int
,	O
0xF5740619	int
,	O
0x7F6F0A7D	int
,	O
0x134CAF9A	int
,	O
0x70F5BAE4	int
,	O
0x23DCA7B5	int
,	O
0x4D788FCD	int
,	O
0xC7F07847	int
,	O
0xBCF77DA1	int
,	O
0x9071D568	int
,	O
0xFC627EA1	int
,	O
0xAE004B77	int
,	O
0x66B54BCB	int
,	O
0x7EF2DAAC	int
,	O
0xDCD5AC30	int
,	O
0xB9BDF730	int
,	O
0x505A97A7	int
,	O
0x9D881FD3	int
,	O
0xADB796CC	int
,	O
0x94A1D202	int
,	O
0x97535D7F	int
,	O
0x31EC20C0	int
,	O
0xB1887A98	int
,	O
0xC1475069	int
,	O
0xA6F73AF3	int
,	O
0x71E4E067	int
,	O
0x46A569DE	int
,	O
0xD2ADE430	int
,	O
0x6F0762C7	int
,	O
0xF50876F4	int
,	O
0x53510542	int
,	O
0x03741C3E	int
,	O
0x53502224	int
,	O
0xD8E54D60	int
,	O
0x3C44AB1A	int
,	O
0x34972B46	int
,	O
0x74BFA89D	int
,	O
0xD7D768E0	int
,	O
0x37E605DC	int
,	O
0xE13D1BDF	int
,	O
0x5051C421	int
,	O
0xB9E057BE	int
,	O
0xB717A14C	int
,	O
0xA1730C43	int
,	O
0xB99638BE	int
,	O
0xB5D5F36D	int
,	O
0xE960D9EA	int
,	O
0x6B1388D3	int
,	O
0xECB6D3B6	int
,	O
0xBDBE8B83	int
,	O
0x2E29AFC5	int
,	O
0x764D71EC	int
,	O
0x4B8F4F43	int
,	O
0xC21DDC00	int
,	O
0xA63F657F	int
,	O
0x82678130	int
,	O
0xDBF535AC	int
,	O
0xA594FC58	int
,	O
0x942686BC	int
,	O
0xBD9B657B	int
,	O
0x4A0F9B61	int
,	O
0x44FF184F	int
,	O
0x38E10A2F	int
,	O
0x61910626	int
,	O
0x5E247636	int
,	O
0x7106D137	int
,	O
0xC62802F0	int
,	O
0xBD1D1F00	int
,	O
0x7CC0DCB2	int
,	O
0xED634909	int
,	O
0xDC13B24E	int
,	O
0x9799C499	int
,	O
0xD77E3D6A	int
,	O
0x14773B68	int
,	O
0x967A4FB7	int
,	O
0x35EECFB1	int
,	O
0x2A5110B8	int
,	O
0xE2F0AF94	int
,	O
0x9D09DEA5	int
,	O
0x20255D27	int
,	O
0x5771D34B	int
,	O
0xE1089EE4	int
,	O
0x246F330B	int
,	O
0x8F7CAEE5	int
,	O
0xD3064712	int
,	O
0x75CAFBEE	int
,	O
0xB94F7028	int
,	O
0xED953666	int
,	O
0x5D1975B4	int
,	O
0x5AF81271	int
,	O
0x13BE2025	int
,	O
0x85194659	int
,	O
0x30805331	int
,	O
0xEC9D46C0	int
,	O
0xBC027C36	int
,	O
0x2AF84188	int
,	O
0xC2141B80	int
,	O
0xC02B1E4A	int
,	O
0x04D36177	int
,	O
0xFC50E9D7	int
,	O
0x39CE79DA	int
,	O
0x917E0A00	int
,	O
0xEF7A0BF4	int
,	O
0xA98BD8D1	int
,	O
0x19424DD2	int
,	O
0x9439DF1F	int
,	O
0xC42AF746	int
,	O
0xADDBE83E	int
,	O
0x85221F0D	int
,	O
0x45563E90	int
,	O
0x9095EC52	int
,	O
0x77887B25	int
,	O
0x8AE46064	int
,	O
0xBD43B71A	int
,	O
0xBB541956	int
,	O
0x7366CF9D	int
,	O
0xEE8E1737	int
,	O
0xB5A727C9	int
,	O
0x5076B3E7	int
,	O
0xFC70BACA	int
,	O
0xCE135B75	int
,	O
0xC4E91AA3	int
,	O
0xF0341911	int
,	O
0x53430C3F	int
,	O
0x886B0824	int
,	O
0x6BB5B8B7	int
,	O
0x33E21254	int
,	O
0xF193B456	int
,	O
0x5B09617F	int
,	O
0x215FFF50	int
,	O
0x48D97EF1	int
,	O
0x356479AB	int
,	O
0x6EA9DDC4	int
,	O
0x0D352746	int
,	O
0xA2F5CE43	int
,	O
0xB226A1B3	int
,	O
0x1329EA3C	int
,	O
0x7A337CC2	int
,	O
0xB5CCE13D	int
,	O
0x563E3B5B	int
,	O
0x534E8E8F	int
,	O
0x561399C9	int
,	O
0xE1596392	int
,	O
0xB0F03125	int
,	O
0x4586645B	int
,	O
0x1F371847	int
,	O
0x94EAABD1	int
,	O
0x41F97EDD	int
,	O
0xE3E5A39B	int
,	O
0x71C774E2	int
,	O
0x507296F4	int
,	O
0x5960133B	int
,	O
0x7852C494	int
,	O
0x3F5B2691	int
,	O
0xA3F87774	int
,	O
0x5A7AF89E	int
,	O
0x17DA3F28	int
,	O
0xE9D9516D	int
,	O
0xFCC1C1D5	int
,	O
0xE4618628	int
,	O
0x04081047	int
,	O
0xD8E4DB5F	int
,	O
0xDC380416	int
,	O
0x8C4933E2	int
,	O
0x95074D53	int
,	O
0xB1B0032D	int
,	O
0xCC8102EA	int
,	O
0x71641243	int
,	O
0x98D6EB6A	int
,	O
0x90FEC945	int
,	O
0xA0914345	int
,	O
0x6FAB037D	int
,	O
0x70F49C4D	int
,	O
0x05BF5B0E	int
,	O
0x927AAF7F	int
,	O
0xA1940F61	int
,	O
0xFEE0756F	int
,	O
0xF815369F	int
,	O
0x5C00253B	int
,	O
0xF2B9762F	int
,	O
0x4AEB3CCC	int
,	O
0x1069F386	int
,	O
0xFBA4E7B9	int
,	O
0x70332665	int
,	O
0x6BCA810E	int
,	O
0x85AB8058	int
,	O
0xAE4B2B2F	int
,	O
0x9D120712	int
,	O
0xBEE8EACB	int
,	O
0x776A1112	int
}	O
;	O
void	O
__gmp_mt_recalc_buffer	function
(	O
gmp_uint_least32_t	int
mt	array
[	O
]	O
)	O
{	O
gmp_uint_least32_t	int
y	int
;	O
int	O
kk	int
;	O
for	O
(	O
kk	int
=	O
0	int
;	O
kk	int
<	O
N	int
-	O
M	int
;	O
kk	int
++	O
)	O
{	O
y	int
=	O
(	O
mt	array
[	O
kk	int
]	O
&	O
0x80000000	int
)	O
|	O
(	O
mt	array
[	O
kk	int
+	O
1	int
]	O
&	O
0x7FFFFFFF	int
)	O
;	O
mt	array
[	O
kk	int
]	O
=	O
mt	array
[	O
kk	int
+	O
M	int
]	O
^	O
(	O
y	int
>>	O
1	int
)	O
^	O
(	O
(	O
y	int
&	O
0x01	int
)	O
!=	O
0	int
?	O
MATRIX_A	int
:	O
0	int
)	O
;	O
}	O
for	O
(	O
;	O
kk	int
<	O
N	int
-	O
1	int
;	O
kk	int
++	O
)	O
{	O
y	int
=	O
(	O
mt	array
[	O
kk	int
]	O
&	O
0x80000000	int
)	O
|	O
(	O
mt	array
[	O
kk	int
+	O
1	int
]	O
&	O
0x7FFFFFFF	int
)	O
;	O
mt	array
[	O
kk	int
]	O
=	O
mt	array
[	O
kk	int
-	O
(	O
N	int
-	O
M	int
)	O
]	O
^	O
(	O
y	int
>>	O
1	int
)	O
^	O
(	O
(	O
y	int
&	O
0x01	int
)	O
!=	O
0	int
?	O
MATRIX_A	int
:	O
0	int
)	O
;	O
}	O
y	int
=	O
(	O
mt	array
[	O
N	int
-	O
1	int
]	O
&	O
0x80000000	int
)	O
|	O
(	O
mt	array
[	O
0	int
]	O
&	O
0x7FFFFFFF	int
)	O
;	O
mt	array
[	O
N	int
-	O
1	int
]	O
=	O
mt	array
[	O
M	int
-	O
1	int
]	O
^	O
(	O
y	int
>>	O
1	int
)	O
^	O
(	O
(	O
y	int
&	O
0x01	int
)	O
!=	O
0	int
?	O
MATRIX_A	int
:	O
0	int
)	O
;	O
}	O
void	O
__gmp_randget_mt	function
(	O
gmp_randstate_t	array
rstate	array
,	O
mp_ptr	pointer
dest	pointer
,	O
unsigned	O
long	O
int	O
nbits	long
)	O
{	O
gmp_uint_least32_t	int
y	int
;	O
int	O
rbits	int
;	O
mp_size_t	long
i	long
;	O
mp_size_t	long
nlimbs	long
;	O
int	O
*	O
pmti	pointer
;	O
gmp_uint_least32_t	int
*	O
mt	array
;	O
pmti	pointer
=	O
&	O
(	O
(	O
gmp_rand_mt_struct	struct
*	O
)	O
RNG_STATE	O
(	O
rstate	array
)	O
)	O
->	O
mti	int
;	O
mt	array
=	O
(	O
(	O
gmp_rand_mt_struct	struct
*	O
)	O
RNG_STATE	O
(	O
rstate	array
)	O
)	O
->	O
mt	array
;	O
nlimbs	long
=	O
nbits	long
/	O
GMP_NUMB_BITS	O
;	O
rbits	int
=	O
nbits	long
%	O
GMP_NUMB_BITS	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
nlimbs	long
;	O
i	long
++	O
)	O
{	O
NEXT_RANDOM	O
;	O
dest	pointer
[	O
i	long
]	O
=	O
(	O
mp_limb_t	long
)	O
y	int
;	O
NEXT_RANDOM	O
;	O
dest	pointer
[	O
i	long
]	O
|=	O
(	O
mp_limb_t	long
)	O
y	int
<<	O
32	int
;	O
}	O
if	O
(	O
rbits	int
)	O
{	O
if	O
(	O
rbits	int
<	O
32	int
)	O
{	O
NEXT_RANDOM	O
;	O
dest	pointer
[	O
nlimbs	long
]	O
=	O
(	O
mp_limb_t	long
)	O
(	O
y	int
&	O
~	O
(	O
ULONG_MAX	O
<<	O
rbits	int
)	O
)	O
;	O
}	O
else	O
{	O
NEXT_RANDOM	O
;	O
dest	pointer
[	O
nlimbs	long
]	O
=	O
(	O
mp_limb_t	long
)	O
y	int
;	O
if	O
(	O
rbits	int
>	O
32	int
)	O
{	O
NEXT_RANDOM	O
;	O
dest	pointer
[	O
nlimbs	long
]	O
|=	O
(	O
(	O
mp_limb_t	long
)	O
(	O
y	int
&	O
~	O
(	O
ULONG_MAX	O
<<	O
(	O
rbits	int
-	O
32	int
)	O
)	O
)	O
)	O
<<	O
32	int
;	O
}	O
}	O
}	O
}	O
void	O
__gmp_randclear_mt	function
(	O
gmp_randstate_t	array
rstate	array
)	O
{	O
(	O
*	O
__gmp_free_func	pointer
)	O
(	O
(	O
void	O
*	O
)	O
RNG_STATE	O
(	O
rstate	array
)	O
,	O
ALLOC	O
(	O
rstate	array
->	O
_mp_seed	array
)	O
*	O
BYTES_PER_MP_LIMB	int
)	O
;	O
}	O
void	O
__gmp_randiset_mt	function
(	O
gmp_randstate_ptr	pointer
,	O
gmp_randstate_srcptr	pointer
)	O
;	O
static	O
const	O
gmp_randfnptr_t	struct
Mersenne_Twister_Generator_Noseed	struct
=	O
{	O
NULL	O
,	O
__gmp_randget_mt	function
,	O
__gmp_randclear_mt	function
,	O
__gmp_randiset_mt	function
}	O
;	O
void	O
__gmp_randiset_mt	function
(	O
gmp_randstate_ptr	pointer
dst	pointer
,	O
gmp_randstate_srcptr	pointer
src	pointer
)	O
{	O
const	O
mp_size_t	long
sz	long
=	O
(	O
(	O
sizeof	O
(	O
gmp_rand_mt_struct	struct
)	O
-	O
1	int
)	O
/	O
BYTES_PER_MP_LIMB	int
)	O
+	O
1	int
;	O
gmp_rand_mt_struct	struct
*	O
dstp	pointer
,	O
*	O
srcp	pointer
;	O
mp_size_t	long
i	long
;	O
RNG_FNPTR	O
(	O
dst	pointer
)	O
=	O
(	O
void	O
*	O
)	O
&	O
Mersenne_Twister_Generator_Noseed	struct
;	O
dstp	pointer
=	O
(	O
gmp_rand_mt_struct	struct
*	O
)	O
__GMP_ALLOCATE_FUNC_LIMBS	O
(	O
sz	long
)	O
;	O
RNG_STATE	O
(	O
dst	pointer
)	O
=	O
(	O
mp_ptr	pointer
)	O
dstp	pointer
;	O
ALLOC	O
(	O
dst	pointer
->	O
_mp_seed	array
)	O
=	O
sz	long
;	O
srcp	pointer
=	O
(	O
gmp_rand_mt_struct	struct
*	O
)	O
RNG_STATE	O
(	O
src	pointer
)	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
N	int
;	O
i	long
++	O
)	O
dstp	pointer
->	O
mt	array
[	O
i	long
]	O
=	O
srcp	pointer
->	O
mt	array
[	O
i	long
]	O
;	O
dstp	pointer
->	O
mti	int
=	O
srcp	pointer
->	O
mti	int
;	O
}	O
void	O
__gmp_randinit_mt_noseed	function
(	O
gmp_randstate_ptr	pointer
dst	pointer
)	O
{	O
const	O
mp_size_t	long
sz	long
=	O
(	O
(	O
sizeof	O
(	O
gmp_rand_mt_struct	struct
)	O
-	O
1	int
)	O
/	O
BYTES_PER_MP_LIMB	int
)	O
+	O
1	int
;	O
gmp_rand_mt_struct	struct
*	O
dstp	pointer
;	O
mp_size_t	long
i	long
;	O
RNG_FNPTR	O
(	O
dst	pointer
)	O
=	O
(	O
void	O
*	O
)	O
&	O
Mersenne_Twister_Generator_Noseed	struct
;	O
dstp	pointer
=	O
(	O
gmp_rand_mt_struct	struct
*	O
)	O
__GMP_ALLOCATE_FUNC_LIMBS	O
(	O
sz	long
)	O
;	O
RNG_STATE	O
(	O
dst	pointer
)	O
=	O
(	O
mp_ptr	pointer
)	O
dstp	pointer
;	O
ALLOC	O
(	O
dst	pointer
->	O
_mp_seed	array
)	O
=	O
sz	long
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
N	int
;	O
i	long
++	O
)	O
dstp	pointer
->	O
mt	array
[	O
i	long
]	O
=	O
default_state	array
[	O
i	long
]	O
;	O
dstp	pointer
->	O
mti	int
=	O
WARM_UP	int
%	O
N	int
;	O
}	O
