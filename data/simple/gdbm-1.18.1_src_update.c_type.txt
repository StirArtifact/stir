static	O
int	O
write_header	function
(	O
GDBM_FILE	pointer
dbf	pointer
)	O
{	O
off_t	long
file_pos	long
;	O
int	O
rc	int
;	O
file_pos	long
=	O
gdbm_file_seek	function
(	O
dbf	pointer
,	O
0L	int
,	O
SEEK_SET	int
)	O
;	O
if	O
(	O
file_pos	long
!=	O
0	int
)	O
{	O
GDBM_SET_ERRNO2	O
(	O
dbf	pointer
,	O
GDBM_FILE_SEEK_ERROR	int
,	O
TRUE	int
,	O
GDBM_DEBUG_STORE	O
)	O
;	O
_gdbm_fatal	function
(	O
dbf	pointer
,	O
_	O
(	O
"lseek error"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
_gdbm_full_write	function
(	O
dbf	pointer
,	O
dbf	pointer
->	O
header	pointer
,	O
dbf	pointer
->	O
header	pointer
->	O
block_size	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
GDBM_DEBUG	O
(	O
GDBM_DEBUG_STORE	O
|	O
GDBM_DEBUG_ERR	O
,	O
"%s: error writing header: %s"	pointer
,	O
dbf	pointer
->	O
name	pointer
,	O
gdbm_db_strerror	function
(	O
dbf	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
dbf	pointer
->	O
fast_write	int
==	O
FALSE	int
)	O
gdbm_file_sync	function
(	O
dbf	pointer
)	O
;	O
return	O
0	int
;	O
}	O
int	O
_gdbm_end_update	function
(	O
GDBM_FILE	pointer
dbf	pointer
)	O
{	O
off_t	long
file_pos	long
;	O
int	O
rc	int
;	O
if	O
(	O
dbf	pointer
->	O
bucket_changed	int
&&	O
(	O
dbf	pointer
->	O
cache_entry	pointer
!=	O
NULL	O
)	O
)	O
{	O
if	O
(	O
_gdbm_write_bucket	function
(	O
dbf	pointer
,	O
dbf	pointer
->	O
cache_entry	pointer
)	O
)	O
return	O
-	O
1	int
;	O
dbf	pointer
->	O
bucket_changed	int
=	O
FALSE	int
;	O
}	O
if	O
(	O
dbf	pointer
->	O
second_changed	int
)	O
{	O
if	O
(	O
dbf	pointer
->	O
bucket_cache	pointer
!=	O
NULL	O
)	O
{	O
int	O
index	function
;	O
for	O
(	O
index	function
=	O
0	int
;	O
index	function
<	O
dbf	pointer
->	O
cache_size	long
;	O
index	function
++	O
)	O
{	O
if	O
(	O
dbf	pointer
->	O
bucket_cache	pointer
[	O
index	function
]	O
.	O
ca_changed	char
)	O
{	O
if	O
(	O
_gdbm_write_bucket	function
(	O
dbf	pointer
,	O
&	O
dbf	pointer
->	O
bucket_cache	pointer
[	O
index	function
]	O
)	O
)	O
return	O
-	O
1	int
;	O
}	O
}	O
}	O
dbf	pointer
->	O
second_changed	int
=	O
FALSE	int
;	O
}	O
if	O
(	O
dbf	pointer
->	O
directory_changed	int
)	O
{	O
file_pos	long
=	O
gdbm_file_seek	function
(	O
dbf	pointer
,	O
dbf	pointer
->	O
header	pointer
->	O
dir	long
,	O
SEEK_SET	int
)	O
;	O
if	O
(	O
file_pos	long
!=	O
dbf	pointer
->	O
header	pointer
->	O
dir	long
)	O
{	O
GDBM_SET_ERRNO2	O
(	O
dbf	pointer
,	O
GDBM_FILE_SEEK_ERROR	int
,	O
TRUE	int
,	O
GDBM_DEBUG_STORE	O
)	O
;	O
_gdbm_fatal	function
(	O
dbf	pointer
,	O
_	O
(	O
"lseek error"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
rc	int
=	O
_gdbm_full_write	function
(	O
dbf	pointer
,	O
dbf	pointer
->	O
dir	long
,	O
dbf	pointer
->	O
header	pointer
->	O
dir_size	int
)	O
;	O
if	O
(	O
rc	int
)	O
{	O
GDBM_DEBUG	O
(	O
GDBM_DEBUG_STORE	O
|	O
GDBM_DEBUG_ERR	O
,	O
"%s: error writing directory: %s"	pointer
,	O
dbf	pointer
->	O
name	pointer
,	O
gdbm_db_strerror	function
(	O
dbf	pointer
)	O
)	O
;	O
_gdbm_fatal	function
(	O
dbf	pointer
,	O
gdbm_db_strerror	function
(	O
dbf	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
dbf	pointer
->	O
directory_changed	int
=	O
FALSE	int
;	O
if	O
(	O
!	O
dbf	pointer
->	O
header_changed	int
&&	O
dbf	pointer
->	O
fast_write	int
==	O
FALSE	int
)	O
gdbm_file_sync	function
(	O
dbf	pointer
)	O
;	O
}	O
if	O
(	O
dbf	pointer
->	O
header_changed	int
)	O
{	O
if	O
(	O
write_header	function
(	O
dbf	pointer
)	O
)	O
return	O
-	O
1	int
;	O
if	O
(	O
_gdbm_file_extend	function
(	O
dbf	pointer
,	O
dbf	pointer
->	O
header	pointer
->	O
next_block	long
)	O
)	O
return	O
-	O
1	int
;	O
dbf	pointer
->	O
header_changed	int
=	O
FALSE	int
;	O
}	O
return	O
0	int
;	O
}	O
void	O
_gdbm_fatal	function
(	O
GDBM_FILE	pointer
dbf	pointer
,	O
const	O
char	O
*	O
val	pointer
)	O
{	O
if	O
(	O
dbf	pointer
&&	O
dbf	pointer
->	O
fatal_err	pointer
)	O
{	O
(	O
*	O
dbf	pointer
->	O
fatal_err	pointer
)	O
(	O
val	pointer
)	O
;	O
exit	function
(	O
1	int
)	O
;	O
}	O
}	O
