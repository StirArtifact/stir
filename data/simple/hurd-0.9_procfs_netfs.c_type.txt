char	O
*	O
netfs_server_name	pointer
=	O
PROCFS_SERVER_NAME	pointer
;	O
char	O
*	O
netfs_server_version	pointer
=	O
PROCFS_SERVER_VERSION	pointer
;	O
int	O
netfs_maxsymlinks	int
=	O
PROCFS_MAXSYMLINKS	int
;	O
error_t	O
netfs_validate_stat	function
(	O
struct	O
node	O
*	O
np	pointer
,	O
struct	O
iouser	O
*	O
cred	pointer
)	O
{	O
char	O
*	O
contents	pointer
;	O
ssize_t	O
contents_len	int
;	O
error_t	O
err	O
;	O
if	O
(	O
!	O
S_ISLNK	function
(	O
np	pointer
->	O
nn_stat	O
.	O
st_mode	O
)	O
)	O
return	O
0	int
;	O
err	O
=	O
procfs_get_contents	function
(	O
np	pointer
,	O
&	O
contents	pointer
,	O
&	O
contents_len	int
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
np	pointer
->	O
nn_stat	O
.	O
st_size	O
=	O
contents_len	int
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_read	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
loff_t	O
offset	int
,	O
size_t	O
*	O
len	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
char	O
*	O
contents	pointer
;	O
ssize_t	O
contents_len	int
;	O
error_t	O
err	O
;	O
if	O
(	O
offset	int
==	O
0	int
)	O
procfs_refresh	function
(	O
np	pointer
)	O
;	O
err	O
=	O
procfs_get_contents	function
(	O
np	pointer
,	O
&	O
contents	pointer
,	O
&	O
contents_len	int
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
contents	pointer
+=	O
offset	int
;	O
contents_len	int
-=	O
offset	int
;	O
if	O
(	O
*	O
len	pointer
>	O
contents_len	int
)	O
*	O
len	pointer
=	O
contents_len	int
;	O
if	O
(	O
*	O
len	pointer
<	O
0	int
)	O
*	O
len	pointer
=	O
0	int
;	O
memcpy	O
(	O
data	pointer
,	O
contents	pointer
,	O
*	O
len	pointer
)	O
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_readlink	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
char	O
*	O
buf	pointer
)	O
{	O
char	O
*	O
contents	pointer
;	O
ssize_t	O
contents_len	int
;	O
error_t	O
err	O
;	O
err	O
=	O
procfs_get_contents	function
(	O
np	pointer
,	O
&	O
contents	pointer
,	O
&	O
contents_len	int
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
assert	function
(	O
contents_len	int
==	O
np	pointer
->	O
nn_stat	O
.	O
st_size	O
)	O
;	O
memcpy	O
(	O
buf	pointer
,	O
contents	pointer
,	O
contents_len	int
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
putentries	function
(	O
char	O
*	O
contents	pointer
,	O
size_t	O
contents_len	int
,	O
int	O
nentries	int
,	O
char	O
*	O
data	pointer
,	O
mach_msg_type_number_t	O
*	O
datacnt	pointer
)	O
{	O
int	O
i	int
;	O
*	O
datacnt	pointer
=	O
0	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
contents_len	int
&&	O
(	O
nentries	int
<	O
0	int
||	O
i	int
<	O
nentries	int
)	O
;	O
i	int
++	O
)	O
{	O
int	O
namlen	int
=	O
strlen	O
(	O
contents	pointer
)	O
;	O
int	O
reclen	int
=	O
sizeof	O
(	O
struct	O
dirent	O
)	O
+	O
namlen	int
;	O
if	O
(	O
data	pointer
)	O
{	O
struct	O
dirent	O
*	O
d	pointer
=	O
(	O
struct	O
dirent	O
*	O
)	O
(	O
data	pointer
+	O
*	O
datacnt	pointer
)	O
;	O
d	pointer
->	O
d_fileno	O
=	O
42	int
;	O
d	pointer
->	O
d_namlen	O
=	O
namlen	int
;	O
d	pointer
->	O
d_reclen	O
=	O
reclen	int
;	O
d	pointer
->	O
d_type	O
=	O
DT_UNKNOWN	O
;	O
strcpy	O
(	O
d	pointer
->	O
d_name	O
,	O
contents	pointer
)	O
;	O
}	O
*	O
datacnt	pointer
+=	O
reclen	int
;	O
contents	pointer
+=	O
namlen	int
+	O
1	int
;	O
contents_len	int
-=	O
namlen	int
+	O
1	int
;	O
}	O
return	O
i	int
;	O
}	O
error_t	O
netfs_get_dirents	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
int	O
entry	int
,	O
int	O
nentries	int
,	O
char	O
*	O
*	O
data	pointer
,	O
mach_msg_type_number_t	O
*	O
datacnt	pointer
,	O
vm_size_t	O
bufsize	int
,	O
int	O
*	O
amt	pointer
)	O
{	O
char	O
*	O
contents	pointer
;	O
ssize_t	O
contents_len	int
;	O
error_t	O
err	O
;	O
if	O
(	O
entry	int
==	O
0	int
)	O
procfs_refresh	function
(	O
dir	pointer
)	O
;	O
err	O
=	O
procfs_get_contents	function
(	O
dir	pointer
,	O
&	O
contents	pointer
,	O
&	O
contents_len	int
)	O
;	O
if	O
(	O
err	O
)	O
return	O
err	O
;	O
assert	function
(	O
contents_len	int
==	O
0	int
||	O
contents	pointer
[	O
contents_len	int
-	O
1	int
]	O
==	O
'\0'	O
)	O
;	O
while	O
(	O
contents_len	int
&&	O
entry	int
--	O
)	O
{	O
int	O
ofs	int
=	O
strlen	O
(	O
contents	pointer
)	O
+	O
1	int
;	O
contents	pointer
+=	O
ofs	int
;	O
contents_len	int
-=	O
ofs	int
;	O
}	O
putentries	function
(	O
contents	pointer
,	O
contents_len	int
,	O
nentries	int
,	O
NULL	O
,	O
datacnt	pointer
)	O
;	O
if	O
(	O
bufsize	int
<	O
*	O
datacnt	pointer
)	O
{	O
char	O
*	O
n	pointer
=	O
mmap	function
(	O
0	int
,	O
*	O
datacnt	pointer
,	O
PROT_READ	O
|	O
PROT_WRITE	O
,	O
MAP_ANONYMOUS	O
,	O
0	int
,	O
0	int
)	O
;	O
if	O
(	O
n	pointer
==	O
MAP_FAILED	O
)	O
return	O
ENOMEM	O
;	O
*	O
data	pointer
=	O
n	pointer
;	O
}	O
*	O
amt	pointer
=	O
putentries	function
(	O
contents	pointer
,	O
contents_len	int
,	O
nentries	int
,	O
*	O
data	pointer
,	O
datacnt	pointer
)	O
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_lookup	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
char	O
*	O
name	pointer
,	O
struct	O
node	O
*	O
*	O
np	pointer
)	O
{	O
error_t	O
err	O
;	O
err	O
=	O
procfs_lookup	function
(	O
dir	pointer
,	O
name	pointer
,	O
np	pointer
)	O
;	O
pthread_mutex_unlock	function
(	O
&	O
dir	pointer
->	O
lock	O
)	O
;	O
if	O
(	O
!	O
err	O
)	O
pthread_mutex_lock	function
(	O
&	O
(	O
*	O
np	pointer
)	O
->	O
lock	O
)	O
;	O
return	O
err	O
;	O
}	O
void	O
netfs_node_norefs	function
(	O
struct	O
node	O
*	O
np	pointer
)	O
{	O
procfs_cleanup	function
(	O
np	pointer
)	O
;	O
free	function
(	O
np	pointer
)	O
;	O
}	O
error_t	O
netfs_get_translator	function
(	O
struct	O
node	O
*	O
np	pointer
,	O
char	O
*	O
*	O
argz	pointer
,	O
size_t	O
*	O
argz_len	pointer
)	O
{	O
return	O
procfs_get_translator	function
(	O
np	pointer
,	O
argz	pointer
,	O
argz_len	pointer
)	O
;	O
}	O
error_t	O
netfs_check_open_permissions	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
int	O
flags	int
,	O
int	O
newnode	int
)	O
{	O
error_t	O
err	O
=	O
0	int
;	O
if	O
(	O
!	O
err	O
&&	O
(	O
flags	int
&	O
O_READ	O
)	O
)	O
err	O
=	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IREAD	O
,	O
user	pointer
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
(	O
flags	int
&	O
O_WRITE	O
)	O
)	O
err	O
=	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IWRITE	O
,	O
user	pointer
)	O
;	O
if	O
(	O
!	O
err	O
&&	O
(	O
flags	int
&	O
O_EXEC	O
)	O
)	O
err	O
=	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IEXEC	O
,	O
user	pointer
)	O
;	O
return	O
err	O
;	O
}	O
error_t	O
netfs_report_access	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
int	O
*	O
types	pointer
)	O
{	O
*	O
types	pointer
=	O
0	int
;	O
if	O
(	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IREAD	O
,	O
cred	pointer
)	O
==	O
0	int
)	O
*	O
types	pointer
|=	O
O_READ	O
;	O
if	O
(	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IWRITE	O
,	O
cred	pointer
)	O
==	O
0	int
)	O
*	O
types	pointer
|=	O
O_WRITE	O
;	O
if	O
(	O
fshelp_access	function
(	O
&	O
np	pointer
->	O
nn_stat	O
,	O
S_IEXEC	O
,	O
cred	pointer
)	O
==	O
0	int
)	O
*	O
types	pointer
|=	O
O_EXEC	O
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_chown	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
uid_t	O
uid	int
,	O
uid_t	O
gid	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_chauthor	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
uid_t	O
author	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_chmod	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
mode_t	O
mode	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_mksymlink	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_mkdev	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
mode_t	O
type	int
,	O
dev_t	O
indexes	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_chflags	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
int	O
flags	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_utimes	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
struct	O
timespec	O
*	O
atime	pointer
,	O
struct	O
timespec	O
*	O
mtime	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_set_size	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
loff_t	O
size	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_statfs	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
fsys_statfsbuf_t	O
*	O
st	pointer
)	O
{	O
memset	O
(	O
st	pointer
,	O
0	int
,	O
sizeof	O
*	O
st	pointer
)	O
;	O
st	pointer
->	O
f_type	O
=	O
FSTYPE_PROC	O
;	O
st	pointer
->	O
f_fsid	O
=	O
getpid	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_sync	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
int	O
wait	int
)	O
{	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_syncfs	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
int	O
wait	int
)	O
{	O
return	O
0	int
;	O
}	O
error_t	O
netfs_attempt_unlink	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_rename	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
fromdir	pointer
,	O
char	O
*	O
fromname	pointer
,	O
struct	O
node	O
*	O
todir	pointer
,	O
char	O
*	O
toname	pointer
,	O
int	O
excl	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_mkdir	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
char	O
*	O
name	pointer
,	O
mode_t	O
mode	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_rmdir	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
char	O
*	O
name	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_link	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
struct	O
node	O
*	O
file	pointer
,	O
char	O
*	O
name	pointer
,	O
int	O
excl	int
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_mkfile	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
mode_t	O
mode	int
,	O
struct	O
node	O
*	O
*	O
np	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_create_file	function
(	O
struct	O
iouser	O
*	O
user	pointer
,	O
struct	O
node	O
*	O
dir	pointer
,	O
char	O
*	O
name	pointer
,	O
mode_t	O
mode	int
,	O
struct	O
node	O
*	O
*	O
np	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
error_t	O
netfs_attempt_write	function
(	O
struct	O
iouser	O
*	O
cred	pointer
,	O
struct	O
node	O
*	O
np	pointer
,	O
loff_t	O
offset	int
,	O
size_t	O
*	O
len	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
return	O
EROFS	O
;	O
}	O
