static	O
bool	enum
parse_page_type	function
(	O
const	O
char	O
*	O
pagesize	pointer
,	O
const	O
plPageData	struct
*	O
*	O
pagedata	pointer
,	O
double	O
*	O
xoffset	pointer
,	O
double	O
*	O
yoffset	pointer
,	O
double	O
*	O
xorigin	int
,	O
double	O
*	O
yorigin	int
,	O
double	O
*	O
xsize	double
,	O
double	O
*	O
ysize	double
)	O
;	O
static	O
bool	enum
string_to_inches	function
(	O
const	O
char	O
*	O
string	pointer
,	O
double	O
*	O
inches	pointer
)	O
;	O
void	O
_set_page_type	function
(	O
plPlotterData	struct
*	O
data	pointer
)	O
{	O
const	O
char	O
*	O
pagesize	pointer
;	O
const	O
plPageData	struct
*	O
pagedata	pointer
;	O
double	O
viewport_xoffset	double
,	O
viewport_yoffset	double
;	O
double	O
viewport_xorigin	double
,	O
viewport_yorigin	double
;	O
double	O
viewport_xsize	double
,	O
viewport_ysize	double
;	O
pagesize	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_get_plot_param	function
(	O
data	pointer
,	O
"PAGESIZE"	pointer
)	O
;	O
if	O
(	O
!	O
parse_page_type	function
(	O
pagesize	pointer
,	O
&	O
pagedata	pointer
,	O
&	O
viewport_xoffset	double
,	O
&	O
viewport_yoffset	double
,	O
&	O
viewport_xorigin	double
,	O
&	O
viewport_yorigin	double
,	O
&	O
viewport_xsize	double
,	O
&	O
viewport_ysize	double
)	O
)	O
{	O
pagesize	pointer
=	O
(	O
const	O
char	O
*	O
)	O
_get_default_plot_param	function
(	O
"PAGESIZE"	pointer
)	O
;	O
parse_page_type	function
(	O
pagesize	pointer
,	O
&	O
pagedata	pointer
,	O
&	O
viewport_xoffset	double
,	O
&	O
viewport_yoffset	double
,	O
&	O
viewport_xorigin	double
,	O
&	O
viewport_yorigin	double
,	O
&	O
viewport_xsize	double
,	O
&	O
viewport_ysize	double
)	O
;	O
}	O
data	pointer
->	O
page_data	pointer
=	O
pagedata	pointer
;	O
data	pointer
->	O
viewport_xoffset	double
=	O
viewport_xoffset	double
;	O
data	pointer
->	O
viewport_yoffset	double
=	O
viewport_yoffset	double
;	O
data	pointer
->	O
viewport_xorigin	double
=	O
viewport_xorigin	double
;	O
data	pointer
->	O
viewport_yorigin	double
=	O
viewport_yorigin	double
;	O
data	pointer
->	O
viewport_xsize	double
=	O
viewport_xsize	double
;	O
data	pointer
->	O
viewport_ysize	double
=	O
viewport_ysize	double
;	O
}	O
static	O
bool	enum
parse_page_type	function
(	O
const	O
char	O
*	O
pagesize	pointer
,	O
const	O
plPageData	struct
*	O
*	O
pagedata	pointer
,	O
double	O
*	O
xoffset	pointer
,	O
double	O
*	O
yoffset	pointer
,	O
double	O
*	O
xorigin	int
,	O
double	O
*	O
yorigin	int
,	O
double	O
*	O
xsize	double
,	O
double	O
*	O
ysize	double
)	O
{	O
const	O
plPageData	struct
*	O
local_pagedata	pointer
=	O
_pagedata	array
;	O
char	O
*	O
viewport_pagesize	pointer
,	O
*	O
first	pointer
,	O
*	O
next	pointer
;	O
char	O
xoffset_s	array
[	O
32	int
]	O
,	O
yoffset_s	array
[	O
32	int
]	O
;	O
char	O
xorigin_s	array
[	O
32	int
]	O
,	O
yorigin_s	array
[	O
32	int
]	O
;	O
char	O
xsize_s	array
[	O
32	int
]	O
,	O
ysize_s	array
[	O
32	int
]	O
;	O
bool	enum
anotherfield	enum
,	O
success	enum
;	O
bool	enum
got_xoffset	enum
=	O
false	int
,	O
got_yoffset	enum
=	O
false	int
;	O
bool	enum
got_xorigin	enum
=	O
false	int
,	O
got_yorigin	enum
=	O
false	int
;	O
bool	enum
got_xsize	enum
=	O
false	int
,	O
got_ysize	enum
=	O
false	int
;	O
int	O
i	int
;	O
viewport_pagesize	pointer
=	O
(	O
char	O
*	O
)	O
_pl_xmalloc	function
(	O
strlen	function
(	O
pagesize	pointer
)	O
+	O
1	int
)	O
;	O
strcpy	function
(	O
viewport_pagesize	pointer
,	O
pagesize	pointer
)	O
;	O
first	pointer
=	O
viewport_pagesize	pointer
;	O
next	pointer
=	O
strchr	function
(	O
viewport_pagesize	pointer
,	O
(	O
int	O
)	O
','	O
)	O
;	O
if	O
(	O
next	pointer
)	O
{	O
anotherfield	enum
=	O
true	int
;	O
*	O
next	pointer
=	O
'\0'	O
;	O
next	pointer
++	O
;	O
}	O
else	O
anotherfield	enum
=	O
false	int
;	O
success	enum
=	O
false	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
PL_NUM_PAGESIZES	int
;	O
i	int
++	O
,	O
local_pagedata	pointer
++	O
)	O
if	O
(	O
strcasecmp	function
(	O
local_pagedata	pointer
->	O
name	pointer
,	O
viewport_pagesize	pointer
)	O
==	O
0	int
||	O
(	O
local_pagedata	pointer
->	O
alt_name	pointer
&&	O
strcasecmp	function
(	O
local_pagedata	pointer
->	O
alt_name	pointer
,	O
viewport_pagesize	pointer
)	O
==	O
0	int
)	O
)	O
{	O
success	enum
=	O
true	int
;	O
break	O
;	O
}	O
if	O
(	O
success	enum
)	O
{	O
*	O
pagedata	pointer
=	O
local_pagedata	pointer
;	O
while	O
(	O
anotherfield	enum
&&	O
*	O
next	pointer
)	O
{	O
first	pointer
=	O
next	pointer
;	O
next	pointer
=	O
strchr	function
(	O
next	pointer
,	O
(	O
int	O
)	O
','	O
)	O
;	O
if	O
(	O
next	pointer
)	O
{	O
anotherfield	enum
=	O
true	int
;	O
*	O
next	pointer
=	O
'\0'	O
;	O
next	pointer
++	O
;	O
}	O
else	O
anotherfield	enum
=	O
false	int
;	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"xoffset = %31s"	pointer
,	O
xoffset_s	array
)	O
==	O
1	int
)	O
got_xoffset	enum
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"yoffset = %31s"	pointer
,	O
yoffset_s	array
)	O
==	O
1	int
)	O
got_yoffset	enum
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"xorigin = %31s"	pointer
,	O
xorigin_s	array
)	O
==	O
1	int
)	O
got_xorigin	enum
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"yorigin = %31s"	pointer
,	O
yorigin_s	array
)	O
==	O
1	int
)	O
got_yorigin	enum
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"xsize = %31s"	pointer
,	O
xsize_s	array
)	O
==	O
1	int
)	O
got_xsize	enum
=	O
true	int
;	O
else	O
if	O
(	O
sscanf	function
(	O
first	pointer
,	O
"ysize = %31s"	pointer
,	O
ysize_s	array
)	O
==	O
1	int
)	O
got_ysize	enum
=	O
true	int
;	O
}	O
{	O
double	O
viewport_xsize	double
,	O
viewport_ysize	double
;	O
double	O
viewport_xorigin	double
,	O
viewport_yorigin	double
;	O
double	O
viewport_xoffset	double
,	O
viewport_yoffset	double
;	O
if	O
(	O
!	O
(	O
got_xsize	enum
&&	O
string_to_inches	function
(	O
xsize_s	array
,	O
&	O
viewport_xsize	double
)	O
)	O
)	O
viewport_xsize	double
=	O
local_pagedata	pointer
->	O
default_viewport_size	double
;	O
if	O
(	O
!	O
(	O
got_ysize	enum
&&	O
string_to_inches	function
(	O
ysize_s	array
,	O
&	O
viewport_ysize	double
)	O
)	O
)	O
viewport_ysize	double
=	O
local_pagedata	pointer
->	O
default_viewport_size	double
;	O
if	O
(	O
!	O
(	O
got_xorigin	enum
&&	O
string_to_inches	function
(	O
xorigin_s	array
,	O
&	O
viewport_xorigin	double
)	O
)	O
)	O
viewport_xorigin	double
=	O
0.5	int
*	O
(	O
local_pagedata	pointer
->	O
xsize	double
-	O
viewport_xsize	double
)	O
;	O
if	O
(	O
!	O
(	O
got_yorigin	enum
&&	O
string_to_inches	function
(	O
yorigin_s	array
,	O
&	O
viewport_yorigin	double
)	O
)	O
)	O
viewport_yorigin	double
=	O
0.5	int
*	O
(	O
local_pagedata	pointer
->	O
ysize	double
-	O
viewport_ysize	double
)	O
;	O
if	O
(	O
!	O
(	O
got_xoffset	enum
&&	O
string_to_inches	function
(	O
xoffset_s	array
,	O
&	O
viewport_xoffset	double
)	O
)	O
)	O
viewport_xoffset	double
=	O
0.0	int
;	O
if	O
(	O
!	O
(	O
got_yoffset	enum
&&	O
string_to_inches	function
(	O
yoffset_s	array
,	O
&	O
viewport_yoffset	double
)	O
)	O
)	O
viewport_yoffset	double
=	O
0.0	int
;	O
*	O
xsize	double
=	O
viewport_xsize	double
;	O
*	O
ysize	double
=	O
viewport_ysize	double
;	O
*	O
xorigin	int
=	O
viewport_xorigin	double
;	O
*	O
yorigin	int
=	O
viewport_yorigin	double
;	O
*	O
xoffset	pointer
=	O
viewport_xoffset	double
;	O
*	O
yoffset	pointer
=	O
viewport_yoffset	double
;	O
}	O
}	O
free	function
(	O
viewport_pagesize	pointer
)	O
;	O
return	O
success	enum
;	O
}	O
static	O
bool	enum
string_to_inches	function
(	O
const	O
char	O
*	O
string	pointer
,	O
double	O
*	O
inches	pointer
)	O
{	O
double	O
val	double
;	O
char	O
s	pointer
[	O
4	int
]	O
;	O
if	O
(	O
sscanf	function
(	O
string	pointer
,	O
"%lf %3s"	pointer
,	O
&	O
val	double
,	O
s	pointer
)	O
==	O
2	int
)	O
{	O
if	O
(	O
strlen	function
(	O
s	pointer
)	O
>	O
2	int
)	O
return	O
false	int
;	O
if	O
(	O
strcmp	function
(	O
s	pointer
,	O
"in"	pointer
)	O
==	O
0	int
)	O
{	O
*	O
inches	pointer
=	O
val	double
;	O
return	O
true	int
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
s	pointer
,	O
"cm"	pointer
)	O
==	O
0	int
)	O
{	O
*	O
inches	pointer
=	O
val	double
/	O
2.54	int
;	O
return	O
true	int
;	O
}	O
else	O
if	O
(	O
strcmp	function
(	O
s	pointer
,	O
"mm"	pointer
)	O
==	O
0	int
)	O
{	O
*	O
inches	pointer
=	O
val	double
/	O
25.4	int
;	O
return	O
true	int
;	O
}	O
}	O
return	O
false	int
;	O
}	O
