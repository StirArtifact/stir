int	O
fprintf	function
(	O
FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
char	O
buf	array
[	O
2000	int
]	O
;	O
char	O
*	O
output	pointer
;	O
size_t	long
len	long
;	O
size_t	long
lenbuf	long
=	O
sizeof	O
(	O
buf	array
)	O
;	O
va_list	array
args	array
;	O
va_start	O
(	O
args	array
,	O
format	pointer
)	O
;	O
output	pointer
=	O
vasnprintf	function
(	O
buf	array
,	O
&	O
lenbuf	long
,	O
format	pointer
,	O
args	array
)	O
;	O
len	long
=	O
lenbuf	long
;	O
va_end	O
(	O
args	array
)	O
;	O
if	O
(	O
!	O
output	pointer
)	O
{	O
fseterr	function
(	O
fp	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
fwrite	function
(	O
output	pointer
,	O
1	int
,	O
len	long
,	O
fp	pointer
)	O
<	O
len	long
)	O
{	O
if	O
(	O
output	pointer
!=	O
buf	array
)	O
{	O
int	O
saved_errno	int
=	O
errno	O
;	O
free	function
(	O
output	pointer
)	O
;	O
errno	O
=	O
saved_errno	int
;	O
}	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
output	pointer
!=	O
buf	array
)	O
free	function
(	O
output	pointer
)	O
;	O
if	O
(	O
len	long
>	O
INT_MAX	O
)	O
{	O
errno	O
=	O
EOVERFLOW	int
;	O
fseterr	function
(	O
fp	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
return	O
len	long
;	O
}	O
