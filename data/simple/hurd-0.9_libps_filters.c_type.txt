static	O
int	O
ps_own_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
static	O
int	O
own_uid	int
=	O
-	O
2	int
;	O
if	O
(	O
own_uid	int
==	O
-	O
2	int
)	O
own_uid	int
=	O
getuid	function
(	O
)	O
;	O
return	O
own_uid	int
>=	O
0	int
&&	O
own_uid	int
==	O
proc_stat_owner_uid	function
(	O
ps	pointer
)	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_own_filter	struct
=	O
{	O
"own"	pointer
,	O
PSTAT_OWNER_UID	O
,	O
ps_own_p	function
}	O
;	O
static	O
int	O
ps_not_leader_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
return	O
!	O
(	O
proc_stat_state	function
(	O
ps	pointer
)	O
&	O
(	O
PSTAT_STATE_P_SESSLDR	O
|	O
PSTAT_STATE_P_LOGINLDR	O
)	O
)	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_not_leader_filter	struct
=	O
{	O
"not-sess-leader"	pointer
,	O
PSTAT_STATE	O
,	O
ps_not_leader_p	function
}	O
;	O
static	O
int	O
ps_unorphaned_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
int	O
state	int
=	O
proc_stat_state	function
(	O
ps	pointer
)	O
;	O
return	O
!	O
(	O
state	int
&	O
PSTAT_STATE_P_ORPHAN	O
)	O
||	O
(	O
state	int
&	O
(	O
PSTAT_STATE_P_SESSLDR	O
|	O
PSTAT_STATE_P_LOGINLDR	O
)	O
)	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_unorphaned_filter	struct
=	O
{	O
"unorphaned"	pointer
,	O
PSTAT_STATE	O
,	O
ps_unorphaned_p	function
}	O
;	O
static	O
int	O
ps_ctty_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
return	O
proc_stat_cttyid	function
(	O
ps	pointer
)	O
!=	O
MACH_PORT_NULL	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_ctty_filter	struct
=	O
{	O
"ctty"	pointer
,	O
PSTAT_CTTYID	O
,	O
ps_ctty_p	function
}	O
;	O
static	O
int	O
ps_parent_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
return	O
!	O
(	O
proc_stat_state	function
(	O
ps	pointer
)	O
&	O
PSTAT_STATE_P_NOPARENT	O
)	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_parent_filter	struct
=	O
{	O
"parent"	pointer
,	O
PSTAT_STATE	O
,	O
ps_parent_p	function
}	O
;	O
static	O
int	O
ps_alive_p	function
(	O
struct	O
proc_stat	O
*	O
ps	pointer
)	O
{	O
ps_flags_t	O
test_flag	O
=	O
proc_stat_is_thread	O
(	O
ps	pointer
)	O
?	O
PSTAT_THREAD_BASIC	O
:	O
PSTAT_PROC_INFO	O
;	O
if	O
(	O
proc_stat_has	function
(	O
ps	pointer
,	O
test_flag	O
)	O
)	O
return	O
1	int
;	O
proc_stat_set_flags	function
(	O
ps	pointer
,	O
test_flag	O
)	O
;	O
return	O
proc_stat_has	function
(	O
ps	pointer
,	O
test_flag	O
)	O
;	O
}	O
const	O
struct	O
ps_filter	O
ps_alive_filter	struct
=	O
{	O
"alive"	pointer
,	O
0	int
,	O
ps_alive_p	function
}	O
;	O
