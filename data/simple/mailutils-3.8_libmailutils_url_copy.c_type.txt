struct	O
copy_tab	struct
{	O
int	O
mask	int
;	O
int	O
(	O
*	O
fun	pointer
)	O
(	O
mu_url_t	pointer
,	O
mu_url_t	pointer
,	O
size_t	long
)	O
;	O
size_t	long
off	long
;	O
}	O
;	O
static	O
int	O
_url_copy_str	function
(	O
mu_url_t	pointer
dest_url	pointer
,	O
mu_url_t	pointer
src_url	pointer
,	O
size_t	long
off	long
)	O
{	O
char	O
*	O
*	O
dest	pointer
=	O
(	O
char	O
*	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
dest_url	pointer
+	O
off	long
)	O
;	O
char	O
*	O
src	pointer
=	O
*	O
(	O
char	O
*	O
*	O
)	O
(	O
(	O
char	O
*	O
)	O
src_url	pointer
+	O
off	long
)	O
;	O
char	O
*	O
p	pointer
=	O
strdup	function
(	O
src	pointer
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
return	O
ENOMEM	int
;	O
*	O
dest	pointer
=	O
p	pointer
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_url_copy_secret	function
(	O
mu_url_t	pointer
dest	pointer
,	O
mu_url_t	pointer
src	pointer
,	O
size_t	long
off	long
)	O
{	O
return	O
mu_secret_dup	function
(	O
src	pointer
->	O
secret	pointer
,	O
&	O
dest	pointer
->	O
secret	pointer
)	O
;	O
}	O
static	O
int	O
_url_copy_port	function
(	O
mu_url_t	pointer
dest	pointer
,	O
mu_url_t	pointer
src	pointer
,	O
size_t	long
off	long
)	O
{	O
if	O
(	O
src	pointer
->	O
portstr	pointer
)	O
{	O
dest	pointer
->	O
portstr	pointer
=	O
strdup	function
(	O
src	pointer
->	O
portstr	pointer
)	O
;	O
if	O
(	O
!	O
dest	pointer
->	O
portstr	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
dest	pointer
->	O
port	int
=	O
src	pointer
->	O
port	int
;	O
return	O
0	int
;	O
}	O
static	O
char	O
*	O
*	O
argcv_copy	function
(	O
size_t	long
argc	long
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
size_t	long
i	long
;	O
char	O
*	O
*	O
nv	pointer
=	O
calloc	function
(	O
argc	long
+	O
1	int
,	O
sizeof	O
(	O
nv	pointer
[	O
0	int
]	O
)	O
)	O
;	O
if	O
(	O
!	O
nv	pointer
)	O
return	O
NULL	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
argc	long
;	O
i	long
++	O
)	O
if	O
(	O
(	O
nv	pointer
[	O
i	long
]	O
=	O
strdup	function
(	O
argv	pointer
[	O
i	long
]	O
)	O
)	O
==	O
NULL	O
)	O
{	O
mu_argcv_free	function
(	O
i	long
,	O
nv	pointer
)	O
;	O
free	function
(	O
nv	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
return	O
nv	pointer
;	O
}	O
static	O
int	O
_url_copy_param	function
(	O
mu_url_t	pointer
dest	pointer
,	O
mu_url_t	pointer
src	pointer
,	O
size_t	long
off	long
)	O
{	O
if	O
(	O
(	O
dest	pointer
->	O
fvpairs	pointer
=	O
argcv_copy	function
(	O
src	pointer
->	O
fvcount	int
,	O
src	pointer
->	O
fvpairs	pointer
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
dest	pointer
->	O
fvcount	int
=	O
src	pointer
->	O
fvcount	int
;	O
return	O
0	int
;	O
}	O
static	O
int	O
_url_copy_query	function
(	O
mu_url_t	pointer
dest	pointer
,	O
mu_url_t	pointer
src	pointer
,	O
size_t	long
off	long
)	O
{	O
if	O
(	O
(	O
dest	pointer
->	O
qargv	pointer
=	O
argcv_copy	function
(	O
src	pointer
->	O
qargc	int
,	O
src	pointer
->	O
qargv	pointer
)	O
)	O
==	O
NULL	O
)	O
return	O
ENOMEM	int
;	O
dest	pointer
->	O
qargc	int
=	O
src	pointer
->	O
qargc	int
;	O
return	O
0	int
;	O
}	O
static	O
struct	O
copy_tab	struct
copy_tab	struct
[	O
]	O
=	O
{	O
{	O
MU_URL_SCHEME	int
,	O
_url_copy_str	function
,	O
mu_offsetof	O
(	O
struct	O
_mu_url	struct
,	O
scheme	pointer
)	O
}	O
,	O
{	O
MU_URL_USER	int
,	O
_url_copy_str	function
,	O
mu_offsetof	O
(	O
struct	O
_mu_url	struct
,	O
user	pointer
)	O
}	O
,	O
{	O
MU_URL_SECRET	int
,	O
_url_copy_secret	function
,	O
0	int
}	O
,	O
{	O
MU_URL_AUTH	int
,	O
_url_copy_str	function
,	O
mu_offsetof	O
(	O
struct	O
_mu_url	struct
,	O
auth	pointer
)	O
}	O
,	O
{	O
MU_URL_HOST	int
,	O
_url_copy_str	function
,	O
mu_offsetof	O
(	O
struct	O
_mu_url	struct
,	O
host	pointer
)	O
}	O
,	O
{	O
MU_URL_PORT	int
,	O
_url_copy_port	function
,	O
0	int
}	O
,	O
{	O
MU_URL_PATH	int
,	O
_url_copy_str	function
,	O
mu_offsetof	O
(	O
struct	O
_mu_url	struct
,	O
path	pointer
)	O
}	O
,	O
{	O
MU_URL_PARAM	int
,	O
_url_copy_param	function
,	O
0	int
}	O
,	O
{	O
MU_URL_QUERY	int
,	O
_url_copy_query	function
,	O
0	int
}	O
}	O
;	O
int	O
mu_url_copy_hints	function
(	O
mu_url_t	pointer
url	pointer
,	O
mu_url_t	pointer
hint	pointer
)	O
{	O
int	O
i	long
;	O
if	O
(	O
!	O
url	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
hint	pointer
)	O
return	O
0	int
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
MU_ARRAY_SIZE	O
(	O
copy_tab	struct
)	O
;	O
i	long
++	O
)	O
{	O
if	O
(	O
!	O
(	O
url	pointer
->	O
flags	int
&	O
copy_tab	struct
[	O
i	long
]	O
.	O
mask	int
)	O
&&	O
(	O
hint	pointer
->	O
flags	int
&	O
copy_tab	struct
[	O
i	long
]	O
.	O
mask	int
)	O
)	O
{	O
int	O
rc	int
=	O
copy_tab	struct
[	O
i	long
]	O
.	O
fun	pointer
(	O
url	pointer
,	O
hint	pointer
,	O
copy_tab	struct
[	O
i	long
]	O
.	O
off	long
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
url	pointer
->	O
flags	int
|=	O
copy_tab	struct
[	O
i	long
]	O
.	O
mask	int
;	O
}	O
}	O
return	O
0	int
;	O
}	O
