static	O
const	O
char	O
rcsid	array
[	O
]	O
=	O
"$Id: fcgi_stdio.c,v 1.2 1999/06/14 06:31:42 bfox Exp $"	pointer
;	O
FCGI_FILE	struct
_fcgi_sF	array
[	O
3	int
]	O
;	O
static	O
int	O
acceptCalled	int
=	O
FALSE	O
;	O
static	O
int	O
isCGI	int
=	O
FALSE	O
;	O
extern	O
char	O
*	O
*	O
environ	pointer
;	O
int	O
FCGI_Accept	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
acceptCalled	int
)	O
{	O
isCGI	int
=	O
FCGX_IsCGI	function
(	O
)	O
;	O
acceptCalled	int
=	O
TRUE	O
;	O
}	O
else	O
if	O
(	O
isCGI	int
)	O
{	O
return	O
(	O
EOF	O
)	O
;	O
}	O
if	O
(	O
isCGI	int
)	O
{	O
FCGI_stdin	O
->	O
stdio_stream	pointer
=	O
stdin	pointer
;	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
FCGI_stdout	O
->	O
stdio_stream	pointer
=	O
stdout	pointer
;	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
FCGI_stderr	O
->	O
stdio_stream	pointer
=	O
stderr	pointer
;	O
FCGI_stderr	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
}	O
else	O
{	O
FCGX_Stream	struct
*	O
in	pointer
,	O
*	O
out	pointer
,	O
*	O
error	pointer
;	O
FCGX_ParamArray	pointer
envp	pointer
;	O
int	O
acceptResult	int
=	O
FCGX_Accept	function
(	O
&	O
in	pointer
,	O
&	O
out	pointer
,	O
&	O
error	pointer
,	O
&	O
envp	pointer
)	O
;	O
if	O
(	O
acceptResult	int
<	O
0	int
)	O
{	O
return	O
acceptResult	int
;	O
}	O
FCGI_stdin	O
->	O
stdio_stream	pointer
=	O
NULL	O
;	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
=	O
in	pointer
;	O
FCGI_stdout	O
->	O
stdio_stream	pointer
=	O
NULL	O
;	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
=	O
out	pointer
;	O
FCGI_stderr	O
->	O
stdio_stream	pointer
=	O
NULL	O
;	O
FCGI_stderr	O
->	O
fcgx_stream	pointer
=	O
error	pointer
;	O
environ	pointer
=	O
envp	pointer
;	O
}	O
return	O
0	int
;	O
}	O
void	O
FCGI_Finish	function
(	O
void	O
)	O
{	O
if	O
(	O
!	O
acceptCalled	int
||	O
isCGI	int
)	O
{	O
return	O
;	O
}	O
FCGX_Finish	function
(	O
)	O
;	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
FCGI_stderr	O
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
environ	pointer
=	O
NULL	O
;	O
}	O
int	O
FCGI_StartFilterData	function
(	O
void	O
)	O
{	O
if	O
(	O
FCGI_stdin	O
->	O
stdio_stream	pointer
)	O
{	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
return	O
FCGX_StartFilterData	function
(	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
)	O
;	O
}	O
}	O
void	O
FCGI_SetExitStatus	function
(	O
int	O
status	int
)	O
{	O
if	O
(	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
)	O
{	O
FCGX_SetExitStatus	function
(	O
status	int
,	O
FCGI_stdin	O
->	O
fcgx_stream	pointer
)	O
;	O
}	O
}	O
void	O
FCGI_perror	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
FCGI_fputs	function
(	O
str	pointer
,	O
FCGI_stderr	O
)	O
;	O
FCGI_fputs	function
(	O
": "	pointer
,	O
FCGI_stderr	O
)	O
;	O
FCGI_fputs	function
(	O
strerror	function
(	O
OS_Errno	O
)	O
,	O
FCGI_stderr	O
)	O
;	O
return	O
;	O
}	O
static	O
FCGI_FILE	struct
*	O
FCGI_OpenFromFILE	function
(	O
FILE	struct
*	O
stream	pointer
)	O
{	O
FCGI_FILE	struct
*	O
fp	pointer
;	O
if	O
(	O
stream	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
fp	pointer
=	O
malloc	function
(	O
sizeof	O
(	O
FCGI_FILE	struct
)	O
)	O
;	O
if	O
(	O
fp	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
fp	pointer
->	O
stdio_stream	pointer
=	O
stream	pointer
;	O
fp	pointer
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
return	O
fp	pointer
;	O
}	O
FCGI_FILE	struct
*	O
FCGI_fopen	function
(	O
const	O
char	O
*	O
path	pointer
,	O
const	O
char	O
*	O
mode	pointer
)	O
{	O
return	O
FCGI_OpenFromFILE	function
(	O
fopen	function
(	O
path	pointer
,	O
mode	pointer
)	O
)	O
;	O
}	O
int	O
FCGI_fclose	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
n	int
=	O
EOF	O
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
n	int
=	O
fclose	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
fp	pointer
->	O
stdio_stream	pointer
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
n	int
=	O
FCGX_FClose	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
fp	pointer
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
(	O
fp	pointer
!=	O
FCGI_stdin	O
)	O
&&	O
(	O
fp	pointer
!=	O
FCGI_stdout	O
)	O
&&	O
(	O
fp	pointer
!=	O
FCGI_stderr	O
)	O
)	O
{	O
free	function
(	O
fp	pointer
)	O
;	O
}	O
return	O
n	int
;	O
}	O
int	O
FCGI_fflush	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fflush	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_FFlush	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
EOF	O
;	O
}	O
FCGI_FILE	struct
*	O
FCGI_freopen	function
(	O
const	O
char	O
*	O
path	pointer
,	O
const	O
char	O
*	O
mode	pointer
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
if	O
(	O
freopen	function
(	O
path	pointer
,	O
mode	pointer
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
==	O
NULL	O
)	O
return	O
NULL	O
;	O
else	O
return	O
fp	pointer
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
(	O
void	O
)	O
FCGX_FClose	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
fp	pointer
->	O
stdio_stream	pointer
=	O
fopen	function
(	O
path	pointer
,	O
mode	pointer
)	O
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
==	O
NULL	O
)	O
return	O
NULL	O
;	O
else	O
{	O
fp	pointer
->	O
fcgx_stream	pointer
=	O
NULL	O
;	O
return	O
fp	pointer
;	O
}	O
}	O
return	O
NULL	O
;	O
}	O
int	O
FCGI_setvbuf	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
,	O
char	O
*	O
buf	pointer
,	O
int	O
bufmode	int
,	O
size_t	long
size	long
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
setvbuf	function
(	O
fp	pointer
->	O
stdio_stream	pointer
,	O
buf	pointer
,	O
bufmode	int
,	O
size	long
)	O
;	O
else	O
{	O
return	O
-	O
1	int
;	O
}	O
}	O
void	O
FCGI_setbuf	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
,	O
char	O
*	O
buf	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
setbuf	function
(	O
fp	pointer
->	O
stdio_stream	pointer
,	O
buf	pointer
)	O
;	O
}	O
int	O
FCGI_fseek	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
,	O
long	O
offset	long
,	O
int	O
whence	int
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fseek	function
(	O
fp	pointer
->	O
stdio_stream	pointer
,	O
offset	long
,	O
whence	int
)	O
;	O
else	O
{	O
OS_SetErrno	O
(	O
ESPIPE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
int	O
FCGI_ftell	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
ftell	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
{	O
OS_SetErrno	O
(	O
ESPIPE	int
)	O
;	O
return	O
-	O
1	int
;	O
}	O
}	O
void	O
FCGI_rewind	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
rewind	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
OS_SetErrno	O
(	O
ESPIPE	int
)	O
;	O
}	O
int	O
FCGI_fgetc	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fgetc	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_GetChar	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
EOF	O
;	O
}	O
int	O
FCGI_getchar	function
(	O
void	O
)	O
{	O
return	O
FCGI_fgetc	function
(	O
FCGI_stdin	O
)	O
;	O
}	O
int	O
FCGI_ungetc	function
(	O
int	O
c	int
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
ungetc	function
(	O
c	int
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_UnGetChar	function
(	O
c	int
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
EOF	O
;	O
}	O
char	O
*	O
FCGI_fgets	function
(	O
char	O
*	O
str	pointer
,	O
int	O
size	long
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fgets	function
(	O
str	pointer
,	O
size	long
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_GetLine	function
(	O
str	pointer
,	O
size	long
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
NULL	O
;	O
}	O
char	O
*	O
FCGI_gets	function
(	O
char	O
*	O
str	pointer
)	O
{	O
char	O
*	O
s	pointer
;	O
int	O
c	int
;	O
for	O
(	O
s	pointer
=	O
str	pointer
;	O
(	O
(	O
c	int
=	O
FCGI_getchar	function
(	O
)	O
)	O
!=	O
'\n'	O
)	O
;	O
)	O
{	O
if	O
(	O
c	int
==	O
EOF	O
)	O
{	O
if	O
(	O
s	pointer
==	O
str	pointer
)	O
return	O
NULL	O
;	O
else	O
break	O
;	O
}	O
else	O
*	O
s	pointer
++	O
=	O
c	int
;	O
}	O
*	O
s	pointer
=	O
0	int
;	O
return	O
str	pointer
;	O
}	O
int	O
FCGI_fputc	function
(	O
int	O
c	int
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fputc	function
(	O
c	int
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_PutChar	function
(	O
c	int
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
else	O
return	O
EOF	O
;	O
}	O
int	O
FCGI_putchar	function
(	O
int	O
c	int
)	O
{	O
return	O
FCGI_fputc	function
(	O
c	int
,	O
FCGI_stdout	O
)	O
;	O
}	O
int	O
FCGI_fputs	function
(	O
const	O
char	O
*	O
str	pointer
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fputs	function
(	O
str	pointer
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_PutS	function
(	O
str	pointer
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
EOF	O
;	O
}	O
int	O
FCGI_puts	function
(	O
const	O
char	O
*	O
str	pointer
)	O
{	O
int	O
n	int
;	O
if	O
(	O
FCGI_stdout	O
->	O
stdio_stream	pointer
)	O
{	O
n	int
=	O
fputs	function
(	O
str	pointer
,	O
FCGI_stdout	O
->	O
stdio_stream	pointer
)	O
;	O
if	O
(	O
n	int
<	O
0	int
)	O
return	O
n	int
;	O
else	O
return	O
fputc	function
(	O
'\n'	O
,	O
FCGI_stdout	O
->	O
stdio_stream	pointer
)	O
;	O
}	O
else	O
if	O
(	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
)	O
{	O
n	int
=	O
FCGX_PutS	function
(	O
str	pointer
,	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
)	O
;	O
if	O
(	O
n	int
<	O
0	int
)	O
return	O
n	int
;	O
else	O
return	O
FCGX_PutChar	function
(	O
'\n'	O
,	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
)	O
;	O
}	O
return	O
EOF	O
;	O
}	O
int	O
FCGI_fprintf	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
int	O
n	int
=	O
0	int
;	O
va_start	O
(	O
ap	array
,	O
format	pointer
)	O
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
n	int
=	O
vfprintf	function
(	O
fp	pointer
->	O
stdio_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
n	int
=	O
FCGX_VFPrintF	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
n	int
;	O
}	O
int	O
FCGI_printf	function
(	O
const	O
char	O
*	O
format	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
int	O
n	int
;	O
va_start	O
(	O
ap	array
,	O
format	pointer
)	O
;	O
n	int
=	O
FCGI_vfprintf	function
(	O
FCGI_stdout	O
,	O
format	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
return	O
n	int
;	O
}	O
int	O
FCGI_vfprintf	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
,	O
const	O
char	O
*	O
format	pointer
,	O
va_list	array
ap	array
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
vfprintf	function
(	O
fp	pointer
->	O
stdio_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_VFPrintF	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
return	O
EOF	O
;	O
}	O
int	O
FCGI_vprintf	function
(	O
const	O
char	O
*	O
format	pointer
,	O
va_list	array
ap	array
)	O
{	O
if	O
(	O
FCGI_stdout	O
->	O
stdio_stream	pointer
)	O
return	O
vfprintf	function
(	O
FCGI_stdout	O
->	O
stdio_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
else	O
if	O
(	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
)	O
return	O
FCGX_VFPrintF	function
(	O
FCGI_stdout	O
->	O
fcgx_stream	pointer
,	O
format	pointer
,	O
ap	array
)	O
;	O
return	O
EOF	O
;	O
}	O
size_t	long
FCGI_fread	function
(	O
void	O
*	O
ptr	pointer
,	O
size_t	long
size	long
,	O
size_t	long
nmemb	long
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
n	int
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fread	function
(	O
ptr	pointer
,	O
size	long
,	O
nmemb	long
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
if	O
(	O
(	O
size	long
*	O
nmemb	long
)	O
==	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
n	int
=	O
FCGX_GetStr	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
,	O
size	long
*	O
nmemb	long
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
(	O
n	int
/	O
size	long
)	O
;	O
}	O
return	O
(	O
size_t	long
)	O
EOF	O
;	O
}	O
size_t	long
FCGI_fwrite	function
(	O
void	O
*	O
ptr	pointer
,	O
size_t	long
size	long
,	O
size_t	long
nmemb	long
,	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
n	int
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fwrite	function
(	O
ptr	pointer
,	O
size	long
,	O
nmemb	long
,	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
if	O
(	O
(	O
size	long
*	O
nmemb	long
)	O
==	O
0	int
)	O
{	O
return	O
0	int
;	O
}	O
n	int
=	O
FCGX_PutStr	function
(	O
(	O
char	O
*	O
)	O
ptr	pointer
,	O
size	long
*	O
nmemb	long
,	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
return	O
(	O
n	int
/	O
size	long
)	O
;	O
}	O
return	O
(	O
size_t	long
)	O
EOF	O
;	O
}	O
int	O
FCGI_feof	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
return	O
feof	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
return	O
FCGX_HasSeenEOF	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
}	O
return	O
-	O
1	int
;	O
}	O
int	O
FCGI_ferror	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
return	O
ferror	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
return	O
FCGX_GetError	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
}	O
return	O
-	O
1	int
;	O
}	O
void	O
FCGI_clearerr	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
clearerr	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
FCGX_ClearError	function
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
;	O
}	O
return	O
;	O
}	O
extern	O
int	O
fileno	function
(	O
FILE	struct
*	O
stream	pointer
)	O
;	O
extern	O
FILE	struct
*	O
fdopen	function
(	O
int	O
fildes	int
,	O
const	O
char	O
*	O
type	pointer
)	O
;	O
extern	O
FILE	struct
*	O
popen	function
(	O
const	O
char	O
*	O
command	pointer
,	O
const	O
char	O
*	O
type	pointer
)	O
;	O
extern	O
int	O
pclose	function
(	O
FILE	struct
*	O
stream	pointer
)	O
;	O
int	O
FCGI_fileno	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
return	O
fileno	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
else	O
return	O
-	O
1	int
;	O
}	O
FCGI_FILE	struct
*	O
FCGI_fdopen	function
(	O
int	O
fd	int
,	O
const	O
char	O
*	O
mode	pointer
)	O
{	O
return	O
FCGI_OpenFromFILE	function
(	O
fdopen	function
(	O
fd	int
,	O
mode	pointer
)	O
)	O
;	O
}	O
FCGI_FILE	struct
*	O
FCGI_popen	function
(	O
const	O
char	O
*	O
cmd	pointer
,	O
const	O
char	O
*	O
type	pointer
)	O
{	O
return	O
FCGI_OpenFromFILE	function
(	O
popen	function
(	O
cmd	pointer
,	O
type	pointer
)	O
)	O
;	O
}	O
int	O
FCGI_pclose	function
(	O
FCGI_FILE	struct
*	O
fp	pointer
)	O
{	O
int	O
n	int
=	O
EOF	O
;	O
if	O
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
{	O
n	int
=	O
pclose	function
(	O
fp	pointer
->	O
stdio_stream	pointer
)	O
;	O
fp	pointer
->	O
stdio_stream	pointer
=	O
NULL	O
;	O
}	O
else	O
if	O
(	O
fp	pointer
->	O
fcgx_stream	pointer
)	O
{	O
return	O
EOF	O
;	O
}	O
if	O
(	O
(	O
fp	pointer
!=	O
FCGI_stdin	O
)	O
&&	O
(	O
fp	pointer
!=	O
FCGI_stdout	O
)	O
&&	O
(	O
fp	pointer
!=	O
FCGI_stderr	O
)	O
)	O
{	O
free	function
(	O
fp	pointer
)	O
;	O
}	O
return	O
n	int
;	O
}	O
