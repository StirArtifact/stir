static	O
const	O
int	O
m	int
=	O
7	int
;	O
static	O
const	O
int	O
s	int
=	O
7	int
;	O
static	O
const	O
int	O
t	int
=	O
15	int
;	O
static	O
const	O
unsigned	O
int	O
a	int
=	O
0x8ebfd028U	int
;	O
static	O
const	O
unsigned	O
int	O
b	int
=	O
0x2b5b2500U	int
;	O
static	O
const	O
unsigned	O
int	O
c	int
=	O
0xdb8b0000U	int
;	O
static	O
unsigned	O
int	O
x	array
[	O
N	int
]	O
;	O
static	O
int	O
k	int
;	O
static	O
int	O
rand_initialized	int
=	O
0	int
;	O
static	O
void	O
iterate_tgfsr	function
(	O
void	O
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
N	int
-	O
m	int
;	O
i	int
++	O
)	O
x	array
[	O
i	int
]	O
=	O
x	array
[	O
i	int
+	O
m	int
]	O
^	O
(	O
x	array
[	O
i	int
]	O
>>	O
1	int
)	O
^	O
(	O
(	O
x	array
[	O
i	int
]	O
&	O
1	int
)	O
?	O
a	int
:	O
0	int
)	O
;	O
for	O
(	O
;	O
i	int
<	O
N	int
;	O
i	int
++	O
)	O
x	array
[	O
i	int
]	O
=	O
x	array
[	O
i	int
+	O
m	int
-	O
N	int
]	O
^	O
(	O
x	array
[	O
i	int
]	O
>>	O
1	int
)	O
^	O
(	O
(	O
x	array
[	O
i	int
]	O
&	O
1	int
)	O
?	O
a	int
:	O
0	int
)	O
;	O
}	O
static	O
unsigned	O
int	O
next_rand	function
(	O
void	O
)	O
{	O
int	O
y	int
;	O
if	O
(	O
!	O
rand_initialized	int
)	O
{	O
assert	O
(	O
rand_initialized	int
)	O
;	O
gg_srand	function
(	O
1	int
)	O
;	O
}	O
if	O
(	O
++	O
k	int
==	O
N	int
)	O
{	O
iterate_tgfsr	function
(	O
)	O
;	O
k	int
=	O
0	int
;	O
}	O
y	int
=	O
x	array
[	O
k	int
]	O
^	O
(	O
(	O
x	array
[	O
k	int
]	O
<<	O
s	int
)	O
&	O
b	int
)	O
;	O
y	int
^=	O
(	O
(	O
y	int
<<	O
t	int
)	O
&	O
c	int
)	O
;	O
return	O
y	int
;	O
}	O
void	O
gg_srand	function
(	O
unsigned	O
int	O
seed	int
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
N	int
;	O
i	int
++	O
)	O
{	O
x	array
[	O
i	int
]	O
=	O
seed	int
;	O
seed	int
*=	O
1313	int
;	O
seed	int
+=	O
88897	int
;	O
}	O
k	int
=	O
N	int
-	O
1	int
;	O
rand_initialized	int
=	O
1	int
;	O
}	O
int	O
gg_rand	function
(	O
void	O
)	O
{	O
return	O
(	O
int	O
)	O
(	O
next_rand	function
(	O
)	O
&	O
0x7fffffff	int
)	O
;	O
}	O
unsigned	O
int	O
gg_urand	function
(	O
void	O
)	O
{	O
return	O
next_rand	function
(	O
)	O
;	O
}	O
double	O
gg_drand	function
(	O
void	O
)	O
{	O
return	O
next_rand	function
(	O
)	O
*	O
2.328306436538696e-10	int
;	O
}	O
void	O
gg_get_rand_state	function
(	O
struct	O
gg_rand_state	struct
*	O
state	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
N	int
;	O
i	int
++	O
)	O
state	pointer
->	O
x	array
[	O
i	int
]	O
=	O
x	array
[	O
i	int
]	O
;	O
state	pointer
->	O
k	int
=	O
k	int
;	O
}	O
void	O
gg_set_rand_state	function
(	O
struct	O
gg_rand_state	struct
*	O
state	pointer
)	O
{	O
int	O
i	int
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
N	int
;	O
i	int
++	O
)	O
x	array
[	O
i	int
]	O
=	O
state	pointer
->	O
x	array
[	O
i	int
]	O
;	O
k	int
=	O
state	pointer
->	O
k	int
;	O
}	O
