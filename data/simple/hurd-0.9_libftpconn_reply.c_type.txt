static	O
inline	O
error_t	int
ftp_conn_add_reply_txt	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
size_t	long
*	O
offs	pointer
,	O
const	O
char	O
*	O
str	pointer
,	O
size_t	long
len	long
)	O
{	O
if	O
(	O
*	O
offs	pointer
+	O
len	long
+	O
1	int
>	O
conn	pointer
->	O
reply_txt_sz	long
)	O
{	O
size_t	long
new_sz	long
=	O
*	O
offs	pointer
+	O
len	long
+	O
50	int
;	O
char	O
*	O
new	pointer
=	O
realloc	function
(	O
conn	pointer
->	O
reply_txt	pointer
,	O
new_sz	long
)	O
;	O
if	O
(	O
!	O
new	pointer
)	O
return	O
ENOMEM	int
;	O
conn	pointer
->	O
reply_txt	pointer
=	O
new	pointer
;	O
conn	pointer
->	O
reply_txt_sz	long
=	O
new_sz	long
;	O
}	O
bcopy	function
(	O
str	pointer
,	O
conn	pointer
->	O
reply_txt	pointer
+	O
*	O
offs	pointer
,	O
len	long
)	O
;	O
conn	pointer
->	O
reply_txt	pointer
[	O
*	O
offs	pointer
+	O
len	long
]	O
=	O
'\0'	O
;	O
*	O
offs	pointer
+=	O
len	long
;	O
return	O
0	int
;	O
}	O
static	O
inline	O
error_t	int
ftp_conn_getline	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
const	O
char	O
*	O
*	O
line	pointer
,	O
size_t	long
*	O
line_len	long
)	O
{	O
char	O
*	O
l	pointer
=	O
conn	pointer
->	O
line	pointer
;	O
size_t	long
offs	pointer
=	O
conn	pointer
->	O
line_offs	long
,	O
len	long
=	O
conn	pointer
->	O
line_len	long
,	O
sz	long
=	O
conn	pointer
->	O
line_sz	long
;	O
int	O
(	O
*	O
icheck	pointer
)	O
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
)	O
=	O
conn	pointer
->	O
hooks	pointer
->	O
interrupt_check	pointer
;	O
for	O
(	O
;	O
;	O
)	O
{	O
int	O
rd	int
;	O
if	O
(	O
offs	pointer
<	O
len	long
)	O
{	O
char	O
*	O
nl	pointer
=	O
memchr	function
(	O
l	pointer
+	O
offs	pointer
,	O
'\n'	O
,	O
len	long
-	O
offs	pointer
)	O
;	O
if	O
(	O
nl	pointer
)	O
{	O
*	O
line	pointer
=	O
l	pointer
+	O
offs	pointer
;	O
offs	pointer
=	O
nl	pointer
+	O
1	int
-	O
l	pointer
;	O
if	O
(	O
nl	pointer
>	O
*	O
line	pointer
&&	O
nl	pointer
[	O
-	O
1	int
]	O
==	O
'\r'	O
)	O
nl	pointer
--	O
;	O
*	O
nl	pointer
=	O
'\0'	O
;	O
*	O
line_len	long
=	O
nl	pointer
-	O
*	O
line	pointer
;	O
if	O
(	O
offs	pointer
==	O
len	long
)	O
conn	pointer
->	O
line_offs	long
=	O
conn	pointer
->	O
line_len	long
=	O
0	int
;	O
else	O
conn	pointer
->	O
line_offs	long
=	O
offs	pointer
;	O
return	O
0	int
;	O
}	O
}	O
if	O
(	O
offs	pointer
>	O
(	O
len	long
<<	O
2	int
)	O
&&	O
offs	pointer
<	O
len	long
)	O
{	O
len	long
-=	O
offs	pointer
;	O
bcopy	function
(	O
l	pointer
+	O
offs	pointer
,	O
l	pointer
,	O
len	long
-	O
offs	pointer
)	O
;	O
offs	pointer
=	O
conn	pointer
->	O
line_offs	long
=	O
0	int
;	O
conn	pointer
->	O
line_len	long
=	O
len	long
;	O
}	O
if	O
(	O
len	long
==	O
sz	long
)	O
{	O
sz	long
=	O
sz	long
+	O
len	long
?	O
:	O
50	int
;	O
l	pointer
=	O
realloc	function
(	O
l	pointer
,	O
sz	long
)	O
;	O
if	O
(	O
!	O
l	pointer
)	O
return	O
ENOMEM	int
;	O
conn	pointer
->	O
line	pointer
=	O
l	pointer
;	O
conn	pointer
->	O
line_sz	long
=	O
sz	long
;	O
}	O
rd	int
=	O
read	function
(	O
conn	pointer
->	O
control	int
,	O
l	pointer
+	O
len	long
,	O
sz	long
-	O
len	long
)	O
;	O
if	O
(	O
rd	int
<	O
0	int
)	O
return	O
errno	O
;	O
else	O
if	O
(	O
rd	int
==	O
0	int
)	O
{	O
*	O
line	pointer
=	O
l	pointer
+	O
offs	pointer
;	O
*	O
line_len	long
=	O
0	int
;	O
return	O
0	int
;	O
}	O
len	long
+=	O
rd	int
;	O
conn	pointer
->	O
line_len	long
=	O
len	long
;	O
if	O
(	O
icheck	pointer
&&	O
(	O
*	O
icheck	pointer
)	O
(	O
conn	pointer
)	O
)	O
return	O
EINTR	int
;	O
}	O
}	O
inline	O
error_t	int
ftp_conn_get_raw_reply	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
int	O
*	O
reply	pointer
,	O
const	O
char	O
*	O
*	O
reply_txt	pointer
)	O
{	O
size_t	long
reply_txt_offs	long
=	O
0	int
;	O
int	O
multi	int
=	O
0	int
;	O
if	O
(	O
!	O
reply	pointer
&&	O
!	O
reply_txt	pointer
)	O
return	O
0	int
;	O
do	O
{	O
const	O
char	O
*	O
l	pointer
=	O
NULL	O
;	O
size_t	long
len	long
=	O
0	int
;	O
error_t	int
err	int
=	O
ftp_conn_getline	function
(	O
conn	pointer
,	O
&	O
l	pointer
,	O
&	O
len	long
)	O
;	O
if	O
(	O
err	int
)	O
return	O
err	int
;	O
if	O
(	O
!	O
multi	int
&&	O
len	long
==	O
0	int
)	O
return	O
EPIPE	int
;	O
if	O
(	O
conn	pointer
->	O
hooks	pointer
&&	O
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
(	O
*	O
conn	pointer
->	O
hooks	pointer
->	O
cntl_debug	pointer
)	O
(	O
conn	pointer
,	O
FTP_CONN_CNTL_DEBUG_REPLY	int
,	O
l	pointer
)	O
;	O
if	O
(	O
isdigit	function
(	O
l	pointer
[	O
0	int
]	O
)	O
&&	O
isdigit	function
(	O
l	pointer
[	O
1	int
]	O
)	O
&&	O
isdigit	function
(	O
l	pointer
[	O
2	int
]	O
)	O
)	O
{	O
int	O
code	int
=	O
(	O
l	pointer
[	O
0	int
]	O
-	O
'0'	O
)	O
*	O
100	int
+	O
(	O
l	pointer
[	O
1	int
]	O
-	O
'0'	O
)	O
*	O
10	int
+	O
(	O
l	pointer
[	O
2	int
]	O
-	O
'0'	O
)	O
;	O
if	O
(	O
multi	int
&&	O
code	int
!=	O
multi	int
)	O
return	O
EGRATUITOUS	O
;	O
if	O
(	O
l	pointer
[	O
3	int
]	O
==	O
'-'	O
)	O
multi	int
=	O
code	int
;	O
else	O
if	O
(	O
l	pointer
[	O
3	int
]	O
!=	O
' '	O
)	O
return	O
EGRATUITOUS	O
;	O
else	O
{	O
multi	int
=	O
0	int
;	O
if	O
(	O
reply	pointer
)	O
*	O
reply	pointer
=	O
code	int
;	O
}	O
ACCUM	O
(	O
l	pointer
+	O
4	int
,	O
len	long
-	O
4	int
)	O
;	O
}	O
else	O
if	O
(	O
multi	int
)	O
ACCUM	O
(	O
l	pointer
,	O
len	long
)	O
;	O
else	O
return	O
EGRATUITOUS	O
;	O
}	O
while	O
(	O
multi	int
)	O
;	O
if	O
(	O
reply_txt	pointer
)	O
*	O
reply_txt	pointer
=	O
conn	pointer
->	O
reply_txt	pointer
;	O
return	O
0	int
;	O
}	O
error_t	int
ftp_conn_get_reply	function
(	O
struct	O
ftp_conn	struct
*	O
conn	pointer
,	O
int	O
*	O
reply	pointer
,	O
const	O
char	O
*	O
*	O
reply_txt	pointer
)	O
{	O
int	O
code	int
;	O
error_t	int
err	int
;	O
do	O
err	int
=	O
ftp_conn_get_raw_reply	function
(	O
conn	pointer
,	O
&	O
code	int
,	O
reply_txt	pointer
)	O
;	O
while	O
(	O
!	O
err	int
&&	O
code	int
==	O
REPLY_ABORT_OK	int
)	O
;	O
if	O
(	O
!	O
err	int
&&	O
reply	pointer
)	O
*	O
reply	pointer
=	O
code	int
;	O
return	O
err	int
;	O
}	O
