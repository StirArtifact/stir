VPolygon	struct
*	O
VCreatePolygon	function
(	O
int	O
numVtces	short
,	O
VPoint	struct
*	O
vert	pointer
,	O
VColor	struct
*	O
color	pointer
)	O
{	O
VPolygon	struct
template	struct
;	O
template	struct
.	O
color	pointer
=	O
color	pointer
;	O
template	struct
.	O
backColor	pointer
=	O
(	O
VColor	struct
*	O
)	O
NULL	O
;	O
template	struct
.	O
flags	short
=	O
0	int
;	O
template	struct
.	O
assignedDepth	short
=	O
-	O
1	int
;	O
template	struct
.	O
cullDistance	double
=	O
0.0	int
;	O
return	O
VCreatePolygonFromTemplate	function
(	O
numVtces	short
,	O
vert	pointer
,	O
&	O
template	struct
)	O
;	O
}	O
VPolygon	struct
*	O
VCreatePolygonFromTemplate	function
(	O
int	O
numVtces	short
,	O
VPoint	struct
*	O
vert	pointer
,	O
VPolygon	struct
*	O
template	struct
)	O
{	O
VPolygon	struct
*	O
p	pointer
;	O
VPoint	struct
a	pointer
,	O
b	pointer
;	O
p	pointer
=	O
(	O
VPolygon	struct
*	O
)	O
Vmalloc	function
(	O
sizeof	O
(	O
VPolygon	struct
)	O
)	O
;	O
*	O
p	pointer
=	O
*	O
template	struct
;	O
p	pointer
->	O
numVtces	short
=	O
numVtces	short
;	O
p	pointer
->	O
vertex	pointer
=	O
(	O
VPoint	struct
*	O
)	O
Vmalloc	function
(	O
sizeof	O
(	O
VPoint	struct
)	O
*	O
numVtces	short
)	O
;	O
memcpy	O
(	O
(	O
char	O
*	O
)	O
p	pointer
->	O
vertex	pointer
,	O
(	O
char	O
*	O
)	O
vert	pointer
,	O
sizeof	O
(	O
VPoint	struct
)	O
*	O
p	pointer
->	O
numVtces	short
)	O
;	O
if	O
(	O
(	O
p	pointer
->	O
flags	short
&	O
PolyNormalValid	int
)	O
==	O
0	int
)	O
{	O
if	O
(	O
(	O
p	pointer
->	O
flags	short
&	O
PolyClipBackface	int
)	O
!=	O
0	int
||	O
p	pointer
->	O
backColor	pointer
!=	O
(	O
VColor	struct
*	O
)	O
NULL	O
)	O
{	O
a	pointer
.	O
x	double
=	O
vert	pointer
[	O
0	int
]	O
.	O
x	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
x	double
;	O
a	pointer
.	O
y	double
=	O
vert	pointer
[	O
0	int
]	O
.	O
y	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
y	double
;	O
a	pointer
.	O
z	double
=	O
vert	pointer
[	O
0	int
]	O
.	O
z	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
z	double
;	O
b	pointer
.	O
x	double
=	O
vert	pointer
[	O
2	int
]	O
.	O
x	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
x	double
;	O
b	pointer
.	O
y	double
=	O
vert	pointer
[	O
2	int
]	O
.	O
y	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
y	double
;	O
b	pointer
.	O
z	double
=	O
vert	pointer
[	O
2	int
]	O
.	O
z	double
-	O
vert	pointer
[	O
1	int
]	O
.	O
z	double
;	O
VCrossProd	function
(	O
&	O
a	pointer
,	O
&	O
b	pointer
,	O
&	O
p	pointer
->	O
normal	struct
)	O
;	O
p	pointer
->	O
flags	short
|=	O
PolyNormalValid	int
;	O
}	O
}	O
return	O
p	pointer
;	O
}	O
