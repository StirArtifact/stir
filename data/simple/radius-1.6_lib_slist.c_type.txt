struct	O
grad_slist_bucket	struct
{	O
struct	O
grad_slist_bucket	struct
*	O
next	pointer
;	O
char	O
*	O
buf	pointer
;	O
size_t	long
level	int
;	O
size_t	long
size	int
;	O
}	O
;	O
struct	O
grad_slist	struct
{	O
struct	O
grad_slist_bucket	struct
*	O
head	pointer
,	O
*	O
tail	pointer
;	O
struct	O
grad_slist_bucket	struct
*	O
free	pointer
;	O
}	O
;	O
static	O
struct	O
grad_slist_bucket	struct
*	O
alloc_bucket	function
(	O
size_t	long
size	int
)	O
{	O
struct	O
grad_slist_bucket	struct
*	O
p	pointer
=	O
grad_malloc	function
(	O
sizeof	O
(	O
*	O
p	pointer
)	O
+	O
size	int
)	O
;	O
p	pointer
->	O
buf	pointer
=	O
(	O
char	O
*	O
)	O
(	O
p	pointer
+	O
1	int
)	O
;	O
p	pointer
->	O
level	int
=	O
0	int
;	O
p	pointer
->	O
size	int
=	O
size	int
;	O
p	pointer
->	O
next	pointer
=	O
NULL	O
;	O
return	O
p	pointer
;	O
}	O
static	O
void	O
alloc_pool	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
size_t	long
size	int
)	O
{	O
struct	O
grad_slist_bucket	struct
*	O
p	pointer
=	O
alloc_bucket	function
(	O
GRAD_SLIST_BUCKET_SIZE	int
)	O
;	O
if	O
(	O
slist	pointer
->	O
tail	pointer
)	O
slist	pointer
->	O
tail	pointer
->	O
next	pointer
=	O
p	pointer
;	O
else	O
slist	pointer
->	O
head	pointer
=	O
p	pointer
;	O
slist	pointer
->	O
tail	pointer
=	O
p	pointer
;	O
}	O
static	O
size_t	long
copy_chars	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
char	O
*	O
str	pointer
,	O
size_t	long
n	long
)	O
{	O
size_t	long
rest	long
;	O
if	O
(	O
!	O
slist	pointer
->	O
head	pointer
||	O
slist	pointer
->	O
tail	pointer
->	O
level	int
==	O
slist	pointer
->	O
tail	pointer
->	O
size	int
)	O
alloc_pool	function
(	O
slist	pointer
,	O
GRAD_SLIST_BUCKET_SIZE	int
)	O
;	O
rest	long
=	O
slist	pointer
->	O
tail	pointer
->	O
size	int
-	O
slist	pointer
->	O
tail	pointer
->	O
level	int
;	O
if	O
(	O
n	long
>	O
rest	long
)	O
n	long
=	O
rest	long
;	O
memcpy	function
(	O
slist	pointer
->	O
tail	pointer
->	O
buf	pointer
+	O
slist	pointer
->	O
tail	pointer
->	O
level	int
,	O
str	pointer
,	O
n	long
)	O
;	O
slist	pointer
->	O
tail	pointer
->	O
level	int
+=	O
n	long
;	O
return	O
n	long
;	O
}	O
grad_slist_t	pointer
grad_slist_create	function
(	O
)	O
{	O
grad_slist_t	pointer
slist	pointer
=	O
grad_malloc	function
(	O
sizeof	O
(	O
*	O
slist	pointer
)	O
)	O
;	O
slist	pointer
->	O
head	pointer
=	O
slist	pointer
->	O
tail	pointer
=	O
0	int
;	O
return	O
slist	pointer
;	O
}	O
void	O
grad_slist_clear	function
(	O
grad_slist_t	pointer
slist	pointer
)	O
{	O
if	O
(	O
slist	pointer
->	O
tail	pointer
)	O
{	O
slist	pointer
->	O
tail	pointer
->	O
next	pointer
=	O
slist	pointer
->	O
free	pointer
;	O
slist	pointer
->	O
free	pointer
=	O
slist	pointer
->	O
head	pointer
;	O
slist	pointer
->	O
head	pointer
=	O
slist	pointer
->	O
tail	pointer
=	O
NULL	O
;	O
}	O
}	O
void	O
grad_slist_free	function
(	O
grad_slist_t	pointer
*	O
slist	pointer
)	O
{	O
struct	O
grad_slist_bucket	struct
*	O
p	pointer
;	O
if	O
(	O
*	O
slist	pointer
)	O
{	O
grad_slist_clear	function
(	O
*	O
slist	pointer
)	O
;	O
for	O
(	O
p	pointer
=	O
(	O
*	O
slist	pointer
)	O
->	O
free	pointer
;	O
p	pointer
;	O
)	O
{	O
struct	O
grad_slist_bucket	struct
*	O
next	pointer
=	O
p	pointer
->	O
next	pointer
;	O
grad_free	function
(	O
p	pointer
)	O
;	O
p	pointer
=	O
next	pointer
;	O
}	O
}	O
grad_free	function
(	O
*	O
slist	pointer
)	O
;	O
*	O
slist	pointer
=	O
NULL	O
;	O
}	O
void	O
grad_slist_append	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
void	O
*	O
str	pointer
,	O
size_t	long
n	long
)	O
{	O
char	O
*	O
ptr	pointer
=	O
str	pointer
;	O
while	O
(	O
n	long
)	O
{	O
size_t	long
s	pointer
=	O
copy_chars	function
(	O
slist	pointer
,	O
ptr	pointer
,	O
n	long
)	O
;	O
ptr	pointer
+=	O
s	pointer
;	O
n	long
-=	O
s	pointer
;	O
}	O
}	O
void	O
grad_slist_append_char	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
char	O
c	pointer
)	O
{	O
grad_slist_append	function
(	O
slist	pointer
,	O
&	O
c	pointer
,	O
1	int
)	O
;	O
}	O
size_t	long
grad_slist_size	function
(	O
grad_slist_t	pointer
slist	pointer
)	O
{	O
size_t	long
size	int
=	O
0	int
;	O
struct	O
grad_slist_bucket	struct
*	O
p	pointer
;	O
for	O
(	O
p	pointer
=	O
slist	pointer
->	O
head	pointer
;	O
p	pointer
;	O
p	pointer
=	O
p	pointer
->	O
next	pointer
)	O
size	int
+=	O
p	pointer
->	O
level	int
;	O
return	O
size	int
;	O
}	O
size_t	long
grad_slist_coalesce	function
(	O
grad_slist_t	pointer
slist	pointer
)	O
{	O
size_t	long
size	int
;	O
if	O
(	O
slist	pointer
->	O
head	pointer
&&	O
slist	pointer
->	O
head	pointer
->	O
next	pointer
==	O
NULL	O
)	O
size	int
=	O
slist	pointer
->	O
head	pointer
->	O
level	int
;	O
else	O
{	O
struct	O
grad_slist_bucket	struct
*	O
bucket	pointer
;	O
struct	O
grad_slist_bucket	struct
*	O
p	pointer
;	O
size	int
=	O
grad_slist_size	function
(	O
slist	pointer
)	O
;	O
bucket	pointer
=	O
alloc_bucket	function
(	O
size	int
)	O
;	O
for	O
(	O
p	pointer
=	O
slist	pointer
->	O
head	pointer
;	O
p	pointer
;	O
)	O
{	O
struct	O
grad_slist_bucket	struct
*	O
next	pointer
=	O
p	pointer
->	O
next	pointer
;	O
memcpy	function
(	O
bucket	pointer
->	O
buf	pointer
+	O
bucket	pointer
->	O
level	int
,	O
p	pointer
->	O
buf	pointer
,	O
p	pointer
->	O
level	int
)	O
;	O
bucket	pointer
->	O
level	int
+=	O
p	pointer
->	O
level	int
;	O
grad_free	function
(	O
p	pointer
)	O
;	O
p	pointer
=	O
next	pointer
;	O
}	O
slist	pointer
->	O
head	pointer
=	O
slist	pointer
->	O
tail	pointer
=	O
bucket	pointer
;	O
}	O
return	O
size	int
;	O
}	O
void	O
*	O
grad_slist_head	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
size_t	long
*	O
psize	pointer
)	O
{	O
if	O
(	O
psize	pointer
)	O
*	O
psize	pointer
=	O
slist	pointer
->	O
head	pointer
?	O
slist	pointer
->	O
head	pointer
->	O
level	int
:	O
0	int
;	O
return	O
slist	pointer
->	O
head	pointer
?	O
slist	pointer
->	O
head	pointer
->	O
buf	pointer
:	O
NULL	O
;	O
}	O
void	O
*	O
grad_slist_finish	function
(	O
grad_slist_t	pointer
slist	pointer
)	O
{	O
grad_slist_coalesce	function
(	O
slist	pointer
)	O
;	O
grad_slist_clear	function
(	O
slist	pointer
)	O
;	O
return	O
slist	pointer
->	O
free	pointer
->	O
buf	pointer
;	O
}	O
void	O
grad_slist_grow_backslash_num	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
char	O
*	O
text	pointer
,	O
char	O
*	O
*	O
pend	pointer
,	O
int	O
len	int
,	O
int	O
base	int
)	O
{	O
int	O
i	int
;	O
int	O
val	int
=	O
0	int
;	O
char	O
*	O
start	pointer
=	O
text	pointer
;	O
if	O
(	O
text	pointer
[	O
0	int
]	O
==	O
'\\'	O
)	O
{	O
text	pointer
++	O
;	O
if	O
(	O
base	int
==	O
16	int
)	O
text	pointer
++	O
;	O
}	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
len	int
;	O
i	int
++	O
)	O
{	O
int	O
n	long
=	O
(	O
unsigned	O
char	O
)	O
text	pointer
[	O
i	int
]	O
;	O
if	O
(	O
n	long
>	O
127	int
||	O
(	O
n	long
=	O
to_num	O
(	O
n	long
)	O
)	O
>=	O
base	int
)	O
break	O
;	O
val	int
=	O
val	int
*	O
base	int
+	O
n	long
;	O
}	O
if	O
(	O
i	int
==	O
0	int
)	O
{	O
grad_slist_append	function
(	O
slist	pointer
,	O
start	pointer
,	O
1	int
)	O
;	O
if	O
(	O
pend	pointer
)	O
*	O
pend	pointer
=	O
start	pointer
+	O
1	int
;	O
}	O
else	O
{	O
grad_slist_append_char	function
(	O
slist	pointer
,	O
val	int
)	O
;	O
if	O
(	O
pend	pointer
)	O
*	O
pend	pointer
=	O
text	pointer
+	O
i	int
;	O
}	O
}	O
void	O
grad_slist_grow_backslash	function
(	O
grad_slist_t	pointer
slist	pointer
,	O
char	O
*	O
text	pointer
,	O
char	O
*	O
*	O
endp	pointer
)	O
{	O
if	O
(	O
text	pointer
[	O
1	int
]	O
==	O
'\\'	O
||	O
(	O
unsigned	O
char	O
)	O
text	pointer
[	O
1	int
]	O
>	O
127	int
)	O
{	O
grad_slist_append_char	function
(	O
slist	pointer
,	O
text	pointer
[	O
1	int
]	O
)	O
;	O
text	pointer
+=	O
2	int
;	O
}	O
else	O
if	O
(	O
isdigit	O
(	O
text	pointer
[	O
1	int
]	O
)	O
)	O
grad_slist_grow_backslash_num	function
(	O
slist	pointer
,	O
text	pointer
,	O
&	O
text	pointer
,	O
3	int
,	O
8	int
)	O
;	O
else	O
if	O
(	O
text	pointer
[	O
1	int
]	O
==	O
'x'	O
||	O
text	pointer
[	O
1	int
]	O
==	O
'X'	O
)	O
grad_slist_grow_backslash_num	function
(	O
slist	pointer
,	O
text	pointer
,	O
&	O
text	pointer
,	O
2	int
,	O
16	int
)	O
;	O
else	O
{	O
int	O
c	pointer
=	O
grad_decode_backslash	function
(	O
text	pointer
[	O
1	int
]	O
)	O
;	O
grad_slist_append_char	function
(	O
slist	pointer
,	O
c	pointer
)	O
;	O
text	pointer
+=	O
2	int
;	O
}	O
*	O
endp	pointer
=	O
text	pointer
;	O
}	O
