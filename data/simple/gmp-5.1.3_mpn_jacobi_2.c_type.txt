int	O
mpn_jacobi_2	O
(	O
mp_srcptr	pointer
ap	pointer
,	O
mp_srcptr	pointer
bp	pointer
,	O
unsigned	O
bit	int
)	O
{	O
mp_limb_t	long
ah	long
,	O
al	long
,	O
bh	long
,	O
bl	long
;	O
int	O
c	int
;	O
al	long
=	O
ap	pointer
[	O
0	int
]	O
;	O
ah	long
=	O
ap	pointer
[	O
1	int
]	O
;	O
bl	long
=	O
bp	pointer
[	O
0	int
]	O
;	O
bh	long
=	O
bp	pointer
[	O
1	int
]	O
;	O
ASSERT	O
(	O
bl	long
&	O
1	int
)	O
;	O
bit	int
<<=	O
1	int
;	O
if	O
(	O
bh	long
==	O
0	int
&&	O
bl	long
==	O
1	int
)	O
return	O
1	int
-	O
(	O
bit	int
&	O
2	int
)	O
;	O
if	O
(	O
al	long
==	O
0	int
)	O
{	O
if	O
(	O
ah	long
==	O
0	int
)	O
return	O
0	int
;	O
count_trailing_zeros	O
(	O
c	int
,	O
ah	long
)	O
;	O
bit	int
^=	O
(	O
(	O
GMP_NUMB_BITS	O
+	O
c	int
)	O
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
al	long
=	O
bl	long
;	O
bl	long
=	O
ah	long
>>	O
c	int
;	O
if	O
(	O
bl	long
==	O
1	int
)	O
return	O
1	int
-	O
(	O
bit	int
&	O
2	int
)	O
;	O
ah	long
=	O
bh	long
;	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
goto	O
b_reduced	O
;	O
}	O
if	O
(	O
(	O
al	long
&	O
1	int
)	O
==	O
0	int
)	O
{	O
count_trailing_zeros	O
(	O
c	int
,	O
al	long
)	O
;	O
al	long
=	O
(	O
(	O
ah	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
c	int
)	O
)	O
&	O
GMP_NUMB_MASK	O
)	O
|	O
(	O
al	long
>>	O
c	int
)	O
;	O
ah	long
>>=	O
c	int
;	O
bit	int
^=	O
(	O
c	int
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
}	O
if	O
(	O
ah	long
==	O
0	int
)	O
{	O
if	O
(	O
bh	long
>	O
0	int
)	O
{	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
MP_LIMB_T_SWAP	O
(	O
al	long
,	O
bl	long
)	O
;	O
ah	long
=	O
bh	long
;	O
goto	O
b_reduced	O
;	O
}	O
goto	O
ab_reduced	O
;	O
}	O
while	O
(	O
bh	long
>	O
0	int
)	O
{	O
while	O
(	O
ah	long
>	O
bh	long
)	O
{	O
sub_ddmmss	O
(	O
ah	long
,	O
al	long
,	O
ah	long
,	O
al	long
,	O
bh	long
,	O
bl	long
)	O
;	O
if	O
(	O
al	long
==	O
0	int
)	O
{	O
count_trailing_zeros	O
(	O
c	int
,	O
ah	long
)	O
;	O
bit	int
^=	O
(	O
(	O
GMP_NUMB_BITS	O
+	O
c	int
)	O
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
al	long
=	O
bl	long
;	O
bl	long
=	O
ah	long
>>	O
c	int
;	O
ah	long
=	O
bh	long
;	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
goto	O
b_reduced	O
;	O
}	O
count_trailing_zeros	O
(	O
c	int
,	O
al	long
)	O
;	O
bit	int
^=	O
(	O
c	int
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
al	long
=	O
(	O
(	O
ah	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
c	int
)	O
)	O
&	O
GMP_NUMB_MASK	O
)	O
|	O
(	O
al	long
>>	O
c	int
)	O
;	O
ah	long
>>=	O
c	int
;	O
}	O
if	O
(	O
ah	long
==	O
bh	long
)	O
goto	O
cancel_hi	O
;	O
if	O
(	O
ah	long
==	O
0	int
)	O
{	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
MP_LIMB_T_SWAP	O
(	O
al	long
,	O
bl	long
)	O
;	O
ah	long
=	O
bh	long
;	O
break	O
;	O
}	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
while	O
(	O
bh	long
>	O
ah	long
)	O
{	O
sub_ddmmss	O
(	O
bh	long
,	O
bl	long
,	O
bh	long
,	O
bl	long
,	O
ah	long
,	O
al	long
)	O
;	O
if	O
(	O
bl	long
==	O
0	int
)	O
{	O
count_trailing_zeros	O
(	O
c	int
,	O
bh	long
)	O
;	O
bit	int
^=	O
(	O
(	O
GMP_NUMB_BITS	O
+	O
c	int
)	O
<<	O
1	int
)	O
&	O
(	O
al	long
^	O
(	O
al	long
>>	O
1	int
)	O
)	O
;	O
bl	long
=	O
bh	long
>>	O
c	int
;	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
goto	O
b_reduced	O
;	O
}	O
count_trailing_zeros	O
(	O
c	int
,	O
bl	long
)	O
;	O
bit	int
^=	O
(	O
c	int
<<	O
1	int
)	O
&	O
(	O
al	long
^	O
(	O
al	long
>>	O
1	int
)	O
)	O
;	O
bl	long
=	O
(	O
(	O
bh	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
c	int
)	O
)	O
&	O
GMP_NUMB_MASK	O
)	O
|	O
(	O
bl	long
>>	O
c	int
)	O
;	O
bh	long
>>=	O
c	int
;	O
}	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
if	O
(	O
ah	long
==	O
bh	long
)	O
{	O
cancel_hi	O
:	O
if	O
(	O
al	long
<	O
bl	long
)	O
{	O
MP_LIMB_T_SWAP	O
(	O
al	long
,	O
bl	long
)	O
;	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
}	O
al	long
-=	O
bl	long
;	O
if	O
(	O
al	long
==	O
0	int
)	O
return	O
0	int
;	O
count_trailing_zeros	O
(	O
c	int
,	O
al	long
)	O
;	O
bit	int
^=	O
(	O
c	int
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
al	long
>>=	O
c	int
;	O
if	O
(	O
al	long
==	O
1	int
)	O
return	O
1	int
-	O
(	O
bit	int
&	O
2	int
)	O
;	O
MP_LIMB_T_SWAP	O
(	O
al	long
,	O
bl	long
)	O
;	O
bit	int
^=	O
al	long
&	O
bl	long
;	O
break	O
;	O
}	O
}	O
b_reduced	O
:	O
ASSERT	O
(	O
bl	long
&	O
1	int
)	O
;	O
if	O
(	O
bl	long
==	O
1	int
)	O
return	O
1	int
-	O
(	O
bit	int
&	O
2	int
)	O
;	O
while	O
(	O
ah	long
>	O
0	int
)	O
{	O
ah	long
-=	O
(	O
al	long
<	O
bl	long
)	O
;	O
al	long
-=	O
bl	long
;	O
if	O
(	O
al	long
==	O
0	int
)	O
{	O
if	O
(	O
ah	long
==	O
0	int
)	O
return	O
0	int
;	O
count_trailing_zeros	O
(	O
c	int
,	O
ah	long
)	O
;	O
bit	int
^=	O
(	O
(	O
GMP_NUMB_BITS	O
+	O
c	int
)	O
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
al	long
=	O
ah	long
>>	O
c	int
;	O
goto	O
ab_reduced	O
;	O
}	O
count_trailing_zeros	O
(	O
c	int
,	O
al	long
)	O
;	O
al	long
=	O
(	O
(	O
ah	long
<<	O
(	O
GMP_NUMB_BITS	O
-	O
c	int
)	O
)	O
&	O
GMP_NUMB_MASK	O
)	O
|	O
(	O
al	long
>>	O
c	int
)	O
;	O
ah	long
>>=	O
c	int
;	O
bit	int
^=	O
(	O
c	int
<<	O
1	int
)	O
&	O
(	O
bl	long
^	O
(	O
bl	long
>>	O
1	int
)	O
)	O
;	O
}	O
ab_reduced	O
:	O
ASSERT	O
(	O
bl	long
&	O
1	int
)	O
;	O
ASSERT	O
(	O
bl	long
>	O
1	int
)	O
;	O
return	O
mpn_jacobi_base	O
(	O
al	long
,	O
bl	long
,	O
bit	int
)	O
;	O
}	O
