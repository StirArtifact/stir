char	O
*	O
ATTRIBUTE_MALLOC	O
htmlescape	function
(	O
const	O
char	O
*	O
restrict	O
src	pointer
,	O
const	O
int	O
cp	int
)	O
{	O
int	O
len	int
=	O
strlen	function
(	O
src	pointer
)	O
+	O
10	int
;	O
char	O
*	O
dest	pointer
,	O
*	O
d	pointer
=	O
malloc	function
(	O
len	int
)	O
;	O
unsigned	O
char	O
*	O
s	pointer
=	O
(	O
unsigned	O
char	O
*	O
)	O
src	pointer
;	O
dest	pointer
=	O
d	pointer
;	O
while	O
(	O
*	O
s	pointer
++	O
)	O
{	O
const	O
int	O
off	int
=	O
d	pointer
-	O
dest	pointer
;	O
if	O
(	O
off	int
>=	O
len	int
-	O
8	int
)	O
{	O
len	int
+=	O
10	int
;	O
dest	pointer
=	O
realloc	function
(	O
dest	pointer
,	O
len	int
)	O
;	O
d	pointer
=	O
dest	pointer
+	O
off	int
;	O
}	O
switch	O
(	O
*	O
s	pointer
)	O
{	O
case	O
'"'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&quot;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
case	O
'\''	O
:	O
strcat	function
(	O
d	pointer
,	O
"&#39;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
'`'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&#96;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
'&'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&amp;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
'<'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&lt;"	pointer
)	O
;	O
d	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
'>'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&gt;"	pointer
)	O
;	O
d	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
'{'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&#123;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
case	O
'}'	O
:	O
strcat	function
(	O
d	pointer
,	O
"&#125;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
default	O
:	O
if	O
(	O
*	O
s	pointer
>=	O
127	int
)	O
{	O
sprintf	function
(	O
d	pointer
,	O
"&#x%X;"	pointer
,	O
*	O
s	pointer
)	O
;	O
d	pointer
+=	O
strlen	function
(	O
d	pointer
)	O
;	O
}	O
else	O
if	O
(	O
*	O
s	pointer
>=	O
20	int
)	O
*	O
d	pointer
++	O
=	O
*	O
s	pointer
;	O
}	O
}	O
*	O
d	pointer
=	O
0	int
;	O
return	O
dest	pointer
;	O
}	O
char	O
*	O
ATTRIBUTE_MALLOC	O
htmlwescape	function
(	O
BITCODE_TU	pointer
wstr	pointer
)	O
{	O
int	O
len	int
=	O
0	int
;	O
char	O
*	O
dest	pointer
,	O
*	O
d	pointer
;	O
BITCODE_TU	pointer
tmp	pointer
=	O
wstr	pointer
;	O
BITCODE_RS	short
c	short
;	O
if	O
(	O
!	O
wstr	pointer
)	O
return	O
NULL	O
;	O
while	O
(	O
(	O
c	short
=	O
*	O
tmp	pointer
++	O
)	O
)	O
len	int
++	O
;	O
len	int
+=	O
16	int
;	O
d	pointer
=	O
dest	pointer
=	O
malloc	function
(	O
len	int
)	O
;	O
while	O
(	O
*	O
wstr	pointer
++	O
)	O
{	O
const	O
int	O
off	int
=	O
d	pointer
-	O
dest	pointer
;	O
if	O
(	O
off	int
>=	O
len	int
-	O
8	int
)	O
{	O
len	int
+=	O
16	int
;	O
dest	pointer
=	O
realloc	function
(	O
dest	pointer
,	O
len	int
)	O
;	O
d	pointer
=	O
dest	pointer
+	O
off	int
;	O
}	O
switch	O
(	O
*	O
wstr	pointer
)	O
{	O
case	O
34	int
:	O
strcat	function
(	O
d	pointer
,	O
"&quot;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
case	O
39	int
:	O
strcat	function
(	O
d	pointer
,	O
"&#39;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
38	int
:	O
strcat	function
(	O
d	pointer
,	O
"&amp;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
60	int
:	O
strcat	function
(	O
d	pointer
,	O
"&lt;"	pointer
)	O
;	O
d	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
62	int
:	O
strcat	function
(	O
d	pointer
,	O
"&gt;"	pointer
)	O
;	O
d	pointer
+=	O
4	int
;	O
break	O
;	O
case	O
96	int
:	O
strcat	function
(	O
d	pointer
,	O
"&#96;"	pointer
)	O
;	O
d	pointer
+=	O
5	int
;	O
break	O
;	O
case	O
123	int
:	O
strcat	function
(	O
d	pointer
,	O
"&#123;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
case	O
125	int
:	O
strcat	function
(	O
d	pointer
,	O
"&#125;"	pointer
)	O
;	O
d	pointer
+=	O
6	int
;	O
break	O
;	O
default	O
:	O
if	O
(	O
*	O
wstr	pointer
>=	O
127	int
)	O
{	O
sprintf	function
(	O
d	pointer
,	O
"&#x%X;"	pointer
,	O
*	O
wstr	pointer
)	O
;	O
d	pointer
+=	O
strlen	function
(	O
d	pointer
)	O
;	O
}	O
else	O
if	O
(	O
*	O
wstr	pointer
>=	O
20	int
)	O
*	O
d	pointer
++	O
=	O
*	O
wstr	pointer
;	O
}	O
}	O
*	O
d	pointer
=	O
0	int
;	O
return	O
dest	pointer
;	O
}	O
