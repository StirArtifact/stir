static	O
mu_url_t	pointer
prev_url	pointer
;	O
int	O
mail_expand_name	function
(	O
const	O
char	O
*	O
name	pointer
,	O
mu_url_t	pointer
*	O
purl	pointer
)	O
{	O
int	O
rc	int
;	O
char	O
*	O
exp	pointer
=	O
NULL	O
;	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
"#"	pointer
)	O
==	O
0	int
)	O
{	O
if	O
(	O
!	O
prev_url	pointer
)	O
{	O
mu_error	function
(	O
_	O
(	O
"No previous file"	pointer
)	O
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
rc	int
=	O
mu_url_dup	function
(	O
prev_url	pointer
,	O
purl	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_url_dup"	pointer
,	O
exp	pointer
,	O
rc	int
)	O
;	O
return	O
rc	int
;	O
}	O
}	O
if	O
(	O
secondary_url	pointer
&&	O
strcmp	function
(	O
name	pointer
,	O
"@"	pointer
)	O
==	O
0	int
)	O
{	O
rc	int
=	O
mu_url_dup	function
(	O
secondary_url	pointer
,	O
purl	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_url_dup"	pointer
,	O
mu_url_to_string	function
(	O
secondary_url	pointer
)	O
,	O
rc	int
)	O
;	O
return	O
rc	int
;	O
}	O
if	O
(	O
strcmp	function
(	O
name	pointer
,	O
"&"	pointer
)	O
==	O
0	int
)	O
{	O
name	pointer
=	O
getenv	function
(	O
"MBOX"	pointer
)	O
;	O
if	O
(	O
!	O
name	pointer
)	O
{	O
mu_error	function
(	O
_	O
(	O
"MBOX environment variable not set"	pointer
)	O
)	O
;	O
return	O
MU_ERR_FAILURE	O
;	O
}	O
}	O
rc	int
=	O
mu_mailbox_expand_name	function
(	O
name	pointer
,	O
&	O
exp	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_error	function
(	O
_	O
(	O
"Failed to expand %s: %s"	pointer
)	O
,	O
name	pointer
,	O
mu_strerror	function
(	O
rc	int
)	O
)	O
;	O
rc	int
=	O
mu_url_create	function
(	O
purl	pointer
,	O
exp	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
mu_diag_funcall	function
(	O
MU_DIAG_ERROR	O
,	O
"mu_url_create"	pointer
,	O
exp	pointer
,	O
rc	int
)	O
;	O
free	function
(	O
exp	pointer
)	O
;	O
return	O
rc	int
;	O
}	O
int	O
mail_file	function
(	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
)	O
{	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
mail_summary	function
(	O
0	int
,	O
NULL	O
)	O
;	O
}	O
else	O
if	O
(	O
argc	int
==	O
2	int
)	O
{	O
mu_url_t	pointer
url	pointer
,	O
tmp_url	pointer
;	O
mu_mailbox_t	pointer
newbox	pointer
=	O
NULL	O
;	O
int	O
status	int
;	O
if	O
(	O
mail_expand_name	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
&	O
url	pointer
)	O
)	O
return	O
1	int
;	O
status	int
=	O
mu_mailbox_create_from_url	function
(	O
&	O
newbox	pointer
,	O
url	pointer
)	O
;	O
if	O
(	O
status	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"Cannot create mailbox %s: %s"	pointer
)	O
,	O
mu_url_to_string	function
(	O
url	pointer
)	O
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
mu_url_destroy	function
(	O
&	O
url	pointer
)	O
;	O
return	O
1	int
;	O
}	O
mu_mailbox_attach_ticket	function
(	O
newbox	pointer
)	O
;	O
if	O
(	O
(	O
status	int
=	O
mu_mailbox_open	function
(	O
newbox	pointer
,	O
MU_STREAM_RDWR	O
)	O
)	O
!=	O
0	int
)	O
{	O
mu_error	function
(	O
_	O
(	O
"Cannot open mailbox %s: %s"	pointer
)	O
,	O
mu_url_to_string	function
(	O
url	pointer
)	O
,	O
mu_strerror	function
(	O
status	int
)	O
)	O
;	O
mu_mailbox_destroy	function
(	O
&	O
newbox	pointer
)	O
;	O
return	O
1	int
;	O
}	O
page_invalidate	function
(	O
1	int
)	O
;	O
mu_mailbox_get_url	function
(	O
mbox	pointer
,	O
&	O
url	pointer
)	O
;	O
mu_url_dup	function
(	O
url	pointer
,	O
&	O
tmp_url	pointer
)	O
;	O
if	O
(	O
mail_mbox_close	function
(	O
)	O
)	O
{	O
mu_url_destroy	function
(	O
&	O
tmp_url	pointer
)	O
;	O
mu_mailbox_close	function
(	O
newbox	pointer
)	O
;	O
mu_mailbox_destroy	function
(	O
&	O
newbox	pointer
)	O
;	O
return	O
1	int
;	O
}	O
mu_url_destroy	function
(	O
&	O
prev_url	pointer
)	O
;	O
prev_url	pointer
=	O
tmp_url	pointer
;	O
mbox	pointer
=	O
newbox	pointer
;	O
mu_mailbox_messages_count	function
(	O
mbox	pointer
,	O
&	O
total	long
)	O
;	O
set_cursor	function
(	O
1	int
)	O
;	O
if	O
(	O
mailvar_is_true	function
(	O
mailvar_name_header	pointer
)	O
)	O
{	O
util_do_command	function
(	O
"summary"	pointer
)	O
;	O
util_do_command	function
(	O
"headers"	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
else	O
{	O
mu_error	function
(	O
_	O
(	O
"%s takes only one argument"	pointer
)	O
,	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
}	O
return	O
1	int
;	O
}	O
