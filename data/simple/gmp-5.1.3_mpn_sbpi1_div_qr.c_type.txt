mp_limb_t	long
mpn_sbpi1_div_qr	O
(	O
mp_ptr	pointer
qp	pointer
,	O
mp_ptr	pointer
np	pointer
,	O
mp_size_t	long
nn	long
,	O
mp_srcptr	pointer
dp	pointer
,	O
mp_size_t	long
dn	long
,	O
mp_limb_t	long
dinv	long
)	O
{	O
mp_limb_t	long
qh	long
;	O
mp_size_t	long
i	long
;	O
mp_limb_t	long
n1	long
,	O
n0	long
;	O
mp_limb_t	long
d1	long
,	O
d0	long
;	O
mp_limb_t	long
cy	long
,	O
cy1	long
;	O
mp_limb_t	long
q	int
;	O
ASSERT	O
(	O
dn	long
>	O
2	int
)	O
;	O
ASSERT	O
(	O
nn	long
>=	O
dn	long
)	O
;	O
ASSERT	O
(	O
(	O
dp	pointer
[	O
dn	long
-	O
1	int
]	O
&	O
GMP_NUMB_HIGHBIT	O
)	O
!=	O
0	int
)	O
;	O
np	pointer
+=	O
nn	long
;	O
qh	long
=	O
mpn_cmp	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
)	O
>=	O
0	int
;	O
if	O
(	O
qh	long
!=	O
0	int
)	O
mpn_sub_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
)	O
;	O
qp	pointer
+=	O
nn	long
-	O
dn	long
;	O
dn	long
-=	O
2	int
;	O
d1	long
=	O
dp	pointer
[	O
dn	long
+	O
1	int
]	O
;	O
d0	long
=	O
dp	pointer
[	O
dn	long
+	O
0	int
]	O
;	O
np	pointer
-=	O
2	int
;	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
for	O
(	O
i	long
=	O
nn	long
-	O
(	O
dn	long
+	O
2	int
)	O
;	O
i	long
>	O
0	int
;	O
i	long
--	O
)	O
{	O
np	pointer
--	O
;	O
if	O
(	O
UNLIKELY	O
(	O
n1	long
==	O
d1	long
)	O
&&	O
np	pointer
[	O
1	int
]	O
==	O
d0	long
)	O
{	O
q	int
=	O
GMP_NUMB_MASK	O
;	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
2	int
,	O
q	int
)	O
;	O
n1	long
=	O
np	pointer
[	O
1	int
]	O
;	O
}	O
else	O
{	O
udiv_qr_3by2	O
(	O
q	int
,	O
n1	long
,	O
n0	long
,	O
n1	long
,	O
np	pointer
[	O
1	int
]	O
,	O
np	pointer
[	O
0	int
]	O
,	O
d1	long
,	O
d0	long
,	O
dinv	long
)	O
;	O
cy	long
=	O
mpn_submul_1	O
(	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
,	O
q	int
)	O
;	O
cy1	long
=	O
n0	long
<	O
cy	long
;	O
n0	long
=	O
(	O
n0	long
-	O
cy	long
)	O
&	O
GMP_NUMB_MASK	O
;	O
cy	long
=	O
n1	long
<	O
cy1	long
;	O
n1	long
=	O
(	O
n1	long
-	O
cy1	long
)	O
&	O
GMP_NUMB_MASK	O
;	O
np	pointer
[	O
0	int
]	O
=	O
n0	long
;	O
if	O
(	O
UNLIKELY	O
(	O
cy	long
!=	O
0	int
)	O
)	O
{	O
n1	long
+=	O
d1	long
+	O
mpn_add_n	O
(	O
np	pointer
-	O
dn	long
,	O
np	pointer
-	O
dn	long
,	O
dp	pointer
,	O
dn	long
+	O
1	int
)	O
;	O
q	int
--	O
;	O
}	O
}	O
*	O
--	O
qp	pointer
=	O
q	int
;	O
}	O
np	pointer
[	O
1	int
]	O
=	O
n1	long
;	O
return	O
qh	long
;	O
}	O
