int	O
mu_wicket_create	function
(	O
mu_wicket_t	pointer
*	O
pwicket	pointer
)	O
{	O
mu_wicket_t	pointer
wicket	pointer
=	O
calloc	function
(	O
1	int
,	O
sizeof	O
(	O
*	O
wicket	pointer
)	O
)	O
;	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
ENOMEM	int
;	O
wicket	pointer
->	O
refcnt	int
=	O
1	int
;	O
*	O
pwicket	pointer
=	O
wicket	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_wicket_get_ticket	function
(	O
mu_wicket_t	pointer
wicket	pointer
,	O
const	O
char	O
*	O
user	pointer
,	O
mu_ticket_t	pointer
*	O
pticket	pointer
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
pticket	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
!	O
wicket	pointer
->	O
_get_ticket	pointer
)	O
return	O
ENOSYS	int
;	O
return	O
wicket	pointer
->	O
_get_ticket	pointer
(	O
wicket	pointer
,	O
wicket	pointer
->	O
data	pointer
,	O
user	pointer
,	O
pticket	pointer
)	O
;	O
}	O
int	O
mu_wicket_ref	function
(	O
mu_wicket_t	pointer
wicket	pointer
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
wicket	pointer
->	O
refcnt	int
++	O
;	O
return	O
0	int
;	O
}	O
int	O
mu_wicket_unref	function
(	O
mu_wicket_t	pointer
wicket	pointer
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
if	O
(	O
wicket	pointer
->	O
refcnt	int
)	O
wicket	pointer
->	O
refcnt	int
--	O
;	O
if	O
(	O
wicket	pointer
->	O
refcnt	int
==	O
0	int
)	O
{	O
if	O
(	O
wicket	pointer
->	O
_destroy	pointer
)	O
wicket	pointer
->	O
_destroy	pointer
(	O
wicket	pointer
)	O
;	O
free	function
(	O
wicket	pointer
)	O
;	O
return	O
0	int
;	O
}	O
return	O
MU_ERR_EXISTS	O
;	O
}	O
void	O
mu_wicket_destroy	function
(	O
mu_wicket_t	pointer
*	O
pwicket	pointer
)	O
{	O
if	O
(	O
pwicket	pointer
&&	O
*	O
pwicket	pointer
&&	O
mu_wicket_unref	function
(	O
*	O
pwicket	pointer
)	O
==	O
0	int
)	O
*	O
pwicket	pointer
=	O
NULL	O
;	O
}	O
int	O
mu_wicket_set_destroy	function
(	O
mu_wicket_t	pointer
wicket	pointer
,	O
void	O
(	O
*	O
_destroy	pointer
)	O
(	O
mu_wicket_t	pointer
)	O
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
wicket	pointer
->	O
_destroy	pointer
=	O
_destroy	pointer
;	O
return	O
0	int
;	O
}	O
int	O
mu_wicket_set_data	function
(	O
mu_wicket_t	pointer
wicket	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
wicket	pointer
->	O
data	pointer
=	O
data	pointer
;	O
return	O
0	int
;	O
}	O
void	O
*	O
mu_wicket_get_data	function
(	O
mu_wicket_t	pointer
wicket	pointer
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
NULL	O
;	O
return	O
wicket	pointer
->	O
data	pointer
;	O
}	O
int	O
mu_wicket_set_get_ticket	function
(	O
mu_wicket_t	pointer
wicket	pointer
,	O
int	O
(	O
*	O
_get_ticket	pointer
)	O
(	O
mu_wicket_t	pointer
,	O
void	O
*	O
,	O
const	O
char	O
*	O
,	O
mu_ticket_t	pointer
*	O
)	O
)	O
{	O
if	O
(	O
!	O
wicket	pointer
)	O
return	O
EINVAL	int
;	O
wicket	pointer
->	O
_get_ticket	pointer
=	O
_get_ticket	pointer
;	O
return	O
0	int
;	O
}	O
