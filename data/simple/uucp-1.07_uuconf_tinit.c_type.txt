const	O
char	O
_uuconf_tinit_rcsid	array
[	O
]	O
=	O
"$Id: tinit.c,v 1.16 2002/03/05 19:10:43 ian Rel $"	pointer
;	O
static	O
int	O
itset_default	function
P	O
(	O
(	O
struct	O
sglobal	struct
*	O
qglobal	pointer
,	O
char	O
*	O
*	O
*	O
ppzvar	pointer
,	O
const	O
char	O
*	O
zfile	pointer
)	O
)	O
;	O
static	O
int	O
itdebug	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
itaddfile	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
itunknown	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
itprogram	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asCmds	array
[	O
]	O
=	O
{	O
{	O
"nodename"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zlocalname	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"hostname"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zlocalname	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"uuname"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zlocalname	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"spool"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zspooldir	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"pubdir"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zpubdir	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"lockdir"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zlockdir	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"logfile"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zlogfile	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"statfile"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zstatsfile	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"debugfile"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zdebugfile	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"debug"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zdebug	pointer
)	O
,	O
itdebug	function
}	O
,	O
{	O
"strip-login"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
fstrip_login	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"strip-proto"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
fstrip_proto	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"max-uuxqts"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
cmaxuuxqts	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"run-uuxqt"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
zrunuuxqt	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"sysfile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzsysfiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"portfile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzportfiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"dialfile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzdialfiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"dialcodefile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzdialcodefiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"callfile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzcallfiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"passwdfile"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pzpwdfiles	pointer
)	O
,	O
itaddfile	function
}	O
,	O
{	O
"unknown"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
qunknown	pointer
)	O
,	O
itunknown	function
}	O
,	O
{	O
"v2-files"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
fv2	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"hdb-files"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
fhdb	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"bnu-files"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
fhdb	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"timetable"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
3	int
,	O
offsetof	O
(	O
struct	O
sprocess	struct
,	O
pztimetables	pointer
)	O
,	O
_uuconf_itimetable	function
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
struct	O
sinfo	struct
{	O
const	O
char	O
*	O
zname	pointer
;	O
struct	O
uuconf_cmdtab	struct
*	O
qcmds	pointer
;	O
}	O
;	O
int	O
uuconf_taylor_init	function
(	O
ppglobal	pointer
,	O
zprogram	pointer
,	O
zname	pointer
)	O
pointer	pointer
*	O
ppglobal	pointer
;	O
const	O
char	O
*	O
zprogram	pointer
;	O
const	O
char	O
*	O
zname	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
*	O
pqglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
*	O
)	O
ppglobal	pointer
;	O
int	O
iret	int
;	O
char	O
*	O
zcopy	pointer
;	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
boolean	int
fdefault	int
;	O
FILE	struct
*	O
e	pointer
;	O
struct	O
sinfo	struct
si	struct
;	O
if	O
(	O
*	O
pqglobal	pointer
==	O
NULL	O
)	O
{	O
iret	int
=	O
_uuconf_iinit_global	function
(	O
pqglobal	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
qglobal	pointer
=	O
*	O
pqglobal	pointer
;	O
if	O
(	O
zname	pointer
!=	O
NULL	O
)	O
{	O
size_t	long
csize	long
;	O
csize	long
=	O
strlen	function
(	O
zname	pointer
)	O
+	O
1	int
;	O
zcopy	pointer
=	O
uuconf_malloc	function
(	O
qglobal	pointer
->	O
pblock	pointer
,	O
csize	long
)	O
;	O
if	O
(	O
zcopy	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zcopy	pointer
,	O
(	O
pointer	pointer
)	O
zname	pointer
,	O
csize	long
)	O
;	O
fdefault	int
=	O
FALSE	O
;	O
}	O
else	O
{	O
zcopy	pointer
=	O
uuconf_malloc	function
(	O
qglobal	pointer
->	O
pblock	pointer
,	O
sizeof	O
NEWCONFIGLIB	O
+	O
sizeof	O
CONFIGFILE	pointer
-	O
1	int
)	O
;	O
if	O
(	O
zcopy	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zcopy	pointer
,	O
(	O
pointer	pointer
)	O
NEWCONFIGLIB	O
,	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zcopy	pointer
+	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
CONFIGFILE	pointer
,	O
sizeof	O
CONFIGFILE	pointer
)	O
;	O
fdefault	int
=	O
TRUE	O
;	O
}	O
qglobal	pointer
->	O
qprocess	pointer
->	O
zconfigfile	pointer
=	O
zcopy	pointer
;	O
e	pointer
=	O
fopen	function
(	O
zcopy	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
e	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
!	O
fdefault	int
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
qglobal	pointer
->	O
zfilename	pointer
=	O
zcopy	pointer
;	O
return	O
(	O
UUCONF_FOPEN_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_ERROR_FILENAME	O
)	O
;	O
}	O
}	O
else	O
{	O
struct	O
uuconf_cmdtab	struct
as	array
[	O
CCMDS	O
]	O
;	O
_uuconf_ucmdtab_base	function
(	O
asCmds	array
,	O
CCMDS	O
,	O
(	O
char	O
*	O
)	O
qglobal	pointer
->	O
qprocess	pointer
,	O
as	array
)	O
;	O
if	O
(	O
zprogram	pointer
==	O
NULL	O
)	O
zprogram	pointer
=	O
"uucp"	pointer
;	O
si	struct
.	O
zname	pointer
=	O
zprogram	pointer
;	O
si	struct
.	O
qcmds	pointer
=	O
as	array
;	O
iret	int
=	O
uuconf_cmd_file	function
(	O
qglobal	pointer
,	O
e	pointer
,	O
as	array
,	O
(	O
pointer	pointer
)	O
&	O
si	struct
,	O
itprogram	function
,	O
UUCONF_CMDTABFLAG_BACKSLASH	O
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
(	O
void	O
)	O
fclose	function
(	O
e	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
{	O
qglobal	pointer
->	O
zfilename	pointer
=	O
zcopy	pointer
;	O
return	O
iret	int
|	O
UUCONF_ERROR_FILENAME	O
;	O
}	O
}	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzsysfiles	pointer
,	O
SYSFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzportfiles	pointer
,	O
PORTFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzdialfiles	pointer
,	O
DIALFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzdialcodefiles	pointer
,	O
DIALCODEFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzpwdfiles	pointer
,	O
PASSWDFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
=	O
itset_default	function
(	O
qglobal	pointer
,	O
&	O
qglobal	pointer
->	O
qprocess	pointer
->	O
pzcallfiles	pointer
,	O
CALLFILE	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
return	O
UUCONF_SUCCESS	O
;	O
}	O
static	O
int	O
itdebug	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
char	O
*	O
*	O
pzdebug	pointer
=	O
(	O
char	O
*	O
*	O
)	O
pvar	pointer
;	O
return	O
_uuconf_idebug_cmd	function
(	O
qglobal	pointer
,	O
pzdebug	pointer
,	O
argc	int
,	O
argv	pointer
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
}	O
static	O
int	O
itaddfile	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
char	O
*	O
*	O
*	O
ppz	pointer
=	O
(	O
char	O
*	O
*	O
*	O
)	O
pvar	pointer
;	O
int	O
i	int
;	O
int	O
iret	int
;	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
NULL	O
,	O
FALSE	O
,	O
FALSE	O
,	O
ppz	pointer
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
else	O
{	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
char	O
*	O
z	pointer
;	O
boolean	int
fallocated	int
;	O
MAKE_ABSOLUTE	O
(	O
z	pointer
,	O
fallocated	int
,	O
argv	pointer
[	O
i	int
]	O
,	O
NEWCONFIGLIB	O
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
if	O
(	O
z	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
z	pointer
,	O
!	O
fallocated	int
,	O
FALSE	O
,	O
ppz	pointer
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
}	O
}	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
static	O
int	O
itunknown	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
struct	O
sunknown	struct
*	O
*	O
pq	pointer
=	O
(	O
struct	O
sunknown	struct
*	O
*	O
)	O
pvar	pointer
;	O
struct	O
sunknown	struct
*	O
q	pointer
;	O
q	pointer
=	O
(	O
struct	O
sunknown	struct
*	O
)	O
uuconf_malloc	function
(	O
qglobal	pointer
->	O
pblock	pointer
,	O
sizeof	O
(	O
struct	O
sunknown	struct
)	O
)	O
;	O
if	O
(	O
q	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
q	pointer
->	O
qnext	pointer
=	O
NULL	O
;	O
q	pointer
->	O
ilineno	int
=	O
qglobal	pointer
->	O
ilineno	int
;	O
q	pointer
->	O
cargs	int
=	O
argc	int
-	O
1	int
;	O
q	pointer
->	O
pzargs	pointer
=	O
(	O
char	O
*	O
*	O
)	O
uuconf_malloc	function
(	O
qglobal	pointer
->	O
pblock	pointer
,	O
(	O
argc	int
-	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
if	O
(	O
q	pointer
->	O
pzargs	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
q	pointer
->	O
pzargs	pointer
,	O
(	O
pointer	pointer
)	O
(	O
argv	pointer
+	O
1	int
)	O
,	O
(	O
argc	int
-	O
1	int
)	O
*	O
sizeof	O
(	O
char	O
*	O
)	O
)	O
;	O
while	O
(	O
*	O
pq	pointer
!=	O
NULL	O
)	O
pq	pointer
=	O
&	O
(	O
*	O
pq	pointer
)	O
->	O
qnext	pointer
;	O
*	O
pq	pointer
=	O
q	pointer
;	O
return	O
UUCONF_CMDTABRET_KEEP	O
;	O
}	O
static	O
int	O
itprogram	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
struct	O
sinfo	struct
*	O
qinfo	pointer
=	O
(	O
struct	O
sinfo	struct
*	O
)	O
pinfo	pointer
;	O
if	O
(	O
argc	int
<=	O
1	int
||	O
strcasecmp	function
(	O
qinfo	pointer
->	O
zname	pointer
,	O
argv	pointer
[	O
0	int
]	O
)	O
!=	O
0	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
return	O
uuconf_cmd_args	function
(	O
pglobal	pointer
,	O
argc	int
-	O
1	int
,	O
argv	pointer
+	O
1	int
,	O
qinfo	pointer
->	O
qcmds	pointer
,	O
(	O
pointer	pointer
)	O
NULL	O
,	O
(	O
uuconf_cmdtabfn	pointer
)	O
NULL	O
,	O
0	int
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
}	O
static	O
int	O
itset_default	function
(	O
qglobal	pointer
,	O
ppzvar	pointer
,	O
zfile	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
char	O
*	O
*	O
*	O
ppzvar	pointer
;	O
const	O
char	O
*	O
zfile	pointer
;	O
{	O
size_t	long
clen	long
;	O
char	O
*	O
zadd	pointer
;	O
if	O
(	O
*	O
ppzvar	pointer
!=	O
NULL	O
)	O
return	O
UUCONF_SUCCESS	O
;	O
clen	long
=	O
strlen	function
(	O
zfile	pointer
)	O
;	O
zadd	pointer
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	function
(	O
qglobal	pointer
->	O
pblock	pointer
,	O
sizeof	O
NEWCONFIGLIB	O
+	O
clen	long
)	O
;	O
if	O
(	O
zadd	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
zadd	pointer
,	O
(	O
pointer	pointer
)	O
NEWCONFIGLIB	O
,	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
zadd	pointer
+	O
sizeof	O
NEWCONFIGLIB	O
-	O
1	int
)	O
,	O
(	O
pointer	pointer
)	O
zfile	pointer
,	O
clen	long
+	O
1	int
)	O
;	O
return	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
zadd	pointer
,	O
FALSE	O
,	O
FALSE	O
,	O
ppzvar	pointer
,	O
qglobal	pointer
->	O
pblock	pointer
)	O
;	O
}	O
int	O
_uuconf_idebug_cmd	function
(	O
qglobal	pointer
,	O
pzdebug	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pblock	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
char	O
*	O
*	O
pzdebug	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pblock	pointer
;	O
{	O
if	O
(	O
argc	int
==	O
1	int
)	O
{	O
*	O
pzdebug	pointer
=	O
NULL	O
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
else	O
if	O
(	O
argc	int
==	O
2	int
)	O
{	O
*	O
pzdebug	pointer
=	O
argv	pointer
[	O
1	int
]	O
;	O
return	O
UUCONF_CMDTABRET_KEEP	O
;	O
}	O
else	O
{	O
size_t	long
cdebug	long
;	O
int	O
i	int
;	O
char	O
*	O
zdebug	pointer
;	O
cdebug	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
cdebug	long
+=	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
+	O
1	int
;	O
zdebug	pointer
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	function
(	O
pblock	pointer
,	O
cdebug	long
)	O
;	O
if	O
(	O
zdebug	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
cdebug	long
=	O
0	int
;	O
for	O
(	O
i	int
=	O
1	int
;	O
i	int
<	O
argc	int
;	O
i	int
++	O
)	O
{	O
size_t	long
clen	long
;	O
clen	long
=	O
strlen	function
(	O
argv	pointer
[	O
i	int
]	O
)	O
;	O
memcpy	function
(	O
zdebug	pointer
+	O
cdebug	long
,	O
argv	pointer
[	O
i	int
]	O
,	O
clen	long
)	O
;	O
zdebug	pointer
[	O
cdebug	long
+	O
clen	long
]	O
=	O
' '	O
;	O
cdebug	long
+=	O
clen	long
+	O
1	int
;	O
}	O
zdebug	pointer
[	O
cdebug	long
-	O
1	int
]	O
=	O
'\0'	O
;	O
*	O
pzdebug	pointer
=	O
zdebug	pointer
;	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
}	O
