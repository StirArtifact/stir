static	O
int	O
readPackageHeaders	function
(	O
FD_t	pointer
fd	pointer
,	O
struct	O
rpmlead	struct
*	O
leadPtr	pointer
,	O
Header	pointer
*	O
sigs	pointer
,	O
Header	pointer
*	O
hdrPtr	pointer
)	O
{	O
Header	pointer
hdrBlock	pointer
;	O
struct	O
rpmlead	struct
leadBlock	struct
;	O
Header	pointer
*	O
hdr	pointer
=	O
NULL	O
;	O
struct	O
rpmlead	struct
*	O
lead	pointer
;	O
char	O
*	O
defaultPrefix	pointer
;	O
struct	O
stat	struct
sb	struct
;	O
int_32	int
true	int
=	O
1	int
;	O
hdr	pointer
=	O
hdrPtr	pointer
?	O
hdrPtr	pointer
:	O
&	O
hdrBlock	pointer
;	O
lead	pointer
=	O
leadPtr	pointer
?	O
leadPtr	pointer
:	O
&	O
leadBlock	struct
;	O
fstat	function
(	O
Fileno	function
(	O
fd	pointer
)	O
,	O
&	O
sb	struct
)	O
;	O
if	O
(	O
S_ISREG	O
(	O
sb	struct
.	O
st_mode	int
)	O
&&	O
sb	struct
.	O
st_size	long
<	O
sizeof	O
(	O
*	O
lead	pointer
)	O
)	O
return	O
1	int
;	O
if	O
(	O
readLead	function
(	O
fd	pointer
,	O
lead	pointer
)	O
)	O
{	O
return	O
2	int
;	O
}	O
if	O
(	O
lead	pointer
->	O
magic	array
[	O
0	int
]	O
!=	O
RPMLEAD_MAGIC0	int
||	O
lead	pointer
->	O
magic	array
[	O
1	int
]	O
!=	O
RPMLEAD_MAGIC1	int
||	O
lead	pointer
->	O
magic	array
[	O
2	int
]	O
!=	O
RPMLEAD_MAGIC2	int
||	O
lead	pointer
->	O
magic	array
[	O
3	int
]	O
!=	O
RPMLEAD_MAGIC3	int
)	O
{	O
return	O
1	int
;	O
}	O
switch	O
(	O
lead	pointer
->	O
major	pointer
)	O
{	O
case	O
1	int
:	O
rpmError	function
(	O
RPMERR_NEWPACKAGE	O
,	O
_	O
(	O
"packaging version 1 is not"	pointer
" supported by this version of RPM"	pointer
)	O
)	O
;	O
return	O
2	int
;	O
break	O
;	O
case	O
2	int
:	O
case	O
3	int
:	O
case	O
4	int
:	O
if	O
(	O
rpmReadSignature	function
(	O
fd	pointer
,	O
sigs	pointer
,	O
lead	pointer
->	O
signature_type	short
)	O
)	O
{	O
return	O
2	int
;	O
}	O
*	O
hdr	pointer
=	O
headerRead	function
(	O
fd	pointer
,	O
(	O
lead	pointer
->	O
major	pointer
>=	O
3	int
)	O
?	O
HEADER_MAGIC_YES	int
:	O
HEADER_MAGIC_NO	int
)	O
;	O
if	O
(	O
*	O
hdr	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
sigs	pointer
!=	O
NULL	O
)	O
{	O
headerFree	function
(	O
*	O
sigs	pointer
)	O
;	O
}	O
return	O
2	int
;	O
}	O
if	O
(	O
headerIsEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_FILEUSERNAME	int
)	O
)	O
headerRemoveEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_FILEUIDS	int
)	O
;	O
if	O
(	O
headerIsEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_FILEGROUPNAME	int
)	O
)	O
headerRemoveEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_FILEGIDS	int
)	O
;	O
if	O
(	O
headerGetEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_DEFAULTPREFIX	int
,	O
NULL	O
,	O
(	O
void	O
*	O
*	O
)	O
&	O
defaultPrefix	pointer
,	O
NULL	O
)	O
)	O
{	O
defaultPrefix	pointer
=	O
strcpy	function
(	O
alloca	function
(	O
strlen	function
(	O
defaultPrefix	pointer
)	O
+	O
1	int
)	O
,	O
defaultPrefix	pointer
)	O
;	O
stripTrailingSlashes	function
(	O
defaultPrefix	pointer
)	O
;	O
headerAddEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_PREFIXES	int
,	O
RPM_STRING_ARRAY_TYPE	int
,	O
&	O
defaultPrefix	pointer
,	O
1	int
)	O
;	O
}	O
compressFilelist	function
(	O
*	O
hdr	pointer
)	O
;	O
if	O
(	O
lead	pointer
->	O
type	enum
==	O
RPMLEAD_SOURCE	int
)	O
{	O
if	O
(	O
!	O
headerIsEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_SOURCEPACKAGE	int
)	O
)	O
headerAddEntry	function
(	O
*	O
hdr	pointer
,	O
RPMTAG_SOURCEPACKAGE	int
,	O
RPM_INT32_TYPE	int
,	O
&	O
true	int
,	O
1	int
)	O
;	O
}	O
break	O
;	O
default	O
:	O
rpmError	function
(	O
RPMERR_NEWPACKAGE	O
,	O
_	O
(	O
"only packages with major numbers <= 4 "	pointer
"are supported by this version of RPM"	pointer
)	O
)	O
;	O
return	O
2	int
;	O
break	O
;	O
}	O
if	O
(	O
hdrPtr	pointer
==	O
NULL	O
)	O
{	O
headerFree	function
(	O
*	O
hdr	pointer
)	O
;	O
}	O
return	O
0	int
;	O
}	O
int	O
rpmReadPackageInfo	function
(	O
FD_t	pointer
fd	pointer
,	O
Header	pointer
*	O
signatures	pointer
,	O
Header	pointer
*	O
hdr	pointer
)	O
{	O
return	O
readPackageHeaders	function
(	O
fd	pointer
,	O
NULL	O
,	O
signatures	pointer
,	O
hdr	pointer
)	O
;	O
}	O
int	O
rpmReadPackageHeader	function
(	O
FD_t	pointer
fd	pointer
,	O
Header	pointer
*	O
hdr	pointer
,	O
int	O
*	O
isSource	pointer
,	O
int	O
*	O
major	pointer
,	O
int	O
*	O
minor	pointer
)	O
{	O
int	O
rc	int
;	O
struct	O
rpmlead	struct
lead	pointer
;	O
rc	int
=	O
readPackageHeaders	function
(	O
fd	pointer
,	O
&	O
lead	pointer
,	O
NULL	O
,	O
hdr	pointer
)	O
;	O
if	O
(	O
rc	int
)	O
return	O
rc	int
;	O
if	O
(	O
isSource	pointer
)	O
*	O
isSource	pointer
=	O
lead	pointer
.	O
type	enum
==	O
RPMLEAD_SOURCE	int
;	O
if	O
(	O
major	pointer
)	O
*	O
major	pointer
=	O
lead	pointer
.	O
major	pointer
;	O
if	O
(	O
minor	pointer
)	O
*	O
minor	pointer
=	O
lead	pointer
.	O
minor	pointer
;	O
return	O
0	int
;	O
}	O
