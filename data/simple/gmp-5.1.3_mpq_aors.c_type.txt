static	O
void	O
__gmpq_aors	function
(	O
REGPARM_3_1	O
(	O
mpq_ptr	pointer
,	O
mpq_srcptr	pointer
,	O
mpq_srcptr	pointer
,	O
void	O
(	O
*	O
)	O
(	O
mpz_ptr	pointer
,	O
mpz_srcptr	pointer
,	O
mpz_srcptr	pointer
)	O
)	O
)	O
REGPARM_ATTR	O
(	O
1	int
)	O
;	O
REGPARM_ATTR	O
(	O
1	int
)	O
static	O
void	O
mpq_aors	O
(	O
mpq_ptr	pointer
rop	pointer
,	O
mpq_srcptr	pointer
op1	pointer
,	O
mpq_srcptr	pointer
op2	pointer
,	O
void	O
(	O
*	O
fun	pointer
)	O
(	O
mpz_ptr	pointer
,	O
mpz_srcptr	pointer
,	O
mpz_srcptr	pointer
)	O
)	O
{	O
mpz_t	array
gcd	array
;	O
mpz_t	array
tmp1	array
,	O
tmp2	array
;	O
mp_size_t	long
op1_num_size	long
=	O
ABSIZ	O
(	O
NUM	O
(	O
op1	pointer
)	O
)	O
;	O
mp_size_t	long
op1_den_size	long
=	O
SIZ	O
(	O
DEN	O
(	O
op1	pointer
)	O
)	O
;	O
mp_size_t	long
op2_num_size	long
=	O
ABSIZ	O
(	O
NUM	O
(	O
op2	pointer
)	O
)	O
;	O
mp_size_t	long
op2_den_size	long
=	O
SIZ	O
(	O
DEN	O
(	O
op2	pointer
)	O
)	O
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
MPZ_TMP_INIT	O
(	O
gcd	array
,	O
MIN	O
(	O
op1_den_size	long
,	O
op2_den_size	long
)	O
)	O
;	O
MPZ_TMP_INIT	O
(	O
tmp1	array
,	O
op1_num_size	long
+	O
op2_den_size	long
)	O
;	O
MPZ_TMP_INIT	O
(	O
tmp2	array
,	O
op2_num_size	long
+	O
op1_den_size	long
)	O
;	O
mpz_gcd	O
(	O
gcd	array
,	O
DEN	O
(	O
op1	pointer
)	O
,	O
DEN	O
(	O
op2	pointer
)	O
)	O
;	O
if	O
(	O
!	O
MPZ_EQUAL_1_P	O
(	O
gcd	array
)	O
)	O
{	O
mpz_t	array
t	array
;	O
MPZ_TMP_INIT	O
(	O
t	array
,	O
MAX	O
(	O
op1_num_size	long
+	O
op2_den_size	long
,	O
op2_num_size	long
+	O
op1_den_size	long
)	O
+	O
2	int
-	O
SIZ	O
(	O
gcd	array
)	O
)	O
;	O
mpz_divexact_gcd	O
(	O
t	array
,	O
DEN	O
(	O
op2	pointer
)	O
,	O
gcd	array
)	O
;	O
mpz_divexact_gcd	O
(	O
tmp2	array
,	O
DEN	O
(	O
op1	pointer
)	O
,	O
gcd	array
)	O
;	O
mpz_mul	O
(	O
tmp1	array
,	O
NUM	O
(	O
op1	pointer
)	O
,	O
t	array
)	O
;	O
mpz_mul	O
(	O
t	array
,	O
NUM	O
(	O
op2	pointer
)	O
,	O
tmp2	array
)	O
;	O
(	O
*	O
fun	pointer
)	O
(	O
t	array
,	O
tmp1	array
,	O
t	array
)	O
;	O
mpz_gcd	O
(	O
gcd	array
,	O
t	array
,	O
gcd	array
)	O
;	O
if	O
(	O
MPZ_EQUAL_1_P	O
(	O
gcd	array
)	O
)	O
{	O
mpz_set	O
(	O
NUM	O
(	O
rop	pointer
)	O
,	O
t	array
)	O
;	O
mpz_mul	O
(	O
DEN	O
(	O
rop	pointer
)	O
,	O
DEN	O
(	O
op2	pointer
)	O
,	O
tmp2	array
)	O
;	O
}	O
else	O
{	O
mpz_divexact_gcd	O
(	O
NUM	O
(	O
rop	pointer
)	O
,	O
t	array
,	O
gcd	array
)	O
;	O
mpz_divexact_gcd	O
(	O
tmp1	array
,	O
DEN	O
(	O
op2	pointer
)	O
,	O
gcd	array
)	O
;	O
mpz_mul	O
(	O
DEN	O
(	O
rop	pointer
)	O
,	O
tmp1	array
,	O
tmp2	array
)	O
;	O
}	O
}	O
else	O
{	O
mpz_mul	O
(	O
tmp1	array
,	O
NUM	O
(	O
op1	pointer
)	O
,	O
DEN	O
(	O
op2	pointer
)	O
)	O
;	O
mpz_mul	O
(	O
tmp2	array
,	O
NUM	O
(	O
op2	pointer
)	O
,	O
DEN	O
(	O
op1	pointer
)	O
)	O
;	O
(	O
*	O
fun	pointer
)	O
(	O
NUM	O
(	O
rop	pointer
)	O
,	O
tmp1	array
,	O
tmp2	array
)	O
;	O
mpz_mul	O
(	O
DEN	O
(	O
rop	pointer
)	O
,	O
DEN	O
(	O
op1	pointer
)	O
,	O
DEN	O
(	O
op2	pointer
)	O
)	O
;	O
}	O
TMP_FREE	O
;	O
}	O
void	O
mpq_add	O
(	O
mpq_ptr	pointer
rop	pointer
,	O
mpq_srcptr	pointer
op1	pointer
,	O
mpq_srcptr	pointer
op2	pointer
)	O
{	O
mpq_aors	O
(	O
rop	pointer
,	O
op1	pointer
,	O
op2	pointer
,	O
mpz_add	O
)	O
;	O
}	O
void	O
mpq_sub	O
(	O
mpq_ptr	pointer
rop	pointer
,	O
mpq_srcptr	pointer
op1	pointer
,	O
mpq_srcptr	pointer
op2	pointer
)	O
{	O
mpq_aors	O
(	O
rop	pointer
,	O
op1	pointer
,	O
op2	pointer
,	O
mpz_sub	O
)	O
;	O
}	O
