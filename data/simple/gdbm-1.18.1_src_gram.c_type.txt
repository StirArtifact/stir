struct	O
dsegm	struct
*	O
dsdef	array
[	O
DS_MAX	int
]	O
;	O
enum	O
yytokentype	enum
{	O
T_TYPE	int
=	O
258	int
,	O
T_OFF	int
=	O
259	int
,	O
T_PAD	int
=	O
260	int
,	O
T_DEF	int
=	O
261	int
,	O
T_SET	int
=	O
262	int
,	O
T_UNSET	int
=	O
263	int
,	O
T_BOGUS	int
=	O
264	int
,	O
T_CMD	int
=	O
265	int
,	O
T_NUM	int
=	O
266	int
,	O
T_IDENT	int
=	O
267	int
,	O
T_WORD	int
=	O
268	int
}	O
;	O
typedef	O
union	O
YYSTYPE	union
{	O
char	O
*	O
string	pointer
;	O
struct	O
kvpair	struct
*	O
kvpair	struct
;	O
struct	O
{	O
struct	O
kvpair	struct
*	O
head	pointer
,	O
*	O
tail	pointer
;	O
}	O
kvlist	struct
;	O
struct	O
{	O
struct	O
slist	struct
*	O
head	pointer
,	O
*	O
tail	pointer
;	O
}	O
slist	struct
;	O
struct	O
gdbmarg	struct
*	O
arg	pointer
;	O
struct	O
gdbmarglist	struct
arglist	pointer
;	O
int	O
num	int
;	O
struct	O
datadef	struct
*	O
type	int
;	O
struct	O
dsegm	struct
*	O
dsegm	struct
;	O
struct	O
{	O
struct	O
dsegm	struct
*	O
head	pointer
,	O
*	O
tail	pointer
;	O
}	O
dsegmlist	struct
;	O
struct	O
command	O
*	O
cmd	pointer
;	O
}	O
YYSTYPE	union
;	O
extern	O
YYSTYPE	union
yylval	union
;	O
extern	O
YYLTYPE	O
yylloc	struct
;	O
int	O
yyparse	function
(	O
void	O
)	O
;	O
typedef	O
unsigned	O
char	O
yytype_uint8	char
;	O
typedef	O
signed	O
char	O
yytype_int8	char
;	O
typedef	O
unsigned	O
short	O
int	O
yytype_uint16	short
;	O
typedef	O
short	O
int	O
yytype_int16	short
;	O
union	O
yyalloc	union
{	O
yytype_int16	short
yyss_alloc	short
;	O
YYSTYPE	union
yyvs_alloc	union
;	O
YYLTYPE	O
yyls_alloc	struct
;	O
}	O
;	O
static	O
const	O
yytype_uint8	char
yytranslate	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
14	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
18	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
15	int
,	O
2	int
,	O
19	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
20	int
,	O
2	int
,	O
21	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
16	int
,	O
2	int
,	O
17	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
12	int
,	O
13	int
}	O
;	O
static	O
const	O
char	O
*	O
const	O
yytname	array
[	O
]	O
=	O
{	O
"$end"	pointer
,	O
"error"	pointer
,	O
"$undefined"	pointer
,	O
"T_TYPE"	pointer
,	O
"\"off\""	pointer
,	O
"\"pad\""	pointer
,	O
"\"define\""	pointer
,	O
"\"set\""	pointer
,	O
"\"unset\""	pointer
,	O
"T_BOGUS"	pointer
,	O
"\"command verb\""	pointer
,	O
"\"number\""	pointer
,	O
"\"identifier\""	pointer
,	O
"\"word\""	pointer
,	O
"'\\n'"	pointer
,	O
"';'"	pointer
,	O
"'{'"	pointer
,	O
"'}'"	pointer
,	O
"','"	pointer
,	O
"'='"	pointer
,	O
"'['"	pointer
,	O
"']'"	pointer
,	O
"$accept"	pointer
,	O
"input"	pointer
,	O
"stmtlist"	pointer
,	O
"stmt"	pointer
,	O
"$@1"	pointer
,	O
"eol"	pointer
,	O
"arglist"	pointer
,	O
"arg1list"	pointer
,	O
"arg"	pointer
,	O
"compound"	pointer
,	O
"kvlist"	pointer
,	O
"kvpair"	pointer
,	O
"value"	pointer
,	O
"slist"	pointer
,	O
"string"	pointer
,	O
"defn"	pointer
,	O
"$@2"	pointer
,	O
"defbody"	pointer
,	O
"optcomma"	pointer
,	O
"defid"	pointer
,	O
"deflist"	pointer
,	O
"def"	pointer
,	O
"set"	pointer
,	O
"asgnlist"	pointer
,	O
"asgn"	pointer
,	O
"varlist"	pointer
,	O
"var"	pointer
,	O
YY_NULL	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr1	array
[	O
]	O
=	O
{	O
0	int
,	O
22	int
,	O
23	int
,	O
23	int
,	O
24	int
,	O
24	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
25	int
,	O
26	int
,	O
25	int
,	O
27	int
,	O
27	int
,	O
28	int
,	O
28	int
,	O
29	int
,	O
29	int
,	O
30	int
,	O
30	int
,	O
31	int
,	O
32	int
,	O
32	int
,	O
33	int
,	O
33	int
,	O
34	int
,	O
34	int
,	O
35	int
,	O
35	int
,	O
36	int
,	O
36	int
,	O
38	int
,	O
37	int
,	O
39	int
,	O
39	int
,	O
40	int
,	O
40	int
,	O
41	int
,	O
42	int
,	O
42	int
,	O
43	int
,	O
43	int
,	O
43	int
,	O
43	int
,	O
44	int
,	O
44	int
,	O
44	int
,	O
45	int
,	O
45	int
,	O
46	int
,	O
46	int
,	O
47	int
,	O
47	int
,	O
48	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr2	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
3	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
0	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
1	int
,	O
0	int
,	O
4	int
,	O
4	int
,	O
1	int
,	O
0	int
,	O
1	int
,	O
1	int
,	O
1	int
,	O
3	int
,	O
2	int
,	O
5	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
1	int
,	O
3	int
,	O
1	int
,	O
2	int
,	O
1	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yydefact	array
[	O
]	O
=	O
{	O
0	int
,	O
11	int
,	O
0	int
,	O
45	int
,	O
0	int
,	O
0	int
,	O
15	int
,	O
13	int
,	O
14	int
,	O
0	int
,	O
0	int
,	O
4	int
,	O
6	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
38	int
,	O
32	int
,	O
50	int
,	O
46	int
,	O
48	int
,	O
54	int
,	O
47	int
,	O
52	int
,	O
10	int
,	O
30	int
,	O
31	int
,	O
0	int
,	O
0	int
,	O
16	int
,	O
17	int
,	O
20	int
,	O
19	int
,	O
1	int
,	O
5	int
,	O
9	int
,	O
8	int
,	O
12	int
,	O
0	int
,	O
0	int
,	O
49	int
,	O
53	int
,	O
30	int
,	O
0	int
,	O
0	int
,	O
22	int
,	O
24	int
,	O
26	int
,	O
7	int
,	O
18	int
,	O
35	int
,	O
0	int
,	O
33	int
,	O
51	int
,	O
0	int
,	O
0	int
,	O
28	int
,	O
21	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
36	int
,	O
39	int
,	O
25	int
,	O
27	int
,	O
0	int
,	O
23	int
,	O
41	int
,	O
43	int
,	O
44	int
,	O
37	int
,	O
0	int
,	O
29	int
,	O
0	int
,	O
40	int
,	O
34	int
,	O
0	int
,	O
42	int
}	O
;	O
static	O
const	O
yytype_int8	char
yydefgoto	array
[	O
]	O
=	O
{	O
-	O
1	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
15	int
,	O
12	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
31	int
,	O
44	int
,	O
45	int
,	O
46	int
,	O
55	int
,	O
47	int
,	O
13	int
,	O
38	int
,	O
52	int
,	O
72	int
,	O
17	int
,	O
62	int
,	O
63	int
,	O
14	int
,	O
19	int
,	O
20	int
,	O
22	int
,	O
23	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypact	array
[	O
]	O
=	O
{	O
6	int
,	O
-	O
13	int
,	O
-	O
7	int
,	O
7	int
,	O
10	int
,	O
-	O
12	int
,	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
8	int
,	O
34	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
12	int
,	O
-	O
12	int
,	O
-	O
12	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
1	int
,	O
7	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
10	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
15	int
,	O
-	O
12	int
,	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
1	int
,	O
26	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
11	int
,	O
26	int
,	O
35	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
42	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
38	int
,	O
39	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
15	int
,	O
20	int
,	O
25	int
,	O
44	int
,	O
40	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
26	int
,	O
-	O
13	int
,	O
41	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
42	int
,	O
45	int
,	O
-	O
13	int
,	O
48	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
43	int
,	O
-	O
13	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypgoto	array
[	O
]	O
=	O
{	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
53	int
,	O
-	O
13	int
,	O
-	O
4	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
36	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
9	int
,	O
12	int
,	O
-	O
13	int
,	O
-	O
6	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
-	O
3	int
,	O
-	O
13	int
,	O
-	O
13	int
,	O
50	int
,	O
-	O
13	int
,	O
49	int
}	O
;	O
static	O
const	O
yytype_int8	char
yytable	array
[	O
]	O
=	O
{	O
32	int
,	O
24	int
,	O
7	int
,	O
8	int
,	O
50	int
,	O
16	int
,	O
-	O
2	int
,	O
1	int
,	O
33	int
,	O
35	int
,	O
36	int
,	O
37	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
51	int
,	O
39	int
,	O
18	int
,	O
7	int
,	O
8	int
,	O
21	int
,	O
32	int
,	O
48	int
,	O
25	int
,	O
26	int
,	O
42	int
,	O
26	int
,	O
27	int
,	O
54	int
,	O
43	int
,	O
68	int
,	O
53	int
,	O
-	O
3	int
,	O
1	int
,	O
69	int
,	O
56	int
,	O
25	int
,	O
26	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
6	int
,	O
59	int
,	O
60	int
,	O
61	int
,	O
7	int
,	O
8	int
,	O
25	int
,	O
26	int
,	O
57	int
,	O
58	int
,	O
43	int
,	O
70	int
,	O
65	int
,	O
66	int
,	O
71	int
,	O
77	int
,	O
73	int
,	O
74	int
,	O
76	int
,	O
34	int
,	O
78	int
,	O
49	int
,	O
64	int
,	O
67	int
,	O
75	int
,	O
40	int
,	O
0	int
,	O
41	int
}	O
;	O
static	O
const	O
yytype_int8	char
yycheck	array
[	O
]	O
=	O
{	O
6	int
,	O
5	int
,	O
14	int
,	O
15	int
,	O
3	int
,	O
12	int
,	O
0	int
,	O
1	int
,	O
0	int
,	O
13	int
,	O
14	int
,	O
15	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
16	int
,	O
19	int
,	O
12	int
,	O
14	int
,	O
15	int
,	O
12	int
,	O
29	int
,	O
28	int
,	O
12	int
,	O
13	int
,	O
12	int
,	O
13	int
,	O
16	int
,	O
19	int
,	O
16	int
,	O
12	int
,	O
39	int
,	O
0	int
,	O
1	int
,	O
11	int
,	O
43	int
,	O
12	int
,	O
13	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
14	int
,	O
15	int
,	O
12	int
,	O
13	int
,	O
17	int
,	O
18	int
,	O
16	int
,	O
11	int
,	O
17	int
,	O
18	int
,	O
18	int
,	O
11	int
,	O
66	int
,	O
20	int
,	O
17	int
,	O
10	int
,	O
21	int
,	O
29	int
,	O
54	int
,	O
58	int
,	O
71	int
,	O
19	int
,	O
-	O
1	int
,	O
22	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yystos	array
[	O
]	O
=	O
{	O
0	int
,	O
1	int
,	O
6	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
,	O
14	int
,	O
15	int
,	O
23	int
,	O
24	int
,	O
25	int
,	O
27	int
,	O
37	int
,	O
44	int
,	O
26	int
,	O
12	int
,	O
41	int
,	O
12	int
,	O
45	int
,	O
46	int
,	O
12	int
,	O
47	int
,	O
48	int
,	O
27	int
,	O
12	int
,	O
13	int
,	O
16	int
,	O
28	int
,	O
29	int
,	O
30	int
,	O
31	int
,	O
36	int
,	O
0	int
,	O
25	int
,	O
27	int
,	O
27	int
,	O
27	int
,	O
38	int
,	O
19	int
,	O
46	int
,	O
48	int
,	O
12	int
,	O
16	int
,	O
32	int
,	O
33	int
,	O
34	int
,	O
36	int
,	O
27	int
,	O
30	int
,	O
3	int
,	O
16	int
,	O
39	int
,	O
36	int
,	O
19	int
,	O
35	int
,	O
36	int
,	O
17	int
,	O
18	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
42	int
,	O
43	int
,	O
34	int
,	O
17	int
,	O
18	int
,	O
33	int
,	O
12	int
,	O
11	int
,	O
11	int
,	O
18	int
,	O
40	int
,	O
36	int
,	O
20	int
,	O
43	int
,	O
17	int
,	O
11	int
,	O
21	int
}	O
;	O
static	O
char	O
*	O
yystpcpy	function
(	O
char	O
*	O
yydest	pointer
,	O
const	O
char	O
*	O
yysrc	pointer
)	O
{	O
char	O
*	O
yyd	pointer
=	O
yydest	pointer
;	O
const	O
char	O
*	O
yys	pointer
=	O
yysrc	pointer
;	O
while	O
(	O
(	O
*	O
yyd	pointer
++	O
=	O
*	O
yys	pointer
++	O
)	O
!=	O
'\0'	O
)	O
continue	O
;	O
return	O
yyd	pointer
-	O
1	int
;	O
}	O
static	O
YYSIZE_T	O
yytnamerr	function
(	O
char	O
*	O
yyres	pointer
,	O
const	O
char	O
*	O
yystr	pointer
)	O
{	O
if	O
(	O
*	O
yystr	pointer
==	O
'"'	O
)	O
{	O
YYSIZE_T	O
yyn	long
=	O
0	int
;	O
char	O
const	O
*	O
yyp	pointer
=	O
yystr	pointer
;	O
for	O
(	O
;	O
;	O
)	O
switch	O
(	O
*	O
++	O
yyp	pointer
)	O
{	O
case	O
'\''	O
:	O
case	O
','	O
:	O
goto	O
do_not_strip_quotes	O
;	O
case	O
'\\'	O
:	O
if	O
(	O
*	O
++	O
yyp	pointer
!=	O
'\\'	O
)	O
goto	O
do_not_strip_quotes	O
;	O
default	O
:	O
if	O
(	O
yyres	pointer
)	O
yyres	pointer
[	O
yyn	long
]	O
=	O
*	O
yyp	pointer
;	O
yyn	long
++	O
;	O
break	O
;	O
case	O
'"'	O
:	O
if	O
(	O
yyres	pointer
)	O
yyres	pointer
[	O
yyn	long
]	O
=	O
'\0'	O
;	O
return	O
yyn	long
;	O
}	O
do_not_strip_quotes	O
:	O
;	O
}	O
if	O
(	O
!	O
yyres	pointer
)	O
return	O
yystrlen	O
(	O
yystr	pointer
)	O
;	O
return	O
yystpcpy	function
(	O
yyres	pointer
,	O
yystr	pointer
)	O
-	O
yyres	pointer
;	O
}	O
static	O
int	O
yysyntax_error	function
(	O
YYSIZE_T	O
*	O
yymsg_alloc	pointer
,	O
char	O
*	O
*	O
yymsg	pointer
,	O
yytype_int16	short
*	O
yyssp	pointer
,	O
int	O
yytoken	int
)	O
{	O
YYSIZE_T	O
yysize0	long
=	O
yytnamerr	function
(	O
YY_NULL	int
,	O
yytname	array
[	O
yytoken	int
]	O
)	O
;	O
YYSIZE_T	O
yysize	long
=	O
yysize0	long
;	O
enum	O
{	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
=	O
5	int
}	O
;	O
const	O
char	O
*	O
yyformat	pointer
=	O
YY_NULL	int
;	O
char	O
const	O
*	O
yyarg	array
[	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
]	O
;	O
int	O
yycount	int
=	O
0	int
;	O
if	O
(	O
yytoken	int
!=	O
YYEMPTY	O
)	O
{	O
int	O
yyn	long
=	O
yypact	array
[	O
*	O
yyssp	pointer
]	O
;	O
yyarg	array
[	O
yycount	int
++	O
]	O
=	O
yytname	array
[	O
yytoken	int
]	O
;	O
if	O
(	O
!	O
yypact_value_is_default	O
(	O
yyn	long
)	O
)	O
{	O
int	O
yyxbegin	int
=	O
yyn	long
<	O
0	int
?	O
-	O
yyn	long
:	O
0	int
;	O
int	O
yychecklim	int
=	O
YYLAST	int
-	O
yyn	long
+	O
1	int
;	O
int	O
yyxend	int
=	O
yychecklim	int
<	O
YYNTOKENS	int
?	O
yychecklim	int
:	O
YYNTOKENS	int
;	O
int	O
yyx	int
;	O
for	O
(	O
yyx	int
=	O
yyxbegin	int
;	O
yyx	int
<	O
yyxend	int
;	O
++	O
yyx	int
)	O
if	O
(	O
yycheck	array
[	O
yyx	int
+	O
yyn	long
]	O
==	O
yyx	int
&&	O
yyx	int
!=	O
YYTERROR	int
&&	O
!	O
yytable_value_is_error	O
(	O
yytable	array
[	O
yyx	int
+	O
yyn	long
]	O
)	O
)	O
{	O
if	O
(	O
yycount	int
==	O
YYERROR_VERBOSE_ARGS_MAXIMUM	int
)	O
{	O
yycount	int
=	O
1	int
;	O
yysize	long
=	O
yysize0	long
;	O
break	O
;	O
}	O
yyarg	array
[	O
yycount	int
++	O
]	O
=	O
yytname	array
[	O
yyx	int
]	O
;	O
{	O
YYSIZE_T	O
yysize1	long
=	O
yysize	long
+	O
yytnamerr	function
(	O
YY_NULL	int
,	O
yytname	array
[	O
yyx	int
]	O
)	O
;	O
if	O
(	O
!	O
(	O
yysize	long
<=	O
yysize1	long
&&	O
yysize1	long
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
return	O
2	int
;	O
yysize	long
=	O
yysize1	long
;	O
}	O
}	O
}	O
}	O
switch	O
(	O
yycount	int
)	O
{	O
YYCASE_	O
(	O
0	int
,	O
YY_	O
(	O
"syntax error"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
1	int
,	O
YY_	O
(	O
"syntax error, unexpected %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
2	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
3	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
4	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s or %s"	pointer
)	O
)	O
;	O
YYCASE_	O
(	O
5	int
,	O
YY_	O
(	O
"syntax error, unexpected %s, expecting %s or %s or %s or %s"	pointer
)	O
)	O
;	O
}	O
{	O
YYSIZE_T	O
yysize1	long
=	O
yysize	long
+	O
yystrlen	O
(	O
yyformat	pointer
)	O
;	O
if	O
(	O
!	O
(	O
yysize	long
<=	O
yysize1	long
&&	O
yysize1	long
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
return	O
2	int
;	O
yysize	long
=	O
yysize1	long
;	O
}	O
if	O
(	O
*	O
yymsg_alloc	pointer
<	O
yysize	long
)	O
{	O
*	O
yymsg_alloc	pointer
=	O
2	int
*	O
yysize	long
;	O
if	O
(	O
!	O
(	O
yysize	long
<=	O
*	O
yymsg_alloc	pointer
&&	O
*	O
yymsg_alloc	pointer
<=	O
YYSTACK_ALLOC_MAXIMUM	O
)	O
)	O
*	O
yymsg_alloc	pointer
=	O
YYSTACK_ALLOC_MAXIMUM	O
;	O
return	O
1	int
;	O
}	O
{	O
char	O
*	O
yyp	pointer
=	O
*	O
yymsg	pointer
;	O
int	O
yyi	int
=	O
0	int
;	O
while	O
(	O
(	O
*	O
yyp	pointer
=	O
*	O
yyformat	pointer
)	O
!=	O
'\0'	O
)	O
if	O
(	O
*	O
yyp	pointer
==	O
'%'	O
&&	O
yyformat	pointer
[	O
1	int
]	O
==	O
's'	O
&&	O
yyi	int
<	O
yycount	int
)	O
{	O
yyp	pointer
+=	O
yytnamerr	function
(	O
yyp	pointer
,	O
yyarg	array
[	O
yyi	int
++	O
]	O
)	O
;	O
yyformat	pointer
+=	O
2	int
;	O
}	O
else	O
{	O
yyp	pointer
++	O
;	O
yyformat	pointer
++	O
;	O
}	O
}	O
return	O
0	int
;	O
}	O
static	O
void	O
yydestruct	function
(	O
const	O
char	O
*	O
yymsg	pointer
,	O
int	O
yytype	int
,	O
YYSTYPE	union
*	O
yyvaluep	pointer
,	O
YYLTYPE	O
*	O
yylocationp	pointer
)	O
{	O
YYUSE	O
(	O
yyvaluep	pointer
)	O
;	O
YYUSE	O
(	O
yylocationp	pointer
)	O
;	O
if	O
(	O
!	O
yymsg	pointer
)	O
yymsg	pointer
=	O
"Deleting"	pointer
;	O
YY_SYMBOL_PRINT	O
(	O
yymsg	pointer
,	O
yytype	int
,	O
yyvaluep	pointer
,	O
yylocationp	pointer
)	O
;	O
switch	O
(	O
yytype	int
)	O
{	O
default	O
:	O
break	O
;	O
}	O
}	O
int	O
yychar	int
;	O
YYSTYPE	union
yylval	union
YY_INITIAL_VALUE	O
(	O
yyval_default	O
)	O
;	O
YYLTYPE	O
yylloc	struct
;	O
int	O
yynerrs	int
;	O
int	O
yyparse	function
(	O
void	O
)	O
{	O
int	O
yystate	int
;	O
int	O
yyerrstatus	int
;	O
yytype_int16	short
yyssa	array
[	O
YYINITDEPTH	int
]	O
;	O
yytype_int16	short
*	O
yyss	pointer
;	O
yytype_int16	short
*	O
yyssp	pointer
;	O
YYSTYPE	union
yyvsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYSTYPE	union
*	O
yyvs	pointer
;	O
YYSTYPE	union
*	O
yyvsp	pointer
;	O
YYLTYPE	O
yylsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYLTYPE	O
*	O
yyls	pointer
;	O
YYLTYPE	O
*	O
yylsp	pointer
;	O
YYLTYPE	O
yyerror_range	array
[	O
3	int
]	O
;	O
YYSIZE_T	O
yystacksize	long
;	O
int	O
yyn	long
;	O
int	O
yyresult	int
;	O
int	O
yytoken	int
=	O
0	int
;	O
YYSTYPE	union
yyval	union
;	O
YYLTYPE	O
yyloc	struct
;	O
char	O
yymsgbuf	array
[	O
128	int
]	O
;	O
char	O
*	O
yymsg	pointer
=	O
yymsgbuf	array
;	O
YYSIZE_T	O
yymsg_alloc	pointer
=	O
sizeof	O
yymsgbuf	array
;	O
int	O
yylen	int
=	O
0	int
;	O
yyssp	pointer
=	O
yyss	pointer
=	O
yyssa	array
;	O
yyvsp	pointer
=	O
yyvs	pointer
=	O
yyvsa	array
;	O
yylsp	pointer
=	O
yyls	pointer
=	O
yylsa	array
;	O
yystacksize	long
=	O
YYINITDEPTH	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Starting parse\n"	pointer
)	O
)	O
;	O
yystate	int
=	O
0	int
;	O
yyerrstatus	int
=	O
0	int
;	O
yynerrs	int
=	O
0	int
;	O
yychar	int
=	O
YYEMPTY	O
;	O
yylsp	pointer
[	O
0	int
]	O
=	O
yylloc	struct
;	O
goto	O
yysetstate	O
;	O
yynewstate	O
:	O
yyssp	pointer
++	O
;	O
yysetstate	O
:	O
*	O
yyssp	pointer
=	O
yystate	int
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
{	O
YYSIZE_T	O
yysize	long
=	O
yyssp	pointer
-	O
yyss	pointer
+	O
1	int
;	O
if	O
(	O
YYMAXDEPTH	int
<=	O
yystacksize	long
)	O
goto	O
yyexhaustedlab	O
;	O
yystacksize	long
*=	O
2	int
;	O
if	O
(	O
YYMAXDEPTH	int
<	O
yystacksize	long
)	O
yystacksize	long
=	O
YYMAXDEPTH	int
;	O
{	O
yytype_int16	short
*	O
yyss1	pointer
=	O
yyss	pointer
;	O
union	O
yyalloc	union
*	O
yyptr	pointer
=	O
(	O
union	O
yyalloc	union
*	O
)	O
YYSTACK_ALLOC	O
(	O
YYSTACK_BYTES	O
(	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
!	O
yyptr	pointer
)	O
goto	O
yyexhaustedlab	O
;	O
YYSTACK_RELOCATE	O
(	O
yyss_alloc	short
,	O
yyss	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyvs_alloc	union
,	O
yyvs	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyls_alloc	struct
,	O
yyls	pointer
)	O
;	O
if	O
(	O
yyss1	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss1	pointer
)	O
;	O
}	O
yyssp	pointer
=	O
yyss	pointer
+	O
yysize	long
-	O
1	int
;	O
yyvsp	pointer
=	O
yyvs	pointer
+	O
yysize	long
-	O
1	int
;	O
yylsp	pointer
=	O
yyls	pointer
+	O
yysize	long
-	O
1	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Stack size increased to %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
int	O
)	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
YYABORT	O
;	O
}	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Entering state %d\n"	pointer
,	O
yystate	int
)	O
)	O
;	O
if	O
(	O
yystate	int
==	O
YYFINAL	int
)	O
YYACCEPT	O
;	O
goto	O
yybackup	O
;	O
yybackup	O
:	O
yyn	long
=	O
yypact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
yypact_value_is_default	O
(	O
yyn	long
)	O
)	O
goto	O
yydefault	O
;	O
if	O
(	O
yychar	int
==	O
YYEMPTY	O
)	O
{	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Reading a token: "	pointer
)	O
)	O
;	O
yychar	int
=	O
YYLEX	O
;	O
}	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
yychar	int
=	O
yytoken	int
=	O
YYEOF	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Now at end of input.\n"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Next token is"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	struct
)	O
;	O
}	O
yyn	long
+=	O
yytoken	int
;	O
if	O
(	O
yyn	long
<	O
0	int
||	O
YYLAST	int
<	O
yyn	long
||	O
yycheck	array
[	O
yyn	long
]	O
!=	O
yytoken	int
)	O
goto	O
yydefault	O
;	O
yyn	long
=	O
yytable	array
[	O
yyn	long
]	O
;	O
if	O
(	O
yyn	long
<=	O
0	int
)	O
{	O
if	O
(	O
yytable_value_is_error	O
(	O
yyn	long
)	O
)	O
goto	O
yyerrlab	O
;	O
yyn	long
=	O
-	O
yyn	long
;	O
goto	O
yyreduce	O
;	O
}	O
if	O
(	O
yyerrstatus	int
)	O
yyerrstatus	int
--	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	struct
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
yystate	int
=	O
yyn	long
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
*	O
++	O
yylsp	pointer
=	O
yylloc	struct
;	O
goto	O
yynewstate	O
;	O
yydefault	O
:	O
yyn	long
=	O
yydefact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
yyn	long
==	O
0	int
)	O
goto	O
yyerrlab	O
;	O
goto	O
yyreduce	O
;	O
yyreduce	O
:	O
yylen	int
=	O
yyr2	array
[	O
yyn	long
]	O
;	O
yyval	union
=	O
yyvsp	pointer
[	O
1	int
-	O
yylen	int
]	O
;	O
YYLLOC_DEFAULT	O
(	O
yyloc	struct
,	O
(	O
yylsp	pointer
-	O
yylen	int
)	O
,	O
yylen	int
)	O
;	O
YY_REDUCE_PRINT	O
(	O
yyn	long
)	O
;	O
switch	O
(	O
yyn	long
)	O
{	O
case	O
6	int
:	O
{	O
run_last_command	function
(	O
)	O
;	O
}	O
break	O
;	O
case	O
7	int
:	O
{	O
if	O
(	O
run_command	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
cmd	pointer
)	O
,	O
&	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
arglist	pointer
)	O
)	O
&&	O
!	O
interactive	function
(	O
)	O
)	O
exit	function
(	O
EXIT_USAGE	int
)	O
;	O
}	O
break	O
;	O
case	O
10	int
:	O
{	O
if	O
(	O
interactive	function
(	O
)	O
)	O
{	O
yyclearin	O
;	O
yyerrok	O
;	O
}	O
else	O
YYERROR	O
;	O
}	O
break	O
;	O
case	O
11	int
:	O
{	O
end_def	function
(	O
)	O
;	O
}	O
break	O
;	O
case	O
12	int
:	O
{	O
if	O
(	O
interactive	function
(	O
)	O
)	O
{	O
yyclearin	O
;	O
yyerrok	O
;	O
}	O
else	O
YYERROR	O
;	O
}	O
break	O
;	O
case	O
15	int
:	O
{	O
gdbmarglist_init	function
(	O
&	O
(	O
yyval	union
.	O
arglist	pointer
)	O
,	O
NULL	O
)	O
;	O
}	O
break	O
;	O
case	O
17	int
:	O
{	O
gdbmarglist_init	function
(	O
&	O
(	O
yyval	union
.	O
arglist	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
arg	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
18	int
:	O
{	O
gdbmarglist_add	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
arglist	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
arg	pointer
)	O
)	O
;	O
(	O
yyval	union
.	O
arglist	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
arglist	pointer
)	O
;	O
}	O
break	O
;	O
case	O
19	int
:	O
{	O
(	O
yyval	union
.	O
arg	pointer
)	O
=	O
gdbmarg_string	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
20	int
:	O
{	O
(	O
yyval	union
.	O
arg	pointer
)	O
=	O
gdbmarg_kvpair	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
kvpair	struct
)	O
,	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
)	O
;	O
}	O
break	O
;	O
case	O
21	int
:	O
{	O
(	O
yyval	union
.	O
kvpair	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvlist	struct
)	O
.	O
head	pointer
;	O
}	O
break	O
;	O
case	O
22	int
:	O
{	O
(	O
yyval	union
.	O
kvlist	struct
)	O
.	O
head	pointer
=	O
(	O
yyval	union
.	O
kvlist	struct
)	O
.	O
tail	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
kvpair	struct
)	O
;	O
}	O
break	O
;	O
case	O
23	int
:	O
{	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvlist	struct
)	O
.	O
tail	pointer
->	O
next	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvpair	struct
)	O
;	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvlist	struct
)	O
.	O
tail	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvpair	struct
)	O
;	O
(	O
yyval	union
.	O
kvlist	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvlist	struct
)	O
;	O
}	O
break	O
;	O
case	O
25	int
:	O
{	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvpair	struct
)	O
->	O
key	struct
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
;	O
(	O
yyval	union
.	O
kvpair	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
kvpair	struct
)	O
;	O
}	O
break	O
;	O
case	O
26	int
:	O
{	O
(	O
yyval	union
.	O
kvpair	struct
)	O
=	O
kvpair_string	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
27	int
:	O
{	O
(	O
yyval	union
.	O
kvpair	struct
)	O
=	O
kvpair_list	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
slist	struct
)	O
.	O
head	pointer
)	O
;	O
}	O
break	O
;	O
case	O
28	int
:	O
{	O
(	O
yyval	union
.	O
slist	struct
)	O
.	O
head	pointer
=	O
(	O
yyval	union
.	O
slist	struct
)	O
.	O
tail	pointer
=	O
slist_new_s	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
29	int
:	O
{	O
struct	O
slist	struct
*	O
s	pointer
=	O
slist_new_s	function
(	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
slist_insert	function
(	O
&	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
slist	struct
)	O
.	O
tail	pointer
,	O
s	pointer
)	O
;	O
(	O
yyval	union
.	O
slist	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
slist	struct
)	O
;	O
}	O
break	O
;	O
case	O
32	int
:	O
{	O
begin_def	function
(	O
)	O
;	O
}	O
break	O
;	O
case	O
33	int
:	O
{	O
end_def	function
(	O
)	O
;	O
dsegm_free_list	function
(	O
dsdef	array
[	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
num	int
)	O
]	O
)	O
;	O
dsdef	array
[	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
num	int
)	O
]	O
=	O
(	O
yyvsp	pointer
[	O
(	O
4	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
dsegm	struct
)	O
;	O
}	O
break	O
;	O
case	O
34	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
4	int
)	O
]	O
.	O
dsegmlist	struct
)	O
.	O
head	pointer
;	O
}	O
break	O
;	O
case	O
35	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
dsegm_new_field	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
type	int
)	O
,	O
NULL	O
,	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
38	int
:	O
{	O
if	O
(	O
strcmp	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
,	O
"key"	pointer
)	O
==	O
0	int
)	O
(	O
yyval	union
.	O
num	int
)	O
=	O
DS_KEY	int
;	O
else	O
if	O
(	O
strcmp	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
,	O
"content"	pointer
)	O
==	O
0	int
)	O
(	O
yyval	union
.	O
num	int
)	O
=	O
DS_CONTENT	int
;	O
else	O
{	O
terror	function
(	O
_	O
(	O
"expected \"key\" or \"content\", "	pointer
"but found \"%s\""	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
YYERROR	O
;	O
}	O
}	O
break	O
;	O
case	O
39	int
:	O
{	O
(	O
yyval	union
.	O
dsegmlist	struct
)	O
.	O
head	pointer
=	O
(	O
yyval	union
.	O
dsegmlist	struct
)	O
.	O
tail	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
dsegm	struct
)	O
;	O
}	O
break	O
;	O
case	O
40	int
:	O
{	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
dsegmlist	struct
)	O
.	O
tail	pointer
->	O
next	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
dsegm	struct
)	O
;	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
dsegmlist	struct
)	O
.	O
tail	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
dsegm	struct
)	O
;	O
(	O
yyval	union
.	O
dsegmlist	struct
)	O
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
dsegmlist	struct
)	O
;	O
}	O
break	O
;	O
case	O
41	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
dsegm_new_field	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
type	int
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
string	pointer
)	O
,	O
1	int
)	O
;	O
}	O
break	O
;	O
case	O
42	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
dsegm_new_field	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
5	int
)	O
]	O
.	O
type	int
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
5	int
)	O
]	O
.	O
string	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
4	int
)	O
-	O
(	O
5	int
)	O
]	O
.	O
num	int
)	O
)	O
;	O
}	O
break	O
;	O
case	O
43	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
dsegm_new	function
(	O
FDEF_OFF	int
)	O
;	O
(	O
yyval	union
.	O
dsegm	struct
)	O
->	O
v	union
.	O
n	int
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
num	int
)	O
;	O
}	O
break	O
;	O
case	O
44	int
:	O
{	O
(	O
yyval	union
.	O
dsegm	struct
)	O
=	O
dsegm_new	function
(	O
FDEF_PAD	int
)	O
;	O
(	O
yyval	union
.	O
dsegm	struct
)	O
->	O
v	union
.	O
n	int
=	O
(	O
yyvsp	pointer
[	O
(	O
2	int
)	O
-	O
(	O
2	int
)	O
]	O
.	O
num	int
)	O
;	O
}	O
break	O
;	O
case	O
45	int
:	O
{	O
variable_print_all	function
(	O
stdout	pointer
)	O
;	O
}	O
break	O
;	O
case	O
50	int
:	O
{	O
int	O
t	int
=	O
1	int
;	O
int	O
rc	int
;	O
char	O
*	O
varname	pointer
=	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
;	O
rc	int
=	O
variable_set	function
(	O
varname	pointer
,	O
VART_BOOL	int
,	O
&	O
t	int
)	O
;	O
if	O
(	O
rc	int
==	O
VAR_ERR_NOTDEF	int
&&	O
strncmp	function
(	O
varname	pointer
,	O
"no"	pointer
,	O
2	int
)	O
==	O
0	int
)	O
{	O
t	int
=	O
0	int
;	O
varname	pointer
+=	O
2	int
;	O
rc	int
=	O
variable_set	function
(	O
varname	pointer
,	O
VART_BOOL	int
,	O
&	O
t	int
)	O
;	O
}	O
switch	O
(	O
rc	int
)	O
{	O
case	O
VAR_OK	int
:	O
break	O
;	O
case	O
VAR_ERR_NOTDEF	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
_	O
(	O
"no such variable: %s"	pointer
)	O
,	O
varname	pointer
)	O
;	O
break	O
;	O
case	O
VAR_ERR_BADTYPE	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
_	O
(	O
"%s is not a boolean variable"	pointer
)	O
,	O
varname	pointer
)	O
;	O
break	O
;	O
default	O
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
_	O
(	O
"unexpected error setting %s: %d"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
,	O
rc	int
)	O
;	O
}	O
free	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
51	int
:	O
{	O
int	O
rc	int
=	O
variable_set	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
,	O
VART_STRING	int
,	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
VAR_OK	int
:	O
break	O
;	O
case	O
VAR_ERR_NOTDEF	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
,	O
_	O
(	O
"no such variable: %s"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
break	O
;	O
case	O
VAR_ERR_BADTYPE	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
,	O
_	O
(	O
"%s: bad variable type"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
break	O
;	O
case	O
VAR_ERR_BADVALUE	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
,	O
_	O
(	O
"%s: value %s is not allowed"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
break	O
;	O
default	O
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
)	O
,	O
_	O
(	O
"unexpected error setting %s: %d"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
,	O
rc	int
)	O
;	O
}	O
free	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
free	function
(	O
(	O
yyvsp	pointer
[	O
(	O
3	int
)	O
-	O
(	O
3	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
54	int
:	O
{	O
int	O
rc	int
=	O
variable_unset	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
switch	O
(	O
rc	int
)	O
{	O
case	O
VAR_OK	int
:	O
break	O
;	O
case	O
VAR_ERR_NOTDEF	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
_	O
(	O
"no such variable: %s"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
break	O
;	O
case	O
VAR_ERR_BADVALUE	int
:	O
lerror	function
(	O
&	O
(	O
yylsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
)	O
,	O
_	O
(	O
"%s: variable cannot be unset"	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
break	O
;	O
}	O
free	function
(	O
(	O
yyvsp	pointer
[	O
(	O
1	int
)	O
-	O
(	O
1	int
)	O
]	O
.	O
string	pointer
)	O
)	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
YY_SYMBOL_PRINT	O
(	O
"-> $$ ="	pointer
,	O
yyr1	array
[	O
yyn	long
]	O
,	O
&	O
yyval	union
,	O
&	O
yyloc	struct
)	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
*	O
++	O
yyvsp	pointer
=	O
yyval	union
;	O
*	O
++	O
yylsp	pointer
=	O
yyloc	struct
;	O
yyn	long
=	O
yyr1	array
[	O
yyn	long
]	O
;	O
yystate	int
=	O
yypgoto	array
[	O
yyn	long
-	O
YYNTOKENS	int
]	O
+	O
*	O
yyssp	pointer
;	O
if	O
(	O
0	int
<=	O
yystate	int
&&	O
yystate	int
<=	O
YYLAST	int
&&	O
yycheck	array
[	O
yystate	int
]	O
==	O
*	O
yyssp	pointer
)	O
yystate	int
=	O
yytable	array
[	O
yystate	int
]	O
;	O
else	O
yystate	int
=	O
yydefgoto	array
[	O
yyn	long
-	O
YYNTOKENS	int
]	O
;	O
goto	O
yynewstate	O
;	O
yyerrlab	O
:	O
yytoken	int
=	O
yychar	int
==	O
YYEMPTY	O
?	O
YYEMPTY	O
:	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
if	O
(	O
!	O
yyerrstatus	int
)	O
{	O
++	O
yynerrs	int
;	O
{	O
char	O
const	O
*	O
yymsgp	pointer
=	O
YY_	O
(	O
"syntax error"	pointer
)	O
;	O
int	O
yysyntax_error_status	int
;	O
yysyntax_error_status	int
=	O
YYSYNTAX_ERROR	O
;	O
if	O
(	O
yysyntax_error_status	int
==	O
0	int
)	O
yymsgp	pointer
=	O
yymsg	pointer
;	O
else	O
if	O
(	O
yysyntax_error_status	int
==	O
1	int
)	O
{	O
if	O
(	O
yymsg	pointer
!=	O
yymsgbuf	array
)	O
YYSTACK_FREE	O
(	O
yymsg	pointer
)	O
;	O
yymsg	pointer
=	O
(	O
char	O
*	O
)	O
YYSTACK_ALLOC	O
(	O
yymsg_alloc	pointer
)	O
;	O
if	O
(	O
!	O
yymsg	pointer
)	O
{	O
yymsg	pointer
=	O
yymsgbuf	array
;	O
yymsg_alloc	pointer
=	O
sizeof	O
yymsgbuf	array
;	O
yysyntax_error_status	int
=	O
2	int
;	O
}	O
else	O
{	O
yysyntax_error_status	int
=	O
YYSYNTAX_ERROR	O
;	O
yymsgp	pointer
=	O
yymsg	pointer
;	O
}	O
}	O
yyerror	function
(	O
yymsgp	pointer
)	O
;	O
if	O
(	O
yysyntax_error_status	int
==	O
2	int
)	O
goto	O
yyexhaustedlab	O
;	O
}	O
}	O
yyerror_range	array
[	O
1	int
]	O
=	O
yylloc	struct
;	O
if	O
(	O
yyerrstatus	int
==	O
3	int
)	O
{	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
if	O
(	O
yychar	int
==	O
YYEOF	int
)	O
YYABORT	O
;	O
}	O
else	O
{	O
yydestruct	function
(	O
"Error: discarding"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	struct
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
}	O
}	O
goto	O
yyerrlab1	O
;	O
yyerrorlab	O
:	O
if	O
(	O
0	int
)	O
goto	O
yyerrorlab	O
;	O
yyerror_range	array
[	O
1	int
]	O
=	O
yylsp	pointer
[	O
1	int
-	O
yylen	int
]	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
yystate	int
=	O
*	O
yyssp	pointer
;	O
goto	O
yyerrlab1	O
;	O
yyerrlab1	O
:	O
yyerrstatus	int
=	O
3	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
yyn	long
=	O
yypact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
!	O
yypact_value_is_default	O
(	O
yyn	long
)	O
)	O
{	O
yyn	long
+=	O
YYTERROR	int
;	O
if	O
(	O
0	int
<=	O
yyn	long
&&	O
yyn	long
<=	O
YYLAST	int
&&	O
yycheck	array
[	O
yyn	long
]	O
==	O
YYTERROR	int
)	O
{	O
yyn	long
=	O
yytable	array
[	O
yyn	long
]	O
;	O
if	O
(	O
0	int
<	O
yyn	long
)	O
break	O
;	O
}	O
}	O
if	O
(	O
yyssp	pointer
==	O
yyss	pointer
)	O
YYABORT	O
;	O
yyerror_range	array
[	O
1	int
]	O
=	O
*	O
yylsp	pointer
;	O
yydestruct	function
(	O
"Error: popping"	pointer
,	O
yystos	array
[	O
yystate	int
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
yystate	int
=	O
*	O
yyssp	pointer
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
}	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
yyerror_range	array
[	O
2	int
]	O
=	O
yylloc	struct
;	O
YYLLOC_DEFAULT	O
(	O
yyloc	struct
,	O
yyerror_range	array
,	O
2	int
)	O
;	O
*	O
++	O
yylsp	pointer
=	O
yyloc	struct
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yystos	array
[	O
yyn	long
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
yystate	int
=	O
yyn	long
;	O
goto	O
yynewstate	O
;	O
yyacceptlab	O
:	O
yyresult	int
=	O
0	int
;	O
goto	O
yyreturn	O
;	O
yyabortlab	O
:	O
yyresult	int
=	O
1	int
;	O
goto	O
yyreturn	O
;	O
yyexhaustedlab	O
:	O
yyerror	function
(	O
YY_	O
(	O
"memory exhausted"	pointer
)	O
)	O
;	O
yyresult	int
=	O
2	int
;	O
yyreturn	O
:	O
if	O
(	O
yychar	int
!=	O
YYEMPTY	O
)	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
yydestruct	function
(	O
"Cleanup: discarding lookahead"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	struct
)	O
;	O
}	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
while	O
(	O
yyssp	pointer
!=	O
yyss	pointer
)	O
{	O
yydestruct	function
(	O
"Cleanup: popping"	pointer
,	O
yystos	array
[	O
*	O
yyssp	pointer
]	O
,	O
yyvsp	pointer
,	O
yylsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
yyss	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss	pointer
)	O
;	O
if	O
(	O
yymsg	pointer
!=	O
yymsgbuf	array
)	O
YYSTACK_FREE	O
(	O
yymsg	pointer
)	O
;	O
return	O
YYID	O
(	O
yyresult	int
)	O
;	O
}	O
void	O
terror	function
(	O
const	O
char	O
*	O
fmt	pointer
,	O
...	O
)	O
{	O
va_list	array
ap	array
;	O
va_start	O
(	O
ap	array
,	O
fmt	pointer
)	O
;	O
vlerror	function
(	O
&	O
yylloc	struct
,	O
fmt	pointer
,	O
ap	array
)	O
;	O
va_end	O
(	O
ap	array
)	O
;	O
}	O
int	O
yyerror	function
(	O
char	O
const	O
*	O
s	pointer
)	O
{	O
terror	function
(	O
"%s"	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
void	O
gram_trace	function
(	O
int	O
n	int
)	O
{	O
}	O
