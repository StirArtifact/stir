struct	O
mu_pop3_stream	struct
{	O
struct	O
_mu_stream	struct
stream	pointer
;	O
mu_pop3_t	pointer
pop3	pointer
;	O
int	O
flags	int
;	O
struct	O
mu_buffer_query	struct
oldbuf	struct
;	O
}	O
;	O
static	O
void	O
_pop3_event_cb	function
(	O
mu_stream_t	pointer
str	pointer
,	O
int	O
ev	int
,	O
unsigned	O
long	O
flags	int
,	O
void	O
*	O
ptr	pointer
MU_ARG_UNUSED	O
)	O
{	O
if	O
(	O
flags	int
&	O
_MU_STR_EOF	int
)	O
{	O
mu_transport_t	pointer
trans	pointer
[	O
2	int
]	O
;	O
if	O
(	O
mu_stream_ioctl	function
(	O
str	pointer
,	O
MU_IOCTL_TRANSPORT	int
,	O
MU_IOCTL_OP_GET	int
,	O
trans	pointer
)	O
==	O
0	int
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
trans	pointer
[	O
0	int
]	O
;	O
_mu_pop3_xscript_level	function
(	O
sp	pointer
->	O
pop3	pointer
,	O
MU_XSCRIPT_NORMAL	int
)	O
;	O
sp	pointer
->	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_NO_STATE	int
;	O
if	O
(	O
sp	pointer
->	O
flags	int
&	O
_POP3F_CHBUF	int
)	O
{	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
pop3	pointer
->	O
carrier	pointer
,	O
MU_IOCTL_TRANSPORT_BUFFER	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
sp	pointer
->	O
oldbuf	struct
)	O
;	O
sp	pointer
->	O
flags	int
=	O
_POP3F_DONE	int
;	O
}	O
}	O
}	O
}	O
static	O
int	O
mu_pop3_filter_create	function
(	O
mu_stream_t	pointer
*	O
pstream	pointer
,	O
mu_stream_t	pointer
stream	pointer
)	O
{	O
int	O
rc	int
;	O
rc	int
=	O
mu_filter_create	function
(	O
pstream	pointer
,	O
stream	pointer
,	O
"CRLFDOT"	pointer
,	O
MU_FILTER_DECODE	int
,	O
MU_STREAM_READ	int
)	O
;	O
if	O
(	O
rc	int
==	O
0	int
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
stream	pointer
;	O
mu_stream_t	pointer
str	pointer
=	O
*	O
pstream	pointer
;	O
str	pointer
->	O
event_cb	pointer
=	O
_pop3_event_cb	function
;	O
str	pointer
->	O
event_mask	int
=	O
_MU_STR_EVMASK	O
(	O
_MU_STR_EVENT_SETFLAG	int
)	O
;	O
sp	pointer
->	O
oldbuf	struct
.	O
type	int
=	O
MU_TRANSPORT_OUTPUT	int
;	O
if	O
(	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
pop3	pointer
->	O
carrier	pointer
,	O
MU_IOCTL_TRANSPORT_BUFFER	int
,	O
MU_IOCTL_OP_GET	int
,	O
&	O
sp	pointer
->	O
oldbuf	struct
)	O
==	O
0	int
)	O
{	O
struct	O
mu_buffer_query	struct
newbuf	struct
;	O
sp	pointer
->	O
flags	int
|=	O
_POP3F_CHBUF	int
;	O
newbuf	struct
.	O
type	int
=	O
MU_TRANSPORT_OUTPUT	int
;	O
newbuf	struct
.	O
buftype	enum
=	O
mu_buffer_full	int
;	O
newbuf	struct
.	O
bufsize	long
=	O
64	int
*	O
1024	int
;	O
mu_stream_ioctl	function
(	O
sp	pointer
->	O
pop3	pointer
->	O
carrier	pointer
,	O
MU_IOCTL_TRANSPORT_BUFFER	int
,	O
MU_IOCTL_OP_SET	int
,	O
&	O
newbuf	struct
)	O
;	O
}	O
}	O
return	O
rc	int
;	O
}	O
static	O
int	O
_mu_pop3_read	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
size_t	long
*	O
pnread	pointer
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
str	pointer
;	O
mu_pop3_t	pointer
pop3	pointer
=	O
sp	pointer
->	O
pop3	pointer
;	O
size_t	long
nread	pointer
;	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
sp	pointer
->	O
flags	int
&	O
_POP3F_DONE	int
)	O
nread	pointer
=	O
0	int
;	O
else	O
{	O
status	int
=	O
mu_stream_read	function
(	O
pop3	pointer
->	O
carrier	pointer
,	O
buf	pointer
,	O
bufsize	long
,	O
&	O
nread	pointer
)	O
;	O
if	O
(	O
status	int
==	O
0	int
&&	O
nread	pointer
==	O
0	int
)	O
{	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_NO_STATE	int
;	O
sp	pointer
->	O
flags	int
|=	O
_POP3F_DONE	int
;	O
}	O
}	O
*	O
pnread	pointer
=	O
nread	pointer
;	O
return	O
status	int
;	O
}	O
static	O
int	O
_mu_pop3_readdelim	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
char	O
*	O
buf	pointer
,	O
size_t	long
bufsize	long
,	O
int	O
delim	int
,	O
size_t	long
*	O
pnread	pointer
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
str	pointer
;	O
mu_pop3_t	pointer
pop3	pointer
=	O
sp	pointer
->	O
pop3	pointer
;	O
size_t	long
nread	pointer
;	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
sp	pointer
->	O
flags	int
&	O
_POP3F_DONE	int
)	O
nread	pointer
=	O
0	int
;	O
else	O
{	O
status	int
=	O
mu_stream_readdelim	function
(	O
pop3	pointer
->	O
carrier	pointer
,	O
buf	pointer
,	O
bufsize	long
,	O
delim	int
,	O
&	O
nread	pointer
)	O
;	O
if	O
(	O
status	int
==	O
0	int
&&	O
nread	pointer
==	O
0	int
)	O
{	O
pop3	pointer
->	O
state	pointer
=	O
MU_POP3_NO_STATE	int
;	O
sp	pointer
->	O
flags	int
|=	O
_POP3F_DONE	int
;	O
}	O
}	O
*	O
pnread	pointer
=	O
nread	pointer
;	O
return	O
status	int
;	O
}	O
static	O
int	O
_mu_pop3_flush	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
str	pointer
;	O
mu_pop3_t	pointer
pop3	pointer
=	O
sp	pointer
->	O
pop3	pointer
;	O
return	O
mu_stream_flush	function
(	O
pop3	pointer
->	O
carrier	pointer
)	O
;	O
}	O
static	O
int	O
_mu_pop3_wait	function
(	O
struct	O
_mu_stream	struct
*	O
str	pointer
,	O
int	O
*	O
pflags	pointer
,	O
struct	O
timeval	struct
*	O
tvp	pointer
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
str	pointer
;	O
mu_pop3_t	pointer
pop3	pointer
=	O
sp	pointer
->	O
pop3	pointer
;	O
return	O
mu_stream_wait	function
(	O
pop3	pointer
->	O
carrier	pointer
,	O
pflags	pointer
,	O
tvp	pointer
)	O
;	O
}	O
int	O
mu_pop3_stream_create	function
(	O
mu_pop3_t	pointer
pop3	pointer
,	O
mu_stream_t	pointer
*	O
pstream	pointer
)	O
{	O
struct	O
mu_pop3_stream	struct
*	O
sp	pointer
;	O
mu_stream_t	pointer
str	pointer
;	O
int	O
status	int
;	O
sp	pointer
=	O
(	O
struct	O
mu_pop3_stream	struct
*	O
)	O
_mu_stream_create	function
(	O
sizeof	O
(	O
*	O
sp	pointer
)	O
,	O
MU_STREAM_READ	int
|	O
_MU_STR_OPEN	int
)	O
;	O
if	O
(	O
!	O
sp	pointer
)	O
return	O
ENOMEM	int
;	O
sp	pointer
->	O
stream	pointer
.	O
read	pointer
=	O
_mu_pop3_read	function
;	O
sp	pointer
->	O
stream	pointer
.	O
readdelim	pointer
=	O
_mu_pop3_readdelim	function
;	O
sp	pointer
->	O
stream	pointer
.	O
flush	pointer
=	O
_mu_pop3_flush	function
;	O
sp	pointer
->	O
stream	pointer
.	O
wait	pointer
=	O
_mu_pop3_wait	function
;	O
sp	pointer
->	O
pop3	pointer
=	O
pop3	pointer
;	O
sp	pointer
->	O
flags	int
=	O
0	int
;	O
str	pointer
=	O
(	O
mu_stream_t	pointer
)	O
sp	pointer
;	O
mu_stream_set_buffer	function
(	O
str	pointer
,	O
mu_buffer_line	int
,	O
0	int
)	O
;	O
status	int
=	O
mu_pop3_filter_create	function
(	O
pstream	pointer
,	O
str	pointer
)	O
;	O
mu_stream_unref	function
(	O
str	pointer
)	O
;	O
return	O
status	int
;	O
}	O
