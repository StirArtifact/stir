RCSTAG_CC	O
(	O
"$Id$"	pointer
)	O
;	O
extern	O
void	O
*	O
xmalloc	function
(	O
unsigned	O
int	O
size	long
)	O
{	O
void	O
*	O
val	enum
=	O
calloc	function
(	O
1	int
,	O
size	long
)	O
;	O
if	O
(	O
!	O
val	enum
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"indent: Virtual memory exhausted.\n"	pointer
)	O
)	O
;	O
do_exit	function
(	O
system_error	int
)	O
;	O
}	O
return	O
val	enum
;	O
}	O
extern	O
void	O
*	O
xrealloc	function
(	O
void	O
*	O
ptr	pointer
,	O
unsigned	O
int	O
size	long
)	O
{	O
void	O
*	O
val	enum
=	O
realloc	function
(	O
ptr	pointer
,	O
size	long
)	O
;	O
if	O
(	O
!	O
val	enum
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"indent: Virtual memory exhausted.\n"	pointer
)	O
)	O
;	O
do_exit	function
(	O
system_error	int
)	O
;	O
}	O
return	O
val	enum
;	O
}	O
extern	O
void	O
xfree	function
(	O
void	O
*	O
ptr	pointer
)	O
{	O
if	O
(	O
!	O
ptr	pointer
)	O
{	O
return	O
;	O
}	O
free	function
(	O
ptr	pointer
)	O
;	O
}	O
extern	O
void	O
message	function
(	O
char	O
*	O
kind	pointer
,	O
char	O
*	O
string	pointer
,	O
char	O
*	O
a0	pointer
,	O
char	O
*	O
a1	pointer
)	O
{	O
if	O
(	O
kind	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"indent: %s:%d: %s:"	pointer
)	O
,	O
in_name	pointer
,	O
line_no	int
,	O
kind	pointer
)	O
;	O
}	O
fprintf	function
(	O
stderr	pointer
,	O
string	pointer
,	O
a0	pointer
,	O
a1	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
}	O
extern	O
void	O
do_exit	function
(	O
int	O
code	int
)	O
{	O
uninit_parser	function
(	O
)	O
;	O
cleanup_user_specials	function
(	O
)	O
;	O
exit	function
(	O
code	int
)	O
;	O
}	O
extern	O
void	O
fatal	function
(	O
const	O
char	O
*	O
string	pointer
,	O
const	O
char	O
*	O
a0	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"indent: Fatal Error: "	pointer
)	O
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
string	pointer
,	O
a0	pointer
)	O
;	O
fprintf	function
(	O
stderr	pointer
,	O
"\n"	pointer
)	O
;	O
if	O
(	O
errno	O
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
_	O
(	O
"indent: System Error: "	pointer
)	O
)	O
;	O
perror	function
(	O
0	int
)	O
;	O
}	O
do_exit	function
(	O
indent_fatal	int
)	O
;	O
}	O
