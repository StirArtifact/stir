const	O
char	O
_uuconf_tportc_rcsid	array
[	O
]	O
=	O
"$Id: tportc.c,v 1.18 2002/03/05 19:10:43 ian Rel $"	pointer
;	O
static	O
int	O
ipproto_param	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
ipbaud_range	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
ipdialer	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
int	O
ipcunknown	function
P	O
(	O
(	O
pointer	pointer
pglobal	pointer
,	O
int	O
argc	int
,	O
char	O
*	O
*	O
argv	pointer
,	O
pointer	pointer
pvar	pointer
,	O
pointer	pointer
pinfo	pointer
)	O
)	O
;	O
static	O
const	O
char	O
*	O
const	O
azPtype_names	array
[	O
]	O
=	O
{	O
NULL	O
,	O
"stdin"	pointer
,	O
"modem"	pointer
,	O
"direct"	pointer
,	O
"tcp"	pointer
,	O
"tli"	pointer
,	O
"pipe"	pointer
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPort_cmds	array
[	O
]	O
=	O
{	O
{	O
"protocol"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_zprotocols	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"protocol-parameter"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_qproto_params	pointer
)	O
,	O
ipproto_param	function
}	O
,	O
{	O
"seven-bit"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_ireliable	int
)	O
,	O
_uuconf_iseven_bit	function
}	O
,	O
{	O
"reliable"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_ireliable	int
)	O
,	O
_uuconf_ireliable	function
}	O
,	O
{	O
"half-duplex"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
2	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_ireliable	int
)	O
,	O
_uuconf_ihalf_duplex	function
}	O
,	O
{	O
"lockname"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_zlockname	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPstdin_cmds	array
[	O
]	O
=	O
{	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPmodem_cmds	array
[	O
]	O
=	O
{	O
{	O
"device"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdevice	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"baud"	pointer
,	O
UUCONF_CMDTABTYPE_LONG	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
)	O
,	O
NULL	O
}	O
,	O
{	O
"speed"	pointer
,	O
UUCONF_CMDTABTYPE_LONG	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
)	O
,	O
NULL	O
}	O
,	O
{	O
"baud-range"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
3	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
)	O
,	O
ipbaud_range	function
}	O
,	O
{	O
"speed-range"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
3	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
)	O
,	O
ipbaud_range	function
}	O
,	O
{	O
"carrier"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fcarrier	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"hardflow"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fhardflow	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"dial-device"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdial_device	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"dialer"	pointer
,	O
UUCONF_CMDTABTYPE_FN	O
|	O
0	int
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
)	O
,	O
ipdialer	function
}	O
,	O
{	O
"dialer-sequence"	pointer
,	O
UUCONF_CMDTABTYPE_FULLSTRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_pzdialer	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPdirect_cmds	array
[	O
]	O
=	O
{	O
{	O
"device"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_zdevice	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"baud"	pointer
,	O
UUCONF_CMDTABTYPE_LONG	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
)	O
,	O
NULL	O
}	O
,	O
{	O
"speed"	pointer
,	O
UUCONF_CMDTABTYPE_LONG	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
)	O
,	O
NULL	O
}	O
,	O
{	O
"carrier"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fcarrier	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"hardflow"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fhardflow	int
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPtcp_cmds	array
[	O
]	O
=	O
{	O
{	O
"service"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_zport	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"version"	pointer
,	O
UUCONF_CMDTABTYPE_INT	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_iversion	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"dialer-sequence"	pointer
,	O
UUCONF_CMDTABTYPE_FULLSTRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_pzdialer	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPtli_cmds	array
[	O
]	O
=	O
{	O
{	O
"device"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zdevice	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"stream"	pointer
,	O
UUCONF_CMDTABTYPE_BOOLEAN	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_fstream	int
)	O
,	O
NULL	O
}	O
,	O
{	O
"push"	pointer
,	O
UUCONF_CMDTABTYPE_FULLSTRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzpush	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"dialer-sequence"	pointer
,	O
UUCONF_CMDTABTYPE_FULLSTRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzdialer	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
"server-address"	pointer
,	O
UUCONF_CMDTABTYPE_STRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zservaddr	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
static	O
const	O
struct	O
cmdtab_offset	struct
asPpipe_cmds	array
[	O
]	O
=	O
{	O
{	O
"command"	pointer
,	O
UUCONF_CMDTABTYPE_FULLSTRING	O
,	O
offsetof	O
(	O
struct	O
uuconf_port	struct
,	O
uuconf_u	union
.	O
uuconf_spipe	struct
.	O
uuconf_pzcmd	pointer
)	O
,	O
NULL	O
}	O
,	O
{	O
NULL	O
,	O
0	int
,	O
0	int
,	O
NULL	O
}	O
}	O
;	O
int	O
_uuconf_iport_cmd	function
(	O
qglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
qport	pointer
)	O
struct	O
sglobal	struct
*	O
qglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
struct	O
uuconf_port	struct
*	O
qport	pointer
;	O
{	O
boolean	int
fgottype	int
;	O
const	O
struct	O
cmdtab_offset	struct
*	O
qcmds	pointer
;	O
size_t	long
ccmds	long
;	O
struct	O
uuconf_cmdtab	struct
as	array
[	O
CCMDS	O
]	O
;	O
size_t	long
i	long
;	O
int	O
iret	int
;	O
fgottype	int
=	O
strcasecmp	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
"type"	pointer
)	O
==	O
0	int
;	O
if	O
(	O
fgottype	int
||	O
qport	pointer
->	O
uuconf_ttype	enum
==	O
UUCONF_PORTTYPE_UNKNOWN	int
)	O
{	O
enum	O
uuconf_porttype	enum
ttype	enum
;	O
if	O
(	O
!	O
fgottype	int
)	O
ttype	enum
=	O
UUCONF_PORTTYPE_MODEM	int
;	O
else	O
{	O
if	O
(	O
argc	int
!=	O
2	int
)	O
return	O
UUCONF_SYNTAX_ERROR	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
CPORT_TYPES	O
;	O
i	long
++	O
)	O
if	O
(	O
azPtype_names	array
[	O
i	long
]	O
!=	O
NULL	O
&&	O
strcasecmp	function
(	O
argv	pointer
[	O
1	int
]	O
,	O
azPtype_names	array
[	O
i	long
]	O
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	long
>=	O
CPORT_TYPES	O
)	O
return	O
UUCONF_SYNTAX_ERROR	O
;	O
ttype	enum
=	O
(	O
enum	O
uuconf_porttype	enum
)	O
i	long
;	O
}	O
qport	pointer
->	O
uuconf_ttype	enum
=	O
ttype	enum
;	O
switch	O
(	O
ttype	enum
)	O
{	O
default	O
:	O
case	O
UUCONF_PORTTYPE_STDIN	int
:	O
break	O
;	O
case	O
UUCONF_PORTTYPE_MODEM	int
:	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdevice	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_zdial_device	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ibaud	long
=	O
0L	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ilowbaud	long
=	O
0L	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_ihighbaud	long
=	O
0L	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fcarrier	int
=	O
TRUE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_pzdialer	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_smodem	struct
.	O
uuconf_qdialer	pointer
=	O
NULL	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_DIRECT	int
:	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_zdevice	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_ibaud	long
=	O
-	O
1	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fcarrier	int
=	O
FALSE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_sdirect	struct
.	O
uuconf_fhardflow	int
=	O
TRUE	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_TCP	int
:	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_zport	pointer
=	O
(	O
char	O
*	O
)	O
"uucp"	pointer
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_iversion	int
=	O
0	int
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stcp	struct
.	O
uuconf_pzdialer	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_SPECIFIED	O
|	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
)	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_TLI	int
:	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zdevice	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_fstream	int
=	O
FALSE	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzpush	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_pzdialer	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_stli	struct
.	O
uuconf_zservaddr	pointer
=	O
NULL	O
;	O
qport	pointer
->	O
uuconf_ireliable	int
=	O
(	O
UUCONF_RELIABLE_SPECIFIED	O
|	O
UUCONF_RELIABLE_ENDTOEND	O
|	O
UUCONF_RELIABLE_RELIABLE	O
|	O
UUCONF_RELIABLE_EIGHT	O
|	O
UUCONF_RELIABLE_FULLDUPLEX	O
)	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_PIPE	int
:	O
qport	pointer
->	O
uuconf_u	union
.	O
uuconf_spipe	struct
.	O
uuconf_pzcmd	pointer
=	O
NULL	O
;	O
break	O
;	O
}	O
if	O
(	O
fgottype	int
)	O
return	O
UUCONF_CMDTABRET_CONTINUE	O
;	O
}	O
qcmds	pointer
=	O
asPort_cmds	array
;	O
ccmds	long
=	O
CPORT_CMDS	O
;	O
for	O
(	O
i	long
=	O
0	int
;	O
i	long
<	O
CPORT_CMDS	O
-	O
1	int
;	O
i	long
++	O
)	O
if	O
(	O
strcasecmp	function
(	O
argv	pointer
[	O
0	int
]	O
,	O
asPort_cmds	array
[	O
i	long
]	O
.	O
zcmd	pointer
)	O
==	O
0	int
)	O
break	O
;	O
if	O
(	O
i	long
>=	O
CPORT_CMDS	O
-	O
1	int
)	O
{	O
switch	O
(	O
qport	pointer
->	O
uuconf_ttype	enum
)	O
{	O
case	O
UUCONF_PORTTYPE_STDIN	int
:	O
qcmds	pointer
=	O
asPstdin_cmds	array
;	O
ccmds	long
=	O
CSTDIN_CMDS	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_MODEM	int
:	O
qcmds	pointer
=	O
asPmodem_cmds	array
;	O
ccmds	long
=	O
CMODEM_CMDS	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_DIRECT	int
:	O
qcmds	pointer
=	O
asPdirect_cmds	array
;	O
ccmds	long
=	O
CDIRECT_CMDS	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_TCP	int
:	O
qcmds	pointer
=	O
asPtcp_cmds	array
;	O
ccmds	long
=	O
CTCP_CMDS	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_TLI	int
:	O
qcmds	pointer
=	O
asPtli_cmds	array
;	O
ccmds	long
=	O
CTLI_CMDS	O
;	O
break	O
;	O
case	O
UUCONF_PORTTYPE_PIPE	int
:	O
qcmds	pointer
=	O
asPpipe_cmds	array
;	O
ccmds	long
=	O
CPIPE_CMDS	O
;	O
break	O
;	O
default	O
:	O
return	O
UUCONF_SYNTAX_ERROR	O
;	O
}	O
}	O
_uuconf_ucmdtab_base	function
(	O
qcmds	pointer
,	O
ccmds	long
,	O
(	O
char	O
*	O
)	O
qport	pointer
,	O
as	array
)	O
;	O
iret	int
=	O
uuconf_cmd_args	function
(	O
(	O
pointer	pointer
)	O
qglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
as	array
,	O
(	O
pointer	pointer
)	O
qport	pointer
,	O
ipcunknown	function
,	O
0	int
,	O
qport	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
return	O
iret	int
&	O
~	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
static	O
int	O
ipproto_param	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
struct	O
uuconf_proto_param	struct
*	O
*	O
pqparam	pointer
=	O
(	O
struct	O
uuconf_proto_param	struct
*	O
*	O
)	O
pvar	pointer
;	O
struct	O
uuconf_port	struct
*	O
qport	pointer
=	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
pinfo	pointer
;	O
return	O
_uuconf_iadd_proto_param	function
(	O
qglobal	pointer
,	O
argc	int
-	O
1	int
,	O
argv	pointer
+	O
1	int
,	O
pqparam	pointer
,	O
qport	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
}	O
static	O
int	O
ipbaud_range	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
struct	O
uuconf_modem_port	struct
*	O
qmodem	pointer
=	O
(	O
struct	O
uuconf_modem_port	struct
*	O
)	O
pvar	pointer
;	O
int	O
iret	int
;	O
iret	int
=	O
_uuconf_iint	function
(	O
qglobal	pointer
,	O
argv	pointer
[	O
1	int
]	O
,	O
(	O
pointer	pointer
)	O
&	O
qmodem	pointer
->	O
uuconf_ilowbaud	long
,	O
FALSE	O
)	O
;	O
if	O
(	O
(	O
iret	int
&	O
~	O
UUCONF_CMDTABRET_KEEP	O
)	O
!=	O
UUCONF_SUCCESS	O
)	O
return	O
iret	int
;	O
iret	int
|=	O
_uuconf_iint	function
(	O
qglobal	pointer
,	O
argv	pointer
[	O
2	int
]	O
,	O
(	O
pointer	pointer
)	O
&	O
qmodem	pointer
->	O
uuconf_ihighbaud	long
,	O
FALSE	O
)	O
;	O
return	O
iret	int
;	O
}	O
static	O
int	O
ipdialer	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
;	O
int	O
argc	int
;	O
char	O
*	O
*	O
argv	pointer
;	O
pointer	pointer
pvar	pointer
;	O
pointer	pointer
pinfo	pointer
;	O
{	O
struct	O
sglobal	struct
*	O
qglobal	pointer
=	O
(	O
struct	O
sglobal	struct
*	O
)	O
pglobal	pointer
;	O
struct	O
uuconf_modem_port	struct
*	O
qmodem	pointer
=	O
(	O
struct	O
uuconf_modem_port	struct
*	O
)	O
pvar	pointer
;	O
struct	O
uuconf_port	struct
*	O
qport	pointer
=	O
(	O
struct	O
uuconf_port	struct
*	O
)	O
pinfo	pointer
;	O
int	O
iret	int
;	O
if	O
(	O
argc	int
<	O
2	int
)	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
if	O
(	O
argc	int
>	O
2	int
)	O
{	O
if	O
(	O
qmodem	pointer
->	O
uuconf_qdialer	pointer
==	O
NULL	O
)	O
{	O
struct	O
uuconf_dialer	struct
*	O
qnew	pointer
;	O
size_t	long
clen	long
;	O
qnew	pointer
=	O
(	O
(	O
struct	O
uuconf_dialer	struct
*	O
)	O
uuconf_malloc	function
(	O
qport	pointer
->	O
uuconf_palloc	pointer
,	O
sizeof	O
(	O
struct	O
uuconf_dialer	struct
)	O
)	O
)	O
;	O
if	O
(	O
qnew	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
_uuconf_uclear_dialer	function
(	O
qnew	pointer
)	O
;	O
if	O
(	O
qport	pointer
->	O
uuconf_zname	pointer
==	O
NULL	O
)	O
qnew	pointer
->	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
"default port file dialer"	pointer
;	O
else	O
{	O
clen	long
=	O
strlen	function
(	O
qport	pointer
->	O
uuconf_zname	pointer
)	O
;	O
qnew	pointer
->	O
uuconf_zname	pointer
=	O
(	O
char	O
*	O
)	O
uuconf_malloc	function
(	O
qport	pointer
->	O
uuconf_palloc	pointer
,	O
clen	long
+	O
sizeof	O
" dialer"	pointer
)	O
;	O
if	O
(	O
qnew	pointer
->	O
uuconf_zname	pointer
==	O
NULL	O
)	O
{	O
qglobal	pointer
->	O
ierrno	int
=	O
errno	O
;	O
return	O
(	O
UUCONF_MALLOC_FAILED	O
|	O
UUCONF_ERROR_ERRNO	O
|	O
UUCONF_CMDTABRET_EXIT	O
)	O
;	O
}	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
qnew	pointer
->	O
uuconf_zname	pointer
,	O
(	O
pointer	pointer
)	O
qport	pointer
->	O
uuconf_zname	pointer
,	O
clen	long
)	O
;	O
memcpy	function
(	O
(	O
pointer	pointer
)	O
(	O
qnew	pointer
->	O
uuconf_zname	pointer
+	O
clen	long
)	O
,	O
(	O
pointer	pointer
)	O
" dialer"	pointer
,	O
sizeof	O
" dialer"	pointer
)	O
;	O
}	O
qnew	pointer
->	O
uuconf_palloc	pointer
=	O
qport	pointer
->	O
uuconf_palloc	pointer
;	O
qmodem	pointer
->	O
uuconf_qdialer	pointer
=	O
qnew	pointer
;	O
}	O
iret	int
=	O
_uuconf_idialer_cmd	function
(	O
qglobal	pointer
,	O
argc	int
-	O
1	int
,	O
argv	pointer
+	O
1	int
,	O
qmodem	pointer
->	O
uuconf_qdialer	pointer
)	O
;	O
if	O
(	O
(	O
iret	int
&	O
~	O
UUCONF_CMDTABRET_KEEP	O
)	O
!=	O
UUCONF_SUCCESS	O
)	O
iret	int
|=	O
UUCONF_CMDTABRET_EXIT	O
;	O
return	O
iret	int
;	O
}	O
else	O
{	O
qmodem	pointer
->	O
uuconf_pzdialer	pointer
=	O
NULL	O
;	O
iret	int
=	O
_uuconf_iadd_string	function
(	O
qglobal	pointer
,	O
argv	pointer
[	O
1	int
]	O
,	O
TRUE	O
,	O
FALSE	O
,	O
&	O
qmodem	pointer
->	O
uuconf_pzdialer	pointer
,	O
qport	pointer
->	O
uuconf_palloc	pointer
)	O
;	O
if	O
(	O
iret	int
!=	O
UUCONF_SUCCESS	O
)	O
iret	int
|=	O
UUCONF_CMDTABRET_EXIT	O
;	O
return	O
iret	int
;	O
}	O
}	O
static	O
int	O
ipcunknown	function
(	O
pglobal	pointer
,	O
argc	int
,	O
argv	pointer
,	O
pvar	pointer
,	O
pinfo	pointer
)	O
pointer	pointer
pglobal	pointer
ATTRIBUTE_UNUSED	O
;	O
int	O
argc	int
ATTRIBUTE_UNUSED	O
;	O
char	O
*	O
*	O
argv	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pvar	pointer
ATTRIBUTE_UNUSED	O
;	O
pointer	pointer
pinfo	pointer
ATTRIBUTE_UNUSED	O
;	O
{	O
return	O
UUCONF_SYNTAX_ERROR	O
|	O
UUCONF_CMDTABRET_EXIT	O
;	O
}	O
