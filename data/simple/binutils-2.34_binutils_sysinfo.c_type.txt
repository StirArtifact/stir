static	O
char	O
writecode	char
;	O
static	O
char	O
*	O
it	pointer
;	O
static	O
int	O
code	int
;	O
static	O
char	O
*	O
repeat	pointer
;	O
static	O
char	O
*	O
oldrepeat	pointer
;	O
static	O
char	O
*	O
name	pointer
;	O
static	O
int	O
rdepth	int
;	O
static	O
char	O
*	O
names	array
[	O
]	O
=	O
{	O
" "	pointer
,	O
"[n]"	pointer
,	O
"[n][m]"	pointer
}	O
;	O
static	O
char	O
*	O
pnames	array
[	O
]	O
=	O
{	O
""	pointer
,	O
"*"	pointer
,	O
"**"	pointer
}	O
;	O
static	O
int	O
yyerror	function
(	O
char	O
*	O
s	pointer
)	O
;	O
extern	O
int	O
yylex	function
(	O
void	O
)	O
;	O
enum	O
yytokentype	enum
{	O
COND	int
=	O
258	int
,	O
REPEAT	int
=	O
259	int
,	O
TYPE	int
=	O
260	int
,	O
NAME	int
=	O
261	int
,	O
NUMBER	int
=	O
262	int
,	O
UNIT	int
=	O
263	int
}	O
;	O
union	O
YYSTYPE	union
{	O
int	O
i	int
;	O
char	O
*	O
s	pointer
;	O
}	O
;	O
typedef	O
union	O
YYSTYPE	union
YYSTYPE	union
;	O
extern	O
YYSTYPE	union
yylval	union
;	O
int	O
yyparse	function
(	O
void	O
)	O
;	O
typedef	O
unsigned	O
char	O
yytype_uint8	char
;	O
typedef	O
signed	O
char	O
yytype_int8	char
;	O
typedef	O
unsigned	O
short	O
int	O
yytype_uint16	short
;	O
typedef	O
short	O
int	O
yytype_int16	short
;	O
union	O
yyalloc	union
{	O
yytype_int16	short
yyss_alloc	short
;	O
YYSTYPE	union
yyvs_alloc	union
;	O
}	O
;	O
static	O
const	O
yytype_uint8	char
yytranslate	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
5	int
,	O
6	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
1	int
,	O
2	int
,	O
3	int
,	O
4	int
,	O
7	int
,	O
8	int
,	O
9	int
,	O
10	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypact	array
[	O
]	O
=	O
{	O
-	O
14	int
,	O
8	int
,	O
4	int
,	O
-	O
14	int
,	O
2	int
,	O
-	O
14	int
,	O
4	int
,	O
3	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
6	int
,	O
0	int
,	O
7	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
9	int
,	O
10	int
,	O
11	int
,	O
15	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
16	int
,	O
14	int
,	O
6	int
,	O
6	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
5	int
,	O
17	int
,	O
18	int
,	O
19	int
,	O
20	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
22	int
,	O
23	int
,	O
-	O
14	int
,	O
24	int
,	O
27	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
28	int
,	O
1	int
,	O
-	O
14	int
,	O
25	int
,	O
-	O
14	int
,	O
29	int
,	O
30	int
,	O
-	O
14	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yydefact	array
[	O
]	O
=	O
{	O
2	int
,	O
0	int
,	O
5	int
,	O
1	int
,	O
0	int
,	O
3	int
,	O
5	int
,	O
0	int
,	O
4	int
,	O
6	int
,	O
11	int
,	O
0	int
,	O
0	int
,	O
11	int
,	O
11	int
,	O
11	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
7	int
,	O
10	int
,	O
9	int
,	O
8	int
,	O
14	int
,	O
12	int
,	O
0	int
,	O
19	int
,	O
11	int
,	O
11	int
,	O
20	int
,	O
18	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
0	int
,	O
15	int
,	O
13	int
,	O
21	int
,	O
23	int
,	O
0	int
,	O
16	int
,	O
0	int
,	O
24	int
,	O
22	int
,	O
26	int
,	O
0	int
,	O
0	int
,	O
17	int
,	O
0	int
,	O
25	int
,	O
0	int
,	O
0	int
,	O
27	int
}	O
;	O
static	O
const	O
yytype_int8	char
yypgoto	array
[	O
]	O
=	O
{	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
32	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
13	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
,	O
-	O
14	int
}	O
;	O
static	O
const	O
yytype_int8	char
yydefgoto	array
[	O
]	O
=	O
{	O
-	O
1	int
,	O
1	int
,	O
2	int
,	O
5	int
,	O
6	int
,	O
10	int
,	O
12	int
,	O
13	int
,	O
29	int
,	O
14	int
,	O
28	int
,	O
15	int
,	O
44	int
,	O
32	int
,	O
19	int
,	O
36	int
,	O
42	int
,	O
47	int
,	O
48	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yytable	array
[	O
]	O
=	O
{	O
21	int
,	O
22	int
,	O
23	int
,	O
16	int
,	O
17	int
,	O
18	int
,	O
50	int
,	O
51	int
,	O
3	int
,	O
4	int
,	O
7	int
,	O
11	int
,	O
9	int
,	O
20	int
,	O
35	int
,	O
33	int
,	O
34	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
31	int
,	O
30	int
,	O
37	int
,	O
38	int
,	O
0	int
,	O
40	int
,	O
41	int
,	O
0	int
,	O
39	int
,	O
45	int
,	O
43	int
,	O
46	int
,	O
52	int
,	O
49	int
,	O
0	int
,	O
54	int
,	O
53	int
,	O
8	int
}	O
;	O
static	O
const	O
yytype_int8	char
yycheck	array
[	O
]	O
=	O
{	O
13	int
,	O
14	int
,	O
15	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
5	int
,	O
6	int
,	O
0	int
,	O
5	int
,	O
8	int
,	O
5	int
,	O
9	int
,	O
6	int
,	O
9	int
,	O
28	int
,	O
29	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
5	int
,	O
7	int
,	O
6	int
,	O
6	int
,	O
6	int
,	O
-	O
1	int
,	O
6	int
,	O
5	int
,	O
-	O
1	int
,	O
10	int
,	O
6	int
,	O
8	int
,	O
5	int
,	O
8	int
,	O
6	int
,	O
-	O
1	int
,	O
6	int
,	O
8	int
,	O
6	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yystos	array
[	O
]	O
=	O
{	O
0	int
,	O
12	int
,	O
13	int
,	O
0	int
,	O
5	int
,	O
14	int
,	O
15	int
,	O
8	int
,	O
14	int
,	O
9	int
,	O
16	int
,	O
5	int
,	O
17	int
,	O
18	int
,	O
20	int
,	O
22	int
,	O
3	int
,	O
4	int
,	O
5	int
,	O
25	int
,	O
6	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
8	int
,	O
8	int
,	O
8	int
,	O
5	int
,	O
21	int
,	O
19	int
,	O
6	int
,	O
7	int
,	O
24	int
,	O
17	int
,	O
17	int
,	O
9	int
,	O
26	int
,	O
6	int
,	O
6	int
,	O
10	int
,	O
6	int
,	O
5	int
,	O
27	int
,	O
8	int
,	O
23	int
,	O
6	int
,	O
5	int
,	O
28	int
,	O
29	int
,	O
6	int
,	O
5	int
,	O
6	int
,	O
8	int
,	O
8	int
,	O
6	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr1	array
[	O
]	O
=	O
{	O
0	int
,	O
11	int
,	O
13	int
,	O
12	int
,	O
14	int
,	O
14	int
,	O
16	int
,	O
15	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
17	int
,	O
19	int
,	O
18	int
,	O
21	int
,	O
20	int
,	O
23	int
,	O
22	int
,	O
24	int
,	O
24	int
,	O
25	int
,	O
26	int
,	O
27	int
,	O
27	int
,	O
28	int
,	O
28	int
,	O
29	int
,	O
29	int
}	O
;	O
static	O
const	O
yytype_uint8	char
yyr2	array
[	O
]	O
=	O
{	O
0	int
,	O
2	int
,	O
0	int
,	O
2	int
,	O
2	int
,	O
0	int
,	O
0	int
,	O
6	int
,	O
2	int
,	O
2	int
,	O
2	int
,	O
0	int
,	O
0	int
,	O
6	int
,	O
0	int
,	O
6	int
,	O
0	int
,	O
10	int
,	O
1	int
,	O
0	int
,	O
3	int
,	O
2	int
,	O
3	int
,	O
0	int
,	O
0	int
,	O
3	int
,	O
0	int
,	O
5	int
}	O
;	O
static	O
void	O
yydestruct	function
(	O
const	O
char	O
*	O
yymsg	pointer
,	O
int	O
yytype	int
,	O
YYSTYPE	union
*	O
yyvaluep	pointer
)	O
{	O
YYUSE	O
(	O
yyvaluep	pointer
)	O
;	O
if	O
(	O
!	O
yymsg	pointer
)	O
yymsg	pointer
=	O
"Deleting"	pointer
;	O
YY_SYMBOL_PRINT	O
(	O
yymsg	pointer
,	O
yytype	int
,	O
yyvaluep	pointer
,	O
yylocationp	O
)	O
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
YYUSE	O
(	O
yytype	int
)	O
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
}	O
int	O
yychar	int
;	O
YYSTYPE	union
yylval	union
;	O
int	O
yynerrs	int
;	O
int	O
yyparse	function
(	O
void	O
)	O
{	O
int	O
yystate	int
;	O
int	O
yyerrstatus	int
;	O
yytype_int16	short
yyssa	array
[	O
YYINITDEPTH	int
]	O
;	O
yytype_int16	short
*	O
yyss	pointer
;	O
yytype_int16	short
*	O
yyssp	pointer
;	O
YYSTYPE	union
yyvsa	array
[	O
YYINITDEPTH	int
]	O
;	O
YYSTYPE	union
*	O
yyvs	pointer
;	O
YYSTYPE	union
*	O
yyvsp	pointer
;	O
YYSIZE_T	O
yystacksize	long
;	O
int	O
yyn	int
;	O
int	O
yyresult	int
;	O
int	O
yytoken	int
=	O
0	int
;	O
YYSTYPE	union
yyval	union
;	O
int	O
yylen	int
=	O
0	int
;	O
yyssp	pointer
=	O
yyss	pointer
=	O
yyssa	array
;	O
yyvsp	pointer
=	O
yyvs	pointer
=	O
yyvsa	array
;	O
yystacksize	long
=	O
YYINITDEPTH	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Starting parse\n"	pointer
)	O
)	O
;	O
yystate	int
=	O
0	int
;	O
yyerrstatus	int
=	O
0	int
;	O
yynerrs	int
=	O
0	int
;	O
yychar	int
=	O
YYEMPTY	O
;	O
goto	O
yysetstate	O
;	O
yynewstate	O
:	O
yyssp	pointer
++	O
;	O
yysetstate	O
:	O
*	O
yyssp	pointer
=	O
yystate	int
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
{	O
YYSIZE_T	O
yysize	long
=	O
yyssp	pointer
-	O
yyss	pointer
+	O
1	int
;	O
if	O
(	O
YYMAXDEPTH	int
<=	O
yystacksize	long
)	O
goto	O
yyexhaustedlab	O
;	O
yystacksize	long
*=	O
2	int
;	O
if	O
(	O
YYMAXDEPTH	int
<	O
yystacksize	long
)	O
yystacksize	long
=	O
YYMAXDEPTH	int
;	O
{	O
yytype_int16	short
*	O
yyss1	pointer
=	O
yyss	pointer
;	O
union	O
yyalloc	union
*	O
yyptr	pointer
=	O
(	O
union	O
yyalloc	union
*	O
)	O
YYSTACK_ALLOC	O
(	O
YYSTACK_BYTES	O
(	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
!	O
yyptr	pointer
)	O
goto	O
yyexhaustedlab	O
;	O
YYSTACK_RELOCATE	O
(	O
yyss_alloc	short
,	O
yyss	pointer
)	O
;	O
YYSTACK_RELOCATE	O
(	O
yyvs_alloc	union
,	O
yyvs	pointer
)	O
;	O
if	O
(	O
yyss1	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss1	pointer
)	O
;	O
}	O
yyssp	pointer
=	O
yyss	pointer
+	O
yysize	long
-	O
1	int
;	O
yyvsp	pointer
=	O
yyvs	pointer
+	O
yysize	long
-	O
1	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Stack size increased to %lu\n"	pointer
,	O
(	O
unsigned	O
long	O
int	O
)	O
yystacksize	long
)	O
)	O
;	O
if	O
(	O
yyss	pointer
+	O
yystacksize	long
-	O
1	int
<=	O
yyssp	pointer
)	O
YYABORT	O
;	O
}	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Entering state %d\n"	pointer
,	O
yystate	int
)	O
)	O
;	O
if	O
(	O
yystate	int
==	O
YYFINAL	int
)	O
YYACCEPT	O
;	O
goto	O
yybackup	O
;	O
yybackup	O
:	O
yyn	int
=	O
yypact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
goto	O
yydefault	O
;	O
if	O
(	O
yychar	int
==	O
YYEMPTY	O
)	O
{	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Reading a token: "	pointer
)	O
)	O
;	O
yychar	int
=	O
yylex	function
(	O
)	O
;	O
}	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
yychar	int
=	O
yytoken	int
=	O
YYEOF	int
;	O
YYDPRINTF	O
(	O
(	O
stderr	pointer
,	O
"Now at end of input.\n"	pointer
)	O
)	O
;	O
}	O
else	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Next token is"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	O
)	O
;	O
}	O
yyn	int
+=	O
yytoken	int
;	O
if	O
(	O
yyn	int
<	O
0	int
||	O
YYLAST	int
<	O
yyn	int
||	O
yycheck	array
[	O
yyn	int
]	O
!=	O
yytoken	int
)	O
goto	O
yydefault	O
;	O
yyn	int
=	O
yytable	array
[	O
yyn	int
]	O
;	O
if	O
(	O
yyn	int
<=	O
0	int
)	O
{	O
if	O
(	O
yytable_value_is_error	int
(	O
yyn	int
)	O
)	O
goto	O
yyerrlab	O
;	O
yyn	int
=	O
-	O
yyn	int
;	O
goto	O
yyreduce	O
;	O
}	O
if	O
(	O
yyerrstatus	int
)	O
yyerrstatus	int
--	O
;	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
,	O
&	O
yylloc	O
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
yystate	int
=	O
yyn	int
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
goto	O
yynewstate	O
;	O
yydefault	O
:	O
yyn	int
=	O
yydefact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
yyn	int
==	O
0	int
)	O
goto	O
yyerrlab	O
;	O
goto	O
yyreduce	O
;	O
yyreduce	O
:	O
yylen	int
=	O
yyr2	array
[	O
yyn	int
]	O
;	O
yyval	union
=	O
yyvsp	pointer
[	O
1	int
-	O
yylen	int
]	O
;	O
YY_REDUCE_PRINT	O
(	O
yyn	int
)	O
;	O
switch	O
(	O
yyn	int
)	O
{	O
case	O
2	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'i'	O
:	O
printf	function
(	O
"#ifdef SYSROFF_SWAP_IN\n"	pointer
)	O
;	O
break	O
;	O
case	O
'p'	O
:	O
printf	function
(	O
"#ifdef SYSROFF_p\n"	pointer
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
break	O
;	O
case	O
'g'	O
:	O
printf	function
(	O
"#ifdef SYSROFF_SWAP_OUT\n"	pointer
)	O
;	O
break	O
;	O
case	O
'c'	O
:	O
printf	function
(	O
"#ifdef SYSROFF_PRINT\n"	pointer
)	O
;	O
printf	function
(	O
"#include <stdio.h>\n"	pointer
)	O
;	O
printf	function
(	O
"#include <stdlib.h>\n"	pointer
)	O
;	O
printf	function
(	O
"#include <ansidecl.h>\n"	pointer
)	O
;	O
break	O
;	O
}	O
}	O
break	O
;	O
case	O
3	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'i'	O
:	O
case	O
'p'	O
:	O
case	O
'g'	O
:	O
case	O
'c'	O
:	O
printf	function
(	O
"#endif\n"	pointer
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
break	O
;	O
}	O
}	O
break	O
;	O
case	O
6	int
:	O
{	O
it	pointer
=	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
;	O
code	int
=	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
i	int
)	O
;	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'd'	O
:	O
printf	function
(	O
"\n\n\n#define IT_%s_CODE 0x%x\n"	pointer
,	O
it	pointer
,	O
code	int
)	O
;	O
printf	function
(	O
"struct IT_%s;\n"	pointer
,	O
it	pointer
)	O
;	O
printf	function
(	O
"extern void sysroff_swap_%s_in (struct IT_%s *);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"extern void sysroff_swap_%s_out (FILE *, struct IT_%s *);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"extern void sysroff_print_%s_out (struct IT_%s *);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"struct IT_%s { \n"	pointer
,	O
it	pointer
)	O
;	O
break	O
;	O
case	O
'i'	O
:	O
printf	function
(	O
"void sysroff_swap_%s_in (struct IT_%s * ptr)\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"{\n"	pointer
)	O
;	O
printf	function
(	O
"\tunsigned char raw[255];\n"	pointer
)	O
;	O
printf	function
(	O
"\tint idx = 0;\n"	pointer
)	O
;	O
printf	function
(	O
"\tint size;\n"	pointer
)	O
;	O
printf	function
(	O
"\tmemset(raw,0,255);\n"	pointer
)	O
;	O
printf	function
(	O
"\tmemset(ptr,0,sizeof(*ptr));\n"	pointer
)	O
;	O
printf	function
(	O
"\tsize = fillup(raw);\n"	pointer
)	O
;	O
break	O
;	O
case	O
'g'	O
:	O
printf	function
(	O
"void sysroff_swap_%s_out (FILE * ffile, struct IT_%s * ptr)\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"{\n"	pointer
)	O
;	O
printf	function
(	O
"\tunsigned char raw[255];\n"	pointer
)	O
;	O
printf	function
(	O
"\tint idx = 16;\n"	pointer
)	O
;	O
printf	function
(	O
"\tmemset (raw, 0, 255);\n"	pointer
)	O
;	O
printf	function
(	O
"\tcode = IT_%s_CODE;\n"	pointer
,	O
it	pointer
)	O
;	O
break	O
;	O
case	O
'o'	O
:	O
printf	function
(	O
"void sysroff_swap_%s_out (bfd * abfd, struct IT_%s * ptr)\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"{\n"	pointer
)	O
;	O
printf	function
(	O
"\tint idx = 0;\n"	pointer
)	O
;	O
break	O
;	O
case	O
'c'	O
:	O
printf	function
(	O
"void sysroff_print_%s_out (struct IT_%s *ptr)\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
it	pointer
)	O
;	O
printf	function
(	O
"{\n"	pointer
)	O
;	O
printf	function
(	O
"itheader(\"%s\", IT_%s_CODE);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
)	O
;	O
break	O
;	O
case	O
't'	O
:	O
break	O
;	O
}	O
}	O
break	O
;	O
case	O
7	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'd'	O
:	O
printf	function
(	O
"};\n"	pointer
)	O
;	O
break	O
;	O
case	O
'g'	O
:	O
printf	function
(	O
"\tchecksum(ffile,raw, idx, IT_%s_CODE);\n"	pointer
,	O
it	pointer
)	O
;	O
case	O
'i'	O
:	O
case	O
'o'	O
:	O
case	O
'c'	O
:	O
printf	function
(	O
"}\n"	pointer
)	O
;	O
}	O
free	function
(	O
it	pointer
)	O
;	O
}	O
break	O
;	O
case	O
12	int
:	O
{	O
rdepth	int
++	O
;	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'c'	O
:	O
if	O
(	O
rdepth	int
==	O
1	int
)	O
printf	function
(	O
"\tprintf(\"repeat %%d\\n\", %s);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
if	O
(	O
rdepth	int
==	O
2	int
)	O
printf	function
(	O
"\tprintf(\"repeat %%d\\n\", %s[n]);\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
case	O
'i'	O
:	O
case	O
'g'	O
:	O
case	O
'o'	O
:	O
if	O
(	O
rdepth	int
==	O
1	int
)	O
{	O
printf	function
(	O
"\t{ int n; for (n = 0; n < %s; n++) {\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
}	O
if	O
(	O
rdepth	int
==	O
2	int
)	O
{	O
printf	function
(	O
"\t{ int m; for (m = 0; m < %s[n]; m++) {\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
}	O
break	O
;	O
}	O
oldrepeat	pointer
=	O
repeat	pointer
;	O
repeat	pointer
=	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
;	O
}	O
break	O
;	O
case	O
13	int
:	O
{	O
free	function
(	O
repeat	pointer
)	O
;	O
repeat	pointer
=	O
oldrepeat	pointer
;	O
oldrepeat	pointer
=	O
0	int
;	O
rdepth	int
--	O
;	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'i'	O
:	O
case	O
'g'	O
:	O
case	O
'o'	O
:	O
case	O
'c'	O
:	O
printf	function
(	O
"\t}}\n"	pointer
)	O
;	O
}	O
}	O
break	O
;	O
case	O
14	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'i'	O
:	O
case	O
'g'	O
:	O
case	O
'o'	O
:	O
case	O
'c'	O
:	O
printf	function
(	O
"\tif (%s) {\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
break	O
;	O
}	O
free	function
(	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
)	O
;	O
}	O
break	O
;	O
case	O
15	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'i'	O
:	O
case	O
'g'	O
:	O
case	O
'o'	O
:	O
case	O
'c'	O
:	O
printf	function
(	O
"\t}\n"	pointer
)	O
;	O
}	O
}	O
break	O
;	O
case	O
16	int
:	O
{	O
name	pointer
=	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
;	O
}	O
break	O
;	O
case	O
17	int
:	O
{	O
char	O
*	O
desc	pointer
=	O
(	O
yyvsp	pointer
[	O
-	O
8	int
]	O
.	O
s	pointer
)	O
;	O
char	O
*	O
type	pointer
=	O
(	O
yyvsp	pointer
[	O
-	O
6	int
]	O
.	O
s	pointer
)	O
;	O
int	O
size	int
=	O
(	O
yyvsp	pointer
[	O
-	O
5	int
]	O
.	O
i	int
)	O
;	O
char	O
*	O
id	pointer
=	O
(	O
yyvsp	pointer
[	O
-	O
3	int
]	O
.	O
s	pointer
)	O
;	O
char	O
*	O
p	pointer
=	O
names	array
[	O
rdepth	int
]	O
;	O
char	O
*	O
ptr	pointer
=	O
pnames	array
[	O
rdepth	int
]	O
;	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'g'	O
:	O
if	O
(	O
size	int
%	O
8	int
)	O
{	O
printf	function
(	O
"\twriteBITS(ptr->%s%s,raw,&idx,%d);\n"	pointer
,	O
id	pointer
,	O
names	array
[	O
rdepth	int
]	O
,	O
size	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"\twrite%s(ptr->%s%s,raw,&idx,%d,ffile);\n"	pointer
,	O
type	pointer
,	O
id	pointer
,	O
names	array
[	O
rdepth	int
]	O
,	O
size	int
/	O
8	int
)	O
;	O
}	O
break	O
;	O
case	O
'i'	O
:	O
{	O
if	O
(	O
rdepth	int
>=	O
1	int
)	O
{	O
printf	function
(	O
"if (!ptr->%s) ptr->%s = (%s*)xcalloc(%s, sizeof(ptr->%s[0]));\n"	pointer
,	O
id	pointer
,	O
id	pointer
,	O
type	pointer
,	O
repeat	pointer
,	O
id	pointer
)	O
;	O
}	O
if	O
(	O
rdepth	int
==	O
2	int
)	O
{	O
printf	function
(	O
"if (!ptr->%s[n]) ptr->%s[n] = (%s**)xcalloc(%s[n], sizeof(ptr->%s[n][0]));\n"	pointer
,	O
id	pointer
,	O
id	pointer
,	O
type	pointer
,	O
repeat	pointer
,	O
id	pointer
)	O
;	O
}	O
}	O
if	O
(	O
size	int
%	O
8	int
)	O
{	O
printf	function
(	O
"\tptr->%s%s = getBITS(raw,&idx, %d,size);\n"	pointer
,	O
id	pointer
,	O
names	array
[	O
rdepth	int
]	O
,	O
size	int
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"\tptr->%s%s = get%s(raw,&idx, %d,size);\n"	pointer
,	O
id	pointer
,	O
names	array
[	O
rdepth	int
]	O
,	O
type	pointer
,	O
size	int
/	O
8	int
)	O
;	O
}	O
break	O
;	O
case	O
'o'	O
:	O
printf	function
(	O
"\tput%s(raw,%d,%d,&idx,ptr->%s%s);\n"	pointer
,	O
type	pointer
,	O
size	int
/	O
8	int
,	O
size	int
%	O
8	int
,	O
id	pointer
,	O
names	array
[	O
rdepth	int
]	O
)	O
;	O
break	O
;	O
case	O
'd'	O
:	O
if	O
(	O
repeat	pointer
)	O
printf	function
(	O
"\t/* repeat %s */\n"	pointer
,	O
repeat	pointer
)	O
;	O
if	O
(	O
type	pointer
[	O
0	int
]	O
==	O
'I'	O
)	O
{	O
printf	function
(	O
"\tint %s%s; \t/* %s */\n"	pointer
,	O
ptr	pointer
,	O
id	pointer
,	O
desc	pointer
)	O
;	O
}	O
else	O
if	O
(	O
type	pointer
[	O
0	int
]	O
==	O
'C'	O
)	O
{	O
printf	function
(	O
"\tchar %s*%s;\t /* %s */\n"	pointer
,	O
ptr	pointer
,	O
id	pointer
,	O
desc	pointer
)	O
;	O
}	O
else	O
{	O
printf	function
(	O
"\tbarray %s%s;\t /* %s */\n"	pointer
,	O
ptr	pointer
,	O
id	pointer
,	O
desc	pointer
)	O
;	O
}	O
break	O
;	O
case	O
'c'	O
:	O
printf	function
(	O
"tabout();\n"	pointer
)	O
;	O
printf	function
(	O
"\tprintf(\"/*%-30s*/ ptr->%s = \");\n"	pointer
,	O
desc	pointer
,	O
id	pointer
)	O
;	O
if	O
(	O
type	pointer
[	O
0	int
]	O
==	O
'I'	O
)	O
printf	function
(	O
"\tprintf(\"%%d\\n\",ptr->%s%s);\n"	pointer
,	O
id	pointer
,	O
p	pointer
)	O
;	O
else	O
if	O
(	O
type	pointer
[	O
0	int
]	O
==	O
'C'	O
)	O
printf	function
(	O
"\tprintf(\"%%s\\n\",ptr->%s%s);\n"	pointer
,	O
id	pointer
,	O
p	pointer
)	O
;	O
else	O
if	O
(	O
type	pointer
[	O
0	int
]	O
==	O
'B'	O
)	O
{	O
printf	function
(	O
"\tpbarray(&ptr->%s%s);\n"	pointer
,	O
id	pointer
,	O
p	pointer
)	O
;	O
}	O
else	O
abort	function
(	O
)	O
;	O
break	O
;	O
}	O
free	function
(	O
desc	pointer
)	O
;	O
free	function
(	O
id	pointer
)	O
;	O
}	O
break	O
;	O
case	O
18	int
:	O
{	O
(	O
yyval	union
.	O
s	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
s	pointer
)	O
;	O
}	O
break	O
;	O
case	O
19	int
:	O
{	O
(	O
yyval	union
.	O
s	pointer
)	O
=	O
"INT"	pointer
;	O
}	O
break	O
;	O
case	O
20	int
:	O
{	O
(	O
yyval	union
.	O
s	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
;	O
}	O
break	O
;	O
case	O
21	int
:	O
{	O
(	O
yyval	union
.	O
i	int
)	O
=	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
i	int
)	O
*	O
(	O
yyvsp	pointer
[	O
0	int
]	O
.	O
i	int
)	O
;	O
}	O
break	O
;	O
case	O
22	int
:	O
{	O
(	O
yyval	union
.	O
s	pointer
)	O
=	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
;	O
}	O
break	O
;	O
case	O
23	int
:	O
{	O
(	O
yyval	union
.	O
s	pointer
)	O
=	O
strdup	function
(	O
"dummy"	pointer
)	O
;	O
}	O
break	O
;	O
case	O
27	int
:	O
{	O
switch	O
(	O
writecode	char
)	O
{	O
case	O
'd'	O
:	O
printf	function
(	O
"#define %s %s\n"	pointer
,	O
(	O
yyvsp	pointer
[	O
-	O
2	int
]	O
.	O
s	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
)	O
;	O
break	O
;	O
case	O
'c'	O
:	O
printf	function
(	O
"if (ptr->%s%s == %s) { tabout(); printf(\"%s\\n\");}\n"	pointer
,	O
name	pointer
,	O
names	array
[	O
rdepth	int
]	O
,	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
,	O
(	O
yyvsp	pointer
[	O
-	O
2	int
]	O
.	O
s	pointer
)	O
)	O
;	O
}	O
free	function
(	O
(	O
yyvsp	pointer
[	O
-	O
2	int
]	O
.	O
s	pointer
)	O
)	O
;	O
free	function
(	O
(	O
yyvsp	pointer
[	O
-	O
1	int
]	O
.	O
s	pointer
)	O
)	O
;	O
}	O
break	O
;	O
default	O
:	O
break	O
;	O
}	O
YY_SYMBOL_PRINT	O
(	O
"-> $$ ="	pointer
,	O
yyr1	array
[	O
yyn	int
]	O
,	O
&	O
yyval	union
,	O
&	O
yyloc	O
)	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
*	O
++	O
yyvsp	pointer
=	O
yyval	union
;	O
yyn	int
=	O
yyr1	array
[	O
yyn	int
]	O
;	O
yystate	int
=	O
yypgoto	array
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
+	O
*	O
yyssp	pointer
;	O
if	O
(	O
0	int
<=	O
yystate	int
&&	O
yystate	int
<=	O
YYLAST	int
&&	O
yycheck	array
[	O
yystate	int
]	O
==	O
*	O
yyssp	pointer
)	O
yystate	int
=	O
yytable	array
[	O
yystate	int
]	O
;	O
else	O
yystate	int
=	O
yydefgoto	array
[	O
yyn	int
-	O
YYNTOKENS	int
]	O
;	O
goto	O
yynewstate	O
;	O
yyerrlab	O
:	O
yytoken	int
=	O
yychar	int
==	O
YYEMPTY	O
?	O
YYEMPTY	O
:	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
if	O
(	O
!	O
yyerrstatus	int
)	O
{	O
++	O
yynerrs	int
;	O
yyerror	function
(	O
YY_	O
(	O
"syntax error"	pointer
)	O
)	O
;	O
}	O
if	O
(	O
yyerrstatus	int
==	O
3	int
)	O
{	O
if	O
(	O
yychar	int
<=	O
YYEOF	int
)	O
{	O
if	O
(	O
yychar	int
==	O
YYEOF	int
)	O
YYABORT	O
;	O
}	O
else	O
{	O
yydestruct	function
(	O
"Error: discarding"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
)	O
;	O
yychar	int
=	O
YYEMPTY	O
;	O
}	O
}	O
goto	O
yyerrlab1	O
;	O
yyerrorlab	O
:	O
if	O
(	O
0	int
)	O
goto	O
yyerrorlab	O
;	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
yylen	int
=	O
0	int
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
yystate	int
=	O
*	O
yyssp	pointer
;	O
goto	O
yyerrlab1	O
;	O
yyerrlab1	O
:	O
yyerrstatus	int
=	O
3	int
;	O
for	O
(	O
;	O
;	O
)	O
{	O
yyn	int
=	O
yypact	array
[	O
yystate	int
]	O
;	O
if	O
(	O
!	O
yypact_value_is_default	O
(	O
yyn	int
)	O
)	O
{	O
yyn	int
+=	O
YYTERROR	int
;	O
if	O
(	O
0	int
<=	O
yyn	int
&&	O
yyn	int
<=	O
YYLAST	int
&&	O
yycheck	array
[	O
yyn	int
]	O
==	O
YYTERROR	int
)	O
{	O
yyn	int
=	O
yytable	array
[	O
yyn	int
]	O
;	O
if	O
(	O
0	int
<	O
yyn	int
)	O
break	O
;	O
}	O
}	O
if	O
(	O
yyssp	pointer
==	O
yyss	pointer
)	O
YYABORT	O
;	O
yydestruct	function
(	O
"Error: popping"	pointer
,	O
yystos	array
[	O
yystate	int
]	O
,	O
yyvsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
yystate	int
=	O
*	O
yyssp	pointer
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
}	O
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	O
*	O
++	O
yyvsp	pointer
=	O
yylval	union
;	O
YY_IGNORE_MAYBE_UNINITIALIZED_END	O
YY_SYMBOL_PRINT	O
(	O
"Shifting"	pointer
,	O
yystos	array
[	O
yyn	int
]	O
,	O
yyvsp	pointer
,	O
yylsp	O
)	O
;	O
yystate	int
=	O
yyn	int
;	O
goto	O
yynewstate	O
;	O
yyacceptlab	O
:	O
yyresult	int
=	O
0	int
;	O
goto	O
yyreturn	O
;	O
yyabortlab	O
:	O
yyresult	int
=	O
1	int
;	O
goto	O
yyreturn	O
;	O
yyexhaustedlab	O
:	O
yyerror	function
(	O
YY_	O
(	O
"memory exhausted"	pointer
)	O
)	O
;	O
yyresult	int
=	O
2	int
;	O
yyreturn	O
:	O
if	O
(	O
yychar	int
!=	O
YYEMPTY	O
)	O
{	O
yytoken	int
=	O
YYTRANSLATE	O
(	O
yychar	int
)	O
;	O
yydestruct	function
(	O
"Cleanup: discarding lookahead"	pointer
,	O
yytoken	int
,	O
&	O
yylval	union
)	O
;	O
}	O
YYPOPSTACK	O
(	O
yylen	int
)	O
;	O
YY_STACK_PRINT	O
(	O
yyss	pointer
,	O
yyssp	pointer
)	O
;	O
while	O
(	O
yyssp	pointer
!=	O
yyss	pointer
)	O
{	O
yydestruct	function
(	O
"Cleanup: popping"	pointer
,	O
yystos	array
[	O
*	O
yyssp	pointer
]	O
,	O
yyvsp	pointer
)	O
;	O
YYPOPSTACK	O
(	O
1	int
)	O
;	O
}	O
if	O
(	O
yyss	pointer
!=	O
yyssa	array
)	O
YYSTACK_FREE	O
(	O
yyss	pointer
)	O
;	O
return	O
yyresult	int
;	O
}	O
int	O
yydebug	int
;	O
int	O
main	function
(	O
int	O
ac	int
,	O
char	O
*	O
*	O
av	pointer
)	O
{	O
yydebug	int
=	O
0	int
;	O
if	O
(	O
ac	int
>	O
1	int
)	O
writecode	char
=	O
av	pointer
[	O
1	int
]	O
[	O
1	int
]	O
;	O
if	O
(	O
writecode	char
==	O
'd'	O
)	O
{	O
printf	function
(	O
"typedef struct { unsigned char *data; int len; } barray; \n"	pointer
)	O
;	O
printf	function
(	O
"typedef  int INT;\n"	pointer
)	O
;	O
printf	function
(	O
"typedef  char * CHARS;\n"	pointer
)	O
;	O
}	O
yyparse	function
(	O
)	O
;	O
return	O
0	int
;	O
}	O
static	O
int	O
yyerror	function
(	O
char	O
*	O
s	pointer
)	O
{	O
fprintf	function
(	O
stderr	pointer
,	O
"%s\n"	pointer
,	O
s	pointer
)	O
;	O
return	O
0	int
;	O
}	O
