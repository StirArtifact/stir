gsl_odeiv2_step	struct
*	O
gsl_odeiv2_step_alloc	function
(	O
const	O
gsl_odeiv2_step_type	struct
*	O
T	pointer
,	O
size_t	long
dim	long
)	O
{	O
gsl_odeiv2_step	struct
*	O
s	pointer
=	O
(	O
gsl_odeiv2_step	struct
*	O
)	O
malloc	function
(	O
sizeof	O
(	O
gsl_odeiv2_step	struct
)	O
)	O
;	O
if	O
(	O
s	pointer
==	O
0	int
)	O
{	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for ode struct"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
s	pointer
->	O
type	pointer
=	O
T	pointer
;	O
s	pointer
->	O
dimension	long
=	O
dim	long
;	O
s	pointer
->	O
state	pointer
=	O
s	pointer
->	O
type	pointer
->	O
alloc	pointer
(	O
dim	long
)	O
;	O
if	O
(	O
s	pointer
->	O
state	pointer
==	O
0	int
)	O
{	O
free	function
(	O
s	pointer
)	O
;	O
GSL_ERROR_NULL	O
(	O
"failed to allocate space for ode state"	pointer
,	O
GSL_ENOMEM	int
)	O
;	O
}	O
;	O
return	O
s	pointer
;	O
}	O
const	O
char	O
*	O
gsl_odeiv2_step_name	function
(	O
const	O
gsl_odeiv2_step	struct
*	O
s	pointer
)	O
{	O
return	O
s	pointer
->	O
type	pointer
->	O
name	pointer
;	O
}	O
unsigned	O
int	O
gsl_odeiv2_step_order	function
(	O
const	O
gsl_odeiv2_step	struct
*	O
s	pointer
)	O
{	O
return	O
s	pointer
->	O
type	pointer
->	O
order	pointer
(	O
s	pointer
->	O
state	pointer
)	O
;	O
}	O
int	O
gsl_odeiv2_step_apply	function
(	O
gsl_odeiv2_step	struct
*	O
s	pointer
,	O
double	O
t	double
,	O
double	O
h	double
,	O
double	O
y	array
[	O
]	O
,	O
double	O
yerr	array
[	O
]	O
,	O
const	O
double	O
dydt_in	array
[	O
]	O
,	O
double	O
dydt_out	array
[	O
]	O
,	O
const	O
gsl_odeiv2_system	struct
*	O
dydt	array
)	O
{	O
return	O
s	pointer
->	O
type	pointer
->	O
apply	pointer
(	O
s	pointer
->	O
state	pointer
,	O
s	pointer
->	O
dimension	long
,	O
t	double
,	O
h	double
,	O
y	array
,	O
yerr	array
,	O
dydt_in	array
,	O
dydt_out	array
,	O
dydt	array
)	O
;	O
}	O
int	O
gsl_odeiv2_step_reset	function
(	O
gsl_odeiv2_step	struct
*	O
s	pointer
)	O
{	O
return	O
s	pointer
->	O
type	pointer
->	O
reset	pointer
(	O
s	pointer
->	O
state	pointer
,	O
s	pointer
->	O
dimension	long
)	O
;	O
}	O
void	O
gsl_odeiv2_step_free	function
(	O
gsl_odeiv2_step	struct
*	O
s	pointer
)	O
{	O
RETURN_IF_NULL	O
(	O
s	pointer
)	O
;	O
s	pointer
->	O
type	pointer
->	O
free	function
(	O
s	pointer
->	O
state	pointer
)	O
;	O
free	function
(	O
s	pointer
)	O
;	O
}	O
int	O
gsl_odeiv2_step_set_driver	function
(	O
gsl_odeiv2_step	struct
*	O
s	pointer
,	O
const	O
gsl_odeiv2_driver	struct
*	O
d	pointer
)	O
{	O
if	O
(	O
d	pointer
!=	O
NULL	O
)	O
{	O
s	pointer
->	O
type	pointer
->	O
set_driver	pointer
(	O
s	pointer
->	O
state	pointer
,	O
d	pointer
)	O
;	O
}	O
else	O
{	O
GSL_ERROR_NULL	O
(	O
"driver pointer is null"	pointer
,	O
GSL_EFAULT	int
)	O
;	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
