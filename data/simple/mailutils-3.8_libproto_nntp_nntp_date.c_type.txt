static	O
int	O
mu_nntp_parse_date	function
(	O
mu_nntp_t	pointer
nntp	pointer
,	O
int	O
code	int
,	O
unsigned	O
int	O
*	O
year	pointer
,	O
unsigned	O
int	O
*	O
month	pointer
,	O
unsigned	O
int	O
*	O
day	pointer
,	O
unsigned	O
int	O
*	O
hour	pointer
,	O
unsigned	O
int	O
*	O
min	pointer
,	O
unsigned	O
int	O
*	O
sec	pointer
)	O
;	O
int	O
mu_nntp_date	function
(	O
mu_nntp_t	pointer
nntp	pointer
,	O
unsigned	O
int	O
*	O
year	pointer
,	O
unsigned	O
int	O
*	O
month	pointer
,	O
unsigned	O
int	O
*	O
day	pointer
,	O
unsigned	O
int	O
*	O
hour	pointer
,	O
unsigned	O
int	O
*	O
min	pointer
,	O
unsigned	O
int	O
*	O
sec	pointer
)	O
{	O
int	O
status	pointer
;	O
if	O
(	O
nntp	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
switch	O
(	O
nntp	pointer
->	O
state	enum
)	O
{	O
case	O
MU_NNTP_NO_STATE	int
:	O
status	pointer
=	O
mu_nntp_writeline	function
(	O
nntp	pointer
,	O
"DATE\r\n"	pointer
)	O
;	O
MU_NNTP_CHECK_ERROR	O
(	O
nntp	pointer
,	O
status	pointer
)	O
;	O
mu_nntp_debug_cmd	function
(	O
nntp	pointer
)	O
;	O
nntp	pointer
->	O
state	enum
=	O
MU_NNTP_DATE	int
;	O
case	O
MU_NNTP_DATE	int
:	O
status	pointer
=	O
mu_nntp_send	function
(	O
nntp	pointer
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	pointer
,	O
status	pointer
)	O
;	O
nntp	pointer
->	O
acknowledge	int
=	O
0	int
;	O
nntp	pointer
->	O
state	enum
=	O
MU_NNTP_DATE_ACK	int
;	O
case	O
MU_NNTP_DATE_ACK	int
:	O
status	pointer
=	O
mu_nntp_response	function
(	O
nntp	pointer
,	O
NULL	O
,	O
0	int
,	O
NULL	O
)	O
;	O
MU_NNTP_CHECK_EAGAIN	O
(	O
nntp	pointer
,	O
status	pointer
)	O
;	O
mu_nntp_debug_ack	function
(	O
nntp	pointer
)	O
;	O
MU_NNTP_CHECK_CODE	O
(	O
nntp	pointer
,	O
MU_NNTP_RESP_CODE_SERVER_DATE	int
)	O
;	O
nntp	pointer
->	O
state	enum
=	O
MU_NNTP_NO_STATE	int
;	O
status	pointer
=	O
mu_nntp_parse_date	function
(	O
nntp	pointer
,	O
MU_NNTP_RESP_CODE_SERVER_DATE	int
,	O
year	pointer
,	O
month	pointer
,	O
day	pointer
,	O
hour	pointer
,	O
min	pointer
,	O
sec	pointer
)	O
;	O
MU_NNTP_CHECK_ERROR	O
(	O
nntp	pointer
,	O
status	pointer
)	O
;	O
break	O
;	O
case	O
MU_NNTP_ERROR	int
:	O
status	pointer
=	O
ECANCELED	int
;	O
break	O
;	O
default	O
:	O
status	pointer
=	O
EINPROGRESS	int
;	O
}	O
return	O
status	pointer
;	O
}	O
static	O
int	O
mu_nntp_parse_date	function
(	O
mu_nntp_t	pointer
nntp	pointer
,	O
int	O
code	int
,	O
unsigned	O
int	O
*	O
year	pointer
,	O
unsigned	O
int	O
*	O
month	pointer
,	O
unsigned	O
int	O
*	O
day	pointer
,	O
unsigned	O
int	O
*	O
hour	pointer
,	O
unsigned	O
int	O
*	O
min	pointer
,	O
unsigned	O
int	O
*	O
sec	pointer
)	O
{	O
unsigned	O
int	O
dummy	int
=	O
0	int
;	O
char	O
format	pointer
[	O
32	int
]	O
;	O
if	O
(	O
year	pointer
==	O
NULL	O
)	O
year	pointer
=	O
&	O
dummy	int
;	O
if	O
(	O
month	pointer
==	O
NULL	O
)	O
month	pointer
=	O
&	O
dummy	int
;	O
if	O
(	O
day	pointer
==	O
NULL	O
)	O
day	pointer
=	O
&	O
dummy	int
;	O
if	O
(	O
hour	pointer
==	O
NULL	O
)	O
hour	pointer
=	O
&	O
dummy	int
;	O
if	O
(	O
min	pointer
==	O
NULL	O
)	O
min	pointer
=	O
&	O
dummy	int
;	O
if	O
(	O
sec	pointer
==	O
NULL	O
)	O
sec	pointer
=	O
&	O
dummy	int
;	O
sprintf	O
(	O
format	pointer
,	O
"%d %%4d%%2d%%2d%%2d%%2d%%2d"	pointer
,	O
code	int
)	O
;	O
sscanf	O
(	O
nntp	pointer
->	O
ack	struct
.	O
buf	pointer
,	O
format	pointer
,	O
year	pointer
,	O
month	pointer
,	O
day	pointer
,	O
hour	pointer
,	O
min	pointer
,	O
sec	pointer
)	O
;	O
return	O
0	int
;	O
}	O
