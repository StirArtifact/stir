int	O
gdbm_close	function
(	O
GDBM_FILE	pointer
dbf	pointer
)	O
{	O
int	O
index	function
;	O
int	O
syserrno	int
;	O
gdbm_set_errno	function
(	O
dbf	pointer
,	O
GDBM_NO_ERROR	int
,	O
FALSE	int
)	O
;	O
if	O
(	O
dbf	pointer
->	O
desc	int
!=	O
-	O
1	int
)	O
{	O
if	O
(	O
dbf	pointer
->	O
read_write	int
!=	O
GDBM_READER	int
)	O
gdbm_file_sync	function
(	O
dbf	pointer
)	O
;	O
_gdbm_mapped_unmap	function
(	O
dbf	pointer
)	O
;	O
if	O
(	O
dbf	pointer
->	O
file_locking	int
)	O
_gdbm_unlock_file	function
(	O
dbf	pointer
)	O
;	O
if	O
(	O
close	function
(	O
dbf	pointer
->	O
desc	int
)	O
)	O
GDBM_SET_ERRNO	O
(	O
dbf	pointer
,	O
GDBM_FILE_CLOSE_ERROR	int
,	O
FALSE	int
)	O
;	O
}	O
syserrno	int
=	O
gdbm_last_syserr	function
(	O
dbf	pointer
)	O
;	O
gdbm_clear_error	function
(	O
dbf	pointer
)	O
;	O
free	function
(	O
dbf	pointer
->	O
name	pointer
)	O
;	O
free	function
(	O
dbf	pointer
->	O
dir	long
)	O
;	O
if	O
(	O
dbf	pointer
->	O
bucket_cache	pointer
!=	O
NULL	O
)	O
{	O
for	O
(	O
index	function
=	O
0	int
;	O
index	function
<	O
dbf	pointer
->	O
cache_size	long
;	O
index	function
++	O
)	O
{	O
free	function
(	O
dbf	pointer
->	O
bucket_cache	pointer
[	O
index	function
]	O
.	O
ca_bucket	pointer
)	O
;	O
free	function
(	O
dbf	pointer
->	O
bucket_cache	pointer
[	O
index	function
]	O
.	O
ca_data	struct
.	O
dptr	pointer
)	O
;	O
}	O
free	function
(	O
dbf	pointer
->	O
bucket_cache	pointer
)	O
;	O
}	O
free	function
(	O
dbf	pointer
->	O
header	pointer
)	O
;	O
free	function
(	O
dbf	pointer
)	O
;	O
if	O
(	O
gdbm_errno	O
)	O
{	O
errno	O
=	O
syserrno	int
;	O
return	O
-	O
1	int
;	O
}	O
return	O
0	int
;	O
}	O
