int	O
_mu_imap_response	function
(	O
mu_imap_t	pointer
imap	pointer
,	O
mu_imap_response_action_t	pointer
fun	pointer
,	O
void	O
*	O
data	pointer
)	O
{	O
int	O
status	int
=	O
0	int
;	O
if	O
(	O
imap	pointer
==	O
NULL	O
)	O
return	O
EINVAL	int
;	O
if	O
(	O
MU_IMAP_FISSET	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	int
)	O
)	O
return	O
0	int
;	O
_mu_imap_clrerrstr	function
(	O
imap	pointer
)	O
;	O
while	O
(	O
1	int
)	O
{	O
status	int
=	O
mu_imapio_getline	function
(	O
imap	pointer
->	O
io	pointer
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
char	O
*	O
*	O
wv	pointer
;	O
size_t	long
wc	long
;	O
mu_imapio_get_words	function
(	O
imap	pointer
->	O
io	pointer
,	O
&	O
wc	long
,	O
&	O
wv	pointer
)	O
;	O
if	O
(	O
wc	long
==	O
0	int
)	O
{	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
break	O
;	O
}	O
if	O
(	O
strcmp	function
(	O
wv	pointer
[	O
0	int
]	O
,	O
"*"	pointer
)	O
==	O
0	int
)	O
{	O
mu_list_t	pointer
list	pointer
;	O
status	int
=	O
_mu_imap_untagged_response_to_list	function
(	O
imap	pointer
,	O
&	O
list	pointer
)	O
;	O
if	O
(	O
status	int
)	O
break	O
;	O
_mu_imap_process_untagged_response	function
(	O
imap	pointer
,	O
list	pointer
,	O
fun	pointer
,	O
data	pointer
)	O
;	O
mu_list_destroy	function
(	O
&	O
list	pointer
)	O
;	O
continue	O
;	O
}	O
else	O
if	O
(	O
strlen	function
(	O
wv	pointer
[	O
0	int
]	O
)	O
==	O
imap	pointer
->	O
tag_len	long
&&	O
memcmp	function
(	O
wv	pointer
[	O
0	int
]	O
,	O
imap	pointer
->	O
tag_str	pointer
,	O
imap	pointer
->	O
tag_len	long
)	O
==	O
0	int
)	O
{	O
if	O
(	O
wc	long
<	O
2	int
)	O
{	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
}	O
else	O
{	O
mu_list_t	pointer
list	pointer
;	O
status	int
=	O
_mu_imap_untagged_response_to_list	function
(	O
imap	pointer
,	O
&	O
list	pointer
)	O
;	O
if	O
(	O
status	int
==	O
0	int
)	O
{	O
if	O
(	O
_mu_imap_process_tagged_response	function
(	O
imap	pointer
,	O
list	pointer
)	O
)	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
mu_list_destroy	function
(	O
&	O
list	pointer
)	O
;	O
}	O
}	O
MU_IMAP_FSET	O
(	O
imap	pointer
,	O
MU_IMAP_RESP	int
)	O
;	O
}	O
else	O
{	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
status	int
=	O
MU_ERR_BADREPLY	O
;	O
}	O
}	O
else	O
imap	pointer
->	O
client_state	enum
=	O
MU_IMAP_CLIENT_ERROR	int
;	O
break	O
;	O
}	O
return	O
status	int
;	O
}	O
