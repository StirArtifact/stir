static	O
const	O
char	O
*	O
file_name	pointer
;	O
void	O
close_stdout_set_file_name	function
(	O
const	O
char	O
*	O
file	pointer
)	O
{	O
file_name	pointer
=	O
file	pointer
;	O
}	O
void	O
close_stdout	function
(	O
void	O
)	O
{	O
bool	bool
prev_fail	bool
=	O
ferror	function
(	O
stdout	pointer
)	O
;	O
bool	bool
none_pending	bool
=	O
(	O
0	int
==	O
__fpending	function
(	O
stdout	pointer
)	O
)	O
;	O
bool	bool
fclose_fail	bool
=	O
fclose	function
(	O
stdout	pointer
)	O
;	O
if	O
(	O
prev_fail	bool
||	O
fclose_fail	bool
)	O
{	O
int	O
e	int
=	O
fclose_fail	bool
?	O
errno	O
:	O
0	int
;	O
char	O
const	O
*	O
write_error	pointer
;	O
if	O
(	O
e	int
==	O
EBADF	int
&&	O
!	O
prev_fail	bool
&&	O
none_pending	bool
)	O
return	O
;	O
write_error	pointer
=	O
_	O
(	O
"write error"	pointer
)	O
;	O
if	O
(	O
file_name	pointer
)	O
error	function
(	O
exit_failure	int
,	O
e	int
,	O
"%s: %s"	pointer
,	O
quotearg_colon	function
(	O
file_name	pointer
)	O
,	O
write_error	pointer
)	O
;	O
else	O
error	function
(	O
exit_failure	int
,	O
e	int
,	O
"%s"	pointer
,	O
write_error	pointer
)	O
;	O
}	O
}	O
