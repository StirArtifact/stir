static	O
double	O
synchrotron1_data	array
[	O
13	int
]	O
=	O
{	O
30.364682982501076273	int
,	O
17.079395277408394574	int
,	O
4.560132133545072889	int
,	O
0.549281246730419979	int
,	O
0.372976075069301172e-01	int
,	O
0.161362430201041242e-02	int
,	O
0.481916772120371e-04	int
,	O
0.10512425288938e-05	int
,	O
0.174638504670e-07	int
,	O
0.22815486544e-09	int
,	O
0.240443082e-11	int
,	O
0.2086588e-13	int
,	O
0.15167e-15	int
}	O
;	O
static	O
cheb_series	struct
synchrotron1_cs	struct
=	O
{	O
synchrotron1_data	array
,	O
12	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
9	int
}	O
;	O
static	O
double	O
synchrotron2_data	array
[	O
12	int
]	O
=	O
{	O
0.4490721623532660844	int
,	O
0.898353677994187218e-01	int
,	O
0.81044573772151290e-02	int
,	O
0.4261716991089162e-03	int
,	O
0.147609631270746e-04	int
,	O
0.3628633615300e-06	int
,	O
0.66634807498e-08	int
,	O
0.949077166e-10	int
,	O
0.1079125e-11	int
,	O
0.10022e-13	int
,	O
0.77e-16	int
,	O
0.5e-18	int
}	O
;	O
static	O
cheb_series	struct
synchrotron2_cs	struct
=	O
{	O
synchrotron2_data	array
,	O
11	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
7	int
}	O
;	O
static	O
double	O
synchrotron1a_data	array
[	O
23	int
]	O
=	O
{	O
2.1329305161355000985	int
,	O
0.741352864954200240e-01	int
,	O
0.86968099909964198e-02	int
,	O
0.11703826248775692e-02	int
,	O
0.1645105798619192e-03	int
,	O
0.240201021420640e-04	int
,	O
0.35827756389389e-05	int
,	O
0.5447747626984e-06	int
,	O
0.838802856196e-07	int
,	O
0.13069882684e-07	int
,	O
0.2053099071e-08	int
,	O
0.325187537e-09	int
,	O
0.517914041e-10	int
,	O
0.83002988e-11	int
,	O
0.13352728e-11	int
,	O
0.2159150e-12	int
,	O
0.349967e-13	int
,	O
0.56994e-14	int
,	O
0.9291e-15	int
,	O
0.152e-15	int
,	O
0.249e-16	int
,	O
0.41e-17	int
,	O
0.7e-18	int
}	O
;	O
static	O
cheb_series	struct
synchrotron1a_cs	struct
=	O
{	O
synchrotron1a_data	array
,	O
22	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
11	int
}	O
;	O
static	O
double	O
synchrotron21_data	array
[	O
13	int
]	O
=	O
{	O
38.617839923843085480	int
,	O
23.037715594963734597	int
,	O
5.3802499868335705968	int
,	O
0.6156793806995710776	int
,	O
0.406688004668895584e-01	int
,	O
0.17296274552648414e-02	int
,	O
0.51061258836577e-04	int
,	O
0.110459595022e-05	int
,	O
0.18235530206e-07	int
,	O
0.2370769803e-09	int
,	O
0.24887296e-11	int
,	O
0.21529e-13	int
,	O
0.156e-15	int
}	O
;	O
static	O
cheb_series	struct
synchrotron21_cs	struct
=	O
{	O
synchrotron21_data	array
,	O
12	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
9	int
}	O
;	O
static	O
double	O
synchrotron22_data	array
[	O
13	int
]	O
=	O
{	O
7.9063148270660804288	int
,	O
3.1353463612853425684	int
,	O
0.4854879477453714538	int
,	O
0.394816675827237234e-01	int
,	O
0.19661622334808802e-02	int
,	O
0.659078932293042e-04	int
,	O
0.15857561349856e-05	int
,	O
0.286865301123e-07	int
,	O
0.4041202360e-09	int
,	O
0.45568444e-11	int
,	O
0.420459e-13	int
,	O
0.3232e-15	int
,	O
0.21e-17	int
}	O
;	O
static	O
cheb_series	struct
synchrotron22_cs	struct
=	O
{	O
synchrotron22_data	array
,	O
12	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
8	int
}	O
;	O
static	O
double	O
synchrotron2a_data	array
[	O
17	int
]	O
=	O
{	O
2.020337094170713600	int
,	O
0.10956237121807404e-01	int
,	O
0.8542384730114676e-03	int
,	O
0.723430242132822e-04	int
,	O
0.63124427962699e-05	int
,	O
0.5648193141174e-06	int
,	O
0.512832480138e-07	int
,	O
0.47196532914e-08	int
,	O
0.4380744214e-09	int
,	O
0.410268149e-10	int
,	O
0.38623072e-11	int
,	O
0.3661323e-12	int
,	O
0.348023e-13	int
,	O
0.33301e-14	int
,	O
0.319e-15	int
,	O
0.307e-16	int
,	O
0.3e-17	int
}	O
;	O
static	O
cheb_series	struct
synchrotron2a_cs	struct
=	O
{	O
synchrotron2a_data	array
,	O
16	int
,	O
-	O
1.0	int
,	O
1.0	int
,	O
8	int
}	O
;	O
int	O
gsl_sf_synchrotron_1_e	function
(	O
const	O
double	O
x	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
x	double
<	O
0.0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
x	double
<	O
2.0	int
*	O
M_SQRT2	int
*	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
double	O
z	double
=	O
pow	function
(	O
x	double
,	O
1.0	int
/	O
3.0	int
)	O
;	O
double	O
cf	double
=	O
1	int
-	O
8.43812762813205e-01	int
*	O
z	double
*	O
z	double
;	O
result	pointer
->	O
val	double
=	O
2.14952824153447863671	int
*	O
z	double
*	O
cf	double
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
result	pointer
->	O
val	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
x	double
<=	O
4.0	int
)	O
{	O
const	O
double	O
c0	double
=	O
M_PI	int
/	O
M_SQRT3	int
;	O
const	O
double	O
px	double
=	O
pow	function
(	O
x	double
,	O
1.0	int
/	O
3.0	int
)	O
;	O
const	O
double	O
px11	double
=	O
gsl_sf_pow_int	function
(	O
px	double
,	O
11	int
)	O
;	O
const	O
double	O
t	double
=	O
x	double
*	O
x	double
/	O
8.0	int
-	O
1.0	int
;	O
gsl_sf_result	struct
result_c1	struct
;	O
gsl_sf_result	struct
result_c2	struct
;	O
cheb_eval_e	function
(	O
&	O
synchrotron1_cs	struct
,	O
t	double
,	O
&	O
result_c1	struct
)	O
;	O
cheb_eval_e	function
(	O
&	O
synchrotron2_cs	struct
,	O
t	double
,	O
&	O
result_c2	struct
)	O
;	O
result	pointer
->	O
val	double
=	O
px	double
*	O
result_c1	struct
.	O
val	double
-	O
px11	double
*	O
result_c2	struct
.	O
val	double
-	O
c0	double
*	O
x	double
;	O
result	pointer
->	O
err	double
=	O
px	double
*	O
result_c1	struct
.	O
err	double
+	O
px11	double
*	O
result_c2	struct
.	O
err	double
+	O
c0	double
*	O
x	double
*	O
GSL_DBL_EPSILON	int
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
x	double
<	O
-	O
8.0	int
*	O
GSL_LOG_DBL_MIN	O
/	O
7.0	int
)	O
{	O
const	O
double	O
c0	double
=	O
0.2257913526447274323630976	int
;	O
const	O
double	O
t	double
=	O
(	O
12.0	int
-	O
x	double
)	O
/	O
(	O
x	double
+	O
4.0	int
)	O
;	O
gsl_sf_result	struct
result_c1	struct
;	O
cheb_eval_e	function
(	O
&	O
synchrotron1a_cs	struct
,	O
t	double
,	O
&	O
result_c1	struct
)	O
;	O
result	pointer
->	O
val	double
=	O
sqrt	function
(	O
x	double
)	O
*	O
result_c1	struct
.	O
val	double
*	O
exp	function
(	O
c0	double
-	O
x	double
)	O
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
result	pointer
->	O
val	double
*	O
(	O
fabs	function
(	O
c0	double
-	O
x	double
)	O
+	O
1.0	int
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
UNDERFLOW_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
}	O
int	O
gsl_sf_synchrotron_2_e	function
(	O
const	O
double	O
x	double
,	O
gsl_sf_result	struct
*	O
result	pointer
)	O
{	O
if	O
(	O
x	double
<	O
0.0	int
)	O
{	O
DOMAIN_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
else	O
if	O
(	O
x	double
<	O
2.0	int
*	O
M_SQRT2	int
*	O
GSL_SQRT_DBL_EPSILON	int
)	O
{	O
double	O
z	double
=	O
pow	function
(	O
x	double
,	O
1.0	int
/	O
3.0	int
)	O
;	O
double	O
cf	double
=	O
1	int
-	O
1.17767156510235e+00	int
*	O
z	double
*	O
x	double
;	O
result	pointer
->	O
val	double
=	O
1.07476412076723931836	int
*	O
z	double
*	O
cf	double
;	O
result	pointer
->	O
err	double
=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
result	pointer
->	O
val	double
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
x	double
<=	O
4.0	int
)	O
{	O
const	O
double	O
px	double
=	O
pow	function
(	O
x	double
,	O
1.0	int
/	O
3.0	int
)	O
;	O
const	O
double	O
px5	double
=	O
gsl_sf_pow_int	function
(	O
px	double
,	O
5	int
)	O
;	O
const	O
double	O
t	double
=	O
x	double
*	O
x	double
/	O
8.0	int
-	O
1.0	int
;	O
gsl_sf_result	struct
cheb1	struct
;	O
gsl_sf_result	struct
cheb2	struct
;	O
cheb_eval_e	function
(	O
&	O
synchrotron21_cs	struct
,	O
t	double
,	O
&	O
cheb1	struct
)	O
;	O
cheb_eval_e	function
(	O
&	O
synchrotron22_cs	struct
,	O
t	double
,	O
&	O
cheb2	struct
)	O
;	O
result	pointer
->	O
val	double
=	O
px	double
*	O
cheb1	struct
.	O
val	double
-	O
px5	double
*	O
cheb2	struct
.	O
val	double
;	O
result	pointer
->	O
err	double
=	O
px	double
*	O
cheb1	struct
.	O
err	double
+	O
px5	double
*	O
cheb2	struct
.	O
err	double
;	O
result	pointer
->	O
err	double
+=	O
2.0	int
*	O
GSL_DBL_EPSILON	int
*	O
fabs	function
(	O
result	pointer
->	O
val	double
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
if	O
(	O
x	double
<	O
-	O
8.0	int
*	O
GSL_LOG_DBL_MIN	O
/	O
7.0	int
)	O
{	O
const	O
double	O
c0	double
=	O
0.22579135264472743236	int
;	O
const	O
double	O
t	double
=	O
(	O
10.0	int
-	O
x	double
)	O
/	O
(	O
x	double
+	O
2.0	int
)	O
;	O
gsl_sf_result	struct
cheb1	struct
;	O
cheb_eval_e	function
(	O
&	O
synchrotron2a_cs	struct
,	O
t	double
,	O
&	O
cheb1	struct
)	O
;	O
result	pointer
->	O
val	double
=	O
sqrt	function
(	O
x	double
)	O
*	O
exp	function
(	O
c0	double
-	O
x	double
)	O
*	O
cheb1	struct
.	O
val	double
;	O
result	pointer
->	O
err	double
=	O
GSL_DBL_EPSILON	int
*	O
result	pointer
->	O
val	double
*	O
(	O
fabs	function
(	O
c0	double
-	O
x	double
)	O
+	O
1.0	int
)	O
;	O
return	O
GSL_SUCCESS	int
;	O
}	O
else	O
{	O
UNDERFLOW_ERROR	O
(	O
result	pointer
)	O
;	O
}	O
}	O
double	O
gsl_sf_synchrotron_1	function
(	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_synchrotron_1_e	function
(	O
x	double
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
double	O
gsl_sf_synchrotron_2	function
(	O
const	O
double	O
x	double
)	O
{	O
EVAL_RESULT	O
(	O
gsl_sf_synchrotron_2_e	function
(	O
x	double
,	O
&	O
result	pointer
)	O
)	O
;	O
}	O
