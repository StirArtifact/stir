int	O
mu_readlink	function
(	O
const	O
char	O
*	O
name	pointer
,	O
char	O
*	O
*	O
pbuf	pointer
,	O
size_t	long
*	O
psize	pointer
,	O
size_t	long
*	O
plen	pointer
)	O
{	O
size_t	long
status	long
=	O
0	int
;	O
char	O
*	O
buf	pointer
=	O
*	O
pbuf	pointer
;	O
size_t	long
size	long
=	O
*	O
psize	pointer
;	O
ssize_t	long
linklen	long
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
!	O
buf	pointer
)	O
{	O
size	long
=	O
INITIAL_READLINK_SIZE	int
;	O
buf	pointer
=	O
malloc	function
(	O
size	long
)	O
;	O
}	O
else	O
{	O
char	O
*	O
p	pointer
;	O
size_t	long
newsize	long
=	O
size	long
<<	O
1	int
;	O
if	O
(	O
newsize	long
<	O
size	long
)	O
{	O
status	long
=	O
ENAMETOOLONG	int
;	O
break	O
;	O
}	O
size	long
=	O
newsize	long
;	O
p	pointer
=	O
realloc	function
(	O
buf	pointer
,	O
size	long
)	O
;	O
if	O
(	O
!	O
p	pointer
)	O
free	function
(	O
buf	pointer
)	O
;	O
buf	pointer
=	O
p	pointer
;	O
}	O
if	O
(	O
!	O
buf	pointer
)	O
{	O
status	long
=	O
ENOMEM	int
;	O
break	O
;	O
}	O
linklen	long
=	O
readlink	function
(	O
name	pointer
,	O
buf	pointer
,	O
size	long
)	O
;	O
if	O
(	O
linklen	long
<	O
0	int
&&	O
errno	O
!=	O
ERANGE	int
)	O
{	O
status	long
=	O
errno	O
;	O
break	O
;	O
}	O
if	O
(	O
(	O
size_t	long
)	O
linklen	long
<	O
size	long
)	O
{	O
buf	pointer
[	O
linklen	long
++	O
]	O
=	O
'\0'	O
;	O
status	long
=	O
0	int
;	O
break	O
;	O
}	O
}	O
if	O
(	O
status	long
)	O
{	O
if	O
(	O
buf	pointer
)	O
{	O
free	function
(	O
buf	pointer
)	O
;	O
buf	pointer
=	O
NULL	O
;	O
}	O
size	long
=	O
0	int
;	O
}	O
*	O
pbuf	pointer
=	O
buf	pointer
;	O
*	O
psize	pointer
=	O
size	long
;	O
if	O
(	O
plen	pointer
)	O
*	O
plen	pointer
=	O
linklen	long
;	O
return	O
status	long
;	O
}	O
int	O
mu_unroll_symlink	function
(	O
const	O
char	O
*	O
name	pointer
,	O
char	O
*	O
*	O
pout	pointer
)	O
{	O
size_t	long
symloops	long
=	O
0	int
;	O
struct	O
slbuf	struct
{	O
char	O
*	O
base	pointer
;	O
size_t	long
size	long
;	O
}	O
buf	pointer
[	O
2	int
]	O
;	O
int	O
idx	int
=	O
0	int
;	O
int	O
status	long
;	O
buf	pointer
[	O
0	int
]	O
.	O
base	pointer
=	O
buf	pointer
[	O
1	int
]	O
.	O
base	pointer
=	O
NULL	O
;	O
buf	pointer
[	O
0	int
]	O
.	O
size	long
=	O
buf	pointer
[	O
1	int
]	O
.	O
size	long
=	O
0	int
;	O
while	O
(	O
symloops	long
++	O
<	O
_POSIX_SYMLOOP_MAX	int
)	O
{	O
struct	O
stat	struct
st	struct
;	O
size_t	long
len	int
;	O
if	O
(	O
lstat	function
(	O
name	pointer
,	O
&	O
st	struct
)	O
==	O
-	O
1	int
)	O
return	O
errno	O
;	O
if	O
(	O
!	O
S_ISLNK	O
(	O
st	struct
.	O
st_mode	int
)	O
)	O
{	O
if	O
(	O
!	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
)	O
{	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
=	O
strdup	function
(	O
name	pointer
)	O
;	O
if	O
(	O
!	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
)	O
return	O
ENOMEM	int
;	O
}	O
status	long
=	O
0	int
;	O
break	O
;	O
}	O
idx	int
=	O
!	O
idx	int
;	O
status	long
=	O
mu_readlink	function
(	O
name	pointer
,	O
&	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
,	O
&	O
buf	pointer
[	O
idx	int
]	O
.	O
size	long
,	O
&	O
len	int
)	O
;	O
if	O
(	O
status	long
)	O
break	O
;	O
name	pointer
=	O
mu_normalize_path	function
(	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
)	O
;	O
}	O
if	O
(	O
status	long
)	O
{	O
free	function
(	O
buf	pointer
[	O
0	int
]	O
.	O
base	pointer
)	O
;	O
free	function
(	O
buf	pointer
[	O
1	int
]	O
.	O
base	pointer
)	O
;	O
}	O
else	O
{	O
*	O
pout	pointer
=	O
buf	pointer
[	O
idx	int
]	O
.	O
base	pointer
;	O
free	function
(	O
buf	pointer
[	O
!	O
idx	int
]	O
.	O
base	pointer
)	O
;	O
}	O
return	O
status	long
;	O
}	O
