struct	O
ephemstuff	pointer
{	O
char	O
const	O
*	O
standard	pointer
;	O
struct	O
sff	struct
*	O
tpnames	pointer
;	O
}	O
;	O
void	O
init_ephemstuff	function
(	O
void	O
)	O
{	O
BE	O
(	O
sff	struct
)	O
=	O
ZLLOC	O
(	O
SFF_COUNT	O
,	O
struct	O
sff	struct
)	O
;	O
BE	O
(	O
ephemstuff	pointer
)	O
=	O
ZLLOC	O
(	O
1	int
,	O
struct	O
ephemstuff	pointer
)	O
;	O
EPH	O
(	O
tpnames	pointer
)	O
=	O
ZLLOC	O
(	O
TEMPNAMES	int
,	O
struct	O
sff	struct
)	O
;	O
}	O
static	O
void	O
jam_sff	function
(	O
struct	O
sff	struct
*	O
sff	struct
,	O
const	O
char	O
*	O
prefix	pointer
)	O
{	O
char	O
*	O
fn	pointer
;	O
size_t	long
len	char
;	O
int	O
fd	int
;	O
if	O
(	O
!	O
prefix	pointer
)	O
{	O
if	O
(	O
!	O
EPH	O
(	O
standard	pointer
)	O
)	O
{	O
char	O
const	O
*	O
dir	pointer
=	O
NULL	O
;	O
char	O
slash	array
[	O
2	int
]	O
=	O
{	O
SLASH	char
,	O
'\0'	O
}	O
;	O
TRY	O
(	O
TMPDIR	O
)	O
;	O
TRY	O
(	O
TMP	O
)	O
;	O
TRY	O
(	O
TEMP	O
)	O
;	O
if	O
(	O
!	O
dir	pointer
)	O
dir	pointer
=	O
P_tmpdir	pointer
;	O
accf	function
(	O
PLEXUS	O
,	O
"%s%s%s"	pointer
,	O
dir	pointer
,	O
SLASH	char
!=	O
dir	pointer
[	O
strlen	function
(	O
dir	pointer
)	O
-	O
1	int
]	O
?	O
slash	array
:	O
""	pointer
,	O
PROGRAM	O
(	O
name	pointer
)	O
)	O
;	O
EPH	O
(	O
standard	pointer
)	O
=	O
finish_string	function
(	O
PLEXUS	O
,	O
&	O
len	char
)	O
;	O
}	O
prefix	pointer
=	O
EPH	O
(	O
standard	pointer
)	O
;	O
}	O
accf	function
(	O
PLEXUS	O
,	O
"%sXXXXXX"	pointer
,	O
prefix	pointer
)	O
;	O
fn	pointer
=	O
finish_string	function
(	O
PLEXUS	O
,	O
&	O
len	char
)	O
;	O
if	O
(	O
'/'	O
!=	O
SLASH	char
)	O
{	O
char	O
*	O
end	pointer
=	O
fn	pointer
+	O
len	char
-	O
6	int
;	O
char	O
*	O
lastsep	pointer
=	O
strrchr	function
(	O
fn	pointer
,	O
SLASH	char
)	O
;	O
char	O
*	O
ndfc	pointer
=	O
lastsep	pointer
?	O
1	int
+	O
lastsep	pointer
:	O
fn	pointer
;	O
char	O
*	O
dot	pointer
;	O
if	O
(	O
ndfc	pointer
+	O
2	int
<	O
end	pointer
)	O
{	O
memset	function
(	O
ndfc	pointer
+	O
2	int
,	O
'X'	O
,	O
6	int
)	O
;	O
*	O
dot	pointer
=	O
'\0'	O
;	O
}	O
if	O
(	O
(	O
dot	pointer
=	O
strchr	function
(	O
ndfc	pointer
,	O
'.'	O
)	O
)	O
)	O
*	O
dot	pointer
=	O
'0'	O
+	O
getpid	function
(	O
)	O
%	O
10	int
;	O
}	O
if	O
(	O
PROB	O
(	O
fd	int
=	O
fd_safer	function
(	O
mkstemp	function
(	O
fn	pointer
)	O
)	O
)	O
)	O
PFATAL	O
(	O
"could not make temporary file name (template \"%s\")"	pointer
,	O
fn	pointer
)	O
;	O
close	pointer
(	O
fd	int
)	O
;	O
sff	struct
->	O
filename	pointer
=	O
fn	pointer
;	O
sff	struct
->	O
disposition	enum
=	O
real	int
;	O
}	O
char	O
const	O
*	O
maketemp	function
(	O
int	O
n	int
)	O
{	O
if	O
(	O
!	O
EPH	O
(	O
tpnames	pointer
)	O
[	O
n	int
]	O
.	O
filename	pointer
)	O
JAM_SFF	O
(	O
EPH	O
(	O
tpnames	pointer
)	O
[	O
n	int
]	O
,	O
NULL	O
)	O
;	O
return	O
EPH	O
(	O
tpnames	pointer
)	O
[	O
n	int
]	O
.	O
filename	pointer
;	O
}	O
char	O
const	O
*	O
makedirtemp	function
(	O
bool	bool
isworkfile	bool
)	O
{	O
struct	O
sff	struct
*	O
sff	struct
=	O
BE	O
(	O
sff	struct
)	O
;	O
int	O
slot	int
=	O
SFFI_NEWDIR	O
+	O
isworkfile	bool
;	O
JAM_SFF	O
(	O
sff	struct
[	O
slot	int
]	O
,	O
isworkfile	bool
?	O
MANI	O
(	O
filename	pointer
)	O
:	O
REPO	O
(	O
filename	pointer
)	O
)	O
;	O
return	O
sff	struct
[	O
slot	int
]	O
.	O
filename	pointer
;	O
}	O
void	O
keepdirtemp	function
(	O
char	O
const	O
*	O
name	pointer
)	O
{	O
struct	O
sff	struct
*	O
sff	struct
=	O
BE	O
(	O
sff	struct
)	O
;	O
for	O
(	O
int	O
i	int
=	O
0	int
;	O
i	int
<	O
SFF_COUNT	O
;	O
i	int
++	O
)	O
if	O
(	O
name	pointer
==	O
sff	struct
[	O
i	int
]	O
.	O
filename	pointer
)	O
{	O
sff	struct
[	O
i	int
]	O
.	O
disposition	enum
=	O
notmade	int
;	O
return	O
;	O
}	O
PFATAL	O
(	O
"keepdirtemp"	pointer
)	O
;	O
}	O
static	O
void	O
reap	function
(	O
size_t	long
count	long
,	O
struct	O
sff	struct
all	O
[	O
count	long
]	O
,	O
int	O
(	O
*	O
cut	pointer
)	O
(	O
char	O
const	O
*	O
filename	pointer
)	O
)	O
{	O
enum	O
maker	enum
m	pointer
;	O
if	O
(	O
!	O
all	O
)	O
return	O
;	O
for	O
(	O
size_t	long
i	int
=	O
0	int
;	O
i	int
<	O
count	long
;	O
i	int
++	O
)	O
if	O
(	O
notmade	int
!=	O
(	O
m	pointer
=	O
all	O
[	O
i	int
]	O
.	O
disposition	enum
)	O
)	O
{	O
if	O
(	O
effective	int
==	O
m	pointer
)	O
seteid	function
(	O
)	O
;	O
cut	pointer
(	O
all	O
[	O
i	int
]	O
.	O
filename	pointer
)	O
;	O
all	O
[	O
i	int
]	O
.	O
filename	pointer
=	O
NULL	O
;	O
if	O
(	O
effective	int
==	O
m	pointer
)	O
setrid	function
(	O
)	O
;	O
all	O
[	O
i	int
]	O
.	O
disposition	enum
=	O
notmade	int
;	O
}	O
}	O
void	O
tempunlink	function
(	O
void	O
)	O
{	O
reap	function
(	O
TEMPNAMES	int
,	O
EPH	O
(	O
tpnames	pointer
)	O
,	O
unlink	function
)	O
;	O
}	O
void	O
dirtempunlink	function
(	O
void	O
)	O
{	O
reap	function
(	O
SFF_COUNT	O
,	O
BE	O
(	O
sff	struct
)	O
,	O
un_link	function
)	O
;	O
}	O
