void	O
ugetopt_print_help	function
(	O
FILE	struct
*	O
fp	pointer
,	O
char	O
*	O
pgm	pointer
,	O
struct	O
option	struct
lop	array
[	O
]	O
,	O
struct	O
ugetopt_option_desc	struct
desc	pointer
[	O
]	O
)	O
{	O
struct	O
option	struct
*	O
ilop	pointer
=	O
lop	array
;	O
struct	O
ugetopt_option_desc	struct
*	O
idesc	pointer
=	O
desc	pointer
;	O
while	O
(	O
ilop	pointer
&&	O
(	O
ilop	pointer
)	O
->	O
name	pointer
)	O
{	O
if	O
(	O
(	O
(	O
ilop	pointer
)	O
->	O
val	int
>=	O
'A'	O
&&	O
(	O
ilop	pointer
)	O
->	O
val	int
<=	O
'z'	O
)	O
||	O
(	O
(	O
ilop	pointer
)	O
->	O
val	int
==	O
'?'	O
)	O
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"  -%c"	pointer
,	O
(	O
ilop	pointer
)	O
->	O
val	int
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"     "	pointer
)	O
;	O
}	O
if	O
(	O
strlen	function
(	O
(	O
idesc	pointer
)	O
->	O
option	struct
)	O
)	O
{	O
if	O
(	O
(	O
ilop	pointer
)	O
->	O
val	int
>=	O
'A'	O
&&	O
(	O
ilop	pointer
)	O
->	O
val	int
<=	O
'z'	O
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
","	pointer
)	O
;	O
}	O
fprintf	function
(	O
fp	pointer
,	O
" --%s"	pointer
,	O
(	O
ilop	pointer
)	O
->	O
name	pointer
)	O
;	O
}	O
if	O
(	O
strlen	function
(	O
(	O
idesc	pointer
)	O
->	O
option	struct
)	O
&&	O
(	O
ilop	pointer
)	O
->	O
has_arg	int
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"="	pointer
)	O
;	O
}	O
else	O
if	O
(	O
strlen	function
(	O
(	O
idesc	pointer
)	O
->	O
option	struct
)	O
==	O
0	int
&&	O
(	O
ilop	pointer
)	O
->	O
has_arg	int
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
" "	pointer
)	O
;	O
}	O
if	O
(	O
(	O
ilop	pointer
)	O
->	O
has_arg	int
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"%s"	pointer
,	O
(	O
idesc	pointer
)	O
->	O
option_arg	pointer
)	O
;	O
}	O
else	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"  "	pointer
)	O
;	O
}	O
if	O
(	O
desc	pointer
&&	O
idesc	pointer
->	O
option	struct
)	O
{	O
fprintf	function
(	O
fp	pointer
,	O
"  %s"	pointer
,	O
(	O
idesc	pointer
)	O
->	O
desc	pointer
)	O
;	O
}	O
fprintf	function
(	O
fp	pointer
,	O
"\n"	pointer
)	O
;	O
ilop	pointer
++	O
;	O
idesc	pointer
++	O
;	O
}	O
return	O
;	O
}	O
