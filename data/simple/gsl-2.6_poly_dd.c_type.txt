int	O
gsl_poly_dd_init	function
(	O
double	O
dd	array
[	O
]	O
,	O
const	O
double	O
xa	array
[	O
]	O
,	O
const	O
double	O
ya	array
[	O
]	O
,	O
size_t	long
size	long
)	O
{	O
size_t	long
i	int
,	O
j	long
;	O
dd	array
[	O
0	int
]	O
=	O
ya	array
[	O
0	int
]	O
;	O
for	O
(	O
j	long
=	O
size	long
-	O
1	int
;	O
j	long
>=	O
1	int
;	O
j	long
--	O
)	O
{	O
dd	array
[	O
j	long
]	O
=	O
(	O
ya	array
[	O
j	long
]	O
-	O
ya	array
[	O
j	long
-	O
1	int
]	O
)	O
/	O
(	O
xa	array
[	O
j	long
]	O
-	O
xa	array
[	O
j	long
-	O
1	int
]	O
)	O
;	O
}	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
<	O
size	long
;	O
i	int
++	O
)	O
{	O
for	O
(	O
j	long
=	O
size	long
-	O
1	int
;	O
j	long
>=	O
i	int
;	O
j	long
--	O
)	O
{	O
dd	array
[	O
j	long
]	O
=	O
(	O
dd	array
[	O
j	long
]	O
-	O
dd	array
[	O
j	long
-	O
1	int
]	O
)	O
/	O
(	O
xa	array
[	O
j	long
]	O
-	O
xa	array
[	O
j	long
-	O
i	int
]	O
)	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
int	O
gsl_poly_dd_taylor	function
(	O
double	O
c	array
[	O
]	O
,	O
double	O
xp	double
,	O
const	O
double	O
dd	array
[	O
]	O
,	O
const	O
double	O
xa	array
[	O
]	O
,	O
size_t	long
size	long
,	O
double	O
w	array
[	O
]	O
)	O
{	O
size_t	long
i	int
,	O
j	long
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
size	long
;	O
i	int
++	O
)	O
{	O
c	array
[	O
i	int
]	O
=	O
0.0	int
;	O
w	array
[	O
i	int
]	O
=	O
0.0	int
;	O
}	O
w	array
[	O
size	long
-	O
1	int
]	O
=	O
1.0	int
;	O
c	array
[	O
0	int
]	O
=	O
dd	array
[	O
0	int
]	O
;	O
for	O
(	O
i	int
=	O
size	long
-	O
1	int
;	O
i	int
--	O
>	O
0	int
;	O
)	O
{	O
w	array
[	O
i	int
]	O
=	O
-	O
w	array
[	O
i	int
+	O
1	int
]	O
*	O
(	O
xa	array
[	O
size	long
-	O
2	int
-	O
i	int
]	O
-	O
xp	double
)	O
;	O
for	O
(	O
j	long
=	O
i	int
+	O
1	int
;	O
j	long
<	O
size	long
-	O
1	int
;	O
j	long
++	O
)	O
{	O
w	array
[	O
j	long
]	O
=	O
w	array
[	O
j	long
]	O
-	O
w	array
[	O
j	long
+	O
1	int
]	O
*	O
(	O
xa	array
[	O
size	long
-	O
2	int
-	O
i	int
]	O
-	O
xp	double
)	O
;	O
}	O
for	O
(	O
j	long
=	O
i	int
;	O
j	long
<	O
size	long
;	O
j	long
++	O
)	O
{	O
c	array
[	O
j	long
-	O
i	int
]	O
+=	O
w	array
[	O
j	long
]	O
*	O
dd	array
[	O
size	long
-	O
i	int
-	O
1	int
]	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
int	O
gsl_poly_dd_hermite_init	function
(	O
double	O
dd	array
[	O
]	O
,	O
double	O
za	array
[	O
]	O
,	O
const	O
double	O
xa	array
[	O
]	O
,	O
const	O
double	O
ya	array
[	O
]	O
,	O
const	O
double	O
dya	array
[	O
]	O
,	O
const	O
size_t	long
size	long
)	O
{	O
const	O
size_t	long
N	long
=	O
2	int
*	O
size	long
;	O
size_t	long
i	int
,	O
j	long
;	O
dd	array
[	O
0	int
]	O
=	O
ya	array
[	O
0	int
]	O
;	O
for	O
(	O
j	long
=	O
0	int
;	O
j	long
<	O
size	long
;	O
++	O
j	long
)	O
{	O
za	array
[	O
2	int
*	O
j	long
]	O
=	O
xa	array
[	O
j	long
]	O
;	O
za	array
[	O
2	int
*	O
j	long
+	O
1	int
]	O
=	O
xa	array
[	O
j	long
]	O
;	O
if	O
(	O
j	long
!=	O
0	int
)	O
{	O
dd	array
[	O
2	int
*	O
j	long
]	O
=	O
(	O
ya	array
[	O
j	long
]	O
-	O
ya	array
[	O
j	long
-	O
1	int
]	O
)	O
/	O
(	O
xa	array
[	O
j	long
]	O
-	O
xa	array
[	O
j	long
-	O
1	int
]	O
)	O
;	O
dd	array
[	O
2	int
*	O
j	long
-	O
1	int
]	O
=	O
dya	array
[	O
j	long
-	O
1	int
]	O
;	O
}	O
}	O
dd	array
[	O
N	long
-	O
1	int
]	O
=	O
dya	array
[	O
size	long
-	O
1	int
]	O
;	O
for	O
(	O
i	int
=	O
2	int
;	O
i	int
<	O
N	long
;	O
i	int
++	O
)	O
{	O
for	O
(	O
j	long
=	O
N	long
-	O
1	int
;	O
j	long
>=	O
i	int
;	O
j	long
--	O
)	O
{	O
dd	array
[	O
j	long
]	O
=	O
(	O
dd	array
[	O
j	long
]	O
-	O
dd	array
[	O
j	long
-	O
1	int
]	O
)	O
/	O
(	O
za	array
[	O
j	long
]	O
-	O
za	array
[	O
j	long
-	O
i	int
]	O
)	O
;	O
}	O
}	O
return	O
GSL_SUCCESS	int
;	O
}	O
