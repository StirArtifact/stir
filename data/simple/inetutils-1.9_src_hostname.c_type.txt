typedef	O
struct	O
{	O
const	O
char	O
*	O
hostname_file	pointer
;	O
char	O
*	O
hostname_new	pointer
;	O
short	O
int	O
hostname_alias	short
;	O
short	O
int	O
hostname_fqdn	short
;	O
short	O
int	O
hostname_ip_address	short
;	O
short	O
int	O
hostname_dns_domain	short
;	O
short	O
int	O
hostname_short	short
;	O
}	O
hostname_arguments	struct
;	O
static	O
char	O
*	O
(	O
*	O
get_name_action	pointer
)	O
(	O
void	O
)	O
=	O
NULL	O
;	O
static	O
int	O
(	O
*	O
set_name_action	pointer
)	O
(	O
const	O
char	O
*	O
name	pointer
,	O
size_t	long
size	long
)	O
=	O
NULL	O
;	O
const	O
char	O
args_doc	pointer
[	O
]	O
=	O
"[NAME]"	pointer
;	O
const	O
char	O
doc	pointer
[	O
]	O
=	O
"Show or set the system's host name."	pointer
;	O
const	O
char	O
*	O
program_authors	array
[	O
]	O
=	O
{	O
"Debarshi Ray"	pointer
,	O
NULL	O
}	O
;	O
static	O
struct	O
argp_option	struct
argp_options	array
[	O
]	O
=	O
{	O
{	O
"aliases"	pointer
,	O
'a'	O
,	O
NULL	O
,	O
0	int
,	O
"alias names"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"domain"	pointer
,	O
'd'	O
,	O
NULL	O
,	O
0	int
,	O
"DNS domain name"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"file"	pointer
,	O
'F'	O
,	O
"FILE"	pointer
,	O
0	int
,	O
"set host name or NIS domain name from FILE"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"fqdn"	pointer
,	O
'f'	O
,	O
NULL	O
,	O
0	int
,	O
"DNS host name or FQDN"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"long"	pointer
,	O
'f'	O
,	O
NULL	O
,	O
OPTION_ALIAS	int
,	O
"DNS host name or FQDN"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"ip-addresses"	pointer
,	O
'i'	O
,	O
NULL	O
,	O
0	int
,	O
"addresses for the host name"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"short"	pointer
,	O
's'	O
,	O
NULL	O
,	O
0	int
,	O
"short host name"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"yp"	pointer
,	O
'y'	O
,	O
NULL	O
,	O
0	int
,	O
"NIS/YP domain name"	pointer
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
"nis"	pointer
,	O
0	int
,	O
NULL	O
,	O
OPTION_ALIAS	int
,	O
NULL	O
,	O
GRP	int
+	O
1	int
}	O
,	O
{	O
NULL	O
}	O
}	O
;	O
static	O
error_t	int
parse_opt	function
(	O
int	O
key	int
,	O
char	O
*	O
arg	pointer
,	O
struct	O
argp_state	struct
*	O
state	pointer
)	O
{	O
hostname_arguments	struct
*	O
const	O
args	pointer
=	O
(	O
hostname_arguments	struct
*	O
const	O
)	O
state	pointer
->	O
input	pointer
;	O
switch	O
(	O
key	int
)	O
{	O
case	O
'a'	O
:	O
get_name_action	pointer
=	O
xgethostname	function
;	O
args	pointer
->	O
hostname_alias	short
=	O
1	int
;	O
break	O
;	O
case	O
'd'	O
:	O
get_name_action	pointer
=	O
xgethostname	function
;	O
args	pointer
->	O
hostname_fqdn	short
=	O
1	int
;	O
args	pointer
->	O
hostname_dns_domain	short
=	O
1	int
;	O
break	O
;	O
case	O
'F'	O
:	O
set_name_action	pointer
=	O
sethostname	function
;	O
args	pointer
->	O
hostname_file	pointer
=	O
arg	pointer
;	O
break	O
;	O
case	O
'f'	O
:	O
get_name_action	pointer
=	O
xgethostname	function
;	O
args	pointer
->	O
hostname_fqdn	short
=	O
1	int
;	O
break	O
;	O
case	O
'i'	O
:	O
get_name_action	pointer
=	O
xgethostname	function
;	O
args	pointer
->	O
hostname_ip_address	short
=	O
1	int
;	O
break	O
;	O
case	O
's'	O
:	O
get_name_action	pointer
=	O
xgethostname	function
;	O
args	pointer
->	O
hostname_fqdn	short
=	O
1	int
;	O
args	pointer
->	O
hostname_short	short
=	O
1	int
;	O
break	O
;	O
case	O
'y'	O
:	O
get_name_action	pointer
=	O
xgetdomainname	function
;	O
break	O
;	O
case	O
ARGP_KEY_ARG	int
:	O
set_name_action	pointer
=	O
sethostname	function
;	O
args	pointer
->	O
hostname_new	pointer
=	O
strdup	function
(	O
arg	pointer
)	O
;	O
if	O
(	O
args	pointer
->	O
hostname_new	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"strdup"	pointer
)	O
;	O
break	O
;	O
default	O
:	O
return	O
ARGP_ERR_UNKNOWN	O
;	O
}	O
return	O
0	int
;	O
}	O
static	O
struct	O
argp	struct
argp	struct
=	O
{	O
argp_options	array
,	O
parse_opt	function
,	O
args_doc	pointer
,	O
doc	pointer
}	O
;	O
static	O
void	O
get_name	function
(	O
const	O
hostname_arguments	struct
*	O
const	O
args	pointer
)	O
;	O
static	O
void	O
set_name	function
(	O
const	O
hostname_arguments	struct
*	O
const	O
args	pointer
)	O
;	O
static	O
char	O
*	O
get_aliases	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
;	O
static	O
char	O
*	O
get_fqdn	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
;	O
static	O
char	O
*	O
get_ip_addresses	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
;	O
static	O
char	O
*	O
get_dns_domain_name	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
;	O
static	O
char	O
*	O
get_short_hostname	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
;	O
static	O
char	O
*	O
parse_file	function
(	O
const	O
char	O
*	O
const	O
file_name	pointer
)	O
;	O
int	O
main	function
(	O
int	O
argc	int
,	O
char	O
*	O
argv	pointer
[	O
]	O
)	O
{	O
hostname_arguments	struct
args	pointer
;	O
set_program_name	function
(	O
argv	pointer
[	O
0	int
]	O
)	O
;	O
memset	function
(	O
(	O
void	O
*	O
)	O
&	O
args	pointer
,	O
0	int
,	O
sizeof	O
(	O
args	pointer
)	O
)	O
;	O
iu_argp_init	O
(	O
"hostname"	pointer
,	O
program_authors	array
)	O
;	O
argp_parse	function
(	O
&	O
argp	struct
,	O
argc	int
,	O
argv	pointer
,	O
0	int
,	O
NULL	O
,	O
(	O
void	O
*	O
)	O
&	O
args	pointer
)	O
;	O
if	O
(	O
get_name_action	pointer
==	O
NULL	O
&&	O
set_name_action	pointer
==	O
NULL	O
)	O
get_name_action	pointer
=	O
xgethostname	function
;	O
if	O
(	O
get_name_action	pointer
==	O
xgetdomainname	function
||	O
get_name_action	pointer
==	O
xgethostname	function
)	O
get_name	function
(	O
&	O
args	pointer
)	O
;	O
else	O
if	O
(	O
set_name_action	pointer
==	O
sethostname	function
)	O
set_name	function
(	O
&	O
args	pointer
)	O
;	O
return	O
0	int
;	O
}	O
static	O
void	O
get_name	function
(	O
const	O
hostname_arguments	struct
*	O
const	O
args	pointer
)	O
{	O
char	O
*	O
sname	pointer
,	O
*	O
name	pointer
;	O
sname	pointer
=	O
(	O
*	O
get_name_action	pointer
)	O
(	O
)	O
;	O
if	O
(	O
!	O
sname	pointer
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"cannot determine name"	pointer
)	O
;	O
if	O
(	O
args	pointer
->	O
hostname_alias	short
==	O
1	int
)	O
name	pointer
=	O
get_aliases	function
(	O
sname	pointer
)	O
;	O
else	O
if	O
(	O
args	pointer
->	O
hostname_fqdn	short
==	O
1	int
)	O
{	O
name	pointer
=	O
get_fqdn	function
(	O
sname	pointer
)	O
;	O
if	O
(	O
args	pointer
->	O
hostname_dns_domain	short
==	O
1	int
||	O
args	pointer
->	O
hostname_short	short
==	O
1	int
)	O
{	O
free	function
(	O
sname	pointer
)	O
;	O
sname	pointer
=	O
name	pointer
;	O
name	pointer
=	O
NULL	O
;	O
}	O
if	O
(	O
args	pointer
->	O
hostname_dns_domain	short
==	O
1	int
)	O
name	pointer
=	O
get_dns_domain_name	function
(	O
sname	pointer
)	O
;	O
else	O
if	O
(	O
args	pointer
->	O
hostname_short	short
==	O
1	int
)	O
name	pointer
=	O
get_short_hostname	function
(	O
sname	pointer
)	O
;	O
}	O
else	O
if	O
(	O
args	pointer
->	O
hostname_ip_address	short
==	O
1	int
)	O
name	pointer
=	O
get_ip_addresses	function
(	O
sname	pointer
)	O
;	O
else	O
{	O
name	pointer
=	O
strdup	function
(	O
sname	pointer
)	O
;	O
if	O
(	O
name	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"strdup"	pointer
)	O
;	O
}	O
puts	function
(	O
name	pointer
)	O
;	O
free	function
(	O
name	pointer
)	O
;	O
free	function
(	O
sname	pointer
)	O
;	O
return	O
;	O
}	O
static	O
void	O
set_name	function
(	O
const	O
hostname_arguments	struct
*	O
const	O
args	pointer
)	O
{	O
char	O
*	O
hostname_new	pointer
;	O
int	O
status	int
;	O
size_t	long
size	long
;	O
if	O
(	O
args	pointer
->	O
hostname_file	pointer
!=	O
NULL	O
)	O
hostname_new	pointer
=	O
parse_file	function
(	O
args	pointer
->	O
hostname_file	pointer
)	O
;	O
else	O
hostname_new	pointer
=	O
args	pointer
->	O
hostname_new	pointer
;	O
size	long
=	O
strlen	function
(	O
hostname_new	pointer
)	O
;	O
status	int
=	O
(	O
*	O
set_name_action	pointer
)	O
(	O
hostname_new	pointer
,	O
size	long
)	O
;	O
if	O
(	O
status	int
==	O
-	O
1	int
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"sethostname"	pointer
)	O
;	O
free	function
(	O
hostname_new	pointer
)	O
;	O
return	O
;	O
}	O
static	O
char	O
*	O
get_aliases	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
{	O
char	O
*	O
aliases	pointer
;	O
unsigned	O
int	O
count	int
=	O
0	int
;	O
unsigned	O
int	O
i	int
;	O
unsigned	O
int	O
size	long
=	O
256	int
;	O
struct	O
hostent	struct
*	O
ht	pointer
;	O
aliases	pointer
=	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
size	long
)	O
;	O
aliases	pointer
[	O
0	int
]	O
=	O
'\0'	O
;	O
ht	pointer
=	O
gethostbyname	function
(	O
host_name	pointer
)	O
;	O
if	O
(	O
ht	pointer
==	O
NULL	O
)	O
strcpy	function
(	O
aliases	pointer
,	O
"(none)"	pointer
)	O
;	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
ht	pointer
->	O
h_aliases	pointer
[	O
i	int
]	O
!=	O
NULL	O
;	O
i	int
++	O
)	O
{	O
if	O
(	O
ht	pointer
->	O
h_aliases	pointer
[	O
i	int
+	O
1	int
]	O
!=	O
NULL	O
)	O
count	int
++	O
;	O
count	int
+=	O
strlen	function
(	O
ht	pointer
->	O
h_aliases	pointer
[	O
i	int
]	O
)	O
;	O
if	O
(	O
count	int
>=	O
size	long
)	O
{	O
size	long
*=	O
2	int
;	O
aliases	pointer
=	O
xrealloc	function
(	O
aliases	pointer
,	O
size	long
)	O
;	O
}	O
strcat	function
(	O
aliases	pointer
,	O
ht	pointer
->	O
h_aliases	pointer
[	O
i	int
]	O
)	O
;	O
strcat	function
(	O
aliases	pointer
,	O
" "	pointer
)	O
;	O
}	O
}	O
return	O
aliases	pointer
;	O
}	O
static	O
char	O
*	O
get_fqdn	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
{	O
char	O
*	O
fqdn	pointer
;	O
struct	O
hostent	struct
*	O
ht	pointer
;	O
ht	pointer
=	O
gethostbyname	function
(	O
host_name	pointer
)	O
;	O
if	O
(	O
ht	pointer
==	O
NULL	O
)	O
fqdn	pointer
=	O
strdup	function
(	O
"(none)"	pointer
)	O
;	O
else	O
fqdn	pointer
=	O
strdup	function
(	O
ht	pointer
->	O
h_name	pointer
)	O
;	O
if	O
(	O
fqdn	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"strdup"	pointer
)	O
;	O
return	O
fqdn	pointer
;	O
}	O
static	O
char	O
*	O
get_ip_addresses	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
{	O
char	O
address	array
[	O
16	int
]	O
;	O
char	O
*	O
addresses	pointer
;	O
unsigned	O
int	O
count	int
=	O
0	int
;	O
unsigned	O
int	O
i	int
;	O
unsigned	O
int	O
size	long
=	O
256	int
;	O
struct	O
hostent	struct
*	O
ht	pointer
;	O
addresses	pointer
=	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
size	long
)	O
;	O
addresses	pointer
[	O
0	int
]	O
=	O
'\0'	O
;	O
ht	pointer
=	O
gethostbyname	function
(	O
host_name	pointer
)	O
;	O
if	O
(	O
ht	pointer
==	O
NULL	O
)	O
strcpy	function
(	O
addresses	pointer
,	O
"(none)"	pointer
)	O
;	O
else	O
{	O
for	O
(	O
i	int
=	O
0	int
;	O
ht	pointer
->	O
h_addr_list	pointer
[	O
i	int
]	O
!=	O
NULL	O
;	O
i	int
++	O
)	O
{	O
inet_ntop	function
(	O
ht	pointer
->	O
h_addrtype	int
,	O
(	O
void	O
*	O
)	O
ht	pointer
->	O
h_addr_list	pointer
[	O
i	int
]	O
,	O
address	array
,	O
sizeof	O
(	O
address	array
)	O
)	O
;	O
if	O
(	O
ht	pointer
->	O
h_addr_list	pointer
[	O
i	int
+	O
1	int
]	O
!=	O
NULL	O
)	O
count	int
++	O
;	O
count	int
+=	O
strlen	function
(	O
address	array
)	O
;	O
if	O
(	O
count	int
>=	O
size	long
)	O
{	O
size	long
*=	O
2	int
;	O
addresses	pointer
=	O
xrealloc	function
(	O
addresses	pointer
,	O
size	long
)	O
;	O
}	O
strcat	function
(	O
addresses	pointer
,	O
address	array
)	O
;	O
strcat	function
(	O
addresses	pointer
,	O
" "	pointer
)	O
;	O
}	O
}	O
return	O
addresses	pointer
;	O
}	O
static	O
char	O
*	O
get_dns_domain_name	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
{	O
char	O
*	O
domain_name	pointer
;	O
const	O
char	O
*	O
pos	pointer
;	O
pos	pointer
=	O
strchr	function
(	O
host_name	pointer
,	O
'.'	O
)	O
;	O
if	O
(	O
pos	pointer
==	O
NULL	O
)	O
domain_name	pointer
=	O
strdup	function
(	O
"(none)"	pointer
)	O
;	O
else	O
domain_name	pointer
=	O
strdup	function
(	O
pos	pointer
+	O
1	int
)	O
;	O
if	O
(	O
domain_name	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"strdup"	pointer
)	O
;	O
return	O
domain_name	pointer
;	O
}	O
static	O
char	O
*	O
get_short_hostname	function
(	O
const	O
char	O
*	O
const	O
host_name	pointer
)	O
{	O
size_t	long
size	long
;	O
char	O
*	O
short_hostname	pointer
;	O
const	O
char	O
*	O
pos	pointer
;	O
pos	pointer
=	O
strchr	function
(	O
host_name	pointer
,	O
'.'	O
)	O
;	O
if	O
(	O
pos	pointer
==	O
NULL	O
)	O
short_hostname	pointer
=	O
strdup	function
(	O
host_name	pointer
)	O
;	O
else	O
{	O
size	long
=	O
pos	pointer
-	O
host_name	pointer
;	O
short_hostname	pointer
=	O
strndup	function
(	O
host_name	pointer
,	O
size	long
)	O
;	O
}	O
if	O
(	O
short_hostname	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"strdup"	pointer
)	O
;	O
return	O
short_hostname	pointer
;	O
}	O
static	O
char	O
*	O
parse_file	function
(	O
const	O
char	O
*	O
const	O
file_name	pointer
)	O
{	O
char	O
*	O
buffer	pointer
=	O
NULL	O
;	O
char	O
*	O
name	pointer
;	O
FILE	struct
*	O
file	pointer
;	O
size_t	long
nread	long
;	O
size_t	long
size	long
=	O
0	int
;	O
file	pointer
=	O
fopen	function
(	O
file_name	pointer
,	O
"r"	pointer
)	O
;	O
if	O
(	O
file	pointer
==	O
NULL	O
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"fopen"	pointer
)	O
;	O
do	O
{	O
nread	long
=	O
getline	function
(	O
&	O
buffer	pointer
,	O
&	O
size	long
,	O
file	pointer
)	O
;	O
if	O
(	O
nread	long
==	O
-	O
1	int
)	O
error	function
(	O
EXIT_FAILURE	int
,	O
errno	O
,	O
"getline"	pointer
)	O
;	O
if	O
(	O
buffer	pointer
[	O
0	int
]	O
!=	O
'#'	O
)	O
{	O
name	pointer
=	O
xmalloc	function
(	O
sizeof	O
(	O
char	O
)	O
*	O
nread	long
)	O
;	O
sscanf	function
(	O
buffer	pointer
,	O
"%s"	pointer
,	O
name	pointer
)	O
;	O
break	O
;	O
}	O
}	O
while	O
(	O
feof	function
(	O
file	pointer
)	O
==	O
0	int
)	O
;	O
free	function
(	O
buffer	pointer
)	O
;	O
fclose	function
(	O
file	pointer
)	O
;	O
return	O
name	pointer
;	O
}	O
