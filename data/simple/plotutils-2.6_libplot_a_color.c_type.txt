void	O
_pl_a_set_pen_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
double	O
red	int
,	O
green	int
,	O
blue	int
;	O
double	O
cyan	double
,	O
magenta	double
,	O
yellow	double
,	O
black	double
,	O
temp	double
;	O
red	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
red	int
)	O
)	O
/	O
0xFFFF	int
;	O
green	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
green	int
)	O
)	O
/	O
0xFFFF	int
;	O
blue	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
blue	int
)	O
)	O
/	O
0xFFFF	int
;	O
cyan	double
=	O
1.0	int
-	O
red	int
;	O
magenta	double
=	O
1.0	int
-	O
green	int
;	O
yellow	double
=	O
1.0	int
-	O
blue	int
;	O
temp	double
=	O
magenta	double
<	O
yellow	double
?	O
magenta	double
:	O
yellow	double
;	O
black	double
=	O
cyan	double
<	O
temp	double
?	O
cyan	double
:	O
temp	double
;	O
cyan	double
-=	O
black	double
;	O
magenta	double
-=	O
black	double
;	O
yellow	double
-=	O
black	double
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
ai_pen_cyan	double
!=	O
cyan	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_pen_magenta	double
!=	O
magenta	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_pen_yellow	double
!=	O
yellow	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_pen_black	double
!=	O
black	double
)	O
)	O
{	O
sprintf	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
point	pointer
,	O
"%.4f %.4f %.4f %.4f K\n"	pointer
,	O
cyan	double
,	O
magenta	double
,	O
yellow	double
,	O
black	double
)	O
;	O
_update_buffer	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
)	O
;	O
_plotter	pointer
->	O
ai_pen_cyan	double
=	O
cyan	double
;	O
_plotter	pointer
->	O
ai_pen_magenta	double
=	O
magenta	double
;	O
_plotter	pointer
->	O
ai_pen_yellow	double
=	O
yellow	double
;	O
_plotter	pointer
->	O
ai_pen_black	double
=	O
black	double
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_pen_cyan	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_cyan_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_pen_magenta	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_magenta_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_pen_yellow	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_yellow_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_pen_black	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_black_used	enum
=	O
true	int
;	O
}	O
void	O
_pl_a_set_fill_color	function
(	O
R___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
bool	enum
force_pen_color	enum
)	O
{	O
double	O
red	int
,	O
green	int
,	O
blue	int
;	O
double	O
cyan	double
,	O
magenta	double
,	O
yellow	double
,	O
black	double
,	O
temp	double
;	O
if	O
(	O
force_pen_color	enum
==	O
false	int
&&	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fill_type	int
==	O
0	int
)	O
return	O
;	O
if	O
(	O
force_pen_color	enum
)	O
{	O
red	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
red	int
)	O
)	O
/	O
0xFFFF	int
;	O
green	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
green	int
)	O
)	O
/	O
0xFFFF	int
;	O
blue	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
)	O
.	O
blue	int
)	O
)	O
/	O
0xFFFF	int
;	O
}	O
else	O
{	O
red	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
)	O
.	O
red	int
)	O
)	O
/	O
0xFFFF	int
;	O
green	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
)	O
.	O
green	int
)	O
)	O
/	O
0xFFFF	int
;	O
blue	int
=	O
(	O
(	O
double	O
)	O
(	O
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fillcolor	struct
)	O
.	O
blue	int
)	O
)	O
/	O
0xFFFF	int
;	O
}	O
cyan	double
=	O
1.0	int
-	O
red	int
;	O
magenta	double
=	O
1.0	int
-	O
green	int
;	O
yellow	double
=	O
1.0	int
-	O
blue	int
;	O
temp	double
=	O
magenta	double
<	O
yellow	double
?	O
magenta	double
:	O
yellow	double
;	O
black	double
=	O
cyan	double
<	O
temp	double
?	O
cyan	double
:	O
temp	double
;	O
cyan	double
-=	O
black	double
;	O
magenta	double
-=	O
black	double
;	O
yellow	double
-=	O
black	double
;	O
if	O
(	O
(	O
_plotter	pointer
->	O
ai_fill_cyan	double
!=	O
cyan	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_fill_magenta	double
!=	O
magenta	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_fill_yellow	double
!=	O
yellow	double
)	O
||	O
(	O
_plotter	pointer
->	O
ai_fill_black	double
!=	O
black	double
)	O
)	O
{	O
sprintf	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
->	O
point	pointer
,	O
"%.4f %.4f %.4f %.4f k\n"	pointer
,	O
cyan	double
,	O
magenta	double
,	O
yellow	double
,	O
black	double
)	O
;	O
_update_buffer	function
(	O
_plotter	pointer
->	O
data	pointer
->	O
page	pointer
)	O
;	O
_plotter	pointer
->	O
ai_fill_cyan	double
=	O
cyan	double
;	O
_plotter	pointer
->	O
ai_fill_magenta	double
=	O
magenta	double
;	O
_plotter	pointer
->	O
ai_fill_yellow	double
=	O
yellow	double
;	O
_plotter	pointer
->	O
ai_fill_black	double
=	O
black	double
;	O
}	O
if	O
(	O
_plotter	pointer
->	O
ai_fill_cyan	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_cyan_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_fill_magenta	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_magenta_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_fill_yellow	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_yellow_used	enum
=	O
true	int
;	O
if	O
(	O
_plotter	pointer
->	O
ai_fill_black	double
>	O
0.0	int
)	O
_plotter	pointer
->	O
ai_black_used	enum
=	O
true	int
;	O
}	O
