static	O
const	O
char	O
revid	array
[	O
]	O
=	O
"$Id: db_ret.c,v 1.3 2000/06/28 16:47:01 loic Exp $"	pointer
;	O
int	O
CDB___db_ret	function
(	O
dbp	pointer
,	O
h	pointer
,	O
indx	short
,	O
dbt	struct
,	O
memp	pointer
,	O
memsize	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
PAGE	struct
*	O
h	pointer
;	O
u_int32_t	int
indx	short
;	O
DBT	struct
*	O
dbt	struct
;	O
void	O
*	O
*	O
memp	pointer
;	O
u_int32_t	int
*	O
memsize	pointer
;	O
{	O
BKEYDATA	struct
*	O
bk	pointer
;	O
HOFFPAGE	struct
ho	struct
;	O
BOVERFLOW	struct
*	O
bo	pointer
;	O
u_int32_t	int
len	short
;	O
u_int8_t	char
*	O
hk	pointer
;	O
void	O
*	O
data	pointer
;	O
switch	O
(	O
TYPE	O
(	O
h	pointer
)	O
)	O
{	O
case	O
P_HASH	int
:	O
hk	pointer
=	O
P_ENTRY	O
(	O
h	pointer
,	O
indx	short
)	O
;	O
if	O
(	O
HPAGE_PTYPE	O
(	O
hk	pointer
)	O
==	O
H_OFFPAGE	int
)	O
{	O
memcpy	function
(	O
&	O
ho	struct
,	O
hk	pointer
,	O
sizeof	O
(	O
HOFFPAGE	struct
)	O
)	O
;	O
return	O
(	O
CDB___db_goff	function
(	O
dbp	pointer
,	O
dbt	struct
,	O
ho	struct
.	O
tlen	int
,	O
ho	struct
.	O
pgno	int
,	O
memp	pointer
,	O
memsize	pointer
)	O
)	O
;	O
}	O
len	short
=	O
LEN_HKEYDATA	O
(	O
h	pointer
,	O
dbp	pointer
->	O
pgsize	int
,	O
indx	short
)	O
;	O
data	pointer
=	O
HKEYDATA_DATA	O
(	O
hk	pointer
)	O
;	O
break	O
;	O
case	O
P_LBTREE	int
:	O
case	O
P_LDUP	int
:	O
case	O
P_LRECNO	int
:	O
bk	pointer
=	O
GET_BKEYDATA	O
(	O
h	pointer
,	O
indx	short
)	O
;	O
if	O
(	O
B_TYPE	O
(	O
bk	pointer
->	O
type	enum
)	O
==	O
B_OVERFLOW	int
)	O
{	O
bo	pointer
=	O
(	O
BOVERFLOW	struct
*	O
)	O
bk	pointer
;	O
return	O
(	O
CDB___db_goff	function
(	O
dbp	pointer
,	O
dbt	struct
,	O
bo	pointer
->	O
tlen	int
,	O
bo	pointer
->	O
pgno	int
,	O
memp	pointer
,	O
memsize	pointer
)	O
)	O
;	O
}	O
len	short
=	O
bk	pointer
->	O
len	short
;	O
data	pointer
=	O
bk	pointer
->	O
data	pointer
;	O
break	O
;	O
default	O
:	O
return	O
(	O
CDB___db_pgfmt	function
(	O
dbp	pointer
,	O
h	pointer
->	O
pgno	int
)	O
)	O
;	O
}	O
return	O
(	O
CDB___db_retcopy	function
(	O
dbp	pointer
,	O
dbt	struct
,	O
data	pointer
,	O
len	short
,	O
memp	pointer
,	O
memsize	pointer
)	O
)	O
;	O
}	O
int	O
CDB___db_retcopy	function
(	O
dbp	pointer
,	O
dbt	struct
,	O
data	pointer
,	O
len	short
,	O
memp	pointer
,	O
memsize	pointer
)	O
DB	struct
*	O
dbp	pointer
;	O
DBT	struct
*	O
dbt	struct
;	O
void	O
*	O
data	pointer
;	O
u_int32_t	int
len	short
;	O
void	O
*	O
*	O
memp	pointer
;	O
u_int32_t	int
*	O
memsize	pointer
;	O
{	O
DB_ENV	struct
*	O
dbenv	pointer
;	O
int	O
ret	int
;	O
dbenv	pointer
=	O
dbp	pointer
==	O
NULL	O
?	O
NULL	O
:	O
dbp	pointer
->	O
dbenv	pointer
;	O
if	O
(	O
F_ISSET	O
(	O
dbt	struct
,	O
DB_DBT_PARTIAL	int
)	O
)	O
{	O
data	pointer
=	O
(	O
u_int8_t	char
*	O
)	O
data	pointer
+	O
dbt	struct
->	O
doff	int
;	O
if	O
(	O
len	short
>	O
dbt	struct
->	O
doff	int
)	O
{	O
len	short
-=	O
dbt	struct
->	O
doff	int
;	O
if	O
(	O
len	short
>	O
dbt	struct
->	O
dlen	int
)	O
len	short
=	O
dbt	struct
->	O
dlen	int
;	O
}	O
else	O
len	short
=	O
0	int
;	O
}	O
dbt	struct
->	O
size	int
=	O
len	short
;	O
if	O
(	O
F_ISSET	O
(	O
dbt	struct
,	O
DB_DBT_MALLOC	int
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_malloc	function
(	O
dbenv	pointer
,	O
len	short
,	O
dbp	pointer
==	O
NULL	O
?	O
NULL	O
:	O
dbp	pointer
->	O
db_malloc	pointer
,	O
&	O
dbt	struct
->	O
data	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
}	O
else	O
if	O
(	O
F_ISSET	O
(	O
dbt	struct
,	O
DB_DBT_REALLOC	int
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_realloc	function
(	O
dbenv	pointer
,	O
len	short
,	O
dbp	pointer
==	O
NULL	O
?	O
NULL	O
:	O
dbp	pointer
->	O
db_realloc	pointer
,	O
&	O
dbt	struct
->	O
data	pointer
)	O
)	O
!=	O
0	int
)	O
return	O
(	O
ret	int
)	O
;	O
}	O
else	O
if	O
(	O
F_ISSET	O
(	O
dbt	struct
,	O
DB_DBT_USERMEM	int
)	O
)	O
{	O
if	O
(	O
len	short
!=	O
0	int
&&	O
(	O
dbt	struct
->	O
data	pointer
==	O
NULL	O
||	O
dbt	struct
->	O
ulen	int
<	O
len	short
)	O
)	O
return	O
(	O
ENOMEM	int
)	O
;	O
}	O
else	O
if	O
(	O
memp	pointer
==	O
NULL	O
||	O
memsize	pointer
==	O
NULL	O
)	O
{	O
return	O
(	O
EINVAL	int
)	O
;	O
}	O
else	O
{	O
if	O
(	O
len	short
!=	O
0	int
&&	O
(	O
*	O
memsize	pointer
==	O
0	int
||	O
*	O
memsize	pointer
<	O
len	short
)	O
)	O
{	O
if	O
(	O
(	O
ret	int
=	O
CDB___os_realloc	function
(	O
dbenv	pointer
,	O
len	short
,	O
NULL	O
,	O
memp	pointer
)	O
)	O
!=	O
0	int
)	O
{	O
*	O
memsize	pointer
=	O
0	int
;	O
return	O
(	O
ret	int
)	O
;	O
}	O
*	O
memsize	pointer
=	O
len	short
;	O
}	O
dbt	struct
->	O
data	pointer
=	O
*	O
memp	pointer
;	O
}	O
if	O
(	O
len	short
!=	O
0	int
)	O
memcpy	function
(	O
dbt	struct
->	O
data	pointer
,	O
data	pointer
,	O
len	short
)	O
;	O
return	O
(	O
0	int
)	O
;	O
}	O
