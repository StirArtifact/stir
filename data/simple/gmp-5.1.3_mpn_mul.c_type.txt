mp_limb_t	long
mpn_mul	O
(	O
mp_ptr	pointer
prodp	pointer
,	O
mp_srcptr	pointer
up	pointer
,	O
mp_size_t	long
un	long
,	O
mp_srcptr	pointer
vp	pointer
,	O
mp_size_t	long
vn	long
)	O
{	O
ASSERT	O
(	O
un	long
>=	O
vn	long
)	O
;	O
ASSERT	O
(	O
vn	long
>=	O
1	int
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
prodp	pointer
,	O
un	long
+	O
vn	long
,	O
up	pointer
,	O
un	long
)	O
)	O
;	O
ASSERT	O
(	O
!	O
MPN_OVERLAP_P	O
(	O
prodp	pointer
,	O
un	long
+	O
vn	long
,	O
vp	pointer
,	O
vn	long
)	O
)	O
;	O
if	O
(	O
un	long
==	O
vn	long
)	O
{	O
if	O
(	O
up	pointer
==	O
vp	pointer
)	O
mpn_sqr	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
)	O
;	O
else	O
mpn_mul_n	O
(	O
prodp	pointer
,	O
up	pointer
,	O
vp	pointer
,	O
un	long
)	O
;	O
}	O
else	O
if	O
(	O
vn	long
<	O
MUL_TOOM22_THRESHOLD	int
)	O
{	O
if	O
(	O
un	long
<=	O
MUL_BASECASE_MAX_UN	int
||	O
vn	long
<=	O
2	int
)	O
mpn_mul_basecase	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
else	O
{	O
mp_limb_t	long
tp	pointer
[	O
MUL_TOOM22_THRESHOLD_LIMIT	O
]	O
;	O
mp_limb_t	long
cy	long
;	O
ASSERT	O
(	O
MUL_TOOM22_THRESHOLD	int
<=	O
MUL_TOOM22_THRESHOLD_LIMIT	O
)	O
;	O
mpn_mul_basecase	O
(	O
prodp	pointer
,	O
up	pointer
,	O
MUL_BASECASE_MAX_UN	int
,	O
vp	pointer
,	O
vn	long
)	O
;	O
prodp	pointer
+=	O
MUL_BASECASE_MAX_UN	int
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
prodp	pointer
,	O
vn	long
)	O
;	O
up	pointer
+=	O
MUL_BASECASE_MAX_UN	int
;	O
un	long
-=	O
MUL_BASECASE_MAX_UN	int
;	O
while	O
(	O
un	long
>	O
MUL_BASECASE_MAX_UN	int
)	O
{	O
mpn_mul_basecase	O
(	O
prodp	pointer
,	O
up	pointer
,	O
MUL_BASECASE_MAX_UN	int
,	O
vp	pointer
,	O
vn	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
tp	pointer
,	O
vn	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
prodp	pointer
+=	O
MUL_BASECASE_MAX_UN	int
;	O
MPN_COPY	O
(	O
tp	pointer
,	O
prodp	pointer
,	O
vn	long
)	O
;	O
up	pointer
+=	O
MUL_BASECASE_MAX_UN	int
;	O
un	long
-=	O
MUL_BASECASE_MAX_UN	int
;	O
}	O
if	O
(	O
un	long
>	O
vn	long
)	O
{	O
mpn_mul_basecase	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
}	O
else	O
{	O
ASSERT	O
(	O
un	long
>	O
0	int
)	O
;	O
mpn_mul_basecase	O
(	O
prodp	pointer
,	O
vp	pointer
,	O
vn	long
,	O
up	pointer
,	O
un	long
)	O
;	O
}	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
tp	pointer
,	O
vn	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
}	O
}	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM33_THRESHOLD	int
)	O
)	O
{	O
mp_ptr	pointer
scratch	pointer
;	O
TMP_SDECL	O
;	O
TMP_SMARK	O
;	O
scratch	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
ITCH	O
)	O
;	O
if	O
(	O
un	long
>=	O
3	int
*	O
vn	long
)	O
{	O
mp_limb_t	long
cy	long
;	O
mp_ptr	pointer
ws	pointer
;	O
ws	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
4	int
*	O
vn	long
)	O
;	O
mpn_toom42_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
un	long
-=	O
2	int
*	O
vn	long
;	O
up	pointer
+=	O
2	int
*	O
vn	long
;	O
prodp	pointer
+=	O
2	int
*	O
vn	long
;	O
while	O
(	O
un	long
>=	O
3	int
*	O
vn	long
)	O
{	O
mpn_toom42_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
un	long
-=	O
2	int
*	O
vn	long
;	O
up	pointer
+=	O
2	int
*	O
vn	long
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
2	int
*	O
vn	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
prodp	pointer
+=	O
2	int
*	O
vn	long
;	O
}	O
if	O
(	O
4	int
*	O
un	long
<	O
5	int
*	O
vn	long
)	O
mpn_toom22_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
if	O
(	O
4	int
*	O
un	long
<	O
7	int
*	O
vn	long
)	O
mpn_toom32_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom42_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
un	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
}	O
else	O
{	O
if	O
(	O
4	int
*	O
un	long
<	O
5	int
*	O
vn	long
)	O
mpn_toom22_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
if	O
(	O
4	int
*	O
un	long
<	O
7	int
*	O
vn	long
)	O
mpn_toom32_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom42_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
TMP_SFREE	O
;	O
}	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
(	O
un	long
+	O
vn	long
)	O
>>	O
1	int
,	O
MUL_FFT_THRESHOLD	int
)	O
||	O
BELOW_THRESHOLD	O
(	O
3	int
*	O
vn	long
,	O
MUL_FFT_THRESHOLD	int
)	O
)	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM44_THRESHOLD	int
)	O
||	O
!	O
TOOM44_OK	O
(	O
un	long
,	O
vn	long
)	O
)	O
{	O
mp_ptr	pointer
scratch	pointer
;	O
TMP_SDECL	O
;	O
TMP_SMARK	O
;	O
scratch	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
ITCH	O
)	O
;	O
if	O
(	O
2	int
*	O
un	long
>=	O
5	int
*	O
vn	long
)	O
{	O
mp_limb_t	long
cy	long
;	O
mp_ptr	pointer
ws	pointer
;	O
ws	pointer
=	O
TMP_SALLOC_LIMBS	O
(	O
7	int
*	O
vn	long
>>	O
1	int
)	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM42_TO_TOOM63_THRESHOLD	int
)	O
)	O
mpn_toom42_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom63_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
un	long
-=	O
2	int
*	O
vn	long
;	O
up	pointer
+=	O
2	int
*	O
vn	long
;	O
prodp	pointer
+=	O
2	int
*	O
vn	long
;	O
while	O
(	O
2	int
*	O
un	long
>=	O
5	int
*	O
vn	long
)	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM42_TO_TOOM63_THRESHOLD	int
)	O
)	O
mpn_toom42_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom63_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
2	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
un	long
-=	O
2	int
*	O
vn	long
;	O
up	pointer
+=	O
2	int
*	O
vn	long
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
2	int
*	O
vn	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
prodp	pointer
+=	O
2	int
*	O
vn	long
;	O
}	O
if	O
(	O
un	long
<	O
vn	long
)	O
mpn_mul	O
(	O
ws	pointer
,	O
vp	pointer
,	O
vn	long
,	O
up	pointer
,	O
un	long
)	O
;	O
else	O
mpn_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
un	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
}	O
else	O
{	O
if	O
(	O
6	int
*	O
un	long
<	O
7	int
*	O
vn	long
)	O
mpn_toom33_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
if	O
(	O
2	int
*	O
un	long
<	O
3	int
*	O
vn	long
)	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM32_TO_TOOM43_THRESHOLD	int
)	O
)	O
mpn_toom32_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom43_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
else	O
if	O
(	O
6	int
*	O
un	long
<	O
11	int
*	O
vn	long
)	O
{	O
if	O
(	O
4	int
*	O
un	long
<	O
7	int
*	O
vn	long
)	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM32_TO_TOOM53_THRESHOLD	int
)	O
)	O
mpn_toom32_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom53_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
else	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM42_TO_TOOM53_THRESHOLD	int
)	O
)	O
mpn_toom42_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom53_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM42_TO_TOOM63_THRESHOLD	int
)	O
)	O
mpn_toom42_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
else	O
mpn_toom63_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
}	O
TMP_SFREE	O
;	O
}	O
else	O
{	O
mp_ptr	pointer
scratch	pointer
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM6H_THRESHOLD	int
)	O
)	O
{	O
scratch	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
mpn_toom44_mul_itch	O
(	O
un	long
,	O
vn	long
)	O
)	O
;	O
mpn_toom44_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
else	O
if	O
(	O
BELOW_THRESHOLD	O
(	O
vn	long
,	O
MUL_TOOM8H_THRESHOLD	int
)	O
)	O
{	O
scratch	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
mpn_toom6h_mul_itch	function
(	O
un	long
,	O
vn	long
)	O
)	O
;	O
mpn_toom6h_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
else	O
{	O
scratch	pointer
=	O
TMP_ALLOC_LIMBS	O
(	O
mpn_toom8h_mul_itch	function
(	O
un	long
,	O
vn	long
)	O
)	O
;	O
mpn_toom8h_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
,	O
scratch	pointer
)	O
;	O
}	O
TMP_FREE	O
;	O
}	O
}	O
else	O
{	O
if	O
(	O
un	long
>=	O
8	int
*	O
vn	long
)	O
{	O
mp_limb_t	long
cy	long
;	O
mp_ptr	pointer
ws	pointer
;	O
TMP_DECL	O
;	O
TMP_MARK	O
;	O
ws	pointer
=	O
TMP_BALLOC_LIMBS	O
(	O
9	int
*	O
vn	long
>>	O
1	int
)	O
;	O
mpn_fft_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
3	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
un	long
-=	O
3	int
*	O
vn	long
;	O
up	pointer
+=	O
3	int
*	O
vn	long
;	O
prodp	pointer
+=	O
3	int
*	O
vn	long
;	O
while	O
(	O
2	int
*	O
un	long
>=	O
7	int
*	O
vn	long
)	O
{	O
mpn_fft_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
3	int
*	O
vn	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
un	long
-=	O
3	int
*	O
vn	long
;	O
up	pointer
+=	O
3	int
*	O
vn	long
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
3	int
*	O
vn	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
prodp	pointer
+=	O
3	int
*	O
vn	long
;	O
}	O
if	O
(	O
un	long
<	O
vn	long
)	O
mpn_mul	O
(	O
ws	pointer
,	O
vp	pointer
,	O
vn	long
,	O
up	pointer
,	O
un	long
)	O
;	O
else	O
mpn_mul	O
(	O
ws	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
cy	long
=	O
mpn_add_n	O
(	O
prodp	pointer
,	O
prodp	pointer
,	O
ws	pointer
,	O
vn	long
)	O
;	O
MPN_COPY	O
(	O
prodp	pointer
+	O
vn	long
,	O
ws	pointer
+	O
vn	long
,	O
un	long
)	O
;	O
mpn_incr_u	O
(	O
prodp	pointer
+	O
vn	long
,	O
cy	long
)	O
;	O
TMP_FREE	O
;	O
}	O
else	O
mpn_fft_mul	O
(	O
prodp	pointer
,	O
up	pointer
,	O
un	long
,	O
vp	pointer
,	O
vn	long
)	O
;	O
}	O
return	O
prodp	pointer
[	O
un	long
+	O
vn	long
-	O
1	int
]	O
;	O
}	O
