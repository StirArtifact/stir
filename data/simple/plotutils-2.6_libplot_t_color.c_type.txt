static	O
int	O
kermit_pseudocolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
;	O
void	O
_pl_t_set_pen_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
if	O
(	O
_plotter	pointer
->	O
tek_display_type	int
==	O
TEK_DPY_KERMIT	int
)	O
{	O
int	O
new_kermit_fgcolor	int
;	O
new_kermit_fgcolor	int
=	O
kermit_pseudocolor	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
red	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
green	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
fgcolor	struct
.	O
blue	int
)	O
;	O
if	O
(	O
new_kermit_fgcolor	int
!=	O
_plotter	pointer
->	O
tek_kermit_fgcolor	int
)	O
{	O
_write_string	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
_pl_t_kermit_fgcolor_escapes	array
[	O
new_kermit_fgcolor	int
]	O
)	O
;	O
_plotter	pointer
->	O
tek_kermit_fgcolor	int
=	O
new_kermit_fgcolor	int
;	O
}	O
}	O
}	O
void	O
_pl_t_set_bg_color	function
(	O
S___	O
(	O
Plotter	struct
*	O
_plotter	pointer
)	O
)	O
{	O
if	O
(	O
_plotter	pointer
->	O
tek_display_type	int
==	O
TEK_DPY_KERMIT	int
)	O
{	O
int	O
new_kermit_bgcolor	int
;	O
new_kermit_bgcolor	int
=	O
kermit_pseudocolor	function
(	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
red	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
green	int
,	O
_plotter	pointer
->	O
drawstate	pointer
->	O
bgcolor	struct
.	O
blue	int
)	O
;	O
if	O
(	O
new_kermit_bgcolor	int
!=	O
_plotter	pointer
->	O
tek_kermit_bgcolor	int
)	O
{	O
_write_string	function
(	O
_plotter	pointer
->	O
data	pointer
,	O
_pl_t_kermit_bgcolor_escapes	array
[	O
new_kermit_bgcolor	int
]	O
)	O
;	O
_plotter	pointer
->	O
tek_kermit_bgcolor	int
=	O
new_kermit_bgcolor	int
;	O
}	O
}	O
}	O
static	O
int	O
kermit_pseudocolor	function
(	O
int	O
red	int
,	O
int	O
green	int
,	O
int	O
blue	int
)	O
{	O
unsigned	O
long	O
int	O
difference	long
=	O
INT_MAX	O
;	O
int	O
i	int
;	O
int	O
best	int
=	O
0	int
;	O
red	int
=	O
(	O
red	int
>>	O
8	int
)	O
&	O
ONEBYTE	O
;	O
green	int
=	O
(	O
green	int
>>	O
8	int
)	O
&	O
ONEBYTE	O
;	O
blue	int
=	O
(	O
blue	int
>>	O
8	int
)	O
&	O
ONEBYTE	O
;	O
for	O
(	O
i	int
=	O
0	int
;	O
i	int
<	O
TEK_NUM_ANSI_SYS_COLORS	int
;	O
i	int
++	O
)	O
{	O
unsigned	O
long	O
int	O
newdifference	long
;	O
if	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
red	int
==	O
0xff	int
&&	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
green	int
==	O
0xff	int
&&	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
blue	int
==	O
0xff	int
)	O
{	O
if	O
(	O
red	int
==	O
0xff	int
&&	O
green	int
==	O
0xff	int
&&	O
blue	int
==	O
0xff	int
)	O
{	O
difference	long
=	O
0	int
;	O
best	int
=	O
i	int
;	O
}	O
continue	O
;	O
}	O
newdifference	long
=	O
(	O
(	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
*	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
red	int
-	O
red	int
)	O
)	O
+	O
(	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
*	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
green	int
-	O
green	int
)	O
)	O
+	O
(	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
*	O
(	O
_pl_t_kermit_stdcolors	array
[	O
i	int
]	O
.	O
blue	int
-	O
blue	int
)	O
)	O
)	O
;	O
if	O
(	O
newdifference	long
<	O
difference	long
)	O
{	O
difference	long
=	O
newdifference	long
;	O
best	int
=	O
i	int
;	O
}	O
}	O
return	O
best	int
;	O
}	O
