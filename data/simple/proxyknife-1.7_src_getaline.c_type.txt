int	O
getaline_old	function
(	O
unsigned	O
char	O
*	O
*	O
line	pointer
,	O
int	O
*	O
size	long
,	O
FILE	struct
*	O
f	pointer
)	O
{	O
unsigned	O
char	O
*	O
p	pointer
,	O
*	O
q	pointer
,	O
ret	char
;	O
int	O
offset	long
,	O
n	long
,	O
D	int
=	O
256	int
;	O
if	O
(	O
*	O
size	long
<=	O
0	int
)	O
return	O
-	O
1	int
;	O
if	O
(	O
*	O
line	pointer
==	O
NULL	O
)	O
{	O
p	pointer
=	O
xmalloc	function
(	O
*	O
size	long
)	O
;	O
}	O
else	O
{	O
p	pointer
=	O
*	O
line	pointer
;	O
}	O
offset	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
offset	long
+	O
2	int
>	O
*	O
size	long
)	O
{	O
*	O
size	long
+=	O
D	int
;	O
q	pointer
=	O
xrealloc	function
(	O
(	O
void	O
*	O
)	O
p	pointer
,	O
*	O
size	long
)	O
;	O
*	O
line	pointer
=	O
p	pointer
;	O
p	pointer
=	O
q	pointer
;	O
}	O
n	long
=	O
fread	function
(	O
p	pointer
+	O
offset	long
,	O
1	int
,	O
1	int
,	O
f	pointer
)	O
;	O
if	O
(	O
n	long
!=	O
1	int
)	O
{	O
*	O
line	pointer
=	O
p	pointer
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
p	pointer
[	O
offset	long
]	O
==	O
'\n'	O
)	O
{	O
p	pointer
[	O
offset	long
+	O
1	int
]	O
=	O
'\0'	O
;	O
*	O
line	pointer
=	O
p	pointer
;	O
return	O
(	O
offset	long
+	O
1	int
)	O
;	O
}	O
offset	long
++	O
;	O
}	O
}	O
int	O
getaline	function
(	O
unsigned	O
char	O
*	O
*	O
line	pointer
,	O
int	O
*	O
size	long
,	O
FILE	struct
*	O
f	pointer
)	O
{	O
unsigned	O
char	O
*	O
p	pointer
,	O
*	O
q	pointer
;	O
int	O
offset	long
,	O
n	long
,	O
D	int
=	O
256	int
;	O
int	O
psize	int
;	O
psize	int
=	O
D	int
;	O
p	pointer
=	O
xmalloc	function
(	O
psize	int
)	O
;	O
offset	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
offset	long
+	O
2	int
>	O
psize	int
)	O
{	O
psize	int
+=	O
D	int
;	O
q	pointer
=	O
xrealloc	function
(	O
(	O
void	O
*	O
)	O
p	pointer
,	O
psize	int
)	O
;	O
p	pointer
=	O
q	pointer
;	O
}	O
n	long
=	O
fread	function
(	O
p	pointer
+	O
offset	long
,	O
1	int
,	O
1	int
,	O
f	pointer
)	O
;	O
if	O
(	O
n	long
!=	O
1	int
)	O
{	O
xfree	function
(	O
(	O
void	O
*	O
*	O
)	O
&	O
p	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
if	O
(	O
p	pointer
[	O
offset	long
]	O
==	O
'\n'	O
)	O
{	O
p	pointer
[	O
offset	long
+	O
1	int
]	O
=	O
'\0'	O
;	O
if	O
(	O
*	O
line	pointer
!=	O
NULL	O
)	O
xfree	function
(	O
(	O
void	O
*	O
*	O
)	O
line	pointer
)	O
;	O
*	O
line	pointer
=	O
p	pointer
;	O
*	O
size	long
=	O
psize	int
;	O
return	O
(	O
offset	long
+	O
1	int
)	O
;	O
}	O
offset	long
++	O
;	O
}	O
}	O
int	O
getaline_r	function
(	O
char	O
*	O
*	O
line	pointer
,	O
int	O
*	O
size	long
,	O
FILE	struct
*	O
f	pointer
,	O
struct	O
thread_mem	struct
*	O
thread_mem	struct
)	O
{	O
char	O
*	O
p	pointer
,	O
*	O
q	pointer
,	O
*	O
s	pointer
;	O
int	O
offset	long
,	O
n	long
,	O
D	int
=	O
256	int
,	O
linelen	int
=	O
80	int
;	O
size_t	long
len	long
;	O
int	O
psize	int
;	O
psize	int
=	O
D	int
;	O
p	pointer
=	O
pmalloc	function
(	O
*	O
size	long
,	O
thread_mem	struct
)	O
;	O
if	O
(	O
p	pointer
==	O
NULL	O
)	O
return	O
PROXYKNIFE_THREAD_EXIT	O
;	O
offset	long
=	O
0	int
;	O
while	O
(	O
1	int
)	O
{	O
if	O
(	O
offset	long
+	O
linelen	int
>	O
psize	int
)	O
{	O
psize	int
=	O
offset	long
+	O
linelen	int
+	O
D	int
;	O
q	pointer
=	O
prealloc	function
(	O
p	pointer
,	O
psize	int
,	O
thread_mem	struct
)	O
;	O
if	O
(	O
q	pointer
==	O
NULL	O
)	O
{	O
if	O
(	O
p	pointer
!=	O
NULL	O
)	O
{	O
pxfree	function
(	O
(	O
void	O
*	O
*	O
)	O
&	O
p	pointer
)	O
;	O
}	O
return	O
PROXYKNIFE_THREAD_EXIT	O
;	O
}	O
p	pointer
=	O
q	pointer
;	O
}	O
s	pointer
=	O
fgets	function
(	O
p	pointer
+	O
offset	long
,	O
linelen	int
,	O
f	pointer
)	O
;	O
if	O
(	O
s	pointer
==	O
NULL	O
)	O
{	O
pxfree	function
(	O
(	O
void	O
*	O
*	O
)	O
&	O
p	pointer
)	O
;	O
return	O
-	O
1	int
;	O
}	O
else	O
{	O
len	long
=	O
strlen	function
(	O
p	pointer
+	O
offset	long
)	O
;	O
if	O
(	O
*	O
(	O
p	pointer
+	O
offset	long
+	O
len	long
-	O
1	int
)	O
==	O
'\n'	O
)	O
{	O
if	O
(	O
*	O
line	pointer
!=	O
NULL	O
)	O
pxfree	function
(	O
(	O
void	O
*	O
*	O
)	O
line	pointer
)	O
;	O
*	O
line	pointer
=	O
p	pointer
;	O
*	O
size	long
=	O
psize	int
;	O
return	O
(	O
offset	long
+	O
len	long
)	O
;	O
}	O
else	O
{	O
offset	long
+=	O
len	long
;	O
}	O
}	O
}	O
}	O
